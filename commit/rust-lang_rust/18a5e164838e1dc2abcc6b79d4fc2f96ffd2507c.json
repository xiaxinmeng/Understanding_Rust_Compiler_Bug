{"sha": "18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4YTVlMTY0ODM4ZTFkYzJhYmNjNmI3OWQ0ZmMyZjk2ZmZkMjUwN2M=", "commit": {"author": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-04-07T15:59:09Z"}, "committer": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-04-07T15:59:09Z"}, "message": "Merge branch 'master' of github.com:rust-analyzer/rust-analyzer", "tree": {"sha": "bc80b5c49c3b7ba31c7fe967bb34fe14bac9d5ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc80b5c49c3b7ba31c7fe967bb34fe14bac9d5ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "html_url": "https://github.com/rust-lang/rust/commit/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/comments", "author": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab864ed259c10ff51f7c9c3421d098eeea7b0245", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab864ed259c10ff51f7c9c3421d098eeea7b0245", "html_url": "https://github.com/rust-lang/rust/commit/ab864ed259c10ff51f7c9c3421d098eeea7b0245"}, {"sha": "33c364b545350134b945fbca834194fd1a28fe08", "url": "https://api.github.com/repos/rust-lang/rust/commits/33c364b545350134b945fbca834194fd1a28fe08", "html_url": "https://github.com/rust-lang/rust/commit/33c364b545350134b945fbca834194fd1a28fe08"}], "stats": {"total": 1983, "additions": 1823, "deletions": 160}, "files": [{"sha": "02a3b622877e1d3f82c28fb556256f85eb284c53", "filename": ".github/workflows/ci.yaml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/.github%2Fworkflows%2Fci.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/.github%2Fworkflows%2Fci.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yaml?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -10,7 +10,7 @@ on:\n env:\n   CARGO_INCREMENTAL: 0\n   CARGO_NET_RETRY: 10\n-  RUN_SLOW_TESTS: 1\n+  CI: 1\n   RUST_BACKTRACE: short\n   RUSTFLAGS: -D warnings\n   RUSTUP_MAX_RETRIES: 10"}, {"sha": "4db122ec758b1e04930f6bb083169ef432b5f9a0", "filename": ".github/workflows/release.yaml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/.github%2Fworkflows%2Frelease.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/.github%2Fworkflows%2Frelease.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Frelease.yaml?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -60,6 +60,10 @@ jobs:\n       if: matrix.os != 'ubuntu-latest'\n       run: cargo xtask dist\n \n+    - name: Nightly analysis-stats check\n+      if: matrix.os == 'ubuntu-latest' && github.ref != 'refs/heads/release'\n+      run: ./dist/rust-analyzer-linux analysis-stats .\n+\n     - name: Upload artifacts\n       uses: actions/upload-artifact@v1\n       with:"}, {"sha": "eb9824218f3ec55513cad57507738d12c7b19195", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -995,6 +995,7 @@ dependencies = [\n  \"ra_prof\",\n  \"ra_syntax\",\n  \"rustc-hash\",\n+ \"smallvec\",\n  \"stdx\",\n  \"test_utils\",\n ]"}, {"sha": "c698d6e8c472aaa18fcf58597ec3623e6693c879", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -5,6 +5,11 @@\n //! certain context. For example, if the cursor is over `,`, a \"swap `,`\" assist\n //! becomes available.\n \n+#[allow(unused)]\n+macro_rules! eprintln {\n+    ($($tt:tt)*) => { stdx::eprintln!($($tt)*) };\n+}\n+\n mod assist_ctx;\n mod marks;\n #[cfg(test)]"}, {"sha": "c82883d0c1611fadf6255223950a99ff5e2e6ffb", "filename": "crates/ra_hir/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdiagnostics.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -1,4 +1,4 @@\n //! FIXME: write short doc here\n pub use hir_def::diagnostics::UnresolvedModule;\n pub use hir_expand::diagnostics::{AstDiagnostic, Diagnostic, DiagnosticSink};\n-pub use hir_ty::diagnostics::{MissingFields, MissingOkInTailExpr, NoSuchField};\n+pub use hir_ty::diagnostics::{MissingFields, MissingMatchArms, MissingOkInTailExpr, NoSuchField};"}, {"sha": "2ad231d3688b49a0d855f8a3bfa4c8fb49e197b6", "filename": "crates/ra_hir/src/semantics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -9,6 +9,7 @@ use hir_def::{\n     AsMacroCall, TraitId,\n };\n use hir_expand::ExpansionInfo;\n+use itertools::Itertools;\n use ra_db::{FileId, FileRange};\n use ra_prof::profile;\n use ra_syntax::{\n@@ -135,7 +136,6 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n         node: &SyntaxNode,\n         offset: TextUnit,\n     ) -> impl Iterator<Item = SyntaxNode> + '_ {\n-        use itertools::Itertools;\n         node.token_at_offset(offset)\n             .map(|token| self.ancestors_with_macros(token.parent()))\n             .kmerge_by(|node1, node2| node1.text_range().len() < node2.text_range().len())"}, {"sha": "66724919b0ff18e4076966b748f48a2e99f59ac3", "filename": "crates/ra_hir/src/semantics/source_to_def.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics%2Fsource_to_def.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -208,12 +208,12 @@ impl SourceToDefCtx<'_, '_> {\n         for container in src.cloned().ancestors_with_macros(self.db.upcast()).skip(1) {\n             let res: GenericDefId = match_ast! {\n                 match (container.value) {\n-                    ast::FnDef(it) => { self.fn_to_def(container.with_value(it))?.into() },\n-                    ast::StructDef(it) => { self.struct_to_def(container.with_value(it))?.into() },\n-                    ast::EnumDef(it) => { self.enum_to_def(container.with_value(it))?.into() },\n-                    ast::TraitDef(it) => { self.trait_to_def(container.with_value(it))?.into() },\n-                    ast::TypeAliasDef(it) => { self.type_alias_to_def(container.with_value(it))?.into() },\n-                    ast::ImplDef(it) => { self.impl_to_def(container.with_value(it))?.into() },\n+                    ast::FnDef(it) => self.fn_to_def(container.with_value(it))?.into(),\n+                    ast::StructDef(it) => self.struct_to_def(container.with_value(it))?.into(),\n+                    ast::EnumDef(it) => self.enum_to_def(container.with_value(it))?.into(),\n+                    ast::TraitDef(it) => self.trait_to_def(container.with_value(it))?.into(),\n+                    ast::TypeAliasDef(it) => self.type_alias_to_def(container.with_value(it))?.into(),\n+                    ast::ImplDef(it) => self.impl_to_def(container.with_value(it))?.into(),\n                     _ => continue,\n                 }\n             };\n@@ -226,9 +226,9 @@ impl SourceToDefCtx<'_, '_> {\n         for container in src.cloned().ancestors_with_macros(self.db.upcast()).skip(1) {\n             let res: DefWithBodyId = match_ast! {\n                 match (container.value) {\n-                    ast::ConstDef(it) => { self.const_to_def(container.with_value(it))?.into() },\n-                    ast::StaticDef(it) => { self.static_to_def(container.with_value(it))?.into() },\n-                    ast::FnDef(it) => { self.fn_to_def(container.with_value(it))?.into() },\n+                    ast::ConstDef(it) => self.const_to_def(container.with_value(it))?.into(),\n+                    ast::StaticDef(it) => self.static_to_def(container.with_value(it))?.into(),\n+                    ast::FnDef(it) => self.fn_to_def(container.with_value(it))?.into(),\n                     _ => continue,\n                 }\n             };"}, {"sha": "2d27bbdf8eb27088e840bb30dff9d0ef2442efa0", "filename": "crates/ra_hir_def/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Flib.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -7,6 +7,11 @@\n //! Note that `hir_def` is a work in progress, so not all of the above is\n //! actually true.\n \n+#[allow(unused)]\n+macro_rules! eprintln {\n+    ($($tt:tt)*) => { stdx::eprintln!($($tt)*) };\n+}\n+\n pub mod db;\n \n pub mod attr;"}, {"sha": "bb45b0f1da06388a543325d27202da2f368c6917", "filename": "crates/ra_hir_expand/src/builtin_derive.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_derive.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -73,9 +73,9 @@ fn parse_adt(tt: &tt::Subtree) -> Result<BasicAdtInfo, mbe::ExpandError> {\n     let node = item.syntax();\n     let (name, params) = match_ast! {\n         match node {\n-            ast::StructDef(it) => { (it.name(), it.type_param_list()) },\n-            ast::EnumDef(it) => { (it.name(), it.type_param_list()) },\n-            ast::UnionDef(it) => { (it.name(), it.type_param_list()) },\n+            ast::StructDef(it) => (it.name(), it.type_param_list()),\n+            ast::EnumDef(it) => (it.name(), it.type_param_list()),\n+            ast::UnionDef(it) => (it.name(), it.type_param_list()),\n             _ => {\n                 debug!(\"unexpected node is {:?}\", node);\n                 return Err(mbe::ExpandError::ConversionError)"}, {"sha": "9a4a7aa6f7e60f3d8ec806526f89b2fb6a133717", "filename": "crates/ra_hir_ty/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2FCargo.toml?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -9,6 +9,7 @@ doctest = false\n \n [dependencies]\n arrayvec = \"0.5.1\"\n+smallvec = \"1.2.0\"\n ena = \"0.13.1\"\n log = \"0.4.8\"\n rustc-hash = \"1.1.0\""}, {"sha": "f29a25505b98bfc863c8083b28992b5bab0ce498", "filename": "crates/ra_hir_ty/src/_match.rs", "status": "added", "additions": 1411, "deletions": 0, "changes": 1411, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2F_match.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -0,0 +1,1411 @@\n+//! This module implements match statement exhaustiveness checking and usefulness checking\n+//! for match arms.\n+//!\n+//! It is modeled on the rustc module `librustc_mir_build::hair::pattern::_match`, which\n+//! contains very detailed documentation about the algorithms used here. I've duplicated\n+//! most of that documentation below.\n+//!\n+//! This file includes the logic for exhaustiveness and usefulness checking for\n+//! pattern-matching. Specifically, given a list of patterns for a type, we can\n+//! tell whether:\n+//! (a) the patterns cover every possible constructor for the type [exhaustiveness]\n+//! (b) each pattern is necessary [usefulness]\n+//!\n+//! The algorithm implemented here is a modified version of the one described in:\n+//! http://moscova.inria.fr/~maranget/papers/warn/index.html\n+//! However, to save future implementors from reading the original paper, we\n+//! summarise the algorithm here to hopefully save time and be a little clearer\n+//! (without being so rigorous).\n+//!\n+//! The core of the algorithm revolves about a \"usefulness\" check. In particular, we\n+//! are trying to compute a predicate `U(P, p)` where `P` is a list of patterns (we refer to this as\n+//! a matrix). `U(P, p)` represents whether, given an existing list of patterns\n+//! `P_1 ..= P_m`, adding a new pattern `p` will be \"useful\" (that is, cover previously-\n+//! uncovered values of the type).\n+//!\n+//! If we have this predicate, then we can easily compute both exhaustiveness of an\n+//! entire set of patterns and the individual usefulness of each one.\n+//! (a) the set of patterns is exhaustive iff `U(P, _)` is false (i.e., adding a wildcard\n+//! match doesn't increase the number of values we're matching)\n+//! (b) a pattern `P_i` is not useful if `U(P[0..=(i-1), P_i)` is false (i.e., adding a\n+//! pattern to those that have come before it doesn't increase the number of values\n+//! we're matching).\n+//!\n+//! During the course of the algorithm, the rows of the matrix won't just be individual patterns,\n+//! but rather partially-deconstructed patterns in the form of a list of patterns. The paper\n+//! calls those pattern-vectors, and we will call them pattern-stacks. The same holds for the\n+//! new pattern `p`.\n+//!\n+//! For example, say we have the following:\n+//! ```\n+//!     // x: (Option<bool>, Result<()>)\n+//!     match x {\n+//!         (Some(true), _) => {}\n+//!         (None, Err(())) => {}\n+//!         (None, Err(_)) => {}\n+//!     }\n+//! ```\n+//! Here, the matrix `P` starts as:\n+//! [\n+//!     [(Some(true), _)],\n+//!     [(None, Err(()))],\n+//!     [(None, Err(_))],\n+//! ]\n+//! We can tell it's not exhaustive, because `U(P, _)` is true (we're not covering\n+//! `[(Some(false), _)]`, for instance). In addition, row 3 is not useful, because\n+//! all the values it covers are already covered by row 2.\n+//!\n+//! A list of patterns can be thought of as a stack, because we are mainly interested in the top of\n+//! the stack at any given point, and we can pop or apply constructors to get new pattern-stacks.\n+//! To match the paper, the top of the stack is at the beginning / on the left.\n+//!\n+//! There are two important operations on pattern-stacks necessary to understand the algorithm:\n+//!     1. We can pop a given constructor off the top of a stack. This operation is called\n+//!        `specialize`, and is denoted `S(c, p)` where `c` is a constructor (like `Some` or\n+//!        `None`) and `p` a pattern-stack.\n+//!        If the pattern on top of the stack can cover `c`, this removes the constructor and\n+//!        pushes its arguments onto the stack. It also expands OR-patterns into distinct patterns.\n+//!        Otherwise the pattern-stack is discarded.\n+//!        This essentially filters those pattern-stacks whose top covers the constructor `c` and\n+//!        discards the others.\n+//!\n+//!        For example, the first pattern above initially gives a stack `[(Some(true), _)]`. If we\n+//!        pop the tuple constructor, we are left with `[Some(true), _]`, and if we then pop the\n+//!        `Some` constructor we get `[true, _]`. If we had popped `None` instead, we would get\n+//!        nothing back.\n+//!\n+//!        This returns zero or more new pattern-stacks, as follows. We look at the pattern `p_1`\n+//!        on top of the stack, and we have four cases:\n+//!             1.1. `p_1 = c(r_1, .., r_a)`, i.e. the top of the stack has constructor `c`. We\n+//!                  push onto the stack the arguments of this constructor, and return the result:\n+//!                     r_1, .., r_a, p_2, .., p_n\n+//!             1.2. `p_1 = c'(r_1, .., r_a')` where `c \u2260 c'`. We discard the current stack and\n+//!                  return nothing.\n+//!             1.3. `p_1 = _`. We push onto the stack as many wildcards as the constructor `c` has\n+//!                  arguments (its arity), and return the resulting stack:\n+//!                     _, .., _, p_2, .., p_n\n+//!             1.4. `p_1 = r_1 | r_2`. We expand the OR-pattern and then recurse on each resulting\n+//!                  stack:\n+//!                     S(c, (r_1, p_2, .., p_n))\n+//!                     S(c, (r_2, p_2, .., p_n))\n+//!\n+//!     2. We can pop a wildcard off the top of the stack. This is called `D(p)`, where `p` is\n+//!        a pattern-stack.\n+//!        This is used when we know there are missing constructor cases, but there might be\n+//!        existing wildcard patterns, so to check the usefulness of the matrix, we have to check\n+//!        all its *other* components.\n+//!\n+//!        It is computed as follows. We look at the pattern `p_1` on top of the stack,\n+//!        and we have three cases:\n+//!             1.1. `p_1 = c(r_1, .., r_a)`. We discard the current stack and return nothing.\n+//!             1.2. `p_1 = _`. We return the rest of the stack:\n+//!                     p_2, .., p_n\n+//!             1.3. `p_1 = r_1 | r_2`. We expand the OR-pattern and then recurse on each resulting\n+//!               stack.\n+//!                     D((r_1, p_2, .., p_n))\n+//!                     D((r_2, p_2, .., p_n))\n+//!\n+//!     Note that the OR-patterns are not always used directly in Rust, but are used to derive the\n+//!     exhaustive integer matching rules, so they're written here for posterity.\n+//!\n+//! Both those operations extend straightforwardly to a list or pattern-stacks, i.e. a matrix, by\n+//! working row-by-row. Popping a constructor ends up keeping only the matrix rows that start with\n+//! the given constructor, and popping a wildcard keeps those rows that start with a wildcard.\n+//!\n+//!\n+//! The algorithm for computing `U`\n+//! -------------------------------\n+//! The algorithm is inductive (on the number of columns: i.e., components of tuple patterns).\n+//! That means we're going to check the components from left-to-right, so the algorithm\n+//! operates principally on the first component of the matrix and new pattern-stack `p`.\n+//! This algorithm is realised in the `is_useful` function.\n+//!\n+//! Base case. (`n = 0`, i.e., an empty tuple pattern)\n+//!     - If `P` already contains an empty pattern (i.e., if the number of patterns `m > 0`),\n+//!       then `U(P, p)` is false.\n+//!     - Otherwise, `P` must be empty, so `U(P, p)` is true.\n+//!\n+//! Inductive step. (`n > 0`, i.e., whether there's at least one column\n+//!                  [which may then be expanded into further columns later])\n+//!     We're going to match on the top of the new pattern-stack, `p_1`.\n+//!         - If `p_1 == c(r_1, .., r_a)`, i.e. we have a constructor pattern.\n+//!           Then, the usefulness of `p_1` can be reduced to whether it is useful when\n+//!           we ignore all the patterns in the first column of `P` that involve other constructors.\n+//!           This is where `S(c, P)` comes in:\n+//!           `U(P, p) := U(S(c, P), S(c, p))`\n+//!           This special case is handled in `is_useful_specialized`.\n+//!\n+//!           For example, if `P` is:\n+//!           [\n+//!               [Some(true), _],\n+//!               [None, 0],\n+//!           ]\n+//!           and `p` is [Some(false), 0], then we don't care about row 2 since we know `p` only\n+//!           matches values that row 2 doesn't. For row 1 however, we need to dig into the\n+//!           arguments of `Some` to know whether some new value is covered. So we compute\n+//!           `U([[true, _]], [false, 0])`.\n+//!\n+//!         - If `p_1 == _`, then we look at the list of constructors that appear in the first\n+//!               component of the rows of `P`:\n+//!             + If there are some constructors that aren't present, then we might think that the\n+//!               wildcard `_` is useful, since it covers those constructors that weren't covered\n+//!               before.\n+//!               That's almost correct, but only works if there were no wildcards in those first\n+//!               components. So we need to check that `p` is useful with respect to the rows that\n+//!               start with a wildcard, if there are any. This is where `D` comes in:\n+//!               `U(P, p) := U(D(P), D(p))`\n+//!\n+//!               For example, if `P` is:\n+//!               [\n+//!                   [_, true, _],\n+//!                   [None, false, 1],\n+//!               ]\n+//!               and `p` is [_, false, _], the `Some` constructor doesn't appear in `P`. So if we\n+//!               only had row 2, we'd know that `p` is useful. However row 1 starts with a\n+//!               wildcard, so we need to check whether `U([[true, _]], [false, 1])`.\n+//!\n+//!             + Otherwise, all possible constructors (for the relevant type) are present. In this\n+//!               case we must check whether the wildcard pattern covers any unmatched value. For\n+//!               that, we can think of the `_` pattern as a big OR-pattern that covers all\n+//!               possible constructors. For `Option`, that would mean `_ = None | Some(_)` for\n+//!               example. The wildcard pattern is useful in this case if it is useful when\n+//!               specialized to one of the possible constructors. So we compute:\n+//!               `U(P, p) := \u2203(k \u03f5 constructors) U(S(k, P), S(k, p))`\n+//!\n+//!               For example, if `P` is:\n+//!               [\n+//!                   [Some(true), _],\n+//!                   [None, false],\n+//!               ]\n+//!               and `p` is [_, false], both `None` and `Some` constructors appear in the first\n+//!               components of `P`. We will therefore try popping both constructors in turn: we\n+//!               compute U([[true, _]], [_, false]) for the `Some` constructor, and U([[false]],\n+//!               [false]) for the `None` constructor. The first case returns true, so we know that\n+//!               `p` is useful for `P`. Indeed, it matches `[Some(false), _]` that wasn't matched\n+//!               before.\n+//!\n+//!         - If `p_1 == r_1 | r_2`, then the usefulness depends on each `r_i` separately:\n+//!           `U(P, p) := U(P, (r_1, p_2, .., p_n))\n+//!                    || U(P, (r_2, p_2, .., p_n))`\n+use std::sync::Arc;\n+\n+use smallvec::{smallvec, SmallVec};\n+\n+use crate::{\n+    db::HirDatabase,\n+    expr::{Body, Expr, Literal, Pat, PatId},\n+    InferenceResult,\n+};\n+use hir_def::{adt::VariantData, EnumVariantId, VariantId};\n+\n+#[derive(Debug, Clone, Copy)]\n+/// Either a pattern from the source code being analyzed, represented as\n+/// as `PatId`, or a `Wild` pattern which is created as an intermediate\n+/// step in the match checking algorithm and thus is not backed by a\n+/// real `PatId`.\n+///\n+/// Note that it is totally valid for the `PatId` variant to contain\n+/// a `PatId` which resolves to a `Wild` pattern, if that wild pattern\n+/// exists in the source code being analyzed.\n+enum PatIdOrWild {\n+    PatId(PatId),\n+    Wild,\n+}\n+\n+impl PatIdOrWild {\n+    fn as_pat(self, cx: &MatchCheckCtx) -> Pat {\n+        match self {\n+            PatIdOrWild::PatId(id) => cx.body.pats[id].clone(),\n+            PatIdOrWild::Wild => Pat::Wild,\n+        }\n+    }\n+\n+    fn as_id(self) -> Option<PatId> {\n+        match self {\n+            PatIdOrWild::PatId(id) => Some(id),\n+            PatIdOrWild::Wild => None,\n+        }\n+    }\n+}\n+\n+impl From<PatId> for PatIdOrWild {\n+    fn from(pat_id: PatId) -> Self {\n+        Self::PatId(pat_id)\n+    }\n+}\n+\n+#[derive(Debug, Clone, Copy, PartialEq)]\n+pub struct MatchCheckNotImplemented;\n+\n+/// The return type of `is_useful` is either an indication of usefulness\n+/// of the match arm, or an error in the case the match statement\n+/// is made up of types for which exhaustiveness checking is currently\n+/// not completely implemented.\n+///\n+/// The `std::result::Result` type is used here rather than a custom enum\n+/// to allow the use of `?`.\n+pub type MatchCheckResult<T> = Result<T, MatchCheckNotImplemented>;\n+\n+#[derive(Debug)]\n+/// A row in a Matrix.\n+///\n+/// This type is modeled from the struct of the same name in `rustc`.\n+pub(crate) struct PatStack(PatStackInner);\n+type PatStackInner = SmallVec<[PatIdOrWild; 2]>;\n+\n+impl PatStack {\n+    pub(crate) fn from_pattern(pat_id: PatId) -> PatStack {\n+        Self(smallvec!(pat_id.into()))\n+    }\n+\n+    pub(crate) fn from_wild() -> PatStack {\n+        Self(smallvec!(PatIdOrWild::Wild))\n+    }\n+\n+    fn from_slice(slice: &[PatIdOrWild]) -> PatStack {\n+        Self(SmallVec::from_slice(slice))\n+    }\n+\n+    fn from_vec(v: PatStackInner) -> PatStack {\n+        Self(v)\n+    }\n+\n+    fn is_empty(&self) -> bool {\n+        self.0.is_empty()\n+    }\n+\n+    fn head(&self) -> PatIdOrWild {\n+        self.0[0]\n+    }\n+\n+    fn get_head(&self) -> Option<PatIdOrWild> {\n+        self.0.first().copied()\n+    }\n+\n+    fn to_tail(&self) -> PatStack {\n+        Self::from_slice(&self.0[1..])\n+    }\n+\n+    fn replace_head_with(&self, pat_ids: &[PatId]) -> PatStack {\n+        let mut patterns: PatStackInner = smallvec![];\n+        for pat in pat_ids {\n+            patterns.push((*pat).into());\n+        }\n+        for pat in &self.0[1..] {\n+            patterns.push(*pat);\n+        }\n+        PatStack::from_vec(patterns)\n+    }\n+\n+    /// Computes `D(self)`.\n+    ///\n+    /// See the module docs and the associated documentation in rustc for details.\n+    fn specialize_wildcard(&self, cx: &MatchCheckCtx) -> Option<PatStack> {\n+        if matches!(self.head().as_pat(cx), Pat::Wild) {\n+            Some(self.to_tail())\n+        } else {\n+            None\n+        }\n+    }\n+\n+    /// Computes `S(constructor, self)`.\n+    ///\n+    /// See the module docs and the associated documentation in rustc for details.\n+    fn specialize_constructor(\n+        &self,\n+        cx: &MatchCheckCtx,\n+        constructor: &Constructor,\n+    ) -> MatchCheckResult<Option<PatStack>> {\n+        let result = match (self.head().as_pat(cx), constructor) {\n+            (Pat::Tuple(ref pat_ids), Constructor::Tuple { arity }) => {\n+                debug_assert_eq!(\n+                    pat_ids.len(),\n+                    *arity,\n+                    \"we type check before calling this code, so we should never hit this case\",\n+                );\n+\n+                Some(self.replace_head_with(pat_ids))\n+            }\n+            (Pat::Lit(lit_expr), Constructor::Bool(constructor_val)) => {\n+                match cx.body.exprs[lit_expr] {\n+                    Expr::Literal(Literal::Bool(pat_val)) if *constructor_val == pat_val => {\n+                        Some(self.to_tail())\n+                    }\n+                    // it was a bool but the value doesn't match\n+                    Expr::Literal(Literal::Bool(_)) => None,\n+                    // perhaps this is actually unreachable given we have\n+                    // already checked that these match arms have the appropriate type?\n+                    _ => return Err(MatchCheckNotImplemented),\n+                }\n+            }\n+            (Pat::Wild, constructor) => Some(self.expand_wildcard(cx, constructor)?),\n+            (Pat::Path(_), Constructor::Enum(constructor)) => {\n+                // enums with no associated data become `Pat::Path`\n+                let pat_id = self.head().as_id().expect(\"we know this isn't a wild\");\n+                if !enum_variant_matches(cx, pat_id, *constructor) {\n+                    None\n+                } else {\n+                    Some(self.to_tail())\n+                }\n+            }\n+            (Pat::TupleStruct { args: ref pat_ids, .. }, Constructor::Enum(constructor)) => {\n+                let pat_id = self.head().as_id().expect(\"we know this isn't a wild\");\n+                if !enum_variant_matches(cx, pat_id, *constructor) {\n+                    None\n+                } else {\n+                    Some(self.replace_head_with(pat_ids))\n+                }\n+            }\n+            (Pat::Or(_), _) => return Err(MatchCheckNotImplemented),\n+            (_, _) => return Err(MatchCheckNotImplemented),\n+        };\n+\n+        Ok(result)\n+    }\n+\n+    /// A special case of `specialize_constructor` where the head of the pattern stack\n+    /// is a Wild pattern.\n+    ///\n+    /// Replaces the Wild pattern at the head of the pattern stack with N Wild patterns\n+    /// (N >= 0), where N is the arity of the given constructor.\n+    fn expand_wildcard(\n+        &self,\n+        cx: &MatchCheckCtx,\n+        constructor: &Constructor,\n+    ) -> MatchCheckResult<PatStack> {\n+        assert_eq!(\n+            Pat::Wild,\n+            self.head().as_pat(cx),\n+            \"expand_wildcard must only be called on PatStack with wild at head\",\n+        );\n+\n+        let mut patterns: PatStackInner = smallvec![];\n+\n+        for _ in 0..constructor.arity(cx)? {\n+            patterns.push(PatIdOrWild::Wild);\n+        }\n+\n+        for pat in &self.0[1..] {\n+            patterns.push(*pat);\n+        }\n+\n+        Ok(PatStack::from_vec(patterns))\n+    }\n+}\n+\n+#[derive(Debug)]\n+/// A collection of PatStack.\n+///\n+/// This type is modeled from the struct of the same name in `rustc`.\n+pub(crate) struct Matrix(Vec<PatStack>);\n+\n+impl Matrix {\n+    pub(crate) fn empty() -> Self {\n+        Self(vec![])\n+    }\n+\n+    pub(crate) fn push(&mut self, cx: &MatchCheckCtx, row: PatStack) {\n+        if let Some(Pat::Or(pat_ids)) = row.get_head().map(|pat_id| pat_id.as_pat(cx)) {\n+            // Or patterns are expanded here\n+            for pat_id in pat_ids {\n+                self.0.push(PatStack::from_pattern(pat_id));\n+            }\n+        } else {\n+            self.0.push(row);\n+        }\n+    }\n+\n+    fn is_empty(&self) -> bool {\n+        self.0.is_empty()\n+    }\n+\n+    fn heads(&self) -> Vec<PatIdOrWild> {\n+        self.0.iter().map(|p| p.head()).collect()\n+    }\n+\n+    /// Computes `D(self)` for each contained PatStack.\n+    ///\n+    /// See the module docs and the associated documentation in rustc for details.\n+    fn specialize_wildcard(&self, cx: &MatchCheckCtx) -> Self {\n+        Self::collect(cx, self.0.iter().filter_map(|r| r.specialize_wildcard(cx)))\n+    }\n+\n+    /// Computes `S(constructor, self)` for each contained PatStack.\n+    ///\n+    /// See the module docs and the associated documentation in rustc for details.\n+    fn specialize_constructor(\n+        &self,\n+        cx: &MatchCheckCtx,\n+        constructor: &Constructor,\n+    ) -> MatchCheckResult<Self> {\n+        let mut new_matrix = Matrix::empty();\n+        for pat in &self.0 {\n+            if let Some(pat) = pat.specialize_constructor(cx, constructor)? {\n+                new_matrix.push(cx, pat);\n+            }\n+        }\n+\n+        Ok(new_matrix)\n+    }\n+\n+    fn collect<T: IntoIterator<Item = PatStack>>(cx: &MatchCheckCtx, iter: T) -> Self {\n+        let mut matrix = Matrix::empty();\n+\n+        for pat in iter {\n+            // using push ensures we expand or-patterns\n+            matrix.push(cx, pat);\n+        }\n+\n+        matrix\n+    }\n+}\n+\n+#[derive(Clone, Debug, PartialEq)]\n+/// An indication of the usefulness of a given match arm, where\n+/// usefulness is defined as matching some patterns which were\n+/// not matched by an prior match arms.\n+///\n+/// We may eventually need an `Unknown` variant here.\n+pub enum Usefulness {\n+    Useful,\n+    NotUseful,\n+}\n+\n+pub struct MatchCheckCtx<'a> {\n+    pub body: Arc<Body>,\n+    pub infer: Arc<InferenceResult>,\n+    pub db: &'a dyn HirDatabase,\n+}\n+\n+/// Given a set of patterns `matrix`, and pattern to consider `v`, determines\n+/// whether `v` is useful. A pattern is useful if it covers cases which were\n+/// not previously covered.\n+///\n+/// When calling this function externally (that is, not the recursive calls) it\n+/// expected that you have already type checked the match arms. All patterns in\n+/// matrix should be the same type as v, as well as they should all be the same\n+/// type as the match expression.\n+pub(crate) fn is_useful(\n+    cx: &MatchCheckCtx,\n+    matrix: &Matrix,\n+    v: &PatStack,\n+) -> MatchCheckResult<Usefulness> {\n+    if v.is_empty() {\n+        let result = if matrix.is_empty() { Usefulness::Useful } else { Usefulness::NotUseful };\n+\n+        return Ok(result);\n+    }\n+\n+    if let Pat::Or(pat_ids) = v.head().as_pat(cx) {\n+        let mut found_unimplemented = false;\n+        let any_useful = pat_ids.iter().any(|&pat_id| {\n+            let v = PatStack::from_pattern(pat_id);\n+\n+            match is_useful(cx, matrix, &v) {\n+                Ok(Usefulness::Useful) => true,\n+                Ok(Usefulness::NotUseful) => false,\n+                _ => {\n+                    found_unimplemented = true;\n+                    false\n+                }\n+            }\n+        });\n+\n+        return if any_useful {\n+            Ok(Usefulness::Useful)\n+        } else if found_unimplemented {\n+            Err(MatchCheckNotImplemented)\n+        } else {\n+            Ok(Usefulness::NotUseful)\n+        };\n+    }\n+\n+    if let Some(constructor) = pat_constructor(cx, v.head())? {\n+        let matrix = matrix.specialize_constructor(&cx, &constructor)?;\n+        let v = v\n+            .specialize_constructor(&cx, &constructor)?\n+            .expect(\"we know this can't fail because we get the constructor from `v.head()` above\");\n+\n+        is_useful(&cx, &matrix, &v)\n+    } else {\n+        // expanding wildcard\n+        let mut used_constructors: Vec<Constructor> = vec![];\n+        for pat in matrix.heads() {\n+            if let Some(constructor) = pat_constructor(cx, pat)? {\n+                used_constructors.push(constructor);\n+            }\n+        }\n+\n+        // We assume here that the first constructor is the \"correct\" type. Since we\n+        // only care about the \"type\" of the constructor (i.e. if it is a bool we\n+        // don't care about the value), this assumption should be valid as long as\n+        // the match statement is well formed. We currently uphold this invariant by\n+        // filtering match arms before calling `is_useful`, only passing in match arms\n+        // whose type matches the type of the match expression.\n+        match &used_constructors.first() {\n+            Some(constructor) if all_constructors_covered(&cx, constructor, &used_constructors) => {\n+                // If all constructors are covered, then we need to consider whether\n+                // any values are covered by this wildcard.\n+                //\n+                // For example, with matrix '[[Some(true)], [None]]', all\n+                // constructors are covered (`Some`/`None`), so we need\n+                // to perform specialization to see that our wildcard will cover\n+                // the `Some(false)` case.\n+                //\n+                // Here we create a constructor for each variant and then check\n+                // usefulness after specializing for that constructor.\n+                let mut found_unimplemented = false;\n+                for constructor in constructor.all_constructors(cx) {\n+                    let matrix = matrix.specialize_constructor(&cx, &constructor)?;\n+                    let v = v.expand_wildcard(&cx, &constructor)?;\n+\n+                    match is_useful(&cx, &matrix, &v) {\n+                        Ok(Usefulness::Useful) => return Ok(Usefulness::Useful),\n+                        Ok(Usefulness::NotUseful) => continue,\n+                        _ => found_unimplemented = true,\n+                    };\n+                }\n+\n+                if found_unimplemented {\n+                    Err(MatchCheckNotImplemented)\n+                } else {\n+                    Ok(Usefulness::NotUseful)\n+                }\n+            }\n+            _ => {\n+                // Either not all constructors are covered, or the only other arms\n+                // are wildcards. Either way, this pattern is useful if it is useful\n+                // when compared to those arms with wildcards.\n+                let matrix = matrix.specialize_wildcard(&cx);\n+                let v = v.to_tail();\n+\n+                is_useful(&cx, &matrix, &v)\n+            }\n+        }\n+    }\n+}\n+\n+#[derive(Debug, Clone, Copy)]\n+/// Similar to TypeCtor, but includes additional information about the specific\n+/// value being instantiated. For example, TypeCtor::Bool doesn't contain the\n+/// boolean value.\n+enum Constructor {\n+    Bool(bool),\n+    Tuple { arity: usize },\n+    Enum(EnumVariantId),\n+}\n+\n+impl Constructor {\n+    fn arity(&self, cx: &MatchCheckCtx) -> MatchCheckResult<usize> {\n+        let arity = match self {\n+            Constructor::Bool(_) => 0,\n+            Constructor::Tuple { arity } => *arity,\n+            Constructor::Enum(e) => {\n+                match cx.db.enum_data(e.parent).variants[e.local_id].variant_data.as_ref() {\n+                    VariantData::Tuple(struct_field_data) => struct_field_data.len(),\n+                    VariantData::Unit => 0,\n+                    _ => return Err(MatchCheckNotImplemented),\n+                }\n+            }\n+        };\n+\n+        Ok(arity)\n+    }\n+\n+    fn all_constructors(&self, cx: &MatchCheckCtx) -> Vec<Constructor> {\n+        match self {\n+            Constructor::Bool(_) => vec![Constructor::Bool(true), Constructor::Bool(false)],\n+            Constructor::Tuple { .. } => vec![*self],\n+            Constructor::Enum(e) => cx\n+                .db\n+                .enum_data(e.parent)\n+                .variants\n+                .iter()\n+                .map(|(local_id, _)| {\n+                    Constructor::Enum(EnumVariantId { parent: e.parent, local_id })\n+                })\n+                .collect(),\n+        }\n+    }\n+}\n+\n+/// Returns the constructor for the given pattern. Should only return None\n+/// in the case of a Wild pattern.\n+fn pat_constructor(cx: &MatchCheckCtx, pat: PatIdOrWild) -> MatchCheckResult<Option<Constructor>> {\n+    let res = match pat.as_pat(cx) {\n+        Pat::Wild => None,\n+        Pat::Tuple(pats) => Some(Constructor::Tuple { arity: pats.len() }),\n+        Pat::Lit(lit_expr) => match cx.body.exprs[lit_expr] {\n+            Expr::Literal(Literal::Bool(val)) => Some(Constructor::Bool(val)),\n+            _ => return Err(MatchCheckNotImplemented),\n+        },\n+        Pat::TupleStruct { .. } | Pat::Path(_) => {\n+            let pat_id = pat.as_id().expect(\"we already know this pattern is not a wild\");\n+            let variant_id =\n+                cx.infer.variant_resolution_for_pat(pat_id).ok_or(MatchCheckNotImplemented)?;\n+            match variant_id {\n+                VariantId::EnumVariantId(enum_variant_id) => {\n+                    Some(Constructor::Enum(enum_variant_id))\n+                }\n+                _ => return Err(MatchCheckNotImplemented),\n+            }\n+        }\n+        _ => return Err(MatchCheckNotImplemented),\n+    };\n+\n+    Ok(res)\n+}\n+\n+fn all_constructors_covered(\n+    cx: &MatchCheckCtx,\n+    constructor: &Constructor,\n+    used_constructors: &[Constructor],\n+) -> bool {\n+    match constructor {\n+        Constructor::Tuple { arity } => {\n+            used_constructors.iter().any(|constructor| match constructor {\n+                Constructor::Tuple { arity: used_arity } => arity == used_arity,\n+                _ => false,\n+            })\n+        }\n+        Constructor::Bool(_) => {\n+            if used_constructors.is_empty() {\n+                return false;\n+            }\n+\n+            let covers_true =\n+                used_constructors.iter().any(|c| matches!(c, Constructor::Bool(true)));\n+            let covers_false =\n+                used_constructors.iter().any(|c| matches!(c, Constructor::Bool(false)));\n+\n+            covers_true && covers_false\n+        }\n+        Constructor::Enum(e) => cx.db.enum_data(e.parent).variants.iter().all(|(id, _)| {\n+            for constructor in used_constructors {\n+                if let Constructor::Enum(e) = constructor {\n+                    if id == e.local_id {\n+                        return true;\n+                    }\n+                }\n+            }\n+\n+            false\n+        }),\n+    }\n+}\n+\n+fn enum_variant_matches(cx: &MatchCheckCtx, pat_id: PatId, enum_variant_id: EnumVariantId) -> bool {\n+    Some(enum_variant_id.into()) == cx.infer.variant_resolution_for_pat(pat_id)\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    pub(super) use insta::assert_snapshot;\n+    pub(super) use ra_db::fixture::WithFixture;\n+\n+    pub(super) use crate::test_db::TestDB;\n+\n+    pub(super) fn check_diagnostic_message(content: &str) -> String {\n+        TestDB::with_single_file(content).0.diagnostics().0\n+    }\n+\n+    pub(super) fn check_diagnostic(content: &str) {\n+        let diagnostic_count = TestDB::with_single_file(content).0.diagnostics().1;\n+\n+        assert_eq!(1, diagnostic_count, \"no diagnostic reported\");\n+    }\n+\n+    pub(super) fn check_no_diagnostic(content: &str) {\n+        let diagnostic_count = TestDB::with_single_file(content).0.diagnostics().1;\n+\n+        assert_eq!(0, diagnostic_count, \"expected no diagnostic, found one\");\n+    }\n+\n+    #[test]\n+    fn empty_tuple_no_arms_diagnostic_message() {\n+        let content = r\"\n+            fn test_fn() {\n+                match () {\n+                }\n+            }\n+        \";\n+\n+        assert_snapshot!(\n+            check_diagnostic_message(content),\n+            @\"\\\"()\\\": Missing match arm\\n\"\n+        );\n+    }\n+\n+    #[test]\n+    fn empty_tuple_no_arms() {\n+        let content = r\"\n+            fn test_fn() {\n+                match () {\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn empty_tuple_wild() {\n+        let content = r\"\n+            fn test_fn() {\n+                match () {\n+                    _ => {}\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn empty_tuple_no_diagnostic() {\n+        let content = r\"\n+            fn test_fn() {\n+                match () {\n+                    () => {}\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_empty_tuple_no_arms() {\n+        let content = r\"\n+            fn test_fn() {\n+                match (()) {\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_empty_tuple_no_diagnostic() {\n+        let content = r\"\n+            fn test_fn() {\n+                match (()) {\n+                    (()) => {}\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_two_empty_tuple_no_arms() {\n+        let content = r\"\n+            fn test_fn() {\n+                match ((), ()) {\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_two_empty_tuple_no_diagnostic() {\n+        let content = r\"\n+            fn test_fn() {\n+                match ((), ()) {\n+                    ((), ()) => {}\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn bool_no_arms() {\n+        let content = r\"\n+            fn test_fn() {\n+                match false {\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn bool_missing_arm() {\n+        let content = r\"\n+            fn test_fn() {\n+                match false {\n+                    true => {}\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn bool_no_diagnostic() {\n+        let content = r\"\n+            fn test_fn() {\n+                match false {\n+                    true => {}\n+                    false => {}\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_bools_no_arms() {\n+        let content = r\"\n+            fn test_fn() {\n+                match (false, true) {\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_bools_missing_arms() {\n+        let content = r\"\n+            fn test_fn() {\n+                match (false, true) {\n+                    (true, true) => {},\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_bools_missing_arm() {\n+        let content = r\"\n+            fn test_fn() {\n+                match (false, true) {\n+                    (false, true) => {},\n+                    (false, false) => {},\n+                    (true, false) => {},\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_bools_with_wilds() {\n+        let content = r\"\n+            fn test_fn() {\n+                match (false, true) {\n+                    (false, _) => {},\n+                    (true, false) => {},\n+                    (_, true) => {},\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_bools_no_diagnostic() {\n+        let content = r\"\n+            fn test_fn() {\n+                match (false, true) {\n+                    (true, true) => {},\n+                    (true, false) => {},\n+                    (false, true) => {},\n+                    (false, false) => {},\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_bools_binding_missing_arms() {\n+        let content = r\"\n+            fn test_fn() {\n+                match (false, true) {\n+                    (true, _x) => {},\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_bools_binding_no_diagnostic() {\n+        let content = r\"\n+            fn test_fn() {\n+                match (false, true) {\n+                    (true, _x) => {},\n+                    (false, true) => {},\n+                    (false, false) => {},\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_tuple_and_bools_no_arms() {\n+        let content = r\"\n+            fn test_fn() {\n+                match (false, ((), false)) {\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_tuple_and_bools_missing_arms() {\n+        let content = r\"\n+            fn test_fn() {\n+                match (false, ((), false)) {\n+                    (true, ((), true)) => {},\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_tuple_and_bools_no_diagnostic() {\n+        let content = r\"\n+            fn test_fn() {\n+                match (false, ((), false)) {\n+                    (true, ((), true)) => {},\n+                    (true, ((), false)) => {},\n+                    (false, ((), true)) => {},\n+                    (false, ((), false)) => {},\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_tuple_and_bools_wildcard_missing_arms() {\n+        let content = r\"\n+            fn test_fn() {\n+                match (false, ((), false)) {\n+                    (true, _) => {},\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_tuple_and_bools_wildcard_no_diagnostic() {\n+        let content = r\"\n+            fn test_fn() {\n+                match (false, ((), false)) {\n+                    (true, ((), true)) => {},\n+                    (true, ((), false)) => {},\n+                    (false, _) => {},\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn enum_no_arms() {\n+        let content = r\"\n+            enum Either {\n+                A,\n+                B,\n+            }\n+            fn test_fn() {\n+                match Either::A {\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn enum_missing_arms() {\n+        let content = r\"\n+            enum Either {\n+                A,\n+                B,\n+            }\n+            fn test_fn() {\n+                match Either::B {\n+                    Either::A => {},\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn enum_no_diagnostic() {\n+        let content = r\"\n+            enum Either {\n+                A,\n+                B,\n+            }\n+            fn test_fn() {\n+                match Either::B {\n+                    Either::A => {},\n+                    Either::B => {},\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn enum_ref_missing_arms() {\n+        let content = r\"\n+            enum Either {\n+                A,\n+                B,\n+            }\n+            fn test_fn() {\n+                match &Either::B {\n+                    Either::A => {},\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn enum_ref_no_diagnostic() {\n+        let content = r\"\n+            enum Either {\n+                A,\n+                B,\n+            }\n+            fn test_fn() {\n+                match &Either::B {\n+                    Either::A => {},\n+                    Either::B => {},\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn enum_containing_bool_no_arms() {\n+        let content = r\"\n+            enum Either {\n+                A(bool),\n+                B,\n+            }\n+            fn test_fn() {\n+                match Either::B {\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn enum_containing_bool_missing_arms() {\n+        let content = r\"\n+            enum Either {\n+                A(bool),\n+                B,\n+            }\n+            fn test_fn() {\n+                match Either::B {\n+                    Either::A(true) => (),\n+                    Either::B => (),\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn enum_containing_bool_no_diagnostic() {\n+        let content = r\"\n+            enum Either {\n+                A(bool),\n+                B,\n+            }\n+            fn test_fn() {\n+                match Either::B {\n+                    Either::A(true) => (),\n+                    Either::A(false) => (),\n+                    Either::B => (),\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn enum_containing_bool_with_wild_no_diagnostic() {\n+        let content = r\"\n+            enum Either {\n+                A(bool),\n+                B,\n+            }\n+            fn test_fn() {\n+                match Either::B {\n+                    Either::B => (),\n+                    _ => (),\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn enum_containing_bool_with_wild_2_no_diagnostic() {\n+        let content = r\"\n+            enum Either {\n+                A(bool),\n+                B,\n+            }\n+            fn test_fn() {\n+                match Either::B {\n+                    Either::A(_) => (),\n+                    Either::B => (),\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn enum_different_sizes_missing_arms() {\n+        let content = r\"\n+            enum Either {\n+                A(bool),\n+                B(bool, bool),\n+            }\n+            fn test_fn() {\n+                match Either::A(false) {\n+                    Either::A(_) => (),\n+                    Either::B(false, _) => (),\n+                }\n+            }\n+        \";\n+\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn enum_different_sizes_no_diagnostic() {\n+        let content = r\"\n+            enum Either {\n+                A(bool),\n+                B(bool, bool),\n+            }\n+            fn test_fn() {\n+                match Either::A(false) {\n+                    Either::A(_) => (),\n+                    Either::B(true, _) => (),\n+                    Either::B(false, _) => (),\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn or_no_diagnostic() {\n+        let content = r\"\n+            enum Either {\n+                A(bool),\n+                B(bool, bool),\n+            }\n+            fn test_fn() {\n+                match Either::A(false) {\n+                    Either::A(true) | Either::A(false) => (),\n+                    Either::B(true, _) => (),\n+                    Either::B(false, _) => (),\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn tuple_of_enum_no_diagnostic() {\n+        let content = r\"\n+            enum Either {\n+                A(bool),\n+                B(bool, bool),\n+            }\n+            enum Either2 {\n+                C,\n+                D,\n+            }\n+            fn test_fn() {\n+                match (Either::A(false), Either2::C) {\n+                    (Either::A(true), _) | (Either::A(false), _) => (),\n+                    (Either::B(true, _), Either2::C) => (),\n+                    (Either::B(false, _), Either2::C) => (),\n+                    (Either::B(_, _), Either2::D) => (),\n+                }\n+            }\n+        \";\n+\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn mismatched_types() {\n+        let content = r\"\n+            enum Either {\n+                A,\n+                B,\n+            }\n+            enum Either2 {\n+                C,\n+                D,\n+            }\n+            fn test_fn() {\n+                match Either::A {\n+                    Either2::C => (),\n+                    Either2::D => (),\n+                }\n+            }\n+        \";\n+\n+        // Match arms with the incorrect type are filtered out.\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn mismatched_types_with_different_arity() {\n+        let content = r\"\n+            fn test_fn() {\n+                match (true, false) {\n+                    (true, false, true) => (),\n+                    (true) => (),\n+                }\n+            }\n+        \";\n+\n+        // Match arms with the incorrect type are filtered out.\n+        check_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn enum_not_in_scope() {\n+        let content = r\"\n+            fn test_fn() {\n+                match Foo::Bar {\n+                    Foo::Baz => (),\n+                }\n+            }\n+        \";\n+\n+        // The enum is not in scope so we don't perform exhaustiveness\n+        // checking, but we want to be sure we don't panic here (and\n+        // we don't create a diagnostic).\n+        check_no_diagnostic(content);\n+    }\n+}\n+\n+#[cfg(test)]\n+mod false_negatives {\n+    //! The implementation of match checking here is a work in progress. As we roll this out, we\n+    //! prefer false negatives to false positives (ideally there would be no false positives). This\n+    //! test module should document known false negatives. Eventually we will have a complete\n+    //! implementation of match checking and this module will be empty.\n+    //!\n+    //! The reasons for documenting known false negatives:\n+    //!\n+    //!   1. It acts as a backlog of work that can be done to improve the behavior of the system.\n+    //!   2. It ensures the code doesn't panic when handling these cases.\n+\n+    use super::tests::*;\n+\n+    #[test]\n+    fn integers() {\n+        let content = r\"\n+            fn test_fn() {\n+                match 5 {\n+                    10 => (),\n+                    11..20 => (),\n+                }\n+            }\n+        \";\n+\n+        // This is a false negative.\n+        // We don't currently check integer exhaustiveness.\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn enum_record() {\n+        let content = r\"\n+            enum Either {\n+                A { foo: u32 },\n+                B,\n+            }\n+            fn test_fn() {\n+                match Either::B {\n+                    Either::A { foo: 5 } => (),\n+                }\n+            }\n+        \";\n+\n+        // This is a false negative.\n+        // We don't currently handle enum record types.\n+        check_no_diagnostic(content);\n+    }\n+\n+    #[test]\n+    fn internal_or() {\n+        let content = r\"\n+            fn test_fn() {\n+                enum Either {\n+                    A(bool),\n+                    B,\n+                }\n+                match Either::B {\n+                    Either::A(true | false) => (),\n+                }\n+            }\n+        \";\n+\n+        // This is a false negative.\n+        // We do not currently handle patterns with internal `or`s.\n+        check_no_diagnostic(content);\n+    }\n+}"}, {"sha": "8cbce11686c1baebb3ddef9eaa03abb6e9b21067", "filename": "crates/ra_hir_ty/src/diagnostics.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -6,7 +6,7 @@ use hir_expand::{db::AstDatabase, name::Name, HirFileId, InFile};\n use ra_syntax::{ast, AstNode, AstPtr, SyntaxNodePtr};\n use stdx::format_to;\n \n-pub use hir_def::diagnostics::UnresolvedModule;\n+pub use hir_def::{diagnostics::UnresolvedModule, expr::MatchArm};\n pub use hir_expand::diagnostics::{AstDiagnostic, Diagnostic, DiagnosticSink};\n \n #[derive(Debug)]\n@@ -62,6 +62,25 @@ impl AstDiagnostic for MissingFields {\n     }\n }\n \n+#[derive(Debug)]\n+pub struct MissingMatchArms {\n+    pub file: HirFileId,\n+    pub match_expr: AstPtr<ast::Expr>,\n+    pub arms: AstPtr<ast::MatchArmList>,\n+}\n+\n+impl Diagnostic for MissingMatchArms {\n+    fn message(&self) -> String {\n+        String::from(\"Missing match arm\")\n+    }\n+    fn source(&self) -> InFile<SyntaxNodePtr> {\n+        InFile { file_id: self.file, value: self.match_expr.into() }\n+    }\n+    fn as_any(&self) -> &(dyn Any + Send + 'static) {\n+        self\n+    }\n+}\n+\n #[derive(Debug)]\n pub struct MissingOkInTailExpr {\n     pub file: HirFileId,"}, {"sha": "6547eedae6f9b0275a1f49951a791960a959ab33", "filename": "crates/ra_hir_ty/src/expr.rs", "status": "modified", "additions": 87, "deletions": 2, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fexpr.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -13,9 +13,10 @@ use rustc_hash::FxHashSet;\n \n use crate::{\n     db::HirDatabase,\n-    diagnostics::{MissingFields, MissingOkInTailExpr},\n+    diagnostics::{MissingFields, MissingMatchArms, MissingOkInTailExpr},\n     utils::variant_data,\n     ApplicationTy, InferenceResult, Ty, TypeCtor,\n+    _match::{is_useful, MatchCheckCtx, Matrix, PatStack, Usefulness},\n };\n \n pub use hir_def::{\n@@ -51,15 +52,99 @@ impl<'a, 'b> ExprValidator<'a, 'b> {\n         for e in body.exprs.iter() {\n             if let (id, Expr::RecordLit { path, fields, spread }) = e {\n                 self.validate_record_literal(id, path, fields, *spread, db);\n+            } else if let (id, Expr::Match { expr, arms }) = e {\n+                self.validate_match(id, *expr, arms, db, self.infer.clone());\n             }\n         }\n \n         let body_expr = &body[body.body_expr];\n-        if let Expr::Block { statements: _, tail: Some(t) } = body_expr {\n+        if let Expr::Block { tail: Some(t), .. } = body_expr {\n             self.validate_results_in_tail_expr(body.body_expr, *t, db);\n         }\n     }\n \n+    fn validate_match(\n+        &mut self,\n+        id: ExprId,\n+        match_expr: ExprId,\n+        arms: &[MatchArm],\n+        db: &dyn HirDatabase,\n+        infer: Arc<InferenceResult>,\n+    ) {\n+        let (body, source_map): (Arc<Body>, Arc<BodySourceMap>) =\n+            db.body_with_source_map(self.func.into());\n+\n+        let match_expr_ty = match infer.type_of_expr.get(match_expr) {\n+            Some(ty) => ty,\n+            // If we can't resolve the type of the match expression\n+            // we cannot perform exhaustiveness checks.\n+            None => return,\n+        };\n+\n+        let cx = MatchCheckCtx { body, infer: infer.clone(), db };\n+        let pats = arms.iter().map(|arm| arm.pat);\n+\n+        let mut seen = Matrix::empty();\n+        for pat in pats {\n+            // We skip any patterns whose type we cannot resolve.\n+            //\n+            // This could lead to false positives in this diagnostic, so\n+            // it might be better to skip the entire diagnostic if we either\n+            // cannot resolve a match arm or determine that the match arm has\n+            // the wrong type.\n+            if let Some(pat_ty) = infer.type_of_pat.get(pat) {\n+                // We only include patterns whose type matches the type\n+                // of the match expression. If we had a InvalidMatchArmPattern\n+                // diagnostic or similar we could raise that in an else\n+                // block here.\n+                //\n+                // When comparing the types, we also have to consider that rustc\n+                // will automatically de-reference the match expression type if\n+                // necessary.\n+                //\n+                // FIXME we should use the type checker for this.\n+                if pat_ty == match_expr_ty\n+                    || match_expr_ty\n+                        .as_reference()\n+                        .map(|(match_expr_ty, _)| match_expr_ty == pat_ty)\n+                        .unwrap_or(false)\n+                {\n+                    // If we had a NotUsefulMatchArm diagnostic, we could\n+                    // check the usefulness of each pattern as we added it\n+                    // to the matrix here.\n+                    let v = PatStack::from_pattern(pat);\n+                    seen.push(&cx, v);\n+                }\n+            }\n+        }\n+\n+        match is_useful(&cx, &seen, &PatStack::from_wild()) {\n+            Ok(Usefulness::Useful) => (),\n+            // if a wildcard pattern is not useful, then all patterns are covered\n+            Ok(Usefulness::NotUseful) => return,\n+            // this path is for unimplemented checks, so we err on the side of not\n+            // reporting any errors\n+            _ => return,\n+        }\n+\n+        if let Ok(source_ptr) = source_map.expr_syntax(id) {\n+            if let Some(expr) = source_ptr.value.left() {\n+                let root = source_ptr.file_syntax(db.upcast());\n+                if let ast::Expr::MatchExpr(match_expr) = expr.to_node(&root) {\n+                    if let (Some(match_expr), Some(arms)) =\n+                        (match_expr.expr(), match_expr.match_arm_list())\n+                    {\n+                        self.sink.push(MissingMatchArms {\n+                            file: source_ptr.file_id,\n+                            match_expr: AstPtr::new(&match_expr),\n+                            arms: AstPtr::new(&arms),\n+                        })\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n     fn validate_record_literal(\n         &mut self,\n         id: ExprId,"}, {"sha": "69bbb4307f59c11544f7ea388c1e1e8034fbfe39", "filename": "crates/ra_hir_ty/src/infer/pat.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fpat.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -21,9 +21,13 @@ impl<'a> InferenceContext<'a> {\n         subpats: &[PatId],\n         expected: &Ty,\n         default_bm: BindingMode,\n+        id: PatId,\n     ) -> Ty {\n         let (ty, def) = self.resolve_variant(path);\n         let var_data = def.map(|it| variant_data(self.db.upcast(), it));\n+        if let Some(variant) = def {\n+            self.write_variant_resolution(id.into(), variant);\n+        }\n         self.unify(&ty, expected);\n \n         let substs = ty.substs().unwrap_or_else(Substs::empty);\n@@ -152,7 +156,7 @@ impl<'a> InferenceContext<'a> {\n                 Ty::apply_one(TypeCtor::Ref(*mutability), subty)\n             }\n             Pat::TupleStruct { path: p, args: subpats } => {\n-                self.infer_tuple_struct_pat(p.as_ref(), subpats, expected, default_bm)\n+                self.infer_tuple_struct_pat(p.as_ref(), subpats, expected, default_bm, pat)\n             }\n             Pat::Record { path: p, args: fields } => {\n                 self.infer_record_pat(p.as_ref(), fields, expected, default_bm, pat)"}, {"sha": "2b6bc0f798f79752ff3e871c40a97d377870c332", "filename": "crates/ra_hir_ty/src/infer/path.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fpath.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -67,8 +67,16 @@ impl<'a> InferenceContext<'a> {\n             ValueNs::FunctionId(it) => it.into(),\n             ValueNs::ConstId(it) => it.into(),\n             ValueNs::StaticId(it) => it.into(),\n-            ValueNs::StructId(it) => it.into(),\n-            ValueNs::EnumVariantId(it) => it.into(),\n+            ValueNs::StructId(it) => {\n+                self.write_variant_resolution(id, it.into());\n+\n+                it.into()\n+            }\n+            ValueNs::EnumVariantId(it) => {\n+                self.write_variant_resolution(id, it.into());\n+\n+                it.into()\n+            }\n         };\n \n         let ty = self.db.value_ty(typable);"}, {"sha": "18f74d3b12bd47c2145ef72cfc12b47cbfb01927", "filename": "crates/ra_hir_ty/src/lib.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flib.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -1,6 +1,11 @@\n //! The type system. We currently use this to infer types for completion, hover\n //! information and various assists.\n \n+#[allow(unused)]\n+macro_rules! eprintln {\n+    ($($tt:tt)*) => { stdx::eprintln!($($tt)*) };\n+}\n+\n macro_rules! impl_froms {\n     ($e:ident: $($v:ident $(($($sv:ident),*))?),*) => {\n         $(\n@@ -38,6 +43,7 @@ mod tests;\n #[cfg(test)]\n mod test_db;\n mod marks;\n+mod _match;\n \n use std::ops::Deref;\n use std::sync::Arc;\n@@ -855,7 +861,8 @@ pub trait TypeWalk {\n         );\n         self\n     }\n-    // /// Shifts up debruijn indices of `Ty::Bound` vars by `n`.\n+\n+    /// Shifts up debruijn indices of `Ty::Bound` vars by `n`.\n     fn shift_bound_vars(self, n: DebruijnIndex) -> Self\n     where\n         Self: Sized,"}, {"sha": "3a4d58bf9c4ffae26eb29326a6a346558a929b0c", "filename": "crates/ra_hir_ty/src/test_db.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -105,8 +105,9 @@ impl TestDB {\n     }\n \n     // FIXME: don't duplicate this\n-    pub fn diagnostics(&self) -> String {\n+    pub fn diagnostics(&self) -> (String, u32) {\n         let mut buf = String::new();\n+        let mut count = 0;\n         let crate_graph = self.crate_graph();\n         for krate in crate_graph.iter() {\n             let crate_def_map = self.crate_def_map(krate);\n@@ -133,13 +134,14 @@ impl TestDB {\n                 let infer = self.infer(f.into());\n                 let mut sink = DiagnosticSink::new(|d| {\n                     format_to!(buf, \"{:?}: {}\\n\", d.syntax_node(self).text(), d.message());\n+                    count += 1;\n                 });\n                 infer.add_diagnostics(self, f, &mut sink);\n                 let mut validator = ExprValidator::new(f, infer, &mut sink);\n                 validator.validate_body(self);\n             }\n         }\n-        buf\n+        (buf, count)\n     }\n }\n "}, {"sha": "e6ac0aec3b8c25ffe8f612e9cbc661f1c2f15655", "filename": "crates/ra_hir_ty/src/tests.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -309,7 +309,8 @@ fn no_such_field_diagnostics() {\n         }\n         \",\n     )\n-    .diagnostics();\n+    .diagnostics()\n+    .0;\n \n     assert_snapshot!(diagnostics, @r###\"\n     \"baz: 62\": no such field"}, {"sha": "22ae6ca90922eb5c7cfc4a2ce0c6b9f29e382a06", "filename": "crates/ra_hir_ty/src/tests/traits.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -2021,3 +2021,28 @@ fn main() {\n     \"###\n     );\n }\n+\n+#[test]\n+fn dyn_trait_through_chalk() {\n+    let t = type_at(\n+        r#\"\n+//- /main.rs\n+struct Box<T> {}\n+#[lang = \"deref\"]\n+trait Deref {\n+    type Target;\n+}\n+impl<T> Deref for Box<T> {\n+    type Target = T;\n+}\n+trait Trait {\n+    fn foo(&self);\n+}\n+\n+fn test(x: Box<dyn Trait>) {\n+    x.foo()<|>;\n+}\n+\"#,\n+    );\n+    assert_eq!(t, \"()\");\n+}"}, {"sha": "1bc0f07135812312062e788aca119ea848b8039c", "filename": "crates/ra_hir_ty/src/traits/chalk.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -427,7 +427,12 @@ impl ToChalk for GenericPredicate {\n         db: &dyn HirDatabase,\n         where_clause: chalk_ir::QuantifiedWhereClause<Interner>,\n     ) -> GenericPredicate {\n-        match where_clause.value {\n+        // we don't produce any where clauses with binders and can't currently deal with them\n+        match where_clause\n+            .value\n+            .shifted_out(&Interner)\n+            .expect(\"unexpected bound vars in where clause\")\n+        {\n             chalk_ir::WhereClause::Implemented(tr) => {\n                 GenericPredicate::Implemented(from_chalk(db, tr))\n             }"}, {"sha": "ca57eceff7889ab053f7d879e826c9b7d29c9b3f", "filename": "crates/ra_ide/src/call_info.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcall_info.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -109,16 +109,16 @@ impl FnCallNode {\n         syntax.ancestors().find_map(|node| {\n             match_ast! {\n                 match node {\n-                    ast::CallExpr(it) => { Some(FnCallNode::CallExpr(it)) },\n+                    ast::CallExpr(it) => Some(FnCallNode::CallExpr(it)),\n                     ast::MethodCallExpr(it) => {\n                         let arg_list = it.arg_list()?;\n                         if !syntax.text_range().is_subrange(&arg_list.syntax().text_range()) {\n                             return None;\n                         }\n                         Some(FnCallNode::MethodCallExpr(it))\n                     },\n-                    ast::MacroCall(it) => { Some(FnCallNode::MacroCallExpr(it)) },\n-                    _ => { None },\n+                    ast::MacroCall(it) => Some(FnCallNode::MacroCallExpr(it)),\n+                    _ => None,\n                 }\n             }\n         })\n@@ -127,10 +127,10 @@ impl FnCallNode {\n     pub(crate) fn with_node_exact(node: &SyntaxNode) -> Option<FnCallNode> {\n         match_ast! {\n             match node {\n-                ast::CallExpr(it) => { Some(FnCallNode::CallExpr(it)) },\n-                ast::MethodCallExpr(it) => { Some(FnCallNode::MethodCallExpr(it)) },\n-                ast::MacroCall(it) => { Some(FnCallNode::MacroCallExpr(it)) },\n-                _ => { None },\n+                ast::CallExpr(it) => Some(FnCallNode::CallExpr(it)),\n+                ast::MethodCallExpr(it) => Some(FnCallNode::MethodCallExpr(it)),\n+                ast::MacroCall(it) => Some(FnCallNode::MacroCallExpr(it)),\n+                _ => None,\n             }\n         }\n     }"}, {"sha": "4a1a2a04a7d16f84497ead8bc34faec08b519c43", "filename": "crates/ra_ide/src/completion.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -10,8 +10,8 @@ mod complete_pattern;\n mod complete_fn_param;\n mod complete_keyword;\n mod complete_snippet;\n-mod complete_path;\n-mod complete_scope;\n+mod complete_qualified_path;\n+mod complete_unqualified_path;\n mod complete_postfix;\n mod complete_macro_in_item_position;\n mod complete_trait_impl;\n@@ -85,8 +85,8 @@ pub(crate) fn completions(\n     complete_keyword::complete_use_tree_keyword(&mut acc, &ctx);\n     complete_snippet::complete_expr_snippet(&mut acc, &ctx);\n     complete_snippet::complete_item_snippet(&mut acc, &ctx);\n-    complete_path::complete_path(&mut acc, &ctx);\n-    complete_scope::complete_scope(&mut acc, &ctx);\n+    complete_qualified_path::complete_qualified_path(&mut acc, &ctx);\n+    complete_unqualified_path::complete_unqualified_path(&mut acc, &ctx);\n     complete_dot::complete_dot(&mut acc, &ctx);\n     complete_record::complete_record(&mut acc, &ctx);\n     complete_pattern::complete_pattern(&mut acc, &ctx);"}, {"sha": "62ae5ccb4673b5e5d092843d95d764ea05889ab7", "filename": "crates/ra_ide/src/completion/complete_fn_param.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -18,8 +18,8 @@ pub(super) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n     for node in ctx.token.parent().ancestors() {\n         match_ast! {\n             match node {\n-                ast::SourceFile(it) => { process(it, &mut params) },\n-                ast::ItemList(it) => { process(it, &mut params) },\n+                ast::SourceFile(it) => process(it, &mut params),\n+                ast::ItemList(it) => process(it, &mut params),\n                 _ => (),\n             }\n         }"}, {"sha": "38f9c34e72b46cd95d87bd1254b1a45a565f5d1b", "filename": "crates/ra_ide/src/completion/complete_keyword.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -86,9 +86,9 @@ fn is_in_loop_body(leaf: &SyntaxToken) -> bool {\n         }\n         let loop_body = match_ast! {\n             match node {\n-                ast::ForExpr(it) => { it.loop_body() },\n-                ast::WhileExpr(it) => { it.loop_body() },\n-                ast::LoopExpr(it) => { it.loop_body() },\n+                ast::ForExpr(it) => it.loop_body(),\n+                ast::WhileExpr(it) => it.loop_body(),\n+                ast::LoopExpr(it) => it.loop_body(),\n                 _ => None,\n             }\n         };"}, {"sha": "d98523406a42a4c692df250191c0e43c4e48ce47", "filename": "crates/ra_ide/src/completion/complete_qualified_path.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_qualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_qualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_qualified_path.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -6,7 +6,7 @@ use test_utils::tested_by;\n \n use crate::completion::{CompletionContext, Completions};\n \n-pub(super) fn complete_path(acc: &mut Completions, ctx: &CompletionContext) {\n+pub(super) fn complete_qualified_path(acc: &mut Completions, ctx: &CompletionContext) {\n     let path = match &ctx.path_prefix {\n         Some(path) => path.clone(),\n         _ => return,", "previous_filename": "crates/ra_ide/src/completion/complete_path.rs"}, {"sha": "79f5c8c8f9ea778c45d8585d08297611b57b99af", "filename": "crates/ra_ide/src/completion/complete_record.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -1,12 +1,13 @@\n //! Complete fields in record literals and patterns.\n-use crate::completion::{CompletionContext, Completions};\n use ra_syntax::{ast, ast::NameOwner, SmolStr};\n \n+use crate::completion::{CompletionContext, Completions};\n+\n pub(super) fn complete_record(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n     let (ty, variant, already_present_fields) =\n         match (ctx.record_lit_pat.as_ref(), ctx.record_lit_syntax.as_ref()) {\n             (None, None) => return None,\n-            (Some(_), Some(_)) => panic!(\"A record cannot be both a literal and a pattern\"),\n+            (Some(_), Some(_)) => unreachable!(\"A record cannot be both a literal and a pattern\"),\n             (Some(record_pat), _) => (\n                 ctx.sema.type_of_pat(&record_pat.clone().into())?,\n                 ctx.sema.resolve_record_pattern(record_pat)?,\n@@ -59,9 +60,10 @@ fn pattern_ascribed_fields(record_pat: &ast::RecordPat) -> Vec<SmolStr> {\n #[cfg(test)]\n mod tests {\n     mod record_lit_tests {\n-        use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n         use insta::assert_debug_snapshot;\n \n+        use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n+\n         fn complete(code: &str) -> Vec<CompletionItem> {\n             do_completion(code, CompletionKind::Reference)\n         }\n@@ -204,9 +206,10 @@ mod tests {\n     }\n \n     mod record_pat_tests {\n-        use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n         use insta::assert_debug_snapshot;\n \n+        use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n+\n         fn complete(code: &str) -> Vec<CompletionItem> {\n             do_completion(code, CompletionKind::Reference)\n         }"}, {"sha": "efde9bf7314713ef10056e65ee298f56c51daaff", "filename": "crates/ra_ide/src/completion/complete_unqualified_path.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -2,7 +2,7 @@\n \n use crate::completion::{CompletionContext, Completions};\n \n-pub(super) fn complete_scope(acc: &mut Completions, ctx: &CompletionContext) {\n+pub(super) fn complete_unqualified_path(acc: &mut Completions, ctx: &CompletionContext) {\n     if !(ctx.is_trivial_path && !ctx.is_pat_binding_or_const) {\n         return;\n     }", "previous_filename": "crates/ra_ide/src/completion/complete_scope.rs"}, {"sha": "f833d2a9ade805d80aa80e567e1abbd778f87f7f", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -50,6 +50,8 @@ pub(crate) struct CompletionContext<'a> {\n     pub(super) dot_receiver_is_ambiguous_float_literal: bool,\n     /// If this is a call (method or function) in particular, i.e. the () are already there.\n     pub(super) is_call: bool,\n+    /// If this is a macro call, i.e. the () are already there.\n+    pub(super) is_macro_call: bool,\n     pub(super) is_path_type: bool,\n     pub(super) has_type_args: bool,\n }\n@@ -102,6 +104,7 @@ impl<'a> CompletionContext<'a> {\n             is_new_item: false,\n             dot_receiver: None,\n             is_call: false,\n+            is_macro_call: false,\n             is_path_type: false,\n             has_type_args: false,\n             dot_receiver_is_ambiguous_float_literal: false,\n@@ -269,6 +272,7 @@ impl<'a> CompletionContext<'a> {\n                 .and_then(ast::PathExpr::cast)\n                 .and_then(|it| it.syntax().parent().and_then(ast::CallExpr::cast))\n                 .is_some();\n+            self.is_macro_call = path.syntax().parent().and_then(ast::MacroCall::cast).is_some();\n \n             self.is_path_type = path.syntax().parent().and_then(ast::PathType::cast).is_some();\n             self.has_type_args = segment.type_arg_list().is_some();"}, {"sha": "55f75b15aa1f8dd38d85c60267804ca01384a9b4", "filename": "crates/ra_ide/src/completion/presentation.rs", "status": "modified", "additions": 40, "deletions": 3, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -174,7 +174,8 @@ impl Completions {\n                 .set_deprecated(is_deprecated(macro_, ctx.db))\n                 .detail(detail);\n \n-        builder = if ctx.use_item_syntax.is_some() {\n+        builder = if ctx.use_item_syntax.is_some() || ctx.is_macro_call {\n+            tested_by!(dont_insert_macro_call_parens_unncessary);\n             builder.insert_text(name)\n         } else {\n             let macro_braces_to_insert =\n@@ -960,7 +961,8 @@ mod tests {\n     }\n \n     #[test]\n-    fn dont_insert_macro_call_braces_in_use() {\n+    fn dont_insert_macro_call_parens_unncessary() {\n+        covers!(dont_insert_macro_call_parens_unncessary);\n         assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n@@ -986,6 +988,41 @@ mod tests {\n             },\n         ]\n         \"###\n-        )\n+        );\n+\n+        assert_debug_snapshot!(\n+            do_reference_completion(\n+                r\"\n+                //- /main.rs\n+                macro_rules frobnicate {\n+                    () => ()\n+                }\n+                fn main() {\n+                    frob<|>!();\n+                }\n+                \"\n+            ),\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"frobnicate!\",\n+                source_range: [56; 60),\n+                delete: [56; 60),\n+                insert: \"frobnicate\",\n+                kind: Macro,\n+                detail: \"macro_rules! frobnicate\",\n+            },\n+            CompletionItem {\n+                label: \"main()\",\n+                source_range: [56; 60),\n+                delete: [56; 60),\n+                insert: \"main()$0\",\n+                kind: Function,\n+                lookup: \"main\",\n+                detail: \"fn main()\",\n+            },\n+        ]\n+        \"###\n+        );\n     }\n }"}, {"sha": "901ad104c10f24d4bd0725b02a38c00f9b4bbaca", "filename": "crates/ra_ide/src/diagnostics.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -101,6 +101,14 @@ pub(crate) fn diagnostics(db: &RootDatabase, file_id: FileId) -> Vec<Diagnostic>\n             fix,\n         })\n     })\n+    .on::<hir::diagnostics::MissingMatchArms, _>(|d| {\n+        res.borrow_mut().push(Diagnostic {\n+            range: d.highlight_range(),\n+            message: d.message(),\n+            severity: Severity::Error,\n+            fix: None,\n+        })\n+    })\n     .on::<hir::diagnostics::MissingOkInTailExpr, _>(|d| {\n         let node = d.ast(db);\n         let replacement = format!(\"Ok({})\", node.syntax());\n@@ -291,7 +299,7 @@ mod tests {\n     fn check_no_diagnostic(content: &str) {\n         let (analysis, file_id) = single_file(content);\n         let diagnostics = analysis.diagnostics(file_id).unwrap();\n-        assert_eq!(diagnostics.len(), 0);\n+        assert_eq!(diagnostics.len(), 0, \"expected no diagnostic, found one\");\n     }\n \n     #[test]"}, {"sha": "e61846995a76961068c090247e57a0d22b6c15bb", "filename": "crates/ra_ide/src/display/navigation_target.rs", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -399,17 +399,17 @@ pub(crate) fn docs_from_symbol(db: &RootDatabase, symbol: &FileSymbol) -> Option\n \n     match_ast! {\n         match node {\n-            ast::FnDef(it) => { it.doc_comment_text() },\n-            ast::StructDef(it) => { it.doc_comment_text() },\n-            ast::EnumDef(it) => { it.doc_comment_text() },\n-            ast::TraitDef(it) => { it.doc_comment_text() },\n-            ast::Module(it) => { it.doc_comment_text() },\n-            ast::TypeAliasDef(it) => { it.doc_comment_text() },\n-            ast::ConstDef(it) => { it.doc_comment_text() },\n-            ast::StaticDef(it) => { it.doc_comment_text() },\n-            ast::RecordFieldDef(it) => { it.doc_comment_text() },\n-            ast::EnumVariant(it) => { it.doc_comment_text() },\n-            ast::MacroCall(it) => { it.doc_comment_text() },\n+            ast::FnDef(it) => it.doc_comment_text(),\n+            ast::StructDef(it) => it.doc_comment_text(),\n+            ast::EnumDef(it) => it.doc_comment_text(),\n+            ast::TraitDef(it) => it.doc_comment_text(),\n+            ast::Module(it) => it.doc_comment_text(),\n+            ast::TypeAliasDef(it) => it.doc_comment_text(),\n+            ast::ConstDef(it) => it.doc_comment_text(),\n+            ast::StaticDef(it) => it.doc_comment_text(),\n+            ast::RecordFieldDef(it) => it.doc_comment_text(),\n+            ast::EnumVariant(it) => it.doc_comment_text(),\n+            ast::MacroCall(it) => it.doc_comment_text(),\n             _ => None,\n         }\n     }\n@@ -424,16 +424,16 @@ pub(crate) fn description_from_symbol(db: &RootDatabase, symbol: &FileSymbol) ->\n \n     match_ast! {\n         match node {\n-            ast::FnDef(it) => { it.short_label() },\n-            ast::StructDef(it) => { it.short_label() },\n-            ast::EnumDef(it) => { it.short_label() },\n-            ast::TraitDef(it) => { it.short_label() },\n-            ast::Module(it) => { it.short_label() },\n-            ast::TypeAliasDef(it) => { it.short_label() },\n-            ast::ConstDef(it) => { it.short_label() },\n-            ast::StaticDef(it) => { it.short_label() },\n-            ast::RecordFieldDef(it) => { it.short_label() },\n-            ast::EnumVariant(it) => { it.short_label() },\n+            ast::FnDef(it) => it.short_label(),\n+            ast::StructDef(it) => it.short_label(),\n+            ast::EnumDef(it) => it.short_label(),\n+            ast::TraitDef(it) => it.short_label(),\n+            ast::Module(it) => it.short_label(),\n+            ast::TypeAliasDef(it) => it.short_label(),\n+            ast::ConstDef(it) => it.short_label(),\n+            ast::StaticDef(it) => it.short_label(),\n+            ast::RecordFieldDef(it) => it.short_label(),\n+            ast::EnumVariant(it) => it.short_label(),\n             _ => None,\n         }\n     }"}, {"sha": "7a774785c0f3ab5402aec7bfcf1a8eb275468b0e", "filename": "crates/ra_ide/src/display/structure.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fstructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fstructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fstructure.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -117,18 +117,18 @@ fn structure_node(node: &SyntaxNode) -> Option<StructureNode> {\n \n                 decl_with_detail(it, Some(detail))\n             },\n-            ast::StructDef(it) => { decl(it) },\n-            ast::EnumDef(it) => { decl(it) },\n-            ast::EnumVariant(it) => { decl(it) },\n-            ast::TraitDef(it) => { decl(it) },\n-            ast::Module(it) => { decl(it) },\n+            ast::StructDef(it) => decl(it),\n+            ast::EnumDef(it) => decl(it),\n+            ast::EnumVariant(it) => decl(it),\n+            ast::TraitDef(it) => decl(it),\n+            ast::Module(it) => decl(it),\n             ast::TypeAliasDef(it) => {\n                 let ty = it.type_ref();\n                 decl_with_type_ref(it, ty)\n             },\n-            ast::RecordFieldDef(it) => { decl_with_ascription(it) },\n-            ast::ConstDef(it) => { decl_with_ascription(it) },\n-            ast::StaticDef(it) => { decl_with_ascription(it) },\n+            ast::RecordFieldDef(it) => decl_with_ascription(it),\n+            ast::ConstDef(it) => decl_with_ascription(it),\n+            ast::StaticDef(it) => decl_with_ascription(it),\n             ast::ImplDef(it) => {\n                 let target_type = it.target_type()?;\n                 let target_trait = it.target_trait();"}, {"sha": "bd2688df1b2d7df55a09a5940324d9c6d957f0ae", "filename": "crates/ra_ide/src/goto_type_definition.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -18,9 +18,9 @@ pub(crate) fn goto_type_definition(\n     let (ty, node) = sema.ancestors_with_macros(token.parent()).find_map(|node| {\n         let ty = match_ast! {\n             match node {\n-                ast::Expr(expr) => { sema.type_of_expr(&expr)? },\n-                ast::Pat(pat) => { sema.type_of_pat(&pat)? },\n-                _ => { return None },\n+                ast::Expr(expr) => sema.type_of_expr(&expr)?,\n+                ast::Pat(pat) => sema.type_of_pat(&pat)?,\n+                _ => return None,\n             }\n         };\n "}, {"sha": "5599f143f20babd1d228856bc10cab179ae1c49e", "filename": "crates/ra_ide/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -10,6 +10,11 @@\n // For proving that RootDatabase is RefUnwindSafe.\n #![recursion_limit = \"128\"]\n \n+#[allow(unused)]\n+macro_rules! eprintln {\n+    ($($tt:tt)*) => { stdx::eprintln!($($tt)*) };\n+}\n+\n pub mod mock_analysis;\n mod source_change;\n "}, {"sha": "5e1f135c56aa6e602f84189b6206fa7655b28b30", "filename": "crates/ra_ide/src/marks.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmarks.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -7,4 +7,5 @@ test_utils::marks!(\n     dont_complete_current_use\n     test_resolve_parent_module_on_module_decl\n     search_filters_by_range\n+    dont_insert_macro_call_parens_unncessary\n );"}, {"sha": "9433f3a2476212c48c9d4a77b688966df530192b", "filename": "crates/ra_ide/src/runnables.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Frunnables.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -49,8 +49,8 @@ pub(crate) fn runnables(db: &RootDatabase, file_id: FileId) -> Vec<Runnable> {\n fn runnable(sema: &Semantics<RootDatabase>, item: SyntaxNode) -> Option<Runnable> {\n     match_ast! {\n         match item {\n-            ast::FnDef(it) => { runnable_fn(sema, it) },\n-            ast::Module(it) => { runnable_mod(sema, it) },\n+            ast::FnDef(it) => runnable_fn(sema, it),\n+            ast::Module(it) => runnable_mod(sema, it),\n             _ => None,\n         }\n     }"}, {"sha": "1bf014149abb6458fc2144927601864329a7325b", "filename": "crates/ra_ide_db/src/search.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -286,7 +286,7 @@ fn reference_access(def: &Definition, name_ref: &ast::NameRef) -> Option<Referen\n                     }\n                     Some(ReferenceAccess::Read)\n                 },\n-                _ => {None}\n+                _ => None\n             }\n         }\n     });"}, {"sha": "d30458d8651ae1bb028cb1bba8d5625ff56cd61f", "filename": "crates/ra_ide_db/src/symbol_index.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -354,14 +354,14 @@ fn to_symbol(node: &SyntaxNode) -> Option<(SmolStr, SyntaxNodePtr, TextRange)> {\n     }\n     match_ast! {\n         match node {\n-            ast::FnDef(it) => { decl(it) },\n-            ast::StructDef(it) => { decl(it) },\n-            ast::EnumDef(it) => { decl(it) },\n-            ast::TraitDef(it) => { decl(it) },\n-            ast::Module(it) => { decl(it) },\n-            ast::TypeAliasDef(it) => { decl(it) },\n-            ast::ConstDef(it) => { decl(it) },\n-            ast::StaticDef(it) => { decl(it) },\n+            ast::FnDef(it) => decl(it),\n+            ast::StructDef(it) => decl(it),\n+            ast::EnumDef(it) => decl(it),\n+            ast::TraitDef(it) => decl(it),\n+            ast::Module(it) => decl(it),\n+            ast::TypeAliasDef(it) => decl(it),\n+            ast::ConstDef(it) => decl(it),\n+            ast::StaticDef(it) => decl(it),\n             ast::MacroCall(it) => {\n                 if it.is_macro_rules().is_some() {\n                     decl(it)"}, {"sha": "355843b946c9f014bf5facc5197244d18c2dfbd9", "filename": "crates/ra_syntax/src/tests.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Ftests.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -3,7 +3,7 @@ use std::{\n     path::{Component, Path, PathBuf},\n };\n \n-use test_utils::{collect_tests, dir_tests, project_dir, read_text};\n+use test_utils::{collect_rust_files, dir_tests, project_dir, read_text};\n \n use crate::{fuzz, tokenize, SourceFile, SyntaxError, TextRange, TextUnit, Token};\n \n@@ -13,12 +13,12 @@ fn lexer_tests() {\n     // * Add tests for unicode escapes in byte-character and [raw]-byte-string literals\n     // * Add tests for unescape errors\n \n-    dir_tests(&test_data_dir(), &[\"lexer/ok\"], |text, path| {\n+    dir_tests(&test_data_dir(), &[\"lexer/ok\"], \"txt\", |text, path| {\n         let (tokens, errors) = tokenize(text);\n         assert_errors_are_absent(&errors, path);\n         dump_tokens_and_errors(&tokens, &errors, text)\n     });\n-    dir_tests(&test_data_dir(), &[\"lexer/err\"], |text, path| {\n+    dir_tests(&test_data_dir(), &[\"lexer/err\"], \"txt\", |text, path| {\n         let (tokens, errors) = tokenize(text);\n         assert_errors_are_present(&errors, path);\n         dump_tokens_and_errors(&tokens, &errors, text)\n@@ -40,13 +40,13 @@ fn main() {\n \n #[test]\n fn parser_tests() {\n-    dir_tests(&test_data_dir(), &[\"parser/inline/ok\", \"parser/ok\"], |text, path| {\n+    dir_tests(&test_data_dir(), &[\"parser/inline/ok\", \"parser/ok\"], \"rast\", |text, path| {\n         let parse = SourceFile::parse(text);\n         let errors = parse.errors();\n         assert_errors_are_absent(&errors, path);\n         parse.debug_dump()\n     });\n-    dir_tests(&test_data_dir(), &[\"parser/err\", \"parser/inline/err\"], |text, path| {\n+    dir_tests(&test_data_dir(), &[\"parser/err\", \"parser/inline/err\"], \"rast\", |text, path| {\n         let parse = SourceFile::parse(text);\n         let errors = parse.errors();\n         assert_errors_are_present(&errors, path);\n@@ -56,14 +56,14 @@ fn parser_tests() {\n \n #[test]\n fn parser_fuzz_tests() {\n-    for (_, text) in collect_tests(&test_data_dir(), &[\"parser/fuzz-failures\"]) {\n+    for (_, text) in collect_rust_files(&test_data_dir(), &[\"parser/fuzz-failures\"]) {\n         fuzz::check_parser(&text)\n     }\n }\n \n #[test]\n fn reparse_fuzz_tests() {\n-    for (_, text) in collect_tests(&test_data_dir(), &[\"reparse/fuzz-failures\"]) {\n+    for (_, text) in collect_rust_files(&test_data_dir(), &[\"reparse/fuzz-failures\"]) {\n         let check = fuzz::CheckReparse::from_data(text.as_bytes()).unwrap();\n         println!(\"{:?}\", check);\n         check.run();"}, {"sha": "f85b3e61b475aaff54bbf4537571e3813031256d", "filename": "crates/ra_syntax/src/validation.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "patch": "@@ -88,12 +88,12 @@ pub(crate) fn validate(root: &SyntaxNode) -> Vec<SyntaxError> {\n     for node in root.descendants() {\n         match_ast! {\n             match node {\n-                ast::Literal(it) => { validate_literal(it, &mut errors) },\n-                ast::BlockExpr(it) => { block::validate_block_expr(it, &mut errors) },\n-                ast::FieldExpr(it) => { validate_numeric_name(it.name_ref(), &mut errors) },\n-                ast::RecordField(it) => { validate_numeric_name(it.name_ref(), &mut errors) },\n-                ast::Visibility(it) => { validate_visibility(it, &mut errors) },\n-                ast::RangeExpr(it) => { validate_range_expr(it, &mut errors) },\n+                ast::Literal(it) => validate_literal(it, &mut errors),\n+                ast::BlockExpr(it) => block::validate_block_expr(it, &mut errors),\n+                ast::FieldExpr(it) => validate_numeric_name(it.name_ref(), &mut errors),\n+                ast::RecordField(it) => validate_numeric_name(it.name_ref(), &mut errors),\n+                ast::Visibility(it) => validate_visibility(it, &mut errors),\n+                ast::RangeExpr(it) => validate_range_expr(it, &mut errors),\n                 _ => (),\n             }\n         }"}, {"sha": "edcd936b0772a45d746458b8aa0859a2427befe4", "filename": "crates/ra_syntax/test_data/parser/err/0000_struct_field_missing_comma.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0000_struct_field_missing_comma.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0000_struct_field_missing_comma.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0000_struct_field_missing_comma.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0000_struct_field_missing_comma.txt"}, {"sha": "2d653715ea72b5bec41dbeb48ecb9055e0e59b41", "filename": "crates/ra_syntax/test_data/parser/err/0001_item_recovery_in_file.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0001_item_recovery_in_file.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0001_item_recovery_in_file.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0001_item_recovery_in_file.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0001_item_recovery_in_file.txt"}, {"sha": "0026805838c1dbf4636f6ffca3abecf18f2ff53c", "filename": "crates/ra_syntax/test_data/parser/err/0002_duplicate_shebang.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0002_duplicate_shebang.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0002_duplicate_shebang.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0002_duplicate_shebang.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0002_duplicate_shebang.txt"}, {"sha": "8039a8913786c8cd9a1758e9f1398737d81c08b1", "filename": "crates/ra_syntax/test_data/parser/err/0003_C++_semicolon.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0003_C%2B%2B_semicolon.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0003_C%2B%2B_semicolon.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0003_C%2B%2B_semicolon.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0003_C++_semicolon.txt"}, {"sha": "5f6e109869994bbd467d25d282dc7dcf7524d72f", "filename": "crates/ra_syntax/test_data/parser/err/0004_use_path_bad_segment.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0004_use_path_bad_segment.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0004_use_path_bad_segment.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0004_use_path_bad_segment.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0004_use_path_bad_segment.txt"}, {"sha": "cc11421a9a348b1f700d10aef8f7e1a0e270c633", "filename": "crates/ra_syntax/test_data/parser/err/0005_attribute_recover.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0005_attribute_recover.txt"}, {"sha": "84fd928625192ff4c811f24b38bfbb204176bd1b", "filename": "crates/ra_syntax/test_data/parser/err/0006_named_field_recovery.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0006_named_field_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0006_named_field_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0006_named_field_recovery.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0006_named_field_recovery.txt"}, {"sha": "1978f30fa4c7af1b4e834bfd2979f4c4ba88ea10", "filename": "crates/ra_syntax/test_data/parser/err/0007_stray_curly_in_file.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0007_stray_curly_in_file.txt"}, {"sha": "98248227d8dd46cccfd049c4ffefe8ba20b52dd1", "filename": "crates/ra_syntax/test_data/parser/err/0008_item_block_recovery.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0008_item_block_recovery.txt"}, {"sha": "ca508ac7c7ab49c639789776a18744a6fa6aadd9", "filename": "crates/ra_syntax/test_data/parser/err/0009_broken_struct_type_parameter.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0009_broken_struct_type_parameter.txt"}, {"sha": "0ffbd25aa880b6eb12f5aaef1072778f9bcd4382", "filename": "crates/ra_syntax/test_data/parser/err/0010_unsafe_lambda_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0010_unsafe_lambda_block.txt"}, {"sha": "900894dcf94760431bbf1835ac6ee7a11329b515", "filename": "crates/ra_syntax/test_data/parser/err/0011_extern_struct.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0011_extern_struct.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0011_extern_struct.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0011_extern_struct.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0011_extern_struct.txt"}, {"sha": "12ebc2a3a3bf61540e3574b8aad2e6609f5158b8", "filename": "crates/ra_syntax/test_data/parser/err/0012_broken_lambda.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0012_broken_lambda.txt"}, {"sha": "7a934cf6632e501982bb09986e62a5ef3b607fa5", "filename": "crates/ra_syntax/test_data/parser/err/0013_invalid_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0013_invalid_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0013_invalid_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0013_invalid_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0013_invalid_type.txt"}, {"sha": "a25d641b82d46d8cb320b63b1739acd91d1a8b49", "filename": "crates/ra_syntax/test_data/parser/err/0014_where_no_bounds.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0014_where_no_bounds.txt"}, {"sha": "36b848be33fbed53f8dc0a9cb4f051544c2eeb69", "filename": "crates/ra_syntax/test_data/parser/err/0015_curly_in_params.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0015_curly_in_params.txt"}, {"sha": "6343580e00488c7e200f5bbba0a00bc3710ece64", "filename": "crates/ra_syntax/test_data/parser/err/0016_missing_semi.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0016_missing_semi.txt"}, {"sha": "59480e99949fe13512615105bf5634e3bbf7fad5", "filename": "crates/ra_syntax/test_data/parser/err/0017_incomplete_binexpr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0017_incomplete_binexpr.txt"}, {"sha": "4b13a7236344fb09e679c65a708144ddf285f4a9", "filename": "crates/ra_syntax/test_data/parser/err/0018_incomplete_fn.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0018_incomplete_fn.txt"}, {"sha": "97e91a94f5155371b0c8f08fc2c397c13ef81874", "filename": "crates/ra_syntax/test_data/parser/err/0019_let_recover.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0019_let_recover.txt"}, {"sha": "c11dc23f539cb12d7ed439f424bb5ad9546ac6d9", "filename": "crates/ra_syntax/test_data/parser/err/0020_fn_recover.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0020_fn_recover.txt"}, {"sha": "ae04122d88445fca27884472a65e6677ba8a96c8", "filename": "crates/ra_syntax/test_data/parser/err/0021_incomplete_param.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0021_incomplete_param.txt"}, {"sha": "9f50c85e52463d7a4bf2fbcac6bc1171b37985d6", "filename": "crates/ra_syntax/test_data/parser/err/0022_bad_exprs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0022_bad_exprs.txt"}, {"sha": "775e4b0da43b77a8d18142eb06c145b2e6dc96fd", "filename": "crates/ra_syntax/test_data/parser/err/0023_mismatched_paren.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0023_mismatched_paren.txt"}, {"sha": "c5c8a29ba37936907c626948a9ebddcef413ba7f", "filename": "crates/ra_syntax/test_data/parser/err/0024_many_type_parens.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0024_many_type_parens.txt"}, {"sha": "ca7f2d2552bc9a3017e8b0ce3397c1fdaca98c52", "filename": "crates/ra_syntax/test_data/parser/err/0025_nope.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0025_nope.txt"}, {"sha": "f239b7b1e5c348b7f79de9fdeb760b8f3678a299", "filename": "crates/ra_syntax/test_data/parser/err/0026_imp_recovery.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0026_imp_recovery.txt"}, {"sha": "4a28bcabff4b785416de6eef092d9f138fa81353", "filename": "crates/ra_syntax/test_data/parser/err/0027_incomplere_where_for.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0027_incomplere_where_for.txt"}, {"sha": "1778494760f3e5f3ad73f76016670446826d118e", "filename": "crates/ra_syntax/test_data/parser/err/0029_field_completion.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0029_field_completion.txt"}, {"sha": "522a0d0e0c93d84f2299d539272006320c41ea25", "filename": "crates/ra_syntax/test_data/parser/err/0031_block_inner_attrs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0031_block_inner_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0031_block_inner_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0031_block_inner_attrs.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0031_block_inner_attrs.txt"}, {"sha": "c36e2f770c877495c655731ce174c51ba9242e1f", "filename": "crates/ra_syntax/test_data/parser/err/0032_match_arms_inner_attrs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0032_match_arms_inner_attrs.txt"}, {"sha": "e914e688bbe919a7c155646e0452f82667e6b59c", "filename": "crates/ra_syntax/test_data/parser/err/0033_match_arms_outer_attrs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0033_match_arms_outer_attrs.txt"}, {"sha": "2c91b6841fecda88d204eb7842f1ca1ed5e50af4", "filename": "crates/ra_syntax/test_data/parser/err/0034_bad_box_pattern.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0034_bad_box_pattern.txt"}, {"sha": "8cb4ea79637c04c8b42150d4a46e240b663a37b6", "filename": "crates/ra_syntax/test_data/parser/err/0035_use_recover.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0035_use_recover.txt"}, {"sha": "f5490fbe81f3375105328e3173deefec6ddbe1aa", "filename": "crates/ra_syntax/test_data/parser/err/0036_partial_use.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0036_partial_use.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0036_partial_use.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0036_partial_use.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0036_partial_use.txt"}, {"sha": "d8622d45f2b021e6aa3c0ba5ce64817c3113532e", "filename": "crates/ra_syntax/test_data/parser/err/0037_visibility_in_traits.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0037_visibility_in_traits.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0037_visibility_in_traits.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0037_visibility_in_traits.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0037_visibility_in_traits.txt"}, {"sha": "3810b9680a309824016ba1f80b5edc783bec3498", "filename": "crates/ra_syntax/test_data/parser/err/0038_endless_inclusive_range.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0038_endless_inclusive_range.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0038_endless_inclusive_range.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0038_endless_inclusive_range.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0038_endless_inclusive_range.txt"}, {"sha": "4a2f0a6961aad9ea63d3f9cf61a106421effbdd2", "filename": "crates/ra_syntax/test_data/parser/err/0039_lambda_recovery.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/err/0039_lambda_recovery.txt"}, {"sha": "530533b71fe8749e5e16601280895c71c6aefe1e", "filename": "crates/ra_syntax/test_data/parser/inline/err/0001_array_type_missing_semi.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0001_array_type_missing_semi.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0001_array_type_missing_semi.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0001_array_type_missing_semi.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/err/0001_array_type_missing_semi.txt"}, {"sha": "01a853d632ab3bc359775ff01acf42b99e422ebc", "filename": "crates/ra_syntax/test_data/parser/inline/err/0002_misplaced_label_err.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0002_misplaced_label_err.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0002_misplaced_label_err.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0002_misplaced_label_err.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/err/0002_misplaced_label_err.txt"}, {"sha": "2ab29eecc1df2ced787435e9094b8e2e56e6baf3", "filename": "crates/ra_syntax/test_data/parser/inline/err/0003_pointer_type_no_mutability.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0003_pointer_type_no_mutability.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0003_pointer_type_no_mutability.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0003_pointer_type_no_mutability.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/err/0003_pointer_type_no_mutability.txt"}, {"sha": "124f0a8919e3cf720a127e7a9348fe0add3f81cc", "filename": "crates/ra_syntax/test_data/parser/inline/err/0004_impl_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0004_impl_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0004_impl_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0004_impl_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/err/0004_impl_type.txt"}, {"sha": "9e9186ad450efb4a8c026ec9c80a897e4c935dd3", "filename": "crates/ra_syntax/test_data/parser/inline/err/0005_fn_pointer_type_missing_fn.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0005_fn_pointer_type_missing_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0005_fn_pointer_type_missing_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0005_fn_pointer_type_missing_fn.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/err/0005_fn_pointer_type_missing_fn.txt"}, {"sha": "690acdca35bda82917e31c34a3105629871fddaf", "filename": "crates/ra_syntax/test_data/parser/inline/err/0006_unsafe_block_in_mod.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0006_unsafe_block_in_mod.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0006_unsafe_block_in_mod.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0006_unsafe_block_in_mod.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/err/0006_unsafe_block_in_mod.txt"}, {"sha": "a4002a998d0b429ee1fd31c3c5db6f418cb7ac04", "filename": "crates/ra_syntax/test_data/parser/inline/err/0007_async_without_semicolon.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0007_async_without_semicolon.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0007_async_without_semicolon.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0007_async_without_semicolon.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/err/0007_async_without_semicolon.txt"}, {"sha": "6f45a4fa6e8938cf57174128d6867cd66fa32c5b", "filename": "crates/ra_syntax/test_data/parser/inline/err/0008_pub_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0008_pub_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0008_pub_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0008_pub_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/err/0008_pub_expr.txt"}, {"sha": "e6d3a5c953d729ccd65f0d4f7201068940f1ccae", "filename": "crates/ra_syntax/test_data/parser/inline/err/0009_attr_on_expr_not_allowed.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0009_attr_on_expr_not_allowed.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0009_attr_on_expr_not_allowed.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0009_attr_on_expr_not_allowed.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/err/0009_attr_on_expr_not_allowed.txt"}, {"sha": "8ad2a588f3845f2bf96d470aa2722d2283cbb860", "filename": "crates/ra_syntax/test_data/parser/inline/err/0010_bad_tuple_index_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_bad_tuple_index_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_bad_tuple_index_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_bad_tuple_index_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/err/0010_bad_tuple_index_expr.txt"}, {"sha": "f6ac0feaf50dc79c64a6c52556b998c9171bd07f", "filename": "crates/ra_syntax/test_data/parser/inline/err/0010_wrong_order_fns.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/err/0010_wrong_order_fns.txt"}, {"sha": "5b3dc5af27d431ec1af42cd0c83f13ce31436243", "filename": "crates/ra_syntax/test_data/parser/inline/err/0013_static_underscore.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0013_static_underscore.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0013_static_underscore.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0013_static_underscore.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/err/0013_static_underscore.txt"}, {"sha": "25d80be1d2e30c23143656ff50191f7f6e8c2850", "filename": "crates/ra_syntax/test_data/parser/inline/err/0014_default_fn_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/err/0014_default_fn_type.txt"}, {"sha": "ad9f0965ea1beb7f475507e78be1e8152b5f08f3", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0001_trait_item_list.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0001_trait_item_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0001_trait_item_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0001_trait_item_list.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0001_trait_item_list.txt"}, {"sha": "1b318dfb9a42f9b78dd2f1ab319aaf9179af8f85", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0002_use_tree_list.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0002_use_tree_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0002_use_tree_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0002_use_tree_list.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0002_use_tree_list.txt"}, {"sha": "e3f5a7f0410c7d1111398b016cf909b8f43928ec", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0003_where_pred_for.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0003_where_pred_for.txt"}, {"sha": "9241f6fb2bcf1f0380467b1d53c0bf19feaec699", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0004_value_parameters_no_patterns.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0004_value_parameters_no_patterns.txt"}, {"sha": "8ae7909f993aa5b728dbad11273c8373d1ef6e88", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0005_function_type_params.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0005_function_type_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0005_function_type_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0005_function_type_params.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0005_function_type_params.txt"}, {"sha": "757ac092a00b5e6f93cdae2a696a8d23d998d931", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0006_self_param.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0006_self_param.txt"}, {"sha": "a7186c7a8a15142368614f6bf650fc59837bf8b5", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0007_type_param_bounds.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0007_type_param_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0007_type_param_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0007_type_param_bounds.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0007_type_param_bounds.txt"}, {"sha": "3812adc9ec4330b468b7928ed6ca28fdda9fa5c0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0008_path_part.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0008_path_part.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0008_path_part.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0008_path_part.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0008_path_part.txt"}, {"sha": "2d8872022236f07d959d49643ef871acc147f69d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0009_loop_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0009_loop_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0009_loop_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0009_loop_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0009_loop_expr.txt"}, {"sha": "506f56fffd49f766cae3b2d660d13ca19aa2a5d6", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0010_extern_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0010_extern_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0010_extern_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0010_extern_block.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0010_extern_block.txt"}, {"sha": "29b268b5551bdccbfaa31b925e278177e38ff49a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0011_field_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0011_field_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0011_field_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0011_field_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0011_field_expr.txt"}, {"sha": "da04dac5cc4771695a85adf66c3de8b3312dd6c4", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0012_type_item_where_clause.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0012_type_item_where_clause.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0012_type_item_where_clause.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0012_type_item_where_clause.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0012_type_item_where_clause.txt"}, {"sha": "c05f873d66eb353f7edfb01c5b4af9c4641e4402", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0013_pointer_type_mut.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0013_pointer_type_mut.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0013_pointer_type_mut.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0013_pointer_type_mut.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0013_pointer_type_mut.txt"}, {"sha": "ac53e4fd30c3a64a9ee28c9fba65797a487d3491", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0014_never_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0014_never_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0014_never_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0014_never_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0014_never_type.txt"}, {"sha": "c051c1c8688229ecd5bbb5adad72bcfa2e647d79", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0015_continue_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0015_continue_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0015_continue_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0015_continue_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0015_continue_expr.txt"}, {"sha": "7b43f1294b8c7208487ab6e1fd6b38ced4d9696b", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0016_unsafe_trait.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0016_unsafe_trait.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0016_unsafe_trait.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0016_unsafe_trait.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0016_unsafe_trait.txt"}, {"sha": "b4055c9f02e07e65cc9a50c6277d11308a313931", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0017_array_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0017_array_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0017_array_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0017_array_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0017_array_type.txt"}, {"sha": "89caee54337a694199e407e614c4764f40471dbf", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0018_arb_self_types.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0018_arb_self_types.txt"}, {"sha": "2d71efd86fff1a5c7c5686ee3bd5b0e0ee4ea318", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0019_unary_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0019_unary_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0019_unary_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0019_unary_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0019_unary_expr.txt"}, {"sha": "dd2095d90453c9e8eefac20fbf89e04166c3adef", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0020_use_star.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0020_use_star.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0020_use_star.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0020_use_star.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0020_use_star.txt"}, {"sha": "b1af679760e77ebd2cce71377b441759b20ad0c0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0021_impl_item_list.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0021_impl_item_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0021_impl_item_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0021_impl_item_list.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0021_impl_item_list.txt"}, {"sha": "891943f6e6c2f9fd937bd1996f8a56d522dea519", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0022_crate_visibility.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0022_crate_visibility.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0022_crate_visibility.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0022_crate_visibility.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0022_crate_visibility.txt"}, {"sha": "0f32aec9e071af5c3f0155b3ac5959329980555e", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0023_placeholder_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0023_placeholder_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0023_placeholder_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0023_placeholder_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0023_placeholder_type.txt"}, {"sha": "48aaeaf072494872eaa78f4e264b984e972cd402", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0024_slice_pat.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0024_slice_pat.txt"}, {"sha": "b3a24281e47732e3e900b0ab73f34cc415c4e9ec", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0025_slice_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0025_slice_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0025_slice_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0025_slice_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0025_slice_type.txt"}, {"sha": "666386d31ab869cb3cf907dce0d74dabe4829c22", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0026_tuple_pat_fields.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0026_tuple_pat_fields.txt"}, {"sha": "0f1a367f7b0ff9ae4b8101535b2f447684980198", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0027_ref_pat.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0027_ref_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0027_ref_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0027_ref_pat.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0027_ref_pat.txt"}, {"sha": "f07027fa70c2ee8f9c2c58c88ad9fcf2198565fa", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0028_impl_trait_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0028_impl_trait_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0028_impl_trait_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0028_impl_trait_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0028_impl_trait_type.txt"}, {"sha": "b17a2c25754b3e25aa2504f9e70eb5f2b1208d69", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0029_cast_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0029_cast_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0029_cast_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0029_cast_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0029_cast_expr.txt"}, {"sha": "6fd49c7bc629e8805a8a1eec1cc0355915d444cf", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0030_cond.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0030_cond.txt"}, {"sha": "a6e14a1141a0e1919522cec7b685b61b087fa9d0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0031_while_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0031_while_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0031_while_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0031_while_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0031_while_expr.txt"}, {"sha": "4c17f0db81c811ede75ad655c35ef5a15d1bca5f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0032_fn_pointer_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0032_fn_pointer_type.txt"}, {"sha": "7642ea6591b0b7520482c478b7914d10d92c402a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0033_reference_type;.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0033_reference_type;.txt"}, {"sha": "67ffdfd679b49061f910eb5479ae4ed8a737edd7", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0034_break_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0034_break_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0034_break_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0034_break_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0034_break_expr.txt"}, {"sha": "a7dfe167c15eedada0ddb80ac77370e1c1e5c8a8", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0036_unsafe_extern_fn.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0036_unsafe_extern_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0036_unsafe_extern_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0036_unsafe_extern_fn.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0036_unsafe_extern_fn.txt"}, {"sha": "6e226de4b767cc84cb7b734bfe3963eae5366611", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0037_qual_paths.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0037_qual_paths.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0037_qual_paths.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0037_qual_paths.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0037_qual_paths.txt"}, {"sha": "042cee8798bd4467b8f993ba7a2cbe8b22146d39", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0038_full_range_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0038_full_range_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0038_full_range_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0038_full_range_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0038_full_range_expr.txt"}, {"sha": "025faf5cae95a2790aec4bf0482ba808a26d5a09", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0039_type_arg.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0039_type_arg.txt"}, {"sha": "d180fcf20b71961e8b53d462ee250f31a80b8a52", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0040_crate_keyword_vis.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0040_crate_keyword_vis.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0040_crate_keyword_vis.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0040_crate_keyword_vis.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0040_crate_keyword_vis.txt"}, {"sha": "5783617156c9d578c912c05b1c95bf2e9faef8bc", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0041_trait_item.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0041_trait_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0041_trait_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0041_trait_item.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0041_trait_item.txt"}, {"sha": "e8003bf91d1f50e59cbba986a9bb4f9f1b4bb96f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0042_call_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0042_call_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0042_call_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0042_call_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0042_call_expr.txt"}, {"sha": "18d8a151fda0c1f47d8a86fd71c8c1cfe596bd42", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0043_use_alias.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0043_use_alias.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0043_use_alias.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0043_use_alias.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0043_use_alias.txt"}, {"sha": "e75d569f0018c2ae9bff4358fb19eb044915c28c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0044_block_items.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0044_block_items.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0044_block_items.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0044_block_items.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0044_block_items.txt"}, {"sha": "33886154dd401bc2db7020d0fc91d3c2b513b504", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0045_param_list_opt_patterns.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0045_param_list_opt_patterns.txt"}, {"sha": "c7b4e614d28df7b4a9dac5b6926ca7797819e7bf", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0046_singleton_tuple_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0046_singleton_tuple_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0046_singleton_tuple_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0046_singleton_tuple_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0046_singleton_tuple_type.txt"}, {"sha": "0a768a8e3ea7fa8122bd5fadf29593d15761c5ce", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0047_unsafe_default_impl.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0047_unsafe_default_impl.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0047_unsafe_default_impl.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0047_unsafe_default_impl.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0047_unsafe_default_impl.txt"}, {"sha": "02f2a9db6c3a6acb74a72e33666e170a8328cad7", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0048_path_type_with_bounds.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0048_path_type_with_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0048_path_type_with_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0048_path_type_with_bounds.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0048_path_type_with_bounds.txt"}, {"sha": "19f961e29d665c88ec9e232df060c45f1910bee1", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0050_fn_decl.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0050_fn_decl.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0050_fn_decl.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0050_fn_decl.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0050_fn_decl.txt"}, {"sha": "6a469f8aa8d551ca6633a5152df41250c2238cf2", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0051_unit_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0051_unit_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0051_unit_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0051_unit_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0051_unit_type.txt"}, {"sha": "ee55ee219caac74390cf2a2cf9dbb5babef9e321", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0052_path_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0052_path_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0052_path_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0052_path_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0052_path_type.txt"}, {"sha": "f1018fcab5e5e330de46cee16d860a815bd2dbbb", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0053_path_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0053_path_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0053_path_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0053_path_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0053_path_expr.txt"}, {"sha": "731c31f7639372798a0eedce43ec421afc15cc65", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0054_record_field_attrs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0054_record_field_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0054_record_field_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0054_record_field_attrs.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0054_record_field_attrs.txt"}, {"sha": "2b28cec67286f4cd0b82fa4bf879c4173b23835b", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0055_literal_pattern.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0055_literal_pattern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0055_literal_pattern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0055_literal_pattern.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0055_literal_pattern.txt"}, {"sha": "9a9a13370e4f7b32faa0976f9ee1fd148745021f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0056_where_clause.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0056_where_clause.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0056_where_clause.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0056_where_clause.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0056_where_clause.txt"}, {"sha": "9788197beadc8b6e9801e56a874bd7c85280f49d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0057_const_fn.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0057_const_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0057_const_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0057_const_fn.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0057_const_fn.txt"}, {"sha": "3d659ce101f4919dc6cc42202c9fe7e86935d345", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0058_range_pat.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0058_range_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0058_range_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0058_range_pat.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0058_range_pat.txt"}, {"sha": "efcd89c4c3470bd28b6f2e784f7d9894628b3245", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0059_match_arms_commas.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0059_match_arms_commas.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0059_match_arms_commas.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0059_match_arms_commas.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0059_match_arms_commas.txt"}, {"sha": "7667201ba3867bde3ac76839ce4fa3c20490273c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0060_extern_crate.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0060_extern_crate.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0060_extern_crate.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0060_extern_crate.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0060_extern_crate.txt"}, {"sha": "dcf52763976e4d879a2834505c6cc6ac9cd2524f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0061_record_lit.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_record_lit.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_record_lit.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_record_lit.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0061_record_lit.txt"}, {"sha": "6b528c25223e279101b37088ad30fd433731e266", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0062_mod_contents.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0062_mod_contents.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0062_mod_contents.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0062_mod_contents.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0062_mod_contents.txt"}, {"sha": "0cc3ac08508d52610872d489af12ac9de7f2b19e", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0063_impl_def_neg.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0063_impl_def_neg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0063_impl_def_neg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0063_impl_def_neg.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0063_impl_def_neg.txt"}, {"sha": "2ace3c8ee30ff248fbb7989d40beed88e8a05de9", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0064_if_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0064_if_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0064_if_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0064_if_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0064_if_expr.txt"}, {"sha": "2ee0dc199c31602f01e7ffefa422ad160c743fec", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0065_dyn_trait_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0065_dyn_trait_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0065_dyn_trait_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0065_dyn_trait_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0065_dyn_trait_type.txt"}, {"sha": "2f07af4e19780e155a35ab4f574fe270eb8b839b", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0066_match_arm.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0066_match_arm.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0066_match_arm.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0066_match_arm.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0066_match_arm.txt"}, {"sha": "f2ba4e9096898678516f419acd8632fd924e10cf", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0067_crate_path.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0067_crate_path.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0067_crate_path.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0067_crate_path.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0067_crate_path.txt"}, {"sha": "9d798268463d1d959cb93f520225865380b5e917", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0068_union_items.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0068_union_items.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0068_union_items.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0068_union_items.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0068_union_items.txt"}, {"sha": "86afc93625d6d7fd2a1a06b2350fa4180c5a6a1d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0069_use_tree_list_after_path.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0069_use_tree_list_after_path.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0069_use_tree_list_after_path.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0069_use_tree_list_after_path.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0069_use_tree_list_after_path.txt"}, {"sha": "cd63d10f7684e86be29809122ab2fa5e426ea38f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0070_stmt_bin_expr_ambiguity.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0070_stmt_bin_expr_ambiguity.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0070_stmt_bin_expr_ambiguity.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0070_stmt_bin_expr_ambiguity.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0070_stmt_bin_expr_ambiguity.txt"}, {"sha": "0af668056a98a3227daa9e08dfe704fd4f772d2b", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0071_match_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0071_match_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0071_match_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0071_match_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0071_match_expr.txt"}, {"sha": "4a83a7200ba666877a3296bb5acbbdc738ef9ad0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0072_return_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0072_return_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0072_return_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0072_return_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0072_return_expr.txt"}, {"sha": "2dd6db28f914f6e10060293ca66ff100e2310669", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0073_type_item_type_params.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0073_type_item_type_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0073_type_item_type_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0073_type_item_type_params.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0073_type_item_type_params.txt"}, {"sha": "cbd2d5fbf4621b06fa38b0de13ec2a8652ddd997", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0074_stmt_postfix_expr_ambiguity.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0074_stmt_postfix_expr_ambiguity.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0074_stmt_postfix_expr_ambiguity.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0074_stmt_postfix_expr_ambiguity.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0074_stmt_postfix_expr_ambiguity.txt"}, {"sha": "28d1bad97a8cade385bb72b80aceb4af7c041214", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0075_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0075_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0075_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0075_block.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0075_block.txt"}, {"sha": "8e4b63f024a034d633aad2e9362f7c9a4dde7d43", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0076_function_where_clause.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0076_function_where_clause.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0076_function_where_clause.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0076_function_where_clause.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0076_function_where_clause.txt"}, {"sha": "18ccfe9efc9e0a3e9bedcdceb1e3de4a8749e635", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0077_try_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0077_try_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0077_try_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0077_try_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0077_try_expr.txt"}, {"sha": "4bc0b18580c6c2a8c5b04650edff23b0257118ff", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0078_type_item.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0078_type_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0078_type_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0078_type_item.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0078_type_item.txt"}, {"sha": "4c2863ba72c464697b823ef023061b3327a66ba1", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0079_impl_def.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_def.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_def.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_def.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0079_impl_def.txt"}, {"sha": "9f8a6b0f6e962827ad7004699009c34394676510", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0080_postfix_range.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0080_postfix_range.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0080_postfix_range.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0080_postfix_range.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0080_postfix_range.txt"}, {"sha": "b1353c2c664c6869b4497a95b40f07211139ef29", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0081_for_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0081_for_type.txt"}, {"sha": "8f34afe768ebb9b30ca748eae1af4a9a67539920", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0082_ref_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0082_ref_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0082_ref_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0082_ref_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0082_ref_expr.txt"}, {"sha": "e909f2b78561009b91478f3726f653dbf93ad664", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0083_struct_items.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0083_struct_items.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0083_struct_items.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0083_struct_items.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0083_struct_items.txt"}, {"sha": "c0cf48af59067caa85b24a89975be760a71ed517", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0084_paren_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0084_paren_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0084_paren_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0084_paren_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0084_paren_type.txt"}, {"sha": "2903c6f9aa0c98a0b72ad5341ede99c6f4b05622", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0085_expr_literals.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0085_expr_literals.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0085_expr_literals.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0085_expr_literals.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0085_expr_literals.txt"}, {"sha": "ca1a97161fb23bdf5c34e4769ccff02b6ed2d351", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0086_function_ret_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0086_function_ret_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0086_function_ret_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0086_function_ret_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0086_function_ret_type.txt"}, {"sha": "e614acc6faa486b71add74d37f1a35fcde1afb67", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0087_unsafe_impl.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0087_unsafe_impl.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0087_unsafe_impl.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0087_unsafe_impl.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0087_unsafe_impl.txt"}, {"sha": "b23f43b4627d73653f50b4744b740ba0d8a5eddb", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0088_break_ambiguity.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0088_break_ambiguity.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0088_break_ambiguity.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0088_break_ambiguity.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0088_break_ambiguity.txt"}, {"sha": "b494f6c59b898b8c748dc5c72a521287123be1c0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0089_extern_fn.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0089_extern_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0089_extern_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0089_extern_fn.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0089_extern_fn.txt"}, {"sha": "8d2579cd68671fdf20ecfdd5153ea88413c0047c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0090_type_param_default.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0090_type_param_default.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0090_type_param_default.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0090_type_param_default.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0090_type_param_default.txt"}, {"sha": "7093c2b1f85eea72c3506f0a757d330d33229b72", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0091_auto_trait.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0091_auto_trait.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0091_auto_trait.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0091_auto_trait.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0091_auto_trait.txt"}, {"sha": "fae822367b12ae539595e1053e49bebfd319633c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0092_fn_pointer_type_with_ret.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0092_fn_pointer_type_with_ret.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0092_fn_pointer_type_with_ret.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0092_fn_pointer_type_with_ret.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0092_fn_pointer_type_with_ret.txt"}, {"sha": "1a979e5972e101d86ff9816f06d5427ea443c453", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0093_index_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0093_index_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0093_index_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0093_index_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0093_index_expr.txt"}, {"sha": "3da3beaf4aa93ad2db0b839f46495de218601ead", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0094_unsafe_auto_trait.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0094_unsafe_auto_trait.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0094_unsafe_auto_trait.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0094_unsafe_auto_trait.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0094_unsafe_auto_trait.txt"}, {"sha": "fe86894a97ed11c787d4ac29a4d8f1951d0fd256", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0095_placeholder_pat.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0095_placeholder_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0095_placeholder_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0095_placeholder_pat.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0095_placeholder_pat.txt"}, {"sha": "157aa29f5e0ceaa465909770b6521b5254957695", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0096_no_semi_after_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0096_no_semi_after_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0096_no_semi_after_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0096_no_semi_after_block.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0096_no_semi_after_block.txt"}, {"sha": "af9077270154ac09f25bbfaf9f5447a8110397e6", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0097_default_impl.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0097_default_impl.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0097_default_impl.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0097_default_impl.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0097_default_impl.txt"}, {"sha": "072dc9d168a79bad2fce802b0ab76c5866231ec7", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0098_const_unsafe_fn.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0098_const_unsafe_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0098_const_unsafe_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0098_const_unsafe_fn.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0098_const_unsafe_fn.txt"}, {"sha": "ed57a9eea9f829b1ac04424a8a8ae319af96c012", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0099_param_list.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0099_param_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0099_param_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0099_param_list.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0099_param_list.txt"}, {"sha": "83c58d25f8fbcb5b67b0d139b70abf2cfd04f434", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0100_for_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0100_for_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0100_for_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0100_for_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0100_for_expr.txt"}, {"sha": "b7979fbf5ce62b044cab55244f87ef7258ea01b4", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0101_unsafe_fn.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0101_unsafe_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0101_unsafe_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0101_unsafe_fn.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0101_unsafe_fn.txt"}, {"sha": "d8e04bd9027f00a0e09fcb4e1f333881b1817bdb", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0102_record_field_pat_list.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0102_record_field_pat_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0102_record_field_pat_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0102_record_field_pat_list.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0102_record_field_pat_list.txt"}, {"sha": "0db62a1f516336c3f68c1eddae00c5e85f885e47", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0103_array_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0103_array_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0103_array_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0103_array_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0103_array_expr.txt"}, {"sha": "a983d5954b59118acf92180fb31cb1154852d973", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0104_path_fn_trait_args.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0104_path_fn_trait_args.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0104_path_fn_trait_args.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0104_path_fn_trait_args.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0104_path_fn_trait_args.txt"}, {"sha": "6bce37a4fcc3e24f7e1a5eaa7aa291e7e872ea92", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0105_block_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0105_block_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0105_block_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0105_block_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0105_block_expr.txt"}, {"sha": "0216123f0f200ef5ad302351493b75a311e69ab3", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0106_lambda_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0106_lambda_expr.txt"}, {"sha": "ba478528cc832555835900c030232c7c6f630e52", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0107_method_call_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0107_method_call_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0107_method_call_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0107_method_call_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0107_method_call_expr.txt"}, {"sha": "6f685ca8d0fab446d0fa360db91ae91e70cc216d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0108_tuple_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0108_tuple_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0108_tuple_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0108_tuple_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0108_tuple_expr.txt"}, {"sha": "3376a90cb908c4958081c13567056454c0055fd3", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0109_label.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0109_label.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0109_label.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0109_label.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0109_label.txt"}, {"sha": "7dbcd39278f208cb4db8cee302f72d92ad456d29", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0110_use_path.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0110_use_path.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0110_use_path.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0110_use_path.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0110_use_path.txt"}, {"sha": "4680c267e7e3d71a085da71c909633d7a6b4fd53", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0111_tuple_pat.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0111_tuple_pat.txt"}, {"sha": "ad1d47b0e37ae7e250a70359deedc58653bb6cfe", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0112_bind_pat.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0112_bind_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0112_bind_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0112_bind_pat.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0112_bind_pat.txt"}, {"sha": "5db1ff2af6b12df386ec1382f5477f97f02d03bd", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0113_nocontentexpr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0113_nocontentexpr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0113_nocontentexpr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0113_nocontentexpr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0113_nocontentexpr.txt"}, {"sha": "f5de0140587885d8d7eb21359714fa8d1b463653", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0114_tuple_struct_where.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0114_tuple_struct_where.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0114_tuple_struct_where.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0114_tuple_struct_where.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0114_tuple_struct_where.txt"}, {"sha": "8fe15d8e23c20d949ede1935e6b58de8f33bcbda", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0115_tuple_field_attrs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0115_tuple_field_attrs.txt"}, {"sha": "892dc813af428a4f45e1a4ca7c6d8c488ceaaf2a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0117_macro_call_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0117_macro_call_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0117_macro_call_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0117_macro_call_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0117_macro_call_type.txt"}, {"sha": "5053ebde73b901ef212851c1c39cebe503485e45", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0118_impl_inner_attributes.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_impl_inner_attributes.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_impl_inner_attributes.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_impl_inner_attributes.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0118_impl_inner_attributes.txt"}, {"sha": "852e4e489a2a9e1e12428bb8ddf95131a3f9cd37", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0118_match_guard.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_match_guard.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_match_guard.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_match_guard.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0118_match_guard.txt"}, {"sha": "640e0640f47e45b31fe84f8d0f7ff8556d74c1f4", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0120_match_arms_inner_attribute.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0120_match_arms_inner_attribute.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0120_match_arms_inner_attribute.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0120_match_arms_inner_attribute.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0120_match_arms_inner_attribute.txt"}, {"sha": "ff380b448608f24ac692806e0cb9f262bfe973ba", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0121_match_arms_outer_attributes.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0121_match_arms_outer_attributes.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0121_match_arms_outer_attributes.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0121_match_arms_outer_attributes.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0121_match_arms_outer_attributes.txt"}, {"sha": "a73ff9c904bec214ed616e4866c38237071d1ad4", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0122_generic_lifetime_type_attribute.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0122_generic_lifetime_type_attribute.txt"}, {"sha": "6c3b17868c9095e6fb60d1b12fd9359f2385c1c9", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0123_param_list_vararg.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0123_param_list_vararg.txt"}, {"sha": "9c4bd7f11d4ed916231fe81617cd44a4f62c51cc", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0124_async_fn.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0124_async_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0124_async_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0124_async_fn.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0124_async_fn.txt"}, {"sha": "6a9f3bf726731202522bc3fcec0709922a330cd1", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0125_crate_keyword_path.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0125_crate_keyword_path.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0125_crate_keyword_path.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0125_crate_keyword_path.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0125_crate_keyword_path.txt"}, {"sha": "a36c3df0efa4195b640a248af311b317364934f7", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0125_record_literal_field_with_attr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0125_record_literal_field_with_attr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0125_record_literal_field_with_attr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0125_record_literal_field_with_attr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0125_record_literal_field_with_attr.txt"}, {"sha": "5c311d18a4c7d75f9d3316f82c8b23d790d5336f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0126_attr_on_expr_stmt.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0126_attr_on_expr_stmt.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0126_attr_on_expr_stmt.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0126_attr_on_expr_stmt.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0126_attr_on_expr_stmt.txt"}, {"sha": "21f49690a2e816f1aed23ffe2958c085b59995f7", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0127_attr_on_last_expr_in_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0127_attr_on_last_expr_in_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0127_attr_on_last_expr_in_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0127_attr_on_last_expr_in_block.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0127_attr_on_last_expr_in_block.txt"}, {"sha": "8a972cdb25fd0c4cbaa5c0e13cceaba6cab41202", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0128_combined_fns.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0128_combined_fns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0128_combined_fns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0128_combined_fns.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0128_combined_fns.txt"}, {"sha": "36d8f4a5f5cc4bb7e59c878cc42884c289a2995c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0129_marco_pat.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0129_marco_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0129_marco_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0129_marco_pat.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0129_marco_pat.txt"}, {"sha": "17739dfbd99b561bc9ba595c0ce31a1d26b7a18f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0130_let_stmt.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_let_stmt.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_let_stmt.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_let_stmt.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0130_let_stmt.txt"}, {"sha": "d6df1aba2a89d6ad6e96fac6e1a9e5837798eed7", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0130_try_block_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_try_block_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_try_block_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_try_block_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0130_try_block_expr.txt"}, {"sha": "6bfac985a9b62ab35afb861f7c7f148fa26bac51", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0131_existential_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0131_existential_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0131_existential_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0131_existential_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0131_existential_type.txt"}, {"sha": "12294210e1008a64c3096e663696c14590e7a8b0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0132_box_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_box_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_box_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_box_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0132_box_expr.txt"}, {"sha": "e1734224b38b9617469fb715cec38b0ba5ee3c91", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0132_default_fn_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_default_fn_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_default_fn_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_default_fn_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0132_default_fn_type.txt"}, {"sha": "14655d332c3ff97adf2683aa74a386b957a167a1", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0134_nocontentexpr_after_item.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0134_nocontentexpr_after_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0134_nocontentexpr_after_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0134_nocontentexpr_after_item.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0134_nocontentexpr_after_item.txt"}, {"sha": "a6ac0dbd8a576693e0dbf1a521fa16c9c90e6e2a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0137_await_expr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0137_await_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0137_await_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0137_await_expr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0137_await_expr.txt"}, {"sha": "d18096b47fbbf68d6f13c81414b47019523f4489", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0138_associated_type_bounds.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_associated_type_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_associated_type_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_associated_type_bounds.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0138_associated_type_bounds.txt"}, {"sha": "df4c0414946a4843700db63db99b7c5dc623bf78", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0138_expression_after_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_expression_after_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_expression_after_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_expression_after_block.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0138_expression_after_block.txt"}, {"sha": "e627b9746ebfbf7b0d2ae98d8e5bc7d578fbcb92", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0138_self_param_outer_attr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_self_param_outer_attr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_self_param_outer_attr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_self_param_outer_attr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0138_self_param_outer_attr.txt"}, {"sha": "cf202c94b78c2704e22c2e2808df3b37ba9ce328", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0139_param_outer_arg.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0139_param_outer_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0139_param_outer_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0139_param_outer_arg.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0139_param_outer_arg.txt"}, {"sha": "eec1cba1e75a1fae577e848b5cfccbecf1773298", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0142_for_range_from.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0142_for_range_from.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0142_for_range_from.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0142_for_range_from.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0142_for_range_from.txt"}, {"sha": "4d2048711cdef74ffa6864d82a24d6b806048596", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0143_box_pat.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0143_box_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0143_box_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0143_box_pat.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0143_box_pat.txt"}, {"sha": "325b1bd08167ae56693eeda6cee5fcbef59a7c62", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0144_dot_dot_pat.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0144_dot_dot_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0144_dot_dot_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0144_dot_dot_pat.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0144_dot_dot_pat.txt"}, {"sha": "06fbdfabf19caf882c2733cbcabbce9b3c915105", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0145_record_field_pat.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0145_record_field_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0145_record_field_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0145_record_field_pat.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0145_record_field_pat.txt"}, {"sha": "9e3767fb75de4d68e3b11e248e3666fdb2a55502", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0146_as_precedence.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0146_as_precedence.txt"}, {"sha": "f81de7bac7caf79b47da46489e25e8e81086390a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0147_const_param.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0147_const_param.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0147_const_param.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0147_const_param.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0147_const_param.txt"}, {"sha": "3556099bd0943d617d5317d9125b5001b5e1bec0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0147_macro_def.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0147_macro_def.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0147_macro_def.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0147_macro_def.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0147_macro_def.txt"}, {"sha": "cfd79d9c26fbfa784e58d310e6656a130baebafc", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0148_pub_macro_def.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0148_pub_macro_def.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0148_pub_macro_def.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0148_pub_macro_def.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0148_pub_macro_def.txt"}, {"sha": "78e296f8804daf85c6da59afc27daaec9fea67e8", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0150_array_attrs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0150_array_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0150_array_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0150_array_attrs.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0150_array_attrs.txt"}, {"sha": "2d46eebb3d2ecef7ea4ef921273921c24813c814", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0150_impl_type_params.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0150_impl_type_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0150_impl_type_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0150_impl_type_params.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0150_impl_type_params.txt"}, {"sha": "de1536ef0fccd75df8d82223c127bb2344a3fbc7", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0151_trait_alias.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0151_trait_alias.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0151_trait_alias.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0151_trait_alias.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0151_trait_alias.txt"}, {"sha": "8092d700991a27a46009ff7bc33e84c1ce30bcae", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0152_arg_with_attr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_arg_with_attr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_arg_with_attr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_arg_with_attr.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0152_arg_with_attr.txt"}, {"sha": "cb686854adca1c95afd863fd7c646f54d8b21068", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0154_fn_pointer_param_ident_path.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_fn_pointer_param_ident_path.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_fn_pointer_param_ident_path.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_fn_pointer_param_ident_path.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0154_fn_pointer_param_ident_path.txt"}, {"sha": "98727ae981f97894fae441d15ff21b754c3d96d5", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0155_closure_params.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0155_closure_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0155_closure_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0155_closure_params.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0155_closure_params.txt"}, {"sha": "103e254a62b20e57dd9ed728ad54ea3ee1239e9f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0156_fn_def_param.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0156_fn_def_param.txt"}, {"sha": "3a196d3c030a691ac910a9d526815ad41a6d7996", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0156_or_pattern.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_or_pattern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_or_pattern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_or_pattern.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0156_or_pattern.txt"}, {"sha": "52d8f21a471e5cd1377b1f6cc8e8d80d3d9a8be0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0157_fn_pointer_unnamed_arg.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0157_fn_pointer_unnamed_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0157_fn_pointer_unnamed_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0157_fn_pointer_unnamed_arg.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0157_fn_pointer_unnamed_arg.txt"}, {"sha": "a378dd80b7cc52d838ea8170a2e550ca2150a871", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0157_variant_discriminant.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0157_variant_discriminant.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0157_variant_discriminant.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0157_variant_discriminant.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0157_variant_discriminant.txt"}, {"sha": "d568a1d457b268393c7f14c126c1d5f270e62bc6", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0158_binop_resets_statementness.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_binop_resets_statementness.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_binop_resets_statementness.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_binop_resets_statementness.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0158_binop_resets_statementness.txt"}, {"sha": "ba8779094f7d7c93d425bc5202137361dde5b3f8", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0158_lambda_ret_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_lambda_ret_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_lambda_ret_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_lambda_ret_block.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0158_lambda_ret_block.txt"}, {"sha": "08f5a942f762f6729e34119e154749165553bace", "filename": "crates/ra_syntax/test_data/parser/ok/0000_empty.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0000_empty.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0000_empty.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0000_empty.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0000_empty.txt"}, {"sha": "fdc2d676895d4630ceb406d85f7a332e3a2bbe95", "filename": "crates/ra_syntax/test_data/parser/ok/0001_struct_item.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0001_struct_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0001_struct_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0001_struct_item.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0001_struct_item.txt"}, {"sha": "ef34702fd0d44458e096da446a5aa5509437be8f", "filename": "crates/ra_syntax/test_data/parser/ok/0002_struct_item_field.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0002_struct_item_field.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0002_struct_item_field.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0002_struct_item_field.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0002_struct_item_field.txt"}, {"sha": "e3915c2df90a3855a57eeb178f215e45e0c6bcd2", "filename": "crates/ra_syntax/test_data/parser/ok/0004_file_shebang.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0004_file_shebang.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0004_file_shebang.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0004_file_shebang.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0004_file_shebang.txt"}, {"sha": "955b789b5015ff9a9e87b304850480106fa10f80", "filename": "crates/ra_syntax/test_data/parser/ok/0005_fn_item.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0005_fn_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0005_fn_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0005_fn_item.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0005_fn_item.txt"}, {"sha": "d72b725610891ae0a591ae368672433365dbacc0", "filename": "crates/ra_syntax/test_data/parser/ok/0006_inner_attributes.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0006_inner_attributes.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0006_inner_attributes.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0006_inner_attributes.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0006_inner_attributes.txt"}, {"sha": "1ffa36c7e86a69e0b0b2cada867dbb9f3c9fdaaf", "filename": "crates/ra_syntax/test_data/parser/ok/0007_extern_crate.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0007_extern_crate.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0007_extern_crate.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0007_extern_crate.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0007_extern_crate.txt"}, {"sha": "061019a733cb88599665a3a99b948bd2a591834e", "filename": "crates/ra_syntax/test_data/parser/ok/0008_mod_item.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0008_mod_item.txt"}, {"sha": "41db9dbb78809bb4d3a23cef9dfc2428cdc08b41", "filename": "crates/ra_syntax/test_data/parser/ok/0009_use_item.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0009_use_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0009_use_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0009_use_item.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0009_use_item.txt"}, {"sha": "09871b84da8b87ac2a049cb3feb7ebe5c89f0990", "filename": "crates/ra_syntax/test_data/parser/ok/0010_use_path_segments.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0010_use_path_segments.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0010_use_path_segments.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0010_use_path_segments.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0010_use_path_segments.txt"}, {"sha": "f7aa8afe4f89d86f1ba74e79273a97ef219f5d15", "filename": "crates/ra_syntax/test_data/parser/ok/0011_outer_attribute.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0011_outer_attribute.txt"}, {"sha": "68e692fd0b4443197f72d6291d1f4bbdc33ead64", "filename": "crates/ra_syntax/test_data/parser/ok/0012_visibility.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0012_visibility.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0012_visibility.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0012_visibility.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0012_visibility.txt"}, {"sha": "50730e958c7d18f899804a461ca88cf6454c49c1", "filename": "crates/ra_syntax/test_data/parser/ok/0013_use_path_self_super.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0013_use_path_self_super.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0013_use_path_self_super.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0013_use_path_self_super.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0013_use_path_self_super.txt"}, {"sha": "3fe34d001628dfab0fa34b8c2e367c9b82f504b9", "filename": "crates/ra_syntax/test_data/parser/ok/0014_use_tree.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0014_use_tree.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0014_use_tree.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0014_use_tree.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0014_use_tree.txt"}, {"sha": "e63f142535b49dcf4d1ff56fb7eb1c8867f7a650", "filename": "crates/ra_syntax/test_data/parser/ok/0015_use_tree.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0015_use_tree.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0015_use_tree.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0015_use_tree.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0015_use_tree.txt"}, {"sha": "3fbd14d7b7adb55e1e88eb937d36e136488b4f98", "filename": "crates/ra_syntax/test_data/parser/ok/0016_struct_flavors.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0016_struct_flavors.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0016_struct_flavors.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0016_struct_flavors.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0016_struct_flavors.txt"}, {"sha": "1d65b0d6e08ed933d75dc02d3924a3241bcfd288", "filename": "crates/ra_syntax/test_data/parser/ok/0017_attr_trailing_comma.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0017_attr_trailing_comma.txt"}, {"sha": "1e4e58dd3ffb9ec3d7466bcea550bfd4b93763cf", "filename": "crates/ra_syntax/test_data/parser/ok/0018_struct_type_params.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0018_struct_type_params.txt"}, {"sha": "9d4a47a51bf47d500881313afab6d13e275415fc", "filename": "crates/ra_syntax/test_data/parser/ok/0019_enums.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0019_enums.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0019_enums.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0019_enums.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0019_enums.txt"}, {"sha": "18a5fd78490510f89eaf5eb1ae9286acdabe5c99", "filename": "crates/ra_syntax/test_data/parser/ok/0020_type_param_bounds.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0020_type_param_bounds.txt"}, {"sha": "974fb9c444e5a09fe15a756fff6e98a4e06dec0b", "filename": "crates/ra_syntax/test_data/parser/ok/0021_extern_fn.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0021_extern_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0021_extern_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0021_extern_fn.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0021_extern_fn.txt"}, {"sha": "bbbd95fd95536749ae2286c1fb4b06081e393bd9", "filename": "crates/ra_syntax/test_data/parser/ok/0022_empty_extern_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0022_empty_extern_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0022_empty_extern_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0022_empty_extern_block.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0022_empty_extern_block.txt"}, {"sha": "5591f95eb2866e4cd1699ae1f1ef94d401661020", "filename": "crates/ra_syntax/test_data/parser/ok/0023_static_items.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0023_static_items.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0023_static_items.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0023_static_items.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0023_static_items.txt"}, {"sha": "abe9f851b60d6a78d4ea4ce6437b0a7807d3d174", "filename": "crates/ra_syntax/test_data/parser/ok/0024_const_item.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0024_const_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0024_const_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0024_const_item.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0024_const_item.txt"}, {"sha": "f5a7a1a5adad6bf69b40842521d1b70e99d7f2f8", "filename": "crates/ra_syntax/test_data/parser/ok/0025_extern_fn_in_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0025_extern_fn_in_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0025_extern_fn_in_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0025_extern_fn_in_block.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0025_extern_fn_in_block.txt"}, {"sha": "f9b1dcf1ab4ad028263ea81543453585b0989fdf", "filename": "crates/ra_syntax/test_data/parser/ok/0026_const_fn_in_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0026_const_fn_in_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0026_const_fn_in_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0026_const_fn_in_block.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0026_const_fn_in_block.txt"}, {"sha": "9fb7b70a054c6e71b04a499e0d1ae7579bd553b1", "filename": "crates/ra_syntax/test_data/parser/ok/0027_unsafe_fn_in_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0027_unsafe_fn_in_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0027_unsafe_fn_in_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0027_unsafe_fn_in_block.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0027_unsafe_fn_in_block.txt"}, {"sha": "afca1fba2455b8417a62b2d8c0c32dd7a454da89", "filename": "crates/ra_syntax/test_data/parser/ok/0028_operator_binding_power.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0028_operator_binding_power.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0028_operator_binding_power.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0028_operator_binding_power.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0028_operator_binding_power.txt"}, {"sha": "95dae4870bcfd429aff8f43336475bf8da909de7", "filename": "crates/ra_syntax/test_data/parser/ok/0029_range_forms.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0029_range_forms.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0029_range_forms.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0029_range_forms.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0029_range_forms.txt"}, {"sha": "cdc9f05ae679f5700761e6c70265a16694d0d3e4", "filename": "crates/ra_syntax/test_data/parser/ok/0030_string_suffixes.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0030_string_suffixes.txt"}, {"sha": "ac314ae501c628b660b656d1a66cd4d7b76e62f0", "filename": "crates/ra_syntax/test_data/parser/ok/0030_traits.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_traits.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_traits.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_traits.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0030_traits.txt"}, {"sha": "badbf76c56f9c922528c8f87fd0d26a3032dacfa", "filename": "crates/ra_syntax/test_data/parser/ok/0031_extern.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0031_extern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0031_extern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0031_extern.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0031_extern.txt"}, {"sha": "3a333480e3d05615cdeb3f6cf25616ff07bd13ca", "filename": "crates/ra_syntax/test_data/parser/ok/0032_where_for.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0032_where_for.txt"}, {"sha": "bd9e3fd85880c94020494fad903a806664d199b5", "filename": "crates/ra_syntax/test_data/parser/ok/0033_label_break.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0033_label_break.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0033_label_break.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0033_label_break.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0033_label_break.txt"}, {"sha": "fc0d452f4d05e0a717ad2e4d98e641d28ecce63f", "filename": "crates/ra_syntax/test_data/parser/ok/0034_crate_path_in_call.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0034_crate_path_in_call.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0034_crate_path_in_call.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0034_crate_path_in_call.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0034_crate_path_in_call.txt"}, {"sha": "90538b90daa858ae86308759ea677f57308553fe", "filename": "crates/ra_syntax/test_data/parser/ok/0035_weird_exprs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0035_weird_exprs.txt"}, {"sha": "ac5444087487833b381c4aa6362f72f67babe951", "filename": "crates/ra_syntax/test_data/parser/ok/0036_fully_qualified.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0036_fully_qualified.txt"}, {"sha": "3af40a104aa64594520957823cc9c16bd8405339", "filename": "crates/ra_syntax/test_data/parser/ok/0037_mod.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0037_mod.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0037_mod.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0037_mod.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0037_mod.txt"}, {"sha": "3773679144f4804aebcffc13e998b41a15eaa679", "filename": "crates/ra_syntax/test_data/parser/ok/0038_where_pred_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0038_where_pred_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0038_where_pred_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0038_where_pred_type.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0038_where_pred_type.txt"}, {"sha": "9936892e934cd2dd61a1906dd24160c2e88adad2", "filename": "crates/ra_syntax/test_data/parser/ok/0039_raw_fn_item.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0039_raw_fn_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0039_raw_fn_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0039_raw_fn_item.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0039_raw_fn_item.txt"}, {"sha": "05f2c656f541d60d0dab0995fb425227290be035", "filename": "crates/ra_syntax/test_data/parser/ok/0040_raw_struct_item_field.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0040_raw_struct_item_field.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0040_raw_struct_item_field.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0040_raw_struct_item_field.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0040_raw_struct_item_field.txt"}, {"sha": "64c70e1967757b6b3337321b8ee3b658153185b5", "filename": "crates/ra_syntax/test_data/parser/ok/0041_raw_keywords.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0041_raw_keywords.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0041_raw_keywords.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0041_raw_keywords.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0041_raw_keywords.txt"}, {"sha": "341e02704413fa189f792db4377f79b894d953b3", "filename": "crates/ra_syntax/test_data/parser/ok/0042_ufcs_call_list.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0042_ufcs_call_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0042_ufcs_call_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0042_ufcs_call_list.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0042_ufcs_call_list.txt"}, {"sha": "c5821afd0cf333c2a6a6ba2b25c713706147a323", "filename": "crates/ra_syntax/test_data/parser/ok/0043_complex_assignment.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0043_complex_assignment.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0043_complex_assignment.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0043_complex_assignment.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0043_complex_assignment.txt"}, {"sha": "bfc793dc15a6d18f3fc35fce2b1f2aad0c4417b5", "filename": "crates/ra_syntax/test_data/parser/ok/0044_let_attrs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0044_let_attrs.txt"}, {"sha": "e15447ca7223400192c23c02419fed425a062b0c", "filename": "crates/ra_syntax/test_data/parser/ok/0045_block_inner_attrs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0045_block_inner_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0045_block_inner_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0045_block_inner_attrs.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0045_block_inner_attrs.txt"}, {"sha": "8f192124b3ec0eb1e128a9ce9b1842f1f5827a40", "filename": "crates/ra_syntax/test_data/parser/ok/0046_extern_inner_attributes.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0046_extern_inner_attributes.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0046_extern_inner_attributes.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0046_extern_inner_attributes.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0046_extern_inner_attributes.txt"}, {"sha": "07a5fbf2d38a01b8463413790fc44cf7cee04a80", "filename": "crates/ra_syntax/test_data/parser/ok/0047_minus_in_inner_pattern.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0047_minus_in_inner_pattern.txt"}, {"sha": "c9cf84ffd1305bc2da2ea59fdb3747edb67c80ae", "filename": "crates/ra_syntax/test_data/parser/ok/0048_compound_assignment.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0048_compound_assignment.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0048_compound_assignment.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0048_compound_assignment.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0048_compound_assignment.txt"}, {"sha": "aa6daff7d0afb3e6a0d231f481b154f174733d00", "filename": "crates/ra_syntax/test_data/parser/ok/0049_async_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0049_async_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0049_async_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0049_async_block.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0049_async_block.txt"}, {"sha": "435f279703d9c923b1f5c24a65e89102a816b5ea", "filename": "crates/ra_syntax/test_data/parser/ok/0050_async_block_as_argument.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0050_async_block_as_argument.rast", "raw_url": "https://github.com/rust-lang/rust/raw/18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0050_async_block_as_argument.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0050_async_block_as_argument.rast?ref=18a5e164838e1dc2abcc6b79d4fc2f96ffd2507c", "previous_filename": "crates/ra_syntax/test_data/parser/ok/0050_async_block_as_argument.txt"}]}