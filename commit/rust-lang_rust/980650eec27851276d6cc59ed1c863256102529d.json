{"sha": "980650eec27851276d6cc59ed1c863256102529d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4MDY1MGVlYzI3ODUxMjc2ZDZjYzU5ZWQxYzg2MzI1NjEwMjUyOWQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T12:25:31Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T21:45:18Z"}, "message": "needless_collect: fix suggestion, make test rustfixable", "tree": {"sha": "84487d735c9a570bde8fdea8ea4aa8584447b177", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84487d735c9a570bde8fdea8ea4aa8584447b177"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/980650eec27851276d6cc59ed1c863256102529d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/980650eec27851276d6cc59ed1c863256102529d", "html_url": "https://github.com/rust-lang/rust/commit/980650eec27851276d6cc59ed1c863256102529d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/980650eec27851276d6cc59ed1c863256102529d/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f822e742d96d250355ada92c52c5a1b755f73c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f822e742d96d250355ada92c52c5a1b755f73c1", "html_url": "https://github.com/rust-lang/rust/commit/7f822e742d96d250355ada92c52c5a1b755f73c1"}], "stats": {"total": 44, "additions": 37, "deletions": 7}, "files": [{"sha": "0a315fe48b5d009cca7e0fdac9a11c775d7f6c04", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/980650eec27851276d6cc59ed1c863256102529d/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/980650eec27851276d6cc59ed1c863256102529d/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=980650eec27851276d6cc59ed1c863256102529d", "patch": "@@ -2427,12 +2427,17 @@ fn check_needless_collect<'a, 'tcx>(expr: &'tcx Expr, cx: &LateContext<'a, 'tcx>\n                     let contains_arg = snippet(cx, args[1].span, \"??\");\n                     let span = shorten_needless_collect_span(expr);\n                     span_lint_and_then(cx, NEEDLESS_COLLECT, span, NEEDLESS_COLLECT_MSG, |db| {\n+                        let (arg, pred) = if contains_arg.starts_with('&') {\n+                            (\"x\", &contains_arg[1..])\n+                        } else {\n+                            (\"&x\", &*contains_arg)\n+                        };\n                         db.span_suggestion(\n                             span,\n                             \"replace with\",\n                             format!(\n-                                \".any(|&x| x == {})\",\n-                                if contains_arg.starts_with('&') { &contains_arg[1..] } else { &contains_arg }\n+                                \".any(|{}| x == {})\",\n+                                arg, pred\n                             ),\n                             Applicability::MachineApplicable,\n                         );"}, {"sha": "b4227eaf2f8bbb8846e191bf888e2b99114619d9", "filename": "tests/ui/needless_collect.fixed", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/980650eec27851276d6cc59ed1c863256102529d/tests%2Fui%2Fneedless_collect.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/980650eec27851276d6cc59ed1c863256102529d/tests%2Fui%2Fneedless_collect.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_collect.fixed?ref=980650eec27851276d6cc59ed1c863256102529d", "patch": "@@ -0,0 +1,21 @@\n+// run-rustfix\n+\n+#![allow(unused, clippy::suspicious_map)]\n+\n+use std::collections::{BTreeSet, HashMap, HashSet};\n+\n+#[warn(clippy::needless_collect)]\n+#[allow(unused_variables, clippy::iter_cloned_collect)]\n+fn main() {\n+    let sample = [1; 5];\n+    let len = sample.iter().count();\n+    if sample.iter().next().is_none() {\n+        // Empty\n+    }\n+    sample.iter().cloned().any(|x| x == 1);\n+    sample.iter().map(|x| (x, x)).count();\n+    // Notice the `HashSet`--this should not be linted\n+    sample.iter().collect::<HashSet<_>>().len();\n+    // Neither should this\n+    sample.iter().collect::<BTreeSet<_>>().len();\n+}"}, {"sha": "7ee603afeb0778e74bc67e24d25919660c89ee87", "filename": "tests/ui/needless_collect.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/980650eec27851276d6cc59ed1c863256102529d/tests%2Fui%2Fneedless_collect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/980650eec27851276d6cc59ed1c863256102529d/tests%2Fui%2Fneedless_collect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_collect.rs?ref=980650eec27851276d6cc59ed1c863256102529d", "patch": "@@ -1,3 +1,7 @@\n+// run-rustfix\n+\n+#![allow(unused, clippy::suspicious_map)]\n+\n use std::collections::{BTreeSet, HashMap, HashSet};\n \n #[warn(clippy::needless_collect)]"}, {"sha": "8884c8e161293c11bed7b32cf2a5473fa85cc28a", "filename": "tests/ui/needless_collect.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/980650eec27851276d6cc59ed1c863256102529d/tests%2Fui%2Fneedless_collect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/980650eec27851276d6cc59ed1c863256102529d/tests%2Fui%2Fneedless_collect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_collect.stderr?ref=980650eec27851276d6cc59ed1c863256102529d", "patch": "@@ -1,25 +1,25 @@\n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect.rs:7:28\n+  --> $DIR/needless_collect.rs:11:28\n    |\n LL |     let len = sample.iter().collect::<Vec<_>>().len();\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.count()`\n    |\n    = note: `-D clippy::needless-collect` implied by `-D warnings`\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect.rs:8:21\n+  --> $DIR/needless_collect.rs:12:21\n    |\n LL |     if sample.iter().collect::<Vec<_>>().is_empty() {\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.next().is_none()`\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect.rs:11:27\n+  --> $DIR/needless_collect.rs:15:27\n    |\n LL |     sample.iter().cloned().collect::<Vec<_>>().contains(&1);\n-   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.any(|&x| x == 1)`\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.any(|x| x == 1)`\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect.rs:12:34\n+  --> $DIR/needless_collect.rs:16:34\n    |\n LL |     sample.iter().map(|x| (x, x)).collect::<HashMap<_, _>>().len();\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.count()`"}]}