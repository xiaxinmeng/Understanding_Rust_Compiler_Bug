{"sha": "fcdd5016c518c3ac3e46183933c65dc23c9f5f51", "node_id": "C_kwDOAAsO6NoAKGZjZGQ1MDE2YzUxOGMzYWMzZTQ2MTgzOTMzYzY1ZGMyM2M5ZjVmNTE", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-09-09T16:32:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-09T16:32:17Z"}, "message": "Rollup merge of #101529 - mousetail:patch-2, r=thomcc\n\nFix the example code and doctest for Formatter::sign_plus\n\nThe provided example to the `sign_plus` method on `fmt` was broken, it displays the `-` sign twice for negative numbers.\n\nThis pull request should fix the issue by `.abs()` ing the number so that the negative sign appears only once. It is just one possible solution to the issue, not sure if it's the best. However, this one will behave as expected when combined with fill and alignment operators.", "tree": {"sha": "d354f1c6548ac39387ee7fe2d62ec6666a212078", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d354f1c6548ac39387ee7fe2d62ec6666a212078"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcdd5016c518c3ac3e46183933c65dc23c9f5f51", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjG2qRCRBK7hj4Ov3rIwAAuRMIAJzdPMsmHt/qXDzwsUel1R91\nVMZEoGdZSlTwoY7dPv2iOMck4qgrh8CpMFXHqbSe6NksZ0mIq3a2MBY6FKRixhk3\nK2puH7Ir3cktsvLHk4Qko1DH7+64DL1Awsi+lVYkonC4j/bTNt2spJf5rqA7tsi/\naimrXiN5EpX7I6J7IbIfWmb2mPEG6XwcktxdpdXxRNjdZkyErFJNMwwZwf0CM/Jz\nnYfmtCLJ/9c4M1zRXsFlaeWfnoNMPLA3iCAXX5x8sDpM5KZBci61EEeUyp7xsJZb\nDihR8Ul0QgNEuFjWH8o4NUb9FijLyc0p4TaCXzzGXZMmEgaIgFCj+GWPK2qtsX8=\n=T9NU\n-----END PGP SIGNATURE-----\n", "payload": "tree d354f1c6548ac39387ee7fe2d62ec6666a212078\nparent bef48f931489c2ad263948d6b21aca9c2e3ca2f4\nparent 5fbe485ecca977e3981d9dbcc5370183528d50a7\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1662741137 +0530\ncommitter GitHub <noreply@github.com> 1662741137 +0530\n\nRollup merge of #101529 - mousetail:patch-2, r=thomcc\n\nFix the example code and doctest for Formatter::sign_plus\n\nThe provided example to the `sign_plus` method on `fmt` was broken, it displays the `-` sign twice for negative numbers.\n\nThis pull request should fix the issue by `.abs()` ing the number so that the negative sign appears only once. It is just one possible solution to the issue, not sure if it's the best. However, this one will behave as expected when combined with fill and alignment operators.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcdd5016c518c3ac3e46183933c65dc23c9f5f51", "html_url": "https://github.com/rust-lang/rust/commit/fcdd5016c518c3ac3e46183933c65dc23c9f5f51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcdd5016c518c3ac3e46183933c65dc23c9f5f51/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bef48f931489c2ad263948d6b21aca9c2e3ca2f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/bef48f931489c2ad263948d6b21aca9c2e3ca2f4", "html_url": "https://github.com/rust-lang/rust/commit/bef48f931489c2ad263948d6b21aca9c2e3ca2f4"}, {"sha": "5fbe485ecca977e3981d9dbcc5370183528d50a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fbe485ecca977e3981d9dbcc5370183528d50a7", "html_url": "https://github.com/rust-lang/rust/commit/5fbe485ecca977e3981d9dbcc5370183528d50a7"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "905212eb372b12f8dfe185691abd435563c6deb1", "filename": "library/core/src/fmt/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fcdd5016c518c3ac3e46183933c65dc23c9f5f51/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcdd5016c518c3ac3e46183933c65dc23c9f5f51/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs?ref=fcdd5016c518c3ac3e46183933c65dc23c9f5f51", "patch": "@@ -1819,14 +1819,15 @@ impl<'a> Formatter<'a> {\n     ///             write!(formatter,\n     ///                    \"Foo({}{})\",\n     ///                    if self.0 < 0 { '-' } else { '+' },\n-    ///                    self.0)\n+    ///                    self.0.abs())\n     ///         } else {\n     ///             write!(formatter, \"Foo({})\", self.0)\n     ///         }\n     ///     }\n     /// }\n     ///\n     /// assert_eq!(&format!(\"{:+}\", Foo(23)), \"Foo(+23)\");\n+    /// assert_eq!(&format!(\"{:+}\", Foo(-23)), \"Foo(-23)\");\n     /// assert_eq!(&format!(\"{}\", Foo(23)), \"Foo(23)\");\n     /// ```\n     #[must_use]"}]}