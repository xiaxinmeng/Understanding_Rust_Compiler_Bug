{"sha": "f06f05174581702e822f1d866a06e0a6a22d0b3d", "node_id": "C_kwDOAAsO6NoAKGYwNmYwNTE3NDU4MTcwMmU4MjJmMWQ4NjZhMDZlMGE2YTIyZDBiM2Q", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-06-05T19:34:11Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-06-05T19:34:11Z"}, "message": "Suggest removing label in `'label: non_block_expr`", "tree": {"sha": "9bb3bda5e3325f221387b858fcd580b898acb435", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bb3bda5e3325f221387b858fcd580b898acb435"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f06f05174581702e822f1d866a06e0a6a22d0b3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f06f05174581702e822f1d866a06e0a6a22d0b3d", "html_url": "https://github.com/rust-lang/rust/commit/f06f05174581702e822f1d866a06e0a6a22d0b3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f06f05174581702e822f1d866a06e0a6a22d0b3d/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6e5bb32fbb3d0a85189e56086726c183f68ad0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6e5bb32fbb3d0a85189e56086726c183f68ad0c", "html_url": "https://github.com/rust-lang/rust/commit/c6e5bb32fbb3d0a85189e56086726c183f68ad0c"}], "stats": {"total": 80, "additions": 67, "deletions": 13}, "files": [{"sha": "0bc71de90ff1fe2362b2f6b86a50f37ae55826d0", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f06f05174581702e822f1d866a06e0a6a22d0b3d/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f06f05174581702e822f1d866a06e0a6a22d0b3d/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=f06f05174581702e822f1d866a06e0a6a22d0b3d", "patch": "@@ -1557,6 +1557,8 @@ impl<'a> Parser<'a> {\n \n             // Continue as an expression in an effort to recover on `'label: non_block_expr`.\n             let expr = self.parse_expr().map(|expr| {\n+                let span = expr.span;\n+\n                 let found_labeled_breaks = {\n                     struct FindLabeledBreaksVisitor(bool);\n \n@@ -1573,13 +1575,22 @@ impl<'a> Parser<'a> {\n                     vis.0\n                 };\n \n-                // Suggestion involves adding a (as of time of writing this, unstable) labeled block\n-                // so if the label is not used, just return the unmodified expression\n+                // Suggestion involves adding a (as of time of writing this, unstable) labeled block.\n+                //\n+                // If there are no breaks that may use this label, suggest removing the label and\n+                // recover to the unmodified expression.\n                 if !found_labeled_breaks {\n+                    let msg = \"consider removing the label\";\n+                    err.span_suggestion_verbose(\n+                        lo.until(span),\n+                        msg,\n+                        \"\",\n+                        Applicability::MachineApplicable,\n+                    );\n+\n                     return expr;\n                 }\n \n-                let span = expr.span;\n                 let sugg_msg = \"consider enclosing expression in a block\";\n                 let suggestions = vec![\n                     (span.shrink_to_lo(), \"{\".to_owned()),"}, {"sha": "5c9597c440cbdefe98bc5c1af9cd3064ae7f2aa0", "filename": "src/test/ui/parser/labeled-no-colon-expr.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f06f05174581702e822f1d866a06e0a6a22d0b3d/src%2Ftest%2Fui%2Fparser%2Flabeled-no-colon-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f06f05174581702e822f1d866a06e0a6a22d0b3d/src%2Ftest%2Fui%2Fparser%2Flabeled-no-colon-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flabeled-no-colon-expr.stderr?ref=f06f05174581702e822f1d866a06e0a6a22d0b3d", "patch": "@@ -47,6 +47,12 @@ error: expected `while`, `for`, `loop` or `{` after a label\n    |\n LL |     'l4 0;\n    |         ^ expected `while`, `for`, `loop` or `{` after a label\n+   |\n+help: consider removing the label\n+   |\n+LL -     'l4 0;\n+LL +     0;\n+   | \n \n error: labeled expression must be followed by `:`\n   --> $DIR/labeled-no-colon-expr.rs:8:9"}, {"sha": "3193d90d2d30d2faea6fba04d79016904130c93a", "filename": "src/test/ui/parser/recover-labeled-non-block-expr.fixed", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f06f05174581702e822f1d866a06e0a6a22d0b3d/src%2Ftest%2Fui%2Fparser%2Frecover-labeled-non-block-expr.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f06f05174581702e822f1d866a06e0a6a22d0b3d/src%2Ftest%2Fui%2Fparser%2Frecover-labeled-non-block-expr.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-labeled-non-block-expr.fixed?ref=f06f05174581702e822f1d866a06e0a6a22d0b3d", "patch": "@@ -1,11 +1,12 @@\n // run-rustfix\n #![feature(label_break_value)]\n fn main() {\n-    // FIXME(waffle): add this back\n-    // #[allow(unused_labels)]\n-    // 'label: 1 + 1; // ERROR expected `while`, `for`, `loop` or `{` after a label\n+    let _ = 1 + 1; //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n \n+    match () { () => {}, }; //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n     'label: {match () { () => break 'label, }}; //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n+    #[allow(unused_labels)]\n+    'label: {match () { () => 'lp: loop { break 'lp 0 }, }}; //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n \n     let x = 1;\n     let _i = 'label: {match x { //~ ERROR expected `while`, `for`, `loop` or `{` after a label"}, {"sha": "35862e2eef9736bf4c7e262ad7077c536dcb08c3", "filename": "src/test/ui/parser/recover-labeled-non-block-expr.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f06f05174581702e822f1d866a06e0a6a22d0b3d/src%2Ftest%2Fui%2Fparser%2Frecover-labeled-non-block-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f06f05174581702e822f1d866a06e0a6a22d0b3d/src%2Ftest%2Fui%2Fparser%2Frecover-labeled-non-block-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-labeled-non-block-expr.rs?ref=f06f05174581702e822f1d866a06e0a6a22d0b3d", "patch": "@@ -1,11 +1,12 @@\n // run-rustfix\n #![feature(label_break_value)]\n fn main() {\n-    // FIXME(waffle): add this back\n-    // #[allow(unused_labels)]\n-    // 'label: 1 + 1; // ERROR expected `while`, `for`, `loop` or `{` after a label\n+    let _ = 'label: 1 + 1; //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n \n+    'label: match () { () => {}, }; //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n     'label: match () { () => break 'label, }; //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n+    #[allow(unused_labels)]\n+    'label: match () { () => 'lp: loop { break 'lp 0 }, }; //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n \n     let x = 1;\n     let _i = 'label: match x { //~ ERROR expected `while`, `for`, `loop` or `{` after a label"}, {"sha": "e289c5db5cb9d55c54eda899bd3fbcd70ead8c43", "filename": "src/test/ui/parser/recover-labeled-non-block-expr.stderr", "status": "modified", "additions": 39, "deletions": 4, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/f06f05174581702e822f1d866a06e0a6a22d0b3d/src%2Ftest%2Fui%2Fparser%2Frecover-labeled-non-block-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f06f05174581702e822f1d866a06e0a6a22d0b3d/src%2Ftest%2Fui%2Fparser%2Frecover-labeled-non-block-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-labeled-non-block-expr.stderr?ref=f06f05174581702e822f1d866a06e0a6a22d0b3d", "patch": "@@ -1,5 +1,29 @@\n error: expected `while`, `for`, `loop` or `{` after a label\n-  --> $DIR/recover-labeled-non-block-expr.rs:8:13\n+  --> $DIR/recover-labeled-non-block-expr.rs:4:21\n+   |\n+LL |     let _ = 'label: 1 + 1;\n+   |                     ^ expected `while`, `for`, `loop` or `{` after a label\n+   |\n+help: consider removing the label\n+   |\n+LL -     let _ = 'label: 1 + 1;\n+LL +     let _ = 1 + 1;\n+   | \n+\n+error: expected `while`, `for`, `loop` or `{` after a label\n+  --> $DIR/recover-labeled-non-block-expr.rs:6:13\n+   |\n+LL |     'label: match () { () => {}, };\n+   |             ^^^^^ expected `while`, `for`, `loop` or `{` after a label\n+   |\n+help: consider removing the label\n+   |\n+LL -     'label: match () { () => {}, };\n+LL +     match () { () => {}, };\n+   | \n+\n+error: expected `while`, `for`, `loop` or `{` after a label\n+  --> $DIR/recover-labeled-non-block-expr.rs:7:13\n    |\n LL |     'label: match () { () => break 'label, };\n    |             ^^^^^ expected `while`, `for`, `loop` or `{` after a label\n@@ -10,7 +34,18 @@ LL |     'label: {match () { () => break 'label, }};\n    |             +                                +\n \n error: expected `while`, `for`, `loop` or `{` after a label\n-  --> $DIR/recover-labeled-non-block-expr.rs:11:22\n+  --> $DIR/recover-labeled-non-block-expr.rs:9:13\n+   |\n+LL |     'label: match () { () => 'lp: loop { break 'lp 0 }, };\n+   |             ^^^^^ expected `while`, `for`, `loop` or `{` after a label\n+   |\n+help: consider enclosing expression in a block\n+   |\n+LL |     'label: {match () { () => 'lp: loop { break 'lp 0 }, }};\n+   |             +                                             +\n+\n+error: expected `while`, `for`, `loop` or `{` after a label\n+  --> $DIR/recover-labeled-non-block-expr.rs:12:22\n    |\n LL |     let _i = 'label: match x {\n    |                      ^^^^^ expected `while`, `for`, `loop` or `{` after a label\n@@ -26,7 +61,7 @@ LL |                 break 'label 13\n  ...\n \n error: expected `while`, `for`, `loop` or `{` after a label\n-  --> $DIR/recover-labeled-non-block-expr.rs:25:24\n+  --> $DIR/recover-labeled-non-block-expr.rs:26:24\n    |\n LL |     let _val = 'label: (1, if other == 3 { break 'label (2, 3) } else { other });\n    |                        ^ expected `while`, `for`, `loop` or `{` after a label\n@@ -36,5 +71,5 @@ help: consider enclosing expression in a block\n LL |     let _val = 'label: {(1, if other == 3 { break 'label (2, 3) } else { other })};\n    |                        +                                                         +\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 6 previous errors\n "}]}