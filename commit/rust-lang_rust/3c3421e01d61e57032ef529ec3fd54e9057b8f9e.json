{"sha": "3c3421e01d61e57032ef529ec3fd54e9057b8f9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMzQyMWUwMWQ2MWU1NzAzMmVmNTI5ZWMzZmQ1NGU5MDU3YjhmOWU=", "commit": {"author": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-09-21T00:26:24Z"}, "committer": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-09-21T00:26:24Z"}, "message": "When translating vec-append, delay destination string's null-byte-accounting length decrement until the destination string has already been resized.  Closes #163.", "tree": {"sha": "16fa1f1e4adf067c64f178d0b1e48aa44756b15a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16fa1f1e4adf067c64f178d0b1e48aa44756b15a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c3421e01d61e57032ef529ec3fd54e9057b8f9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c3421e01d61e57032ef529ec3fd54e9057b8f9e", "html_url": "https://github.com/rust-lang/rust/commit/3c3421e01d61e57032ef529ec3fd54e9057b8f9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c3421e01d61e57032ef529ec3fd54e9057b8f9e/comments", "author": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ab3b305e4f2b8f7d1e24c45756cfe23b0859ddc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ab3b305e4f2b8f7d1e24c45756cfe23b0859ddc", "html_url": "https://github.com/rust-lang/rust/commit/7ab3b305e4f2b8f7d1e24c45756cfe23b0859ddc"}], "stats": {"total": 88, "additions": 43, "deletions": 45}, "files": [{"sha": "e1b96243bb1345977a69a706cf94133f6602f5aa", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 43, "deletions": 45, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/3c3421e01d61e57032ef529ec3fd54e9057b8f9e/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/3c3421e01d61e57032ef529ec3fd54e9057b8f9e/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=3c3421e01d61e57032ef529ec3fd54e9057b8f9e", "patch": "@@ -4612,11 +4612,6 @@ let trans_visitor\n             let src_cell = need_cell src_oper in\n             let src_vec = deref src_cell in\n             let src_fill = get_element_ptr src_vec Abi.vec_elt_fill in\n-            let dst_vec = deref dst_cell in\n-            let dst_fill = get_element_ptr dst_vec Abi.vec_elt_fill in\n-\n-              if trailing_null\n-              then sub_from dst_fill (imm 1L);\n \n               aliasing true dst_cell\n                 begin\n@@ -4635,49 +4630,52 @@ let trans_visitor\n                * to add to.\n                *)\n \n-              (* Reload dst vec, fill; might have changed. *)\n               let dst_vec = deref dst_cell in\n               let dst_fill = get_element_ptr dst_vec Abi.vec_elt_fill in\n \n-              (* Copy loop: *)\n-              let eltp_rty = Il.AddrTy (referent_type cx elt_ty) in\n-              let dptr = next_vreg_cell eltp_rty in\n-              let sptr = next_vreg_cell eltp_rty in\n-              let dlim = next_vreg_cell eltp_rty in\n-              let elt_sz = ty_sz_in_current_frame elt_ty in\n-              let dst_data =\n-                get_element_ptr_dyn_in_current_frame\n-                  dst_vec Abi.vec_elt_data\n-              in\n-              let src_data =\n-                get_element_ptr_dyn_in_current_frame\n-                  src_vec Abi.vec_elt_data\n-              in\n-                lea dptr (fst (need_mem_cell dst_data));\n-                lea sptr (fst (need_mem_cell src_data));\n-                add_to dptr (Il.Cell dst_fill);\n-                mov dlim (Il.Cell dptr);\n-                add_to dlim (Il.Cell src_fill);\n-                let fwd_jmp = mark () in\n-                  emit (Il.jmp Il.JMP Il.CodeNone);\n-                  let back_jmp_targ = mark () in\n-                    (* copy slot *)\n-                    trans_copy_ty\n-                      (get_ty_params_of_current_frame()) true\n-                      (deref dptr) elt_ty\n-                      (deref sptr) elt_ty;\n-                    add_to dptr elt_sz;\n-                    add_to sptr elt_sz;\n-                    patch fwd_jmp;\n-                    check_interrupt_flag ();\n-                    let back_jmp =\n-                      trans_compare_simple Il.JB (Il.Cell dptr) (Il.Cell dlim)\n-                    in\n-                      List.iter\n-                        (fun j -> patch_existing j back_jmp_targ) back_jmp;\n-                      let v = next_vreg_cell word_sty in\n-                        mov v (Il.Cell src_fill);\n-                        add_to dst_fill (Il.Cell v);\n+                if trailing_null\n+                then sub_from dst_fill (imm 1L);\n+\n+                (* Copy loop: *)\n+                let eltp_rty = Il.AddrTy (referent_type cx elt_ty) in\n+                let dptr = next_vreg_cell eltp_rty in\n+                let sptr = next_vreg_cell eltp_rty in\n+                let dlim = next_vreg_cell eltp_rty in\n+                let elt_sz = ty_sz_in_current_frame elt_ty in\n+                let dst_data =\n+                  get_element_ptr_dyn_in_current_frame\n+                    dst_vec Abi.vec_elt_data\n+                in\n+                let src_data =\n+                  get_element_ptr_dyn_in_current_frame\n+                    src_vec Abi.vec_elt_data\n+                in\n+                  lea dptr (fst (need_mem_cell dst_data));\n+                  lea sptr (fst (need_mem_cell src_data));\n+                  add_to dptr (Il.Cell dst_fill);\n+                  mov dlim (Il.Cell dptr);\n+                  add_to dlim (Il.Cell src_fill);\n+                  let fwd_jmp = mark () in\n+                    emit (Il.jmp Il.JMP Il.CodeNone);\n+                    let back_jmp_targ = mark () in\n+                      (* copy slot *)\n+                      trans_copy_ty\n+                        (get_ty_params_of_current_frame()) true\n+                        (deref dptr) elt_ty\n+                        (deref sptr) elt_ty;\n+                      add_to dptr elt_sz;\n+                      add_to sptr elt_sz;\n+                      patch fwd_jmp;\n+                      check_interrupt_flag ();\n+                      let back_jmp =\n+                        trans_compare_simple\n+                          Il.JB (Il.Cell dptr) (Il.Cell dlim)\n+                      in\n+                        List.iter\n+                          (fun j -> patch_existing j back_jmp_targ) back_jmp;\n+                        let v = next_vreg_cell word_sty in\n+                          mov v (Il.Cell src_fill);\n+                          add_to dst_fill (Il.Cell v);\n \n         | (Ast.TY_str, e)\n         | (Ast.TY_vec _, e)"}]}