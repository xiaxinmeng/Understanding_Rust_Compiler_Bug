{"sha": "852bf84c7baae184de43e9f3a7f7011c679d1aa7", "node_id": "C_kwDOAAsO6NoAKDg1MmJmODRjN2JhYWUxODRkZTQzZTlmM2E3ZjcwMTFjNjc5ZDFhYTc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-07-30T20:50:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-30T20:50:57Z"}, "message": "Rollup merge of #99873 - notriddle:notriddle/invalid-html-tags-webcomponents, r=GuillaumeGomezp\n\nrustdoc: align invalid-html-tags lint with commonmark spec", "tree": {"sha": "be09890a8e285f064d7c7d0a5b5de613ffbd145c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be09890a8e285f064d7c7d0a5b5de613ffbd145c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/852bf84c7baae184de43e9f3a7f7011c679d1aa7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi5ZmxCRBK7hj4Ov3rIwAAmf4IAI58GaKxeeajVWnoD9e4NzCT\ntyC/22UsYrLuY4PjV7b4OKMeV+IfBm3yrwntR03lWiye8N8+kQp6dCXC0ERvyqL8\ntSzWLjh7hKyimtGEfnK6FXlwv4xeXAxbqA1Q7XqK7KVNSXSEMJ+ILEFHNusR8O0L\nH5wZFiDy5n9JSi8CCZlsCbrtycmBhdOb+n35zQeVDKoQLeJwsePRdc143ZgJv8T6\nu0UAySVUvQHLnq9jTfvYThNNqGFHjEtpb6wpTmQbKosOqc1ydux0KdhtDpX/2vW8\n68QzZ2MjF30ioCdS5eypvtoHq1EbrgxouGiNyYnEb1/fAg9kf23gJlAIGz7GQr0=\n=T78p\n-----END PGP SIGNATURE-----\n", "payload": "tree be09890a8e285f064d7c7d0a5b5de613ffbd145c\nparent 44c4b4a0e709c01ece25cd896dd70d9becf62c6e\nparent ad197e414c7dee64287b7f59b7ee3567a7f05927\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1659214257 +0200\ncommitter GitHub <noreply@github.com> 1659214257 +0200\n\nRollup merge of #99873 - notriddle:notriddle/invalid-html-tags-webcomponents, r=GuillaumeGomezp\n\nrustdoc: align invalid-html-tags lint with commonmark spec\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/852bf84c7baae184de43e9f3a7f7011c679d1aa7", "html_url": "https://github.com/rust-lang/rust/commit/852bf84c7baae184de43e9f3a7f7011c679d1aa7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/852bf84c7baae184de43e9f3a7f7011c679d1aa7/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44c4b4a0e709c01ece25cd896dd70d9becf62c6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/44c4b4a0e709c01ece25cd896dd70d9becf62c6e", "html_url": "https://github.com/rust-lang/rust/commit/44c4b4a0e709c01ece25cd896dd70d9becf62c6e"}, {"sha": "ad197e414c7dee64287b7f59b7ee3567a7f05927", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad197e414c7dee64287b7f59b7ee3567a7f05927", "html_url": "https://github.com/rust-lang/rust/commit/ad197e414c7dee64287b7f59b7ee3567a7f05927"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "f3a3c853caca638634d2d79fc0a720865ccd6a39", "filename": "src/librustdoc/passes/html_tags.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/852bf84c7baae184de43e9f3a7f7011c679d1aa7/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/852bf84c7baae184de43e9f3a7f7011c679d1aa7/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs?ref=852bf84c7baae184de43e9f3a7f7011c679d1aa7", "patch": "@@ -94,6 +94,14 @@ fn extract_path_backwards(text: &str, end_pos: usize) -> Option<usize> {\n     if current_pos == end_pos { None } else { Some(current_pos) }\n }\n \n+fn is_valid_for_html_tag_name(c: char, is_empty: bool) -> bool {\n+    // https://spec.commonmark.org/0.30/#raw-html\n+    //\n+    // > A tag name consists of an ASCII letter followed by zero or more ASCII letters, digits, or\n+    // > hyphens (-).\n+    c.is_ascii_alphabetic() || !is_empty && (c == '-' || c.is_ascii_digit())\n+}\n+\n fn extract_html_tag(\n     tags: &mut Vec<(String, Range<usize>)>,\n     text: &str,\n@@ -117,7 +125,7 @@ fn extract_html_tag(\n         // Checking if this is a closing tag (like `</a>` for `<a>`).\n         if c == '/' && tag_name.is_empty() {\n             is_closing = true;\n-        } else if c.is_ascii_alphanumeric() {\n+        } else if is_valid_for_html_tag_name(c, tag_name.is_empty()) {\n             tag_name.push(c);\n         } else {\n             if !tag_name.is_empty() {"}, {"sha": "0f9d2e4b35d0549b1c3bdd1ce74860365c7c62aa", "filename": "src/test/rustdoc-ui/invalid-html-tags.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/852bf84c7baae184de43e9f3a7f7011c679d1aa7/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/852bf84c7baae184de43e9f3a7f7011c679d1aa7/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.rs?ref=852bf84c7baae184de43e9f3a7f7011c679d1aa7", "patch": "@@ -108,3 +108,9 @@ pub fn j() {}\n /// <Vec<_> shouldn't warn!\n /// ``````\n pub fn k() {}\n+\n+/// Web Components style <dashed-tags>\n+//~^ ERROR unclosed HTML tag `dashed-tags`\n+/// Web Components style </unopened-tag>\n+//~^ ERROR unopened HTML tag `unopened-tag`\n+pub fn m() {}"}, {"sha": "24a455576e80aef6e4e363614ce143995575fb73", "filename": "src/test/rustdoc-ui/invalid-html-tags.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/852bf84c7baae184de43e9f3a7f7011c679d1aa7/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/852bf84c7baae184de43e9f3a7f7011c679d1aa7/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.stderr?ref=852bf84c7baae184de43e9f3a7f7011c679d1aa7", "patch": "@@ -82,5 +82,17 @@ error: Unclosed HTML comment\n LL | /// <!--\n    |     ^^^\n \n-error: aborting due to 13 previous errors\n+error: unopened HTML tag `unopened-tag`\n+  --> $DIR/invalid-html-tags.rs:114:26\n+   |\n+LL | /// Web Components style </unopened-tag>\n+   |                          ^^^^^^^^^^^^^^^\n+\n+error: unclosed HTML tag `dashed-tags`\n+  --> $DIR/invalid-html-tags.rs:112:26\n+   |\n+LL | /// Web Components style <dashed-tags>\n+   |                          ^^^^^^^^^^^^^\n+\n+error: aborting due to 15 previous errors\n "}]}