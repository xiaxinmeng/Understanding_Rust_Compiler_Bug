{"sha": "c6d97dfd835b5d9a740249570e008eb94f1a9e85", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2ZDk3ZGZkODM1YjVkOWE3NDAyNDk1NzBlMDA4ZWI5NGYxYTllODU=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-11-18T22:15:33Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-11-21T20:55:17Z"}, "message": "Fix rebase", "tree": {"sha": "3d6e013b198a49d6d1f26038e7362ba37837a068", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d6e013b198a49d6d1f26038e7362ba37837a068"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6d97dfd835b5d9a740249570e008eb94f1a9e85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6d97dfd835b5d9a740249570e008eb94f1a9e85", "html_url": "https://github.com/rust-lang/rust/commit/c6d97dfd835b5d9a740249570e008eb94f1a9e85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6d97dfd835b5d9a740249570e008eb94f1a9e85/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47a3294a1cc2deab2f55795a6ef9b7d4ce51adf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/47a3294a1cc2deab2f55795a6ef9b7d4ce51adf9", "html_url": "https://github.com/rust-lang/rust/commit/47a3294a1cc2deab2f55795a6ef9b7d4ce51adf9"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "c0cd74ecf3a45ecd3a9940d8bd587699857331d9", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c6d97dfd835b5d9a740249570e008eb94f1a9e85/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6d97dfd835b5d9a740249570e008eb94f1a9e85/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=c6d97dfd835b5d9a740249570e008eb94f1a9e85", "patch": "@@ -7,7 +7,7 @@\n use crate::hir::def::{CtorKind, Namespace};\n use crate::hir::def_id::DefId;\n use crate::hir;\n-use crate::mir::interpret::{ConstValue, GlobalAlloc, PanicInfo, Scalar};\n+use crate::mir::interpret::{GlobalAlloc, PanicInfo, Scalar};\n use crate::mir::visit::MirVisitable;\n use crate::ty::adjustment::PointerCast;\n use crate::ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n@@ -2343,8 +2343,8 @@ pub struct Constant<'tcx> {\n \n impl Constant<'tcx> {\n     pub fn check_static_ptr(&self, tcx: TyCtxt<'_>) -> Option<DefId> {\n-        match self.literal.val {\n-            ConstValue::Scalar(Scalar::Ptr(ptr)) => match tcx.alloc_map.lock().get(ptr.alloc_id) {\n+        match self.literal.val.try_to_scalar() {\n+            Some(Scalar::Ptr(ptr)) => match tcx.alloc_map.lock().get(ptr.alloc_id) {\n                 Some(GlobalAlloc::Static(def_id)) => Some(def_id),\n                 Some(_) => None,\n                 None => {"}, {"sha": "27891be6b82c5e45093cc7c9c6cac7c52c040cb8", "filename": "src/librustc_codegen_ssa/mir/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6d97dfd835b5d9a740249570e008eb94f1a9e85/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6d97dfd835b5d9a740249570e008eb94f1a9e85/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs?ref=c6d97dfd835b5d9a740249570e008eb94f1a9e85", "patch": "@@ -16,7 +16,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n         constant: &mir::Constant<'tcx>,\n     ) -> Result<OperandRef<'tcx, Bx::Value>, ErrorHandled> {\n         match constant.literal.val {\n-            mir::interpret::ConstValue::Unevaluated(def_id, substs)\n+            ty::ConstKind::Unevaluated(def_id, substs)\n                 if self.cx.tcx().is_static(def_id) => {\n                     assert!(substs.is_empty(), \"we don't support generic statics yet\");\n                     let static_ = bx.get_static(def_id);"}, {"sha": "de50755616bb0b7d0b592219017a10b5767433bb", "filename": "src/librustc_mir/hair/cx/expr.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c6d97dfd835b5d9a740249570e008eb94f1a9e85/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6d97dfd835b5d9a740249570e008eb94f1a9e85/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs?ref=c6d97dfd835b5d9a740249570e008eb94f1a9e85", "patch": "@@ -5,7 +5,7 @@ use crate::hair::cx::to_ref::ToRef;\n use crate::hair::util::UserAnnotatedTyHelpers;\n use rustc_index::vec::Idx;\n use rustc::hir::def::{CtorOf, Res, DefKind, CtorKind};\n-use rustc::mir::interpret::{GlobalId, ErrorHandled, ConstValue, Scalar};\n+use rustc::mir::interpret::{GlobalId, ErrorHandled, Scalar};\n use rustc::ty::{self, AdtKind, Ty};\n use rustc::ty::adjustment::{Adjustment, Adjust, AutoBorrow, AutoBorrowMutability, PointerCast};\n use rustc::ty::subst::{InternalSubsts, SubstsRef};\n@@ -978,11 +978,9 @@ fn convert_path_expr<'a, 'tcx>(\n                 ty,\n                 temp_lifetime,\n                 span: expr.span,\n-                kind: ExprKind::Literal {\n-                    literal: cx.tcx.mk_const(ty::Const {\n-                        ty, val: ConstValue::Scalar(Scalar::Ptr(ptr.into())),\n-                    }),\n-                    user_ty: None,\n+                kind: ExprKind::StaticRef {\n+                    literal: ty::Const::from_scalar(cx.tcx, Scalar::Ptr(ptr.into()), ty),\n+                    def_id: id,\n                 }\n             }.to_ref() }\n         },"}, {"sha": "772f27fb7e14f619f6798668810ff4c516b9434e", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6d97dfd835b5d9a740249570e008eb94f1a9e85/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6d97dfd835b5d9a740249570e008eb94f1a9e85/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=c6d97dfd835b5d9a740249570e008eb94f1a9e85", "patch": "@@ -425,7 +425,7 @@ impl Visitor<'tcx> for Validator<'_, 'mir, 'tcx> {\n                 let is_thread_local = self.tcx.has_attr(def_id, sym::thread_local);\n                 if is_thread_local {\n                     self.check_op(ops::ThreadLocalAccess);\n-                } else if self.const_kind() != ConstKind::Static || !context.is_mutating_use() {\n+                } else {\n                     self.check_op(ops::StaticAccess);\n                 }\n             }"}]}