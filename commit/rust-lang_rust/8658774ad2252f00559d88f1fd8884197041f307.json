{"sha": "8658774ad2252f00559d88f1fd8884197041f307", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2NTg3NzRhZDIyNTJmMDA1NTlkODhmMWZkODg4NDE5NzA0MWYzMDc=", "commit": {"author": {"name": "Pavel Sountsov", "email": "siege@google.com", "date": "2015-11-15T19:55:18Z"}, "committer": {"name": "SiegeLord", "email": "slabode@aim.com", "date": "2015-11-15T19:55:18Z"}, "message": "Implement initial option for brace style for non-fn items.", "tree": {"sha": "459bbf2c521b68f27a51a9556b10f08c5fb84339", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/459bbf2c521b68f27a51a9556b10f08c5fb84339"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8658774ad2252f00559d88f1fd8884197041f307", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8658774ad2252f00559d88f1fd8884197041f307", "html_url": "https://github.com/rust-lang/rust/commit/8658774ad2252f00559d88f1fd8884197041f307", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8658774ad2252f00559d88f1fd8884197041f307/comments", "author": {"login": "SiegeLordEx", "id": 43966695, "node_id": "MDQ6VXNlcjQzOTY2Njk1", "avatar_url": "https://avatars.githubusercontent.com/u/43966695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLordEx", "html_url": "https://github.com/SiegeLordEx", "followers_url": "https://api.github.com/users/SiegeLordEx/followers", "following_url": "https://api.github.com/users/SiegeLordEx/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLordEx/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLordEx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLordEx/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLordEx/orgs", "repos_url": "https://api.github.com/users/SiegeLordEx/repos", "events_url": "https://api.github.com/users/SiegeLordEx/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLordEx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SiegeLord", "id": 480550, "node_id": "MDQ6VXNlcjQ4MDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/480550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLord", "html_url": "https://github.com/SiegeLord", "followers_url": "https://api.github.com/users/SiegeLord/followers", "following_url": "https://api.github.com/users/SiegeLord/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLord/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLord/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLord/orgs", "repos_url": "https://api.github.com/users/SiegeLord/repos", "events_url": "https://api.github.com/users/SiegeLord/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLord/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdf56f75a1fa3736c414ca6c96a58b21f4dc90fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdf56f75a1fa3736c414ca6c96a58b21f4dc90fb", "html_url": "https://github.com/rust-lang/rust/commit/cdf56f75a1fa3736c414ca6c96a58b21f4dc90fb"}], "stats": {"total": 55, "additions": 53, "deletions": 2}, "files": [{"sha": "7a64ab1591647aa041752fc6ada8c1ab232783d8", "filename": "src/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8658774ad2252f00559d88f1fd8884197041f307/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8658774ad2252f00559d88f1fd8884197041f307/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=8658774ad2252f00559d88f1fd8884197041f307", "patch": "@@ -302,4 +302,5 @@ create_config! {\n     take_source_hints: bool, true, \"Retain some formatting characteristics from the source code\";\n     hard_tabs: bool, false, \"Use tab characters for indentation, spaces for alignment\";\n     wrap_comments: bool, false, \"Break comments to fit on the line\";\n+    item_brace_style: BraceStyle, BraceStyle::SameLineWhere, \"Brace style for structs and enums\";\n }"}, {"sha": "c4c55c841a69c32646207b2f84d4761fde45bb7b", "filename": "src/items.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8658774ad2252f00559d88f1fd8884197041f307/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8658774ad2252f00559d88f1fd8884197041f307/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=8658774ad2252f00559d88f1fd8884197041f307", "patch": "@@ -634,10 +634,17 @@ impl<'a> FmtVisitor<'a> {\n         let header_str = self.format_header(\"enum \", ident, vis);\n         self.buffer.push_str(&header_str);\n \n+        let separator = if self.config.item_brace_style == BraceStyle::AlwaysNextLine &&\n+                           !enum_def.variants.is_empty() {\n+            format!(\"\\n{}\", self.block_indent.to_string(self.config))\n+        } else {\n+            \" \".to_owned()\n+        };\n         let enum_snippet = self.snippet(span);\n         let body_start = span.lo + BytePos(enum_snippet.find_uncommented(\"{\").unwrap() as u32 + 1);\n         let generics_str = self.format_generics(generics,\n                                                 \"{\",\n+                                                &separator,\n                                                 \"{\",\n                                                 self.block_indent,\n                                                 self.block_indent.block_indent(self.config),\n@@ -813,16 +820,24 @@ impl<'a> FmtVisitor<'a> {\n \n         let body_lo = span_after(span, \"{\", self.codemap);\n \n+        let separator = if self.config.item_brace_style == BraceStyle::AlwaysNextLine &&\n+                           !fields.is_empty() {\n+            format!(\"\\n{}\", self.block_indent.to_string(self.config))\n+        } else {\n+            \" \".to_owned()\n+        };\n+\n         let generics_str = match generics {\n             Some(g) => {\n                 try_opt!(self.format_generics(g,\n                                               \"{\",\n+                                              &separator,\n                                               \"{\",\n                                               offset,\n                                               offset + header_str.len(),\n                                               mk_sp(span.lo, body_lo)))\n             }\n-            None => \" {\".to_owned(),\n+            None => format!(\"{}{{\", separator),\n         };\n         result.push_str(&generics_str);\n \n@@ -954,6 +969,7 @@ impl<'a> FmtVisitor<'a> {\n     fn format_generics(&self,\n                        generics: &ast::Generics,\n                        opener: &str,\n+                       separator: &str,\n                        terminator: &str,\n                        offset: Indent,\n                        generics_offset: Indent,\n@@ -973,7 +989,7 @@ impl<'a> FmtVisitor<'a> {\n             result.push_str(&self.block_indent.to_string(self.config));\n             result.push_str(opener);\n         } else {\n-            result.push(' ');\n+            result.push_str(separator);\n             result.push_str(opener);\n         }\n "}, {"sha": "37b02f0940a9bc4aa9227cb2e3dabab5ef989f6c", "filename": "tests/source/item-brace-style.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8658774ad2252f00559d88f1fd8884197041f307/tests%2Fsource%2Fitem-brace-style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8658774ad2252f00559d88f1fd8884197041f307/tests%2Fsource%2Fitem-brace-style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fitem-brace-style.rs?ref=8658774ad2252f00559d88f1fd8884197041f307", "patch": "@@ -0,0 +1,16 @@\n+// rustfmt-item_brace_style: AlwaysNextLine\n+\n+mod M {\n+    enum A {\n+        A,\n+    }\n+\n+    struct B {\n+        b: i32,\n+    }\n+\n+    // For empty enums and structs, the brace remains on the same line.\n+    enum C {}\n+\n+    struct D {}\n+}"}, {"sha": "006d6b4d3bf6997baa2e22ba94c7d65b917e485e", "filename": "tests/target/item-brace-style.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8658774ad2252f00559d88f1fd8884197041f307/tests%2Ftarget%2Fitem-brace-style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8658774ad2252f00559d88f1fd8884197041f307/tests%2Ftarget%2Fitem-brace-style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fitem-brace-style.rs?ref=8658774ad2252f00559d88f1fd8884197041f307", "patch": "@@ -0,0 +1,18 @@\n+// rustfmt-item_brace_style: AlwaysNextLine\n+\n+mod M {\n+    enum A\n+    {\n+        A,\n+    }\n+\n+    struct B\n+    {\n+        b: i32,\n+    }\n+\n+    // For empty enums and structs, the brace remains on the same line.\n+    enum C {}\n+\n+    struct D {}\n+}"}]}