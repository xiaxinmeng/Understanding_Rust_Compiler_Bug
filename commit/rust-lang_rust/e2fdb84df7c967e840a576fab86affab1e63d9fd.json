{"sha": "e2fdb84df7c967e840a576fab86affab1e63d9fd", "node_id": "C_kwDOAAsO6NoAKGUyZmRiODRkZjdjOTY3ZTg0MGE1NzZmYWI4NmFmZmFiMWU2M2Q5ZmQ", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-04-18T01:58:33Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-04-18T19:50:56Z"}, "message": "Conditionally export msan symbols only if they are defined\n\n* `__msan_keep_going` is defined when `-Zsanitizer-recover=memory`.\n* `__msan_track_origins` is defined when `-Zsanitizer-memory-track-origins`.", "tree": {"sha": "3bbe18bf89985d60fdd6c65c2648791e61a3fd5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bbe18bf89985d60fdd6c65c2648791e61a3fd5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2fdb84df7c967e840a576fab86affab1e63d9fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2fdb84df7c967e840a576fab86affab1e63d9fd", "html_url": "https://github.com/rust-lang/rust/commit/e2fdb84df7c967e840a576fab86affab1e63d9fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2fdb84df7c967e840a576fab86affab1e63d9fd/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c475117ffb526a7c45c3b59710bd9dcdc38982af", "url": "https://api.github.com/repos/rust-lang/rust/commits/c475117ffb526a7c45c3b59710bd9dcdc38982af", "html_url": "https://github.com/rust-lang/rust/commit/c475117ffb526a7c45c3b59710bd9dcdc38982af"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "2fa6778cca4d76b9ce6a191d79ea8ce3268a9b1d", "filename": "compiler/rustc_codegen_ssa/src/back/symbol_export.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e2fdb84df7c967e840a576fab86affab1e63d9fd/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2fdb84df7c967e840a576fab86affab1e63d9fd/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs?ref=e2fdb84df7c967e840a576fab86affab1e63d9fd", "patch": "@@ -241,10 +241,18 @@ fn exported_symbols_provider_local<'tcx>(\n     }\n \n     if tcx.sess.opts.debugging_opts.sanitizer.contains(SanitizerSet::MEMORY) {\n+        let mut msan_weak_symbols = Vec::new();\n+\n         // Similar to profiling, preserve weak msan symbol during LTO.\n-        const MSAN_WEAK_SYMBOLS: [&str; 2] = [\"__msan_track_origins\", \"__msan_keep_going\"];\n+        if tcx.sess.opts.debugging_opts.sanitizer_recover.contains(SanitizerSet::MEMORY) {\n+            msan_weak_symbols.push(\"__msan_keep_going\");\n+        }\n+\n+        if tcx.sess.opts.debugging_opts.sanitizer_memory_track_origins != 0 {\n+            msan_weak_symbols.push(\"__msan_track_origins\");\n+        }\n \n-        symbols.extend(MSAN_WEAK_SYMBOLS.iter().map(|sym| {\n+        symbols.extend(msan_weak_symbols.into_iter().map(|sym| {\n             let exported_symbol = ExportedSymbol::NoDefId(SymbolName::new(tcx, sym));\n             (\n                 exported_symbol,"}]}