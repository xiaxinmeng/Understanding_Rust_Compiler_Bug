{"sha": "8df1f41b9c11443a52050c653ac9d89ceea1cae3", "node_id": "C_kwDOAAsO6NoAKDhkZjFmNDFiOWMxMTQ0M2E1MjA1MGM2NTNhYzlkODljZWVhMWNhZTM", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2023-04-12T20:53:38Z"}, "committer": {"name": "Lukas Markeffsky", "email": "@", "date": "2023-04-13T16:08:52Z"}, "message": "fix false positives for `unused_parens` around unary and binary operations", "tree": {"sha": "2b596f861bd21e623d44e089396c0dcb048df197", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b596f861bd21e623d44e089396c0dcb048df197"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8df1f41b9c11443a52050c653ac9d89ceea1cae3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8df1f41b9c11443a52050c653ac9d89ceea1cae3", "html_url": "https://github.com/rust-lang/rust/commit/8df1f41b9c11443a52050c653ac9d89ceea1cae3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8df1f41b9c11443a52050c653ac9d89ceea1cae3/comments", "author": null, "committer": null, "parents": [{"sha": "e14b81f10de3e528f13692ab97ee90c5d96b170a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e14b81f10de3e528f13692ab97ee90c5d96b170a", "html_url": "https://github.com/rust-lang/rust/commit/e14b81f10de3e528f13692ab97ee90c5d96b170a"}], "stats": {"total": 100, "additions": 64, "deletions": 36}, "files": [{"sha": "5df6ee4fdb9d0727fd962bc8a14a28ece9799807", "filename": "compiler/rustc_lint/src/unused.rs", "status": "modified", "additions": 30, "deletions": 18, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/8df1f41b9c11443a52050c653ac9d89ceea1cae3/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8df1f41b9c11443a52050c653ac9d89ceea1cae3/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Funused.rs?ref=8df1f41b9c11443a52050c653ac9d89ceea1cae3", "patch": "@@ -569,36 +569,48 @@ trait UnusedDelimLint {\n             }\n         }\n \n-        // Prevent false-positives in cases like `fn x() -> u8 { ({ 0 } + 1) }`\n-        let lhs_needs_parens = {\n+        // Check if LHS needs parens to prevent false-positives in cases like `fn x() -> u8 { ({ 0 } + 1) }`.\n+        {\n             let mut innermost = inner;\n             loop {\n                 innermost = match &innermost.kind {\n-                    ExprKind::Binary(_, lhs, _rhs) => lhs,\n+                    ExprKind::Binary(_op, lhs, _rhs) => lhs,\n                     ExprKind::Call(fn_, _params) => fn_,\n                     ExprKind::Cast(expr, _ty) => expr,\n                     ExprKind::Type(expr, _ty) => expr,\n                     ExprKind::Index(base, _subscript) => base,\n-                    _ => break false,\n+                    _ => break,\n                 };\n                 if !classify::expr_requires_semi_to_be_stmt(innermost) {\n-                    break true;\n+                    return true;\n                 }\n             }\n-        };\n+        }\n \n-        lhs_needs_parens\n-            || (followed_by_block\n-                && match &inner.kind {\n-                    ExprKind::Ret(_)\n-                    | ExprKind::Break(..)\n-                    | ExprKind::Yield(..)\n-                    | ExprKind::Yeet(..) => true,\n-                    ExprKind::Range(_lhs, Some(rhs), _limits) => {\n-                        matches!(rhs.kind, ExprKind::Block(..))\n-                    }\n-                    _ => parser::contains_exterior_struct_lit(&inner),\n-                })\n+        // Check if RHS needs parens to prevent false-positives in cases like `if (() == return) {}`.\n+        if !followed_by_block {\n+            return false;\n+        }\n+        let mut innermost = inner;\n+        loop {\n+            innermost = match &innermost.kind {\n+                ExprKind::Unary(_op, expr) => expr,\n+                ExprKind::Binary(_op, _lhs, rhs) => rhs,\n+                ExprKind::AssignOp(_op, _lhs, rhs) => rhs,\n+                ExprKind::Assign(_lhs, rhs, _span) => rhs,\n+\n+                ExprKind::Ret(_)\n+                | ExprKind::Break(..)\n+                | ExprKind::Yield(..)\n+                | ExprKind::Yeet(..) => return true,\n+\n+                ExprKind::Range(_lhs, Some(rhs), _limits) => {\n+                    return matches!(rhs.kind, ExprKind::Block(..));\n+                }\n+\n+                _ => return parser::contains_exterior_struct_lit(&inner),\n+            }\n+        }\n     }\n \n     fn emit_unused_delims_expr("}, {"sha": "9a1887017bb0d2635eeea5548f3b1ca8e32a67a9", "filename": "tests/ui/lint/unused/issue-54538-unused-parens-lint.fixed", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8df1f41b9c11443a52050c653ac9d89ceea1cae3/tests%2Fui%2Flint%2Funused%2Fissue-54538-unused-parens-lint.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/8df1f41b9c11443a52050c653ac9d89ceea1cae3/tests%2Fui%2Flint%2Funused%2Fissue-54538-unused-parens-lint.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Funused%2Fissue-54538-unused-parens-lint.fixed?ref=8df1f41b9c11443a52050c653ac9d89ceea1cae3", "patch": "@@ -32,6 +32,14 @@ fn _no_lint_yeet() -> Result<(), ()> {\n     Ok(())\n }\n \n+fn _no_lint_ops() {\n+    #![allow(unreachable_code, irrefutable_let_patterns)]\n+    if ((..{}) == ..{}) {}\n+    if (!return) {}\n+    loop { match (() = () = () = break {}) {} }\n+    while let () = (*&mut false |= true && return) {}\n+}\n+\n // Don't lint in these cases (#64106).\n fn or_patterns_no_lint() {\n     match Box::new(0) {"}, {"sha": "4fdd2b56b69ececf9b6d3b13cbe3016920520371", "filename": "tests/ui/lint/unused/issue-54538-unused-parens-lint.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8df1f41b9c11443a52050c653ac9d89ceea1cae3/tests%2Fui%2Flint%2Funused%2Fissue-54538-unused-parens-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8df1f41b9c11443a52050c653ac9d89ceea1cae3/tests%2Fui%2Flint%2Funused%2Fissue-54538-unused-parens-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Funused%2Fissue-54538-unused-parens-lint.rs?ref=8df1f41b9c11443a52050c653ac9d89ceea1cae3", "patch": "@@ -32,6 +32,14 @@ fn _no_lint_yeet() -> Result<(), ()> {\n     Ok(())\n }\n \n+fn _no_lint_ops() {\n+    #![allow(unreachable_code, irrefutable_let_patterns)]\n+    if ((..{}) == ..{}) {}\n+    if (!return) {}\n+    loop { match (() = () = () = break {}) {} }\n+    while let () = (*&mut false |= true && return) {}\n+}\n+\n // Don't lint in these cases (#64106).\n fn or_patterns_no_lint() {\n     match Box::new(0) {"}, {"sha": "cfa4963d3b6709bb67eb6b284cf9cdf48b9da0b1", "filename": "tests/ui/lint/unused/issue-54538-unused-parens-lint.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/8df1f41b9c11443a52050c653ac9d89ceea1cae3/tests%2Fui%2Flint%2Funused%2Fissue-54538-unused-parens-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8df1f41b9c11443a52050c653ac9d89ceea1cae3/tests%2Fui%2Flint%2Funused%2Fissue-54538-unused-parens-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Funused%2Fissue-54538-unused-parens-lint.stderr?ref=8df1f41b9c11443a52050c653ac9d89ceea1cae3", "patch": "@@ -76,7 +76,7 @@ LL +     let _ = |a: u8| 0;\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:56:12\n+  --> $DIR/issue-54538-unused-parens-lint.rs:64:12\n    |\n LL |     if let (0 | 1) = 0 {}\n    |            ^     ^\n@@ -88,7 +88,7 @@ LL +     if let 0 | 1 = 0 {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:57:13\n+  --> $DIR/issue-54538-unused-parens-lint.rs:65:13\n    |\n LL |     if let ((0 | 1),) = (0,) {}\n    |             ^     ^\n@@ -100,7 +100,7 @@ LL +     if let (0 | 1,) = (0,) {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:58:13\n+  --> $DIR/issue-54538-unused-parens-lint.rs:66:13\n    |\n LL |     if let [(0 | 1)] = [0] {}\n    |             ^     ^\n@@ -112,7 +112,7 @@ LL +     if let [0 | 1] = [0] {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:59:16\n+  --> $DIR/issue-54538-unused-parens-lint.rs:67:16\n    |\n LL |     if let 0 | (1 | 2) = 0 {}\n    |                ^     ^\n@@ -124,7 +124,7 @@ LL +     if let 0 | 1 | 2 = 0 {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:61:15\n+  --> $DIR/issue-54538-unused-parens-lint.rs:69:15\n    |\n LL |     if let TS((0 | 1)) = TS(0) {}\n    |               ^     ^\n@@ -136,7 +136,7 @@ LL +     if let TS(0 | 1) = TS(0) {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:63:20\n+  --> $DIR/issue-54538-unused-parens-lint.rs:71:20\n    |\n LL |     if let NS { f: (0 | 1) } = (NS { f: 0 }) {}\n    |                    ^     ^\n@@ -148,7 +148,7 @@ LL +     if let NS { f: 0 | 1 } = (NS { f: 0 }) {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:73:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:81:9\n    |\n LL |         (_) => {}\n    |         ^ ^\n@@ -160,7 +160,7 @@ LL +         _ => {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:74:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:82:9\n    |\n LL |         (y) => {}\n    |         ^ ^\n@@ -172,7 +172,7 @@ LL +         y => {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:75:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:83:9\n    |\n LL |         (ref r) => {}\n    |         ^     ^\n@@ -184,7 +184,7 @@ LL +         ref r => {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:76:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:84:9\n    |\n LL |         (e @ 1...2) => {}\n    |         ^         ^\n@@ -196,7 +196,7 @@ LL +         e @ 1...2 => {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:82:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:90:9\n    |\n LL |         (e @ &(1...2)) => {}\n    |         ^            ^\n@@ -208,7 +208,7 @@ LL +         e @ &(1...2) => {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:83:10\n+  --> $DIR/issue-54538-unused-parens-lint.rs:91:10\n    |\n LL |         &(_) => {}\n    |          ^ ^\n@@ -220,7 +220,7 @@ LL +         &_ => {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:94:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:102:9\n    |\n LL |         (_) => {}\n    |         ^ ^\n@@ -232,7 +232,7 @@ LL +         _ => {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:95:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:103:9\n    |\n LL |         (y) => {}\n    |         ^ ^\n@@ -244,7 +244,7 @@ LL +         y => {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:96:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:104:9\n    |\n LL |         (ref r) => {}\n    |         ^     ^\n@@ -256,7 +256,7 @@ LL +         ref r => {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:97:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:105:9\n    |\n LL |         (e @ 1..=2) => {}\n    |         ^         ^\n@@ -268,7 +268,7 @@ LL +         e @ 1..=2 => {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:103:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:111:9\n    |\n LL |         (e @ &(1..=2)) => {}\n    |         ^            ^\n@@ -280,7 +280,7 @@ LL +         e @ &(1..=2) => {}\n    |\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:104:10\n+  --> $DIR/issue-54538-unused-parens-lint.rs:112:10\n    |\n LL |         &(_) => {}\n    |          ^ ^"}]}