{"sha": "7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "node_id": "C_kwDOAAsO6NoAKDdlNzQ4M2QyNmUzY2VjN2E0NGVmMDBjZjdhZTZjOWM4YzkxOGJlYzY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-09T05:20:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-09T05:20:41Z"}, "message": "Auto merge of #110152 - ChrisDenton:windows-sys, r=thomcc\n\nStart using `windows sys` for Windows FFI bindings in std\n\nSwitch to using windows-sys for FFI. In order to avoid some currently contentious issues, this uses windows-bindgen to generate a smaller set of bindings instead of using the full crate.\n\nUnlike the windows-sys crate, the generated bindings uses `*mut c_void` for handle types instead of `isize`. This to sidestep opsem concerns about mixing pointer types and integers between languages. Note that `SOCKET` remains defined as an integer but instead of being a usize, it's changed to fit the [standard library definition](https://github.com/rust-lang/rust/blob/a41fc00eaf352541008965fec0dee811e44373b3/library/std/src/os/windows/raw.rs#L12-L16):\n\n```rust\n#[cfg(target_pointer_width = \"32\")]\npub type SOCKET = u32;\n#[cfg(target_pointer_width = \"64\")]\npub type SOCKET = u64;\n```\n\nThe generated bindings also customizes the `#[link]` imports. I hope to switch to using raw-dylib but I don't want to tie that too closely with the switch to windows-sys.\n\n---\n\nChanges outside of the bindings are, for the most part, fairly minimal (e.g. some differences in `*mut` vs. `*const` or a few types differ). One issue is that our own bindings sometimes mix in higher level types, like `BorrowedHandle`. This is pretty adhoc though.", "tree": {"sha": "b88bb6a3c0ad481520de4340dc20e59f48ef8fd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b88bb6a3c0ad481520de4340dc20e59f48ef8fd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "html_url": "https://github.com/rust-lang/rust/commit/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33a01e2e93bfdd0c37649c6f82172644b8315b55", "url": "https://api.github.com/repos/rust-lang/rust/commits/33a01e2e93bfdd0c37649c6f82172644b8315b55", "html_url": "https://github.com/rust-lang/rust/commit/33a01e2e93bfdd0c37649c6f82172644b8315b55"}, {"sha": "e314a3b21f921cb2b20bbb285929044eda23b612", "url": "https://api.github.com/repos/rust-lang/rust/commits/e314a3b21f921cb2b20bbb285929044eda23b612", "html_url": "https://github.com/rust-lang/rust/commit/e314a3b21f921cb2b20bbb285929044eda23b612"}], "stats": {"total": 10285, "additions": 7187, "deletions": 3098}, "files": [{"sha": "6539bd393fb9a3c25ebf5347a6b73a8c1b06a381", "filename": "Cargo.lock", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -1443,6 +1443,13 @@ dependencies = [\n  \"serde_json\",\n ]\n \n+[[package]]\n+name = \"generate-windows-sys\"\n+version = \"0.1.0\"\n+dependencies = [\n+ \"windows-bindgen\",\n+]\n+\n [[package]]\n name = \"generic-array\"\n version = \"0.14.4\"\n@@ -5509,6 +5516,22 @@ dependencies = [\n  \"windows-targets 0.48.0\",\n ]\n \n+[[package]]\n+name = \"windows-bindgen\"\n+version = \"0.49.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"b6935fb09b84ee57929ae92518b475f5dfdfbeb87c5334756acc28ee8e202b60\"\n+dependencies = [\n+ \"windows-metadata\",\n+ \"windows-tokens\",\n+]\n+\n+[[package]]\n+name = \"windows-metadata\"\n+version = \"0.49.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"2f5bca94a32bf1e6a376522b6601275a3b611ee885ec0f1b6a05f17e8cfd3385\"\n+\n [[package]]\n name = \"windows-sys\"\n version = \"0.42.0\"\n@@ -5572,6 +5595,12 @@ dependencies = [\n  \"windows_x86_64_msvc 0.48.0\",\n ]\n \n+[[package]]\n+name = \"windows-tokens\"\n+version = \"0.48.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"b34c9a3b28cb41db7385546f7f9a8179348dffc89923dde66857b1ba5312f6b4\"\n+\n [[package]]\n name = \"windows_aarch64_gnullvm\"\n version = \"0.42.2\""}, {"sha": "53331e2869f2e799adcce4808316f80dca012220", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -39,6 +39,7 @@ members = [\n   \"src/tools/collect-license-metadata\",\n   \"src/tools/generate-copyright\",\n   \"src/tools/suggest-tests\",\n+  \"src/tools/generate-windows-sys\",\n ]\n \n exclude = ["}, {"sha": "ce34cd1a9bfb3fe9e03f74ccd97145295aff1e32", "filename": "library/std/src/os/windows/io/socket.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fsocket.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fsocket.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fsocket.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -110,7 +110,7 @@ impl BorrowedSocket<'_> {\n     /// object as the existing `BorrowedSocket` instance.\n     #[stable(feature = \"io_safety\", since = \"1.63.0\")]\n     pub fn try_clone_to_owned(&self) -> io::Result<OwnedSocket> {\n-        let mut info = unsafe { mem::zeroed::<c::WSAPROTOCOL_INFO>() };\n+        let mut info = unsafe { mem::zeroed::<c::WSAPROTOCOL_INFOW>() };\n         let result = unsafe {\n             c::WSADuplicateSocketW(self.as_raw_socket(), c::GetCurrentProcessId(), &mut info)\n         };"}, {"sha": "2bc40c4748a355ebde011d4f9eef74693b028887", "filename": "library/std/src/sys/windows/c.rs", "status": "modified", "additions": 153, "deletions": 1162, "changes": 1315, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -6,33 +6,18 @@\n \n use crate::ffi::CStr;\n use crate::mem;\n-use crate::os::raw::{c_char, c_long, c_longlong, c_uint, c_ulong, c_ushort};\n-use crate::os::windows::io::{BorrowedHandle, HandleOrInvalid, HandleOrNull};\n+pub use crate::os::raw::c_int;\n+use crate::os::raw::{c_char, c_long, c_longlong, c_uint, c_ulong, c_ushort, c_void};\n+use crate::os::windows::io::{AsRawHandle, BorrowedHandle};\n use crate::ptr;\n use core::ffi::NonZero_c_ulong;\n \n-use libc::{c_void, size_t, wchar_t};\n-\n-pub use crate::os::raw::c_int;\n-\n-#[path = \"c/errors.rs\"] // c.rs is included from two places so we need to specify this\n-mod errors;\n-pub use errors::*;\n+#[path = \"c/windows_sys.rs\"] // c.rs is included from two places so we need to specify this\n+mod windows_sys;\n+pub use windows_sys::*;\n \n-pub use self::EXCEPTION_DISPOSITION::*;\n-pub use self::FILE_INFO_BY_HANDLE_CLASS::*;\n-\n-pub type DWORD_PTR = ULONG_PTR;\n pub type DWORD = c_ulong;\n pub type NonZeroDWORD = NonZero_c_ulong;\n-pub type HANDLE = LPVOID;\n-pub type HINSTANCE = HANDLE;\n-pub type HMODULE = HINSTANCE;\n-pub type HRESULT = LONG;\n-pub type BOOL = c_int;\n-pub type BYTE = u8;\n-pub type BOOLEAN = BYTE;\n-pub type GROUP = c_uint;\n pub type LARGE_INTEGER = c_longlong;\n pub type LONG = c_long;\n pub type UINT = c_uint;\n@@ -41,218 +26,40 @@ pub type USHORT = c_ushort;\n pub type SIZE_T = usize;\n pub type WORD = u16;\n pub type CHAR = c_char;\n-pub type CCHAR = c_char;\n-pub type ULONG_PTR = usize;\n pub type ULONG = c_ulong;\n-pub type NTSTATUS = LONG;\n pub type ACCESS_MASK = DWORD;\n \n-pub type LPBOOL = *mut BOOL;\n-pub type LPBYTE = *mut BYTE;\n-pub type LPCCH = *const CHAR;\n-pub type LPCSTR = *const CHAR;\n-pub type LPCWCH = *const WCHAR;\n-pub type LPCWSTR = *const WCHAR;\n pub type LPCVOID = *const c_void;\n-pub type LPDWORD = *mut DWORD;\n pub type LPHANDLE = *mut HANDLE;\n pub type LPOVERLAPPED = *mut OVERLAPPED;\n-pub type LPPROCESS_INFORMATION = *mut PROCESS_INFORMATION;\n pub type LPSECURITY_ATTRIBUTES = *mut SECURITY_ATTRIBUTES;\n-pub type LPSTARTUPINFO = *mut STARTUPINFO;\n-pub type LPSTR = *mut CHAR;\n pub type LPVOID = *mut c_void;\n pub type LPWCH = *mut WCHAR;\n-pub type LPWIN32_FIND_DATAW = *mut WIN32_FIND_DATAW;\n-pub type LPWSADATA = *mut WSADATA;\n-pub type LPWSAPROTOCOL_INFO = *mut WSAPROTOCOL_INFO;\n pub type LPWSTR = *mut WCHAR;\n-pub type LPFILETIME = *mut FILETIME;\n-pub type LPSYSTEM_INFO = *mut SYSTEM_INFO;\n-pub type LPWSABUF = *mut WSABUF;\n-pub type LPWSAOVERLAPPED = *mut c_void;\n-pub type LPWSAOVERLAPPED_COMPLETION_ROUTINE = *mut c_void;\n-pub type BCRYPT_ALG_HANDLE = LPVOID;\n \n-pub type PCONDITION_VARIABLE = *mut CONDITION_VARIABLE;\n pub type PLARGE_INTEGER = *mut c_longlong;\n pub type PSRWLOCK = *mut SRWLOCK;\n-pub type LPINIT_ONCE = *mut INIT_ONCE;\n \n-pub type SOCKET = crate::os::windows::raw::SOCKET;\n pub type socklen_t = c_int;\n pub type ADDRESS_FAMILY = USHORT;\n+pub use FD_SET as fd_set;\n+pub use LINGER as linger;\n+pub use TIMEVAL as timeval;\n \n-pub const TRUE: BOOL = 1;\n-pub const FALSE: BOOL = 0;\n-\n-pub const CSTR_LESS_THAN: c_int = 1;\n-pub const CSTR_EQUAL: c_int = 2;\n-pub const CSTR_GREATER_THAN: c_int = 3;\n-\n-pub const FILE_ATTRIBUTE_READONLY: DWORD = 0x1;\n-pub const FILE_ATTRIBUTE_DIRECTORY: DWORD = 0x10;\n-pub const FILE_ATTRIBUTE_REPARSE_POINT: DWORD = 0x400;\n-pub const INVALID_FILE_ATTRIBUTES: DWORD = DWORD::MAX;\n-\n-pub const FILE_SHARE_DELETE: DWORD = 0x4;\n-pub const FILE_SHARE_READ: DWORD = 0x1;\n-pub const FILE_SHARE_WRITE: DWORD = 0x2;\n+pub type CONDITION_VARIABLE = RTL_CONDITION_VARIABLE;\n+pub type SRWLOCK = RTL_SRWLOCK;\n+pub type INIT_ONCE = RTL_RUN_ONCE;\n \n-pub const FILE_OPEN: ULONG = 0x00000001;\n-pub const FILE_OPEN_REPARSE_POINT: ULONG = 0x200000;\n-pub const OBJ_DONT_REPARSE: ULONG = 0x1000;\n+pub const CONDITION_VARIABLE_INIT: CONDITION_VARIABLE = CONDITION_VARIABLE { Ptr: ptr::null_mut() };\n+pub const SRWLOCK_INIT: SRWLOCK = SRWLOCK { Ptr: ptr::null_mut() };\n+pub const INIT_ONCE_STATIC_INIT: INIT_ONCE = INIT_ONCE { Ptr: ptr::null_mut() };\n \n-pub const CREATE_ALWAYS: DWORD = 2;\n-pub const CREATE_NEW: DWORD = 1;\n-pub const OPEN_ALWAYS: DWORD = 4;\n-pub const OPEN_EXISTING: DWORD = 3;\n-pub const TRUNCATE_EXISTING: DWORD = 5;\n-\n-pub const FILE_LIST_DIRECTORY: DWORD = 0x1;\n-pub const FILE_WRITE_DATA: DWORD = 0x00000002;\n-pub const FILE_APPEND_DATA: DWORD = 0x00000004;\n-pub const FILE_WRITE_EA: DWORD = 0x00000010;\n-pub const FILE_WRITE_ATTRIBUTES: DWORD = 0x00000100;\n-pub const DELETE: DWORD = 0x10000;\n-pub const READ_CONTROL: DWORD = 0x00020000;\n-pub const SYNCHRONIZE: DWORD = 0x00100000;\n-pub const GENERIC_READ: DWORD = 0x80000000;\n-pub const GENERIC_WRITE: DWORD = 0x40000000;\n-pub const STANDARD_RIGHTS_WRITE: DWORD = READ_CONTROL;\n-pub const FILE_GENERIC_WRITE: DWORD = STANDARD_RIGHTS_WRITE\n-    | FILE_WRITE_DATA\n-    | FILE_WRITE_ATTRIBUTES\n-    | FILE_WRITE_EA\n-    | FILE_APPEND_DATA\n-    | SYNCHRONIZE;\n-\n-pub const FILE_FLAG_OPEN_REPARSE_POINT: DWORD = 0x00200000;\n-pub const FILE_FLAG_BACKUP_SEMANTICS: DWORD = 0x02000000;\n-pub const SECURITY_SQOS_PRESENT: DWORD = 0x00100000;\n-\n-pub const FIONBIO: c_ulong = 0x8004667e;\n-\n-pub const MAX_PATH: usize = 260;\n-\n-pub const FILE_TYPE_PIPE: u32 = 3;\n-\n-pub const CP_UTF8: DWORD = 65001;\n-pub const MB_ERR_INVALID_CHARS: DWORD = 0x08;\n-pub const WC_ERR_INVALID_CHARS: DWORD = 0x80;\n-\n-#[repr(C)]\n-#[derive(Copy)]\n-pub struct WIN32_FIND_DATAW {\n-    pub dwFileAttributes: DWORD,\n-    pub ftCreationTime: FILETIME,\n-    pub ftLastAccessTime: FILETIME,\n-    pub ftLastWriteTime: FILETIME,\n-    pub nFileSizeHigh: DWORD,\n-    pub nFileSizeLow: DWORD,\n-    pub dwReserved0: DWORD,\n-    pub dwReserved1: DWORD,\n-    pub cFileName: [wchar_t; 260], // #define MAX_PATH 260\n-    pub cAlternateFileName: [wchar_t; 14],\n-}\n-impl Clone for WIN32_FIND_DATAW {\n-    fn clone(&self) -> Self {\n-        *self\n-    }\n-}\n-\n-pub const WSA_FLAG_OVERLAPPED: DWORD = 0x01;\n-pub const WSA_FLAG_NO_HANDLE_INHERIT: DWORD = 0x80;\n-\n-pub const WSADESCRIPTION_LEN: usize = 256;\n-pub const WSASYS_STATUS_LEN: usize = 128;\n-pub const WSAPROTOCOL_LEN: DWORD = 255;\n-pub const INVALID_SOCKET: SOCKET = !0;\n-\n-pub const MAX_PROTOCOL_CHAIN: DWORD = 7;\n-\n-pub const MAXIMUM_REPARSE_DATA_BUFFER_SIZE: usize = 16 * 1024;\n-pub const FSCTL_GET_REPARSE_POINT: DWORD = 0x900a8;\n-pub const IO_REPARSE_TAG_SYMLINK: DWORD = 0xa000000c;\n-pub const IO_REPARSE_TAG_MOUNT_POINT: DWORD = 0xa0000003;\n-pub const SYMLINK_FLAG_RELATIVE: DWORD = 0x00000001;\n-pub const FSCTL_SET_REPARSE_POINT: DWORD = 0x900a4;\n-\n-pub const SYMBOLIC_LINK_FLAG_DIRECTORY: DWORD = 0x1;\n-pub const SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE: DWORD = 0x2;\n-\n-// Note that these are not actually HANDLEs, just values to pass to GetStdHandle\n-pub const STD_INPUT_HANDLE: DWORD = -10i32 as DWORD;\n-pub const STD_OUTPUT_HANDLE: DWORD = -11i32 as DWORD;\n-pub const STD_ERROR_HANDLE: DWORD = -12i32 as DWORD;\n-\n-pub const PROGRESS_CONTINUE: DWORD = 0;\n-\n-pub const E_NOTIMPL: HRESULT = 0x80004001u32 as HRESULT;\n-\n-pub const INVALID_HANDLE_VALUE: HANDLE = ptr::invalid_mut(!0);\n-\n-pub const FACILITY_NT_BIT: DWORD = 0x1000_0000;\n-\n-pub const FORMAT_MESSAGE_FROM_SYSTEM: DWORD = 0x00001000;\n-pub const FORMAT_MESSAGE_FROM_HMODULE: DWORD = 0x00000800;\n-pub const FORMAT_MESSAGE_IGNORE_INSERTS: DWORD = 0x00000200;\n-\n-pub const TLS_OUT_OF_INDEXES: DWORD = 0xFFFFFFFF;\n-\n-pub const DLL_THREAD_DETACH: DWORD = 3;\n-pub const DLL_PROCESS_DETACH: DWORD = 0;\n-\n-pub const INFINITE: DWORD = !0;\n-\n-pub const DUPLICATE_SAME_ACCESS: DWORD = 0x00000002;\n-\n-pub const CONDITION_VARIABLE_INIT: CONDITION_VARIABLE = CONDITION_VARIABLE { ptr: ptr::null_mut() };\n-pub const SRWLOCK_INIT: SRWLOCK = SRWLOCK { ptr: ptr::null_mut() };\n-pub const INIT_ONCE_STATIC_INIT: INIT_ONCE = INIT_ONCE { ptr: ptr::null_mut() };\n-\n-pub const INIT_ONCE_INIT_FAILED: DWORD = 0x00000004;\n-\n-pub const DETACHED_PROCESS: DWORD = 0x00000008;\n-pub const CREATE_NEW_PROCESS_GROUP: DWORD = 0x00000200;\n-pub const CREATE_UNICODE_ENVIRONMENT: DWORD = 0x00000400;\n-pub const STARTF_USESTDHANDLES: DWORD = 0x00000100;\n-\n-pub const AF_INET: c_int = 2;\n-pub const AF_INET6: c_int = 23;\n-pub const SD_BOTH: c_int = 2;\n-pub const SD_RECEIVE: c_int = 0;\n-pub const SD_SEND: c_int = 1;\n-pub const SOCK_DGRAM: c_int = 2;\n-pub const SOCK_STREAM: c_int = 1;\n-pub const SOCKET_ERROR: c_int = -1;\n-pub const SOL_SOCKET: c_int = 0xffff;\n-pub const SO_LINGER: c_int = 0x0080;\n-pub const SO_RCVTIMEO: c_int = 0x1006;\n-pub const SO_SNDTIMEO: c_int = 0x1005;\n-pub const IPPROTO_IP: c_int = 0;\n-pub const IPPROTO_TCP: c_int = 6;\n-pub const IPPROTO_IPV6: c_int = 41;\n-pub const TCP_NODELAY: c_int = 0x0001;\n-pub const IP_TTL: c_int = 4;\n-pub const IPV6_V6ONLY: c_int = 27;\n-pub const SO_ERROR: c_int = 0x1007;\n-pub const SO_BROADCAST: c_int = 0x0020;\n-pub const IP_MULTICAST_LOOP: c_int = 11;\n-pub const IPV6_MULTICAST_LOOP: c_int = 11;\n-pub const IP_MULTICAST_TTL: c_int = 10;\n-pub const IP_ADD_MEMBERSHIP: c_int = 12;\n-pub const IP_DROP_MEMBERSHIP: c_int = 13;\n-pub const IPV6_ADD_MEMBERSHIP: c_int = 12;\n-pub const IPV6_DROP_MEMBERSHIP: c_int = 13;\n-pub const MSG_PEEK: c_int = 0x2;\n-\n-#[repr(C)]\n-#[derive(Copy, Clone)]\n-pub struct linger {\n-    pub l_onoff: c_ushort,\n-    pub l_linger: c_ushort,\n-}\n+// Some windows_sys types have different signs than the types we use.\n+pub const OBJ_DONT_REPARSE: u32 = windows_sys::OBJ_DONT_REPARSE as u32;\n+pub const FRS_ERR_SYSVOL_POPULATE_TIMEOUT: u32 =\n+    windows_sys::FRS_ERR_SYSVOL_POPULATE_TIMEOUT as u32;\n+pub const AF_INET: c_int = windows_sys::AF_INET as c_int;\n+pub const AF_INET6: c_int = windows_sys::AF_INET6 as c_int;\n \n #[repr(C)]\n pub struct ip_mreq {\n@@ -266,66 +73,19 @@ pub struct ipv6_mreq {\n     pub ipv6mr_interface: c_uint,\n }\n \n-pub const VOLUME_NAME_DOS: DWORD = 0x0;\n-pub const MOVEFILE_REPLACE_EXISTING: DWORD = 1;\n-\n-pub const FILE_BEGIN: DWORD = 0;\n-pub const FILE_CURRENT: DWORD = 1;\n-pub const FILE_END: DWORD = 2;\n-\n-pub const WAIT_OBJECT_0: DWORD = 0x00000000;\n-pub const WAIT_TIMEOUT: DWORD = 258;\n-pub const WAIT_FAILED: DWORD = 0xFFFFFFFF;\n-\n-pub const PIPE_ACCESS_INBOUND: DWORD = 0x00000001;\n-pub const PIPE_ACCESS_OUTBOUND: DWORD = 0x00000002;\n-pub const FILE_FLAG_FIRST_PIPE_INSTANCE: DWORD = 0x00080000;\n-pub const FILE_FLAG_OVERLAPPED: DWORD = 0x40000000;\n-pub const PIPE_WAIT: DWORD = 0x00000000;\n-pub const PIPE_TYPE_BYTE: DWORD = 0x00000000;\n-pub const PIPE_REJECT_REMOTE_CLIENTS: DWORD = 0x00000008;\n-pub const PIPE_READMODE_BYTE: DWORD = 0x00000000;\n-\n-pub const FD_SETSIZE: usize = 64;\n-\n-pub const STACK_SIZE_PARAM_IS_A_RESERVATION: DWORD = 0x00010000;\n-\n-pub const STATUS_SUCCESS: NTSTATUS = 0x00000000;\n-pub const STATUS_DELETE_PENDING: NTSTATUS = 0xc0000056_u32 as _;\n-pub const STATUS_INVALID_PARAMETER: NTSTATUS = 0xc000000d_u32 as _;\n-\n-pub const STATUS_PENDING: NTSTATUS = 0x103 as _;\n-pub const STATUS_END_OF_FILE: NTSTATUS = 0xC0000011_u32 as _;\n-\n // Equivalent to the `NT_SUCCESS` C preprocessor macro.\n // See: https://docs.microsoft.com/en-us/windows-hardware/drivers/kernel/using-ntstatus-values\n pub fn nt_success(status: NTSTATUS) -> bool {\n     status >= 0\n }\n \n-pub const BCRYPT_USE_SYSTEM_PREFERRED_RNG: DWORD = 0x00000002;\n-\n-#[repr(C)]\n-pub struct UNICODE_STRING {\n-    pub Length: u16,\n-    pub MaximumLength: u16,\n-    pub Buffer: *mut u16,\n-}\n impl UNICODE_STRING {\n     pub fn from_ref(slice: &[u16]) -> Self {\n         let len = slice.len() * mem::size_of::<u16>();\n         Self { Length: len as _, MaximumLength: len as _, Buffer: slice.as_ptr() as _ }\n     }\n }\n-#[repr(C)]\n-pub struct OBJECT_ATTRIBUTES {\n-    pub Length: ULONG,\n-    pub RootDirectory: HANDLE,\n-    pub ObjectName: *const UNICODE_STRING,\n-    pub Attributes: ULONG,\n-    pub SecurityDescriptor: *mut c_void,\n-    pub SecurityQualityOfService: *mut c_void,\n-}\n+\n impl Default for OBJECT_ATTRIBUTES {\n     fn default() -> Self {\n         Self {\n@@ -338,193 +98,20 @@ impl Default for OBJECT_ATTRIBUTES {\n         }\n     }\n }\n-#[repr(C)]\n-union IO_STATUS_BLOCK_union {\n-    Status: NTSTATUS,\n-    Pointer: *mut c_void,\n-}\n-impl Default for IO_STATUS_BLOCK_union {\n-    fn default() -> Self {\n-        let mut this = Self { Pointer: ptr::null_mut() };\n-        this.Status = STATUS_PENDING;\n-        this\n-    }\n-}\n-#[repr(C)]\n-#[derive(Default)]\n-pub struct IO_STATUS_BLOCK {\n-    u: IO_STATUS_BLOCK_union,\n-    pub Information: usize,\n-}\n+\n impl IO_STATUS_BLOCK {\n+    pub const PENDING: Self =\n+        IO_STATUS_BLOCK { Anonymous: IO_STATUS_BLOCK_0 { Status: STATUS_PENDING }, Information: 0 };\n     pub fn status(&self) -> NTSTATUS {\n-        // SAFETY: If `self.u.Status` was set then this is obviously safe.\n-        // If `self.u.Pointer` was set then this is the equivalent to converting\n+        // SAFETY: If `self.Anonymous.Status` was set then this is obviously safe.\n+        // If `self.Anonymous.Pointer` was set then this is the equivalent to converting\n         // the pointer to an integer, which is also safe.\n         // Currently the only safe way to construct `IO_STATUS_BLOCK` outside of\n         // this module is to call the `default` method, which sets the `Status`.\n-        unsafe { self.u.Status }\n+        unsafe { self.Anonymous.Status }\n     }\n }\n \n-pub type LPOVERLAPPED_COMPLETION_ROUTINE = unsafe extern \"system\" fn(\n-    dwErrorCode: DWORD,\n-    dwNumberOfBytesTransferred: DWORD,\n-    lpOverlapped: *mut OVERLAPPED,\n-);\n-\n-type IO_APC_ROUTINE = unsafe extern \"system\" fn(\n-    ApcContext: *mut c_void,\n-    IoStatusBlock: *mut IO_STATUS_BLOCK,\n-    Reserved: ULONG,\n-);\n-\n-#[repr(C)]\n-#[cfg(not(target_pointer_width = \"64\"))]\n-pub struct WSADATA {\n-    pub wVersion: WORD,\n-    pub wHighVersion: WORD,\n-    pub szDescription: [u8; WSADESCRIPTION_LEN + 1],\n-    pub szSystemStatus: [u8; WSASYS_STATUS_LEN + 1],\n-    pub iMaxSockets: u16,\n-    pub iMaxUdpDg: u16,\n-    pub lpVendorInfo: *mut u8,\n-}\n-#[repr(C)]\n-#[cfg(target_pointer_width = \"64\")]\n-pub struct WSADATA {\n-    pub wVersion: WORD,\n-    pub wHighVersion: WORD,\n-    pub iMaxSockets: u16,\n-    pub iMaxUdpDg: u16,\n-    pub lpVendorInfo: *mut u8,\n-    pub szDescription: [u8; WSADESCRIPTION_LEN + 1],\n-    pub szSystemStatus: [u8; WSASYS_STATUS_LEN + 1],\n-}\n-\n-#[derive(Copy, Clone)]\n-#[repr(C)]\n-pub struct WSABUF {\n-    pub len: ULONG,\n-    pub buf: *mut CHAR,\n-}\n-\n-#[repr(C)]\n-pub struct WSAPROTOCOL_INFO {\n-    pub dwServiceFlags1: DWORD,\n-    pub dwServiceFlags2: DWORD,\n-    pub dwServiceFlags3: DWORD,\n-    pub dwServiceFlags4: DWORD,\n-    pub dwProviderFlags: DWORD,\n-    pub ProviderId: GUID,\n-    pub dwCatalogEntryId: DWORD,\n-    pub ProtocolChain: WSAPROTOCOLCHAIN,\n-    pub iVersion: c_int,\n-    pub iAddressFamily: c_int,\n-    pub iMaxSockAddr: c_int,\n-    pub iMinSockAddr: c_int,\n-    pub iSocketType: c_int,\n-    pub iProtocol: c_int,\n-    pub iProtocolMaxOffset: c_int,\n-    pub iNetworkByteOrder: c_int,\n-    pub iSecurityScheme: c_int,\n-    pub dwMessageSize: DWORD,\n-    pub dwProviderReserved: DWORD,\n-    pub szProtocol: [u16; (WSAPROTOCOL_LEN as usize) + 1],\n-}\n-\n-#[repr(C)]\n-#[derive(Copy, Clone)]\n-pub struct WIN32_FILE_ATTRIBUTE_DATA {\n-    pub dwFileAttributes: DWORD,\n-    pub ftCreationTime: FILETIME,\n-    pub ftLastAccessTime: FILETIME,\n-    pub ftLastWriteTime: FILETIME,\n-    pub nFileSizeHigh: DWORD,\n-    pub nFileSizeLow: DWORD,\n-}\n-\n-#[repr(C)]\n-#[allow(dead_code)] // we only use some variants\n-pub enum FILE_INFO_BY_HANDLE_CLASS {\n-    FileBasicInfo = 0,\n-    FileStandardInfo = 1,\n-    FileNameInfo = 2,\n-    FileRenameInfo = 3,\n-    FileDispositionInfo = 4,\n-    FileAllocationInfo = 5,\n-    FileEndOfFileInfo = 6,\n-    FileStreamInfo = 7,\n-    FileCompressionInfo = 8,\n-    FileAttributeTagInfo = 9,\n-    FileIdBothDirectoryInfo = 10,        // 0xA\n-    FileIdBothDirectoryRestartInfo = 11, // 0xB\n-    FileIoPriorityHintInfo = 12,         // 0xC\n-    FileRemoteProtocolInfo = 13,         // 0xD\n-    FileFullDirectoryInfo = 14,          // 0xE\n-    FileFullDirectoryRestartInfo = 15,   // 0xF\n-    FileStorageInfo = 16,                // 0x10\n-    FileAlignmentInfo = 17,              // 0x11\n-    FileIdInfo = 18,                     // 0x12\n-    FileIdExtdDirectoryInfo = 19,        // 0x13\n-    FileIdExtdDirectoryRestartInfo = 20, // 0x14\n-    FileDispositionInfoEx = 21,          // 0x15, Windows 10 version 1607\n-    MaximumFileInfoByHandlesClass,\n-}\n-\n-#[repr(C)]\n-pub struct FILE_ATTRIBUTE_TAG_INFO {\n-    pub FileAttributes: DWORD,\n-    pub ReparseTag: DWORD,\n-}\n-\n-#[repr(C)]\n-pub struct FILE_DISPOSITION_INFO {\n-    pub DeleteFile: BOOLEAN,\n-}\n-\n-pub const FILE_DISPOSITION_DELETE: DWORD = 0x1;\n-pub const FILE_DISPOSITION_POSIX_SEMANTICS: DWORD = 0x2;\n-pub const FILE_DISPOSITION_IGNORE_READONLY_ATTRIBUTE: DWORD = 0x10;\n-\n-#[repr(C)]\n-pub struct FILE_DISPOSITION_INFO_EX {\n-    pub Flags: DWORD,\n-}\n-\n-#[repr(C)]\n-#[derive(Default)]\n-pub struct FILE_ID_BOTH_DIR_INFO {\n-    pub NextEntryOffset: DWORD,\n-    pub FileIndex: DWORD,\n-    pub CreationTime: LARGE_INTEGER,\n-    pub LastAccessTime: LARGE_INTEGER,\n-    pub LastWriteTime: LARGE_INTEGER,\n-    pub ChangeTime: LARGE_INTEGER,\n-    pub EndOfFile: LARGE_INTEGER,\n-    pub AllocationSize: LARGE_INTEGER,\n-    pub FileAttributes: DWORD,\n-    pub FileNameLength: DWORD,\n-    pub EaSize: DWORD,\n-    pub ShortNameLength: CCHAR,\n-    pub ShortName: [WCHAR; 12],\n-    pub FileId: LARGE_INTEGER,\n-    pub FileName: [WCHAR; 1],\n-}\n-#[repr(C)]\n-pub struct FILE_BASIC_INFO {\n-    pub CreationTime: LARGE_INTEGER,\n-    pub LastAccessTime: LARGE_INTEGER,\n-    pub LastWriteTime: LARGE_INTEGER,\n-    pub ChangeTime: LARGE_INTEGER,\n-    pub FileAttributes: DWORD,\n-}\n-\n-#[repr(C)]\n-pub struct FILE_END_OF_FILE_INFO {\n-    pub EndOfFile: LARGE_INTEGER,\n-}\n-\n /// NB: Use carefully! In general using this as a reference is likely to get the\n /// provenance wrong for the `rest` field!\n #[repr(C)]\n@@ -555,34 +142,6 @@ pub struct MOUNT_POINT_REPARSE_BUFFER {\n     pub PrintNameLength: c_ushort,\n     pub PathBuffer: WCHAR,\n }\n-\n-pub type LPPROGRESS_ROUTINE = crate::option::Option<\n-    unsafe extern \"system\" fn(\n-        TotalFileSize: LARGE_INTEGER,\n-        TotalBytesTransferred: LARGE_INTEGER,\n-        StreamSize: LARGE_INTEGER,\n-        StreamBytesTransferred: LARGE_INTEGER,\n-        dwStreamNumber: DWORD,\n-        dwCallbackReason: DWORD,\n-        hSourceFile: HANDLE,\n-        hDestinationFile: HANDLE,\n-        lpData: LPVOID,\n-    ) -> DWORD,\n->;\n-\n-#[repr(C)]\n-pub struct CONDITION_VARIABLE {\n-    pub ptr: LPVOID,\n-}\n-#[repr(C)]\n-pub struct SRWLOCK {\n-    pub ptr: LPVOID,\n-}\n-#[repr(C)]\n-pub struct INIT_ONCE {\n-    pub ptr: LPVOID,\n-}\n-\n #[repr(C)]\n pub struct REPARSE_MOUNTPOINT_DATA_BUFFER {\n     pub ReparseTag: DWORD,\n@@ -594,103 +153,6 @@ pub struct REPARSE_MOUNTPOINT_DATA_BUFFER {\n     pub ReparseTarget: WCHAR,\n }\n \n-#[repr(C)]\n-pub struct GUID {\n-    pub Data1: DWORD,\n-    pub Data2: WORD,\n-    pub Data3: WORD,\n-    pub Data4: [BYTE; 8],\n-}\n-\n-#[repr(C)]\n-pub struct WSAPROTOCOLCHAIN {\n-    pub ChainLen: c_int,\n-    pub ChainEntries: [DWORD; MAX_PROTOCOL_CHAIN as usize],\n-}\n-\n-#[repr(C)]\n-pub struct SECURITY_ATTRIBUTES {\n-    pub nLength: DWORD,\n-    pub lpSecurityDescriptor: LPVOID,\n-    pub bInheritHandle: BOOL,\n-}\n-\n-#[repr(C)]\n-pub struct PROCESS_INFORMATION {\n-    pub hProcess: HANDLE,\n-    pub hThread: HANDLE,\n-    pub dwProcessId: DWORD,\n-    pub dwThreadId: DWORD,\n-}\n-\n-#[repr(C)]\n-pub struct STARTUPINFO {\n-    pub cb: DWORD,\n-    pub lpReserved: LPWSTR,\n-    pub lpDesktop: LPWSTR,\n-    pub lpTitle: LPWSTR,\n-    pub dwX: DWORD,\n-    pub dwY: DWORD,\n-    pub dwXSize: DWORD,\n-    pub dwYSize: DWORD,\n-    pub dwXCountChars: DWORD,\n-    pub dwYCountCharts: DWORD,\n-    pub dwFillAttribute: DWORD,\n-    pub dwFlags: DWORD,\n-    pub wShowWindow: WORD,\n-    pub cbReserved2: WORD,\n-    pub lpReserved2: LPBYTE,\n-    pub hStdInput: HANDLE,\n-    pub hStdOutput: HANDLE,\n-    pub hStdError: HANDLE,\n-}\n-\n-#[repr(C)]\n-pub struct SOCKADDR {\n-    pub sa_family: ADDRESS_FAMILY,\n-    pub sa_data: [CHAR; 14],\n-}\n-\n-#[repr(C)]\n-#[derive(Copy, Clone, Debug, Default)]\n-pub struct FILETIME {\n-    pub dwLowDateTime: DWORD,\n-    pub dwHighDateTime: DWORD,\n-}\n-\n-#[repr(C)]\n-pub struct SYSTEM_INFO {\n-    pub wProcessorArchitecture: WORD,\n-    pub wReserved: WORD,\n-    pub dwPageSize: DWORD,\n-    pub lpMinimumApplicationAddress: LPVOID,\n-    pub lpMaximumApplicationAddress: LPVOID,\n-    pub dwActiveProcessorMask: DWORD_PTR,\n-    pub dwNumberOfProcessors: DWORD,\n-    pub dwProcessorType: DWORD,\n-    pub dwAllocationGranularity: DWORD,\n-    pub wProcessorLevel: WORD,\n-    pub wProcessorRevision: WORD,\n-}\n-\n-#[repr(C)]\n-pub struct OVERLAPPED {\n-    pub Internal: *mut c_ulong,\n-    pub InternalHigh: *mut c_ulong,\n-    pub Offset: DWORD,\n-    pub OffsetHigh: DWORD,\n-    pub hEvent: HANDLE,\n-}\n-\n-#[repr(C)]\n-#[allow(dead_code)] // we only use some variants\n-pub enum ADDRESS_MODE {\n-    AddrMode1616,\n-    AddrMode1632,\n-    AddrModeReal,\n-    AddrModeFlat,\n-}\n-\n #[repr(C)]\n pub struct SOCKADDR_STORAGE_LH {\n     pub ss_family: ADDRESS_FAMILY,\n@@ -699,18 +161,6 @@ pub struct SOCKADDR_STORAGE_LH {\n     pub __ss_pad2: [CHAR; 112],\n }\n \n-#[repr(C)]\n-pub struct ADDRINFOA {\n-    pub ai_flags: c_int,\n-    pub ai_family: c_int,\n-    pub ai_socktype: c_int,\n-    pub ai_protocol: c_int,\n-    pub ai_addrlen: size_t,\n-    pub ai_canonname: *mut c_char,\n-    pub ai_addr: *mut SOCKADDR,\n-    pub ai_next: *mut ADDRINFOA,\n-}\n-\n #[repr(C)]\n #[derive(Copy, Clone)]\n pub struct sockaddr_in {\n@@ -742,583 +192,126 @@ pub struct in6_addr {\n     pub s6_addr: [u8; 16],\n }\n \n-#[repr(C)]\n-#[derive(Copy, Clone)]\n-#[allow(dead_code)] // we only use some variants\n-pub enum EXCEPTION_DISPOSITION {\n-    ExceptionContinueExecution,\n-    ExceptionContinueSearch,\n-    ExceptionNestedException,\n-    ExceptionCollidedUnwind,\n-}\n-\n-#[repr(C)]\n-#[derive(Copy)]\n-pub struct fd_set {\n-    pub fd_count: c_uint,\n-    pub fd_array: [SOCKET; FD_SETSIZE],\n-}\n-\n-impl Clone for fd_set {\n-    fn clone(&self) -> fd_set {\n-        *self\n-    }\n-}\n-\n-#[repr(C)]\n-#[derive(Copy, Clone)]\n-pub struct timeval {\n-    pub tv_sec: c_long,\n-    pub tv_usec: c_long,\n-}\n-\n-#[repr(C)]\n-#[derive(Copy, Clone)]\n-pub struct CONSOLE_READCONSOLE_CONTROL {\n-    pub nLength: ULONG,\n-    pub nInitialChars: ULONG,\n-    pub dwCtrlWakeupMask: ULONG,\n-    pub dwControlKeyState: ULONG,\n-}\n-pub type PCONSOLE_READCONSOLE_CONTROL = *mut CONSOLE_READCONSOLE_CONTROL;\n-\n // Desktop specific functions & types\n cfg_if::cfg_if! {\n if #[cfg(not(target_vendor = \"uwp\"))] {\n-    pub const EXCEPTION_CONTINUE_SEARCH: LONG = 0;\n-    pub const EXCEPTION_STACK_OVERFLOW: DWORD = 0xc00000fd;\n-    pub const EXCEPTION_MAXIMUM_PARAMETERS: usize = 15;\n-\n-    #[repr(C)]\n-    pub struct EXCEPTION_RECORD {\n-        pub ExceptionCode: DWORD,\n-        pub ExceptionFlags: DWORD,\n-        pub ExceptionRecord: *mut EXCEPTION_RECORD,\n-        pub ExceptionAddress: LPVOID,\n-        pub NumberParameters: DWORD,\n-        pub ExceptionInformation: [LPVOID; EXCEPTION_MAXIMUM_PARAMETERS],\n-    }\n-\n-    pub enum CONTEXT {}\n-\n-    #[repr(C)]\n-    pub struct EXCEPTION_POINTERS {\n-        pub ExceptionRecord: *mut EXCEPTION_RECORD,\n-        pub ContextRecord: *mut CONTEXT,\n-    }\n-\n-    pub type PVECTORED_EXCEPTION_HANDLER =\n-        extern \"system\" fn(ExceptionInfo: *mut EXCEPTION_POINTERS) -> LONG;\n-\n-    #[repr(C)]\n-    pub struct BY_HANDLE_FILE_INFORMATION {\n-        pub dwFileAttributes: DWORD,\n-        pub ftCreationTime: FILETIME,\n-        pub ftLastAccessTime: FILETIME,\n-        pub ftLastWriteTime: FILETIME,\n-        pub dwVolumeSerialNumber: DWORD,\n-        pub nFileSizeHigh: DWORD,\n-        pub nFileSizeLow: DWORD,\n-        pub nNumberOfLinks: DWORD,\n-        pub nFileIndexHigh: DWORD,\n-        pub nFileIndexLow: DWORD,\n-    }\n-\n-    pub type LPBY_HANDLE_FILE_INFORMATION = *mut BY_HANDLE_FILE_INFORMATION;\n-\n-    pub const HANDLE_FLAG_INHERIT: DWORD = 0x00000001;\n-\n-    pub const TOKEN_READ: DWORD = 0x20008;\n-\n-    #[link(name = \"advapi32\")]\n-    extern \"system\" {\n-        // Forbidden when targeting UWP\n-        #[link_name = \"SystemFunction036\"]\n-        pub fn RtlGenRandom(RandomBuffer: *mut u8, RandomBufferLength: ULONG) -> BOOLEAN;\n-\n-        // Allowed but unused by UWP\n-        pub fn OpenProcessToken(\n-            ProcessHandle: HANDLE,\n-            DesiredAccess: DWORD,\n-            TokenHandle: *mut HANDLE,\n-        ) -> BOOL;\n-    }\n-\n-    #[link(name = \"userenv\")]\n-    extern \"system\" {\n-        // Allowed but unused by UWP\n-        pub fn GetUserProfileDirectoryW(\n-            hToken: HANDLE,\n-            lpProfileDir: LPWSTR,\n-            lpcchSize: *mut DWORD,\n-        ) -> BOOL;\n-    }\n-\n-    #[link(name = \"kernel32\")]\n-    extern \"system\" {\n-        // Allowed but unused by UWP\n-        pub fn GetFileInformationByHandle(\n-            hFile: HANDLE,\n-            lpFileInformation: LPBY_HANDLE_FILE_INFORMATION,\n-        ) -> BOOL;\n-        pub fn SetHandleInformation(hObject: HANDLE, dwMask: DWORD, dwFlags: DWORD) -> BOOL;\n-        pub fn AddVectoredExceptionHandler(\n-            FirstHandler: ULONG,\n-            VectoredHandler: PVECTORED_EXCEPTION_HANDLER,\n-        ) -> LPVOID;\n-        pub fn CreateHardLinkW(\n-            lpSymlinkFileName: LPCWSTR,\n-            lpTargetFileName: LPCWSTR,\n-            lpSecurityAttributes: LPSECURITY_ATTRIBUTES,\n-        ) -> BOOL;\n-        pub fn SetThreadStackGuarantee(_size: *mut c_ulong) -> BOOL;\n-        pub fn GetWindowsDirectoryW(lpBuffer: LPWSTR, uSize: UINT) -> UINT;\n-    }\n-}\n-}\n-\n-// UWP specific functions & types\n-cfg_if::cfg_if! {\n-if #[cfg(target_vendor = \"uwp\")] {\n-    #[repr(C)]\n-    pub struct FILE_STANDARD_INFO {\n-        pub AllocationSize: LARGE_INTEGER,\n-        pub EndOfFile: LARGE_INTEGER,\n-        pub NumberOfLinks: DWORD,\n-        pub DeletePending: BOOLEAN,\n-        pub Directory: BOOLEAN,\n-    }\n-}\n-}\n-\n-// Shared between Desktop & UWP\n-\n-#[link(name = \"kernel32\")]\n-extern \"system\" {\n-    pub fn GetCurrentProcessId() -> DWORD;\n-\n-    pub fn ReadConsoleW(\n-        hConsoleInput: HANDLE,\n-        lpBuffer: LPVOID,\n-        nNumberOfCharsToRead: DWORD,\n-        lpNumberOfCharsRead: LPDWORD,\n-        pInputControl: PCONSOLE_READCONSOLE_CONTROL,\n-    ) -> BOOL;\n-    pub fn WriteConsoleW(\n-        hConsoleOutput: HANDLE,\n-        lpBuffer: LPCVOID,\n-        nNumberOfCharsToWrite: DWORD,\n-        lpNumberOfCharsWritten: LPDWORD,\n-        lpReserved: LPVOID,\n-    ) -> BOOL;\n-    pub fn GetConsoleMode(hConsoleHandle: HANDLE, lpMode: LPDWORD) -> BOOL;\n-\n-    pub fn GetSystemDirectoryW(lpBuffer: LPWSTR, uSize: UINT) -> UINT;\n-    pub fn RemoveDirectoryW(lpPathName: LPCWSTR) -> BOOL;\n-    pub fn SetFileAttributesW(lpFileName: LPCWSTR, dwFileAttributes: DWORD) -> BOOL;\n-    pub fn SetFileTime(\n-        hFile: BorrowedHandle<'_>,\n-        lpCreationTime: Option<&FILETIME>,\n-        lpLastAccessTime: Option<&FILETIME>,\n-        lpLastWriteTime: Option<&FILETIME>,\n-    ) -> BOOL;\n-    pub fn SetLastError(dwErrCode: DWORD);\n-    pub fn GetCommandLineW() -> LPWSTR;\n-    pub fn GetTempPathW(nBufferLength: DWORD, lpBuffer: LPCWSTR) -> DWORD;\n-    pub fn GetCurrentProcess() -> HANDLE;\n-    pub fn GetCurrentThread() -> HANDLE;\n-    pub fn GetStdHandle(which: DWORD) -> HANDLE;\n-    pub fn ExitProcess(uExitCode: c_uint) -> !;\n-    pub fn DeviceIoControl(\n-        hDevice: HANDLE,\n-        dwIoControlCode: DWORD,\n-        lpInBuffer: LPVOID,\n-        nInBufferSize: DWORD,\n-        lpOutBuffer: LPVOID,\n-        nOutBufferSize: DWORD,\n-        lpBytesReturned: LPDWORD,\n-        lpOverlapped: LPOVERLAPPED,\n-    ) -> BOOL;\n-    pub fn CreateThread(\n-        lpThreadAttributes: LPSECURITY_ATTRIBUTES,\n-        dwStackSize: SIZE_T,\n-        lpStartAddress: extern \"system\" fn(*mut c_void) -> DWORD,\n-        lpParameter: LPVOID,\n-        dwCreationFlags: DWORD,\n-        lpThreadId: LPDWORD,\n-    ) -> HandleOrNull;\n-    pub fn WaitForSingleObject(hHandle: HANDLE, dwMilliseconds: DWORD) -> DWORD;\n-    pub fn SwitchToThread() -> BOOL;\n-    pub fn Sleep(dwMilliseconds: DWORD);\n-    pub fn SleepEx(dwMilliseconds: DWORD, bAlertable: BOOL) -> DWORD;\n-    pub fn GetProcessId(handle: HANDLE) -> DWORD;\n-    pub fn CopyFileExW(\n-        lpExistingFileName: LPCWSTR,\n-        lpNewFileName: LPCWSTR,\n-        lpProgressRoutine: LPPROGRESS_ROUTINE,\n-        lpData: LPVOID,\n-        pbCancel: LPBOOL,\n-        dwCopyFlags: DWORD,\n-    ) -> BOOL;\n-    pub fn FormatMessageW(\n-        flags: DWORD,\n-        lpSrc: LPVOID,\n-        msgId: DWORD,\n-        langId: DWORD,\n-        buf: LPWSTR,\n-        nsize: DWORD,\n-        args: *const c_void,\n-    ) -> DWORD;\n-    pub fn TlsAlloc() -> DWORD;\n-    pub fn TlsGetValue(dwTlsIndex: DWORD) -> LPVOID;\n-    pub fn TlsSetValue(dwTlsIndex: DWORD, lpTlsvalue: LPVOID) -> BOOL;\n-    pub fn TlsFree(dwTlsIndex: DWORD) -> BOOL;\n-    pub fn GetLastError() -> DWORD;\n-    pub fn QueryPerformanceFrequency(lpFrequency: *mut LARGE_INTEGER) -> BOOL;\n-    pub fn QueryPerformanceCounter(lpPerformanceCount: *mut LARGE_INTEGER) -> BOOL;\n-    pub fn GetExitCodeProcess(hProcess: HANDLE, lpExitCode: LPDWORD) -> BOOL;\n-    pub fn TerminateProcess(hProcess: HANDLE, uExitCode: UINT) -> BOOL;\n-    pub fn CreateProcessW(\n-        lpApplicationName: LPCWSTR,\n-        lpCommandLine: LPWSTR,\n-        lpProcessAttributes: LPSECURITY_ATTRIBUTES,\n-        lpThreadAttributes: LPSECURITY_ATTRIBUTES,\n-        bInheritHandles: BOOL,\n-        dwCreationFlags: DWORD,\n-        lpEnvironment: LPVOID,\n-        lpCurrentDirectory: LPCWSTR,\n-        lpStartupInfo: LPSTARTUPINFO,\n-        lpProcessInformation: LPPROCESS_INFORMATION,\n-    ) -> BOOL;\n-    pub fn GetEnvironmentVariableW(n: LPCWSTR, v: LPWSTR, nsize: DWORD) -> DWORD;\n-    pub fn SetEnvironmentVariableW(n: LPCWSTR, v: LPCWSTR) -> BOOL;\n-    pub fn GetEnvironmentStringsW() -> LPWCH;\n-    pub fn FreeEnvironmentStringsW(env_ptr: LPWCH) -> BOOL;\n-    pub fn GetModuleFileNameW(hModule: HMODULE, lpFilename: LPWSTR, nSize: DWORD) -> DWORD;\n-    pub fn CreateDirectoryW(\n-        lpPathName: LPCWSTR,\n-        lpSecurityAttributes: LPSECURITY_ATTRIBUTES,\n-    ) -> BOOL;\n-    pub fn DeleteFileW(lpPathName: LPCWSTR) -> BOOL;\n-    pub fn GetCurrentDirectoryW(nBufferLength: DWORD, lpBuffer: LPWSTR) -> DWORD;\n-    pub fn SetCurrentDirectoryW(lpPathName: LPCWSTR) -> BOOL;\n-    pub fn DuplicateHandle(\n-        hSourceProcessHandle: HANDLE,\n-        hSourceHandle: HANDLE,\n-        hTargetProcessHandle: HANDLE,\n-        lpTargetHandle: LPHANDLE,\n-        dwDesiredAccess: DWORD,\n-        bInheritHandle: BOOL,\n-        dwOptions: DWORD,\n-    ) -> BOOL;\n-    pub fn ReadFile(\n-        hFile: BorrowedHandle<'_>,\n-        lpBuffer: LPVOID,\n-        nNumberOfBytesToRead: DWORD,\n-        lpNumberOfBytesRead: LPDWORD,\n-        lpOverlapped: LPOVERLAPPED,\n-    ) -> BOOL;\n-    pub fn ReadFileEx(\n-        hFile: BorrowedHandle<'_>,\n-        lpBuffer: LPVOID,\n-        nNumberOfBytesToRead: DWORD,\n-        lpOverlapped: LPOVERLAPPED,\n-        lpCompletionRoutine: LPOVERLAPPED_COMPLETION_ROUTINE,\n-    ) -> BOOL;\n-    pub fn WriteFileEx(\n-        hFile: BorrowedHandle<'_>,\n-        lpBuffer: LPVOID,\n-        nNumberOfBytesToWrite: DWORD,\n-        lpOverlapped: LPOVERLAPPED,\n-        lpCompletionRoutine: LPOVERLAPPED_COMPLETION_ROUTINE,\n-    ) -> BOOL;\n-    pub fn CloseHandle(hObject: HANDLE) -> BOOL;\n-    pub fn MoveFileExW(lpExistingFileName: LPCWSTR, lpNewFileName: LPCWSTR, dwFlags: DWORD)\n-    -> BOOL;\n-    pub fn SetFilePointerEx(\n-        hFile: HANDLE,\n-        liDistanceToMove: LARGE_INTEGER,\n-        lpNewFilePointer: PLARGE_INTEGER,\n-        dwMoveMethod: DWORD,\n-    ) -> BOOL;\n-    pub fn FlushFileBuffers(hFile: HANDLE) -> BOOL;\n-    pub fn CreateFileW(\n-        lpFileName: LPCWSTR,\n-        dwDesiredAccess: DWORD,\n-        dwShareMode: DWORD,\n-        lpSecurityAttributes: LPSECURITY_ATTRIBUTES,\n-        dwCreationDisposition: DWORD,\n-        dwFlagsAndAttributes: DWORD,\n-        hTemplateFile: HANDLE,\n-    ) -> HandleOrInvalid;\n-\n-    pub fn FindFirstFileW(fileName: LPCWSTR, findFileData: LPWIN32_FIND_DATAW) -> HANDLE;\n-    pub fn FindNextFileW(findFile: HANDLE, findFileData: LPWIN32_FIND_DATAW) -> BOOL;\n-    pub fn FindClose(findFile: HANDLE) -> BOOL;\n-\n-    pub fn GetProcAddress(handle: HMODULE, name: LPCSTR) -> *mut c_void;\n-    pub fn GetModuleHandleA(lpModuleName: LPCSTR) -> HMODULE;\n-    pub fn GetModuleHandleW(lpModuleName: LPCWSTR) -> HMODULE;\n-\n-    pub fn GetSystemTimeAsFileTime(lpSystemTimeAsFileTime: LPFILETIME);\n-    pub fn GetSystemInfo(lpSystemInfo: LPSYSTEM_INFO);\n-\n-    pub fn CreateEventW(\n-        lpEventAttributes: LPSECURITY_ATTRIBUTES,\n-        bManualReset: BOOL,\n-        bInitialState: BOOL,\n-        lpName: LPCWSTR,\n-    ) -> HANDLE;\n-    pub fn WaitForMultipleObjects(\n-        nCount: DWORD,\n-        lpHandles: *const HANDLE,\n-        bWaitAll: BOOL,\n-        dwMilliseconds: DWORD,\n-    ) -> DWORD;\n-    pub fn CreateNamedPipeW(\n-        lpName: LPCWSTR,\n-        dwOpenMode: DWORD,\n-        dwPipeMode: DWORD,\n-        nMaxInstances: DWORD,\n-        nOutBufferSize: DWORD,\n-        nInBufferSize: DWORD,\n-        nDefaultTimeOut: DWORD,\n-        lpSecurityAttributes: LPSECURITY_ATTRIBUTES,\n-    ) -> HANDLE;\n-    pub fn CancelIo(handle: HANDLE) -> BOOL;\n-    pub fn GetOverlappedResult(\n-        hFile: HANDLE,\n-        lpOverlapped: LPOVERLAPPED,\n-        lpNumberOfBytesTransferred: LPDWORD,\n-        bWait: BOOL,\n-    ) -> BOOL;\n-    pub fn CreateSymbolicLinkW(\n-        lpSymlinkFileName: LPCWSTR,\n-        lpTargetFileName: LPCWSTR,\n-        dwFlags: DWORD,\n-    ) -> BOOLEAN;\n-    pub fn GetFinalPathNameByHandleW(\n-        hFile: HANDLE,\n-        lpszFilePath: LPCWSTR,\n-        cchFilePath: DWORD,\n-        dwFlags: DWORD,\n-    ) -> DWORD;\n-    pub fn GetFileInformationByHandleEx(\n-        hFile: HANDLE,\n-        fileInfoClass: FILE_INFO_BY_HANDLE_CLASS,\n-        lpFileInformation: LPVOID,\n-        dwBufferSize: DWORD,\n-    ) -> BOOL;\n-    pub fn SetFileInformationByHandle(\n-        hFile: HANDLE,\n-        FileInformationClass: FILE_INFO_BY_HANDLE_CLASS,\n-        lpFileInformation: LPVOID,\n-        dwBufferSize: DWORD,\n-    ) -> BOOL;\n-    pub fn GetFileType(hfile: HANDLE) -> DWORD;\n-    pub fn SleepConditionVariableSRW(\n-        ConditionVariable: PCONDITION_VARIABLE,\n-        SRWLock: PSRWLOCK,\n-        dwMilliseconds: DWORD,\n-        Flags: ULONG,\n-    ) -> BOOL;\n-\n-    pub fn WakeConditionVariable(ConditionVariable: PCONDITION_VARIABLE);\n-    pub fn WakeAllConditionVariable(ConditionVariable: PCONDITION_VARIABLE);\n-\n-    pub fn AcquireSRWLockExclusive(SRWLock: PSRWLOCK);\n-    pub fn AcquireSRWLockShared(SRWLock: PSRWLOCK);\n-    pub fn ReleaseSRWLockExclusive(SRWLock: PSRWLOCK);\n-    pub fn ReleaseSRWLockShared(SRWLock: PSRWLOCK);\n-    pub fn TryAcquireSRWLockExclusive(SRWLock: PSRWLOCK) -> BOOLEAN;\n-    pub fn TryAcquireSRWLockShared(SRWLock: PSRWLOCK) -> BOOLEAN;\n-\n-    pub fn InitOnceBeginInitialize(\n-        lpInitOnce: LPINIT_ONCE,\n-        dwFlags: DWORD,\n-        fPending: LPBOOL,\n-        lpContext: *mut LPVOID,\n-    ) -> BOOL;\n-    pub fn InitOnceComplete(lpInitOnce: LPINIT_ONCE, dwFlags: DWORD, lpContext: LPVOID) -> BOOL;\n-\n-    pub fn CompareStringOrdinal(\n-        lpString1: LPCWSTR,\n-        cchCount1: c_int,\n-        lpString2: LPCWSTR,\n-        cchCount2: c_int,\n-        bIgnoreCase: BOOL,\n-    ) -> c_int;\n-    pub fn GetFullPathNameW(\n-        lpFileName: LPCWSTR,\n-        nBufferLength: DWORD,\n-        lpBuffer: LPWSTR,\n-        lpFilePart: *mut LPWSTR,\n-    ) -> DWORD;\n-    pub fn GetFileAttributesW(lpFileName: LPCWSTR) -> DWORD;\n-\n-    pub fn MultiByteToWideChar(\n-        CodePage: UINT,\n-        dwFlags: DWORD,\n-        lpMultiByteStr: LPCCH,\n-        cbMultiByte: c_int,\n-        lpWideCharStr: LPWSTR,\n-        cchWideChar: c_int,\n-    ) -> c_int;\n-    pub fn WideCharToMultiByte(\n-        CodePage: UINT,\n-        dwFlags: DWORD,\n-        lpWideCharStr: LPCWCH,\n-        cchWideChar: c_int,\n-        lpMultiByteStr: LPSTR,\n-        cbMultiByte: c_int,\n-        lpDefaultChar: LPCCH,\n-        lpUsedDefaultChar: LPBOOL,\n-    ) -> c_int;\n+    pub const EXCEPTION_CONTINUE_SEARCH: i32 = 0;\n }\n-\n-#[link(name = \"ws2_32\")]\n-extern \"system\" {\n-    pub fn WSAStartup(wVersionRequested: WORD, lpWSAData: LPWSADATA) -> c_int;\n-    pub fn WSACleanup() -> c_int;\n-    pub fn WSAGetLastError() -> c_int;\n-    pub fn WSADuplicateSocketW(\n-        s: SOCKET,\n-        dwProcessId: DWORD,\n-        lpProtocolInfo: LPWSAPROTOCOL_INFO,\n-    ) -> c_int;\n-    pub fn WSASend(\n-        s: SOCKET,\n-        lpBuffers: LPWSABUF,\n-        dwBufferCount: DWORD,\n-        lpNumberOfBytesSent: LPDWORD,\n-        dwFlags: DWORD,\n-        lpOverlapped: LPWSAOVERLAPPED,\n-        lpCompletionRoutine: LPWSAOVERLAPPED_COMPLETION_ROUTINE,\n-    ) -> c_int;\n-    pub fn WSARecv(\n-        s: SOCKET,\n-        lpBuffers: LPWSABUF,\n-        dwBufferCount: DWORD,\n-        lpNumberOfBytesRecvd: LPDWORD,\n-        lpFlags: LPDWORD,\n-        lpOverlapped: LPWSAOVERLAPPED,\n-        lpCompletionRoutine: LPWSAOVERLAPPED_COMPLETION_ROUTINE,\n-    ) -> c_int;\n-    pub fn WSASocketW(\n-        af: c_int,\n-        kind: c_int,\n-        protocol: c_int,\n-        lpProtocolInfo: LPWSAPROTOCOL_INFO,\n-        g: GROUP,\n-        dwFlags: DWORD,\n-    ) -> SOCKET;\n-    pub fn ioctlsocket(s: SOCKET, cmd: c_long, argp: *mut c_ulong) -> c_int;\n-    pub fn closesocket(socket: SOCKET) -> c_int;\n-    pub fn recv(socket: SOCKET, buf: *mut c_void, len: c_int, flags: c_int) -> c_int;\n-    pub fn send(socket: SOCKET, buf: *const c_void, len: c_int, flags: c_int) -> c_int;\n-    pub fn recvfrom(\n-        socket: SOCKET,\n-        buf: *mut c_void,\n-        len: c_int,\n-        flags: c_int,\n-        addr: *mut SOCKADDR,\n-        addrlen: *mut c_int,\n-    ) -> c_int;\n-    pub fn sendto(\n-        socket: SOCKET,\n-        buf: *const c_void,\n-        len: c_int,\n-        flags: c_int,\n-        addr: *const SOCKADDR,\n-        addrlen: c_int,\n-    ) -> c_int;\n-    pub fn shutdown(socket: SOCKET, how: c_int) -> c_int;\n-    pub fn accept(socket: SOCKET, address: *mut SOCKADDR, address_len: *mut c_int) -> SOCKET;\n-    pub fn getsockopt(\n-        s: SOCKET,\n-        level: c_int,\n-        optname: c_int,\n-        optval: *mut c_char,\n-        optlen: *mut c_int,\n-    ) -> c_int;\n-    pub fn setsockopt(\n-        s: SOCKET,\n-        level: c_int,\n-        optname: c_int,\n-        optval: *const c_void,\n-        optlen: c_int,\n-    ) -> c_int;\n-    pub fn getsockname(socket: SOCKET, address: *mut SOCKADDR, address_len: *mut c_int) -> c_int;\n-    pub fn getpeername(socket: SOCKET, address: *mut SOCKADDR, address_len: *mut c_int) -> c_int;\n-    pub fn bind(socket: SOCKET, address: *const SOCKADDR, address_len: socklen_t) -> c_int;\n-    pub fn listen(socket: SOCKET, backlog: c_int) -> c_int;\n-    pub fn connect(socket: SOCKET, address: *const SOCKADDR, len: c_int) -> c_int;\n-    pub fn getaddrinfo(\n-        node: *const c_char,\n-        service: *const c_char,\n-        hints: *const ADDRINFOA,\n-        res: *mut *mut ADDRINFOA,\n-    ) -> c_int;\n-    pub fn freeaddrinfo(res: *mut ADDRINFOA);\n-    pub fn select(\n-        nfds: c_int,\n-        readfds: *mut fd_set,\n-        writefds: *mut fd_set,\n-        exceptfds: *mut fd_set,\n-        timeout: *const timeval,\n-    ) -> c_int;\n-}\n-\n-#[link(name = \"bcrypt\")]\n-extern \"system\" {\n-    // >= Vista / Server 2008\n-    // https://docs.microsoft.com/en-us/windows/win32/api/bcrypt/nf-bcrypt-bcryptgenrandom\n-    pub fn BCryptGenRandom(\n-        hAlgorithm: BCRYPT_ALG_HANDLE,\n-        pBuffer: *mut u8,\n-        cbBuffer: ULONG,\n-        dwFlags: ULONG,\n-    ) -> NTSTATUS;\n }\n \n-#[link(name = \"ntdll\")]\n-extern \"system\" {\n-    pub fn NtCreateFile(\n-        FileHandle: *mut HANDLE,\n-        DesiredAccess: ACCESS_MASK,\n-        ObjectAttributes: *const OBJECT_ATTRIBUTES,\n-        IoStatusBlock: *mut IO_STATUS_BLOCK,\n-        AllocationSize: *mut i64,\n-        FileAttributes: ULONG,\n-        ShareAccess: ULONG,\n-        CreateDisposition: ULONG,\n-        CreateOptions: ULONG,\n-        EaBuffer: *mut c_void,\n-        EaLength: ULONG,\n-    ) -> NTSTATUS;\n-    pub fn NtReadFile(\n-        FileHandle: BorrowedHandle<'_>,\n-        Event: HANDLE,\n-        ApcRoutine: Option<IO_APC_ROUTINE>,\n-        ApcContext: *mut c_void,\n-        IoStatusBlock: &mut IO_STATUS_BLOCK,\n-        Buffer: *mut crate::mem::MaybeUninit<u8>,\n-        Length: ULONG,\n-        ByteOffset: Option<&LARGE_INTEGER>,\n-        Key: Option<&ULONG>,\n-    ) -> NTSTATUS;\n-    pub fn NtWriteFile(\n-        FileHandle: BorrowedHandle<'_>,\n-        Event: HANDLE,\n-        ApcRoutine: Option<IO_APC_ROUTINE>,\n-        ApcContext: *mut c_void,\n-        IoStatusBlock: &mut IO_STATUS_BLOCK,\n-        Buffer: *const u8,\n-        Length: ULONG,\n-        ByteOffset: Option<&LARGE_INTEGER>,\n-        Key: Option<&ULONG>,\n-    ) -> NTSTATUS;\n-    pub fn RtlNtStatusToDosError(Status: NTSTATUS) -> ULONG;\n+pub unsafe extern \"system\" fn WriteFileEx(\n+    hFile: BorrowedHandle<'_>,\n+    lpBuffer: *mut ::core::ffi::c_void,\n+    nNumberOfBytesToWrite: u32,\n+    lpOverlapped: *mut OVERLAPPED,\n+    lpCompletionRoutine: LPOVERLAPPED_COMPLETION_ROUTINE,\n+) -> BOOL {\n+    windows_sys::WriteFileEx(\n+        hFile.as_raw_handle(),\n+        lpBuffer.cast::<u8>(),\n+        nNumberOfBytesToWrite,\n+        lpOverlapped,\n+        lpCompletionRoutine,\n+    )\n+}\n+\n+pub unsafe extern \"system\" fn ReadFileEx(\n+    hFile: BorrowedHandle<'_>,\n+    lpBuffer: *mut ::core::ffi::c_void,\n+    nNumberOfBytesToRead: u32,\n+    lpOverlapped: *mut OVERLAPPED,\n+    lpCompletionRoutine: LPOVERLAPPED_COMPLETION_ROUTINE,\n+) -> BOOL {\n+    windows_sys::ReadFileEx(\n+        hFile.as_raw_handle(),\n+        lpBuffer,\n+        nNumberOfBytesToRead,\n+        lpOverlapped,\n+        lpCompletionRoutine,\n+    )\n+}\n+\n+// POSIX compatibility shims.\n+pub unsafe fn recv(socket: SOCKET, buf: *mut c_void, len: c_int, flags: c_int) -> c_int {\n+    windows_sys::recv(socket, buf.cast::<u8>(), len, flags)\n+}\n+pub unsafe fn send(socket: SOCKET, buf: *const c_void, len: c_int, flags: c_int) -> c_int {\n+    windows_sys::send(socket, buf.cast::<u8>(), len, flags)\n+}\n+pub unsafe fn recvfrom(\n+    socket: SOCKET,\n+    buf: *mut c_void,\n+    len: c_int,\n+    flags: c_int,\n+    addr: *mut SOCKADDR,\n+    addrlen: *mut c_int,\n+) -> c_int {\n+    windows_sys::recvfrom(socket, buf.cast::<u8>(), len, flags, addr, addrlen)\n+}\n+pub unsafe fn sendto(\n+    socket: SOCKET,\n+    buf: *const c_void,\n+    len: c_int,\n+    flags: c_int,\n+    addr: *const SOCKADDR,\n+    addrlen: c_int,\n+) -> c_int {\n+    windows_sys::sendto(socket, buf.cast::<u8>(), len, flags, addr, addrlen)\n+}\n+pub unsafe fn getaddrinfo(\n+    node: *const c_char,\n+    service: *const c_char,\n+    hints: *const ADDRINFOA,\n+    res: *mut *mut ADDRINFOA,\n+) -> c_int {\n+    windows_sys::getaddrinfo(node.cast::<u8>(), service.cast::<u8>(), hints, res)\n+}\n+\n+pub unsafe fn NtReadFile(\n+    filehandle: BorrowedHandle<'_>,\n+    event: HANDLE,\n+    apcroutine: PIO_APC_ROUTINE,\n+    apccontext: *mut c_void,\n+    iostatusblock: &mut IO_STATUS_BLOCK,\n+    buffer: *mut crate::mem::MaybeUninit<u8>,\n+    length: ULONG,\n+    byteoffset: Option<&LARGE_INTEGER>,\n+    key: Option<&ULONG>,\n+) -> NTSTATUS {\n+    windows_sys::NtReadFile(\n+        filehandle.as_raw_handle(),\n+        event,\n+        apcroutine,\n+        apccontext,\n+        iostatusblock,\n+        buffer.cast::<c_void>(),\n+        length,\n+        byteoffset.map(|o| o as *const i64).unwrap_or(ptr::null()),\n+        key.map(|k| k as *const u32).unwrap_or(ptr::null()),\n+    )\n+}\n+pub unsafe fn NtWriteFile(\n+    filehandle: BorrowedHandle<'_>,\n+    event: HANDLE,\n+    apcroutine: PIO_APC_ROUTINE,\n+    apccontext: *mut c_void,\n+    iostatusblock: &mut IO_STATUS_BLOCK,\n+    buffer: *const u8,\n+    length: ULONG,\n+    byteoffset: Option<&LARGE_INTEGER>,\n+    key: Option<&ULONG>,\n+) -> NTSTATUS {\n+    windows_sys::NtWriteFile(\n+        filehandle.as_raw_handle(),\n+        event,\n+        apcroutine,\n+        apccontext,\n+        iostatusblock,\n+        buffer.cast::<c_void>(),\n+        length,\n+        byteoffset.map(|o| o as *const i64).unwrap_or(ptr::null()),\n+        key.map(|k| k as *const u32).unwrap_or(ptr::null()),\n+    )\n }\n \n // Functions that aren't available on every version of Windows that we support,\n@@ -1328,34 +321,32 @@ compat_fn_with_fallback! {\n \n     // >= Win10 1607\n     // https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreaddescription\n-    pub fn SetThreadDescription(hThread: HANDLE,\n-                                lpThreadDescription: LPCWSTR) -> HRESULT {\n+    pub fn SetThreadDescription(hthread: HANDLE, lpthreaddescription: PCWSTR) -> HRESULT {\n         SetLastError(ERROR_CALL_NOT_IMPLEMENTED as DWORD); E_NOTIMPL\n     }\n \n     // >= Win8 / Server 2012\n     // https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-getsystemtimepreciseasfiletime\n-    pub fn GetSystemTimePreciseAsFileTime(lpSystemTimeAsFileTime: LPFILETIME)\n-                                          -> () {\n-        GetSystemTimeAsFileTime(lpSystemTimeAsFileTime)\n+    pub fn GetSystemTimePreciseAsFileTime(lpsystemtimeasfiletime: *mut FILETIME) -> () {\n+        GetSystemTimeAsFileTime(lpsystemtimeasfiletime)\n     }\n \n     // >= Win11 / Server 2022\n     // https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-gettemppath2a\n-    pub fn GetTempPath2W(nBufferLength: DWORD, lpBuffer: LPCWSTR) -> DWORD {\n-        GetTempPathW(nBufferLength, lpBuffer)\n+    pub fn GetTempPath2W(bufferlength: u32, buffer: PWSTR) -> u32 {\n+        GetTempPathW(bufferlength, buffer)\n     }\n }\n \n compat_fn_optional! {\n     crate::sys::compat::load_synch_functions();\n     pub fn WaitOnAddress(\n-        Address: LPVOID,\n-        CompareAddress: LPVOID,\n-        AddressSize: SIZE_T,\n-        dwMilliseconds: DWORD\n-    );\n-    pub fn WakeByAddressSingle(Address: LPVOID);\n+        address: *const ::core::ffi::c_void,\n+        compareaddress: *const ::core::ffi::c_void,\n+        addresssize: usize,\n+        dwmilliseconds: u32\n+    ) -> BOOL;\n+    pub fn WakeByAddressSingle(address: *const ::core::ffi::c_void);\n }\n \n compat_fn_with_fallback! {"}, {"sha": "ad8da19b6daa8332d858520766578f230b1a356e", "filename": "library/std/src/sys/windows/c/errors.rs", "status": "removed", "additions": 0, "deletions": 1883, "changes": 1883, "blob_url": "https://github.com/rust-lang/rust/blob/33a01e2e93bfdd0c37649c6f82172644b8315b55/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33a01e2e93bfdd0c37649c6f82172644b8315b55/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc%2Ferrors.rs?ref=33a01e2e93bfdd0c37649c6f82172644b8315b55", "patch": "@@ -1,1883 +0,0 @@\n-// List of Windows system error codes with descriptions:\n-// https://docs.microsoft.com/en-us/windows/win32/debug/system-error-codes#system-error-codes\n-\n-#![allow(dead_code)]\n-\n-use super::{c_int, DWORD};\n-\n-pub const ERROR_DIRECTORY_NOT_SUPPORTED: DWORD = 336;\n-pub const ERROR_DRIVER_CANCEL_TIMEOUT: DWORD = 594;\n-pub const ERROR_DISK_QUOTA_EXCEEDED: DWORD = 1295;\n-pub const ERROR_RESOURCE_CALL_TIMED_OUT: DWORD = 5910;\n-pub const FRS_ERR_SYSVOL_POPULATE_TIMEOUT: DWORD = 8014;\n-pub const DNS_ERROR_RECORD_TIMED_OUT: DWORD = 9705;\n-\n-// The following list was obtained from\n-//   `/usr/x86_64-w64-mingw32/include/winerror.h`\n-// in the Debian package\n-//   mingw-w64_6.0.0-3_all.deb\n-//\n-// The header of that file says:\n-//   * This file has no copyright assigned and is placed in the Public Domain.\n-//   * This file is part of the mingw-w64 runtime package.\n-//   * No warranty is given; refer to the file DISCLAIMER.PD within this package.\n-//\n-// The text here is the result of the following rune:\n-//   grep -P '#define ERROR' /usr/x86_64-w64-mingw32/include/winerror.h >>library/std/src/sys/windows/c/errors.rs\n-//   grep -P '#define WSA' /usr/x86_64-w64-mingw32/include/winerror.h >>library/std/src/sys/windows/c/errors.rs\n-// and then using some manually-invented but rather obvious editor search-and-replace\n-// invocations, plus some straightforward manual fixups, to turn it into Rust syntax\n-// and remove all the duplicates from the manual table above.\n-\n-pub const ERROR_SUCCESS: DWORD = 0;\n-pub const ERROR_INVALID_FUNCTION: DWORD = 1;\n-pub const ERROR_FILE_NOT_FOUND: DWORD = 2;\n-pub const ERROR_PATH_NOT_FOUND: DWORD = 3;\n-pub const ERROR_TOO_MANY_OPEN_FILES: DWORD = 4;\n-pub const ERROR_ACCESS_DENIED: DWORD = 5;\n-pub const ERROR_INVALID_HANDLE: DWORD = 6;\n-pub const ERROR_ARENA_TRASHED: DWORD = 7;\n-pub const ERROR_NOT_ENOUGH_MEMORY: DWORD = 8;\n-pub const ERROR_INVALID_BLOCK: DWORD = 9;\n-pub const ERROR_BAD_ENVIRONMENT: DWORD = 10;\n-pub const ERROR_BAD_FORMAT: DWORD = 11;\n-pub const ERROR_INVALID_ACCESS: DWORD = 12;\n-pub const ERROR_INVALID_DATA: DWORD = 13;\n-pub const ERROR_OUTOFMEMORY: DWORD = 14;\n-pub const ERROR_INVALID_DRIVE: DWORD = 15;\n-pub const ERROR_CURRENT_DIRECTORY: DWORD = 16;\n-pub const ERROR_NOT_SAME_DEVICE: DWORD = 17;\n-pub const ERROR_NO_MORE_FILES: DWORD = 18;\n-pub const ERROR_WRITE_PROTECT: DWORD = 19;\n-pub const ERROR_BAD_UNIT: DWORD = 20;\n-pub const ERROR_NOT_READY: DWORD = 21;\n-pub const ERROR_BAD_COMMAND: DWORD = 22;\n-pub const ERROR_CRC: DWORD = 23;\n-pub const ERROR_BAD_LENGTH: DWORD = 24;\n-pub const ERROR_SEEK: DWORD = 25;\n-pub const ERROR_NOT_DOS_DISK: DWORD = 26;\n-pub const ERROR_SECTOR_NOT_FOUND: DWORD = 27;\n-pub const ERROR_OUT_OF_PAPER: DWORD = 28;\n-pub const ERROR_WRITE_FAULT: DWORD = 29;\n-pub const ERROR_READ_FAULT: DWORD = 30;\n-pub const ERROR_GEN_FAILURE: DWORD = 31;\n-pub const ERROR_SHARING_VIOLATION: DWORD = 32;\n-pub const ERROR_LOCK_VIOLATION: DWORD = 33;\n-pub const ERROR_WRONG_DISK: DWORD = 34;\n-pub const ERROR_SHARING_BUFFER_EXCEEDED: DWORD = 36;\n-pub const ERROR_HANDLE_EOF: DWORD = 38;\n-pub const ERROR_HANDLE_DISK_FULL: DWORD = 39;\n-pub const ERROR_NOT_SUPPORTED: DWORD = 50;\n-pub const ERROR_REM_NOT_LIST: DWORD = 51;\n-pub const ERROR_DUP_NAME: DWORD = 52;\n-pub const ERROR_BAD_NETPATH: DWORD = 53;\n-pub const ERROR_NETWORK_BUSY: DWORD = 54;\n-pub const ERROR_DEV_NOT_EXIST: DWORD = 55;\n-pub const ERROR_TOO_MANY_CMDS: DWORD = 56;\n-pub const ERROR_ADAP_HDW_ERR: DWORD = 57;\n-pub const ERROR_BAD_NET_RESP: DWORD = 58;\n-pub const ERROR_UNEXP_NET_ERR: DWORD = 59;\n-pub const ERROR_BAD_REM_ADAP: DWORD = 60;\n-pub const ERROR_PRINTQ_FULL: DWORD = 61;\n-pub const ERROR_NO_SPOOL_SPACE: DWORD = 62;\n-pub const ERROR_PRINT_CANCELLED: DWORD = 63;\n-pub const ERROR_NETNAME_DELETED: DWORD = 64;\n-pub const ERROR_NETWORK_ACCESS_DENIED: DWORD = 65;\n-pub const ERROR_BAD_DEV_TYPE: DWORD = 66;\n-pub const ERROR_BAD_NET_NAME: DWORD = 67;\n-pub const ERROR_TOO_MANY_NAMES: DWORD = 68;\n-pub const ERROR_TOO_MANY_SESS: DWORD = 69;\n-pub const ERROR_SHARING_PAUSED: DWORD = 70;\n-pub const ERROR_REQ_NOT_ACCEP: DWORD = 71;\n-pub const ERROR_REDIR_PAUSED: DWORD = 72;\n-pub const ERROR_FILE_EXISTS: DWORD = 80;\n-pub const ERROR_CANNOT_MAKE: DWORD = 82;\n-pub const ERROR_FAIL_I24: DWORD = 83;\n-pub const ERROR_OUT_OF_STRUCTURES: DWORD = 84;\n-pub const ERROR_ALREADY_ASSIGNED: DWORD = 85;\n-pub const ERROR_INVALID_PASSWORD: DWORD = 86;\n-pub const ERROR_INVALID_PARAMETER: DWORD = 87;\n-pub const ERROR_NET_WRITE_FAULT: DWORD = 88;\n-pub const ERROR_NO_PROC_SLOTS: DWORD = 89;\n-pub const ERROR_TOO_MANY_SEMAPHORES: DWORD = 100;\n-pub const ERROR_EXCL_SEM_ALREADY_OWNED: DWORD = 101;\n-pub const ERROR_SEM_IS_SET: DWORD = 102;\n-pub const ERROR_TOO_MANY_SEM_REQUESTS: DWORD = 103;\n-pub const ERROR_INVALID_AT_INTERRUPT_TIME: DWORD = 104;\n-pub const ERROR_SEM_OWNER_DIED: DWORD = 105;\n-pub const ERROR_SEM_USER_LIMIT: DWORD = 106;\n-pub const ERROR_DISK_CHANGE: DWORD = 107;\n-pub const ERROR_DRIVE_LOCKED: DWORD = 108;\n-pub const ERROR_BROKEN_PIPE: DWORD = 109;\n-pub const ERROR_OPEN_FAILED: DWORD = 110;\n-pub const ERROR_BUFFER_OVERFLOW: DWORD = 111;\n-pub const ERROR_DISK_FULL: DWORD = 112;\n-pub const ERROR_NO_MORE_SEARCH_HANDLES: DWORD = 113;\n-pub const ERROR_INVALID_TARGET_HANDLE: DWORD = 114;\n-pub const ERROR_INVALID_CATEGORY: DWORD = 117;\n-pub const ERROR_INVALID_VERIFY_SWITCH: DWORD = 118;\n-pub const ERROR_BAD_DRIVER_LEVEL: DWORD = 119;\n-pub const ERROR_CALL_NOT_IMPLEMENTED: DWORD = 120;\n-pub const ERROR_SEM_TIMEOUT: DWORD = 121;\n-pub const ERROR_INSUFFICIENT_BUFFER: DWORD = 122;\n-pub const ERROR_INVALID_NAME: DWORD = 123;\n-pub const ERROR_INVALID_LEVEL: DWORD = 124;\n-pub const ERROR_NO_VOLUME_LABEL: DWORD = 125;\n-pub const ERROR_MOD_NOT_FOUND: DWORD = 126;\n-pub const ERROR_PROC_NOT_FOUND: DWORD = 127;\n-pub const ERROR_WAIT_NO_CHILDREN: DWORD = 128;\n-pub const ERROR_CHILD_NOT_COMPLETE: DWORD = 129;\n-pub const ERROR_DIRECT_ACCESS_HANDLE: DWORD = 130;\n-pub const ERROR_NEGATIVE_SEEK: DWORD = 131;\n-pub const ERROR_SEEK_ON_DEVICE: DWORD = 132;\n-pub const ERROR_IS_JOIN_TARGET: DWORD = 133;\n-pub const ERROR_IS_JOINED: DWORD = 134;\n-pub const ERROR_IS_SUBSTED: DWORD = 135;\n-pub const ERROR_NOT_JOINED: DWORD = 136;\n-pub const ERROR_NOT_SUBSTED: DWORD = 137;\n-pub const ERROR_JOIN_TO_JOIN: DWORD = 138;\n-pub const ERROR_SUBST_TO_SUBST: DWORD = 139;\n-pub const ERROR_JOIN_TO_SUBST: DWORD = 140;\n-pub const ERROR_SUBST_TO_JOIN: DWORD = 141;\n-pub const ERROR_BUSY_DRIVE: DWORD = 142;\n-pub const ERROR_SAME_DRIVE: DWORD = 143;\n-pub const ERROR_DIR_NOT_ROOT: DWORD = 144;\n-pub const ERROR_DIR_NOT_EMPTY: DWORD = 145;\n-pub const ERROR_IS_SUBST_PATH: DWORD = 146;\n-pub const ERROR_IS_JOIN_PATH: DWORD = 147;\n-pub const ERROR_PATH_BUSY: DWORD = 148;\n-pub const ERROR_IS_SUBST_TARGET: DWORD = 149;\n-pub const ERROR_SYSTEM_TRACE: DWORD = 150;\n-pub const ERROR_INVALID_EVENT_COUNT: DWORD = 151;\n-pub const ERROR_TOO_MANY_MUXWAITERS: DWORD = 152;\n-pub const ERROR_INVALID_LIST_FORMAT: DWORD = 153;\n-pub const ERROR_LABEL_TOO_LONG: DWORD = 154;\n-pub const ERROR_TOO_MANY_TCBS: DWORD = 155;\n-pub const ERROR_SIGNAL_REFUSED: DWORD = 156;\n-pub const ERROR_DISCARDED: DWORD = 157;\n-pub const ERROR_NOT_LOCKED: DWORD = 158;\n-pub const ERROR_BAD_THREADID_ADDR: DWORD = 159;\n-pub const ERROR_BAD_ARGUMENTS: DWORD = 160;\n-pub const ERROR_BAD_PATHNAME: DWORD = 161;\n-pub const ERROR_SIGNAL_PENDING: DWORD = 162;\n-pub const ERROR_MAX_THRDS_REACHED: DWORD = 164;\n-pub const ERROR_LOCK_FAILED: DWORD = 167;\n-pub const ERROR_BUSY: DWORD = 170;\n-pub const ERROR_CANCEL_VIOLATION: DWORD = 173;\n-pub const ERROR_ATOMIC_LOCKS_NOT_SUPPORTED: DWORD = 174;\n-pub const ERROR_INVALID_SEGMENT_NUMBER: DWORD = 180;\n-pub const ERROR_INVALID_ORDINAL: DWORD = 182;\n-pub const ERROR_ALREADY_EXISTS: DWORD = 183;\n-pub const ERROR_INVALID_FLAG_NUMBER: DWORD = 186;\n-pub const ERROR_SEM_NOT_FOUND: DWORD = 187;\n-pub const ERROR_INVALID_STARTING_CODESEG: DWORD = 188;\n-pub const ERROR_INVALID_STACKSEG: DWORD = 189;\n-pub const ERROR_INVALID_MODULETYPE: DWORD = 190;\n-pub const ERROR_INVALID_EXE_SIGNATURE: DWORD = 191;\n-pub const ERROR_EXE_MARKED_INVALID: DWORD = 192;\n-pub const ERROR_BAD_EXE_FORMAT: DWORD = 193;\n-pub const ERROR_ITERATED_DATA_EXCEEDS_64k: DWORD = 194;\n-pub const ERROR_INVALID_MINALLOCSIZE: DWORD = 195;\n-pub const ERROR_DYNLINK_FROM_INVALID_RING: DWORD = 196;\n-pub const ERROR_IOPL_NOT_ENABLED: DWORD = 197;\n-pub const ERROR_INVALID_SEGDPL: DWORD = 198;\n-pub const ERROR_AUTODATASEG_EXCEEDS_64k: DWORD = 199;\n-pub const ERROR_RING2SEG_MUST_BE_MOVABLE: DWORD = 200;\n-pub const ERROR_RELOC_CHAIN_XEEDS_SEGLIM: DWORD = 201;\n-pub const ERROR_INFLOOP_IN_RELOC_CHAIN: DWORD = 202;\n-pub const ERROR_ENVVAR_NOT_FOUND: DWORD = 203;\n-pub const ERROR_NO_SIGNAL_SENT: DWORD = 205;\n-pub const ERROR_FILENAME_EXCED_RANGE: DWORD = 206;\n-pub const ERROR_RING2_STACK_IN_USE: DWORD = 207;\n-pub const ERROR_META_EXPANSION_TOO_LONG: DWORD = 208;\n-pub const ERROR_INVALID_SIGNAL_NUMBER: DWORD = 209;\n-pub const ERROR_THREAD_1_INACTIVE: DWORD = 210;\n-pub const ERROR_LOCKED: DWORD = 212;\n-pub const ERROR_TOO_MANY_MODULES: DWORD = 214;\n-pub const ERROR_NESTING_NOT_ALLOWED: DWORD = 215;\n-pub const ERROR_EXE_MACHINE_TYPE_MISMATCH: DWORD = 216;\n-pub const ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY: DWORD = 217;\n-pub const ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY: DWORD = 218;\n-pub const ERROR_FILE_CHECKED_OUT: DWORD = 220;\n-pub const ERROR_CHECKOUT_REQUIRED: DWORD = 221;\n-pub const ERROR_BAD_FILE_TYPE: DWORD = 222;\n-pub const ERROR_FILE_TOO_LARGE: DWORD = 223;\n-pub const ERROR_FORMS_AUTH_REQUIRED: DWORD = 224;\n-pub const ERROR_PIPE_LOCAL: DWORD = 229;\n-pub const ERROR_BAD_PIPE: DWORD = 230;\n-pub const ERROR_PIPE_BUSY: DWORD = 231;\n-pub const ERROR_NO_DATA: DWORD = 232;\n-pub const ERROR_PIPE_NOT_CONNECTED: DWORD = 233;\n-pub const ERROR_MORE_DATA: DWORD = 234;\n-pub const ERROR_VC_DISCONNECTED: DWORD = 240;\n-pub const ERROR_INVALID_EA_NAME: DWORD = 254;\n-pub const ERROR_EA_LIST_INCONSISTENT: DWORD = 255;\n-pub const ERROR_NO_MORE_ITEMS: DWORD = 259;\n-pub const ERROR_CANNOT_COPY: DWORD = 266;\n-pub const ERROR_DIRECTORY: DWORD = 267;\n-pub const ERROR_EAS_DIDNT_FIT: DWORD = 275;\n-pub const ERROR_EA_FILE_CORRUPT: DWORD = 276;\n-pub const ERROR_EA_TABLE_FULL: DWORD = 277;\n-pub const ERROR_INVALID_EA_HANDLE: DWORD = 278;\n-pub const ERROR_EAS_NOT_SUPPORTED: DWORD = 282;\n-pub const ERROR_NOT_OWNER: DWORD = 288;\n-pub const ERROR_TOO_MANY_POSTS: DWORD = 298;\n-pub const ERROR_PARTIAL_COPY: DWORD = 299;\n-pub const ERROR_OPLOCK_NOT_GRANTED: DWORD = 300;\n-pub const ERROR_INVALID_OPLOCK_PROTOCOL: DWORD = 301;\n-pub const ERROR_DISK_TOO_FRAGMENTED: DWORD = 302;\n-pub const ERROR_DELETE_PENDING: DWORD = 303;\n-pub const ERROR_INVALID_TOKEN: DWORD = 315;\n-pub const ERROR_MR_MID_NOT_FOUND: DWORD = 317;\n-pub const ERROR_SCOPE_NOT_FOUND: DWORD = 318;\n-pub const ERROR_INVALID_ADDRESS: DWORD = 487;\n-pub const ERROR_ARITHMETIC_OVERFLOW: DWORD = 534;\n-pub const ERROR_PIPE_CONNECTED: DWORD = 535;\n-pub const ERROR_PIPE_LISTENING: DWORD = 536;\n-pub const ERROR_WAKE_SYSTEM: DWORD = 730;\n-pub const ERROR_WAIT_1: DWORD = 731;\n-pub const ERROR_WAIT_2: DWORD = 732;\n-pub const ERROR_WAIT_3: DWORD = 733;\n-pub const ERROR_WAIT_63: DWORD = 734;\n-pub const ERROR_ABANDONED_WAIT_0: DWORD = 735;\n-pub const ERROR_ABANDONED_WAIT_63: DWORD = 736;\n-pub const ERROR_USER_APC: DWORD = 737;\n-pub const ERROR_KERNEL_APC: DWORD = 738;\n-pub const ERROR_ALERTED: DWORD = 739;\n-pub const ERROR_EA_ACCESS_DENIED: DWORD = 994;\n-pub const ERROR_OPERATION_ABORTED: DWORD = 995;\n-pub const ERROR_IO_INCOMPLETE: DWORD = 996;\n-pub const ERROR_IO_PENDING: DWORD = 997;\n-pub const ERROR_NOACCESS: DWORD = 998;\n-pub const ERROR_SWAPERROR: DWORD = 999;\n-pub const ERROR_STACK_OVERFLOW: DWORD = 1001;\n-pub const ERROR_INVALID_MESSAGE: DWORD = 1002;\n-pub const ERROR_CAN_NOT_COMPLETE: DWORD = 1003;\n-pub const ERROR_INVALID_FLAGS: DWORD = 1004;\n-pub const ERROR_UNRECOGNIZED_VOLUME: DWORD = 1005;\n-pub const ERROR_FILE_INVALID: DWORD = 1006;\n-pub const ERROR_FULLSCREEN_MODE: DWORD = 1007;\n-pub const ERROR_NO_TOKEN: DWORD = 1008;\n-pub const ERROR_BADDB: DWORD = 1009;\n-pub const ERROR_BADKEY: DWORD = 1010;\n-pub const ERROR_CANTOPEN: DWORD = 1011;\n-pub const ERROR_CANTREAD: DWORD = 1012;\n-pub const ERROR_CANTWRITE: DWORD = 1013;\n-pub const ERROR_REGISTRY_RECOVERED: DWORD = 1014;\n-pub const ERROR_REGISTRY_CORRUPT: DWORD = 1015;\n-pub const ERROR_REGISTRY_IO_FAILED: DWORD = 1016;\n-pub const ERROR_NOT_REGISTRY_FILE: DWORD = 1017;\n-pub const ERROR_KEY_DELETED: DWORD = 1018;\n-pub const ERROR_NO_LOG_SPACE: DWORD = 1019;\n-pub const ERROR_KEY_HAS_CHILDREN: DWORD = 1020;\n-pub const ERROR_CHILD_MUST_BE_VOLATILE: DWORD = 1021;\n-pub const ERROR_NOTIFY_ENUM_DIR: DWORD = 1022;\n-pub const ERROR_DEPENDENT_SERVICES_RUNNING: DWORD = 1051;\n-pub const ERROR_INVALID_SERVICE_CONTROL: DWORD = 1052;\n-pub const ERROR_SERVICE_REQUEST_TIMEOUT: DWORD = 1053;\n-pub const ERROR_SERVICE_NO_THREAD: DWORD = 1054;\n-pub const ERROR_SERVICE_DATABASE_LOCKED: DWORD = 1055;\n-pub const ERROR_SERVICE_ALREADY_RUNNING: DWORD = 1056;\n-pub const ERROR_INVALID_SERVICE_ACCOUNT: DWORD = 1057;\n-pub const ERROR_SERVICE_DISABLED: DWORD = 1058;\n-pub const ERROR_CIRCULAR_DEPENDENCY: DWORD = 1059;\n-pub const ERROR_SERVICE_DOES_NOT_EXIST: DWORD = 1060;\n-pub const ERROR_SERVICE_CANNOT_ACCEPT_CTRL: DWORD = 1061;\n-pub const ERROR_SERVICE_NOT_ACTIVE: DWORD = 1062;\n-pub const ERROR_FAILED_SERVICE_CONTROLLER_CONNECT: DWORD = 1063;\n-pub const ERROR_EXCEPTION_IN_SERVICE: DWORD = 1064;\n-pub const ERROR_DATABASE_DOES_NOT_EXIST: DWORD = 1065;\n-pub const ERROR_SERVICE_SPECIFIC_ERROR: DWORD = 1066;\n-pub const ERROR_PROCESS_ABORTED: DWORD = 1067;\n-pub const ERROR_SERVICE_DEPENDENCY_FAIL: DWORD = 1068;\n-pub const ERROR_SERVICE_LOGON_FAILED: DWORD = 1069;\n-pub const ERROR_SERVICE_START_HANG: DWORD = 1070;\n-pub const ERROR_INVALID_SERVICE_LOCK: DWORD = 1071;\n-pub const ERROR_SERVICE_MARKED_FOR_DELETE: DWORD = 1072;\n-pub const ERROR_SERVICE_EXISTS: DWORD = 1073;\n-pub const ERROR_ALREADY_RUNNING_LKG: DWORD = 1074;\n-pub const ERROR_SERVICE_DEPENDENCY_DELETED: DWORD = 1075;\n-pub const ERROR_BOOT_ALREADY_ACCEPTED: DWORD = 1076;\n-pub const ERROR_SERVICE_NEVER_STARTED: DWORD = 1077;\n-pub const ERROR_DUPLICATE_SERVICE_NAME: DWORD = 1078;\n-pub const ERROR_DIFFERENT_SERVICE_ACCOUNT: DWORD = 1079;\n-pub const ERROR_CANNOT_DETECT_DRIVER_FAILURE: DWORD = 1080;\n-pub const ERROR_CANNOT_DETECT_PROCESS_ABORT: DWORD = 1081;\n-pub const ERROR_NO_RECOVERY_PROGRAM: DWORD = 1082;\n-pub const ERROR_SERVICE_NOT_IN_EXE: DWORD = 1083;\n-pub const ERROR_NOT_SAFEBOOT_SERVICE: DWORD = 1084;\n-pub const ERROR_END_OF_MEDIA: DWORD = 1100;\n-pub const ERROR_FILEMARK_DETECTED: DWORD = 1101;\n-pub const ERROR_BEGINNING_OF_MEDIA: DWORD = 1102;\n-pub const ERROR_SETMARK_DETECTED: DWORD = 1103;\n-pub const ERROR_NO_DATA_DETECTED: DWORD = 1104;\n-pub const ERROR_PARTITION_FAILURE: DWORD = 1105;\n-pub const ERROR_INVALID_BLOCK_LENGTH: DWORD = 1106;\n-pub const ERROR_DEVICE_NOT_PARTITIONED: DWORD = 1107;\n-pub const ERROR_UNABLE_TO_LOCK_MEDIA: DWORD = 1108;\n-pub const ERROR_UNABLE_TO_UNLOAD_MEDIA: DWORD = 1109;\n-pub const ERROR_MEDIA_CHANGED: DWORD = 1110;\n-pub const ERROR_BUS_RESET: DWORD = 1111;\n-pub const ERROR_NO_MEDIA_IN_DRIVE: DWORD = 1112;\n-pub const ERROR_NO_UNICODE_TRANSLATION: DWORD = 1113;\n-pub const ERROR_DLL_INIT_FAILED: DWORD = 1114;\n-pub const ERROR_SHUTDOWN_IN_PROGRESS: DWORD = 1115;\n-pub const ERROR_NO_SHUTDOWN_IN_PROGRESS: DWORD = 1116;\n-pub const ERROR_IO_DEVICE: DWORD = 1117;\n-pub const ERROR_SERIAL_NO_DEVICE: DWORD = 1118;\n-pub const ERROR_IRQ_BUSY: DWORD = 1119;\n-pub const ERROR_MORE_WRITES: DWORD = 1120;\n-pub const ERROR_COUNTER_TIMEOUT: DWORD = 1121;\n-pub const ERROR_FLOPPY_ID_MARK_NOT_FOUND: DWORD = 1122;\n-pub const ERROR_FLOPPY_WRONG_CYLINDER: DWORD = 1123;\n-pub const ERROR_FLOPPY_UNKNOWN_ERROR: DWORD = 1124;\n-pub const ERROR_FLOPPY_BAD_REGISTERS: DWORD = 1125;\n-pub const ERROR_DISK_RECALIBRATE_FAILED: DWORD = 1126;\n-pub const ERROR_DISK_OPERATION_FAILED: DWORD = 1127;\n-pub const ERROR_DISK_RESET_FAILED: DWORD = 1128;\n-pub const ERROR_EOM_OVERFLOW: DWORD = 1129;\n-pub const ERROR_NOT_ENOUGH_SERVER_MEMORY: DWORD = 1130;\n-pub const ERROR_POSSIBLE_DEADLOCK: DWORD = 1131;\n-pub const ERROR_MAPPED_ALIGNMENT: DWORD = 1132;\n-pub const ERROR_SET_POWER_STATE_VETOED: DWORD = 1140;\n-pub const ERROR_SET_POWER_STATE_FAILED: DWORD = 1141;\n-pub const ERROR_TOO_MANY_LINKS: DWORD = 1142;\n-pub const ERROR_OLD_WIN_VERSION: DWORD = 1150;\n-pub const ERROR_APP_WRONG_OS: DWORD = 1151;\n-pub const ERROR_SINGLE_INSTANCE_APP: DWORD = 1152;\n-pub const ERROR_RMODE_APP: DWORD = 1153;\n-pub const ERROR_INVALID_DLL: DWORD = 1154;\n-pub const ERROR_NO_ASSOCIATION: DWORD = 1155;\n-pub const ERROR_DDE_FAIL: DWORD = 1156;\n-pub const ERROR_DLL_NOT_FOUND: DWORD = 1157;\n-pub const ERROR_NO_MORE_USER_HANDLES: DWORD = 1158;\n-pub const ERROR_MESSAGE_SYNC_ONLY: DWORD = 1159;\n-pub const ERROR_SOURCE_ELEMENT_EMPTY: DWORD = 1160;\n-pub const ERROR_DESTINATION_ELEMENT_FULL: DWORD = 1161;\n-pub const ERROR_ILLEGAL_ELEMENT_ADDRESS: DWORD = 1162;\n-pub const ERROR_MAGAZINE_NOT_PRESENT: DWORD = 1163;\n-pub const ERROR_DEVICE_REINITIALIZATION_NEEDED: DWORD = 1164;\n-pub const ERROR_DEVICE_REQUIRES_CLEANING: DWORD = 1165;\n-pub const ERROR_DEVICE_DOOR_OPEN: DWORD = 1166;\n-pub const ERROR_DEVICE_NOT_CONNECTED: DWORD = 1167;\n-pub const ERROR_NOT_FOUND: DWORD = 1168;\n-pub const ERROR_NO_MATCH: DWORD = 1169;\n-pub const ERROR_SET_NOT_FOUND: DWORD = 1170;\n-pub const ERROR_POINT_NOT_FOUND: DWORD = 1171;\n-pub const ERROR_NO_TRACKING_SERVICE: DWORD = 1172;\n-pub const ERROR_NO_VOLUME_ID: DWORD = 1173;\n-pub const ERROR_UNABLE_TO_REMOVE_REPLACED: DWORD = 1175;\n-pub const ERROR_UNABLE_TO_MOVE_REPLACEMENT: DWORD = 1176;\n-pub const ERROR_UNABLE_TO_MOVE_REPLACEMENT_2: DWORD = 1177;\n-pub const ERROR_JOURNAL_DELETE_IN_PROGRESS: DWORD = 1178;\n-pub const ERROR_JOURNAL_NOT_ACTIVE: DWORD = 1179;\n-pub const ERROR_POTENTIAL_FILE_FOUND: DWORD = 1180;\n-pub const ERROR_JOURNAL_ENTRY_DELETED: DWORD = 1181;\n-pub const ERROR_BAD_DEVICE: DWORD = 1200;\n-pub const ERROR_CONNECTION_UNAVAIL: DWORD = 1201;\n-pub const ERROR_DEVICE_ALREADY_REMEMBERED: DWORD = 1202;\n-pub const ERROR_NO_NET_OR_BAD_PATH: DWORD = 1203;\n-pub const ERROR_BAD_PROVIDER: DWORD = 1204;\n-pub const ERROR_CANNOT_OPEN_PROFILE: DWORD = 1205;\n-pub const ERROR_BAD_PROFILE: DWORD = 1206;\n-pub const ERROR_NOT_CONTAINER: DWORD = 1207;\n-pub const ERROR_EXTENDED_ERROR: DWORD = 1208;\n-pub const ERROR_INVALID_GROUPNAME: DWORD = 1209;\n-pub const ERROR_INVALID_COMPUTERNAME: DWORD = 1210;\n-pub const ERROR_INVALID_EVENTNAME: DWORD = 1211;\n-pub const ERROR_INVALID_DOMAINNAME: DWORD = 1212;\n-pub const ERROR_INVALID_SERVICENAME: DWORD = 1213;\n-pub const ERROR_INVALID_NETNAME: DWORD = 1214;\n-pub const ERROR_INVALID_SHARENAME: DWORD = 1215;\n-pub const ERROR_INVALID_PASSWORDNAME: DWORD = 1216;\n-pub const ERROR_INVALID_MESSAGENAME: DWORD = 1217;\n-pub const ERROR_INVALID_MESSAGEDEST: DWORD = 1218;\n-pub const ERROR_SESSION_CREDENTIAL_CONFLICT: DWORD = 1219;\n-pub const ERROR_REMOTE_SESSION_LIMIT_EXCEEDED: DWORD = 1220;\n-pub const ERROR_DUP_DOMAINNAME: DWORD = 1221;\n-pub const ERROR_NO_NETWORK: DWORD = 1222;\n-pub const ERROR_CANCELLED: DWORD = 1223;\n-pub const ERROR_USER_MAPPED_FILE: DWORD = 1224;\n-pub const ERROR_CONNECTION_REFUSED: DWORD = 1225;\n-pub const ERROR_GRACEFUL_DISCONNECT: DWORD = 1226;\n-pub const ERROR_ADDRESS_ALREADY_ASSOCIATED: DWORD = 1227;\n-pub const ERROR_ADDRESS_NOT_ASSOCIATED: DWORD = 1228;\n-pub const ERROR_CONNECTION_INVALID: DWORD = 1229;\n-pub const ERROR_CONNECTION_ACTIVE: DWORD = 1230;\n-pub const ERROR_NETWORK_UNREACHABLE: DWORD = 1231;\n-pub const ERROR_HOST_UNREACHABLE: DWORD = 1232;\n-pub const ERROR_PROTOCOL_UNREACHABLE: DWORD = 1233;\n-pub const ERROR_PORT_UNREACHABLE: DWORD = 1234;\n-pub const ERROR_REQUEST_ABORTED: DWORD = 1235;\n-pub const ERROR_CONNECTION_ABORTED: DWORD = 1236;\n-pub const ERROR_RETRY: DWORD = 1237;\n-pub const ERROR_CONNECTION_COUNT_LIMIT: DWORD = 1238;\n-pub const ERROR_LOGIN_TIME_RESTRICTION: DWORD = 1239;\n-pub const ERROR_LOGIN_WKSTA_RESTRICTION: DWORD = 1240;\n-pub const ERROR_INCORRECT_ADDRESS: DWORD = 1241;\n-pub const ERROR_ALREADY_REGISTERED: DWORD = 1242;\n-pub const ERROR_SERVICE_NOT_FOUND: DWORD = 1243;\n-pub const ERROR_NOT_AUTHENTICATED: DWORD = 1244;\n-pub const ERROR_NOT_LOGGED_ON: DWORD = 1245;\n-pub const ERROR_CONTINUE: DWORD = 1246;\n-pub const ERROR_ALREADY_INITIALIZED: DWORD = 1247;\n-pub const ERROR_NO_MORE_DEVICES: DWORD = 1248;\n-pub const ERROR_NO_SUCH_SITE: DWORD = 1249;\n-pub const ERROR_DOMAIN_CONTROLLER_EXISTS: DWORD = 1250;\n-pub const ERROR_ONLY_IF_CONNECTED: DWORD = 1251;\n-pub const ERROR_OVERRIDE_NOCHANGES: DWORD = 1252;\n-pub const ERROR_BAD_USER_PROFILE: DWORD = 1253;\n-pub const ERROR_NOT_SUPPORTED_ON_SBS: DWORD = 1254;\n-pub const ERROR_SERVER_SHUTDOWN_IN_PROGRESS: DWORD = 1255;\n-pub const ERROR_HOST_DOWN: DWORD = 1256;\n-pub const ERROR_NON_ACCOUNT_SID: DWORD = 1257;\n-pub const ERROR_NON_DOMAIN_SID: DWORD = 1258;\n-pub const ERROR_APPHELP_BLOCK: DWORD = 1259;\n-pub const ERROR_ACCESS_DISABLED_BY_POLICY: DWORD = 1260;\n-pub const ERROR_REG_NAT_CONSUMPTION: DWORD = 1261;\n-pub const ERROR_CSCSHARE_OFFLINE: DWORD = 1262;\n-pub const ERROR_PKINIT_FAILURE: DWORD = 1263;\n-pub const ERROR_SMARTCARD_SUBSYSTEM_FAILURE: DWORD = 1264;\n-pub const ERROR_DOWNGRADE_DETECTED: DWORD = 1265;\n-pub const ERROR_MACHINE_LOCKED: DWORD = 1271;\n-pub const ERROR_CALLBACK_SUPPLIED_INVALID_DATA: DWORD = 1273;\n-pub const ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED: DWORD = 1274;\n-pub const ERROR_DRIVER_BLOCKED: DWORD = 1275;\n-pub const ERROR_INVALID_IMPORT_OF_NON_DLL: DWORD = 1276;\n-pub const ERROR_ACCESS_DISABLED_WEBBLADE: DWORD = 1277;\n-pub const ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER: DWORD = 1278;\n-pub const ERROR_RECOVERY_FAILURE: DWORD = 1279;\n-pub const ERROR_ALREADY_FIBER: DWORD = 1280;\n-pub const ERROR_ALREADY_THREAD: DWORD = 1281;\n-pub const ERROR_STACK_BUFFER_OVERRUN: DWORD = 1282;\n-pub const ERROR_PARAMETER_QUOTA_EXCEEDED: DWORD = 1283;\n-pub const ERROR_DEBUGGER_INACTIVE: DWORD = 1284;\n-pub const ERROR_DELAY_LOAD_FAILED: DWORD = 1285;\n-pub const ERROR_VDM_DISALLOWED: DWORD = 1286;\n-pub const ERROR_UNIDENTIFIED_ERROR: DWORD = 1287;\n-pub const ERROR_NOT_ALL_ASSIGNED: DWORD = 1300;\n-pub const ERROR_SOME_NOT_MAPPED: DWORD = 1301;\n-pub const ERROR_NO_QUOTAS_FOR_ACCOUNT: DWORD = 1302;\n-pub const ERROR_LOCAL_USER_SESSION_KEY: DWORD = 1303;\n-pub const ERROR_NULL_LM_PASSWORD: DWORD = 1304;\n-pub const ERROR_UNKNOWN_REVISION: DWORD = 1305;\n-pub const ERROR_REVISION_MISMATCH: DWORD = 1306;\n-pub const ERROR_INVALID_OWNER: DWORD = 1307;\n-pub const ERROR_INVALID_PRIMARY_GROUP: DWORD = 1308;\n-pub const ERROR_NO_IMPERSONATION_TOKEN: DWORD = 1309;\n-pub const ERROR_CANT_DISABLE_MANDATORY: DWORD = 1310;\n-pub const ERROR_NO_LOGON_SERVERS: DWORD = 1311;\n-pub const ERROR_NO_SUCH_LOGON_SESSION: DWORD = 1312;\n-pub const ERROR_NO_SUCH_PRIVILEGE: DWORD = 1313;\n-pub const ERROR_PRIVILEGE_NOT_HELD: DWORD = 1314;\n-pub const ERROR_INVALID_ACCOUNT_NAME: DWORD = 1315;\n-pub const ERROR_USER_EXISTS: DWORD = 1316;\n-pub const ERROR_NO_SUCH_USER: DWORD = 1317;\n-pub const ERROR_GROUP_EXISTS: DWORD = 1318;\n-pub const ERROR_NO_SUCH_GROUP: DWORD = 1319;\n-pub const ERROR_MEMBER_IN_GROUP: DWORD = 1320;\n-pub const ERROR_MEMBER_NOT_IN_GROUP: DWORD = 1321;\n-pub const ERROR_LAST_ADMIN: DWORD = 1322;\n-pub const ERROR_WRONG_PASSWORD: DWORD = 1323;\n-pub const ERROR_ILL_FORMED_PASSWORD: DWORD = 1324;\n-pub const ERROR_PASSWORD_RESTRICTION: DWORD = 1325;\n-pub const ERROR_LOGON_FAILURE: DWORD = 1326;\n-pub const ERROR_ACCOUNT_RESTRICTION: DWORD = 1327;\n-pub const ERROR_INVALID_LOGON_HOURS: DWORD = 1328;\n-pub const ERROR_INVALID_WORKSTATION: DWORD = 1329;\n-pub const ERROR_PASSWORD_EXPIRED: DWORD = 1330;\n-pub const ERROR_ACCOUNT_DISABLED: DWORD = 1331;\n-pub const ERROR_NONE_MAPPED: DWORD = 1332;\n-pub const ERROR_TOO_MANY_LUIDS_REQUESTED: DWORD = 1333;\n-pub const ERROR_LUIDS_EXHAUSTED: DWORD = 1334;\n-pub const ERROR_INVALID_SUB_AUTHORITY: DWORD = 1335;\n-pub const ERROR_INVALID_ACL: DWORD = 1336;\n-pub const ERROR_INVALID_SID: DWORD = 1337;\n-pub const ERROR_INVALID_SECURITY_DESCR: DWORD = 1338;\n-pub const ERROR_BAD_INHERITANCE_ACL: DWORD = 1340;\n-pub const ERROR_SERVER_DISABLED: DWORD = 1341;\n-pub const ERROR_SERVER_NOT_DISABLED: DWORD = 1342;\n-pub const ERROR_INVALID_ID_AUTHORITY: DWORD = 1343;\n-pub const ERROR_ALLOTTED_SPACE_EXCEEDED: DWORD = 1344;\n-pub const ERROR_INVALID_GROUP_ATTRIBUTES: DWORD = 1345;\n-pub const ERROR_BAD_IMPERSONATION_LEVEL: DWORD = 1346;\n-pub const ERROR_CANT_OPEN_ANONYMOUS: DWORD = 1347;\n-pub const ERROR_BAD_VALIDATION_CLASS: DWORD = 1348;\n-pub const ERROR_BAD_TOKEN_TYPE: DWORD = 1349;\n-pub const ERROR_NO_SECURITY_ON_OBJECT: DWORD = 1350;\n-pub const ERROR_CANT_ACCESS_DOMAIN_INFO: DWORD = 1351;\n-pub const ERROR_INVALID_SERVER_STATE: DWORD = 1352;\n-pub const ERROR_INVALID_DOMAIN_STATE: DWORD = 1353;\n-pub const ERROR_INVALID_DOMAIN_ROLE: DWORD = 1354;\n-pub const ERROR_NO_SUCH_DOMAIN: DWORD = 1355;\n-pub const ERROR_DOMAIN_EXISTS: DWORD = 1356;\n-pub const ERROR_DOMAIN_LIMIT_EXCEEDED: DWORD = 1357;\n-pub const ERROR_INTERNAL_DB_CORRUPTION: DWORD = 1358;\n-pub const ERROR_INTERNAL_ERROR: DWORD = 1359;\n-pub const ERROR_GENERIC_NOT_MAPPED: DWORD = 1360;\n-pub const ERROR_BAD_DESCRIPTOR_FORMAT: DWORD = 1361;\n-pub const ERROR_NOT_LOGON_PROCESS: DWORD = 1362;\n-pub const ERROR_LOGON_SESSION_EXISTS: DWORD = 1363;\n-pub const ERROR_NO_SUCH_PACKAGE: DWORD = 1364;\n-pub const ERROR_BAD_LOGON_SESSION_STATE: DWORD = 1365;\n-pub const ERROR_LOGON_SESSION_COLLISION: DWORD = 1366;\n-pub const ERROR_INVALID_LOGON_TYPE: DWORD = 1367;\n-pub const ERROR_CANNOT_IMPERSONATE: DWORD = 1368;\n-pub const ERROR_RXACT_INVALID_STATE: DWORD = 1369;\n-pub const ERROR_RXACT_COMMIT_FAILURE: DWORD = 1370;\n-pub const ERROR_SPECIAL_ACCOUNT: DWORD = 1371;\n-pub const ERROR_SPECIAL_GROUP: DWORD = 1372;\n-pub const ERROR_SPECIAL_USER: DWORD = 1373;\n-pub const ERROR_MEMBERS_PRIMARY_GROUP: DWORD = 1374;\n-pub const ERROR_TOKEN_ALREADY_IN_USE: DWORD = 1375;\n-pub const ERROR_NO_SUCH_ALIAS: DWORD = 1376;\n-pub const ERROR_MEMBER_NOT_IN_ALIAS: DWORD = 1377;\n-pub const ERROR_MEMBER_IN_ALIAS: DWORD = 1378;\n-pub const ERROR_ALIAS_EXISTS: DWORD = 1379;\n-pub const ERROR_LOGON_NOT_GRANTED: DWORD = 1380;\n-pub const ERROR_TOO_MANY_SECRETS: DWORD = 1381;\n-pub const ERROR_SECRET_TOO_LONG: DWORD = 1382;\n-pub const ERROR_INTERNAL_DB_ERROR: DWORD = 1383;\n-pub const ERROR_TOO_MANY_CONTEXT_IDS: DWORD = 1384;\n-pub const ERROR_LOGON_TYPE_NOT_GRANTED: DWORD = 1385;\n-pub const ERROR_NT_CROSS_ENCRYPTION_REQUIRED: DWORD = 1386;\n-pub const ERROR_NO_SUCH_MEMBER: DWORD = 1387;\n-pub const ERROR_INVALID_MEMBER: DWORD = 1388;\n-pub const ERROR_TOO_MANY_SIDS: DWORD = 1389;\n-pub const ERROR_LM_CROSS_ENCRYPTION_REQUIRED: DWORD = 1390;\n-pub const ERROR_NO_INHERITANCE: DWORD = 1391;\n-pub const ERROR_FILE_CORRUPT: DWORD = 1392;\n-pub const ERROR_DISK_CORRUPT: DWORD = 1393;\n-pub const ERROR_NO_USER_SESSION_KEY: DWORD = 1394;\n-pub const ERROR_LICENSE_QUOTA_EXCEEDED: DWORD = 1395;\n-pub const ERROR_WRONG_TARGET_NAME: DWORD = 1396;\n-pub const ERROR_MUTUAL_AUTH_FAILED: DWORD = 1397;\n-pub const ERROR_TIME_SKEW: DWORD = 1398;\n-pub const ERROR_CURRENT_DOMAIN_NOT_ALLOWED: DWORD = 1399;\n-pub const ERROR_INVALID_WINDOW_HANDLE: DWORD = 1400;\n-pub const ERROR_INVALID_MENU_HANDLE: DWORD = 1401;\n-pub const ERROR_INVALID_CURSOR_HANDLE: DWORD = 1402;\n-pub const ERROR_INVALID_ACCEL_HANDLE: DWORD = 1403;\n-pub const ERROR_INVALID_HOOK_HANDLE: DWORD = 1404;\n-pub const ERROR_INVALID_DWP_HANDLE: DWORD = 1405;\n-pub const ERROR_TLW_WITH_WSCHILD: DWORD = 1406;\n-pub const ERROR_CANNOT_FIND_WND_CLASS: DWORD = 1407;\n-pub const ERROR_WINDOW_OF_OTHER_THREAD: DWORD = 1408;\n-pub const ERROR_HOTKEY_ALREADY_REGISTERED: DWORD = 1409;\n-pub const ERROR_CLASS_ALREADY_EXISTS: DWORD = 1410;\n-pub const ERROR_CLASS_DOES_NOT_EXIST: DWORD = 1411;\n-pub const ERROR_CLASS_HAS_WINDOWS: DWORD = 1412;\n-pub const ERROR_INVALID_INDEX: DWORD = 1413;\n-pub const ERROR_INVALID_ICON_HANDLE: DWORD = 1414;\n-pub const ERROR_PRIVATE_DIALOG_INDEX: DWORD = 1415;\n-pub const ERROR_LISTBOX_ID_NOT_FOUND: DWORD = 1416;\n-pub const ERROR_NO_WILDCARD_CHARACTERS: DWORD = 1417;\n-pub const ERROR_CLIPBOARD_NOT_OPEN: DWORD = 1418;\n-pub const ERROR_HOTKEY_NOT_REGISTERED: DWORD = 1419;\n-pub const ERROR_WINDOW_NOT_DIALOG: DWORD = 1420;\n-pub const ERROR_CONTROL_ID_NOT_FOUND: DWORD = 1421;\n-pub const ERROR_INVALID_COMBOBOX_MESSAGE: DWORD = 1422;\n-pub const ERROR_WINDOW_NOT_COMBOBOX: DWORD = 1423;\n-pub const ERROR_INVALID_EDIT_HEIGHT: DWORD = 1424;\n-pub const ERROR_DC_NOT_FOUND: DWORD = 1425;\n-pub const ERROR_INVALID_HOOK_FILTER: DWORD = 1426;\n-pub const ERROR_INVALID_FILTER_PROC: DWORD = 1427;\n-pub const ERROR_HOOK_NEEDS_HMOD: DWORD = 1428;\n-pub const ERROR_GLOBAL_ONLY_HOOK: DWORD = 1429;\n-pub const ERROR_JOURNAL_HOOK_SET: DWORD = 1430;\n-pub const ERROR_HOOK_NOT_INSTALLED: DWORD = 1431;\n-pub const ERROR_INVALID_LB_MESSAGE: DWORD = 1432;\n-pub const ERROR_SETCOUNT_ON_BAD_LB: DWORD = 1433;\n-pub const ERROR_LB_WITHOUT_TABSTOPS: DWORD = 1434;\n-pub const ERROR_DESTROY_OBJECT_OF_OTHER_THREAD: DWORD = 1435;\n-pub const ERROR_CHILD_WINDOW_MENU: DWORD = 1436;\n-pub const ERROR_NO_SYSTEM_MENU: DWORD = 1437;\n-pub const ERROR_INVALID_MSGBOX_STYLE: DWORD = 1438;\n-pub const ERROR_INVALID_SPI_VALUE: DWORD = 1439;\n-pub const ERROR_SCREEN_ALREADY_LOCKED: DWORD = 1440;\n-pub const ERROR_HWNDS_HAVE_DIFF_PARENT: DWORD = 1441;\n-pub const ERROR_NOT_CHILD_WINDOW: DWORD = 1442;\n-pub const ERROR_INVALID_GW_COMMAND: DWORD = 1443;\n-pub const ERROR_INVALID_THREAD_ID: DWORD = 1444;\n-pub const ERROR_NON_MDICHILD_WINDOW: DWORD = 1445;\n-pub const ERROR_POPUP_ALREADY_ACTIVE: DWORD = 1446;\n-pub const ERROR_NO_SCROLLBARS: DWORD = 1447;\n-pub const ERROR_INVALID_SCROLLBAR_RANGE: DWORD = 1448;\n-pub const ERROR_INVALID_SHOWWIN_COMMAND: DWORD = 1449;\n-pub const ERROR_NO_SYSTEM_RESOURCES: DWORD = 1450;\n-pub const ERROR_NONPAGED_SYSTEM_RESOURCES: DWORD = 1451;\n-pub const ERROR_PAGED_SYSTEM_RESOURCES: DWORD = 1452;\n-pub const ERROR_WORKING_SET_QUOTA: DWORD = 1453;\n-pub const ERROR_PAGEFILE_QUOTA: DWORD = 1454;\n-pub const ERROR_COMMITMENT_LIMIT: DWORD = 1455;\n-pub const ERROR_MENU_ITEM_NOT_FOUND: DWORD = 1456;\n-pub const ERROR_INVALID_KEYBOARD_HANDLE: DWORD = 1457;\n-pub const ERROR_HOOK_TYPE_NOT_ALLOWED: DWORD = 1458;\n-pub const ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION: DWORD = 1459;\n-pub const ERROR_TIMEOUT: DWORD = 1460;\n-pub const ERROR_INVALID_MONITOR_HANDLE: DWORD = 1461;\n-pub const ERROR_INCORRECT_SIZE: DWORD = 1462;\n-pub const ERROR_SYMLINK_CLASS_DISABLED: DWORD = 1463;\n-pub const ERROR_SYMLINK_NOT_SUPPORTED: DWORD = 1464;\n-pub const ERROR_XML_PARSE_ERROR: DWORD = 1465;\n-pub const ERROR_XMLDSIG_ERROR: DWORD = 1466;\n-pub const ERROR_RESTART_APPLICATION: DWORD = 1467;\n-pub const ERROR_WRONG_COMPARTMENT: DWORD = 1468;\n-pub const ERROR_AUTHIP_FAILURE: DWORD = 1469;\n-pub const ERROR_NO_NVRAM_RESOURCES: DWORD = 1470;\n-pub const ERROR_NOT_GUI_PROCESS: DWORD = 1471;\n-pub const ERROR_EVENTLOG_FILE_CORRUPT: DWORD = 1500;\n-pub const ERROR_EVENTLOG_CANT_START: DWORD = 1501;\n-pub const ERROR_LOG_FILE_FULL: DWORD = 1502;\n-pub const ERROR_EVENTLOG_FILE_CHANGED: DWORD = 1503;\n-pub const ERROR_INSTALL_SERVICE_FAILURE: DWORD = 1601;\n-pub const ERROR_INSTALL_USEREXIT: DWORD = 1602;\n-pub const ERROR_INSTALL_FAILURE: DWORD = 1603;\n-pub const ERROR_INSTALL_SUSPEND: DWORD = 1604;\n-pub const ERROR_UNKNOWN_PRODUCT: DWORD = 1605;\n-pub const ERROR_UNKNOWN_FEATURE: DWORD = 1606;\n-pub const ERROR_UNKNOWN_COMPONENT: DWORD = 1607;\n-pub const ERROR_UNKNOWN_PROPERTY: DWORD = 1608;\n-pub const ERROR_INVALID_HANDLE_STATE: DWORD = 1609;\n-pub const ERROR_BAD_CONFIGURATION: DWORD = 1610;\n-pub const ERROR_INDEX_ABSENT: DWORD = 1611;\n-pub const ERROR_INSTALL_SOURCE_ABSENT: DWORD = 1612;\n-pub const ERROR_INSTALL_PACKAGE_VERSION: DWORD = 1613;\n-pub const ERROR_PRODUCT_UNINSTALLED: DWORD = 1614;\n-pub const ERROR_BAD_QUERY_SYNTAX: DWORD = 1615;\n-pub const ERROR_INVALID_FIELD: DWORD = 1616;\n-pub const ERROR_DEVICE_REMOVED: DWORD = 1617;\n-pub const ERROR_INSTALL_ALREADY_RUNNING: DWORD = 1618;\n-pub const ERROR_INSTALL_PACKAGE_OPEN_FAILED: DWORD = 1619;\n-pub const ERROR_INSTALL_PACKAGE_INVALID: DWORD = 1620;\n-pub const ERROR_INSTALL_UI_FAILURE: DWORD = 1621;\n-pub const ERROR_INSTALL_LOG_FAILURE: DWORD = 1622;\n-pub const ERROR_INSTALL_LANGUAGE_UNSUPPORTED: DWORD = 1623;\n-pub const ERROR_INSTALL_TRANSFORM_FAILURE: DWORD = 1624;\n-pub const ERROR_INSTALL_PACKAGE_REJECTED: DWORD = 1625;\n-pub const ERROR_FUNCTION_NOT_CALLED: DWORD = 1626;\n-pub const ERROR_FUNCTION_FAILED: DWORD = 1627;\n-pub const ERROR_INVALID_TABLE: DWORD = 1628;\n-pub const ERROR_DATATYPE_MISMATCH: DWORD = 1629;\n-pub const ERROR_UNSUPPORTED_TYPE: DWORD = 1630;\n-pub const ERROR_CREATE_FAILED: DWORD = 1631;\n-pub const ERROR_INSTALL_TEMP_UNWRITABLE: DWORD = 1632;\n-pub const ERROR_INSTALL_PLATFORM_UNSUPPORTED: DWORD = 1633;\n-pub const ERROR_INSTALL_NOTUSED: DWORD = 1634;\n-pub const ERROR_PATCH_PACKAGE_OPEN_FAILED: DWORD = 1635;\n-pub const ERROR_PATCH_PACKAGE_INVALID: DWORD = 1636;\n-pub const ERROR_PATCH_PACKAGE_UNSUPPORTED: DWORD = 1637;\n-pub const ERROR_PRODUCT_VERSION: DWORD = 1638;\n-pub const ERROR_INVALID_COMMAND_LINE: DWORD = 1639;\n-pub const ERROR_INSTALL_REMOTE_DISALLOWED: DWORD = 1640;\n-pub const ERROR_SUCCESS_REBOOT_INITIATED: DWORD = 1641;\n-pub const ERROR_PATCH_TARGET_NOT_FOUND: DWORD = 1642;\n-pub const ERROR_PATCH_PACKAGE_REJECTED: DWORD = 1643;\n-pub const ERROR_INSTALL_TRANSFORM_REJECTED: DWORD = 1644;\n-pub const ERROR_INSTALL_REMOTE_PROHIBITED: DWORD = 1645;\n-pub const ERROR_INVALID_USER_BUFFER: DWORD = 1784;\n-pub const ERROR_UNRECOGNIZED_MEDIA: DWORD = 1785;\n-pub const ERROR_NO_TRUST_LSA_SECRET: DWORD = 1786;\n-pub const ERROR_NO_TRUST_SAM_ACCOUNT: DWORD = 1787;\n-pub const ERROR_TRUSTED_DOMAIN_FAILURE: DWORD = 1788;\n-pub const ERROR_TRUSTED_RELATIONSHIP_FAILURE: DWORD = 1789;\n-pub const ERROR_TRUST_FAILURE: DWORD = 1790;\n-pub const ERROR_NETLOGON_NOT_STARTED: DWORD = 1792;\n-pub const ERROR_ACCOUNT_EXPIRED: DWORD = 1793;\n-pub const ERROR_REDIRECTOR_HAS_OPEN_HANDLES: DWORD = 1794;\n-pub const ERROR_PRINTER_DRIVER_ALREADY_INSTALLED: DWORD = 1795;\n-pub const ERROR_UNKNOWN_PORT: DWORD = 1796;\n-pub const ERROR_UNKNOWN_PRINTER_DRIVER: DWORD = 1797;\n-pub const ERROR_UNKNOWN_PRINTPROCESSOR: DWORD = 1798;\n-pub const ERROR_INVALID_SEPARATOR_FILE: DWORD = 1799;\n-pub const ERROR_INVALID_PRIORITY: DWORD = 1800;\n-pub const ERROR_INVALID_PRINTER_NAME: DWORD = 1801;\n-pub const ERROR_PRINTER_ALREADY_EXISTS: DWORD = 1802;\n-pub const ERROR_INVALID_PRINTER_COMMAND: DWORD = 1803;\n-pub const ERROR_INVALID_DATATYPE: DWORD = 1804;\n-pub const ERROR_INVALID_ENVIRONMENT: DWORD = 1805;\n-pub const ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT: DWORD = 1807;\n-pub const ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT: DWORD = 1808;\n-pub const ERROR_NOLOGON_SERVER_TRUST_ACCOUNT: DWORD = 1809;\n-pub const ERROR_DOMAIN_TRUST_INCONSISTENT: DWORD = 1810;\n-pub const ERROR_SERVER_HAS_OPEN_HANDLES: DWORD = 1811;\n-pub const ERROR_RESOURCE_DATA_NOT_FOUND: DWORD = 1812;\n-pub const ERROR_RESOURCE_TYPE_NOT_FOUND: DWORD = 1813;\n-pub const ERROR_RESOURCE_NAME_NOT_FOUND: DWORD = 1814;\n-pub const ERROR_RESOURCE_LANG_NOT_FOUND: DWORD = 1815;\n-pub const ERROR_NOT_ENOUGH_QUOTA: DWORD = 1816;\n-pub const ERROR_INVALID_TIME: DWORD = 1901;\n-pub const ERROR_INVALID_FORM_NAME: DWORD = 1902;\n-pub const ERROR_INVALID_FORM_SIZE: DWORD = 1903;\n-pub const ERROR_ALREADY_WAITING: DWORD = 1904;\n-pub const ERROR_PRINTER_DELETED: DWORD = 1905;\n-pub const ERROR_INVALID_PRINTER_STATE: DWORD = 1906;\n-pub const ERROR_PASSWORD_MUST_CHANGE: DWORD = 1907;\n-pub const ERROR_DOMAIN_CONTROLLER_NOT_FOUND: DWORD = 1908;\n-pub const ERROR_ACCOUNT_LOCKED_OUT: DWORD = 1909;\n-pub const ERROR_NO_SITENAME: DWORD = 1919;\n-pub const ERROR_CANT_ACCESS_FILE: DWORD = 1920;\n-pub const ERROR_CANT_RESOLVE_FILENAME: DWORD = 1921;\n-pub const ERROR_KM_DRIVER_BLOCKED: DWORD = 1930;\n-pub const ERROR_CONTEXT_EXPIRED: DWORD = 1931;\n-pub const ERROR_PER_USER_TRUST_QUOTA_EXCEEDED: DWORD = 1932;\n-pub const ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED: DWORD = 1933;\n-pub const ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED: DWORD = 1934;\n-pub const ERROR_AUTHENTICATION_FIREWALL_FAILED: DWORD = 1935;\n-pub const ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED: DWORD = 1936;\n-pub const ERROR_INVALID_PIXEL_FORMAT: DWORD = 2000;\n-pub const ERROR_BAD_DRIVER: DWORD = 2001;\n-pub const ERROR_INVALID_WINDOW_STYLE: DWORD = 2002;\n-pub const ERROR_METAFILE_NOT_SUPPORTED: DWORD = 2003;\n-pub const ERROR_TRANSFORM_NOT_SUPPORTED: DWORD = 2004;\n-pub const ERROR_CLIPPING_NOT_SUPPORTED: DWORD = 2005;\n-pub const ERROR_INVALID_CMM: DWORD = 2010;\n-pub const ERROR_INVALID_PROFILE: DWORD = 2011;\n-pub const ERROR_TAG_NOT_FOUND: DWORD = 2012;\n-pub const ERROR_TAG_NOT_PRESENT: DWORD = 2013;\n-pub const ERROR_DUPLICATE_TAG: DWORD = 2014;\n-pub const ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE: DWORD = 2015;\n-pub const ERROR_PROFILE_NOT_FOUND: DWORD = 2016;\n-pub const ERROR_INVALID_COLORSPACE: DWORD = 2017;\n-pub const ERROR_ICM_NOT_ENABLED: DWORD = 2018;\n-pub const ERROR_DELETING_ICM_XFORM: DWORD = 2019;\n-pub const ERROR_INVALID_TRANSFORM: DWORD = 2020;\n-pub const ERROR_COLORSPACE_MISMATCH: DWORD = 2021;\n-pub const ERROR_INVALID_COLORINDEX: DWORD = 2022;\n-pub const ERROR_CONNECTED_OTHER_PASSWORD: DWORD = 2108;\n-pub const ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT: DWORD = 2109;\n-pub const ERROR_BAD_USERNAME: DWORD = 2202;\n-pub const ERROR_NOT_CONNECTED: DWORD = 2250;\n-pub const ERROR_OPEN_FILES: DWORD = 2401;\n-pub const ERROR_ACTIVE_CONNECTIONS: DWORD = 2402;\n-pub const ERROR_DEVICE_IN_USE: DWORD = 2404;\n-pub const ERROR_UNKNOWN_PRINT_MONITOR: DWORD = 3000;\n-pub const ERROR_PRINTER_DRIVER_IN_USE: DWORD = 3001;\n-pub const ERROR_SPOOL_FILE_NOT_FOUND: DWORD = 3002;\n-pub const ERROR_SPL_NO_STARTDOC: DWORD = 3003;\n-pub const ERROR_SPL_NO_ADDJOB: DWORD = 3004;\n-pub const ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED: DWORD = 3005;\n-pub const ERROR_PRINT_MONITOR_ALREADY_INSTALLED: DWORD = 3006;\n-pub const ERROR_INVALID_PRINT_MONITOR: DWORD = 3007;\n-pub const ERROR_PRINT_MONITOR_IN_USE: DWORD = 3008;\n-pub const ERROR_PRINTER_HAS_JOBS_QUEUED: DWORD = 3009;\n-pub const ERROR_SUCCESS_REBOOT_REQUIRED: DWORD = 3010;\n-pub const ERROR_SUCCESS_RESTART_REQUIRED: DWORD = 3011;\n-pub const ERROR_PRINTER_NOT_FOUND: DWORD = 3012;\n-pub const ERROR_PRINTER_DRIVER_WARNED: DWORD = 3013;\n-pub const ERROR_PRINTER_DRIVER_BLOCKED: DWORD = 3014;\n-pub const ERROR_WINS_INTERNAL: DWORD = 4000;\n-pub const ERROR_CAN_NOT_DEL_LOCAL_WINS: DWORD = 4001;\n-pub const ERROR_STATIC_INIT: DWORD = 4002;\n-pub const ERROR_INC_BACKUP: DWORD = 4003;\n-pub const ERROR_FULL_BACKUP: DWORD = 4004;\n-pub const ERROR_REC_NON_EXISTENT: DWORD = 4005;\n-pub const ERROR_RPL_NOT_ALLOWED: DWORD = 4006;\n-pub const ERROR_DHCP_ADDRESS_CONFLICT: DWORD = 4100;\n-pub const ERROR_WMI_GUID_NOT_FOUND: DWORD = 4200;\n-pub const ERROR_WMI_INSTANCE_NOT_FOUND: DWORD = 4201;\n-pub const ERROR_WMI_ITEMID_NOT_FOUND: DWORD = 4202;\n-pub const ERROR_WMI_TRY_AGAIN: DWORD = 4203;\n-pub const ERROR_WMI_DP_NOT_FOUND: DWORD = 4204;\n-pub const ERROR_WMI_UNRESOLVED_INSTANCE_REF: DWORD = 4205;\n-pub const ERROR_WMI_ALREADY_ENABLED: DWORD = 4206;\n-pub const ERROR_WMI_GUID_DISCONNECTED: DWORD = 4207;\n-pub const ERROR_WMI_SERVER_UNAVAILABLE: DWORD = 4208;\n-pub const ERROR_WMI_DP_FAILED: DWORD = 4209;\n-pub const ERROR_WMI_INVALID_MOF: DWORD = 4210;\n-pub const ERROR_WMI_INVALID_REGINFO: DWORD = 4211;\n-pub const ERROR_WMI_ALREADY_DISABLED: DWORD = 4212;\n-pub const ERROR_WMI_READ_ONLY: DWORD = 4213;\n-pub const ERROR_WMI_SET_FAILURE: DWORD = 4214;\n-pub const ERROR_INVALID_MEDIA: DWORD = 4300;\n-pub const ERROR_INVALID_LIBRARY: DWORD = 4301;\n-pub const ERROR_INVALID_MEDIA_POOL: DWORD = 4302;\n-pub const ERROR_DRIVE_MEDIA_MISMATCH: DWORD = 4303;\n-pub const ERROR_MEDIA_OFFLINE: DWORD = 4304;\n-pub const ERROR_LIBRARY_OFFLINE: DWORD = 4305;\n-pub const ERROR_EMPTY: DWORD = 4306;\n-pub const ERROR_NOT_EMPTY: DWORD = 4307;\n-pub const ERROR_MEDIA_UNAVAILABLE: DWORD = 4308;\n-pub const ERROR_RESOURCE_DISABLED: DWORD = 4309;\n-pub const ERROR_INVALID_CLEANER: DWORD = 4310;\n-pub const ERROR_UNABLE_TO_CLEAN: DWORD = 4311;\n-pub const ERROR_OBJECT_NOT_FOUND: DWORD = 4312;\n-pub const ERROR_DATABASE_FAILURE: DWORD = 4313;\n-pub const ERROR_DATABASE_FULL: DWORD = 4314;\n-pub const ERROR_MEDIA_INCOMPATIBLE: DWORD = 4315;\n-pub const ERROR_RESOURCE_NOT_PRESENT: DWORD = 4316;\n-pub const ERROR_INVALID_OPERATION: DWORD = 4317;\n-pub const ERROR_MEDIA_NOT_AVAILABLE: DWORD = 4318;\n-pub const ERROR_DEVICE_NOT_AVAILABLE: DWORD = 4319;\n-pub const ERROR_REQUEST_REFUSED: DWORD = 4320;\n-pub const ERROR_INVALID_DRIVE_OBJECT: DWORD = 4321;\n-pub const ERROR_LIBRARY_FULL: DWORD = 4322;\n-pub const ERROR_MEDIUM_NOT_ACCESSIBLE: DWORD = 4323;\n-pub const ERROR_UNABLE_TO_LOAD_MEDIUM: DWORD = 4324;\n-pub const ERROR_UNABLE_TO_INVENTORY_DRIVE: DWORD = 4325;\n-pub const ERROR_UNABLE_TO_INVENTORY_SLOT: DWORD = 4326;\n-pub const ERROR_UNABLE_TO_INVENTORY_TRANSPORT: DWORD = 4327;\n-pub const ERROR_TRANSPORT_FULL: DWORD = 4328;\n-pub const ERROR_CONTROLLING_IEPORT: DWORD = 4329;\n-pub const ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA: DWORD = 4330;\n-pub const ERROR_CLEANER_SLOT_SET: DWORD = 4331;\n-pub const ERROR_CLEANER_SLOT_NOT_SET: DWORD = 4332;\n-pub const ERROR_CLEANER_CARTRIDGE_SPENT: DWORD = 4333;\n-pub const ERROR_UNEXPECTED_OMID: DWORD = 4334;\n-pub const ERROR_CANT_DELETE_LAST_ITEM: DWORD = 4335;\n-pub const ERROR_MESSAGE_EXCEEDS_MAX_SIZE: DWORD = 4336;\n-pub const ERROR_VOLUME_CONTAINS_SYS_FILES: DWORD = 4337;\n-pub const ERROR_INDIGENOUS_TYPE: DWORD = 4338;\n-pub const ERROR_NO_SUPPORTING_DRIVES: DWORD = 4339;\n-pub const ERROR_CLEANER_CARTRIDGE_INSTALLED: DWORD = 4340;\n-pub const ERROR_IEPORT_FULL: DWORD = 4341;\n-pub const ERROR_FILE_OFFLINE: DWORD = 4350;\n-pub const ERROR_REMOTE_STORAGE_NOT_ACTIVE: DWORD = 4351;\n-pub const ERROR_REMOTE_STORAGE_MEDIA_ERROR: DWORD = 4352;\n-pub const ERROR_NOT_A_REPARSE_POINT: DWORD = 4390;\n-pub const ERROR_REPARSE_ATTRIBUTE_CONFLICT: DWORD = 4391;\n-pub const ERROR_INVALID_REPARSE_DATA: DWORD = 4392;\n-pub const ERROR_REPARSE_TAG_INVALID: DWORD = 4393;\n-pub const ERROR_REPARSE_TAG_MISMATCH: DWORD = 4394;\n-pub const ERROR_VOLUME_NOT_SIS_ENABLED: DWORD = 4500;\n-pub const ERROR_DEPENDENT_RESOURCE_EXISTS: DWORD = 5001;\n-pub const ERROR_DEPENDENCY_NOT_FOUND: DWORD = 5002;\n-pub const ERROR_DEPENDENCY_ALREADY_EXISTS: DWORD = 5003;\n-pub const ERROR_RESOURCE_NOT_ONLINE: DWORD = 5004;\n-pub const ERROR_HOST_NODE_NOT_AVAILABLE: DWORD = 5005;\n-pub const ERROR_RESOURCE_NOT_AVAILABLE: DWORD = 5006;\n-pub const ERROR_RESOURCE_NOT_FOUND: DWORD = 5007;\n-pub const ERROR_SHUTDOWN_CLUSTER: DWORD = 5008;\n-pub const ERROR_CANT_EVICT_ACTIVE_NODE: DWORD = 5009;\n-pub const ERROR_OBJECT_ALREADY_EXISTS: DWORD = 5010;\n-pub const ERROR_OBJECT_IN_LIST: DWORD = 5011;\n-pub const ERROR_GROUP_NOT_AVAILABLE: DWORD = 5012;\n-pub const ERROR_GROUP_NOT_FOUND: DWORD = 5013;\n-pub const ERROR_GROUP_NOT_ONLINE: DWORD = 5014;\n-pub const ERROR_HOST_NODE_NOT_RESOURCE_OWNER: DWORD = 5015;\n-pub const ERROR_HOST_NODE_NOT_GROUP_OWNER: DWORD = 5016;\n-pub const ERROR_RESMON_CREATE_FAILED: DWORD = 5017;\n-pub const ERROR_RESMON_ONLINE_FAILED: DWORD = 5018;\n-pub const ERROR_RESOURCE_ONLINE: DWORD = 5019;\n-pub const ERROR_QUORUM_RESOURCE: DWORD = 5020;\n-pub const ERROR_NOT_QUORUM_CAPABLE: DWORD = 5021;\n-pub const ERROR_CLUSTER_SHUTTING_DOWN: DWORD = 5022;\n-pub const ERROR_INVALID_STATE: DWORD = 5023;\n-pub const ERROR_RESOURCE_PROPERTIES_STORED: DWORD = 5024;\n-pub const ERROR_NOT_QUORUM_CLASS: DWORD = 5025;\n-pub const ERROR_CORE_RESOURCE: DWORD = 5026;\n-pub const ERROR_QUORUM_RESOURCE_ONLINE_FAILED: DWORD = 5027;\n-pub const ERROR_QUORUMLOG_OPEN_FAILED: DWORD = 5028;\n-pub const ERROR_CLUSTERLOG_CORRUPT: DWORD = 5029;\n-pub const ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE: DWORD = 5030;\n-pub const ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE: DWORD = 5031;\n-pub const ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND: DWORD = 5032;\n-pub const ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE: DWORD = 5033;\n-pub const ERROR_QUORUM_OWNER_ALIVE: DWORD = 5034;\n-pub const ERROR_NETWORK_NOT_AVAILABLE: DWORD = 5035;\n-pub const ERROR_NODE_NOT_AVAILABLE: DWORD = 5036;\n-pub const ERROR_ALL_NODES_NOT_AVAILABLE: DWORD = 5037;\n-pub const ERROR_RESOURCE_FAILED: DWORD = 5038;\n-pub const ERROR_CLUSTER_INVALID_NODE: DWORD = 5039;\n-pub const ERROR_CLUSTER_NODE_EXISTS: DWORD = 5040;\n-pub const ERROR_CLUSTER_JOIN_IN_PROGRESS: DWORD = 5041;\n-pub const ERROR_CLUSTER_NODE_NOT_FOUND: DWORD = 5042;\n-pub const ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND: DWORD = 5043;\n-pub const ERROR_CLUSTER_NETWORK_EXISTS: DWORD = 5044;\n-pub const ERROR_CLUSTER_NETWORK_NOT_FOUND: DWORD = 5045;\n-pub const ERROR_CLUSTER_NETINTERFACE_EXISTS: DWORD = 5046;\n-pub const ERROR_CLUSTER_NETINTERFACE_NOT_FOUND: DWORD = 5047;\n-pub const ERROR_CLUSTER_INVALID_REQUEST: DWORD = 5048;\n-pub const ERROR_CLUSTER_INVALID_NETWORK_PROVIDER: DWORD = 5049;\n-pub const ERROR_CLUSTER_NODE_DOWN: DWORD = 5050;\n-pub const ERROR_CLUSTER_NODE_UNREACHABLE: DWORD = 5051;\n-pub const ERROR_CLUSTER_NODE_NOT_MEMBER: DWORD = 5052;\n-pub const ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS: DWORD = 5053;\n-pub const ERROR_CLUSTER_INVALID_NETWORK: DWORD = 5054;\n-pub const ERROR_CLUSTER_NODE_UP: DWORD = 5056;\n-pub const ERROR_CLUSTER_IPADDR_IN_USE: DWORD = 5057;\n-pub const ERROR_CLUSTER_NODE_NOT_PAUSED: DWORD = 5058;\n-pub const ERROR_CLUSTER_NO_SECURITY_CONTEXT: DWORD = 5059;\n-pub const ERROR_CLUSTER_NETWORK_NOT_INTERNAL: DWORD = 5060;\n-pub const ERROR_CLUSTER_NODE_ALREADY_UP: DWORD = 5061;\n-pub const ERROR_CLUSTER_NODE_ALREADY_DOWN: DWORD = 5062;\n-pub const ERROR_CLUSTER_NETWORK_ALREADY_ONLINE: DWORD = 5063;\n-pub const ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE: DWORD = 5064;\n-pub const ERROR_CLUSTER_NODE_ALREADY_MEMBER: DWORD = 5065;\n-pub const ERROR_CLUSTER_LAST_INTERNAL_NETWORK: DWORD = 5066;\n-pub const ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS: DWORD = 5067;\n-pub const ERROR_INVALID_OPERATION_ON_QUORUM: DWORD = 5068;\n-pub const ERROR_DEPENDENCY_NOT_ALLOWED: DWORD = 5069;\n-pub const ERROR_CLUSTER_NODE_PAUSED: DWORD = 5070;\n-pub const ERROR_NODE_CANT_HOST_RESOURCE: DWORD = 5071;\n-pub const ERROR_CLUSTER_NODE_NOT_READY: DWORD = 5072;\n-pub const ERROR_CLUSTER_NODE_SHUTTING_DOWN: DWORD = 5073;\n-pub const ERROR_CLUSTER_JOIN_ABORTED: DWORD = 5074;\n-pub const ERROR_CLUSTER_INCOMPATIBLE_VERSIONS: DWORD = 5075;\n-pub const ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED: DWORD = 5076;\n-pub const ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED: DWORD = 5077;\n-pub const ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND: DWORD = 5078;\n-pub const ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED: DWORD = 5079;\n-pub const ERROR_CLUSTER_RESNAME_NOT_FOUND: DWORD = 5080;\n-pub const ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED: DWORD = 5081;\n-pub const ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST: DWORD = 5082;\n-pub const ERROR_CLUSTER_DATABASE_SEQMISMATCH: DWORD = 5083;\n-pub const ERROR_RESMON_INVALID_STATE: DWORD = 5084;\n-pub const ERROR_CLUSTER_GUM_NOT_LOCKER: DWORD = 5085;\n-pub const ERROR_QUORUM_DISK_NOT_FOUND: DWORD = 5086;\n-pub const ERROR_DATABASE_BACKUP_CORRUPT: DWORD = 5087;\n-pub const ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT: DWORD = 5088;\n-pub const ERROR_RESOURCE_PROPERTY_UNCHANGEABLE: DWORD = 5089;\n-pub const ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE: DWORD = 5890;\n-pub const ERROR_CLUSTER_QUORUMLOG_NOT_FOUND: DWORD = 5891;\n-pub const ERROR_CLUSTER_MEMBERSHIP_HALT: DWORD = 5892;\n-pub const ERROR_CLUSTER_INSTANCE_ID_MISMATCH: DWORD = 5893;\n-pub const ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP: DWORD = 5894;\n-pub const ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH: DWORD = 5895;\n-pub const ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP: DWORD = 5896;\n-pub const ERROR_CLUSTER_PARAMETER_MISMATCH: DWORD = 5897;\n-pub const ERROR_NODE_CANNOT_BE_CLUSTERED: DWORD = 5898;\n-pub const ERROR_CLUSTER_WRONG_OS_VERSION: DWORD = 5899;\n-pub const ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME: DWORD = 5900;\n-pub const ERROR_CLUSCFG_ALREADY_COMMITTED: DWORD = 5901;\n-pub const ERROR_CLUSCFG_ROLLBACK_FAILED: DWORD = 5902;\n-pub const ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT: DWORD = 5903;\n-pub const ERROR_CLUSTER_OLD_VERSION: DWORD = 5904;\n-pub const ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME: DWORD = 5905;\n-pub const ERROR_ENCRYPTION_FAILED: DWORD = 6000;\n-pub const ERROR_DECRYPTION_FAILED: DWORD = 6001;\n-pub const ERROR_FILE_ENCRYPTED: DWORD = 6002;\n-pub const ERROR_NO_RECOVERY_POLICY: DWORD = 6003;\n-pub const ERROR_NO_EFS: DWORD = 6004;\n-pub const ERROR_WRONG_EFS: DWORD = 6005;\n-pub const ERROR_NO_USER_KEYS: DWORD = 6006;\n-pub const ERROR_FILE_NOT_ENCRYPTED: DWORD = 6007;\n-pub const ERROR_NOT_EXPORT_FORMAT: DWORD = 6008;\n-pub const ERROR_FILE_READ_ONLY: DWORD = 6009;\n-pub const ERROR_DIR_EFS_DISALLOWED: DWORD = 6010;\n-pub const ERROR_EFS_SERVER_NOT_TRUSTED: DWORD = 6011;\n-pub const ERROR_BAD_RECOVERY_POLICY: DWORD = 6012;\n-pub const ERROR_EFS_ALG_BLOB_TOO_BIG: DWORD = 6013;\n-pub const ERROR_VOLUME_NOT_SUPPORT_EFS: DWORD = 6014;\n-pub const ERROR_EFS_DISABLED: DWORD = 6015;\n-pub const ERROR_EFS_VERSION_NOT_SUPPORT: DWORD = 6016;\n-pub const ERROR_NO_BROWSER_SERVERS_FOUND: DWORD = 6118;\n-pub const ERROR_CTX_WINSTATION_NAME_INVALID: DWORD = 7001;\n-pub const ERROR_CTX_INVALID_PD: DWORD = 7002;\n-pub const ERROR_CTX_PD_NOT_FOUND: DWORD = 7003;\n-pub const ERROR_CTX_WD_NOT_FOUND: DWORD = 7004;\n-pub const ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY: DWORD = 7005;\n-pub const ERROR_CTX_SERVICE_NAME_COLLISION: DWORD = 7006;\n-pub const ERROR_CTX_CLOSE_PENDING: DWORD = 7007;\n-pub const ERROR_CTX_NO_OUTBUF: DWORD = 7008;\n-pub const ERROR_CTX_MODEM_INF_NOT_FOUND: DWORD = 7009;\n-pub const ERROR_CTX_INVALID_MODEMNAME: DWORD = 7010;\n-pub const ERROR_CTX_MODEM_RESPONSE_ERROR: DWORD = 7011;\n-pub const ERROR_CTX_MODEM_RESPONSE_TIMEOUT: DWORD = 7012;\n-pub const ERROR_CTX_MODEM_RESPONSE_NO_CARRIER: DWORD = 7013;\n-pub const ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE: DWORD = 7014;\n-pub const ERROR_CTX_MODEM_RESPONSE_BUSY: DWORD = 7015;\n-pub const ERROR_CTX_MODEM_RESPONSE_VOICE: DWORD = 7016;\n-pub const ERROR_CTX_TD_ERROR: DWORD = 7017;\n-pub const ERROR_CTX_WINSTATION_NOT_FOUND: DWORD = 7022;\n-pub const ERROR_CTX_WINSTATION_ALREADY_EXISTS: DWORD = 7023;\n-pub const ERROR_CTX_WINSTATION_BUSY: DWORD = 7024;\n-pub const ERROR_CTX_BAD_VIDEO_MODE: DWORD = 7025;\n-pub const ERROR_CTX_GRAPHICS_INVALID: DWORD = 7035;\n-pub const ERROR_CTX_LOGON_DISABLED: DWORD = 7037;\n-pub const ERROR_CTX_NOT_CONSOLE: DWORD = 7038;\n-pub const ERROR_CTX_CLIENT_QUERY_TIMEOUT: DWORD = 7040;\n-pub const ERROR_CTX_CONSOLE_DISCONNECT: DWORD = 7041;\n-pub const ERROR_CTX_CONSOLE_CONNECT: DWORD = 7042;\n-pub const ERROR_CTX_SHADOW_DENIED: DWORD = 7044;\n-pub const ERROR_CTX_WINSTATION_ACCESS_DENIED: DWORD = 7045;\n-pub const ERROR_CTX_INVALID_WD: DWORD = 7049;\n-pub const ERROR_CTX_SHADOW_INVALID: DWORD = 7050;\n-pub const ERROR_CTX_SHADOW_DISABLED: DWORD = 7051;\n-pub const ERROR_CTX_CLIENT_LICENSE_IN_USE: DWORD = 7052;\n-pub const ERROR_CTX_CLIENT_LICENSE_NOT_SET: DWORD = 7053;\n-pub const ERROR_CTX_LICENSE_NOT_AVAILABLE: DWORD = 7054;\n-pub const ERROR_CTX_LICENSE_CLIENT_INVALID: DWORD = 7055;\n-pub const ERROR_CTX_LICENSE_EXPIRED: DWORD = 7056;\n-pub const ERROR_CTX_SHADOW_NOT_RUNNING: DWORD = 7057;\n-pub const ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE: DWORD = 7058;\n-pub const ERROR_ACTIVATION_COUNT_EXCEEDED: DWORD = 7059;\n-pub const ERROR_DS_NOT_INSTALLED: DWORD = 8200;\n-pub const ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY: DWORD = 8201;\n-pub const ERROR_DS_NO_ATTRIBUTE_OR_VALUE: DWORD = 8202;\n-pub const ERROR_DS_INVALID_ATTRIBUTE_SYNTAX: DWORD = 8203;\n-pub const ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED: DWORD = 8204;\n-pub const ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS: DWORD = 8205;\n-pub const ERROR_DS_BUSY: DWORD = 8206;\n-pub const ERROR_DS_UNAVAILABLE: DWORD = 8207;\n-pub const ERROR_DS_NO_RIDS_ALLOCATED: DWORD = 8208;\n-pub const ERROR_DS_NO_MORE_RIDS: DWORD = 8209;\n-pub const ERROR_DS_INCORRECT_ROLE_OWNER: DWORD = 8210;\n-pub const ERROR_DS_RIDMGR_INIT_ERROR: DWORD = 8211;\n-pub const ERROR_DS_OBJ_CLASS_VIOLATION: DWORD = 8212;\n-pub const ERROR_DS_CANT_ON_NON_LEAF: DWORD = 8213;\n-pub const ERROR_DS_CANT_ON_RDN: DWORD = 8214;\n-pub const ERROR_DS_CANT_MOD_OBJ_CLASS: DWORD = 8215;\n-pub const ERROR_DS_CROSS_DOM_MOVE_ERROR: DWORD = 8216;\n-pub const ERROR_DS_GC_NOT_AVAILABLE: DWORD = 8217;\n-pub const ERROR_SHARED_POLICY: DWORD = 8218;\n-pub const ERROR_POLICY_OBJECT_NOT_FOUND: DWORD = 8219;\n-pub const ERROR_POLICY_ONLY_IN_DS: DWORD = 8220;\n-pub const ERROR_PROMOTION_ACTIVE: DWORD = 8221;\n-pub const ERROR_NO_PROMOTION_ACTIVE: DWORD = 8222;\n-pub const ERROR_DS_OPERATIONS_ERROR: DWORD = 8224;\n-pub const ERROR_DS_PROTOCOL_ERROR: DWORD = 8225;\n-pub const ERROR_DS_TIMELIMIT_EXCEEDED: DWORD = 8226;\n-pub const ERROR_DS_SIZELIMIT_EXCEEDED: DWORD = 8227;\n-pub const ERROR_DS_ADMIN_LIMIT_EXCEEDED: DWORD = 8228;\n-pub const ERROR_DS_COMPARE_FALSE: DWORD = 8229;\n-pub const ERROR_DS_COMPARE_TRUE: DWORD = 8230;\n-pub const ERROR_DS_AUTH_METHOD_NOT_SUPPORTED: DWORD = 8231;\n-pub const ERROR_DS_STRONG_AUTH_REQUIRED: DWORD = 8232;\n-pub const ERROR_DS_INAPPROPRIATE_AUTH: DWORD = 8233;\n-pub const ERROR_DS_AUTH_UNKNOWN: DWORD = 8234;\n-pub const ERROR_DS_REFERRAL: DWORD = 8235;\n-pub const ERROR_DS_UNAVAILABLE_CRIT_EXTENSION: DWORD = 8236;\n-pub const ERROR_DS_CONFIDENTIALITY_REQUIRED: DWORD = 8237;\n-pub const ERROR_DS_INAPPROPRIATE_MATCHING: DWORD = 8238;\n-pub const ERROR_DS_CONSTRAINT_VIOLATION: DWORD = 8239;\n-pub const ERROR_DS_NO_SUCH_OBJECT: DWORD = 8240;\n-pub const ERROR_DS_ALIAS_PROBLEM: DWORD = 8241;\n-pub const ERROR_DS_INVALID_DN_SYNTAX: DWORD = 8242;\n-pub const ERROR_DS_IS_LEAF: DWORD = 8243;\n-pub const ERROR_DS_ALIAS_DEREF_PROBLEM: DWORD = 8244;\n-pub const ERROR_DS_UNWILLING_TO_PERFORM: DWORD = 8245;\n-pub const ERROR_DS_LOOP_DETECT: DWORD = 8246;\n-pub const ERROR_DS_NAMING_VIOLATION: DWORD = 8247;\n-pub const ERROR_DS_OBJECT_RESULTS_TOO_LARGE: DWORD = 8248;\n-pub const ERROR_DS_AFFECTS_MULTIPLE_DSAS: DWORD = 8249;\n-pub const ERROR_DS_SERVER_DOWN: DWORD = 8250;\n-pub const ERROR_DS_LOCAL_ERROR: DWORD = 8251;\n-pub const ERROR_DS_ENCODING_ERROR: DWORD = 8252;\n-pub const ERROR_DS_DECODING_ERROR: DWORD = 8253;\n-pub const ERROR_DS_FILTER_UNKNOWN: DWORD = 8254;\n-pub const ERROR_DS_PARAM_ERROR: DWORD = 8255;\n-pub const ERROR_DS_NOT_SUPPORTED: DWORD = 8256;\n-pub const ERROR_DS_NO_RESULTS_RETURNED: DWORD = 8257;\n-pub const ERROR_DS_CONTROL_NOT_FOUND: DWORD = 8258;\n-pub const ERROR_DS_CLIENT_LOOP: DWORD = 8259;\n-pub const ERROR_DS_REFERRAL_LIMIT_EXCEEDED: DWORD = 8260;\n-pub const ERROR_DS_SORT_CONTROL_MISSING: DWORD = 8261;\n-pub const ERROR_DS_OFFSET_RANGE_ERROR: DWORD = 8262;\n-pub const ERROR_DS_ROOT_MUST_BE_NC: DWORD = 8301;\n-pub const ERROR_DS_ADD_REPLICA_INHIBITED: DWORD = 8302;\n-pub const ERROR_DS_ATT_NOT_DEF_IN_SCHEMA: DWORD = 8303;\n-pub const ERROR_DS_MAX_OBJ_SIZE_EXCEEDED: DWORD = 8304;\n-pub const ERROR_DS_OBJ_STRING_NAME_EXISTS: DWORD = 8305;\n-pub const ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA: DWORD = 8306;\n-pub const ERROR_DS_RDN_DOESNT_MATCH_SCHEMA: DWORD = 8307;\n-pub const ERROR_DS_NO_REQUESTED_ATTS_FOUND: DWORD = 8308;\n-pub const ERROR_DS_USER_BUFFER_TO_SMALL: DWORD = 8309;\n-pub const ERROR_DS_ATT_IS_NOT_ON_OBJ: DWORD = 8310;\n-pub const ERROR_DS_ILLEGAL_MOD_OPERATION: DWORD = 8311;\n-pub const ERROR_DS_OBJ_TOO_LARGE: DWORD = 8312;\n-pub const ERROR_DS_BAD_INSTANCE_TYPE: DWORD = 8313;\n-pub const ERROR_DS_MASTERDSA_REQUIRED: DWORD = 8314;\n-pub const ERROR_DS_OBJECT_CLASS_REQUIRED: DWORD = 8315;\n-pub const ERROR_DS_MISSING_REQUIRED_ATT: DWORD = 8316;\n-pub const ERROR_DS_ATT_NOT_DEF_FOR_CLASS: DWORD = 8317;\n-pub const ERROR_DS_ATT_ALREADY_EXISTS: DWORD = 8318;\n-pub const ERROR_DS_CANT_ADD_ATT_VALUES: DWORD = 8320;\n-pub const ERROR_DS_SINGLE_VALUE_CONSTRAINT: DWORD = 8321;\n-pub const ERROR_DS_RANGE_CONSTRAINT: DWORD = 8322;\n-pub const ERROR_DS_ATT_VAL_ALREADY_EXISTS: DWORD = 8323;\n-pub const ERROR_DS_CANT_REM_MISSING_ATT: DWORD = 8324;\n-pub const ERROR_DS_CANT_REM_MISSING_ATT_VAL: DWORD = 8325;\n-pub const ERROR_DS_ROOT_CANT_BE_SUBREF: DWORD = 8326;\n-pub const ERROR_DS_NO_CHAINING: DWORD = 8327;\n-pub const ERROR_DS_NO_CHAINED_EVAL: DWORD = 8328;\n-pub const ERROR_DS_NO_PARENT_OBJECT: DWORD = 8329;\n-pub const ERROR_DS_PARENT_IS_AN_ALIAS: DWORD = 8330;\n-pub const ERROR_DS_CANT_MIX_MASTER_AND_REPS: DWORD = 8331;\n-pub const ERROR_DS_CHILDREN_EXIST: DWORD = 8332;\n-pub const ERROR_DS_OBJ_NOT_FOUND: DWORD = 8333;\n-pub const ERROR_DS_ALIASED_OBJ_MISSING: DWORD = 8334;\n-pub const ERROR_DS_BAD_NAME_SYNTAX: DWORD = 8335;\n-pub const ERROR_DS_ALIAS_POINTS_TO_ALIAS: DWORD = 8336;\n-pub const ERROR_DS_CANT_DEREF_ALIAS: DWORD = 8337;\n-pub const ERROR_DS_OUT_OF_SCOPE: DWORD = 8338;\n-pub const ERROR_DS_OBJECT_BEING_REMOVED: DWORD = 8339;\n-pub const ERROR_DS_CANT_DELETE_DSA_OBJ: DWORD = 8340;\n-pub const ERROR_DS_GENERIC_ERROR: DWORD = 8341;\n-pub const ERROR_DS_DSA_MUST_BE_INT_MASTER: DWORD = 8342;\n-pub const ERROR_DS_CLASS_NOT_DSA: DWORD = 8343;\n-pub const ERROR_DS_INSUFF_ACCESS_RIGHTS: DWORD = 8344;\n-pub const ERROR_DS_ILLEGAL_SUPERIOR: DWORD = 8345;\n-pub const ERROR_DS_ATTRIBUTE_OWNED_BY_SAM: DWORD = 8346;\n-pub const ERROR_DS_NAME_TOO_MANY_PARTS: DWORD = 8347;\n-pub const ERROR_DS_NAME_TOO_LONG: DWORD = 8348;\n-pub const ERROR_DS_NAME_VALUE_TOO_LONG: DWORD = 8349;\n-pub const ERROR_DS_NAME_UNPARSEABLE: DWORD = 8350;\n-pub const ERROR_DS_NAME_TYPE_UNKNOWN: DWORD = 8351;\n-pub const ERROR_DS_NOT_AN_OBJECT: DWORD = 8352;\n-pub const ERROR_DS_SEC_DESC_TOO_SHORT: DWORD = 8353;\n-pub const ERROR_DS_SEC_DESC_INVALID: DWORD = 8354;\n-pub const ERROR_DS_NO_DELETED_NAME: DWORD = 8355;\n-pub const ERROR_DS_SUBREF_MUST_HAVE_PARENT: DWORD = 8356;\n-pub const ERROR_DS_NCNAME_MUST_BE_NC: DWORD = 8357;\n-pub const ERROR_DS_CANT_ADD_SYSTEM_ONLY: DWORD = 8358;\n-pub const ERROR_DS_CLASS_MUST_BE_CONCRETE: DWORD = 8359;\n-pub const ERROR_DS_INVALID_DMD: DWORD = 8360;\n-pub const ERROR_DS_OBJ_GUID_EXISTS: DWORD = 8361;\n-pub const ERROR_DS_NOT_ON_BACKLINK: DWORD = 8362;\n-pub const ERROR_DS_NO_CROSSREF_FOR_NC: DWORD = 8363;\n-pub const ERROR_DS_SHUTTING_DOWN: DWORD = 8364;\n-pub const ERROR_DS_UNKNOWN_OPERATION: DWORD = 8365;\n-pub const ERROR_DS_INVALID_ROLE_OWNER: DWORD = 8366;\n-pub const ERROR_DS_COULDNT_CONTACT_FSMO: DWORD = 8367;\n-pub const ERROR_DS_CROSS_NC_DN_RENAME: DWORD = 8368;\n-pub const ERROR_DS_CANT_MOD_SYSTEM_ONLY: DWORD = 8369;\n-pub const ERROR_DS_REPLICATOR_ONLY: DWORD = 8370;\n-pub const ERROR_DS_OBJ_CLASS_NOT_DEFINED: DWORD = 8371;\n-pub const ERROR_DS_OBJ_CLASS_NOT_SUBCLASS: DWORD = 8372;\n-pub const ERROR_DS_NAME_REFERENCE_INVALID: DWORD = 8373;\n-pub const ERROR_DS_CROSS_REF_EXISTS: DWORD = 8374;\n-pub const ERROR_DS_CANT_DEL_MASTER_CROSSREF: DWORD = 8375;\n-pub const ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD: DWORD = 8376;\n-pub const ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX: DWORD = 8377;\n-pub const ERROR_DS_DUP_RDN: DWORD = 8378;\n-pub const ERROR_DS_DUP_OID: DWORD = 8379;\n-pub const ERROR_DS_DUP_MAPI_ID: DWORD = 8380;\n-pub const ERROR_DS_DUP_SCHEMA_ID_GUID: DWORD = 8381;\n-pub const ERROR_DS_DUP_LDAP_DISPLAY_NAME: DWORD = 8382;\n-pub const ERROR_DS_SEMANTIC_ATT_TEST: DWORD = 8383;\n-pub const ERROR_DS_SYNTAX_MISMATCH: DWORD = 8384;\n-pub const ERROR_DS_EXISTS_IN_MUST_HAVE: DWORD = 8385;\n-pub const ERROR_DS_EXISTS_IN_MAY_HAVE: DWORD = 8386;\n-pub const ERROR_DS_NONEXISTENT_MAY_HAVE: DWORD = 8387;\n-pub const ERROR_DS_NONEXISTENT_MUST_HAVE: DWORD = 8388;\n-pub const ERROR_DS_AUX_CLS_TEST_FAIL: DWORD = 8389;\n-pub const ERROR_DS_NONEXISTENT_POSS_SUP: DWORD = 8390;\n-pub const ERROR_DS_SUB_CLS_TEST_FAIL: DWORD = 8391;\n-pub const ERROR_DS_BAD_RDN_ATT_ID_SYNTAX: DWORD = 8392;\n-pub const ERROR_DS_EXISTS_IN_AUX_CLS: DWORD = 8393;\n-pub const ERROR_DS_EXISTS_IN_SUB_CLS: DWORD = 8394;\n-pub const ERROR_DS_EXISTS_IN_POSS_SUP: DWORD = 8395;\n-pub const ERROR_DS_RECALCSCHEMA_FAILED: DWORD = 8396;\n-pub const ERROR_DS_TREE_DELETE_NOT_FINISHED: DWORD = 8397;\n-pub const ERROR_DS_CANT_DELETE: DWORD = 8398;\n-pub const ERROR_DS_ATT_SCHEMA_REQ_ID: DWORD = 8399;\n-pub const ERROR_DS_BAD_ATT_SCHEMA_SYNTAX: DWORD = 8400;\n-pub const ERROR_DS_CANT_CACHE_ATT: DWORD = 8401;\n-pub const ERROR_DS_CANT_CACHE_CLASS: DWORD = 8402;\n-pub const ERROR_DS_CANT_REMOVE_ATT_CACHE: DWORD = 8403;\n-pub const ERROR_DS_CANT_REMOVE_CLASS_CACHE: DWORD = 8404;\n-pub const ERROR_DS_CANT_RETRIEVE_DN: DWORD = 8405;\n-pub const ERROR_DS_MISSING_SUPREF: DWORD = 8406;\n-pub const ERROR_DS_CANT_RETRIEVE_INSTANCE: DWORD = 8407;\n-pub const ERROR_DS_CODE_INCONSISTENCY: DWORD = 8408;\n-pub const ERROR_DS_DATABASE_ERROR: DWORD = 8409;\n-pub const ERROR_DS_GOVERNSID_MISSING: DWORD = 8410;\n-pub const ERROR_DS_MISSING_EXPECTED_ATT: DWORD = 8411;\n-pub const ERROR_DS_NCNAME_MISSING_CR_REF: DWORD = 8412;\n-pub const ERROR_DS_SECURITY_CHECKING_ERROR: DWORD = 8413;\n-pub const ERROR_DS_SCHEMA_NOT_LOADED: DWORD = 8414;\n-pub const ERROR_DS_SCHEMA_ALLOC_FAILED: DWORD = 8415;\n-pub const ERROR_DS_ATT_SCHEMA_REQ_SYNTAX: DWORD = 8416;\n-pub const ERROR_DS_GCVERIFY_ERROR: DWORD = 8417;\n-pub const ERROR_DS_DRA_SCHEMA_MISMATCH: DWORD = 8418;\n-pub const ERROR_DS_CANT_FIND_DSA_OBJ: DWORD = 8419;\n-pub const ERROR_DS_CANT_FIND_EXPECTED_NC: DWORD = 8420;\n-pub const ERROR_DS_CANT_FIND_NC_IN_CACHE: DWORD = 8421;\n-pub const ERROR_DS_CANT_RETRIEVE_CHILD: DWORD = 8422;\n-pub const ERROR_DS_SECURITY_ILLEGAL_MODIFY: DWORD = 8423;\n-pub const ERROR_DS_CANT_REPLACE_HIDDEN_REC: DWORD = 8424;\n-pub const ERROR_DS_BAD_HIERARCHY_FILE: DWORD = 8425;\n-pub const ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED: DWORD = 8426;\n-pub const ERROR_DS_CONFIG_PARAM_MISSING: DWORD = 8427;\n-pub const ERROR_DS_COUNTING_AB_INDICES_FAILED: DWORD = 8428;\n-pub const ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED: DWORD = 8429;\n-pub const ERROR_DS_INTERNAL_FAILURE: DWORD = 8430;\n-pub const ERROR_DS_UNKNOWN_ERROR: DWORD = 8431;\n-pub const ERROR_DS_ROOT_REQUIRES_CLASS_TOP: DWORD = 8432;\n-pub const ERROR_DS_REFUSING_FSMO_ROLES: DWORD = 8433;\n-pub const ERROR_DS_MISSING_FSMO_SETTINGS: DWORD = 8434;\n-pub const ERROR_DS_UNABLE_TO_SURRENDER_ROLES: DWORD = 8435;\n-pub const ERROR_DS_DRA_GENERIC: DWORD = 8436;\n-pub const ERROR_DS_DRA_INVALID_PARAMETER: DWORD = 8437;\n-pub const ERROR_DS_DRA_BUSY: DWORD = 8438;\n-pub const ERROR_DS_DRA_BAD_DN: DWORD = 8439;\n-pub const ERROR_DS_DRA_BAD_NC: DWORD = 8440;\n-pub const ERROR_DS_DRA_DN_EXISTS: DWORD = 8441;\n-pub const ERROR_DS_DRA_INTERNAL_ERROR: DWORD = 8442;\n-pub const ERROR_DS_DRA_INCONSISTENT_DIT: DWORD = 8443;\n-pub const ERROR_DS_DRA_CONNECTION_FAILED: DWORD = 8444;\n-pub const ERROR_DS_DRA_BAD_INSTANCE_TYPE: DWORD = 8445;\n-pub const ERROR_DS_DRA_OUT_OF_MEM: DWORD = 8446;\n-pub const ERROR_DS_DRA_MAIL_PROBLEM: DWORD = 8447;\n-pub const ERROR_DS_DRA_REF_ALREADY_EXISTS: DWORD = 8448;\n-pub const ERROR_DS_DRA_REF_NOT_FOUND: DWORD = 8449;\n-pub const ERROR_DS_DRA_OBJ_IS_REP_SOURCE: DWORD = 8450;\n-pub const ERROR_DS_DRA_DB_ERROR: DWORD = 8451;\n-pub const ERROR_DS_DRA_NO_REPLICA: DWORD = 8452;\n-pub const ERROR_DS_DRA_ACCESS_DENIED: DWORD = 8453;\n-pub const ERROR_DS_DRA_NOT_SUPPORTED: DWORD = 8454;\n-pub const ERROR_DS_DRA_RPC_CANCELLED: DWORD = 8455;\n-pub const ERROR_DS_DRA_SOURCE_DISABLED: DWORD = 8456;\n-pub const ERROR_DS_DRA_SINK_DISABLED: DWORD = 8457;\n-pub const ERROR_DS_DRA_NAME_COLLISION: DWORD = 8458;\n-pub const ERROR_DS_DRA_SOURCE_REINSTALLED: DWORD = 8459;\n-pub const ERROR_DS_DRA_MISSING_PARENT: DWORD = 8460;\n-pub const ERROR_DS_DRA_PREEMPTED: DWORD = 8461;\n-pub const ERROR_DS_DRA_ABANDON_SYNC: DWORD = 8462;\n-pub const ERROR_DS_DRA_SHUTDOWN: DWORD = 8463;\n-pub const ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET: DWORD = 8464;\n-pub const ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA: DWORD = 8465;\n-pub const ERROR_DS_DRA_EXTN_CONNECTION_FAILED: DWORD = 8466;\n-pub const ERROR_DS_INSTALL_SCHEMA_MISMATCH: DWORD = 8467;\n-pub const ERROR_DS_DUP_LINK_ID: DWORD = 8468;\n-pub const ERROR_DS_NAME_ERROR_RESOLVING: DWORD = 8469;\n-pub const ERROR_DS_NAME_ERROR_NOT_FOUND: DWORD = 8470;\n-pub const ERROR_DS_NAME_ERROR_NOT_UNIQUE: DWORD = 8471;\n-pub const ERROR_DS_NAME_ERROR_NO_MAPPING: DWORD = 8472;\n-pub const ERROR_DS_NAME_ERROR_DOMAIN_ONLY: DWORD = 8473;\n-pub const ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING: DWORD = 8474;\n-pub const ERROR_DS_CONSTRUCTED_ATT_MOD: DWORD = 8475;\n-pub const ERROR_DS_WRONG_OM_OBJ_CLASS: DWORD = 8476;\n-pub const ERROR_DS_DRA_REPL_PENDING: DWORD = 8477;\n-pub const ERROR_DS_DS_REQUIRED: DWORD = 8478;\n-pub const ERROR_DS_INVALID_LDAP_DISPLAY_NAME: DWORD = 8479;\n-pub const ERROR_DS_NON_BASE_SEARCH: DWORD = 8480;\n-pub const ERROR_DS_CANT_RETRIEVE_ATTS: DWORD = 8481;\n-pub const ERROR_DS_BACKLINK_WITHOUT_LINK: DWORD = 8482;\n-pub const ERROR_DS_EPOCH_MISMATCH: DWORD = 8483;\n-pub const ERROR_DS_SRC_NAME_MISMATCH: DWORD = 8484;\n-pub const ERROR_DS_SRC_AND_DST_NC_IDENTICAL: DWORD = 8485;\n-pub const ERROR_DS_DST_NC_MISMATCH: DWORD = 8486;\n-pub const ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC: DWORD = 8487;\n-pub const ERROR_DS_SRC_GUID_MISMATCH: DWORD = 8488;\n-pub const ERROR_DS_CANT_MOVE_DELETED_OBJECT: DWORD = 8489;\n-pub const ERROR_DS_PDC_OPERATION_IN_PROGRESS: DWORD = 8490;\n-pub const ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD: DWORD = 8491;\n-pub const ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION: DWORD = 8492;\n-pub const ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS: DWORD = 8493;\n-pub const ERROR_DS_NC_MUST_HAVE_NC_PARENT: DWORD = 8494;\n-pub const ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE: DWORD = 8495;\n-pub const ERROR_DS_DST_DOMAIN_NOT_NATIVE: DWORD = 8496;\n-pub const ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER: DWORD = 8497;\n-pub const ERROR_DS_CANT_MOVE_ACCOUNT_GROUP: DWORD = 8498;\n-pub const ERROR_DS_CANT_MOVE_RESOURCE_GROUP: DWORD = 8499;\n-pub const ERROR_DS_INVALID_SEARCH_FLAG: DWORD = 8500;\n-pub const ERROR_DS_NO_TREE_DELETE_ABOVE_NC: DWORD = 8501;\n-pub const ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE: DWORD = 8502;\n-pub const ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE: DWORD = 8503;\n-pub const ERROR_DS_SAM_INIT_FAILURE: DWORD = 8504;\n-pub const ERROR_DS_SENSITIVE_GROUP_VIOLATION: DWORD = 8505;\n-pub const ERROR_DS_CANT_MOD_PRIMARYGROUPID: DWORD = 8506;\n-pub const ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD: DWORD = 8507;\n-pub const ERROR_DS_NONSAFE_SCHEMA_CHANGE: DWORD = 8508;\n-pub const ERROR_DS_SCHEMA_UPDATE_DISALLOWED: DWORD = 8509;\n-pub const ERROR_DS_CANT_CREATE_UNDER_SCHEMA: DWORD = 8510;\n-pub const ERROR_DS_INSTALL_NO_SRC_SCH_VERSION: DWORD = 8511;\n-pub const ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE: DWORD = 8512;\n-pub const ERROR_DS_INVALID_GROUP_TYPE: DWORD = 8513;\n-pub const ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN: DWORD = 8514;\n-pub const ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN: DWORD = 8515;\n-pub const ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER: DWORD = 8516;\n-pub const ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER: DWORD = 8517;\n-pub const ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER: DWORD = 8518;\n-pub const ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER: DWORD = 8519;\n-pub const ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER: DWORD = 8520;\n-pub const ERROR_DS_HAVE_PRIMARY_MEMBERS: DWORD = 8521;\n-pub const ERROR_DS_STRING_SD_CONVERSION_FAILED: DWORD = 8522;\n-pub const ERROR_DS_NAMING_MASTER_GC: DWORD = 8523;\n-pub const ERROR_DS_DNS_LOOKUP_FAILURE: DWORD = 8524;\n-pub const ERROR_DS_COULDNT_UPDATE_SPNS: DWORD = 8525;\n-pub const ERROR_DS_CANT_RETRIEVE_SD: DWORD = 8526;\n-pub const ERROR_DS_KEY_NOT_UNIQUE: DWORD = 8527;\n-pub const ERROR_DS_WRONG_LINKED_ATT_SYNTAX: DWORD = 8528;\n-pub const ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD: DWORD = 8529;\n-pub const ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY: DWORD = 8530;\n-pub const ERROR_DS_CANT_START: DWORD = 8531;\n-pub const ERROR_DS_INIT_FAILURE: DWORD = 8532;\n-pub const ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION: DWORD = 8533;\n-pub const ERROR_DS_SOURCE_DOMAIN_IN_FOREST: DWORD = 8534;\n-pub const ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST: DWORD = 8535;\n-pub const ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED: DWORD = 8536;\n-pub const ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN: DWORD = 8537;\n-pub const ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER: DWORD = 8538;\n-pub const ERROR_DS_SRC_SID_EXISTS_IN_FOREST: DWORD = 8539;\n-pub const ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH: DWORD = 8540;\n-pub const ERROR_SAM_INIT_FAILURE: DWORD = 8541;\n-pub const ERROR_DS_DRA_SCHEMA_INFO_SHIP: DWORD = 8542;\n-pub const ERROR_DS_DRA_SCHEMA_CONFLICT: DWORD = 8543;\n-pub const ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT: DWORD = 8544;\n-pub const ERROR_DS_DRA_OBJ_NC_MISMATCH: DWORD = 8545;\n-pub const ERROR_DS_NC_STILL_HAS_DSAS: DWORD = 8546;\n-pub const ERROR_DS_GC_REQUIRED: DWORD = 8547;\n-pub const ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY: DWORD = 8548;\n-pub const ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS: DWORD = 8549;\n-pub const ERROR_DS_CANT_ADD_TO_GC: DWORD = 8550;\n-pub const ERROR_DS_NO_CHECKPOINT_WITH_PDC: DWORD = 8551;\n-pub const ERROR_DS_SOURCE_AUDITING_NOT_ENABLED: DWORD = 8552;\n-pub const ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC: DWORD = 8553;\n-pub const ERROR_DS_INVALID_NAME_FOR_SPN: DWORD = 8554;\n-pub const ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS: DWORD = 8555;\n-pub const ERROR_DS_UNICODEPWD_NOT_IN_QUOTES: DWORD = 8556;\n-pub const ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED: DWORD = 8557;\n-pub const ERROR_DS_MUST_BE_RUN_ON_DST_DC: DWORD = 8558;\n-pub const ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER: DWORD = 8559;\n-pub const ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ: DWORD = 8560;\n-pub const ERROR_DS_INIT_FAILURE_CONSOLE: DWORD = 8561;\n-pub const ERROR_DS_SAM_INIT_FAILURE_CONSOLE: DWORD = 8562;\n-pub const ERROR_DS_FOREST_VERSION_TOO_HIGH: DWORD = 8563;\n-pub const ERROR_DS_DOMAIN_VERSION_TOO_HIGH: DWORD = 8564;\n-pub const ERROR_DS_FOREST_VERSION_TOO_LOW: DWORD = 8565;\n-pub const ERROR_DS_DOMAIN_VERSION_TOO_LOW: DWORD = 8566;\n-pub const ERROR_DS_INCOMPATIBLE_VERSION: DWORD = 8567;\n-pub const ERROR_DS_LOW_DSA_VERSION: DWORD = 8568;\n-pub const ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN: DWORD = 8569;\n-pub const ERROR_DS_NOT_SUPPORTED_SORT_ORDER: DWORD = 8570;\n-pub const ERROR_DS_NAME_NOT_UNIQUE: DWORD = 8571;\n-pub const ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4: DWORD = 8572;\n-pub const ERROR_DS_OUT_OF_VERSION_STORE: DWORD = 8573;\n-pub const ERROR_DS_INCOMPATIBLE_CONTROLS_USED: DWORD = 8574;\n-pub const ERROR_DS_NO_REF_DOMAIN: DWORD = 8575;\n-pub const ERROR_DS_RESERVED_LINK_ID: DWORD = 8576;\n-pub const ERROR_DS_LINK_ID_NOT_AVAILABLE: DWORD = 8577;\n-pub const ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER: DWORD = 8578;\n-pub const ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE: DWORD = 8579;\n-pub const ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC: DWORD = 8580;\n-pub const ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG: DWORD = 8581;\n-pub const ERROR_DS_MODIFYDN_WRONG_GRANDPARENT: DWORD = 8582;\n-pub const ERROR_DS_NAME_ERROR_TRUST_REFERRAL: DWORD = 8583;\n-pub const ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER: DWORD = 8584;\n-pub const ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD: DWORD = 8585;\n-pub const ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2: DWORD = 8586;\n-pub const ERROR_DS_THREAD_LIMIT_EXCEEDED: DWORD = 8587;\n-pub const ERROR_DS_NOT_CLOSEST: DWORD = 8588;\n-pub const ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF: DWORD = 8589;\n-pub const ERROR_DS_SINGLE_USER_MODE_FAILED: DWORD = 8590;\n-pub const ERROR_DS_NTDSCRIPT_SYNTAX_ERROR: DWORD = 8591;\n-pub const ERROR_DS_NTDSCRIPT_PROCESS_ERROR: DWORD = 8592;\n-pub const ERROR_DS_DIFFERENT_REPL_EPOCHS: DWORD = 8593;\n-pub const ERROR_DS_DRS_EXTENSIONS_CHANGED: DWORD = 8594;\n-pub const ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR: DWORD = 8595;\n-pub const ERROR_DS_NO_MSDS_INTID: DWORD = 8596;\n-pub const ERROR_DS_DUP_MSDS_INTID: DWORD = 8597;\n-pub const ERROR_DS_EXISTS_IN_RDNATTID: DWORD = 8598;\n-pub const ERROR_DS_AUTHORIZATION_FAILED: DWORD = 8599;\n-pub const ERROR_DS_INVALID_SCRIPT: DWORD = 8600;\n-pub const ERROR_DS_REMOTE_CROSSREF_OP_FAILED: DWORD = 8601;\n-pub const ERROR_DS_CROSS_REF_BUSY: DWORD = 8602;\n-pub const ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN: DWORD = 8603;\n-pub const ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC: DWORD = 8604;\n-pub const ERROR_DS_DUPLICATE_ID_FOUND: DWORD = 8605;\n-pub const ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT: DWORD = 8606;\n-pub const ERROR_DS_GROUP_CONVERSION_ERROR: DWORD = 8607;\n-pub const ERROR_DS_CANT_MOVE_APP_BASIC_GROUP: DWORD = 8608;\n-pub const ERROR_DS_CANT_MOVE_APP_QUERY_GROUP: DWORD = 8609;\n-pub const ERROR_DS_ROLE_NOT_VERIFIED: DWORD = 8610;\n-pub const ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL: DWORD = 8611;\n-pub const ERROR_DS_DOMAIN_RENAME_IN_PROGRESS: DWORD = 8612;\n-pub const ERROR_DS_EXISTING_AD_CHILD_NC: DWORD = 8613;\n-pub const ERROR_DS_REPL_LIFETIME_EXCEEDED: DWORD = 8614;\n-pub const ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER: DWORD = 8615;\n-pub const ERROR_DS_LDAP_SEND_QUEUE_FULL: DWORD = 8616;\n-pub const ERROR_DS_DRA_OUT_SCHEDULE_WINDOW: DWORD = 8617;\n-pub const ERROR_SXS_SECTION_NOT_FOUND: DWORD = 14000;\n-pub const ERROR_SXS_CANT_GEN_ACTCTX: DWORD = 14001;\n-pub const ERROR_SXS_INVALID_ACTCTXDATA_FORMAT: DWORD = 14002;\n-pub const ERROR_SXS_ASSEMBLY_NOT_FOUND: DWORD = 14003;\n-pub const ERROR_SXS_MANIFEST_FORMAT_ERROR: DWORD = 14004;\n-pub const ERROR_SXS_MANIFEST_PARSE_ERROR: DWORD = 14005;\n-pub const ERROR_SXS_ACTIVATION_CONTEXT_DISABLED: DWORD = 14006;\n-pub const ERROR_SXS_KEY_NOT_FOUND: DWORD = 14007;\n-pub const ERROR_SXS_VERSION_CONFLICT: DWORD = 14008;\n-pub const ERROR_SXS_WRONG_SECTION_TYPE: DWORD = 14009;\n-pub const ERROR_SXS_THREAD_QUERIES_DISABLED: DWORD = 14010;\n-pub const ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET: DWORD = 14011;\n-pub const ERROR_SXS_UNKNOWN_ENCODING_GROUP: DWORD = 14012;\n-pub const ERROR_SXS_UNKNOWN_ENCODING: DWORD = 14013;\n-pub const ERROR_SXS_INVALID_XML_NAMESPACE_URI: DWORD = 14014;\n-pub const ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED: DWORD = 14015;\n-pub const ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED: DWORD = 14016;\n-pub const ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE: DWORD = 14017;\n-pub const ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE: DWORD = 14018;\n-pub const ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE: DWORD = 14019;\n-pub const ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT: DWORD = 14020;\n-pub const ERROR_SXS_DUPLICATE_DLL_NAME: DWORD = 14021;\n-pub const ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME: DWORD = 14022;\n-pub const ERROR_SXS_DUPLICATE_CLSID: DWORD = 14023;\n-pub const ERROR_SXS_DUPLICATE_IID: DWORD = 14024;\n-pub const ERROR_SXS_DUPLICATE_TLBID: DWORD = 14025;\n-pub const ERROR_SXS_DUPLICATE_PROGID: DWORD = 14026;\n-pub const ERROR_SXS_DUPLICATE_ASSEMBLY_NAME: DWORD = 14027;\n-pub const ERROR_SXS_FILE_HASH_MISMATCH: DWORD = 14028;\n-pub const ERROR_SXS_POLICY_PARSE_ERROR: DWORD = 14029;\n-pub const ERROR_SXS_XML_E_MISSINGQUOTE: DWORD = 14030;\n-pub const ERROR_SXS_XML_E_COMMENTSYNTAX: DWORD = 14031;\n-pub const ERROR_SXS_XML_E_BADSTARTNAMECHAR: DWORD = 14032;\n-pub const ERROR_SXS_XML_E_BADNAMECHAR: DWORD = 14033;\n-pub const ERROR_SXS_XML_E_BADCHARINSTRING: DWORD = 14034;\n-pub const ERROR_SXS_XML_E_XMLDECLSYNTAX: DWORD = 14035;\n-pub const ERROR_SXS_XML_E_BADCHARDATA: DWORD = 14036;\n-pub const ERROR_SXS_XML_E_MISSINGWHITESPACE: DWORD = 14037;\n-pub const ERROR_SXS_XML_E_EXPECTINGTAGEND: DWORD = 14038;\n-pub const ERROR_SXS_XML_E_MISSINGSEMICOLON: DWORD = 14039;\n-pub const ERROR_SXS_XML_E_UNBALANCEDPAREN: DWORD = 14040;\n-pub const ERROR_SXS_XML_E_INTERNALERROR: DWORD = 14041;\n-pub const ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE: DWORD = 14042;\n-pub const ERROR_SXS_XML_E_INCOMPLETE_ENCODING: DWORD = 14043;\n-pub const ERROR_SXS_XML_E_MISSING_PAREN: DWORD = 14044;\n-pub const ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE: DWORD = 14045;\n-pub const ERROR_SXS_XML_E_MULTIPLE_COLONS: DWORD = 14046;\n-pub const ERROR_SXS_XML_E_INVALID_DECIMAL: DWORD = 14047;\n-pub const ERROR_SXS_XML_E_INVALID_HEXIDECIMAL: DWORD = 14048;\n-pub const ERROR_SXS_XML_E_INVALID_UNICODE: DWORD = 14049;\n-pub const ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK: DWORD = 14050;\n-pub const ERROR_SXS_XML_E_UNEXPECTEDENDTAG: DWORD = 14051;\n-pub const ERROR_SXS_XML_E_UNCLOSEDTAG: DWORD = 14052;\n-pub const ERROR_SXS_XML_E_DUPLICATEATTRIBUTE: DWORD = 14053;\n-pub const ERROR_SXS_XML_E_MULTIPLEROOTS: DWORD = 14054;\n-pub const ERROR_SXS_XML_E_INVALIDATROOTLEVEL: DWORD = 14055;\n-pub const ERROR_SXS_XML_E_BADXMLDECL: DWORD = 14056;\n-pub const ERROR_SXS_XML_E_MISSINGROOT: DWORD = 14057;\n-pub const ERROR_SXS_XML_E_UNEXPECTEDEOF: DWORD = 14058;\n-pub const ERROR_SXS_XML_E_BADPEREFINSUBSET: DWORD = 14059;\n-pub const ERROR_SXS_XML_E_UNCLOSEDSTARTTAG: DWORD = 14060;\n-pub const ERROR_SXS_XML_E_UNCLOSEDENDTAG: DWORD = 14061;\n-pub const ERROR_SXS_XML_E_UNCLOSEDSTRING: DWORD = 14062;\n-pub const ERROR_SXS_XML_E_UNCLOSEDCOMMENT: DWORD = 14063;\n-pub const ERROR_SXS_XML_E_UNCLOSEDDECL: DWORD = 14064;\n-pub const ERROR_SXS_XML_E_UNCLOSEDCDATA: DWORD = 14065;\n-pub const ERROR_SXS_XML_E_RESERVEDNAMESPACE: DWORD = 14066;\n-pub const ERROR_SXS_XML_E_INVALIDENCODING: DWORD = 14067;\n-pub const ERROR_SXS_XML_E_INVALIDSWITCH: DWORD = 14068;\n-pub const ERROR_SXS_XML_E_BADXMLCASE: DWORD = 14069;\n-pub const ERROR_SXS_XML_E_INVALID_STANDALONE: DWORD = 14070;\n-pub const ERROR_SXS_XML_E_UNEXPECTED_STANDALONE: DWORD = 14071;\n-pub const ERROR_SXS_XML_E_INVALID_VERSION: DWORD = 14072;\n-pub const ERROR_SXS_XML_E_MISSINGEQUALS: DWORD = 14073;\n-pub const ERROR_SXS_PROTECTION_RECOVERY_FAILED: DWORD = 14074;\n-pub const ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT: DWORD = 14075;\n-pub const ERROR_SXS_PROTECTION_CATALOG_NOT_VALID: DWORD = 14076;\n-pub const ERROR_SXS_UNTRANSLATABLE_HRESULT: DWORD = 14077;\n-pub const ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING: DWORD = 14078;\n-pub const ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE: DWORD = 14079;\n-pub const ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME: DWORD = 14080;\n-pub const ERROR_SXS_ASSEMBLY_MISSING: DWORD = 14081;\n-pub const ERROR_SXS_CORRUPT_ACTIVATION_STACK: DWORD = 14082;\n-pub const ERROR_SXS_CORRUPTION: DWORD = 14083;\n-pub const ERROR_SXS_EARLY_DEACTIVATION: DWORD = 14084;\n-pub const ERROR_SXS_INVALID_DEACTIVATION: DWORD = 14085;\n-pub const ERROR_SXS_MULTIPLE_DEACTIVATION: DWORD = 14086;\n-pub const ERROR_SXS_PROCESS_TERMINATION_REQUESTED: DWORD = 14087;\n-pub const ERROR_SXS_RELEASE_ACTIVATION_CONTEXT: DWORD = 14088;\n-pub const ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY: DWORD = 14089;\n-pub const ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE: DWORD = 14090;\n-pub const ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME: DWORD = 14091;\n-pub const ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE: DWORD = 14092;\n-pub const ERROR_SXS_IDENTITY_PARSE_ERROR: DWORD = 14093;\n-pub const ERROR_MALFORMED_SUBSTITUTION_STRING: DWORD = 14094;\n-pub const ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN: DWORD = 14095;\n-pub const ERROR_UNMAPPED_SUBSTITUTION_STRING: DWORD = 14096;\n-pub const ERROR_SXS_ASSEMBLY_NOT_LOCKED: DWORD = 14097;\n-pub const ERROR_SXS_COMPONENT_STORE_CORRUPT: DWORD = 14098;\n-pub const ERROR_ADVANCED_INSTALLER_FAILED: DWORD = 14099;\n-pub const ERROR_XML_ENCODING_MISMATCH: DWORD = 14100;\n-pub const ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT: DWORD = 14101;\n-pub const ERROR_SXS_IDENTITIES_DIFFERENT: DWORD = 14102;\n-pub const ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT: DWORD = 14103;\n-pub const ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY: DWORD = 14104;\n-pub const ERROR_SXS_MANIFEST_TOO_BIG: DWORD = 14105;\n-pub const ERROR_SXS_SETTING_NOT_REGISTERED: DWORD = 14106;\n-pub const ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE: DWORD = 14107;\n-pub const ERROR_SMI_PRIMITIVE_INSTALLER_FAILED: DWORD = 14108;\n-pub const ERROR_GENERIC_COMMAND_FAILED: DWORD = 14109;\n-pub const ERROR_SXS_FILE_HASH_MISSING: DWORD = 14110;\n-pub const ERROR_IPSEC_QM_POLICY_EXISTS: DWORD = 13000;\n-pub const ERROR_IPSEC_QM_POLICY_NOT_FOUND: DWORD = 13001;\n-pub const ERROR_IPSEC_QM_POLICY_IN_USE: DWORD = 13002;\n-pub const ERROR_IPSEC_MM_POLICY_EXISTS: DWORD = 13003;\n-pub const ERROR_IPSEC_MM_POLICY_NOT_FOUND: DWORD = 13004;\n-pub const ERROR_IPSEC_MM_POLICY_IN_USE: DWORD = 13005;\n-pub const ERROR_IPSEC_MM_FILTER_EXISTS: DWORD = 13006;\n-pub const ERROR_IPSEC_MM_FILTER_NOT_FOUND: DWORD = 13007;\n-pub const ERROR_IPSEC_TRANSPORT_FILTER_EXISTS: DWORD = 13008;\n-pub const ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND: DWORD = 13009;\n-pub const ERROR_IPSEC_MM_AUTH_EXISTS: DWORD = 13010;\n-pub const ERROR_IPSEC_MM_AUTH_NOT_FOUND: DWORD = 13011;\n-pub const ERROR_IPSEC_MM_AUTH_IN_USE: DWORD = 13012;\n-pub const ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND: DWORD = 13013;\n-pub const ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND: DWORD = 13014;\n-pub const ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND: DWORD = 13015;\n-pub const ERROR_IPSEC_TUNNEL_FILTER_EXISTS: DWORD = 13016;\n-pub const ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND: DWORD = 13017;\n-pub const ERROR_IPSEC_MM_FILTER_PENDING_DELETION: DWORD = 13018;\n-pub const ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION: DWORD = 13019;\n-pub const ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION: DWORD = 13020;\n-pub const ERROR_IPSEC_MM_POLICY_PENDING_DELETION: DWORD = 13021;\n-pub const ERROR_IPSEC_MM_AUTH_PENDING_DELETION: DWORD = 13022;\n-pub const ERROR_IPSEC_QM_POLICY_PENDING_DELETION: DWORD = 13023;\n-pub const ERROR_IPSEC_IKE_NEG_STATUS_BEGIN: DWORD = 13800;\n-pub const ERROR_IPSEC_IKE_AUTH_FAIL: DWORD = 13801;\n-pub const ERROR_IPSEC_IKE_ATTRIB_FAIL: DWORD = 13802;\n-pub const ERROR_IPSEC_IKE_NEGOTIATION_PENDING: DWORD = 13803;\n-pub const ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR: DWORD = 13804;\n-pub const ERROR_IPSEC_IKE_TIMED_OUT: DWORD = 13805;\n-pub const ERROR_IPSEC_IKE_NO_CERT: DWORD = 13806;\n-pub const ERROR_IPSEC_IKE_SA_DELETED: DWORD = 13807;\n-pub const ERROR_IPSEC_IKE_SA_REAPED: DWORD = 13808;\n-pub const ERROR_IPSEC_IKE_MM_ACQUIRE_DROP: DWORD = 13809;\n-pub const ERROR_IPSEC_IKE_QM_ACQUIRE_DROP: DWORD = 13810;\n-pub const ERROR_IPSEC_IKE_QUEUE_DROP_MM: DWORD = 13811;\n-pub const ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM: DWORD = 13812;\n-pub const ERROR_IPSEC_IKE_DROP_NO_RESPONSE: DWORD = 13813;\n-pub const ERROR_IPSEC_IKE_MM_DELAY_DROP: DWORD = 13814;\n-pub const ERROR_IPSEC_IKE_QM_DELAY_DROP: DWORD = 13815;\n-pub const ERROR_IPSEC_IKE_ERROR: DWORD = 13816;\n-pub const ERROR_IPSEC_IKE_CRL_FAILED: DWORD = 13817;\n-pub const ERROR_IPSEC_IKE_INVALID_KEY_USAGE: DWORD = 13818;\n-pub const ERROR_IPSEC_IKE_INVALID_CERT_TYPE: DWORD = 13819;\n-pub const ERROR_IPSEC_IKE_NO_PRIVATE_KEY: DWORD = 13820;\n-pub const ERROR_IPSEC_IKE_DH_FAIL: DWORD = 13822;\n-pub const ERROR_IPSEC_IKE_INVALID_HEADER: DWORD = 13824;\n-pub const ERROR_IPSEC_IKE_NO_POLICY: DWORD = 13825;\n-pub const ERROR_IPSEC_IKE_INVALID_SIGNATURE: DWORD = 13826;\n-pub const ERROR_IPSEC_IKE_KERBEROS_ERROR: DWORD = 13827;\n-pub const ERROR_IPSEC_IKE_NO_PUBLIC_KEY: DWORD = 13828;\n-pub const ERROR_IPSEC_IKE_PROCESS_ERR: DWORD = 13829;\n-pub const ERROR_IPSEC_IKE_PROCESS_ERR_SA: DWORD = 13830;\n-pub const ERROR_IPSEC_IKE_PROCESS_ERR_PROP: DWORD = 13831;\n-pub const ERROR_IPSEC_IKE_PROCESS_ERR_TRANS: DWORD = 13832;\n-pub const ERROR_IPSEC_IKE_PROCESS_ERR_KE: DWORD = 13833;\n-pub const ERROR_IPSEC_IKE_PROCESS_ERR_ID: DWORD = 13834;\n-pub const ERROR_IPSEC_IKE_PROCESS_ERR_CERT: DWORD = 13835;\n-pub const ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ: DWORD = 13836;\n-pub const ERROR_IPSEC_IKE_PROCESS_ERR_HASH: DWORD = 13837;\n-pub const ERROR_IPSEC_IKE_PROCESS_ERR_SIG: DWORD = 13838;\n-pub const ERROR_IPSEC_IKE_PROCESS_ERR_NONCE: DWORD = 13839;\n-pub const ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY: DWORD = 13840;\n-pub const ERROR_IPSEC_IKE_PROCESS_ERR_DELETE: DWORD = 13841;\n-pub const ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR: DWORD = 13842;\n-pub const ERROR_IPSEC_IKE_INVALID_PAYLOAD: DWORD = 13843;\n-pub const ERROR_IPSEC_IKE_LOAD_SOFT_SA: DWORD = 13844;\n-pub const ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN: DWORD = 13845;\n-pub const ERROR_IPSEC_IKE_INVALID_COOKIE: DWORD = 13846;\n-pub const ERROR_IPSEC_IKE_NO_PEER_CERT: DWORD = 13847;\n-pub const ERROR_IPSEC_IKE_PEER_CRL_FAILED: DWORD = 13848;\n-pub const ERROR_IPSEC_IKE_POLICY_CHANGE: DWORD = 13849;\n-pub const ERROR_IPSEC_IKE_NO_MM_POLICY: DWORD = 13850;\n-pub const ERROR_IPSEC_IKE_NOTCBPRIV: DWORD = 13851;\n-pub const ERROR_IPSEC_IKE_SECLOADFAIL: DWORD = 13852;\n-pub const ERROR_IPSEC_IKE_FAILSSPINIT: DWORD = 13853;\n-pub const ERROR_IPSEC_IKE_FAILQUERYSSP: DWORD = 13854;\n-pub const ERROR_IPSEC_IKE_SRVACQFAIL: DWORD = 13855;\n-pub const ERROR_IPSEC_IKE_SRVQUERYCRED: DWORD = 13856;\n-pub const ERROR_IPSEC_IKE_GETSPIFAIL: DWORD = 13857;\n-pub const ERROR_IPSEC_IKE_INVALID_FILTER: DWORD = 13858;\n-pub const ERROR_IPSEC_IKE_OUT_OF_MEMORY: DWORD = 13859;\n-pub const ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED: DWORD = 13860;\n-pub const ERROR_IPSEC_IKE_INVALID_POLICY: DWORD = 13861;\n-pub const ERROR_IPSEC_IKE_UNKNOWN_DOI: DWORD = 13862;\n-pub const ERROR_IPSEC_IKE_INVALID_SITUATION: DWORD = 13863;\n-pub const ERROR_IPSEC_IKE_DH_FAILURE: DWORD = 13864;\n-pub const ERROR_IPSEC_IKE_INVALID_GROUP: DWORD = 13865;\n-pub const ERROR_IPSEC_IKE_ENCRYPT: DWORD = 13866;\n-pub const ERROR_IPSEC_IKE_DECRYPT: DWORD = 13867;\n-pub const ERROR_IPSEC_IKE_POLICY_MATCH: DWORD = 13868;\n-pub const ERROR_IPSEC_IKE_UNSUPPORTED_ID: DWORD = 13869;\n-pub const ERROR_IPSEC_IKE_INVALID_HASH: DWORD = 13870;\n-pub const ERROR_IPSEC_IKE_INVALID_HASH_ALG: DWORD = 13871;\n-pub const ERROR_IPSEC_IKE_INVALID_HASH_SIZE: DWORD = 13872;\n-pub const ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG: DWORD = 13873;\n-pub const ERROR_IPSEC_IKE_INVALID_AUTH_ALG: DWORD = 13874;\n-pub const ERROR_IPSEC_IKE_INVALID_SIG: DWORD = 13875;\n-pub const ERROR_IPSEC_IKE_LOAD_FAILED: DWORD = 13876;\n-pub const ERROR_IPSEC_IKE_RPC_DELETE: DWORD = 13877;\n-pub const ERROR_IPSEC_IKE_BENIGN_REINIT: DWORD = 13878;\n-pub const ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY: DWORD = 13879;\n-pub const ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN: DWORD = 13881;\n-pub const ERROR_IPSEC_IKE_MM_LIMIT: DWORD = 13882;\n-pub const ERROR_IPSEC_IKE_NEGOTIATION_DISABLED: DWORD = 13883;\n-/*pub const ERROR_IPSEC_IKE_NEG_STATUS_END: DWORD = 13884)*/\n-pub const ERROR_IPSEC_IKE_QM_LIMIT: DWORD = 13884;\n-pub const ERROR_IPSEC_IKE_MM_EXPIRED: DWORD = 13885;\n-pub const ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID: DWORD = 13886;\n-pub const ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH: DWORD = 13887;\n-pub const ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID: DWORD = 13888;\n-pub const ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD: DWORD = 13889;\n-pub const ERROR_IPSEC_IKE_DOS_COOKIE_SENT: DWORD = 13890;\n-pub const ERROR_IPSEC_IKE_SHUTTING_DOWN: DWORD = 13891;\n-pub const ERROR_IPSEC_IKE_CGA_AUTH_FAILED: DWORD = 13892;\n-pub const ERROR_IPSEC_IKE_PROCESS_ERR_NATOA: DWORD = 13893;\n-pub const ERROR_IPSEC_IKE_INVALID_MM_FOR_QM: DWORD = 13894;\n-pub const ERROR_IPSEC_IKE_QM_EXPIRED: DWORD = 13895;\n-pub const ERROR_IPSEC_IKE_TOO_MANY_FILTERS: DWORD = 13896;\n-pub const ERROR_IPSEC_IKE_NEG_STATUS_END: DWORD = 13897;\n-pub const ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL: DWORD = 13898;\n-pub const ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE: DWORD = 13899;\n-pub const ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING: DWORD = 13900;\n-pub const ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING: DWORD = 13901;\n-pub const ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS: DWORD = 13902;\n-pub const ERROR_IPSEC_IKE_RATELIMIT_DROP: DWORD = 13903;\n-pub const ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE: DWORD = 13904;\n-pub const ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE: DWORD = 13905;\n-pub const ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE: DWORD = 13906;\n-pub const ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY: DWORD = 13907;\n-pub const ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE: DWORD = 13908;\n-pub const ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END: DWORD = 13909;\n-pub const ERROR_IPSEC_BAD_SPI: DWORD = 13910;\n-pub const ERROR_IPSEC_SA_LIFETIME_EXPIRED: DWORD = 13911;\n-pub const ERROR_IPSEC_WRONG_SA: DWORD = 13912;\n-pub const ERROR_IPSEC_REPLAY_CHECK_FAILED: DWORD = 13913;\n-pub const ERROR_IPSEC_INVALID_PACKET: DWORD = 13914;\n-pub const ERROR_IPSEC_INTEGRITY_CHECK_FAILED: DWORD = 13915;\n-pub const ERROR_IPSEC_CLEAR_TEXT_DROP: DWORD = 13916;\n-pub const ERROR_IPSEC_AUTH_FIREWALL_DROP: DWORD = 13917;\n-pub const ERROR_IPSEC_THROTTLE_DROP: DWORD = 13918;\n-pub const ERROR_IPSEC_DOSP_BLOCK: DWORD = 13925;\n-pub const ERROR_IPSEC_DOSP_RECEIVED_MULTICAST: DWORD = 13926;\n-pub const ERROR_IPSEC_DOSP_INVALID_PACKET: DWORD = 13927;\n-pub const ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED: DWORD = 13928;\n-pub const ERROR_IPSEC_DOSP_MAX_ENTRIES: DWORD = 13929;\n-pub const ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED: DWORD = 13930;\n-pub const ERROR_IPSEC_DOSP_NOT_INSTALLED: DWORD = 13931;\n-pub const ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES: DWORD = 13932;\n-pub const ERROR_EVT_INVALID_CHANNEL_PATH: DWORD = 15000;\n-pub const ERROR_EVT_INVALID_QUERY: DWORD = 15001;\n-pub const ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND: DWORD = 15002;\n-pub const ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND: DWORD = 15003;\n-pub const ERROR_EVT_INVALID_PUBLISHER_NAME: DWORD = 15004;\n-pub const ERROR_EVT_INVALID_EVENT_DATA: DWORD = 15005;\n-pub const ERROR_EVT_CHANNEL_NOT_FOUND: DWORD = 15007;\n-pub const ERROR_EVT_MALFORMED_XML_TEXT: DWORD = 15008;\n-pub const ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL: DWORD = 15009;\n-pub const ERROR_EVT_CONFIGURATION_ERROR: DWORD = 15010;\n-pub const ERROR_EVT_QUERY_RESULT_STALE: DWORD = 15011;\n-pub const ERROR_EVT_QUERY_RESULT_INVALID_POSITION: DWORD = 15012;\n-pub const ERROR_EVT_NON_VALIDATING_MSXML: DWORD = 15013;\n-pub const ERROR_EVT_FILTER_ALREADYSCOPED: DWORD = 15014;\n-pub const ERROR_EVT_FILTER_NOTELTSET: DWORD = 15015;\n-pub const ERROR_EVT_FILTER_INVARG: DWORD = 15016;\n-pub const ERROR_EVT_FILTER_INVTEST: DWORD = 15017;\n-pub const ERROR_EVT_FILTER_INVTYPE: DWORD = 15018;\n-pub const ERROR_EVT_FILTER_PARSEERR: DWORD = 15019;\n-pub const ERROR_EVT_FILTER_UNSUPPORTEDOP: DWORD = 15020;\n-pub const ERROR_EVT_FILTER_UNEXPECTEDTOKEN: DWORD = 15021;\n-pub const ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL: DWORD = 15022;\n-pub const ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE: DWORD = 15023;\n-pub const ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE: DWORD = 15024;\n-pub const ERROR_EVT_CHANNEL_CANNOT_ACTIVATE: DWORD = 15025;\n-pub const ERROR_EVT_FILTER_TOO_COMPLEX: DWORD = 15026;\n-pub const ERROR_EVT_MESSAGE_NOT_FOUND: DWORD = 15027;\n-pub const ERROR_EVT_MESSAGE_ID_NOT_FOUND: DWORD = 15028;\n-pub const ERROR_EVT_UNRESOLVED_VALUE_INSERT: DWORD = 15029;\n-pub const ERROR_EVT_UNRESOLVED_PARAMETER_INSERT: DWORD = 15030;\n-pub const ERROR_EVT_MAX_INSERTS_REACHED: DWORD = 15031;\n-pub const ERROR_EVT_EVENT_DEFINITION_NOT_FOUND: DWORD = 15032;\n-pub const ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND: DWORD = 15033;\n-pub const ERROR_EVT_VERSION_TOO_OLD: DWORD = 15034;\n-pub const ERROR_EVT_VERSION_TOO_NEW: DWORD = 15035;\n-pub const ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY: DWORD = 15036;\n-pub const ERROR_EVT_PUBLISHER_DISABLED: DWORD = 15037;\n-pub const ERROR_EVT_FILTER_OUT_OF_RANGE: DWORD = 15038;\n-pub const ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE: DWORD = 15080;\n-pub const ERROR_EC_LOG_DISABLED: DWORD = 15081;\n-pub const ERROR_EC_CIRCULAR_FORWARDING: DWORD = 15082;\n-pub const ERROR_EC_CREDSTORE_FULL: DWORD = 15083;\n-pub const ERROR_EC_CRED_NOT_FOUND: DWORD = 15084;\n-pub const ERROR_EC_NO_ACTIVE_CHANNEL: DWORD = 15085;\n-pub const ERROR_MUI_FILE_NOT_FOUND: DWORD = 15100;\n-pub const ERROR_MUI_INVALID_FILE: DWORD = 15101;\n-pub const ERROR_MUI_INVALID_RC_CONFIG: DWORD = 15102;\n-pub const ERROR_MUI_INVALID_LOCALE_NAME: DWORD = 15103;\n-pub const ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME: DWORD = 15104;\n-pub const ERROR_MUI_FILE_NOT_LOADED: DWORD = 15105;\n-pub const ERROR_RESOURCE_ENUM_USER_STOP: DWORD = 15106;\n-pub const ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED: DWORD = 15107;\n-pub const ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME: DWORD = 15108;\n-pub const ERROR_MRM_RUNTIME_NO_DEFAULT_OR_NEUTRAL_RESOURCE: DWORD = 15110;\n-pub const ERROR_MRM_INVALID_PRICONFIG: DWORD = 15111;\n-pub const ERROR_MRM_INVALID_FILE_TYPE: DWORD = 15112;\n-pub const ERROR_MRM_UNKNOWN_QUALIFIER: DWORD = 15113;\n-pub const ERROR_MRM_INVALID_QUALIFIER_VALUE: DWORD = 15114;\n-pub const ERROR_MRM_NO_CANDIDATE: DWORD = 15115;\n-pub const ERROR_MRM_NO_MATCH_OR_DEFAULT_CANDIDATE: DWORD = 15116;\n-pub const ERROR_MRM_RESOURCE_TYPE_MISMATCH: DWORD = 15117;\n-pub const ERROR_MRM_DUPLICATE_MAP_NAME: DWORD = 15118;\n-pub const ERROR_MRM_DUPLICATE_ENTRY: DWORD = 15119;\n-pub const ERROR_MRM_INVALID_RESOURCE_IDENTIFIER: DWORD = 15120;\n-pub const ERROR_MRM_FILEPATH_TOO_LONG: DWORD = 15121;\n-pub const ERROR_MRM_UNSUPPORTED_DIRECTORY_TYPE: DWORD = 15122;\n-pub const ERROR_MRM_INVALID_PRI_FILE: DWORD = 15126;\n-pub const ERROR_MRM_NAMED_RESOURCE_NOT_FOUND: DWORD = 15127;\n-pub const ERROR_MRM_MAP_NOT_FOUND: DWORD = 15135;\n-pub const ERROR_MRM_UNSUPPORTED_PROFILE_TYPE: DWORD = 15136;\n-pub const ERROR_MRM_INVALID_QUALIFIER_OPERATOR: DWORD = 15137;\n-pub const ERROR_MRM_INDETERMINATE_QUALIFIER_VALUE: DWORD = 15138;\n-pub const ERROR_MRM_AUTOMERGE_ENABLED: DWORD = 15139;\n-pub const ERROR_MRM_TOO_MANY_RESOURCES: DWORD = 15140;\n-pub const ERROR_MCA_INVALID_CAPABILITIES_STRING: DWORD = 15200;\n-pub const ERROR_MCA_INVALID_VCP_VERSION: DWORD = 15201;\n-pub const ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION: DWORD = 15202;\n-pub const ERROR_MCA_MCCS_VERSION_MISMATCH: DWORD = 15203;\n-pub const ERROR_MCA_UNSUPPORTED_MCCS_VERSION: DWORD = 15204;\n-pub const ERROR_MCA_INTERNAL_ERROR: DWORD = 15205;\n-pub const ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED: DWORD = 15206;\n-pub const ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE: DWORD = 15207;\n-pub const ERROR_AMBIGUOUS_SYSTEM_DEVICE: DWORD = 15250;\n-pub const ERROR_SYSTEM_DEVICE_NOT_FOUND: DWORD = 15299;\n-pub const ERROR_HASH_NOT_SUPPORTED: DWORD = 15300;\n-pub const ERROR_HASH_NOT_PRESENT: DWORD = 15301;\n-pub const ERROR_SECONDARY_IC_PROVIDER_NOT_REGISTERED: DWORD = 15321;\n-pub const ERROR_GPIO_CLIENT_INFORMATION_INVALID: DWORD = 15322;\n-pub const ERROR_GPIO_VERSION_NOT_SUPPORTED: DWORD = 15323;\n-pub const ERROR_GPIO_INVALID_REGISTRATION_PACKET: DWORD = 15324;\n-pub const ERROR_GPIO_OPERATION_DENIED: DWORD = 15325;\n-pub const ERROR_GPIO_INCOMPATIBLE_CONNECT_MODE: DWORD = 15326;\n-pub const ERROR_GPIO_INTERRUPT_ALREADY_UNMASKED: DWORD = 15327;\n-pub const ERROR_CANNOT_SWITCH_RUNLEVEL: DWORD = 15400;\n-pub const ERROR_INVALID_RUNLEVEL_SETTING: DWORD = 15401;\n-pub const ERROR_RUNLEVEL_SWITCH_TIMEOUT: DWORD = 15402;\n-pub const ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT: DWORD = 15403;\n-pub const ERROR_RUNLEVEL_SWITCH_IN_PROGRESS: DWORD = 15404;\n-pub const ERROR_SERVICES_FAILED_AUTOSTART: DWORD = 15405;\n-pub const ERROR_COM_TASK_STOP_PENDING: DWORD = 15501;\n-pub const ERROR_INSTALL_OPEN_PACKAGE_FAILED: DWORD = 15600;\n-pub const ERROR_INSTALL_PACKAGE_NOT_FOUND: DWORD = 15601;\n-pub const ERROR_INSTALL_INVALID_PACKAGE: DWORD = 15602;\n-pub const ERROR_INSTALL_RESOLVE_DEPENDENCY_FAILED: DWORD = 15603;\n-pub const ERROR_INSTALL_OUT_OF_DISK_SPACE: DWORD = 15604;\n-pub const ERROR_INSTALL_NETWORK_FAILURE: DWORD = 15605;\n-pub const ERROR_INSTALL_REGISTRATION_FAILURE: DWORD = 15606;\n-pub const ERROR_INSTALL_DEREGISTRATION_FAILURE: DWORD = 15607;\n-pub const ERROR_INSTALL_CANCEL: DWORD = 15608;\n-pub const ERROR_INSTALL_FAILED: DWORD = 15609;\n-pub const ERROR_REMOVE_FAILED: DWORD = 15610;\n-pub const ERROR_PACKAGE_ALREADY_EXISTS: DWORD = 15611;\n-pub const ERROR_NEEDS_REMEDIATION: DWORD = 15612;\n-pub const ERROR_INSTALL_PREREQUISITE_FAILED: DWORD = 15613;\n-pub const ERROR_PACKAGE_REPOSITORY_CORRUPTED: DWORD = 15614;\n-pub const ERROR_INSTALL_POLICY_FAILURE: DWORD = 15615;\n-pub const ERROR_PACKAGE_UPDATING: DWORD = 15616;\n-pub const ERROR_DEPLOYMENT_BLOCKED_BY_POLICY: DWORD = 15617;\n-pub const ERROR_PACKAGES_IN_USE: DWORD = 15618;\n-pub const ERROR_RECOVERY_FILE_CORRUPT: DWORD = 15619;\n-pub const ERROR_INVALID_STAGED_SIGNATURE: DWORD = 15620;\n-pub const ERROR_DELETING_EXISTING_APPLICATIONDATA_STORE_FAILED: DWORD = 15621;\n-pub const ERROR_INSTALL_PACKAGE_DOWNGRADE: DWORD = 15622;\n-pub const ERROR_SYSTEM_NEEDS_REMEDIATION: DWORD = 15623;\n-pub const ERROR_APPX_INTEGRITY_FAILURE_CLR_NGEN: DWORD = 15624;\n-pub const ERROR_RESILIENCY_FILE_CORRUPT: DWORD = 15625;\n-pub const ERROR_INSTALL_FIREWALL_SERVICE_NOT_RUNNING: DWORD = 15626;\n-pub const ERROR_STATE_LOAD_STORE_FAILED: DWORD = 15800;\n-pub const ERROR_STATE_GET_VERSION_FAILED: DWORD = 15801;\n-pub const ERROR_STATE_SET_VERSION_FAILED: DWORD = 15802;\n-pub const ERROR_STATE_STRUCTURED_RESET_FAILED: DWORD = 15803;\n-pub const ERROR_STATE_OPEN_CONTAINER_FAILED: DWORD = 15804;\n-pub const ERROR_STATE_CREATE_CONTAINER_FAILED: DWORD = 15805;\n-pub const ERROR_STATE_DELETE_CONTAINER_FAILED: DWORD = 15806;\n-pub const ERROR_STATE_READ_SETTING_FAILED: DWORD = 15807;\n-pub const ERROR_STATE_WRITE_SETTING_FAILED: DWORD = 15808;\n-pub const ERROR_STATE_DELETE_SETTING_FAILED: DWORD = 15809;\n-pub const ERROR_STATE_QUERY_SETTING_FAILED: DWORD = 15810;\n-pub const ERROR_STATE_READ_COMPOSITE_SETTING_FAILED: DWORD = 15811;\n-pub const ERROR_STATE_WRITE_COMPOSITE_SETTING_FAILED: DWORD = 15812;\n-pub const ERROR_STATE_ENUMERATE_CONTAINER_FAILED: DWORD = 15813;\n-pub const ERROR_STATE_ENUMERATE_SETTINGS_FAILED: DWORD = 15814;\n-pub const ERROR_STATE_COMPOSITE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED: DWORD = 15815;\n-pub const ERROR_STATE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED: DWORD = 15816;\n-pub const ERROR_STATE_SETTING_NAME_SIZE_LIMIT_EXCEEDED: DWORD = 15817;\n-pub const ERROR_STATE_CONTAINER_NAME_SIZE_LIMIT_EXCEEDED: DWORD = 15818;\n-pub const ERROR_API_UNAVAILABLE: DWORD = 15841;\n-pub const ERROR_AUDITING_DISABLED: DWORD = 0xC0090001;\n-pub const ERROR_ALL_SIDS_FILTERED: DWORD = 0xC0090002;\n-\n-pub const WSABASEERR: c_int = 10000;\n-pub const WSAEINTR: c_int = WSABASEERR + 4;\n-pub const WSAEBADF: c_int = WSABASEERR + 9;\n-pub const WSAEACCES: c_int = WSABASEERR + 13;\n-pub const WSAEFAULT: c_int = WSABASEERR + 14;\n-pub const WSAEINVAL: c_int = WSABASEERR + 22;\n-pub const WSAEMFILE: c_int = WSABASEERR + 24;\n-pub const WSAEWOULDBLOCK: c_int = WSABASEERR + 35;\n-pub const WSAEINPROGRESS: c_int = WSABASEERR + 36;\n-pub const WSAEALREADY: c_int = WSABASEERR + 37;\n-pub const WSAENOTSOCK: c_int = WSABASEERR + 38;\n-pub const WSAEDESTADDRREQ: c_int = WSABASEERR + 39;\n-pub const WSAEMSGSIZE: c_int = WSABASEERR + 40;\n-pub const WSAEPROTOTYPE: c_int = WSABASEERR + 41;\n-pub const WSAENOPROTOOPT: c_int = WSABASEERR + 42;\n-pub const WSAEPROTONOSUPPORT: c_int = WSABASEERR + 43;\n-pub const WSAESOCKTNOSUPPORT: c_int = WSABASEERR + 44;\n-pub const WSAEOPNOTSUPP: c_int = WSABASEERR + 45;\n-pub const WSAEPFNOSUPPORT: c_int = WSABASEERR + 46;\n-pub const WSAEAFNOSUPPORT: c_int = WSABASEERR + 47;\n-pub const WSAEADDRINUSE: c_int = WSABASEERR + 48;\n-pub const WSAEADDRNOTAVAIL: c_int = WSABASEERR + 49;\n-pub const WSAENETDOWN: c_int = WSABASEERR + 50;\n-pub const WSAENETUNREACH: c_int = WSABASEERR + 51;\n-pub const WSAENETRESET: c_int = WSABASEERR + 52;\n-pub const WSAECONNABORTED: c_int = WSABASEERR + 53;\n-pub const WSAECONNRESET: c_int = WSABASEERR + 54;\n-pub const WSAENOBUFS: c_int = WSABASEERR + 55;\n-pub const WSAEISCONN: c_int = WSABASEERR + 56;\n-pub const WSAENOTCONN: c_int = WSABASEERR + 57;\n-pub const WSAESHUTDOWN: c_int = WSABASEERR + 58;\n-pub const WSAETOOMANYREFS: c_int = WSABASEERR + 59;\n-pub const WSAETIMEDOUT: c_int = WSABASEERR + 60;\n-pub const WSAECONNREFUSED: c_int = WSABASEERR + 61;\n-pub const WSAELOOP: c_int = WSABASEERR + 62;\n-pub const WSAENAMETOOLONG: c_int = WSABASEERR + 63;\n-pub const WSAEHOSTDOWN: c_int = WSABASEERR + 64;\n-pub const WSAEHOSTUNREACH: c_int = WSABASEERR + 65;\n-pub const WSAENOTEMPTY: c_int = WSABASEERR + 66;\n-pub const WSAEPROCLIM: c_int = WSABASEERR + 67;\n-pub const WSAEUSERS: c_int = WSABASEERR + 68;\n-pub const WSAEDQUOT: c_int = WSABASEERR + 69;\n-pub const WSAESTALE: c_int = WSABASEERR + 70;\n-pub const WSAEREMOTE: c_int = WSABASEERR + 71;\n-pub const WSASYSNOTREADY: c_int = WSABASEERR + 91;\n-pub const WSAVERNOTSUPPORTED: c_int = WSABASEERR + 92;\n-pub const WSANOTINITIALISED: c_int = WSABASEERR + 93;\n-pub const WSAEDISCON: c_int = WSABASEERR + 101;\n-pub const WSAENOMORE: c_int = WSABASEERR + 102;\n-pub const WSAECANCELLED: c_int = WSABASEERR + 103;\n-pub const WSAEINVALIDPROCTABLE: c_int = WSABASEERR + 104;\n-pub const WSAEINVALIDPROVIDER: c_int = WSABASEERR + 105;\n-pub const WSAEPROVIDERFAILEDINIT: c_int = WSABASEERR + 106;\n-pub const WSASYSCALLFAILURE: c_int = WSABASEERR + 107;\n-pub const WSASERVICE_NOT_FOUND: c_int = WSABASEERR + 108;\n-pub const WSATYPE_NOT_FOUND: c_int = WSABASEERR + 109;\n-pub const WSA_E_NO_MORE: c_int = WSABASEERR + 110;\n-pub const WSA_E_CANCELLED: c_int = WSABASEERR + 111;\n-pub const WSAEREFUSED: c_int = WSABASEERR + 112;\n-pub const WSAHOST_NOT_FOUND: c_int = WSABASEERR + 1001;\n-pub const WSATRY_AGAIN: c_int = WSABASEERR + 1002;\n-pub const WSANO_RECOVERY: c_int = WSABASEERR + 1003;\n-pub const WSANO_DATA: c_int = WSABASEERR + 1004;\n-pub const WSA_QOS_RECEIVERS: c_int = WSABASEERR + 1005;\n-pub const WSA_QOS_SENDERS: c_int = WSABASEERR + 1006;\n-pub const WSA_QOS_NO_SENDERS: c_int = WSABASEERR + 1007;\n-pub const WSA_QOS_NO_RECEIVERS: c_int = WSABASEERR + 1008;\n-pub const WSA_QOS_REQUEST_CONFIRMED: c_int = WSABASEERR + 1009;\n-pub const WSA_QOS_ADMISSION_FAILURE: c_int = WSABASEERR + 1010;\n-pub const WSA_QOS_POLICY_FAILURE: c_int = WSABASEERR + 1011;\n-pub const WSA_QOS_BAD_STYLE: c_int = WSABASEERR + 1012;\n-pub const WSA_QOS_BAD_OBJECT: c_int = WSABASEERR + 1013;\n-pub const WSA_QOS_TRAFFIC_CTRL_ERROR: c_int = WSABASEERR + 1014;\n-pub const WSA_QOS_GENERIC_ERROR: c_int = WSABASEERR + 1015;\n-pub const WSA_QOS_ESERVICETYPE: c_int = WSABASEERR + 1016;\n-pub const WSA_QOS_EFLOWSPEC: c_int = WSABASEERR + 1017;\n-pub const WSA_QOS_EPROVSPECBUF: c_int = WSABASEERR + 1018;\n-pub const WSA_QOS_EFILTERSTYLE: c_int = WSABASEERR + 1019;\n-pub const WSA_QOS_EFILTERTYPE: c_int = WSABASEERR + 1020;\n-pub const WSA_QOS_EFILTERCOUNT: c_int = WSABASEERR + 1021;\n-pub const WSA_QOS_EOBJLENGTH: c_int = WSABASEERR + 1022;\n-pub const WSA_QOS_EFLOWCOUNT: c_int = WSABASEERR + 1023;\n-pub const WSA_QOS_EUNKNOWNPSOBJ: c_int = WSABASEERR + 1024;\n-pub const WSA_QOS_EUNKOWNPSOBJ: c_int = WSA_QOS_EUNKNOWNPSOBJ;\n-pub const WSA_QOS_EPOLICYOBJ: c_int = WSABASEERR + 1025;\n-pub const WSA_QOS_EFLOWDESC: c_int = WSABASEERR + 1026;\n-pub const WSA_QOS_EPSFLOWSPEC: c_int = WSABASEERR + 1027;\n-pub const WSA_QOS_EPSFILTERSPEC: c_int = WSABASEERR + 1028;\n-pub const WSA_QOS_ESDMODEOBJ: c_int = WSABASEERR + 1029;\n-pub const WSA_QOS_ESHAPERATEOBJ: c_int = WSABASEERR + 1030;\n-pub const WSA_QOS_RESERVED_PETYPE: c_int = WSABASEERR + 1031;"}, {"sha": "3e454199f13b18a1fb70ff246e64c21923dc05c0", "filename": "library/std/src/sys/windows/c/windows_sys.lst", "status": "added", "additions": 2590, "deletions": 0, "changes": 2590, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc%2Fwindows_sys.lst", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc%2Fwindows_sys.lst", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc%2Fwindows_sys.lst?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6"}, {"sha": "36a30f6ba56529573a955add4f274f64f9238d18", "filename": "library/std/src/sys/windows/c/windows_sys.rs", "status": "added", "additions": 4276, "deletions": 0, "changes": 4276, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc%2Fwindows_sys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc%2Fwindows_sys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc%2Fwindows_sys.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6"}, {"sha": "4fe95d41116b5e2d8ca83050f073e5832bf4b820", "filename": "library/std/src/sys/windows/compat.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fcompat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fcompat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fcompat.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -114,17 +114,20 @@ impl Module {\n     /// (e.g. kernel32 and ntdll).\n     pub unsafe fn new(name: &CStr) -> Option<Self> {\n         // SAFETY: A CStr is always null terminated.\n-        let module = c::GetModuleHandleA(name.as_ptr());\n+        let module = c::GetModuleHandleA(name.as_ptr().cast::<u8>());\n         NonNull::new(module).map(Self)\n     }\n \n     // Try to get the address of a function.\n     pub fn proc_address(self, name: &CStr) -> Option<NonNull<c_void>> {\n-        // SAFETY:\n-        // `self.0` will always be a valid module.\n-        // A CStr is always null terminated.\n-        let proc = unsafe { c::GetProcAddress(self.0.as_ptr(), name.as_ptr()) };\n-        NonNull::new(proc)\n+        unsafe {\n+            // SAFETY:\n+            // `self.0` will always be a valid module.\n+            // A CStr is always null terminated.\n+            let proc = c::GetProcAddress(self.0.as_ptr(), name.as_ptr().cast::<u8>());\n+            // SAFETY: `GetProcAddress` returns None on null.\n+            proc.map(|p| NonNull::new_unchecked(p as *mut c_void))\n+        }\n     }\n }\n \n@@ -199,6 +202,7 @@ macro_rules! compat_fn_optional {\n     )+) => (\n         $(\n             pub mod $symbol {\n+                #[allow(unused_imports)]\n                 use super::*;\n                 use crate::ffi::c_void;\n                 use crate::mem;"}, {"sha": "ce427766d17330fa75ab3154d10348e25efb9d38", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -89,6 +89,12 @@ pub struct FileTimes {\n     accessed: Option<c::FILETIME>,\n     modified: Option<c::FILETIME>,\n }\n+impl core::fmt::Debug for c::FILETIME {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        let time = ((self.dwHighDateTime as u64) << 32) | self.dwLowDateTime as u64;\n+        f.debug_tuple(\"FILETIME\").field(&time).finish()\n+    }\n+}\n \n #[derive(Debug)]\n pub struct DirBuilder;\n@@ -290,6 +296,7 @@ impl File {\n                 ptr::null_mut(),\n             )\n         };\n+        let handle = unsafe { HandleOrInvalid::from_raw_handle(handle) };\n         if let Ok(handle) = handle.try_into() {\n             Ok(File { handle: Handle::from_inner(handle) })\n         } else {\n@@ -501,7 +508,8 @@ impl File {\n     }\n \n     fn readlink(&self) -> io::Result<PathBuf> {\n-        let mut space = Align8([MaybeUninit::<u8>::uninit(); c::MAXIMUM_REPARSE_DATA_BUFFER_SIZE]);\n+        let mut space =\n+            Align8([MaybeUninit::<u8>::uninit(); c::MAXIMUM_REPARSE_DATA_BUFFER_SIZE as usize]);\n         let (_bytes, buf) = self.reparse_point(&mut space)?;\n         unsafe {\n             let (path_buffer, subst_off, subst_len, relative) = match (*buf).ReparseTag {\n@@ -589,7 +597,11 @@ impl File {\n             ));\n         }\n         cvt(unsafe {\n-            c::SetFileTime(self.as_handle(), None, times.accessed.as_ref(), times.modified.as_ref())\n+            let accessed =\n+                times.accessed.as_ref().map(|a| a as *const c::FILETIME).unwrap_or(ptr::null());\n+            let modified =\n+                times.modified.as_ref().map(|a| a as *const c::FILETIME).unwrap_or(ptr::null());\n+            c::SetFileTime(self.as_raw_handle(), ptr::null_mut(), accessed, modified)\n         })?;\n         Ok(())\n     }\n@@ -618,9 +630,9 @@ impl File {\n     /// then errors will be `ERROR_NOT_SUPPORTED` or `ERROR_INVALID_PARAMETER`.\n     fn posix_delete(&self) -> io::Result<()> {\n         let mut info = c::FILE_DISPOSITION_INFO_EX {\n-            Flags: c::FILE_DISPOSITION_DELETE\n-                | c::FILE_DISPOSITION_POSIX_SEMANTICS\n-                | c::FILE_DISPOSITION_IGNORE_READONLY_ATTRIBUTE,\n+            Flags: c::FILE_DISPOSITION_FLAG_DELETE\n+                | c::FILE_DISPOSITION_FLAG_POSIX_SEMANTICS\n+                | c::FILE_DISPOSITION_FLAG_IGNORE_READONLY_ATTRIBUTE,\n         };\n         let size = mem::size_of_val(&info);\n         cvt(unsafe {\n@@ -791,23 +803,23 @@ fn open_link_no_reparse(parent: &File, name: &[u16], access: u32) -> io::Result<\n     // See https://docs.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntcreatefile\n     unsafe {\n         let mut handle = ptr::null_mut();\n-        let mut io_status = c::IO_STATUS_BLOCK::default();\n-        let name_str = c::UNICODE_STRING::from_ref(name);\n+        let mut io_status = c::IO_STATUS_BLOCK::PENDING;\n+        let mut name_str = c::UNICODE_STRING::from_ref(name);\n         use crate::sync::atomic::{AtomicU32, Ordering};\n         // The `OBJ_DONT_REPARSE` attribute ensures that we haven't been\n         // tricked into following a symlink. However, it may not be available in\n         // earlier versions of Windows.\n         static ATTRIBUTES: AtomicU32 = AtomicU32::new(c::OBJ_DONT_REPARSE);\n-        let object = c::OBJECT_ATTRIBUTES {\n-            ObjectName: &name_str,\n+        let mut object = c::OBJECT_ATTRIBUTES {\n+            ObjectName: &mut name_str,\n             RootDirectory: parent.as_raw_handle(),\n             Attributes: ATTRIBUTES.load(Ordering::Relaxed),\n             ..c::OBJECT_ATTRIBUTES::default()\n         };\n         let status = c::NtCreateFile(\n             &mut handle,\n             access,\n-            &object,\n+            &mut object,\n             &mut io_status,\n             crate::ptr::null_mut(),\n             0,\n@@ -1368,7 +1380,7 @@ pub fn copy(from: &Path, to: &Path) -> io::Result<u64> {\n         _dwCallbackReason: c::DWORD,\n         _hSourceFile: c::HANDLE,\n         _hDestinationFile: c::HANDLE,\n-        lpData: c::LPVOID,\n+        lpData: c::LPCVOID,\n     ) -> c::DWORD {\n         if dwStreamNumber == 1 {\n             *(lpData as *mut i64) = StreamBytesTransferred;\n@@ -1415,9 +1427,10 @@ fn symlink_junction_inner(original: &Path, junction: &Path) -> io::Result<()> {\n     let f = File::open(junction, &opts)?;\n     let h = f.as_inner().as_raw_handle();\n     unsafe {\n-        let mut data = Align8([MaybeUninit::<u8>::uninit(); c::MAXIMUM_REPARSE_DATA_BUFFER_SIZE]);\n+        let mut data =\n+            Align8([MaybeUninit::<u8>::uninit(); c::MAXIMUM_REPARSE_DATA_BUFFER_SIZE as usize]);\n         let data_ptr = data.0.as_mut_ptr();\n-        let data_end = data_ptr.add(c::MAXIMUM_REPARSE_DATA_BUFFER_SIZE);\n+        let data_end = data_ptr.add(c::MAXIMUM_REPARSE_DATA_BUFFER_SIZE as usize);\n         let db = data_ptr.cast::<c::REPARSE_MOUNTPOINT_DATA_BUFFER>();\n         // Zero the header to ensure it's fully initialized, including reserved parameters.\n         *db = mem::zeroed();"}, {"sha": "84c1fbde32d2fd7bfac9bf4b8aac9b43c79fd15c", "filename": "library/std/src/sys/windows/handle.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fhandle.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -144,7 +144,7 @@ impl Handle {\n         let len = cmp::min(buf.len(), <c::DWORD>::MAX as usize) as c::DWORD;\n         let mut amt = 0;\n         let res = cvt(c::ReadFile(\n-            self.as_handle(),\n+            self.as_raw_handle(),\n             buf.as_ptr() as c::LPVOID,\n             len,\n             &mut amt,\n@@ -235,7 +235,7 @@ impl Handle {\n         len: usize,\n         offset: Option<u64>,\n     ) -> io::Result<usize> {\n-        let mut io_status = c::IO_STATUS_BLOCK::default();\n+        let mut io_status = c::IO_STATUS_BLOCK::PENDING;\n \n         // The length is clamped at u32::MAX.\n         let len = cmp::min(len, c::DWORD::MAX as usize) as c::DWORD;\n@@ -283,7 +283,7 @@ impl Handle {\n     ///\n     /// If `offset` is `None` then the current file position is used.\n     fn synchronous_write(&self, buf: &[u8], offset: Option<u64>) -> io::Result<usize> {\n-        let mut io_status = c::IO_STATUS_BLOCK::default();\n+        let mut io_status = c::IO_STATUS_BLOCK::PENDING;\n \n         // The length is clamped at u32::MAX.\n         let len = cmp::min(buf.len(), c::DWORD::MAX as usize) as c::DWORD;"}, {"sha": "fc9856caed62fc547c07b3997338aecc07e2a70d", "filename": "library/std/src/sys/windows/io.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fio.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -17,10 +17,7 @@ impl<'a> IoSlice<'a> {\n     pub fn new(buf: &'a [u8]) -> IoSlice<'a> {\n         assert!(buf.len() <= c::ULONG::MAX as usize);\n         IoSlice {\n-            vec: c::WSABUF {\n-                len: buf.len() as c::ULONG,\n-                buf: buf.as_ptr() as *mut u8 as *mut c::CHAR,\n-            },\n+            vec: c::WSABUF { len: buf.len() as c::ULONG, buf: buf.as_ptr() as *mut u8 },\n             _p: PhantomData,\n         }\n     }\n@@ -54,7 +51,7 @@ impl<'a> IoSliceMut<'a> {\n     pub fn new(buf: &'a mut [u8]) -> IoSliceMut<'a> {\n         assert!(buf.len() <= c::ULONG::MAX as usize);\n         IoSliceMut {\n-            vec: c::WSABUF { len: buf.len() as c::ULONG, buf: buf.as_mut_ptr() as *mut c::CHAR },\n+            vec: c::WSABUF { len: buf.len() as c::ULONG, buf: buf.as_mut_ptr() },\n             _p: PhantomData,\n         }\n     }"}, {"sha": "2404bbe2b893a047215aae89afec601dc11215b6", "filename": "library/std/src/sys/windows/net.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fnet.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -263,7 +263,7 @@ impl Socket {\n                 &mut nread,\n                 &mut flags,\n                 ptr::null_mut(),\n-                ptr::null_mut(),\n+                None,\n             )\n         };\n \n@@ -347,7 +347,7 @@ impl Socket {\n                 &mut nwritten,\n                 0,\n                 ptr::null_mut(),\n-                ptr::null_mut(),\n+                None,\n             )\n         };\n         cvt(result).map(|_| nwritten as usize)"}, {"sha": "d07147eccc1d347092bb628b4b5bceefa1bd25f3", "filename": "library/std/src/sys/windows/pipe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fpipe.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -373,7 +373,7 @@ impl AnonPipe {\n \n         // Asynchronous read of the pipe.\n         // If successful, `callback` will be called once it completes.\n-        let result = io(self.inner.as_handle(), buf, len, &mut overlapped, callback);\n+        let result = io(self.inner.as_handle(), buf, len, &mut overlapped, Some(callback));\n         if result == c::FALSE {\n             // We can return here because the call failed.\n             // After this we must not return until the I/O completes."}, {"sha": "df3667c0fd7886818749ad6702112eda3e5ee192", "filename": "library/std/src/sys/windows/process.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -308,7 +308,7 @@ impl Command {\n         let stderr = stderr.to_handle(c::STD_ERROR_HANDLE, &mut pipes.stderr)?;\n \n         let mut si = zeroed_startupinfo();\n-        si.cb = mem::size_of::<c::STARTUPINFO>() as c::DWORD;\n+        si.cb = mem::size_of::<c::STARTUPINFOW>() as c::DWORD;\n \n         // If at least one of stdin, stdout or stderr are set (i.e. are non null)\n         // then set the `hStd` fields in `STARTUPINFO`.\n@@ -332,7 +332,7 @@ impl Command {\n                 flags,\n                 envp,\n                 dirp,\n-                &mut si,\n+                &si,\n                 &mut pi,\n             ))\n         }?;\n@@ -720,8 +720,8 @@ impl From<u32> for ExitCode {\n     }\n }\n \n-fn zeroed_startupinfo() -> c::STARTUPINFO {\n-    c::STARTUPINFO {\n+fn zeroed_startupinfo() -> c::STARTUPINFOW {\n+    c::STARTUPINFOW {\n         cb: 0,\n         lpReserved: ptr::null_mut(),\n         lpDesktop: ptr::null_mut(),\n@@ -731,7 +731,7 @@ fn zeroed_startupinfo() -> c::STARTUPINFO {\n         dwXSize: 0,\n         dwYSize: 0,\n         dwXCountChars: 0,\n-        dwYCountCharts: 0,\n+        dwYCountChars: 0,\n         dwFillAttribute: 0,\n         dwFlags: 0,\n         wShowWindow: 0,"}, {"sha": "bca4e38d9f62c6c9df2ae4af4ef319ab8fddabcf", "filename": "library/std/src/sys/windows/rand.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Frand.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -1,3 +1,4 @@\n+use crate::ffi::c_void;\n use crate::io;\n use crate::mem;\n use crate::ptr;\n@@ -25,8 +26,9 @@ pub fn hashmap_random_keys() -> (u64, u64) {\n #[inline(never)]\n fn fallback_rng() -> (u64, u64) {\n     let mut v = (0, 0);\n-    let ret =\n-        unsafe { c::RtlGenRandom(&mut v as *mut _ as *mut u8, mem::size_of_val(&v) as c::ULONG) };\n+    let ret = unsafe {\n+        c::RtlGenRandom(&mut v as *mut _ as *mut c_void, mem::size_of_val(&v) as c::ULONG)\n+    };\n \n     if ret != 0 { v } else { panic!(\"fallback RNG broken: {}\", io::Error::last_os_error()) }\n }"}, {"sha": "0caf0a317a4aa1e8597259f90d2ca937936d3516", "filename": "library/std/src/sys/windows/stack_overflow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstack_overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstack_overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstack_overflow.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -18,7 +18,7 @@ impl Handler {\n     }\n }\n \n-extern \"system\" fn vectored_handler(ExceptionInfo: *mut c::EXCEPTION_POINTERS) -> c::LONG {\n+unsafe extern \"system\" fn vectored_handler(ExceptionInfo: *mut c::EXCEPTION_POINTERS) -> c::LONG {\n     unsafe {\n         let rec = &(*(*ExceptionInfo).ExceptionRecord);\n         let code = rec.ExceptionCode;\n@@ -34,7 +34,7 @@ extern \"system\" fn vectored_handler(ExceptionInfo: *mut c::EXCEPTION_POINTERS) -\n }\n \n pub unsafe fn init() {\n-    if c::AddVectoredExceptionHandler(0, vectored_handler).is_null() {\n+    if c::AddVectoredExceptionHandler(0, Some(vectored_handler)).is_null() {\n         panic!(\"failed to install exception handler\");\n     }\n     // Set the thread stack guarantee for the main thread."}, {"sha": "2e3e0859dc18e69e437a475454305267231d45d6", "filename": "library/std/src/sys/windows/stdio.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -180,7 +180,7 @@ fn write_valid_utf8_to_console(handle: c::HANDLE, utf8: &str) -> io::Result<usiz\n         let result = c::MultiByteToWideChar(\n             c::CP_UTF8,                      // CodePage\n             c::MB_ERR_INVALID_CHARS,         // dwFlags\n-            utf8.as_ptr() as c::LPCCH,       // lpMultiByteStr\n+            utf8.as_ptr(),                   // lpMultiByteStr\n             utf8.len() as c::c_int,          // cbMultiByte\n             utf16.as_mut_ptr() as c::LPWSTR, // lpWideCharStr\n             utf16.len() as c::c_int,         // cchWideChar\n@@ -344,7 +344,7 @@ fn read_u16s(handle: c::HANDLE, buf: &mut [MaybeUninit<u16>]) -> io::Result<usiz\n     // See #38274 and https://stackoverflow.com/questions/43836040/win-api-readconsole.\n     const CTRL_Z: u16 = 0x1A;\n     const CTRL_Z_MASK: c::ULONG = 1 << CTRL_Z;\n-    let mut input_control = c::CONSOLE_READCONSOLE_CONTROL {\n+    let input_control = c::CONSOLE_READCONSOLE_CONTROL {\n         nLength: crate::mem::size_of::<c::CONSOLE_READCONSOLE_CONTROL>() as c::ULONG,\n         nInitialChars: 0,\n         dwCtrlWakeupMask: CTRL_Z_MASK,\n@@ -360,7 +360,7 @@ fn read_u16s(handle: c::HANDLE, buf: &mut [MaybeUninit<u16>]) -> io::Result<usiz\n                 buf.as_mut_ptr() as c::LPVOID,\n                 buf.len() as u32,\n                 &mut amount,\n-                &mut input_control as c::PCONSOLE_READCONSOLE_CONTROL,\n+                &input_control,\n             )\n         })?;\n \n@@ -385,14 +385,14 @@ fn utf16_to_utf8(utf16: &[u16], utf8: &mut [u8]) -> io::Result<usize> {\n \n     let result = unsafe {\n         c::WideCharToMultiByte(\n-            c::CP_UTF8,                    // CodePage\n-            c::WC_ERR_INVALID_CHARS,       // dwFlags\n-            utf16.as_ptr(),                // lpWideCharStr\n-            utf16.len() as c::c_int,       // cchWideChar\n-            utf8.as_mut_ptr() as c::LPSTR, // lpMultiByteStr\n-            utf8.len() as c::c_int,        // cbMultiByte\n-            ptr::null(),                   // lpDefaultChar\n-            ptr::null_mut(),               // lpUsedDefaultChar\n+            c::CP_UTF8,              // CodePage\n+            c::WC_ERR_INVALID_CHARS, // dwFlags\n+            utf16.as_ptr(),          // lpWideCharStr\n+            utf16.len() as c::c_int, // cchWideChar\n+            utf8.as_mut_ptr(),       // lpMultiByteStr\n+            utf8.len() as c::c_int,  // cbMultiByte\n+            ptr::null(),             // lpDefaultChar\n+            ptr::null_mut(),         // lpUsedDefaultChar\n         )\n     };\n     if result == 0 {"}, {"sha": "18cecb65681d228e45fe100ef7ca143fccc359ba", "filename": "library/std/src/sys/windows/thread.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fthread.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -2,6 +2,7 @@ use crate::ffi::CStr;\n use crate::io;\n use crate::num::NonZeroUsize;\n use crate::os::windows::io::AsRawHandle;\n+use crate::os::windows::io::HandleOrNull;\n use crate::ptr;\n use crate::sys::c;\n use crate::sys::handle::Handle;\n@@ -32,12 +33,12 @@ impl Thread {\n         let ret = c::CreateThread(\n             ptr::null_mut(),\n             stack,\n-            thread_start,\n+            Some(thread_start),\n             p as *mut _,\n             c::STACK_SIZE_PARAM_IS_A_RESERVATION,\n             ptr::null_mut(),\n         );\n-\n+        let ret = HandleOrNull::from_raw_handle(ret);\n         return if let Ok(handle) = ret.try_into() {\n             Ok(Thread { handle: Handle::from_inner(handle) })\n         } else {"}, {"sha": "b7c549964d6107cc65675e0ae506844832b6b4f0", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -838,6 +838,7 @@ impl<'a> Builder<'a> {\n                 run::Miri,\n                 run::CollectLicenseMetadata,\n                 run::GenerateCopyright,\n+                run::GenerateWindowsSys,\n             ),\n             Kind::Setup => describe!(setup::Profile, setup::Hook, setup::Link, setup::Vscode),\n             Kind::Clean => describe!(clean::CleanAll, clean::Rustc, clean::Std),"}, {"sha": "57f3119e32230f63c4059c0aa722e34ee43d3e17", "filename": "src/bootstrap/run.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/src%2Fbootstrap%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/src%2Fbootstrap%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Frun.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -253,3 +253,25 @@ impl Step for GenerateCopyright {\n         dest\n     }\n }\n+\n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, Hash, PartialEq, Eq)]\n+pub struct GenerateWindowsSys;\n+\n+impl Step for GenerateWindowsSys {\n+    type Output = ();\n+    const ONLY_HOSTS: bool = true;\n+\n+    fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n+        run.path(\"src/tools/generate-windows-sys\")\n+    }\n+\n+    fn make_run(run: RunConfig<'_>) {\n+        run.builder.ensure(GenerateWindowsSys);\n+    }\n+\n+    fn run(self, builder: &Builder<'_>) {\n+        let mut cmd = builder.tool_cmd(Tool::GenerateWindowsSys);\n+        cmd.arg(&builder.src);\n+        builder.run(&mut cmd);\n+    }\n+}"}, {"sha": "f13d365e3754db93e175aa919934387b34d9e4b5", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -301,6 +301,7 @@ bootstrap_tool!(\n     CollectLicenseMetadata, \"src/tools/collect-license-metadata\", \"collect-license-metadata\";\n     GenerateCopyright, \"src/tools/generate-copyright\", \"generate-copyright\";\n     SuggestTests, \"src/tools/suggest-tests\", \"suggest-tests\";\n+    GenerateWindowsSys, \"src/tools/generate-windows-sys\", \"generate-windows-sys\";\n );\n \n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq, Ord, PartialOrd)]"}, {"sha": "23e88844bd0b8ded28ab90ce3bdfd5610561d92c", "filename": "src/tools/generate-windows-sys/Cargo.toml", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/src%2Ftools%2Fgenerate-windows-sys%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/src%2Ftools%2Fgenerate-windows-sys%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fgenerate-windows-sys%2FCargo.toml?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -0,0 +1,7 @@\n+[package]\n+name = \"generate-windows-sys\"\n+version = \"0.1.0\"\n+edition = \"2021\"\n+\n+[dependencies.windows-bindgen]\n+version = \"0.49\""}, {"sha": "91d981462e816df1d2c496a95843c28aadeab9f3", "filename": "src/tools/generate-windows-sys/src/main.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/src%2Ftools%2Fgenerate-windows-sys%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6/src%2Ftools%2Fgenerate-windows-sys%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fgenerate-windows-sys%2Fsrc%2Fmain.rs?ref=7e7483d26e3cec7a44ef00cf7ae6c9c8c918bec6", "patch": "@@ -0,0 +1,37 @@\n+use std::fs;\n+use std::io::{self, Write};\n+use std::path::PathBuf;\n+\n+/// This is printed to the file before the rest of the contents.\n+const PRELUDE: &str = r#\"// This file is autogenerated.\n+//\n+// To add bindings, edit windows_sys.lst then use `./x run generate-windows-sys` to\n+// regenerate the bindings.\n+//\n+// ignore-tidy-filelength\n+\"#;\n+\n+fn main() -> io::Result<()> {\n+    let mut path: PathBuf =\n+        std::env::args_os().nth(1).expect(\"a path to the rust repository is required\").into();\n+    path.push(\"library/std/src/sys/windows/c/windows_sys.lst\");\n+\n+    // Load the list of APIs\n+    let buffer = fs::read_to_string(&path)?;\n+    let names: Vec<&str> = buffer\n+        .lines()\n+        .filter_map(|line| {\n+            let line = line.trim();\n+            if line.is_empty() || line.starts_with(\"//\") { None } else { Some(line) }\n+        })\n+        .collect();\n+\n+    // Write the bindings to windows-sys.rs\n+    let bindings = windows_bindgen::standalone_std(&names);\n+    path.set_extension(\"rs\");\n+    let mut f = std::fs::File::create(&path)?;\n+    f.write_all(PRELUDE.as_bytes())?;\n+    f.write_all(bindings.as_bytes())?;\n+\n+    Ok(())\n+}"}]}