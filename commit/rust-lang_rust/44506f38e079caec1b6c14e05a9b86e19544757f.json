{"sha": "44506f38e079caec1b6c14e05a9b86e19544757f", "node_id": "C_kwDOAAsO6NoAKDQ0NTA2ZjM4ZTA3OWNhZWMxYjZjMTRlMDVhOWI4NmUxOTU0NDc1N2Y", "commit": {"author": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2022-09-14T13:00:00Z"}, "committer": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2022-09-15T08:05:00Z"}, "message": "add note for `layout_of` when query depth overflows", "tree": {"sha": "a8c4f9a28778b1afc1ade67efcb326e43c908d68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8c4f9a28778b1afc1ade67efcb326e43c908d68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44506f38e079caec1b6c14e05a9b86e19544757f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44506f38e079caec1b6c14e05a9b86e19544757f", "html_url": "https://github.com/rust-lang/rust/commit/44506f38e079caec1b6c14e05a9b86e19544757f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44506f38e079caec1b6c14e05a9b86e19544757f/comments", "author": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3f59295fecb9a7cb067bc4a5b50f779e159a55b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3f59295fecb9a7cb067bc4a5b50f779e159a55b", "html_url": "https://github.com/rust-lang/rust/commit/c3f59295fecb9a7cb067bc4a5b50f779e159a55b"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "050a41fc7f9dda9d49a15d20fa522cea3c926e63", "filename": "compiler/rustc_error_messages/locales/en-US/query_system.ftl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44506f38e079caec1b6c14e05a9b86e19544757f/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fquery_system.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/44506f38e079caec1b6c14e05a9b86e19544757f/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fquery_system.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fquery_system.ftl?ref=44506f38e079caec1b6c14e05a9b86e19544757f", "patch": "@@ -23,3 +23,5 @@ query_system_cycle_recursive_trait_alias = trait aliases cannot be recursive\n query_system_cycle_which_requires = ...which requires {$desc}...\n \n query_system_query_overflow = queries overflow the depth limit!\n+\n+query_system_layout_of_depth = Query depth increased by {$depth} when {$desc}!"}, {"sha": "3ca657cbca17c2c86d788651f87cd268a5b6d3a2", "filename": "compiler/rustc_query_impl/src/plumbing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44506f38e079caec1b6c14e05a9b86e19544757f/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44506f38e079caec1b6c14e05a9b86e19544757f/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs?ref=44506f38e079caec1b6c14e05a9b86e19544757f", "patch": "@@ -109,7 +109,7 @@ impl QueryContext for QueryCtxt<'_> {\n         // when accessing the `ImplicitCtxt`.\n         tls::with_related_context(**self, move |current_icx| {\n             if depth_limit && !self.recursion_limit().value_within_limit(current_icx.query_depth) {\n-                self.depth_limit_error();\n+                self.depth_limit_error(token);\n             }\n \n             // Update the `ImplicitCtxt` to point to our new query job."}, {"sha": "5f57a1510aa5ff4e275085c51147da8a32b62100", "filename": "compiler/rustc_query_system/src/error.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/44506f38e079caec1b6c14e05a9b86e19544757f/compiler%2Frustc_query_system%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44506f38e079caec1b6c14e05a9b86e19544757f/compiler%2Frustc_query_system%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Ferror.rs?ref=44506f38e079caec1b6c14e05a9b86e19544757f", "patch": "@@ -77,4 +77,16 @@ pub struct IncrementCompilation {\n \n #[derive(SessionDiagnostic)]\n #[diag(query_system::query_overflow)]\n-pub struct QueryOverflow;\n+pub struct QueryOverflow {\n+    #[subdiagnostic]\n+    pub layout_of_depth: Option<LayoutOfDepth>,\n+}\n+\n+#[derive(SessionSubdiagnostic)]\n+#[note(query_system::layout_of_depth)]\n+pub struct LayoutOfDepth {\n+    #[primary_span]\n+    pub span: Span,\n+    pub desc: String,\n+    pub depth: usize,\n+}"}, {"sha": "a5ea3a098a64902fd14386f290ebec29078ae527", "filename": "compiler/rustc_query_system/src/query/job.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/44506f38e079caec1b6c14e05a9b86e19544757f/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44506f38e079caec1b6c14e05a9b86e19544757f/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fjob.rs?ref=44506f38e079caec1b6c14e05a9b86e19544757f", "patch": "@@ -59,6 +59,7 @@ impl QueryJobId {\n     }\n }\n \n+#[derive(Clone)]\n pub struct QueryJobInfo {\n     pub query: QueryStackFrame,\n     pub job: QueryJob,\n@@ -116,10 +117,10 @@ impl QueryJob {\n     }\n }\n \n-#[cfg(not(parallel_compiler))]\n impl QueryJobId {\n     #[cold]\n     #[inline(never)]\n+    #[cfg(not(parallel_compiler))]\n     pub(super) fn find_cycle_in_stack(\n         &self,\n         query_map: QueryMap,\n@@ -156,6 +157,27 @@ impl QueryJobId {\n \n         panic!(\"did not find a cycle\")\n     }\n+\n+    #[cold]\n+    #[inline(never)]\n+    pub(super) fn try_find_layout_root(\n+        &self,\n+        query_map: QueryMap,\n+    ) -> Option<(QueryJobInfo, usize)> {\n+        let mut last_layout = None;\n+        let mut current_id = Some(*self);\n+        let mut depth = 0;\n+\n+        while let Some(id) = current_id {\n+            let info = query_map.get(&id).unwrap();\n+            if info.query.name == \"layout_of\" {\n+                depth += 1;\n+                last_layout = Some((info.clone(), depth));\n+            }\n+            current_id = info.job.parent;\n+        }\n+        last_layout\n+    }\n }\n \n #[cfg(parallel_compiler)]"}, {"sha": "e29e8815331eec48eb2f5349598ece26f5db728a", "filename": "compiler/rustc_query_system/src/query/mod.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/44506f38e079caec1b6c14e05a9b86e19544757f/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44506f38e079caec1b6c14e05a9b86e19544757f/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fmod.rs?ref=44506f38e079caec1b6c14e05a9b86e19544757f", "patch": "@@ -123,7 +123,18 @@ pub trait QueryContext: HasDepContext {\n         compute: impl FnOnce() -> R,\n     ) -> R;\n \n-    fn depth_limit_error(&self) {\n-        self.dep_context().sess().emit_fatal(crate::error::QueryOverflow);\n+    fn depth_limit_error(&self, job: QueryJobId) {\n+        let sess = self.dep_context().sess();\n+        let mut layout_of_depth = None;\n+        if let Some(map) = self.try_collect_active_jobs() {\n+            if let Some((info, depth)) = job.try_find_layout_root(map) {\n+                layout_of_depth = Some(crate::error::LayoutOfDepth {\n+                    span: info.job.span,\n+                    desc: info.query.description,\n+                    depth,\n+                });\n+            }\n+        }\n+        sess.emit_fatal(crate::error::QueryOverflow { layout_of_depth });\n     }\n }"}]}