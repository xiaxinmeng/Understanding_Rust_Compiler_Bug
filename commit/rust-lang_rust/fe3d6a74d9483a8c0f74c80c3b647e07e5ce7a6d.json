{"sha": "fe3d6a74d9483a8c0f74c80c3b647e07e5ce7a6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlM2Q2YTc0ZDk0ODNhOGMwZjc0YzgwYzNiNjQ3ZTA3ZTVjZTdhNmQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-07-07T03:17:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-07T03:17:42Z"}, "message": "Rollup merge of #86906 - juniorbassani:update-sync-docs, r=yaahc\n\nReplace deprecated compare_and_swap and fix typo in core::sync::atomic::{fence, compiler_fence} docs", "tree": {"sha": "806541b68bd25beea81ac22d899240c6eaddb20f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/806541b68bd25beea81ac22d899240c6eaddb20f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe3d6a74d9483a8c0f74c80c3b647e07e5ce7a6d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg5RzWCRBK7hj4Ov3rIwAAEZYIAFDdLugMZXAO1OPyAXK+4uox\neKrFJvctFd9ujkmG2pLOsdIiRhaeErxow5q1aCWyoiT/6JOL87YIBFKuM0dYB5Sn\nUPjASxY8t+teUXgvfJkbysRGoNqV+pDKzpJHfVol3JsaKH6ToHAs1VcMzZiqvQiv\nbWGFvjq8j5Cypu2tNP30wrbTMZ13QyDWPu+YBlkW0YCZ7COz0hboEzvhBbHs6RqT\nxXKXtqMhGZ7EgEh++f0uMLVYhNY6CeWhVUx/56EwHkxJKU3VLZhnlJdNHCZixQ3D\ndnbbGfWxzc17EuC9yq4qlfchWHkFq5Avx1DypzSEZhDsLGN3ImoZNw5stYm31zA=\n=fadC\n-----END PGP SIGNATURE-----\n", "payload": "tree 806541b68bd25beea81ac22d899240c6eaddb20f\nparent c630b6b0fc21bf8dfcd49d9e8e675bbde4822a17\nparent 0d61e6e8d68be269c57d1d067f29a8a0e5eb6e29\nauthor Yuki Okushi <jtitor@2k36.org> 1625627862 +0900\ncommitter GitHub <noreply@github.com> 1625627862 +0900\n\nRollup merge of #86906 - juniorbassani:update-sync-docs, r=yaahc\n\nReplace deprecated compare_and_swap and fix typo in core::sync::atomic::{fence, compiler_fence} docs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe3d6a74d9483a8c0f74c80c3b647e07e5ce7a6d", "html_url": "https://github.com/rust-lang/rust/commit/fe3d6a74d9483a8c0f74c80c3b647e07e5ce7a6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe3d6a74d9483a8c0f74c80c3b647e07e5ce7a6d/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c630b6b0fc21bf8dfcd49d9e8e675bbde4822a17", "url": "https://api.github.com/repos/rust-lang/rust/commits/c630b6b0fc21bf8dfcd49d9e8e675bbde4822a17", "html_url": "https://github.com/rust-lang/rust/commit/c630b6b0fc21bf8dfcd49d9e8e675bbde4822a17"}, {"sha": "0d61e6e8d68be269c57d1d067f29a8a0e5eb6e29", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d61e6e8d68be269c57d1d067f29a8a0e5eb6e29", "html_url": "https://github.com/rust-lang/rust/commit/0d61e6e8d68be269c57d1d067f29a8a0e5eb6e29"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "b673b36c10211a3c13f8d2168b64caea740d8288", "filename": "library/core/src/sync/atomic.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fe3d6a74d9483a8c0f74c80c3b647e07e5ce7a6d/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe3d6a74d9483a8c0f74c80c3b647e07e5ce7a6d/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs?ref=fe3d6a74d9483a8c0f74c80c3b647e07e5ce7a6d", "patch": "@@ -2648,7 +2648,11 @@ unsafe fn atomic_umin<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {\n ///\n ///     pub fn lock(&self) {\n ///         // Wait until the old value is `false`.\n-///         while self.flag.compare_and_swap(false, true, Ordering::Relaxed) != false {}\n+///         while self\n+///             .flag\n+///             .compare_exchange_weak(false, true, Ordering::Relaxed, Ordering::Relaxed)\n+///             .is_err()\n+///         {}\n ///         // This fence synchronizes-with store in `unlock`.\n ///         fence(Ordering::Acquire);\n ///     }\n@@ -2710,7 +2714,7 @@ pub fn fence(order: Ordering) {\n /// Without `compiler_fence`, the `assert_eq!` in following code\n /// is *not* guaranteed to succeed, despite everything happening in a single thread.\n /// To see why, remember that the compiler is free to swap the stores to\n-/// `IMPORTANT_VARIABLE` and `IS_READ` since they are both\n+/// `IMPORTANT_VARIABLE` and `IS_READY` since they are both\n /// `Ordering::Relaxed`. If it does, and the signal handler is invoked right\n /// after `IS_READY` is updated, then the signal handler will see\n /// `IS_READY=1`, but `IMPORTANT_VARIABLE=0`."}]}