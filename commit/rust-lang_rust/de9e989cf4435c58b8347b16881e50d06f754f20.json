{"sha": "de9e989cf4435c58b8347b16881e50d06f754f20", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlOWU5ODljZjQ0MzVjNThiODM0N2IxNjg4MWU1MGQwNmY3NTRmMjA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-11T10:05:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-11T10:05:28Z"}, "message": "Merge #9209\n\n9209: Don't suggest Remove unused param in trait impls r=Veykril a=Maan2003\n\nSee the added test for description\n\nCo-authored-by: Maan2003 <manmeetmann2003@gmail.com>", "tree": {"sha": "fce9e9c911dd35aa5f1f00c9825beb08f0edd72a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fce9e9c911dd35aa5f1f00c9825beb08f0edd72a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de9e989cf4435c58b8347b16881e50d06f754f20", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgwzVoCRBK7hj4Ov3rIwAAiZMIAGEhzLFsLRXwJsmD1hLYTe9V\nTs2CWP5dNoJ2kcQ/RJSs7XOjUSdPVU+0MM+5GhwCXmsiHNn3wUdLFzqcmh1ncJMS\nZ09taL/40w4GvY9lE9ga/0dzurmCRWcAzU8Cbl0OzLMKxaMaC1xnrwFMWJQPGuo+\nsnNyWcO/V+Za7C+ascJi/QsEPmgLjvHXWmW+uv++5CJs7jpOgl+t7sxBaATXcWZj\nvywa7vH5gvKIm0Y5aWTNzKk9lma+JqP+FmGFqU0n9nRraQYmnMxPXGWuguuJtsu9\ndNxtv34Zbcmjy81rzlqLxPNcs/GIP2mH0bFVzdmLwOdTWJUL06CK5n2/ChFV7XA=\n=/J9w\n-----END PGP SIGNATURE-----\n", "payload": "tree fce9e9c911dd35aa5f1f00c9825beb08f0edd72a\nparent c62ec3d9986d45224d4c64ba9b7b22c1d1d0afb2\nparent 7f71000c12248b0d19833dcd749ca1ec5871dda3\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1623405928 +0000\ncommitter GitHub <noreply@github.com> 1623405928 +0000\n\nMerge #9209\n\n9209: Don't suggest Remove unused param in trait impls r=Veykril a=Maan2003\n\nSee the added test for description\n\nCo-authored-by: Maan2003 <manmeetmann2003@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de9e989cf4435c58b8347b16881e50d06f754f20", "html_url": "https://github.com/rust-lang/rust/commit/de9e989cf4435c58b8347b16881e50d06f754f20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de9e989cf4435c58b8347b16881e50d06f754f20/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c62ec3d9986d45224d4c64ba9b7b22c1d1d0afb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c62ec3d9986d45224d4c64ba9b7b22c1d1d0afb2", "html_url": "https://github.com/rust-lang/rust/commit/c62ec3d9986d45224d4c64ba9b7b22c1d1d0afb2"}, {"sha": "7f71000c12248b0d19833dcd749ca1ec5871dda3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f71000c12248b0d19833dcd749ca1ec5871dda3", "html_url": "https://github.com/rust-lang/rust/commit/7f71000c12248b0d19833dcd749ca1ec5871dda3"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "fabfe7e93dfa46bb613f12a01b828c32ea9cc07b", "filename": "crates/ide_assists/src/handlers/remove_unused_param.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/de9e989cf4435c58b8347b16881e50d06f754f20/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fremove_unused_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de9e989cf4435c58b8347b16881e50d06f754f20/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fremove_unused_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fremove_unused_param.rs?ref=de9e989cf4435c58b8347b16881e50d06f754f20", "patch": "@@ -37,8 +37,20 @@ pub(crate) fn remove_unused_param(acc: &mut Assists, ctx: &AssistContext) -> Opt\n         _ => return None,\n     };\n     let func = param.syntax().ancestors().find_map(ast::Fn::cast)?;\n-    let param_position = func.param_list()?.params().position(|it| it == param)?;\n \n+    // check if fn is in impl Trait for ..\n+    if func\n+        .syntax()\n+        .parent() // AssocItemList\n+        .and_then(|x| x.parent())\n+        .and_then(ast::Impl::cast)\n+        .map_or(false, |imp| imp.trait_().is_some())\n+    {\n+        cov_mark::hit!(trait_impl);\n+        return None;\n+    }\n+\n+    let param_position = func.param_list()?.params().position(|it| it == param)?;\n     let fn_def = {\n         let func = ctx.sema.to_def(&func)?;\n         Definition::ModuleDef(func.into())\n@@ -253,6 +265,22 @@ fn main() { foo(9, 2) }\n         );\n     }\n \n+    #[test]\n+    fn trait_impl() {\n+        cov_mark::check!(trait_impl);\n+        check_assist_not_applicable(\n+            remove_unused_param,\n+            r#\"\n+trait Trait {\n+    fn foo(x: i32);\n+}\n+impl Trait for () {\n+    fn foo($0x: i32) {}\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn remove_across_files() {\n         check_assist("}]}