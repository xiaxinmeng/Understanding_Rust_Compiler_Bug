{"sha": "1beaea26ff447b267ac11102d3c5d27a38820894", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiZWFlYTI2ZmY0NDdiMjY3YWMxMTEwMmQzYzVkMjdhMzg4MjA4OTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-20T03:36:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-20T03:36:14Z"}, "message": "Auto merge of #43251 - gaurikholkar:span_reorder, r=nikomatsakis\n\nReorder span suggestions to appear below main labels\n\nA fix to #41698\n\nr? @nikomatsakis", "tree": {"sha": "19355a8f49f4edca4f987d4a87c18ccfa52c199c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19355a8f49f4edca4f987d4a87c18ccfa52c199c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1beaea26ff447b267ac11102d3c5d27a38820894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1beaea26ff447b267ac11102d3c5d27a38820894", "html_url": "https://github.com/rust-lang/rust/commit/1beaea26ff447b267ac11102d3c5d27a38820894", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1beaea26ff447b267ac11102d3c5d27a38820894/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28486e7f908da4adf81e2d0c9af3f2a5002b0a43", "url": "https://api.github.com/repos/rust-lang/rust/commits/28486e7f908da4adf81e2d0c9af3f2a5002b0a43", "html_url": "https://github.com/rust-lang/rust/commit/28486e7f908da4adf81e2d0c9af3f2a5002b0a43"}, {"sha": "26a8357f5c6675d278ff6a76d282b1299359ad4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/26a8357f5c6675d278ff6a76d282b1299359ad4c", "html_url": "https://github.com/rust-lang/rust/commit/26a8357f5c6675d278ff6a76d282b1299359ad4c"}], "stats": {"total": 55, "additions": 33, "deletions": 22}, "files": [{"sha": "ad2562e28fa4f5b001d88200144f0de85e01d455", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=1beaea26ff447b267ac11102d3c5d27a38820894", "patch": "@@ -346,9 +346,20 @@ impl EmitterWriter {\n         // and \"annotations lines\", where the highlight lines have the `^`.\n \n         // Sort the annotations by (start, end col)\n+        // The labels are reversed, sort and then reversed again.\n+        // Consider a list of annotations (A1, A2, C1, C2, B1, B2) where\n+        // the letter signifies the span. Here we are only sorting by the\n+        // span and hence, the order of the elements with the same span will\n+        // not change. On reversing the ordering (|a, b| but b.cmp(a)), you get\n+        // (C1, C2, B1, B2, A1, A2). All the elements with the same span are\n+        // still ordered first to last, but all the elements with different\n+        // spans are ordered by their spans in last to first order. Last to\n+        // first order is important, because the jiggly lines and | are on\n+        // the left, so the rightmost span needs to be rendered first,\n+        // otherwise the lines would end up needing to go over a message.\n+\n         let mut annotations = line.annotations.clone();\n-        annotations.sort();\n-        annotations.reverse();\n+        annotations.sort_by(|a,b| b.start_col.cmp(&a.start_col));\n \n         // First, figure out where each label will be positioned.\n         //"}, {"sha": "023f9ef1defb735d91c9c9cb49b4a64aac361ccb", "filename": "src/test/ui/did_you_mean/issue-31424.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.stderr?ref=1beaea26ff447b267ac11102d3c5d27a38820894", "patch": "@@ -4,8 +4,8 @@ error[E0596]: cannot borrow immutable argument `self` as mutable\n 17 |         (&mut self).bar();\n    |               ^^^^\n    |               |\n-   |               try removing `&mut` here\n    |               cannot reborrow mutably\n+   |               try removing `&mut` here\n \n error[E0596]: cannot borrow immutable argument `self` as mutable\n   --> $DIR/issue-31424.rs:23:15"}, {"sha": "d9ef0c45410418c057b6a83a37996ffb3930a653", "filename": "src/test/ui/did_you_mean/issue-34126.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34126.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34126.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34126.stderr?ref=1beaea26ff447b267ac11102d3c5d27a38820894", "patch": "@@ -4,8 +4,8 @@ error[E0596]: cannot borrow immutable argument `self` as mutable\n 16 |         self.run(&mut self);\n    |                       ^^^^\n    |                       |\n-   |                       try removing `&mut` here\n    |                       cannot reborrow mutably\n+   |                       try removing `&mut` here\n \n error: aborting due to previous error\n "}, {"sha": "20478165c7ea0309c6917bd4048a2d3ad7518693", "filename": "src/test/ui/did_you_mean/issue-34337.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34337.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34337.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34337.stderr?ref=1beaea26ff447b267ac11102d3c5d27a38820894", "patch": "@@ -4,8 +4,8 @@ error[E0596]: cannot borrow immutable local variable `key` as mutable\n 16 |     get(&mut key);\n    |              ^^^\n    |              |\n-   |              try removing `&mut` here\n    |              cannot reborrow mutably\n+   |              try removing `&mut` here\n \n error: aborting due to previous error\n "}, {"sha": "9fc364f861275a6b977d8376a12eba1c01cf9bc0", "filename": "src/test/ui/did_you_mean/issue-37139.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-37139.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-37139.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-37139.stderr?ref=1beaea26ff447b267ac11102d3c5d27a38820894", "patch": "@@ -4,8 +4,8 @@ error[E0596]: cannot borrow immutable local variable `x` as mutable\n 22 |             test(&mut x);\n    |                       ^\n    |                       |\n-   |                       try removing `&mut` here\n    |                       cannot reborrow mutably\n+   |                       try removing `&mut` here\n \n error: aborting due to previous error\n "}, {"sha": "56d0a5351ce83ed53712282d984365f552c32064", "filename": "src/test/ui/issue-40402-ref-hints/issue-40402-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fissue-40402-ref-hints%2Fissue-40402-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fissue-40402-ref-hints%2Fissue-40402-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-40402-ref-hints%2Fissue-40402-1.stderr?ref=1beaea26ff447b267ac11102d3c5d27a38820894", "patch": "@@ -4,8 +4,8 @@ error[E0507]: cannot move out of indexed content\n 19 |     let e = f.v[0];\n    |             ^^^^^^\n    |             |\n-   |             help: consider using a reference instead: `&f.v[0]`\n    |             cannot move out of indexed content\n+   |             help: consider using a reference instead: `&f.v[0]`\n \n error: aborting due to previous error\n "}, {"sha": "744e8c309392513b9a2f4de9606c4e631f9786f9", "filename": "src/test/ui/mismatched_types/E0281.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fmismatched_types%2FE0281.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fmismatched_types%2FE0281.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2FE0281.stderr?ref=1beaea26ff447b267ac11102d3c5d27a38820894", "patch": "@@ -4,8 +4,8 @@ error[E0281]: type mismatch: `[closure@$DIR/E0281.rs:14:9: 14:24]` implements th\n 14 |     foo(|y: String| { });\n    |     ^^^ --------------- implements `std::ops::Fn<(std::string::String,)>`\n    |     |\n-   |     requires `std::ops::Fn<(usize,)>`\n    |     expected usize, found struct `std::string::String`\n+   |     requires `std::ops::Fn<(usize,)>`\n    |\n    = note: required by `foo`\n "}, {"sha": "b7479f15b181294b88bb7cebba33c910d5224e65", "filename": "src/test/ui/mismatched_types/closure-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-mismatch.stderr?ref=1beaea26ff447b267ac11102d3c5d27a38820894", "patch": "@@ -14,8 +14,8 @@ error[E0281]: type mismatch: `[closure@$DIR/closure-mismatch.rs:18:9: 18:15]` im\n 18 |     baz(|_| ());\n    |     ^^^ ------ implements `std::ops::Fn<(_,)>`\n    |     |\n-   |     requires `for<'r> std::ops::Fn<(&'r (),)>`\n    |     expected concrete lifetime, found bound lifetime parameter\n+   |     requires `for<'r> std::ops::Fn<(&'r (),)>`\n    |\n    = note: required because of the requirements on the impl of `Foo` for `[closure@$DIR/closure-mismatch.rs:18:9: 18:15]`\n    = note: required by `baz`"}, {"sha": "174f7dfa0d0f5f897b93ecbb14edb66735457329", "filename": "src/test/ui/mismatched_types/issue-36053-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr?ref=1beaea26ff447b267ac11102d3c5d27a38820894", "patch": "@@ -14,8 +14,8 @@ error[E0281]: type mismatch: `[closure@$DIR/issue-36053-2.rs:17:39: 17:53]` impl\n 17 |     once::<&str>(\"str\").fuse().filter(|a: &str| true).count();\n    |                                ^^^^^^ -------------- implements `for<'r> std::ops::FnMut<(&'r str,)>`\n    |                                |\n-   |                                requires `for<'r> std::ops::FnMut<(&'r &str,)>`\n    |                                expected &str, found str\n+   |                                requires `for<'r> std::ops::FnMut<(&'r &str,)>`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "f14e711b23a1eea02972ad127388f49442fd5cab", "filename": "src/test/ui/mismatched_types/unboxed-closures-vtable-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.stderr?ref=1beaea26ff447b267ac11102d3c5d27a38820894", "patch": "@@ -7,8 +7,8 @@ error[E0281]: type mismatch: `[closure@$DIR/unboxed-closures-vtable-mismatch.rs:\n 25 |     let z = call_it(3, f);\n    |             ^^^^^^^\n    |             |\n-   |             requires `std::ops::FnMut<(isize, isize)>`\n    |             expected isize, found usize\n+   |             requires `std::ops::FnMut<(isize, isize)>`\n    |\n    = note: required by `call_it`\n "}, {"sha": "ed0edd52587ec6906b5ae93b8fdcecb8c5613c72", "filename": "src/test/ui/resolve/issue-2356.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr?ref=1beaea26ff447b267ac11102d3c5d27a38820894", "patch": "@@ -22,8 +22,8 @@ error[E0425]: cannot find value `whiskers` in this scope\n 52 |     whiskers -= other;\n    |     ^^^^^^^^\n    |     |\n-   |     help: try: `self.whiskers`\n    |     `self` value is only available in methods with `self` parameter\n+   |     help: try: `self.whiskers`\n \n error[E0425]: cannot find function `shave` in this scope\n   --> $DIR/issue-2356.rs:57:5\n@@ -91,8 +91,8 @@ error[E0425]: cannot find value `whiskers` in this scope\n 110 |     whiskers = 4;\n     |     ^^^^^^^^\n     |     |\n-    |     help: try: `self.whiskers`\n     |     `self` value is only available in methods with `self` parameter\n+    |     help: try: `self.whiskers`\n \n error[E0425]: cannot find function `purr_louder` in this scope\n    --> $DIR/issue-2356.rs:115:5"}, {"sha": "3c093e068c507eb9cbf708f0d2ceb8ad804cebbe", "filename": "src/test/ui/resolve/issue-5035.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fresolve%2Fissue-5035.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fresolve%2Fissue-5035.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-5035.stderr?ref=1beaea26ff447b267ac11102d3c5d27a38820894", "patch": "@@ -10,8 +10,8 @@ error[E0404]: expected trait, found type alias `K`\n 13 | impl K for isize {} //~ ERROR expected trait, found type alias `K`\n    |      ^\n    |      |\n-   |      type aliases cannot be used for traits\n    |      did you mean `I`?\n+   |      type aliases cannot be used for traits\n \n error: cannot continue compilation due to previous error\n "}, {"sha": "47141eda33c5531ae25da7dd546ed619d1a5eddd", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=1beaea26ff447b267ac11102d3c5d27a38820894", "patch": "@@ -4,9 +4,9 @@ error[E0423]: expected value, found struct `Z`\n 26 |         Z;\n    |         ^\n    |         |\n-   |         did you mean `Z { /* fields */ }`?\n    |         did you mean `S`?\n    |         constructor is not visible here due to private fields\n+   |         did you mean `Z { /* fields */ }`?\n    |\n help: possible better candidate is found in another module, you can import it into scope\n    |\n@@ -19,8 +19,8 @@ error[E0423]: expected value, found struct `S`\n 36 |     S;\n    |     ^\n    |     |\n-   |     did you mean `S { /* fields */ }`?\n    |     constructor is not visible here due to private fields\n+   |     did you mean `S { /* fields */ }`?\n    |\n help: possible better candidate is found in another module, you can import it into scope\n    |\n@@ -33,8 +33,8 @@ error[E0423]: expected value, found struct `xcrate::S`\n 42 |     xcrate::S;\n    |     ^^^^^^^^^\n    |     |\n-   |     did you mean `xcrate::S { /* fields */ }`?\n    |     constructor is not visible here due to private fields\n+   |     did you mean `xcrate::S { /* fields */ }`?\n    |\n help: possible better candidate is found in another module, you can import it into scope\n    |"}, {"sha": "014e03eb252beba351ea4b9d156113e77fb1756e", "filename": "src/test/ui/resolve/unresolved_static_type_field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fresolve%2Funresolved_static_type_field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Fresolve%2Funresolved_static_type_field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Funresolved_static_type_field.stderr?ref=1beaea26ff447b267ac11102d3c5d27a38820894", "patch": "@@ -4,8 +4,8 @@ error[E0425]: cannot find value `cx` in this scope\n 19 |         f(cx);\n    |           ^^\n    |           |\n-   |           help: try: `self.cx`\n    |           `self` value is only available in methods with `self` parameter\n+   |           help: try: `self.cx`\n \n error: aborting due to previous error\n "}, {"sha": "4b8a3744bcf8ad7fb40d5a8d85661d9c91871472", "filename": "src/test/ui/type-check/assignment-in-if.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Ftype-check%2Fassignment-in-if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1beaea26ff447b267ac11102d3c5d27a38820894/src%2Ftest%2Fui%2Ftype-check%2Fassignment-in-if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fassignment-in-if.stderr?ref=1beaea26ff447b267ac11102d3c5d27a38820894", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n 25 |     if x = x {\n    |        ^^^^^\n    |        |\n-   |        help: did you mean to compare equality?: `x == x`\n    |        expected bool, found ()\n+   |        help: did you mean to compare equality?: `x == x`\n    |\n    = note: expected type `bool`\n               found type `()`\n@@ -16,8 +16,8 @@ error[E0308]: mismatched types\n 31 |     if (x = x) {\n    |        ^^^^^^^\n    |        |\n-   |        help: did you mean to compare equality?: `x == x`\n    |        expected bool, found ()\n+   |        help: did you mean to compare equality?: `x == x`\n    |\n    = note: expected type `bool`\n               found type `()`\n@@ -28,8 +28,8 @@ error[E0308]: mismatched types\n 37 |     if y = (Foo { foo: x }) {\n    |        ^^^^^^^^^^^^^^^^^^^^\n    |        |\n-   |        help: did you mean to compare equality?: `y == (Foo { foo: x })`\n    |        expected bool, found ()\n+   |        help: did you mean to compare equality?: `y == (Foo { foo: x })`\n    |\n    = note: expected type `bool`\n               found type `()`\n@@ -40,8 +40,8 @@ error[E0308]: mismatched types\n 43 |     if 3 = x {\n    |        ^^^^^\n    |        |\n-   |        help: did you mean to compare equality?: `3 == x`\n    |        expected bool, found ()\n+   |        help: did you mean to compare equality?: `3 == x`\n    |\n    = note: expected type `bool`\n               found type `()`"}]}