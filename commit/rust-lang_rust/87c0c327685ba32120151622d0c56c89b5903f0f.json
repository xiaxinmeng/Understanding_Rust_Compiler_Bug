{"sha": "87c0c327685ba32120151622d0c56c89b5903f0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3YzBjMzI3Njg1YmEzMjEyMDE1MTYyMmQwYzU2Yzg5YjU5MDNmMGY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-10-30T08:49:13Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-02T08:40:49Z"}, "message": "add `regions_that_outlive` to `FreeRegionMap`", "tree": {"sha": "e3c1a9433b215686cf2f25b0810a240d01c924fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3c1a9433b215686cf2f25b0810a240d01c924fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87c0c327685ba32120151622d0c56c89b5903f0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87c0c327685ba32120151622d0c56c89b5903f0f", "html_url": "https://github.com/rust-lang/rust/commit/87c0c327685ba32120151622d0c56c89b5903f0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87c0c327685ba32120151622d0c56c89b5903f0f/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3db1a95a3f94ca7df1cb6d2aa7a3b6cb62d35aef", "url": "https://api.github.com/repos/rust-lang/rust/commits/3db1a95a3f94ca7df1cb6d2aa7a3b6cb62d35aef", "html_url": "https://github.com/rust-lang/rust/commit/3db1a95a3f94ca7df1cb6d2aa7a3b6cb62d35aef"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "3bcdc4f7e2c630a860a483c733a9adbe69f95b2d", "filename": "src/librustc/middle/free_region.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/87c0c327685ba32120151622d0c56c89b5903f0f/src%2Flibrustc%2Fmiddle%2Ffree_region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87c0c327685ba32120151622d0c56c89b5903f0f/src%2Flibrustc%2Fmiddle%2Ffree_region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ffree_region.rs?ref=87c0c327685ba32120151622d0c56c89b5903f0f", "patch": "@@ -182,6 +182,19 @@ impl<'tcx> FreeRegionMap<'tcx> {\n         debug!(\"lub_free_regions(r_a={:?}, r_b={:?}) = {:?}\", r_a, r_b, result);\n         result\n     }\n+\n+    /// Returns all regions that are known to outlive `r_a`. For\n+    /// example, in a function:\n+    ///\n+    /// ```\n+    /// fn foo<'a, 'b: 'a, 'c: 'b>() { .. }\n+    /// ```\n+    ///\n+    /// if `r_a` represents `'a`, this function would return `{'b, 'c}`.\n+    pub fn regions_that_outlive<'a, 'gcx>(&self, r_a: Region<'tcx>) -> Vec<&Region<'tcx>> {\n+        assert!(is_free(r_a));\n+        self.relation.greater_than(&r_a)\n+    }\n }\n \n fn is_free(r: Region) -> bool {"}]}