{"sha": "8429dcdb79b35182036e8de574287a7acc4b14d8", "node_id": "C_kwDOAAsO6NoAKDg0MjlkY2RiNzliMzUxODIwMzZlOGRlNTc0Mjg3YTdhY2M0YjE0ZDg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-08T15:40:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-08T15:40:47Z"}, "message": "Rollup merge of #92715 - chordtoll:empty-string, r=davidtwco\n\nDo not suggest char literal for zero-length strings\n\nPR #92507 adds a hint to switch to single quotes when a char is expected and a single-character string literal is provided.\n\nThe check to ensure the string literal is one character long missed the 0-char case, and would incorrectly offer the hint.\n\nThis PR adds the missing check, and a test case to confirm the new behavior.", "tree": {"sha": "93dc9724295a46e3d2820e6df049776abe7c628e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93dc9724295a46e3d2820e6df049776abe7c628e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8429dcdb79b35182036e8de574287a7acc4b14d8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiAo7/CRBK7hj4Ov3rIwAAvj8IAH7PAMFvgovsE/Cmsp4FMp+u\nVqSyV/gTsOxYrd5fYnDGLxKSIaTLZDxG+WKOr9r/SUlwtM2Qf4Cde+MbxFY2zege\njYl080KHdGJLuJRQireLOcLvkP5dHxlz7Y6BFEShYRW/1aQcbM0EAnGYK8cCfgov\nahIfqNbDXtitKX9/pVkA7yliCyGJPJJq9bIVhgg0Ej3EwkGGB6kwo/tTFlZv2fxa\nDU5sKqtpFahnY5UzzmFSNlBmtMzubssKva89rhfL20VLqJKldvh4mv6ehc5duZJ6\nclQQON/szDZ7NlyUdNclk0L2EuXJNIzM+SF6883IpbkCagwT74U0FfL1wV1LCsQ=\n=3q1G\n-----END PGP SIGNATURE-----\n", "payload": "tree 93dc9724295a46e3d2820e6df049776abe7c628e\nparent d7c2eda794e8a666b6766b6fa0c4107a971ff4e3\nparent 9622a4277698a055c2f136834afa30e94bf93071\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1644334847 +0100\ncommitter GitHub <noreply@github.com> 1644334847 +0100\n\nRollup merge of #92715 - chordtoll:empty-string, r=davidtwco\n\nDo not suggest char literal for zero-length strings\n\nPR #92507 adds a hint to switch to single quotes when a char is expected and a single-character string literal is provided.\n\nThe check to ensure the string literal is one character long missed the 0-char case, and would incorrectly offer the hint.\n\nThis PR adds the missing check, and a test case to confirm the new behavior.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8429dcdb79b35182036e8de574287a7acc4b14d8", "html_url": "https://github.com/rust-lang/rust/commit/8429dcdb79b35182036e8de574287a7acc4b14d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8429dcdb79b35182036e8de574287a7acc4b14d8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7c2eda794e8a666b6766b6fa0c4107a971ff4e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7c2eda794e8a666b6766b6fa0c4107a971ff4e3", "html_url": "https://github.com/rust-lang/rust/commit/d7c2eda794e8a666b6766b6fa0c4107a971ff4e3"}, {"sha": "9622a4277698a055c2f136834afa30e94bf93071", "url": "https://api.github.com/repos/rust-lang/rust/commits/9622a4277698a055c2f136834afa30e94bf93071", "html_url": "https://github.com/rust-lang/rust/commit/9622a4277698a055c2f136834afa30e94bf93071"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "8d41497541a192d5e78ce58621cd9ddd0e33445c", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8429dcdb79b35182036e8de574287a7acc4b14d8/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8429dcdb79b35182036e8de574287a7acc4b14d8/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=8429dcdb79b35182036e8de574287a7acc4b14d8", "patch": "@@ -2053,7 +2053,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                                 if let Some(code) =\n                                     code.strip_prefix('\"').and_then(|s| s.strip_suffix('\"'))\n                                 {\n-                                    if code.chars().nth(1).is_none() {\n+                                    if code.chars().count() == 1 {\n                                         err.span_suggestion(\n                                             span,\n                                             \"if you meant to write a `char` literal, use single quotes\","}, {"sha": "c29a15025a9c29d27c802af015d131b03c2187c7", "filename": "src/test/ui/inference/char-as-str-multi.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8429dcdb79b35182036e8de574287a7acc4b14d8/src%2Ftest%2Fui%2Finference%2Fchar-as-str-multi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8429dcdb79b35182036e8de574287a7acc4b14d8/src%2Ftest%2Fui%2Finference%2Fchar-as-str-multi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fchar-as-str-multi.rs?ref=8429dcdb79b35182036e8de574287a7acc4b14d8", "patch": "@@ -1,6 +1,7 @@\n-// When a MULTI-character string literal is used where a char should be,\n+// When a MULTI/NO-character string literal is used where a char should be,\n // DO NOT suggest changing to single quotes.\n \n fn main() {\n     let _: char = \"foo\"; //~ ERROR mismatched types\n+    let _: char = \"\"; //~ ERROR mismatched types\n }"}, {"sha": "297ca2b548f7141d2b90868739dd7f67a06f2c55", "filename": "src/test/ui/inference/char-as-str-multi.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8429dcdb79b35182036e8de574287a7acc4b14d8/src%2Ftest%2Fui%2Finference%2Fchar-as-str-multi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8429dcdb79b35182036e8de574287a7acc4b14d8/src%2Ftest%2Fui%2Finference%2Fchar-as-str-multi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fchar-as-str-multi.stderr?ref=8429dcdb79b35182036e8de574287a7acc4b14d8", "patch": "@@ -6,6 +6,14 @@ LL |     let _: char = \"foo\";\n    |            |\n    |            expected due to this\n \n-error: aborting due to previous error\n+error[E0308]: mismatched types\n+  --> $DIR/char-as-str-multi.rs:6:19\n+   |\n+LL |     let _: char = \"\";\n+   |            ----   ^^ expected `char`, found `&str`\n+   |            |\n+   |            expected due to this\n+\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0308`."}]}