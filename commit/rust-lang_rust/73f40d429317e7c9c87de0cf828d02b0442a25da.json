{"sha": "73f40d429317e7c9c87de0cf828d02b0442a25da", "node_id": "C_kwDOAAsO6NoAKDczZjQwZDQyOTMxN2U3YzljODdkZTBjZjgyOGQwMmIwNDQyYTI1ZGE", "commit": {"author": {"name": "Nikita Popov", "email": "npopov@redhat.com", "date": "2023-04-03T14:37:42Z"}, "committer": {"name": "Nikita Popov", "email": "npopov@redhat.com", "date": "2023-04-03T15:02:57Z"}, "message": "Add codegen tests for issues fixed by LLVM 16\n\nFixes #75978.\nFixes #99960.\nFixes #101048.\nFixes #101082.\nFixes #101814.\nFixes #103132.\nFixes #103327.", "tree": {"sha": "b3ff50bad620d141cbacac5317ef853db8f67a19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3ff50bad620d141cbacac5317ef853db8f67a19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73f40d429317e7c9c87de0cf828d02b0442a25da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73f40d429317e7c9c87de0cf828d02b0442a25da", "html_url": "https://github.com/rust-lang/rust/commit/73f40d429317e7c9c87de0cf828d02b0442a25da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73f40d429317e7c9c87de0cf828d02b0442a25da/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "html_url": "https://github.com/rust-lang/rust/commit/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa"}], "stats": {"total": 116, "additions": 116, "deletions": 0}, "files": [{"sha": "efa4db93ec212fd850059c73c5c2de4f3cef85de", "filename": "tests/codegen/issues/issue-101048.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/73f40d429317e7c9c87de0cf828d02b0442a25da/tests%2Fcodegen%2Fissues%2Fissue-101048.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73f40d429317e7c9c87de0cf828d02b0442a25da/tests%2Fcodegen%2Fissues%2Fissue-101048.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fissues%2Fissue-101048.rs?ref=73f40d429317e7c9c87de0cf828d02b0442a25da", "patch": "@@ -0,0 +1,13 @@\n+// compile-flags: -O\n+// min-llvm-version: 16\n+\n+#![crate_type = \"lib\"]\n+\n+#[no_mangle]\n+pub fn all_zero(data: &[u64]) -> bool {\n+    // CHECK-LABEL: @all_zero(\n+    // CHECK: [[PHI:%.*]] = phi i1\n+    // CHECK-NOT: phi i8\n+    // CHECK-NOT: zext\n+    data.iter().copied().fold(true, |acc, x| acc & (x == 0))\n+}"}, {"sha": "effe8f4a60e36f56d3b0624c2b8fefddb7c76c98", "filename": "tests/codegen/issues/issue-101082.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/73f40d429317e7c9c87de0cf828d02b0442a25da/tests%2Fcodegen%2Fissues%2Fissue-101082.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73f40d429317e7c9c87de0cf828d02b0442a25da/tests%2Fcodegen%2Fissues%2Fissue-101082.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fissues%2Fissue-101082.rs?ref=73f40d429317e7c9c87de0cf828d02b0442a25da", "patch": "@@ -0,0 +1,16 @@\n+// compile-flags: -O\n+// min-llvm-version: 16\n+\n+#![crate_type = \"lib\"]\n+\n+#[no_mangle]\n+pub fn test() -> usize {\n+    // CHECK-LABEL: @test(\n+    // CHECK: ret i64 165\n+    let values = [23, 16, 54, 3, 60, 9];\n+    let mut acc = 0;\n+    for item in values {\n+        acc += item;\n+    }\n+    acc\n+}"}, {"sha": "4e4745ed633d2bbc846053072e6a56f06c4303a4", "filename": "tests/codegen/issues/issue-101814.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/73f40d429317e7c9c87de0cf828d02b0442a25da/tests%2Fcodegen%2Fissues%2Fissue-101814.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73f40d429317e7c9c87de0cf828d02b0442a25da/tests%2Fcodegen%2Fissues%2Fissue-101814.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fissues%2Fissue-101814.rs?ref=73f40d429317e7c9c87de0cf828d02b0442a25da", "patch": "@@ -0,0 +1,19 @@\n+// compile-flags: -O\n+// min-llvm-version: 16\n+\n+#![crate_type = \"lib\"]\n+\n+#[no_mangle]\n+pub fn test(a: [i32; 10]) -> i32 {\n+    // CHECK-LABEL: @test(\n+    // CHECK: [[L1:%.+]] = load i32\n+    // CHECK: [[L2:%.+]] = load i32\n+    // CHECK: [[R:%.+]] = add i32 [[L1]], [[L2]]\n+    // CHECK: ret i32 [[R]]\n+    let mut sum = 0;\n+    for v in a.iter().skip(8) {\n+        sum += v;\n+    }\n+\n+    sum\n+}"}, {"sha": "cc87d7cd2b9dab65954608f704358343869dd66e", "filename": "tests/codegen/issues/issue-103132.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/73f40d429317e7c9c87de0cf828d02b0442a25da/tests%2Fcodegen%2Fissues%2Fissue-103132.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73f40d429317e7c9c87de0cf828d02b0442a25da/tests%2Fcodegen%2Fissues%2Fissue-103132.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fissues%2Fissue-103132.rs?ref=73f40d429317e7c9c87de0cf828d02b0442a25da", "patch": "@@ -0,0 +1,16 @@\n+// compile-flags: -O -C overflow-checks\n+// min-llvm-version: 16\n+\n+#![crate_type = \"lib\"]\n+\n+#[no_mangle]\n+pub fn test(arr: &[u8], weight: u32) {\n+    // CHECK-LABEL: @test(\n+    // CHECK-NOT: panic\n+    let weight = weight.min(256 * 256 * 256);\n+\n+    for x in arr {\n+        assert!(weight <= 256 * 256 * 256);\n+        let result = *x as u32 * weight;\n+    }\n+}"}, {"sha": "cee00faccc811b15a1a0917d6da706dd1ce583aa", "filename": "tests/codegen/issues/issue-103327.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/73f40d429317e7c9c87de0cf828d02b0442a25da/tests%2Fcodegen%2Fissues%2Fissue-103327.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73f40d429317e7c9c87de0cf828d02b0442a25da/tests%2Fcodegen%2Fissues%2Fissue-103327.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fissues%2Fissue-103327.rs?ref=73f40d429317e7c9c87de0cf828d02b0442a25da", "patch": "@@ -0,0 +1,18 @@\n+// compile-flags: -O\n+// min-llvm-version: 16\n+\n+#![crate_type = \"lib\"]\n+\n+#[no_mangle]\n+pub fn test(a: i32, b: i32) -> bool {\n+    // CHECK-LABEL: @test(\n+    // CHECK: ret i1 true\n+    let c1 = (a >= 0) && (a <= 10);\n+    let c2 = (b >= 0) && (b <= 20);\n+\n+    if c1 & c2 {\n+        a + 100 != b\n+    } else {\n+        true\n+    }\n+}"}, {"sha": "f335e92c3dc446a2dc82565b8f34e8a8d647d948", "filename": "tests/codegen/issues/issue-75978.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/73f40d429317e7c9c87de0cf828d02b0442a25da/tests%2Fcodegen%2Fissues%2Fissue-75978.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73f40d429317e7c9c87de0cf828d02b0442a25da/tests%2Fcodegen%2Fissues%2Fissue-75978.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fissues%2Fissue-75978.rs?ref=73f40d429317e7c9c87de0cf828d02b0442a25da", "patch": "@@ -0,0 +1,19 @@\n+// compile-flags: -O\n+// min-llvm-version: 16\n+\n+#![crate_type = \"lib\"]\n+\n+#[no_mangle]\n+pub fn test() -> u32 {\n+    // CHECK-LABEL: @test(\n+    // CHECK: ret i32 13\n+    let s = [1, 2, 3, 4, 5, 6, 7];\n+\n+    let mut iter = s.iter();\n+    let mut sum = 0;\n+    while let Some(_) = iter.next() {\n+        sum += iter.next().map_or(1, |&x| x)\n+    }\n+\n+    sum\n+}"}, {"sha": "e9c9367fa64b6f9a1d96d9d3aa91fb4006c87602", "filename": "tests/codegen/issues/issue-99960.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/73f40d429317e7c9c87de0cf828d02b0442a25da/tests%2Fcodegen%2Fissues%2Fissue-99960.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73f40d429317e7c9c87de0cf828d02b0442a25da/tests%2Fcodegen%2Fissues%2Fissue-99960.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fissues%2Fissue-99960.rs?ref=73f40d429317e7c9c87de0cf828d02b0442a25da", "patch": "@@ -0,0 +1,15 @@\n+// compile-flags: -O\n+// min-llvm-version: 16\n+\n+#![crate_type = \"lib\"]\n+\n+#[no_mangle]\n+pub fn test(dividend: i64, divisor: i64) -> Option<i64> {\n+    // CHECK-LABEL: @test(\n+    // CHECK-NOT: panic\n+    if dividend > i64::min_value() && divisor != 0 {\n+        Some(dividend / divisor)\n+    } else {\n+        None\n+    }\n+}"}]}