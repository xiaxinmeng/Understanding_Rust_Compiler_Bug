{"sha": "e63443d536a0e6157dce0cfb39dfcd2d614fb357", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MzQ0M2Q1MzZhMGU2MTU3ZGNlMGNmYjM5ZGZjZDJkNjE0ZmIzNTc=", "commit": {"author": {"name": "Barosl LEE", "email": "github@barosl.com", "date": "2015-01-20T17:16:47Z"}, "committer": {"name": "Barosl LEE", "email": "github@barosl.com", "date": "2015-01-20T17:16:47Z"}, "message": "Rollup merge of #21312 - michaelsproul:remove-error-send-bound, r=aturon\n\nAs discussed with @aturon, this PR removes the `Send` bound from `std::error::Error`, allowing us to implement `Error` for error types containing non-`Send` types. Current examples include `PoisonError` and `TryLockError` from `std::sync` which contain a Guard that we don't want sent between tasks.\r\n\r\n[breaking-change]", "tree": {"sha": "eb169eeac748e5ceefae1bbb0d31b40b24edd683", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb169eeac748e5ceefae1bbb0d31b40b24edd683"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e63443d536a0e6157dce0cfb39dfcd2d614fb357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e63443d536a0e6157dce0cfb39dfcd2d614fb357", "html_url": "https://github.com/rust-lang/rust/commit/e63443d536a0e6157dce0cfb39dfcd2d614fb357", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e63443d536a0e6157dce0cfb39dfcd2d614fb357/comments", "author": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "409c9972a954b56eb278c91666d33b09aeb00c6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/409c9972a954b56eb278c91666d33b09aeb00c6a", "html_url": "https://github.com/rust-lang/rust/commit/409c9972a954b56eb278c91666d33b09aeb00c6a"}, {"sha": "97a2b2638d36fbd9f69c80bd146cdbe9d87e7bcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/97a2b2638d36fbd9f69c80bd146cdbe9d87e7bcc", "html_url": "https://github.com/rust-lang/rust/commit/97a2b2638d36fbd9f69c80bd146cdbe9d87e7bcc"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "ff12846197806f6bf16ab2980b0eb72c36ba8378", "filename": "src/libstd/error.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e63443d536a0e6157dce0cfb39dfcd2d614fb357/src%2Flibstd%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e63443d536a0e6157dce0cfb39dfcd2d614fb357/src%2Flibstd%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ferror.rs?ref=e63443d536a0e6157dce0cfb39dfcd2d614fb357", "patch": "@@ -18,7 +18,7 @@\n //! chain information:\n //!\n //! ```\n-//! trait Error: Send {\n+//! trait Error {\n //!     fn description(&self) -> &str;\n //!\n //!     fn detail(&self) -> Option<String> { None }\n@@ -87,7 +87,7 @@ use string::{FromUtf8Error, FromUtf16Error};\n \n /// Base functionality for all errors in Rust.\n #[unstable = \"the exact API of this trait may change\"]\n-pub trait Error: Send {\n+pub trait Error {\n     /// A short description of the error; usually a static string.\n     fn description(&self) -> &str;\n "}, {"sha": "dc21416df7b43b1b3603b21673dce15e29a0d5e6", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e63443d536a0e6157dce0cfb39dfcd2d614fb357/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e63443d536a0e6157dce0cfb39dfcd2d614fb357/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=e63443d536a0e6157dce0cfb39dfcd2d614fb357", "patch": "@@ -234,7 +234,7 @@ use error::{FromError, Error};\n use fmt;\n use int;\n use iter::{Iterator, IteratorExt};\n-use marker::Sized;\n+use marker::{Sized, Send};\n use mem::transmute;\n use ops::FnOnce;\n use option::Option;\n@@ -363,8 +363,8 @@ impl Error for IoError {\n     }\n }\n \n-impl FromError<IoError> for Box<Error> {\n-    fn from_error(err: IoError) -> Box<Error> {\n+impl FromError<IoError> for Box<Error + Send> {\n+    fn from_error(err: IoError) -> Box<Error + Send> {\n         box err\n     }\n }"}, {"sha": "78db6c158a89d07fa7220632229f83736d45ed61", "filename": "src/libstd/os.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e63443d536a0e6157dce0cfb39dfcd2d614fb357/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e63443d536a0e6157dce0cfb39dfcd2d614fb357/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=e63443d536a0e6157dce0cfb39dfcd2d614fb357", "patch": "@@ -37,7 +37,7 @@ use error::{FromError, Error};\n use fmt;\n use io::{IoResult, IoError};\n use iter::{Iterator, IteratorExt};\n-use marker::Copy;\n+use marker::{Copy, Send};\n use libc::{c_void, c_int, c_char};\n use libc;\n use boxed::Box;\n@@ -937,8 +937,8 @@ impl Error for MapError {\n     fn detail(&self) -> Option<String> { Some(format!(\"{:?}\", self)) }\n }\n \n-impl FromError<MapError> for Box<Error> {\n-    fn from_error(err: MapError) -> Box<Error> {\n+impl FromError<MapError> for Box<Error + Send> {\n+    fn from_error(err: MapError) -> Box<Error + Send> {\n         box err\n     }\n }"}]}