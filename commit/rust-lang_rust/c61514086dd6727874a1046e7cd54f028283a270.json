{"sha": "c61514086dd6727874a1046e7cd54f028283a270", "node_id": "C_kwDOAAsO6NoAKGM2MTUxNDA4NmRkNjcyNzg3NGExMDQ2ZTdjZDU0ZjAyODI4M2EyNzA", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-01-12T00:44:33Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-01-23T02:22:33Z"}, "message": "Subsume `ref_in_deref` into `needless_borrow`", "tree": {"sha": "a6bf2f6aefb1964f0b97092a4fcd8a9a541f3d55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6bf2f6aefb1964f0b97092a4fcd8a9a541f3d55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c61514086dd6727874a1046e7cd54f028283a270", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c61514086dd6727874a1046e7cd54f028283a270", "html_url": "https://github.com/rust-lang/rust/commit/c61514086dd6727874a1046e7cd54f028283a270", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c61514086dd6727874a1046e7cd54f028283a270/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e9110e4f3fd8d982dbde873b0c5168b8a3968ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e9110e4f3fd8d982dbde873b0c5168b8a3968ed", "html_url": "https://github.com/rust-lang/rust/commit/9e9110e4f3fd8d982dbde873b0c5168b8a3968ed"}], "stats": {"total": 265, "additions": 68, "deletions": 197}, "files": [{"sha": "d66e6cf7fb6596ad20f5cfb1bf9dfba0e409d624", "filename": "CHANGELOG.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -3227,7 +3227,6 @@ Released 2018-09-13\n [`redundant_slicing`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_slicing\n [`redundant_static_lifetimes`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n [`ref_binding_to_reference`]: https://rust-lang.github.io/rust-clippy/master/index.html#ref_binding_to_reference\n-[`ref_in_deref`]: https://rust-lang.github.io/rust-clippy/master/index.html#ref_in_deref\n [`ref_option_ref`]: https://rust-lang.github.io/rust-clippy/master/index.html#ref_option_ref\n [`regex_macro`]: https://rust-lang.github.io/rust-clippy/master/index.html#regex_macro\n [`repeat_once`]: https://rust-lang.github.io/rust-clippy/master/index.html#repeat_once"}, {"sha": "4721b7f2b472b3ffaab9da2a2e21b8f486cf8457", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -247,7 +247,6 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(redundant_slicing::REDUNDANT_SLICING),\n     LintId::of(redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES),\n     LintId::of(reference::DEREF_ADDROF),\n-    LintId::of(reference::REF_IN_DEREF),\n     LintId::of(regex::INVALID_REGEX),\n     LintId::of(repeat_once::REPEAT_ONCE),\n     LintId::of(returns::LET_AND_RETURN),"}, {"sha": "bd5ff613447cddf521113dfccbfe71d863fc1776", "filename": "clippy_lints/src/lib.register_complexity.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/clippy_lints%2Fsrc%2Flib.register_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/clippy_lints%2Fsrc%2Flib.register_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_complexity.rs?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -71,7 +71,6 @@ store.register_group(true, \"clippy::complexity\", Some(\"clippy_complexity\"), vec!\n     LintId::of(redundant_closure_call::REDUNDANT_CLOSURE_CALL),\n     LintId::of(redundant_slicing::REDUNDANT_SLICING),\n     LintId::of(reference::DEREF_ADDROF),\n-    LintId::of(reference::REF_IN_DEREF),\n     LintId::of(repeat_once::REPEAT_ONCE),\n     LintId::of(strings::STRING_FROM_UTF8_AS_BYTES),\n     LintId::of(strlen_on_c_strings::STRLEN_ON_C_STRINGS),"}, {"sha": "2d2693832e9716721feb10b87b1e9fba457e205a", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -423,7 +423,6 @@ store.register_lints(&[\n     redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES,\n     ref_option_ref::REF_OPTION_REF,\n     reference::DEREF_ADDROF,\n-    reference::REF_IN_DEREF,\n     regex::INVALID_REGEX,\n     regex::TRIVIAL_REGEX,\n     repeat_once::REPEAT_ONCE,"}, {"sha": "6e825a601b2a66c3428789f84d251297ce69999f", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -703,7 +703,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| Box::new(mut_key::MutableKeyType));\n     store.register_late_pass(|| Box::new(modulo_arithmetic::ModuloArithmetic));\n     store.register_early_pass(|| Box::new(reference::DerefAddrOf));\n-    store.register_early_pass(|| Box::new(reference::RefInDeref));\n     store.register_early_pass(|| Box::new(double_parens::DoubleParens));\n     store.register_late_pass(|| Box::new(to_string_in_display::ToStringInDisplay::new()));\n     store.register_early_pass(|| Box::new(unsafe_removed_from_name::UnsafeNameRemoval));\n@@ -935,6 +934,7 @@ pub fn register_renamed(ls: &mut rustc_lint::LintStore) {\n     ls.register_renamed(\"clippy::if_let_some_result\", \"clippy::match_result_ok\");\n     ls.register_renamed(\"clippy::disallowed_type\", \"clippy::disallowed_types\");\n     ls.register_renamed(\"clippy::disallowed_method\", \"clippy::disallowed_methods\");\n+    ls.register_renamed(\"clippy::ref_in_deref\", \"clippy::needless_borrow\");\n \n     // uplifted lints\n     ls.register_renamed(\"clippy::invalid_ref\", \"invalid_value\");"}, {"sha": "811a7bb9c153a273e4d9ff5fbee2252555591a10", "filename": "clippy_lints/src/reference.rs", "status": "modified", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/clippy_lints%2Fsrc%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/clippy_lints%2Fsrc%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freference.rs?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -1,6 +1,5 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::{snippet_opt, snippet_with_applicability};\n-use clippy_utils::sugg::Sugg;\n use if_chain::if_chain;\n use rustc_ast::ast::{Expr, ExprKind, Mutability, UnOp};\n use rustc_errors::Applicability;\n@@ -104,59 +103,3 @@ impl EarlyLintPass for DerefAddrOf {\n         }\n     }\n }\n-\n-declare_clippy_lint! {\n-    /// ### What it does\n-    /// Checks for references in expressions that use\n-    /// auto dereference.\n-    ///\n-    /// ### Why is this bad?\n-    /// The reference is a no-op and is automatically\n-    /// dereferenced by the compiler and makes the code less clear.\n-    ///\n-    /// ### Example\n-    /// ```rust\n-    /// struct Point(u32, u32);\n-    /// let point = Point(30, 20);\n-    /// let x = (&point).0;\n-    /// ```\n-    /// Use instead:\n-    /// ```rust\n-    /// # struct Point(u32, u32);\n-    /// # let point = Point(30, 20);\n-    /// let x = point.0;\n-    /// ```\n-    #[clippy::version = \"pre 1.29.0\"]\n-    pub REF_IN_DEREF,\n-    complexity,\n-    \"Use of reference in auto dereference expression.\"\n-}\n-\n-declare_lint_pass!(RefInDeref => [REF_IN_DEREF]);\n-\n-impl EarlyLintPass for RefInDeref {\n-    fn check_expr(&mut self, cx: &EarlyContext<'_>, e: &Expr) {\n-        if_chain! {\n-            if let ExprKind::Field(ref object, _) = e.kind;\n-            if let ExprKind::Paren(ref parened) = object.kind;\n-            if let ExprKind::AddrOf(_, _, ref inner) = parened.kind;\n-            then {\n-                let applicability = if inner.span.from_expansion() {\n-                    Applicability::MaybeIncorrect\n-                } else {\n-                    Applicability::MachineApplicable\n-                };\n-                let sugg = Sugg::ast(cx, inner, \"_\").maybe_par();\n-                span_lint_and_sugg(\n-                    cx,\n-                    REF_IN_DEREF,\n-                    object.span,\n-                    \"creating a reference that is immediately dereferenced\",\n-                    \"try this\",\n-                    sugg.to_string(),\n-                    applicability,\n-                );\n-            }\n-        }\n-    }\n-}"}, {"sha": "eefeb1decb69e604519618c9567ab6ee990b3a81", "filename": "tests/ui/borrow_interior_mutable_const/others.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fborrow_interior_mutable_const%2Fothers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fborrow_interior_mutable_const%2Fothers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_interior_mutable_const%2Fothers.rs?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -1,9 +1,5 @@\n #![warn(clippy::borrow_interior_mutable_const)]\n-#![allow(\n-    clippy::declare_interior_mutable_const,\n-    clippy::ref_in_deref,\n-    clippy::needless_borrow\n-)]\n+#![allow(clippy::declare_interior_mutable_const, clippy::needless_borrow)]\n #![allow(const_item_mutation)]\n \n use std::borrow::Cow;"}, {"sha": "9a908cf30e945cc100e1a98126448250704031f0", "filename": "tests/ui/borrow_interior_mutable_const/others.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fborrow_interior_mutable_const%2Fothers.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fborrow_interior_mutable_const%2Fothers.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_interior_mutable_const%2Fothers.stderr?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -1,5 +1,5 @@\n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/others.rs:58:5\n+  --> $DIR/others.rs:54:5\n    |\n LL |     ATOMIC.store(1, Ordering::SeqCst); //~ ERROR interior mutability\n    |     ^^^^^^\n@@ -8,103 +8,103 @@ LL |     ATOMIC.store(1, Ordering::SeqCst); //~ ERROR interior mutability\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/others.rs:59:16\n+  --> $DIR/others.rs:55:16\n    |\n LL |     assert_eq!(ATOMIC.load(Ordering::SeqCst), 5); //~ ERROR interior mutability\n    |                ^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/others.rs:62:22\n+  --> $DIR/others.rs:58:22\n    |\n LL |     let _once_ref = &ONCE_INIT; //~ ERROR interior mutability\n    |                      ^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/others.rs:63:25\n+  --> $DIR/others.rs:59:25\n    |\n LL |     let _once_ref_2 = &&ONCE_INIT; //~ ERROR interior mutability\n    |                         ^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/others.rs:64:27\n+  --> $DIR/others.rs:60:27\n    |\n LL |     let _once_ref_4 = &&&&ONCE_INIT; //~ ERROR interior mutability\n    |                           ^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/others.rs:65:26\n+  --> $DIR/others.rs:61:26\n    |\n LL |     let _once_mut = &mut ONCE_INIT; //~ ERROR interior mutability\n    |                          ^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/others.rs:76:14\n+  --> $DIR/others.rs:72:14\n    |\n LL |     let _ = &ATOMIC_TUPLE; //~ ERROR interior mutability\n    |              ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/others.rs:77:14\n+  --> $DIR/others.rs:73:14\n    |\n LL |     let _ = &ATOMIC_TUPLE.0; //~ ERROR interior mutability\n    |              ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/others.rs:78:19\n+  --> $DIR/others.rs:74:19\n    |\n LL |     let _ = &(&&&&ATOMIC_TUPLE).0; //~ ERROR interior mutability\n    |                   ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/others.rs:79:14\n+  --> $DIR/others.rs:75:14\n    |\n LL |     let _ = &ATOMIC_TUPLE.0[0]; //~ ERROR interior mutability\n    |              ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/others.rs:80:13\n+  --> $DIR/others.rs:76:13\n    |\n LL |     let _ = ATOMIC_TUPLE.0[0].load(Ordering::SeqCst); //~ ERROR interior mutability\n    |             ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/others.rs:86:13\n+  --> $DIR/others.rs:82:13\n    |\n LL |     let _ = ATOMIC_TUPLE.0[0]; //~ ERROR interior mutability\n    |             ^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/others.rs:91:5\n+  --> $DIR/others.rs:87:5\n    |\n LL |     CELL.set(2); //~ ERROR interior mutability\n    |     ^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a `const` item with interior mutability should not be borrowed\n-  --> $DIR/others.rs:92:16\n+  --> $DIR/others.rs:88:16\n    |\n LL |     assert_eq!(CELL.get(), 6); //~ ERROR interior mutability\n    |                ^^^^"}, {"sha": "3de2a51ffa5f326c516154723da1b8ff99c53f21", "filename": "tests/ui/explicit_deref_methods.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fexplicit_deref_methods.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fexplicit_deref_methods.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_deref_methods.fixed?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n \n-#![allow(unused_variables, clippy::clone_double_ref)]\n+#![allow(unused_variables, clippy::clone_double_ref, clippy::needless_borrow)]\n #![warn(clippy::explicit_deref_methods)]\n \n use std::ops::{Deref, DerefMut};"}, {"sha": "a08d75964220a06adcf52b519b4f9029f1bc3a19", "filename": "tests/ui/explicit_deref_methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fexplicit_deref_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fexplicit_deref_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_deref_methods.rs?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n \n-#![allow(unused_variables, clippy::clone_double_ref)]\n+#![allow(unused_variables, clippy::clone_double_ref, clippy::needless_borrow)]\n #![warn(clippy::explicit_deref_methods)]\n \n use std::ops::{Deref, DerefMut};"}, {"sha": "d08f8f52495adf56f677098a395f10eb94fd5fca", "filename": "tests/ui/format.fixed", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fformat.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fformat.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.fixed?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -1,6 +1,11 @@\n // run-rustfix\n \n-#![allow(clippy::print_literal, clippy::redundant_clone, clippy::to_string_in_format_args)]\n+#![allow(\n+    clippy::print_literal,\n+    clippy::redundant_clone,\n+    clippy::to_string_in_format_args,\n+    clippy::needless_borrow\n+)]\n #![warn(clippy::useless_format)]\n \n struct Foo(pub String);"}, {"sha": "4a10b580d2600171fed59d008a687756fcfef0aa", "filename": "tests/ui/format.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.rs?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -1,6 +1,11 @@\n // run-rustfix\n \n-#![allow(clippy::print_literal, clippy::redundant_clone, clippy::to_string_in_format_args)]\n+#![allow(\n+    clippy::print_literal,\n+    clippy::redundant_clone,\n+    clippy::to_string_in_format_args,\n+    clippy::needless_borrow\n+)]\n #![warn(clippy::useless_format)]\n \n struct Foo(pub String);"}, {"sha": "f25c7fb1ff1cbc8fda16579ded43a98d6f7775dc", "filename": "tests/ui/format.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fformat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fformat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.stderr?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -1,25 +1,25 @@\n error: useless use of `format!`\n-  --> $DIR/format.rs:13:5\n+  --> $DIR/format.rs:18:5\n    |\n LL |     format!(\"foo\");\n    |     ^^^^^^^^^^^^^^ help: consider using `.to_string()`: `\"foo\".to_string()`\n    |\n    = note: `-D clippy::useless-format` implied by `-D warnings`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:14:5\n+  --> $DIR/format.rs:19:5\n    |\n LL |     format!(\"{{}}\");\n    |     ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `\"{}\".to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:15:5\n+  --> $DIR/format.rs:20:5\n    |\n LL |     format!(\"{{}} abc {{}}\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `\"{} abc {}\".to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:16:5\n+  --> $DIR/format.rs:21:5\n    |\n LL | /     format!(\n LL | |         r##\"foo {{}}\n@@ -34,79 +34,79 @@ LL ~ \" bar\"##.to_string();\n    |\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:21:13\n+  --> $DIR/format.rs:26:13\n    |\n LL |     let _ = format!(\"\");\n    |             ^^^^^^^^^^^ help: consider using `String::new()`: `String::new()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:23:5\n+  --> $DIR/format.rs:28:5\n    |\n LL |     format!(\"{}\", \"foo\");\n    |     ^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `\"foo\".to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:27:5\n+  --> $DIR/format.rs:32:5\n    |\n LL |     format!(\"{:+}\", \"foo\"); // Warn when the format makes no difference.\n    |     ^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `\"foo\".to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:28:5\n+  --> $DIR/format.rs:33:5\n    |\n LL |     format!(\"{:<}\", \"foo\"); // Warn when the format makes no difference.\n    |     ^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `\"foo\".to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:33:5\n+  --> $DIR/format.rs:38:5\n    |\n LL |     format!(\"{}\", arg);\n    |     ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `arg.to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:37:5\n+  --> $DIR/format.rs:42:5\n    |\n LL |     format!(\"{:+}\", arg); // Warn when the format makes no difference.\n    |     ^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `arg.to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:38:5\n+  --> $DIR/format.rs:43:5\n    |\n LL |     format!(\"{:<}\", arg); // Warn when the format makes no difference.\n    |     ^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `arg.to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:65:5\n+  --> $DIR/format.rs:70:5\n    |\n LL |     format!(\"{}\", 42.to_string());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `42.to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:67:5\n+  --> $DIR/format.rs:72:5\n    |\n LL |     format!(\"{}\", x.display().to_string());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `x.display().to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:71:18\n+  --> $DIR/format.rs:76:18\n    |\n LL |     let _ = Some(format!(\"{}\", a + \"bar\"));\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `a + \"bar\"`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:75:22\n+  --> $DIR/format.rs:80:22\n    |\n LL |     let _s: String = format!(\"{}\", &*v.join(\"/n\"));\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `(&*v.join(\"/n\")).to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:81:13\n+  --> $DIR/format.rs:86:13\n    |\n LL |     let _ = format!(\"{x}\");\n    |             ^^^^^^^^^^^^^^ help: consider using `.to_string()`: `x.to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:83:13\n+  --> $DIR/format.rs:88:13\n    |\n LL |     let _ = format!(\"{y}\", y = x);\n    |             ^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `x.to_string()`"}, {"sha": "b90e8448db0a3ac377949addf360f56441a5b401", "filename": "tests/ui/needless_borrow.stderr", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fneedless_borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fneedless_borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.stderr?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -1,17 +1,3 @@\n-error: creating a reference that is immediately dereferenced\n-  --> $DIR/needless_borrow.rs:72:13\n-   |\n-LL |     let _ = (&x).0;\n-   |             ^^^^ help: try this: `x`\n-   |\n-   = note: `-D clippy::ref-in-deref` implied by `-D warnings`\n-\n-error: creating a reference that is immediately dereferenced\n-  --> $DIR/needless_borrow.rs:74:22\n-   |\n-LL |     let _ = unsafe { (&*x).0 };\n-   |                      ^^^^^ help: try this: `(*x)`\n-\n error: this expression creates a reference which is immediately dereferenced by the compiler\n   --> $DIR/needless_borrow.rs:9:15\n    |\n@@ -128,5 +114,5 @@ error: this expression borrows a value the compiler would automatically borrow\n LL |     let _ = unsafe { (&*x).0 };\n    |                      ^^^^^ help: change this to: `(*x)`\n \n-error: aborting due to 21 previous errors\n+error: aborting due to 19 previous errors\n "}, {"sha": "a89845c1dd32b900c544ab169f6b91cc70640e74", "filename": "tests/ui/redundant_pattern_matching_option.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fredundant_pattern_matching_option.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fredundant_pattern_matching_option.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_option.fixed?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -81,7 +81,7 @@ const fn issue6067() {\n     None::<()>.is_none();\n }\n \n-#[allow(clippy::deref_addrof, dead_code)]\n+#[allow(clippy::deref_addrof, dead_code, clippy::needless_borrow)]\n fn issue7921() {\n     if (&None::<()>).is_none() {}\n     if (&None::<()>).is_none() {}"}, {"sha": "d6f44403487efda300ab4b27ed7f7d0b62b6e798", "filename": "tests/ui/redundant_pattern_matching_option.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fredundant_pattern_matching_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Fredundant_pattern_matching_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_option.rs?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -96,7 +96,7 @@ const fn issue6067() {\n     };\n }\n \n-#[allow(clippy::deref_addrof, dead_code)]\n+#[allow(clippy::deref_addrof, dead_code, clippy::needless_borrow)]\n fn issue7921() {\n     if let None = *(&None::<()>) {}\n     if let None = *&None::<()> {}"}, {"sha": "8bddec576ed14ceb3eb1448d4f8f509ff4c5ed30", "filename": "tests/ui/rename.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Frename.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Frename.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.fixed?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -54,6 +54,7 @@\n #![warn(clippy::match_result_ok)]\n #![warn(clippy::disallowed_types)]\n #![warn(clippy::disallowed_methods)]\n+#![warn(clippy::needless_borrow)]\n // uplifted lints\n #![warn(invalid_value)]\n #![warn(array_into_iter)]"}, {"sha": "d2010d71d2c118681cb7b8f56ddc347af2dfb57e", "filename": "tests/ui/rename.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.rs?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -54,6 +54,7 @@\n #![warn(clippy::if_let_some_result)]\n #![warn(clippy::disallowed_type)]\n #![warn(clippy::disallowed_method)]\n+#![warn(clippy::ref_in_deref)]\n // uplifted lints\n #![warn(clippy::invalid_ref)]\n #![warn(clippy::into_iter_on_array)]"}, {"sha": "45cb8b786f5f3d89ba5c357d47343d0a4311ee11", "filename": "tests/ui/rename.stderr", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Frename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c61514086dd6727874a1046e7cd54f028283a270/tests%2Fui%2Frename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.stderr?ref=c61514086dd6727874a1046e7cd54f028283a270", "patch": "@@ -138,59 +138,65 @@ error: lint `clippy::disallowed_method` has been renamed to `clippy::disallowed_\n LL | #![warn(clippy::disallowed_method)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::disallowed_methods`\n \n+error: lint `clippy::ref_in_deref` has been renamed to `clippy::needless_borrow`\n+  --> $DIR/rename.rs:57:9\n+   |\n+LL | #![warn(clippy::ref_in_deref)]\n+   |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::needless_borrow`\n+\n error: lint `clippy::invalid_ref` has been renamed to `invalid_value`\n-  --> $DIR/rename.rs:58:9\n+  --> $DIR/rename.rs:59:9\n    |\n LL | #![warn(clippy::invalid_ref)]\n    |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `invalid_value`\n \n error: lint `clippy::into_iter_on_array` has been renamed to `array_into_iter`\n-  --> $DIR/rename.rs:59:9\n+  --> $DIR/rename.rs:60:9\n    |\n LL | #![warn(clippy::into_iter_on_array)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `array_into_iter`\n \n error: lint `clippy::unused_label` has been renamed to `unused_labels`\n-  --> $DIR/rename.rs:60:9\n+  --> $DIR/rename.rs:61:9\n    |\n LL | #![warn(clippy::unused_label)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `unused_labels`\n \n error: lint `clippy::drop_bounds` has been renamed to `drop_bounds`\n-  --> $DIR/rename.rs:61:9\n+  --> $DIR/rename.rs:62:9\n    |\n LL | #![warn(clippy::drop_bounds)]\n    |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `drop_bounds`\n \n error: lint `clippy::temporary_cstring_as_ptr` has been renamed to `temporary_cstring_as_ptr`\n-  --> $DIR/rename.rs:62:9\n+  --> $DIR/rename.rs:63:9\n    |\n LL | #![warn(clippy::temporary_cstring_as_ptr)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `temporary_cstring_as_ptr`\n \n error: lint `clippy::panic_params` has been renamed to `non_fmt_panics`\n-  --> $DIR/rename.rs:63:9\n+  --> $DIR/rename.rs:64:9\n    |\n LL | #![warn(clippy::panic_params)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `non_fmt_panics`\n \n error: lint `clippy::unknown_clippy_lints` has been renamed to `unknown_lints`\n-  --> $DIR/rename.rs:64:9\n+  --> $DIR/rename.rs:65:9\n    |\n LL | #![warn(clippy::unknown_clippy_lints)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `unknown_lints`\n \n error: lint `clippy::invalid_atomic_ordering` has been renamed to `invalid_atomic_ordering`\n-  --> $DIR/rename.rs:65:9\n+  --> $DIR/rename.rs:66:9\n    |\n LL | #![warn(clippy::invalid_atomic_ordering)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `invalid_atomic_ordering`\n \n error: lint `clippy::mem_discriminant_non_enum` has been renamed to `enum_intrinsics_non_enums`\n-  --> $DIR/rename.rs:66:9\n+  --> $DIR/rename.rs:67:9\n    |\n LL | #![warn(clippy::mem_discriminant_non_enum)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `enum_intrinsics_non_enums`\n \n-error: aborting due to 32 previous errors\n+error: aborting due to 33 previous errors\n "}, {"sha": "d927bae976f799e05c567c1e02467e813a563a1e", "filename": "tests/ui/unnecessary_ref.fixed", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9e9110e4f3fd8d982dbde873b0c5168b8a3968ed/tests%2Fui%2Funnecessary_ref.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/9e9110e4f3fd8d982dbde873b0c5168b8a3968ed/tests%2Fui%2Funnecessary_ref.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_ref.fixed?ref=9e9110e4f3fd8d982dbde873b0c5168b8a3968ed", "patch": "@@ -1,23 +0,0 @@\n-// run-rustfix\n-\n-#![feature(stmt_expr_attributes)]\n-#![allow(unused_variables, dead_code)]\n-\n-struct Outer {\n-    inner: u32,\n-}\n-\n-#[deny(clippy::ref_in_deref)]\n-fn main() {\n-    let outer = Outer { inner: 0 };\n-    let inner = outer.inner;\n-}\n-\n-struct Apple;\n-impl Apple {\n-    fn hello(&self) {}\n-}\n-struct Package(pub *const Apple);\n-fn foobar(package: *const Package) {\n-    unsafe { &*(*package).0 }.hello();\n-}"}, {"sha": "86bfb76ec26192a905dd9babc6349dcd2febca60", "filename": "tests/ui/unnecessary_ref.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9e9110e4f3fd8d982dbde873b0c5168b8a3968ed/tests%2Fui%2Funnecessary_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e9110e4f3fd8d982dbde873b0c5168b8a3968ed/tests%2Fui%2Funnecessary_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_ref.rs?ref=9e9110e4f3fd8d982dbde873b0c5168b8a3968ed", "patch": "@@ -1,23 +0,0 @@\n-// run-rustfix\n-\n-#![feature(stmt_expr_attributes)]\n-#![allow(unused_variables, dead_code)]\n-\n-struct Outer {\n-    inner: u32,\n-}\n-\n-#[deny(clippy::ref_in_deref)]\n-fn main() {\n-    let outer = Outer { inner: 0 };\n-    let inner = (&outer).inner;\n-}\n-\n-struct Apple;\n-impl Apple {\n-    fn hello(&self) {}\n-}\n-struct Package(pub *const Apple);\n-fn foobar(package: *const Package) {\n-    unsafe { &*(&*package).0 }.hello();\n-}"}, {"sha": "436f4bcf7380465ac7c96598d38b8b759568126f", "filename": "tests/ui/unnecessary_ref.stderr", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9e9110e4f3fd8d982dbde873b0c5168b8a3968ed/tests%2Fui%2Funnecessary_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9e9110e4f3fd8d982dbde873b0c5168b8a3968ed/tests%2Fui%2Funnecessary_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_ref.stderr?ref=9e9110e4f3fd8d982dbde873b0c5168b8a3968ed", "patch": "@@ -1,22 +0,0 @@\n-error: creating a reference that is immediately dereferenced\n-  --> $DIR/unnecessary_ref.rs:13:17\n-   |\n-LL |     let inner = (&outer).inner;\n-   |                 ^^^^^^^^ help: try this: `outer`\n-   |\n-note: the lint level is defined here\n-  --> $DIR/unnecessary_ref.rs:10:8\n-   |\n-LL | #[deny(clippy::ref_in_deref)]\n-   |        ^^^^^^^^^^^^^^^^^^^^\n-\n-error: creating a reference that is immediately dereferenced\n-  --> $DIR/unnecessary_ref.rs:22:16\n-   |\n-LL |     unsafe { &*(&*package).0 }.hello();\n-   |                ^^^^^^^^^^^ help: try this: `(*package)`\n-   |\n-   = note: `-D clippy::ref-in-deref` implied by `-D warnings`\n-\n-error: aborting due to 2 previous errors\n-"}]}