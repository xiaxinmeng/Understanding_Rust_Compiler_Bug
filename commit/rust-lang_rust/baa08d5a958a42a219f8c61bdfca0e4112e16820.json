{"sha": "baa08d5a958a42a219f8c61bdfca0e4112e16820", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYTA4ZDVhOTU4YTQyYTIxOWY4YzYxYmRmY2EwZTQxMTJlMTY4MjA=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-28T23:23:41Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-28T23:27:28Z"}, "message": "Fix long line.", "tree": {"sha": "7158ab6a7c97e2216d78e2f2445b7d77287abf10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7158ab6a7c97e2216d78e2f2445b7d77287abf10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/baa08d5a958a42a219f8c61bdfca0e4112e16820", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/baa08d5a958a42a219f8c61bdfca0e4112e16820", "html_url": "https://github.com/rust-lang/rust/commit/baa08d5a958a42a219f8c61bdfca0e4112e16820", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/baa08d5a958a42a219f8c61bdfca0e4112e16820/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d51cfa1e83ce18d05721683f2e60d9c2a9ae794", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d51cfa1e83ce18d05721683f2e60d9c2a9ae794", "html_url": "https://github.com/rust-lang/rust/commit/1d51cfa1e83ce18d05721683f2e60d9c2a9ae794"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "f7d8e8d34d20be45276a0e515755e0ea5883c8b0", "filename": "src/libcore/str.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/baa08d5a958a42a219f8c61bdfca0e4112e16820/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baa08d5a958a42a219f8c61bdfca0e4112e16820/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=baa08d5a958a42a219f8c61bdfca0e4112e16820", "patch": "@@ -1175,7 +1175,8 @@ pub pure fn rfind_from(s: &str, start: uint, f: fn(char) -> bool)\n  * than or equal to `len(s)`. `start` must be the index of a character\n  * boundary, as defined by `is_char_boundary`\n  */\n-pub pure fn rfind_between(s: &str, start: uint, end: uint, f: fn(char) -> bool)\n+pub pure fn rfind_between(s: &str, start: uint, end: uint,\n+                          f: fn(char) -> bool)\n     -> Option<uint> {\n     assert start >= end;\n     assert start <= len(s);\n@@ -1607,7 +1608,9 @@ pub pure fn char_range_at(s: &str, i: uint) -> {ch: char, next: uint} {\n }\n \n /// Pluck a character out of a string\n-pub pure fn char_at(s: &str, i: uint) -> char { return char_range_at(s, i).ch; }\n+pub pure fn char_at(s: &str, i: uint) -> char {\n+    return char_range_at(s, i).ch;\n+}\n \n /**\n  * Given a byte position and a str, return the previous char and its position"}]}