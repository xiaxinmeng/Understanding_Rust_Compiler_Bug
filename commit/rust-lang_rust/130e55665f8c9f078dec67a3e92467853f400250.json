{"sha": "130e55665f8c9f078dec67a3e92467853f400250", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzMGU1NTY2NWY4YzlmMDc4ZGVjNjdhM2U5MjQ2Nzg1M2Y0MDAyNTA=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-08-27T06:40:42Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-08-27T08:46:36Z"}, "message": "Avoid calling `unroll_place()` in a common case.\n\nThis reduces the execution time for `ucd-check` by 25%.", "tree": {"sha": "af9d2a77ed2fa729f1852884ce8094a6deddfc59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af9d2a77ed2fa729f1852884ce8094a6deddfc59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/130e55665f8c9f078dec67a3e92467853f400250", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/130e55665f8c9f078dec67a3e92467853f400250", "html_url": "https://github.com/rust-lang/rust/commit/130e55665f8c9f078dec67a3e92467853f400250", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/130e55665f8c9f078dec67a3e92467853f400250/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a2c603eeabad012298f391f09c0b526eabeb5af", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a2c603eeabad012298f391f09c0b526eabeb5af", "html_url": "https://github.com/rust-lang/rust/commit/3a2c603eeabad012298f391f09c0b526eabeb5af"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "3f055283e0c3f71a7389cc928a8c4c98034d1254", "filename": "src/librustc_mir/borrow_check/places_conflict.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/130e55665f8c9f078dec67a3e92467853f400250/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/130e55665f8c9f078dec67a3e92467853f400250/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs?ref=130e55665f8c9f078dec67a3e92467853f400250", "patch": "@@ -29,6 +29,14 @@ pub(super) fn places_conflict<'gcx, 'tcx>(\n         borrow_place, access_place, access\n     );\n \n+    // This Local/Local case is handled by the more general code below, but\n+    // it's so common that it's a speed win to check for it first.\n+    if let Place::Local(l1) = borrow_place {\n+        if let Place::Local(l2) = access_place {\n+            return l1 == l2;\n+        }\n+    }\n+\n     unroll_place(borrow_place, None, |borrow_components| {\n         unroll_place(access_place, None, |access_components| {\n             place_components_conflict(tcx, mir, borrow_components, access_components, access)"}]}