{"sha": "dd84b7a24d3c6b30e3c1c32259357278f12d0987", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkODRiN2EyNGQzYzZiMzBlM2MxYzMyMjU5MzU3Mjc4ZjEyZDA5ODc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-10-30T19:07:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-30T19:07:29Z"}, "message": "Merge #6416\n\n6416: Respond with JSON-RPC error if we failed to deserialize request r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "e02dc37c3b0852312cddd47581f9888649aa4b47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e02dc37c3b0852312cddd47581f9888649aa4b47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd84b7a24d3c6b30e3c1c32259357278f12d0987", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfnGRxCRBK7hj4Ov3rIwAAdHIIAIbqnrdfGMyJUytxo8eufIZB\naxuneOvnW9CjIjFFEJfggBwBsxhcK2HSPVeBKZo4PTpWf/L6RNhcgRJ+olP5uVrr\n3CI+kfxbr0hPJF90qR+7ZznKpnMZYQpNG2MjhNpFZEfiD1zjroQuDL7kbjowGo6Z\nNLWYOhPL4KHwKn+/CUxxQwmaM/2XZCKxcaMcLTI9E1IbCfOV9vko7tHSlCgCSLgw\nUuuJOjoybqdg6RQ/cNiez83Gl0PtnGzsx5QkCTtJnBQlL4HZ2Z+4JzTj1IcVRKWA\nZe0RGAp0v0Q3VNSizmRTYOmRfue8kAhdX4WwzojPQJJMfFoFuRqUG+TXS28Z6Xg=\n=fddF\n-----END PGP SIGNATURE-----\n", "payload": "tree e02dc37c3b0852312cddd47581f9888649aa4b47\nparent 590fdba28468d53dcfc498dc863202b924f89ffa\nparent 3b9548e163ed64d21d56873a4ba3583bf2f44535\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1604084849 +0000\ncommitter GitHub <noreply@github.com> 1604084849 +0000\n\nMerge #6416\n\n6416: Respond with JSON-RPC error if we failed to deserialize request r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd84b7a24d3c6b30e3c1c32259357278f12d0987", "html_url": "https://github.com/rust-lang/rust/commit/dd84b7a24d3c6b30e3c1c32259357278f12d0987", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd84b7a24d3c6b30e3c1c32259357278f12d0987/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "590fdba28468d53dcfc498dc863202b924f89ffa", "url": "https://api.github.com/repos/rust-lang/rust/commits/590fdba28468d53dcfc498dc863202b924f89ffa", "html_url": "https://github.com/rust-lang/rust/commit/590fdba28468d53dcfc498dc863202b924f89ffa"}, {"sha": "3b9548e163ed64d21d56873a4ba3583bf2f44535", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b9548e163ed64d21d56873a4ba3583bf2f44535", "html_url": "https://github.com/rust-lang/rust/commit/3b9548e163ed64d21d56873a4ba3583bf2f44535"}], "stats": {"total": 120, "additions": 62, "deletions": 58}, "files": [{"sha": "81b85a269cb2570264057d806e6270d9da2584a0", "filename": "crates/rust-analyzer/src/dispatch.rs", "status": "modified", "additions": 23, "deletions": 17, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/dd84b7a24d3c6b30e3c1c32259357278f12d0987/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd84b7a24d3c6b30e3c1c32259357278f12d0987/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs?ref=dd84b7a24d3c6b30e3c1c32259357278f12d0987", "patch": "@@ -28,17 +28,16 @@ impl<'a> RequestDispatcher<'a> {\n     {\n         let (id, params) = match self.parse::<R>() {\n             Some(it) => it,\n-            None => {\n-                return Ok(self);\n-            }\n+            None => return Ok(self),\n         };\n         let world = panic::AssertUnwindSafe(&mut *self.global_state);\n+\n         let response = panic::catch_unwind(move || {\n             let _pctx = stdx::panic_context::enter(format!(\"request: {} {:#?}\", R::METHOD, params));\n             let result = f(world.0, params);\n             result_to_response::<R>(id, result)\n         })\n-        .map_err(|_| format!(\"sync task {:?} panicked\", R::METHOD))?;\n+        .map_err(|_err| format!(\"sync task {:?} panicked\", R::METHOD))?;\n         self.global_state.respond(response);\n         Ok(self)\n     }\n@@ -47,17 +46,15 @@ impl<'a> RequestDispatcher<'a> {\n     pub(crate) fn on<R>(\n         &mut self,\n         f: fn(GlobalStateSnapshot, R::Params) -> Result<R::Result>,\n-    ) -> Result<&mut Self>\n+    ) -> &mut Self\n     where\n         R: lsp_types::request::Request + 'static,\n         R::Params: DeserializeOwned + Send + fmt::Debug + 'static,\n         R::Result: Serialize + 'static,\n     {\n         let (id, params) = match self.parse::<R>() {\n             Some(it) => it,\n-            None => {\n-                return Ok(self);\n-            }\n+            None => return self,\n         };\n \n         self.global_state.task_pool.handle.spawn({\n@@ -71,7 +68,7 @@ impl<'a> RequestDispatcher<'a> {\n             }\n         });\n \n-        Ok(self)\n+        self\n     }\n \n     pub(crate) fn finish(&mut self) {\n@@ -82,7 +79,7 @@ impl<'a> RequestDispatcher<'a> {\n                 lsp_server::ErrorCode::MethodNotFound as i32,\n                 \"unknown request\".to_string(),\n             );\n-            self.global_state.respond(response)\n+            self.global_state.respond(response);\n         }\n     }\n \n@@ -91,15 +88,24 @@ impl<'a> RequestDispatcher<'a> {\n         R: lsp_types::request::Request + 'static,\n         R::Params: DeserializeOwned + 'static,\n     {\n-        let req = self.req.take()?;\n-        let (id, params) = match req.extract::<R::Params>(R::METHOD) {\n-            Ok(it) => it,\n-            Err(req) => {\n-                self.req = Some(req);\n+        let req = match &self.req {\n+            Some(req) if req.method == R::METHOD => self.req.take().unwrap(),\n+            _ => return None,\n+        };\n+\n+        let res = crate::from_json(R::METHOD, req.params);\n+        match res {\n+            Ok(params) => return Some((req.id, params)),\n+            Err(err) => {\n+                let response = lsp_server::Response::new_err(\n+                    req.id,\n+                    lsp_server::ErrorCode::InvalidParams as i32,\n+                    err.to_string(),\n+                );\n+                self.global_state.respond(response);\n                 return None;\n             }\n-        };\n-        Some((id, params))\n+        }\n     }\n }\n "}, {"sha": "ad08f1afb5abb1e79b35a6b8f613b998f410ef1d", "filename": "crates/rust-analyzer/src/lib.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd84b7a24d3c6b30e3c1c32259357278f12d0987/crates%2Frust-analyzer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd84b7a24d3c6b30e3c1c32259357278f12d0987/crates%2Frust-analyzer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flib.rs?ref=dd84b7a24d3c6b30e3c1c32259357278f12d0987", "patch": "@@ -37,14 +37,16 @@ mod document;\n pub mod lsp_ext;\n pub mod config;\n \n-use serde::de::DeserializeOwned;\n-\n-pub type Result<T, E = Box<dyn std::error::Error + Send + Sync>> = std::result::Result<T, E>;\n-pub use crate::{caps::server_capabilities, main_loop::main_loop};\n use ide::AnalysisHost;\n+use serde::de::DeserializeOwned;\n use std::fmt;\n use vfs::Vfs;\n \n+pub use crate::{caps::server_capabilities, main_loop::main_loop};\n+\n+pub type Error = Box<dyn std::error::Error + Send + Sync>;\n+pub type Result<T, E = Error> = std::result::Result<T, E>;\n+\n pub fn from_json<T: DeserializeOwned>(what: &'static str, json: serde_json::Value) -> Result<T> {\n     let res = T::deserialize(&json)\n         .map_err(|e| format!(\"Failed to deserialize {}: {}; {}\", what, e, json))?;"}, {"sha": "53f8ca1946b5a7f27bf93803839896c90d606910", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 33, "deletions": 37, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/dd84b7a24d3c6b30e3c1c32259357278f12d0987/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd84b7a24d3c6b30e3c1c32259357278f12d0987/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=dd84b7a24d3c6b30e3c1c32259357278f12d0987", "patch": "@@ -403,53 +403,49 @@ impl GlobalState {\n                 handlers::handle_matching_brace(s.snapshot(), p)\n             })?\n             .on_sync::<lsp_ext::MemoryUsage>(|s, p| handlers::handle_memory_usage(s, p))?\n-            .on::<lsp_ext::AnalyzerStatus>(handlers::handle_analyzer_status)?\n-            .on::<lsp_ext::SyntaxTree>(handlers::handle_syntax_tree)?\n-            .on::<lsp_ext::ExpandMacro>(handlers::handle_expand_macro)?\n-            .on::<lsp_ext::ParentModule>(handlers::handle_parent_module)?\n-            .on::<lsp_ext::Runnables>(handlers::handle_runnables)?\n-            .on::<lsp_ext::InlayHints>(handlers::handle_inlay_hints)?\n-            .on::<lsp_ext::CodeActionRequest>(handlers::handle_code_action)?\n-            .on::<lsp_ext::ResolveCodeActionRequest>(handlers::handle_resolve_code_action)?\n-            .on::<lsp_ext::HoverRequest>(handlers::handle_hover)?\n-            .on::<lsp_ext::ExternalDocs>(handlers::handle_open_docs)?\n-            .on::<lsp_types::request::OnTypeFormatting>(handlers::handle_on_type_formatting)?\n-            .on::<lsp_types::request::DocumentSymbolRequest>(handlers::handle_document_symbol)?\n-            .on::<lsp_types::request::WorkspaceSymbol>(handlers::handle_workspace_symbol)?\n-            .on::<lsp_types::request::GotoDefinition>(handlers::handle_goto_definition)?\n-            .on::<lsp_types::request::GotoImplementation>(handlers::handle_goto_implementation)?\n-            .on::<lsp_types::request::GotoTypeDefinition>(handlers::handle_goto_type_definition)?\n-            .on::<lsp_types::request::Completion>(handlers::handle_completion)?\n-            .on::<lsp_types::request::CodeLensRequest>(handlers::handle_code_lens)?\n-            .on::<lsp_types::request::CodeLensResolve>(handlers::handle_code_lens_resolve)?\n-            .on::<lsp_types::request::FoldingRangeRequest>(handlers::handle_folding_range)?\n-            .on::<lsp_types::request::SignatureHelpRequest>(handlers::handle_signature_help)?\n-            .on::<lsp_types::request::PrepareRenameRequest>(handlers::handle_prepare_rename)?\n-            .on::<lsp_types::request::Rename>(handlers::handle_rename)?\n-            .on::<lsp_types::request::References>(handlers::handle_references)?\n-            .on::<lsp_types::request::Formatting>(handlers::handle_formatting)?\n-            .on::<lsp_types::request::DocumentHighlightRequest>(\n-                handlers::handle_document_highlight,\n-            )?\n-            .on::<lsp_types::request::CallHierarchyPrepare>(\n-                handlers::handle_call_hierarchy_prepare,\n-            )?\n+            .on::<lsp_ext::AnalyzerStatus>(handlers::handle_analyzer_status)\n+            .on::<lsp_ext::SyntaxTree>(handlers::handle_syntax_tree)\n+            .on::<lsp_ext::ExpandMacro>(handlers::handle_expand_macro)\n+            .on::<lsp_ext::ParentModule>(handlers::handle_parent_module)\n+            .on::<lsp_ext::Runnables>(handlers::handle_runnables)\n+            .on::<lsp_ext::InlayHints>(handlers::handle_inlay_hints)\n+            .on::<lsp_ext::CodeActionRequest>(handlers::handle_code_action)\n+            .on::<lsp_ext::ResolveCodeActionRequest>(handlers::handle_resolve_code_action)\n+            .on::<lsp_ext::HoverRequest>(handlers::handle_hover)\n+            .on::<lsp_ext::ExternalDocs>(handlers::handle_open_docs)\n+            .on::<lsp_types::request::OnTypeFormatting>(handlers::handle_on_type_formatting)\n+            .on::<lsp_types::request::DocumentSymbolRequest>(handlers::handle_document_symbol)\n+            .on::<lsp_types::request::WorkspaceSymbol>(handlers::handle_workspace_symbol)\n+            .on::<lsp_types::request::GotoDefinition>(handlers::handle_goto_definition)\n+            .on::<lsp_types::request::GotoImplementation>(handlers::handle_goto_implementation)\n+            .on::<lsp_types::request::GotoTypeDefinition>(handlers::handle_goto_type_definition)\n+            .on::<lsp_types::request::Completion>(handlers::handle_completion)\n+            .on::<lsp_types::request::CodeLensRequest>(handlers::handle_code_lens)\n+            .on::<lsp_types::request::CodeLensResolve>(handlers::handle_code_lens_resolve)\n+            .on::<lsp_types::request::FoldingRangeRequest>(handlers::handle_folding_range)\n+            .on::<lsp_types::request::SignatureHelpRequest>(handlers::handle_signature_help)\n+            .on::<lsp_types::request::PrepareRenameRequest>(handlers::handle_prepare_rename)\n+            .on::<lsp_types::request::Rename>(handlers::handle_rename)\n+            .on::<lsp_types::request::References>(handlers::handle_references)\n+            .on::<lsp_types::request::Formatting>(handlers::handle_formatting)\n+            .on::<lsp_types::request::DocumentHighlightRequest>(handlers::handle_document_highlight)\n+            .on::<lsp_types::request::CallHierarchyPrepare>(handlers::handle_call_hierarchy_prepare)\n             .on::<lsp_types::request::CallHierarchyIncomingCalls>(\n                 handlers::handle_call_hierarchy_incoming,\n-            )?\n+            )\n             .on::<lsp_types::request::CallHierarchyOutgoingCalls>(\n                 handlers::handle_call_hierarchy_outgoing,\n-            )?\n+            )\n             .on::<lsp_types::request::SemanticTokensFullRequest>(\n                 handlers::handle_semantic_tokens_full,\n-            )?\n+            )\n             .on::<lsp_types::request::SemanticTokensFullDeltaRequest>(\n                 handlers::handle_semantic_tokens_full_delta,\n-            )?\n+            )\n             .on::<lsp_types::request::SemanticTokensRangeRequest>(\n                 handlers::handle_semantic_tokens_range,\n-            )?\n-            .on::<lsp_ext::Ssr>(handlers::handle_ssr)?\n+            )\n+            .on::<lsp_ext::Ssr>(handlers::handle_ssr)\n             .finish();\n         Ok(())\n     }"}]}