{"sha": "c69ff08dc9074ed92c11e9fb6bf267288aa3fa25", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2OWZmMDhkYzkwNzRlZDkyYzExZTlmYjZiZjI2NzI4OGFhM2ZhMjU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-08T14:40:04Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-08T14:40:24Z"}, "message": "eglot worksapce symbol", "tree": {"sha": "0531a3f9ddb0a1182678580fca4ea7e8fafca841", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0531a3f9ddb0a1182678580fca4ea7e8fafca841"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c69ff08dc9074ed92c11e9fb6bf267288aa3fa25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c69ff08dc9074ed92c11e9fb6bf267288aa3fa25", "html_url": "https://github.com/rust-lang/rust/commit/c69ff08dc9074ed92c11e9fb6bf267288aa3fa25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c69ff08dc9074ed92c11e9fb6bf267288aa3fa25/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0952b928addce602bef9b671d7904033df39f632", "url": "https://api.github.com/repos/rust-lang/rust/commits/0952b928addce602bef9b671d7904033df39f632", "html_url": "https://github.com/rust-lang/rust/commit/0952b928addce602bef9b671d7904033df39f632"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "4d555d4886e5d9ef6fe5bb4e5860d36d0ff4719a", "filename": "crates/ra_lsp_server/src/main.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c69ff08dc9074ed92c11e9fb6bf267288aa3fa25/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c69ff08dc9074ed92c11e9fb6bf267288aa3fa25/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs?ref=c69ff08dc9074ed92c11e9fb6bf267288aa3fa25", "patch": "@@ -29,7 +29,6 @@ fn main() -> Result<()> {\n         }\n     }\n }\n-\n fn main_inner() -> Result<()> {\n     let (receiver, sender, threads) = stdio_transport();\n     let cwd = ::std::env::current_dir()?;\n@@ -50,3 +49,27 @@ fn main_inner() -> Result<()> {\n     info!(\"... IO is down\");\n     Ok(())\n }\n+\n+/*\n+                    (let ((backend (eglot-xref-backend)))\n+                      (mapcar \n+                       (lambda (xref)\n+                         (let ((loc (xref-item-location xref)))\n+                           (propertize\n+                            (concat\n+                             (when (xref-file-location-p loc)\n+                               (with-slots (file line column) loc\n+                                 (format \"%s:%s:%s:\" \n+                                         (propertize (file-relative-name file)\n+                                                     'face 'compilation-info)\n+                                         (propertize (format \"%s\" line)\n+                                                     'face 'compilation-line\n+                                                     )\n+                                         column)))\n+                             (xref-item-summary xref))\n+                            'xref xref)))\n+                       (xref-backend-apropos backend \"Analysis\"))\n+                      )\n+\n+\n+*/"}, {"sha": "a0b17f3af26f12243cc1d5dcc176b790d1b20dca", "filename": "editors/emacs/ra.el", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/c69ff08dc9074ed92c11e9fb6bf267288aa3fa25/editors%2Femacs%2Fra.el", "raw_url": "https://github.com/rust-lang/rust/raw/c69ff08dc9074ed92c11e9fb6bf267288aa3fa25/editors%2Femacs%2Fra.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Femacs%2Fra.el?ref=c69ff08dc9074ed92c11e9fb6bf267288aa3fa25", "patch": "@@ -83,5 +83,41 @@\n   \"Set selections cache for current buffer state and START END.\"\n   (setq ra--selections-cache `(,(buffer-modified-tick) 0 ,(ra--selections start end))))\n \n+\n+(require 'eglot)\n+(require 'ivy)\n+(require 'counsel)\n+\n+\n+(defun workspace-symbols ()\n+  (interactive)\n+  (let ((buf (current-buffer)))\n+    (ivy-read \"Symbol name: \"\n+              (lambda (str)\n+                (with-current-buffer buf\n+                  (let ((backend (eglot-xref-backend)))\n+                    (mapcar \n+                     (lambda (xref)\n+                       (let ((loc (xref-item-location xref)))\n+                         (propertize\n+                          (concat\n+                           (when (xref-file-location-p loc)\n+                             (with-slots (file line column) loc\n+                               (format \"%s:%s:%s:\" \n+                                       (propertize (file-relative-name file)\n+                                                   'face 'compilation-info)\n+                                       (propertize (format \"%s\" line)\n+                                                   'face 'compilation-line\n+                                                   )\n+                                       column)))\n+                           (xref-item-summary xref))\n+                          'xref xref)))\n+                     (xref-backend-apropos backend str))\n+                    )))\n+              :dynamic-collection t\n+              :action (lambda (item)\n+                        (xref--pop-to-location (get-text-property 0 'xref item))))))\n+\n+(add-to-list 'eglot-server-programs '(rust-mode . (\"ra_lsp_server\")))\n (provide 'ra)\n ;;; ra.el ends here"}]}