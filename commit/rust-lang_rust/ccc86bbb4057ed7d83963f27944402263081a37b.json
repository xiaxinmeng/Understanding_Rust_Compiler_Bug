{"sha": "ccc86bbb4057ed7d83963f27944402263081a37b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYzg2YmJiNDA1N2VkN2Q4Mzk2M2YyNzk0NDQwMjI2MzA4MWEzN2I=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-14T22:32:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-14T22:32:39Z"}, "message": "Rollup merge of #77946 - tmiasko:validate-source-scope, r=jonas-schievink\n\nValidate references to source scopes", "tree": {"sha": "bb13fc6459b2c7e3afe6974467b96d344afd89e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb13fc6459b2c7e3afe6974467b96d344afd89e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccc86bbb4057ed7d83963f27944402263081a37b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfh3yHCRBK7hj4Ov3rIwAAdHIIAEIxVnd0rPST17gaTH31Xb+m\nbqxjW1OLSurxo2I3ADOBytPkCM0ei5/XeP7+5Aj5jeC/Km1Rvs10MYM8VpI749GO\nzNVld/UmsVgSI6SJWR72JX7rOss5mNlFwV0oDAEetp8210JA+J5FxL8yk4mTcWfH\nNGmx3qCgzbDPq/ov6o00AV5IuVn1B5bKOjCfnxpfQFiQnJ0kaZM0CvS3isLzswug\n25nKZ+9q8SYTts+0FzQ4hIdu23N1erKySnQMlT5hsFPmQ602LlgTJpxbNw8aMSbk\nnnE1LApfLljEfxv3/00LQng65Jw+ujq9jcIwux+D/7rNXUAgEX72o+7Qj/s1ms0=\n=J9Do\n-----END PGP SIGNATURE-----\n", "payload": "tree bb13fc6459b2c7e3afe6974467b96d344afd89e2\nparent df08fe7214a556b524b927f9af52de8861fe1121\nparent 585e737ec1844e13bbf2f50f3dc1057057a52184\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1602714759 +0900\ncommitter GitHub <noreply@github.com> 1602714759 +0900\n\nRollup merge of #77946 - tmiasko:validate-source-scope, r=jonas-schievink\n\nValidate references to source scopes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccc86bbb4057ed7d83963f27944402263081a37b", "html_url": "https://github.com/rust-lang/rust/commit/ccc86bbb4057ed7d83963f27944402263081a37b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccc86bbb4057ed7d83963f27944402263081a37b/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df08fe7214a556b524b927f9af52de8861fe1121", "url": "https://api.github.com/repos/rust-lang/rust/commits/df08fe7214a556b524b927f9af52de8861fe1121", "html_url": "https://github.com/rust-lang/rust/commit/df08fe7214a556b524b927f9af52de8861fe1121"}, {"sha": "585e737ec1844e13bbf2f50f3dc1057057a52184", "url": "https://api.github.com/repos/rust-lang/rust/commits/585e737ec1844e13bbf2f50f3dc1057057a52184", "html_url": "https://github.com/rust-lang/rust/commit/585e737ec1844e13bbf2f50f3dc1057057a52184"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "beffffa727e7eda784e1434eca704de885a7908f", "filename": "compiler/rustc_mir/src/transform/validate.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ccc86bbb4057ed7d83963f27944402263081a37b/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccc86bbb4057ed7d83963f27944402263081a37b/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fvalidate.rs?ref=ccc86bbb4057ed7d83963f27944402263081a37b", "patch": "@@ -8,7 +8,7 @@ use super::MirPass;\n use rustc_middle::mir::visit::{PlaceContext, Visitor};\n use rustc_middle::mir::{\n     AggregateKind, BasicBlock, Body, BorrowKind, Local, Location, MirPhase, Operand, Rvalue,\n-    Statement, StatementKind, Terminator, TerminatorKind, VarDebugInfo,\n+    SourceScope, Statement, StatementKind, Terminator, TerminatorKind, VarDebugInfo,\n };\n use rustc_middle::ty::relate::{Relate, RelateResult, TypeRelation};\n use rustc_middle::ty::{self, ParamEnv, Ty, TyCtxt};\n@@ -229,9 +229,10 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n         }\n     }\n \n-    fn visit_var_debug_info(&mut self, _var_debug_info: &VarDebugInfo<'tcx>) {\n+    fn visit_var_debug_info(&mut self, var_debug_info: &VarDebugInfo<'tcx>) {\n         // Debuginfo can contain field projections, which count as a use of the base local. Skip\n         // debuginfo so that we avoid the storage liveness assertion in that case.\n+        self.visit_source_info(&var_debug_info.source_info);\n     }\n \n     fn visit_operand(&mut self, operand: &Operand<'tcx>, location: Location) {\n@@ -432,4 +433,16 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n             | TerminatorKind::GeneratorDrop => {}\n         }\n     }\n+\n+    fn visit_source_scope(&mut self, scope: &SourceScope) {\n+        if self.body.source_scopes.get(*scope).is_none() {\n+            self.tcx.sess.diagnostic().delay_span_bug(\n+                self.body.span,\n+                &format!(\n+                    \"broken MIR in {:?} ({}):\\ninvalid source scope {:?}\",\n+                    self.body.source.instance, self.when, scope,\n+                ),\n+            );\n+        }\n+    }\n }"}]}