{"sha": "4375af53af48febdd3534d8d300b7769a4e0fb1c", "node_id": "C_kwDOAAsO6NoAKDQzNzVhZjUzYWY0OGZlYmRkMzUzNGQ4ZDMwMGI3NzY5YTRlMGZiMWM", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-20T18:46:29Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-20T19:52:37Z"}, "message": "Derive `HashStable` on `GenericArgKind` instead of implementing it by hand", "tree": {"sha": "2e9a4334fb37ecb045a6aadce04d1b460fc80edd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e9a4334fb37ecb045a6aadce04d1b460fc80edd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4375af53af48febdd3534d8d300b7769a4e0fb1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4375af53af48febdd3534d8d300b7769a4e0fb1c", "html_url": "https://github.com/rust-lang/rust/commit/4375af53af48febdd3534d8d300b7769a4e0fb1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4375af53af48febdd3534d8d300b7769a4e0fb1c/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a57fa08f483620c2b4f33c6b5dcdbbf2b4c08ad8", "url": "https://api.github.com/repos/rust-lang/rust/commits/a57fa08f483620c2b4f33c6b5dcdbbf2b4c08ad8", "html_url": "https://github.com/rust-lang/rust/commit/a57fa08f483620c2b4f33c6b5dcdbbf2b4c08ad8"}], "stats": {"total": 30, "additions": 1, "deletions": 29}, "files": [{"sha": "02baa395c3c2f5cbe5b305333f6baceacad58730", "filename": "compiler/rustc_middle/src/ty/impls_ty.rs", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4375af53af48febdd3534d8d300b7769a4e0fb1c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4375af53af48febdd3534d8d300b7769a4e0fb1c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fimpls_ty.rs?ref=4375af53af48febdd3534d8d300b7769a4e0fb1c", "patch": "@@ -73,34 +73,6 @@ impl<'a, 'tcx> HashStable<StableHashingContext<'a>> for ty::subst::GenericArg<'t\n     }\n }\n \n-impl<'a, 'tcx> HashStable<StableHashingContext<'a>> for ty::subst::GenericArgKind<'tcx> {\n-    fn hash_stable(&self, hcx: &mut StableHashingContext<'a>, hasher: &mut StableHasher) {\n-        match self {\n-            // WARNING: We dedup cache the `HashStable` results for `List`\n-            // while ignoring types and freely transmute\n-            // between `List<Ty<'tcx>>` and `List<GenericArg<'tcx>>`.\n-            // See `fn mk_type_list` for more details.\n-            //\n-            // We therefore hash types without adding a hash for their discriminant.\n-            //\n-            // In order to make it very unlikely for the sequence of bytes being hashed for\n-            // a `GenericArgKind::Type` to be the same as the sequence of bytes being\n-            // hashed for one of the other variants, we hash some very high number instead\n-            // of their actual discriminant since `TyKind` should never start with anything\n-            // that high.\n-            ty::subst::GenericArgKind::Type(ty) => ty.hash_stable(hcx, hasher),\n-            ty::subst::GenericArgKind::Const(ct) => {\n-                0xF3u8.hash_stable(hcx, hasher);\n-                ct.hash_stable(hcx, hasher);\n-            }\n-            ty::subst::GenericArgKind::Lifetime(lt) => {\n-                0xF5u8.hash_stable(hcx, hasher);\n-                lt.hash_stable(hcx, hasher);\n-            }\n-        }\n-    }\n-}\n-\n // AllocIds get resolved to whatever they point to (to be stable)\n impl<'a> HashStable<StableHashingContext<'a>> for mir::interpret::AllocId {\n     fn hash_stable(&self, hcx: &mut StableHashingContext<'a>, hasher: &mut StableHasher) {"}, {"sha": "2b85eb971ce838cfc3beedeef912d61479132dd9", "filename": "compiler/rustc_middle/src/ty/subst.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4375af53af48febdd3534d8d300b7769a4e0fb1c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4375af53af48febdd3534d8d300b7769a4e0fb1c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs?ref=4375af53af48febdd3534d8d300b7769a4e0fb1c", "patch": "@@ -48,7 +48,7 @@ const TYPE_TAG: usize = 0b00;\n const REGION_TAG: usize = 0b01;\n const CONST_TAG: usize = 0b10;\n \n-#[derive(Debug, TyEncodable, TyDecodable, PartialEq, Eq, PartialOrd, Ord)]\n+#[derive(Debug, TyEncodable, TyDecodable, PartialEq, Eq, PartialOrd, Ord, HashStable)]\n pub enum GenericArgKind<'tcx> {\n     Lifetime(ty::Region<'tcx>),\n     Type(Ty<'tcx>),"}]}