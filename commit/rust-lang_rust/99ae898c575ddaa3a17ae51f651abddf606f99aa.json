{"sha": "99ae898c575ddaa3a17ae51f651abddf606f99aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5YWU4OThjNTc1ZGRhYTNhMTdhZTUxZjY1MWFiZGRmNjA2Zjk5YWE=", "commit": {"author": {"name": "nxnfufunezn", "email": "nxnfufunezn@gmail.com", "date": "2015-10-16T20:20:33Z"}, "committer": {"name": "nxnfufunezn", "email": "nxnfufunezn@gmail.com", "date": "2015-10-16T20:20:33Z"}, "message": "Add span_lint_note and span_lint_help to the LintContext", "tree": {"sha": "f3c6ffedd70c7fa9b665da4d83d1f6a8a947a3a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3c6ffedd70c7fa9b665da4d83d1f6a8a947a3a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99ae898c575ddaa3a17ae51f651abddf606f99aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99ae898c575ddaa3a17ae51f651abddf606f99aa", "html_url": "https://github.com/rust-lang/rust/commit/99ae898c575ddaa3a17ae51f651abddf606f99aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99ae898c575ddaa3a17ae51f651abddf606f99aa/comments", "author": {"login": "nxnfufunezn", "id": 9052031, "node_id": "MDQ6VXNlcjkwNTIwMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9052031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nxnfufunezn", "html_url": "https://github.com/nxnfufunezn", "followers_url": "https://api.github.com/users/nxnfufunezn/followers", "following_url": "https://api.github.com/users/nxnfufunezn/following{/other_user}", "gists_url": "https://api.github.com/users/nxnfufunezn/gists{/gist_id}", "starred_url": "https://api.github.com/users/nxnfufunezn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nxnfufunezn/subscriptions", "organizations_url": "https://api.github.com/users/nxnfufunezn/orgs", "repos_url": "https://api.github.com/users/nxnfufunezn/repos", "events_url": "https://api.github.com/users/nxnfufunezn/events{/privacy}", "received_events_url": "https://api.github.com/users/nxnfufunezn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nxnfufunezn", "id": 9052031, "node_id": "MDQ6VXNlcjkwNTIwMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9052031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nxnfufunezn", "html_url": "https://github.com/nxnfufunezn", "followers_url": "https://api.github.com/users/nxnfufunezn/followers", "following_url": "https://api.github.com/users/nxnfufunezn/following{/other_user}", "gists_url": "https://api.github.com/users/nxnfufunezn/gists{/gist_id}", "starred_url": "https://api.github.com/users/nxnfufunezn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nxnfufunezn/subscriptions", "organizations_url": "https://api.github.com/users/nxnfufunezn/orgs", "repos_url": "https://api.github.com/users/nxnfufunezn/repos", "events_url": "https://api.github.com/users/nxnfufunezn/events{/privacy}", "received_events_url": "https://api.github.com/users/nxnfufunezn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87e26efbf28ab23fceaf1bd7cd06bd8ad066de02", "url": "https://api.github.com/repos/rust-lang/rust/commits/87e26efbf28ab23fceaf1bd7cd06bd8ad066de02", "html_url": "https://github.com/rust-lang/rust/commit/87e26efbf28ab23fceaf1bd7cd06bd8ad066de02"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "e3eac2e6068076ef20177cf48dd282b593ef321b", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/99ae898c575ddaa3a17ae51f651abddf606f99aa/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99ae898c575ddaa3a17ae51f651abddf606f99aa/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=99ae898c575ddaa3a17ae51f651abddf606f99aa", "patch": "@@ -435,6 +435,28 @@ pub trait LintContext: Sized {\n         self.lookup_and_emit(lint, Some(span), msg);\n     }\n \n+    /// Emit a lint and note at the appropriate level, for a particular span.\n+    fn span_lint_note(&self, lint: &'static Lint, span: Span, msg: &str,\n+                      note_span: Span, note: &str) {\n+        self.span_lint(lint, span, msg);\n+        if self.current_level(lint) != Level::Allow {\n+            if note_span == span {\n+                self.sess().fileline_note(note_span, note)\n+            } else {\n+                self.sess().span_note(note_span, note)\n+            }\n+        }\n+    }\n+\n+    /// Emit a lint and help at the appropriate level, for a particular span.\n+    fn span_lint_help(&self, lint: &'static Lint, span: Span,\n+                      msg: &str, help: &str) {\n+        self.span_lint(lint, span, msg);\n+        if self.current_level(lint) != Level::Allow {\n+            self.sess().span_help(span, help)\n+        }\n+    }\n+\n     /// Emit a lint at the appropriate level, with no associated span.\n     fn lint(&self, lint: &'static Lint, msg: &str) {\n         self.lookup_and_emit(lint, None, msg);"}]}