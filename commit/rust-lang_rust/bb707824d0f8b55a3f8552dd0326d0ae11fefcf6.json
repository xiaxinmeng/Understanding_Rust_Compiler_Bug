{"sha": "bb707824d0f8b55a3f8552dd0326d0ae11fefcf6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiNzA3ODI0ZDBmOGI1NWEzZjg1NTJkZDAzMjZkMGFlMTFmZWZjZjY=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-10-04T14:33:11Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-10-04T15:11:33Z"}, "message": "middle::dead -> rustc_passes", "tree": {"sha": "8bb617d1d4214c8a986a84a5461432f426cf9fd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bb617d1d4214c8a986a84a5461432f426cf9fd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb707824d0f8b55a3f8552dd0326d0ae11fefcf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb707824d0f8b55a3f8552dd0326d0ae11fefcf6", "html_url": "https://github.com/rust-lang/rust/commit/bb707824d0f8b55a3f8552dd0326d0ae11fefcf6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb707824d0f8b55a3f8552dd0326d0ae11fefcf6/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91a096a9b8c05011c1a76e7ceb578000ce1e91f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/91a096a9b8c05011c1a76e7ceb578000ce1e91f6", "html_url": "https://github.com/rust-lang/rust/commit/91a096a9b8c05011c1a76e7ceb578000ce1e91f6"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "46e39bec3249eb4018c056b4ef1443922d762056", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb707824d0f8b55a3f8552dd0326d0ae11fefcf6/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb707824d0f8b55a3f8552dd0326d0ae11fefcf6/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=bb707824d0f8b55a3f8552dd0326d0ae11fefcf6", "patch": "@@ -102,7 +102,6 @@ pub mod lint;\n pub mod middle {\n     pub mod expr_use_visitor;\n     pub mod cstore;\n-    pub mod dead;\n     pub mod dependency_format;\n     pub mod diagnostic_items;\n     pub mod entry;"}, {"sha": "2fa6edb46b1c04088fc49743d45d4fc04d5d21c8", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb707824d0f8b55a3f8552dd0326d0ae11fefcf6/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb707824d0f8b55a3f8552dd0326d0ae11fefcf6/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=bb707824d0f8b55a3f8552dd0326d0ae11fefcf6", "patch": "@@ -972,7 +972,7 @@ fn analysis(tcx: TyCtxt<'_>, cnum: CrateNum) -> Result<()> {\n                     tcx.ensure().check_private_in_public(LOCAL_CRATE);\n                 });\n             }, {\n-                time(sess, \"death checking\", || middle::dead::check_crate(tcx));\n+                time(sess, \"death checking\", || rustc_passes::dead::check_crate(tcx));\n             },  {\n                 time(sess, \"unused lib feature checking\", || {\n                     stability::check_unused_or_stable_features(tcx)"}, {"sha": "f2aef2c12c7df1b4d3cfffb223247ea3d83265b4", "filename": "src/librustc_passes/dead.rs", "status": "renamed", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bb707824d0f8b55a3f8552dd0326d0ae11fefcf6/src%2Flibrustc_passes%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb707824d0f8b55a3f8552dd0326d0ae11fefcf6/src%2Flibrustc_passes%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdead.rs?ref=bb707824d0f8b55a3f8552dd0326d0ae11fefcf6", "patch": "@@ -2,18 +2,18 @@\n // closely. The idea is that all reachable symbols are live, codes called\n // from live codes are live, and everything else is dead.\n \n-use crate::hir::Node;\n-use crate::hir::{self, PatKind, TyKind};\n-use crate::hir::intravisit::{self, Visitor, NestedVisitorMap};\n-use crate::hir::itemlikevisit::ItemLikeVisitor;\n-\n-use crate::hir::def::{CtorOf, Res, DefKind};\n-use crate::hir::CodegenFnAttrFlags;\n-use crate::hir::def_id::{DefId, LOCAL_CRATE};\n-use crate::lint;\n-use crate::middle::privacy;\n-use crate::ty::{self, DefIdTree, TyCtxt};\n-use crate::util::nodemap::FxHashSet;\n+use rustc::hir::Node;\n+use rustc::hir::{self, PatKind, TyKind};\n+use rustc::hir::intravisit::{self, Visitor, NestedVisitorMap};\n+use rustc::hir::itemlikevisit::ItemLikeVisitor;\n+\n+use rustc::hir::def::{CtorOf, Res, DefKind};\n+use rustc::hir::CodegenFnAttrFlags;\n+use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc::lint;\n+use rustc::middle::privacy;\n+use rustc::ty::{self, DefIdTree, TyCtxt};\n+use rustc::util::nodemap::FxHashSet;\n \n use rustc_data_structures::fx::FxHashMap;\n ", "previous_filename": "src/librustc/middle/dead.rs"}, {"sha": "c0b4a317cf947dcb48c3b629aaaca20e693c349f", "filename": "src/librustc_passes/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb707824d0f8b55a3f8552dd0326d0ae11fefcf6/src%2Flibrustc_passes%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb707824d0f8b55a3f8552dd0326d0ae11fefcf6/src%2Flibrustc_passes%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib.rs?ref=bb707824d0f8b55a3f8552dd0326d0ae11fefcf6", "patch": "@@ -22,6 +22,7 @@ pub mod ast_validation;\n pub mod hir_stats;\n pub mod layout_test;\n pub mod loops;\n+pub mod dead;\n mod liveness;\n \n pub fn provide(providers: &mut Providers<'_>) {"}]}