{"sha": "f02c9e37415de1b838ec08f6cbc54524d5c755f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMmM5ZTM3NDE1ZGUxYjgzOGVjMDhmNmNiYzU0NTI0ZDVjNzU1Zjc=", "commit": {"author": {"name": "Stjepan Glavina", "email": "stjepang@gmail.com", "date": "2017-01-26T10:09:45Z"}, "committer": {"name": "Stjepan Glavina", "email": "stjepang@gmail.com", "date": "2017-01-26T10:09:45Z"}, "message": "Rewrite the first sentence in slice::sort\n\nFor every method, the first sentence should consisely explain what it does,\nnot how. This sentence usually starts with a verb.\n\nIt's really weird for `sort` to be explained in terms of another function,\nnamely `sort_by`. There's no need for that because it's obvious how `sort`\nsorts elements: there is `T: Ord`.\n\nIf `sort_by_key` does not have to explicitly state how it's implemented,\nthen `sort` doesn't either.", "tree": {"sha": "d3931939e1c37347fad9f4990328241bb2d2b955", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3931939e1c37347fad9f4990328241bb2d2b955"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f02c9e37415de1b838ec08f6cbc54524d5c755f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f02c9e37415de1b838ec08f6cbc54524d5c755f7", "html_url": "https://github.com/rust-lang/rust/commit/f02c9e37415de1b838ec08f6cbc54524d5c755f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f02c9e37415de1b838ec08f6cbc54524d5c755f7/comments", "author": null, "committer": null, "parents": [{"sha": "2f0463a4a4f323c4deffc861349e38c6b5091782", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f0463a4a4f323c4deffc861349e38c6b5091782", "html_url": "https://github.com/rust-lang/rust/commit/2f0463a4a4f323c4deffc861349e38c6b5091782"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "11f513ed798e07edbb7509eddf14f96cab145d6d", "filename": "src/libcollections/slice.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f02c9e37415de1b838ec08f6cbc54524d5c755f7/src%2Flibcollections%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f02c9e37415de1b838ec08f6cbc54524d5c755f7/src%2Flibcollections%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fslice.rs?ref=f02c9e37415de1b838ec08f6cbc54524d5c755f7", "patch": "@@ -509,7 +509,7 @@ impl<T> [T] {\n         core_slice::SliceExt::swap(self, a, b)\n     }\n \n-    /// Reverse the order of elements in a slice, in place.\n+    /// Reverses the order of elements in a slice, in place.\n     ///\n     /// # Example\n     ///\n@@ -1062,7 +1062,7 @@ impl<T> [T] {\n         core_slice::SliceExt::binary_search_by_key(self, b, f)\n     }\n \n-    /// This is equivalent to `self.sort_by(|a, b| a.cmp(b))`.\n+    /// Sorts the slice.\n     ///\n     /// This sort is stable (i.e. does not reorder equal elements) and `O(n log n)` worst-case.\n     ///"}]}