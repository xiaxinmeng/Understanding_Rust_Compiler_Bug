{"sha": "0a4f9a26962d85d57a0b603ad324bd86fdd474cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNGY5YTI2OTYyZDg1ZDU3YTBiNjAzYWQzMjRiZDg2ZmRkNDc0Y2Y=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-25T03:31:11Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-25T03:31:11Z"}, "message": "Rebasing and making MulitDecorators work", "tree": {"sha": "52e799f280dc9482bd00dd36ef4535f1a26d8eee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52e799f280dc9482bd00dd36ef4535f1a26d8eee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a4f9a26962d85d57a0b603ad324bd86fdd474cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a4f9a26962d85d57a0b603ad324bd86fdd474cf", "html_url": "https://github.com/rust-lang/rust/commit/0a4f9a26962d85d57a0b603ad324bd86fdd474cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a4f9a26962d85d57a0b603ad324bd86fdd474cf/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a62a05c6736dce542529cb1eb67fc54c0b70db4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a62a05c6736dce542529cb1eb67fc54c0b70db4", "html_url": "https://github.com/rust-lang/rust/commit/0a62a05c6736dce542529cb1eb67fc54c0b70db4"}], "stats": {"total": 49, "additions": 13, "deletions": 36}, "files": [{"sha": "04df464129541aeee9fd75253d187d3f36f931e9", "filename": "src/librustc/plugin/registry.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0a4f9a26962d85d57a0b603ad324bd86fdd474cf/src%2Flibrustc%2Fplugin%2Fregistry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a4f9a26962d85d57a0b603ad324bd86fdd474cf/src%2Flibrustc%2Fplugin%2Fregistry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fplugin%2Fregistry.rs?ref=0a4f9a26962d85d57a0b603ad324bd86fdd474cf", "patch": "@@ -14,13 +14,8 @@ use lint::{LintPassObject, LintId, Lint};\n use session::Session;\n \n use syntax::ext::base::{SyntaxExtension, NamedSyntaxExtension, NormalTT};\n-<<<<<<< HEAD\n-use syntax::ext::base::{IdentTT, Decorator, Modifier, MultiModifier, MacroRulesTT};\n-use syntax::ext::base::MacroExpanderFn;\n-=======\n-use syntax::ext::base::{IdentTT, Decorator, MultiDecorator, Modifier, MultiModifier, MacroRulesTT};\n-use syntax::ext::base::{MacroExpanderFn};\n->>>>>>> 143f2db3174103e459218958f567985b1f47944b\n+use syntax::ext::base::{IdentTT, Decorator, Modifier, MultiModifier, MultiDecorator};\n+use syntax::ext::base::{MacroExpanderFn, MacroRulesTT};\n use syntax::codemap::Span;\n use syntax::parse::token;\n use syntax::ptr::P;"}, {"sha": "3e54e43c0296144641bb42dc2111d6d70a4897bd", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0a4f9a26962d85d57a0b603ad324bd86fdd474cf/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a4f9a26962d85d57a0b603ad324bd86fdd474cf/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=0a4f9a26962d85d57a0b603ad324bd86fdd474cf", "patch": "@@ -145,18 +145,18 @@ pub trait MultiItemDecorator {\n               sp: Span,\n               meta_item: &ast::MetaItem,\n               item: &Annotatable,\n-              push: Box<FnMut(Annotatable)>);\n+              push:  &mut FnMut(Annotatable));\n }\n \n impl<F> MultiItemDecorator for F\n-    where F : Fn(&mut ExtCtxt, Span, &ast::MetaItem, &Annotatable, Box<FnMut(Annotatable)>)\n+    where F : Fn(&mut ExtCtxt, Span, &ast::MetaItem, &Annotatable, &mut FnMut(Annotatable))\n {\n     fn expand(&self,\n               ecx: &mut ExtCtxt,\n               sp: Span,\n               meta_item: &ast::MetaItem,\n               item: &Annotatable,\n-              push: Box<FnMut(Annotatable)>) {\n+              push: &mut FnMut(Annotatable)) {\n         (*self)(ecx, sp, meta_item, item, push)\n     }\n }\n@@ -515,13 +515,6 @@ fn initial_syntax_expander_table<'feat>(ecfg: &expand::ExpansionConfig<'feat>)\n     syntax_expanders.insert(intern(\"log_syntax\"),\n                             builtin_normal_expander(\n                                     ext::log_syntax::expand_syntax_ext));\n-<<<<<<< HEAD\n-=======\n-    syntax_expanders.insert(intern(\"derive\"),\n-                            MultiDecorator(box ext::deriving::expand_meta_derive));\n-    syntax_expanders.insert(intern(\"deriving\"),\n-                            MultiDecorator(box ext::deriving::expand_deprecated_deriving));\n->>>>>>> 143f2db3174103e459218958f567985b1f47944b\n \n     ext::deriving::register_all(&mut syntax_expanders);\n \n@@ -586,11 +579,6 @@ fn initial_syntax_expander_table<'feat>(ecfg: &expand::ExpansionConfig<'feat>)\n     syntax_expanders.insert(intern(\"cfg\"),\n                             builtin_normal_expander(\n                                     ext::cfg::expand_cfg));\n-<<<<<<< HEAD\n-=======\n-    syntax_expanders.insert(intern(\"cfg_attr\"),\n-                            MultiModifier(box ext::cfg_attr::expand));\n->>>>>>> 143f2db3174103e459218958f567985b1f47944b\n     syntax_expanders.insert(intern(\"trace_macros\"),\n                             builtin_normal_expander(\n                                     ext::trace_macros::expand_trace_macros));"}, {"sha": "bc4a7f90911dc37fc130b5f7c4bfbe7808ae59ca", "filename": "src/libsyntax/ext/deriving/mod.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0a4f9a26962d85d57a0b603ad324bd86fdd474cf/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a4f9a26962d85d57a0b603ad324bd86fdd474cf/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs?ref=0a4f9a26962d85d57a0b603ad324bd86fdd474cf", "patch": "@@ -80,17 +80,8 @@ pub mod generic;\n fn expand_derive(cx: &mut ExtCtxt,\n                  span: Span,\n                  mitem: &MetaItem,\n-                 annotatable: &Annotatable)\n-                 -> P<Annotatable> {\n-    // Derive can only be applied to items\n-    let item = match annotatable {\n-        &Annotatable::Item(ref it) => it.clone(),\n-        _ => {\n-            cx.span_err(span, \"`derive` can only be applied to items\");\n-            return;\n-        }\n-    };\n-\n+                 item: P<Item>)\n+                 -> P<Item> {\n     item.map(|mut item| {\n         if mitem.value_str().is_some() {\n             cx.span_err(mitem.span, \"unexpected value in `derive`\");\n@@ -123,7 +114,7 @@ fn expand_derive(cx: &mut ExtCtxt,\n                 intern_and_get_ident(&format!(\"derive_{}\", tname)))));\n         }\n \n-        Annotatable::Item(item)\n+        item\n     })\n }\n "}, {"sha": "106d862042a9047e0c39764837127349ef9c2e76", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0a4f9a26962d85d57a0b603ad324bd86fdd474cf/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a4f9a26962d85d57a0b603ad324bd86fdd474cf/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=0a4f9a26962d85d57a0b603ad324bd86fdd474cf", "patch": "@@ -1134,9 +1134,12 @@ fn expand_annotatable(a: Annotatable,\n                     fld.cx.bt_push(ExpnInfo {\n                         call_site: attr.span,\n                         callee: NameAndSpan {\n-                            name: mname.get().to_string(),\n+                            name: mname.to_string(),\n                             format: MacroAttribute,\n-                            span: None\n+                            span: Some(attr.span),\n+                            // attributes can do whatever they like,\n+                            // for now.\n+                            allow_internal_unstable: true,\n                         }\n                     });\n "}]}