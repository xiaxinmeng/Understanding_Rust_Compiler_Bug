{"sha": "f7ba28573f24e69a12c3276e1963d8aa143b3460", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3YmEyODU3M2YyNGU2OWExMmMzMjc2ZTE5NjNkOGFhMTQzYjM0NjA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-13T01:34:22Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-13T01:34:22Z"}, "message": "rustc: Remove a few scattered uses of exterior vectors from typestate", "tree": {"sha": "138c46e2c25920e91bd91f83e1ba1284e49da888", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/138c46e2c25920e91bd91f83e1ba1284e49da888"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7ba28573f24e69a12c3276e1963d8aa143b3460", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7ba28573f24e69a12c3276e1963d8aa143b3460", "html_url": "https://github.com/rust-lang/rust/commit/f7ba28573f24e69a12c3276e1963d8aa143b3460", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7ba28573f24e69a12c3276e1963d8aa143b3460/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ffe8c81c31f00e7a032d88d5397930fefbfc97f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ffe8c81c31f00e7a032d88d5397930fefbfc97f", "html_url": "https://github.com/rust-lang/rust/commit/0ffe8c81c31f00e7a032d88d5397930fefbfc97f"}], "stats": {"total": 24, "additions": 6, "deletions": 18}, "files": [{"sha": "36899d12a27a6b6801abdf5a25d8910eb1d80647", "filename": "src/comp/middle/tstate/bitvectors.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f7ba28573f24e69a12c3276e1963d8aa143b3460/src%2Fcomp%2Fmiddle%2Ftstate%2Fbitvectors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7ba28573f24e69a12c3276e1963d8aa143b3460/src%2Fcomp%2Fmiddle%2Ftstate%2Fbitvectors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fbitvectors.rs?ref=f7ba28573f24e69a12c3276e1963d8aa143b3460", "patch": "@@ -63,13 +63,8 @@ fn bit_num(&fn_ctxt fcx, &constr_ c) -> uint {\n         case (npred(_, ?args)) {\n             alt (rslt) {\n                 case (cpred(_, ?descs)) {\n-                    // FIXME: Remove this vec->ivec conversion.\n-                    let (@constr_arg_use)[] cau_ivec = ~[];\n-                    for (@constr_arg_use cau in args) {\n-                        cau_ivec += ~[cau];\n-                    }\n                     auto d = *descs;\n-                    ret match_args(fcx, d, cau_ivec);\n+                    ret match_args(fcx, d, args);\n                 }\n                 case (_) {\n                     fcx.ccx.tcx.sess.bug(\"bit_num: asked for pred constraint,\""}, {"sha": "58407ec0e86e6bf32863ca1f8a0dbdc9ecc7f84d", "filename": "src/comp/middle/tstate/collect_locals.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f7ba28573f24e69a12c3276e1963d8aa143b3460/src%2Fcomp%2Fmiddle%2Ftstate%2Fcollect_locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7ba28573f24e69a12c3276e1963d8aa143b3460/src%2Fcomp%2Fmiddle%2Ftstate%2Fcollect_locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fcollect_locals.rs?ref=f7ba28573f24e69a12c3276e1963d8aa143b3460", "patch": "@@ -1,6 +1,5 @@\n \n import std::ivec;\n-import std::vec;\n import syntax::ast::*;\n import util::ppaux::fn_ident_to_string;\n import std::option::*;\n@@ -35,15 +34,11 @@ fn collect_pred(&@expr e, &ctxt cx, &visit::vt[ctxt] v) {\n         // If it's a call, generate appropriate instances of the\n         // call's constraints.\n         case (expr_call(?operator, ?operands)) {\n-            // FIXME: Remove this vec->ivec conversion.\n-            auto operands_ivec = ~[];\n-            for (@expr opd in operands) { operands_ivec += ~[opd]; }\n-\n             for (@ty::constr_def c in constraints_expr(cx.tcx, operator)) {\n                 let aux::constr ct = respan(c.span,\n                       rec(id=c.node.id._1,\n-                          c=aux::substitute_constr_args(cx.tcx,\n-                                                        operands_ivec, c)));\n+                          c=aux::substitute_constr_args(cx.tcx, operands,\n+                                                        c)));\n                 *cx.cs += ~[ct];\n             }\n         }"}, {"sha": "ffaa9ccaddb9431e9a1d99f45bd8d2390dae8d29", "filename": "src/comp/middle/tstate/pre_post_conditions.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f7ba28573f24e69a12c3276e1963d8aa143b3460/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7ba28573f24e69a12c3276e1963d8aa143b3460/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs?ref=f7ba28573f24e69a12c3276e1963d8aa143b3460", "patch": "@@ -1,7 +1,5 @@\n \n import std::ivec;\n-import std::vec;\n-import std::vec::plus_option;\n import std::option;\n import std::option::none;\n import std::option::some;\n@@ -503,8 +501,8 @@ fn find_pre_post_expr(&fn_ctxt fcx, @expr e) {\n                 find_pre_post_block(fcx, an_alt.block);\n                 ret block_pp(fcx.ccx, an_alt.block);\n             }\n-            auto alt_pps = [];\n-            for (arm a in alts) { alt_pps += [do_an_alt(fcx, a)]; }\n+            auto alt_pps = ~[];\n+            for (arm a in alts) { alt_pps += ~[do_an_alt(fcx, a)]; }\n             fn combine_pp(pre_and_post antec, fn_ctxt fcx, &pre_and_post pp,\n                           &pre_and_post next) -> pre_and_post {\n                 union(pp.precondition, seq_preconds(fcx, ~[antec, next]));\n@@ -517,7 +515,7 @@ fn find_pre_post_expr(&fn_ctxt fcx, @expr e) {\n                      postcondition=false_postcond(num_local_vars));\n             auto g = bind combine_pp(antec_pp, fcx, _, _);\n             auto alts_overall_pp =\n-                vec::foldl[pre_and_post, pre_and_post](g, e_pp, alt_pps);\n+                ivec::foldl[pre_and_post, pre_and_post](g, e_pp, alt_pps);\n             set_pre_and_post(fcx.ccx, e.id, alts_overall_pp.precondition,\n                              alts_overall_pp.postcondition);\n         }"}]}