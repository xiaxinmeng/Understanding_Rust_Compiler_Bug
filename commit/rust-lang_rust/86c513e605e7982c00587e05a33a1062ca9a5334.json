{"sha": "86c513e605e7982c00587e05a33a1062ca9a5334", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2YzUxM2U2MDVlNzk4MmMwMDU4N2UwNWEzM2ExMDYyY2E5YTUzMzQ=", "commit": {"author": {"name": "Jeremy Fitzhardinge", "email": "jeremy@goop.org", "date": "2019-01-27T00:11:30Z"}, "committer": {"name": "Jeremy Fitzhardinge", "email": "jeremy@goop.org", "date": "2019-02-02T19:43:21Z"}, "message": "Let CLIPPY_CONF_DIR be used to start search for config, and fall back to\nCARGO_MANIFEST_DIR if it isn't set. If CARGO_MANIFEST_DIR isn't set, fall back\n\".\" rather than panicing.\n\nIssue #3663", "tree": {"sha": "5d6f2375b4857bb921ce086de14de8694dfe0a32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d6f2375b4857bb921ce086de14de8694dfe0a32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86c513e605e7982c00587e05a33a1062ca9a5334", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86c513e605e7982c00587e05a33a1062ca9a5334", "html_url": "https://github.com/rust-lang/rust/commit/86c513e605e7982c00587e05a33a1062ca9a5334", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86c513e605e7982c00587e05a33a1062ca9a5334/comments", "author": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71d03ae29b175c5e99f4e978e90bab830cfbd530", "url": "https://api.github.com/repos/rust-lang/rust/commits/71d03ae29b175c5e99f4e978e90bab830cfbd530", "html_url": "https://github.com/rust-lang/rust/commit/71d03ae29b175c5e99f4e978e90bab830cfbd530"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "b0b4394ebb883c5717d04d3b2da40e20f2399766", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/86c513e605e7982c00587e05a33a1062ca9a5334/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c513e605e7982c00587e05a33a1062ca9a5334/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=86c513e605e7982c00587e05a33a1062ca9a5334", "patch": "@@ -163,8 +163,13 @@ pub fn lookup_conf_file() -> io::Result<Option<path::PathBuf>> {\n     /// Possible filename to search for.\n     const CONFIG_FILE_NAMES: [&str; 2] = [\".clippy.toml\", \"clippy.toml\"];\n \n-    let mut current = path::PathBuf::from(env::var(\"CARGO_MANIFEST_DIR\").expect(\"CARGO_MANIFEST_DIR not set\"));\n-\n+    // Start looking for a config file in CLIPPY_CONF_DIR, or failing that, CARGO_MANIFEST_DIR.\n+    // If neither of those exist, use \".\".\n+    let mut current = path::PathBuf::from(\n+        env::var(\"CLIPPY_CONF_DIR\")\n+            .or_else(|_| env::var(\"CARGO_MANIFEST_DIR\"))\n+            .unwrap_or_else(|_| \".\".to_string()),\n+    );\n     loop {\n         for config_file_name in &CONFIG_FILE_NAMES {\n             let config_file = current.join(config_file_name);"}]}