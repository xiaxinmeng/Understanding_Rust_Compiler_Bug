{"sha": "08c81c1a797322c68479263f5600eed8c6c2aabe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4YzgxYzFhNzk3MzIyYzY4NDc5MjYzZjU2MDBlZWQ4YzZjMmFhYmU=", "commit": {"author": {"name": "Maxim Zholobak", "email": "ghostcheka@gmail.com", "date": "2017-11-15T07:20:09Z"}, "committer": {"name": "Maxim Zholobak", "email": "ghostcheka@gmail.com", "date": "2017-11-15T07:20:09Z"}, "message": "Add failing testcases", "tree": {"sha": "3a1293340de124e96a8723eb55ed8797e0f9d5ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a1293340de124e96a8723eb55ed8797e0f9d5ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08c81c1a797322c68479263f5600eed8c6c2aabe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08c81c1a797322c68479263f5600eed8c6c2aabe", "html_url": "https://github.com/rust-lang/rust/commit/08c81c1a797322c68479263f5600eed8c6c2aabe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08c81c1a797322c68479263f5600eed8c6c2aabe/comments", "author": {"login": "Menschenkindlein", "id": 581380, "node_id": "MDQ6VXNlcjU4MTM4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/581380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Menschenkindlein", "html_url": "https://github.com/Menschenkindlein", "followers_url": "https://api.github.com/users/Menschenkindlein/followers", "following_url": "https://api.github.com/users/Menschenkindlein/following{/other_user}", "gists_url": "https://api.github.com/users/Menschenkindlein/gists{/gist_id}", "starred_url": "https://api.github.com/users/Menschenkindlein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Menschenkindlein/subscriptions", "organizations_url": "https://api.github.com/users/Menschenkindlein/orgs", "repos_url": "https://api.github.com/users/Menschenkindlein/repos", "events_url": "https://api.github.com/users/Menschenkindlein/events{/privacy}", "received_events_url": "https://api.github.com/users/Menschenkindlein/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Menschenkindlein", "id": 581380, "node_id": "MDQ6VXNlcjU4MTM4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/581380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Menschenkindlein", "html_url": "https://github.com/Menschenkindlein", "followers_url": "https://api.github.com/users/Menschenkindlein/followers", "following_url": "https://api.github.com/users/Menschenkindlein/following{/other_user}", "gists_url": "https://api.github.com/users/Menschenkindlein/gists{/gist_id}", "starred_url": "https://api.github.com/users/Menschenkindlein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Menschenkindlein/subscriptions", "organizations_url": "https://api.github.com/users/Menschenkindlein/orgs", "repos_url": "https://api.github.com/users/Menschenkindlein/repos", "events_url": "https://api.github.com/users/Menschenkindlein/events{/privacy}", "received_events_url": "https://api.github.com/users/Menschenkindlein/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21c580e4c4c9e6f2772fddf8d5ad7824696f7fc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/21c580e4c4c9e6f2772fddf8d5ad7824696f7fc8", "html_url": "https://github.com/rust-lang/rust/commit/21c580e4c4c9e6f2772fddf8d5ad7824696f7fc8"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "22c5e04419a597ed0d275c01a7dac8648aacb030", "filename": "src/test/ui/did_you_mean/issue-43871-enum-instead-of-variant.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/08c81c1a797322c68479263f5600eed8c6c2aabe/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08c81c1a797322c68479263f5600eed8c6c2aabe/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.rs?ref=08c81c1a797322c68479263f5600eed8c6c2aabe", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn result_test() {\n+    let x = Option(1);\n+\n+    if let Option(_) = x {\n+        println!(\"It is OK.\");\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "4882cb10df68ec727733a71dbf17d043f150fa0e", "filename": "src/test/ui/did_you_mean/issue-43871-enum-instead-of-variant.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/08c81c1a797322c68479263f5600eed8c6c2aabe/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/08c81c1a797322c68479263f5600eed8c6c2aabe/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr?ref=08c81c1a797322c68479263f5600eed8c6c2aabe", "patch": "@@ -0,0 +1,21 @@\n+error[E0423]: expected function, found enum `Option`\n+  --> $DIR/issue-43871-enum-instead-of-variant.rs:12:13\n+   |\n+12 |     let x = Option(1);\n+   |             ^^^^^^ not a function\n+   = note: did you mean to use one of the following variants?\n+           - `std::prelude::v1::Option::None`\n+           - `std::prelude::v1::Option::Some`\n+\n+error[E0532]: expected tuple struct/variant, found enum `Option`\n+  --> $DIR/issue-43871-enum-instead-of-variant.rs:14:12\n+   |\n+14 |     if let Option(_) = x {\n+   |            ^^^^^^\n+   |\n+   = note: did you mean to use one of the following variants?\n+           - `std::prelude::v1::Option::None`\n+           - `std::prelude::v1::Option::Some`\n+\n+error: aborting due to previous error\n+"}]}