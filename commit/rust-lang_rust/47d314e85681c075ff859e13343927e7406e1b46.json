{"sha": "47d314e85681c075ff859e13343927e7406e1b46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3ZDMxNGU4NTY4MWMwNzVmZjg1OWUxMzM0MzkyN2U3NDA2ZTFiNDY=", "commit": {"author": {"name": "Kevin DeLorey", "email": "2295721+kdelorey@users.noreply.github.com", "date": "2020-02-11T16:04:30Z"}, "committer": {"name": "Kevin DeLorey", "email": "2295721+kdelorey@users.noreply.github.com", "date": "2020-02-11T16:04:30Z"}, "message": "Fixing minor suggestions and added module level documentation.", "tree": {"sha": "e5c864418c92045be5ca7459479a54ff4bd5ad82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5c864418c92045be5ca7459479a54ff4bd5ad82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47d314e85681c075ff859e13343927e7406e1b46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47d314e85681c075ff859e13343927e7406e1b46", "html_url": "https://github.com/rust-lang/rust/commit/47d314e85681c075ff859e13343927e7406e1b46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47d314e85681c075ff859e13343927e7406e1b46/comments", "author": {"login": "kdelorey", "id": 2295721, "node_id": "MDQ6VXNlcjIyOTU3MjE=", "avatar_url": "https://avatars.githubusercontent.com/u/2295721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdelorey", "html_url": "https://github.com/kdelorey", "followers_url": "https://api.github.com/users/kdelorey/followers", "following_url": "https://api.github.com/users/kdelorey/following{/other_user}", "gists_url": "https://api.github.com/users/kdelorey/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdelorey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdelorey/subscriptions", "organizations_url": "https://api.github.com/users/kdelorey/orgs", "repos_url": "https://api.github.com/users/kdelorey/repos", "events_url": "https://api.github.com/users/kdelorey/events{/privacy}", "received_events_url": "https://api.github.com/users/kdelorey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kdelorey", "id": 2295721, "node_id": "MDQ6VXNlcjIyOTU3MjE=", "avatar_url": "https://avatars.githubusercontent.com/u/2295721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdelorey", "html_url": "https://github.com/kdelorey", "followers_url": "https://api.github.com/users/kdelorey/followers", "following_url": "https://api.github.com/users/kdelorey/following{/other_user}", "gists_url": "https://api.github.com/users/kdelorey/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdelorey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdelorey/subscriptions", "organizations_url": "https://api.github.com/users/kdelorey/orgs", "repos_url": "https://api.github.com/users/kdelorey/repos", "events_url": "https://api.github.com/users/kdelorey/events{/privacy}", "received_events_url": "https://api.github.com/users/kdelorey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e664cd73e3f91086dc765fb5ec74ebec2daa8ffa", "url": "https://api.github.com/repos/rust-lang/rust/commits/e664cd73e3f91086dc765fb5ec74ebec2daa8ffa", "html_url": "https://github.com/rust-lang/rust/commit/e664cd73e3f91086dc765fb5ec74ebec2daa8ffa"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "6ff44c95cb25716cdea820f919fd7dbeb5241a0c", "filename": "crates/ra_assists/src/utils.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47d314e85681c075ff859e13343927e7406e1b46/crates%2Fra_assists%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47d314e85681c075ff859e13343927e7406e1b46/crates%2Fra_assists%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Futils.rs?ref=47d314e85681c075ff859e13343927e7406e1b46", "patch": "@@ -6,7 +6,6 @@ use ra_syntax::{\n };\n \n use hir::db::HirDatabase;\n-\n use rustc_hash::FxHashSet;\n \n pub fn get_missing_impl_items(\n@@ -55,7 +54,7 @@ pub fn get_missing_impl_items(\n                     .map(|n| !impl_fns_consts.contains(&n.to_string()))\n                     .unwrap_or_default(),\n             })\n-            .map(|i| i.clone())\n+            .cloned()\n             .collect()\n     })\n }"}, {"sha": "f2661b623ffd3fa07991ade4c128e1366108796e", "filename": "crates/ra_ide/src/completion/complete_trait_impl.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/47d314e85681c075ff859e13343927e7406e1b46/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47d314e85681c075ff859e13343927e7406e1b46/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs?ref=47d314e85681c075ff859e13343927e7406e1b46", "patch": "@@ -1,5 +1,8 @@\n-use crate::completion::{\n-    CompletionContext, CompletionItem, CompletionItemKind, CompletionKind, Completions,\n+//! FIXME: write short doc here\n+\n+use crate::{\n+    completion::{CompletionContext, CompletionItem, CompletionItemKind, CompletionKind, Completions},\n+    display::FunctionSignature,\n };\n \n use hir::{self, Docs, HasSource};\n@@ -29,8 +32,6 @@ pub(crate) fn complete_trait_impl(acc: &mut Completions, ctx: &CompletionContext\n }\n \n fn add_function_impl(acc: &mut Completions, ctx: &CompletionContext, func: &hir::Function) {\n-    use crate::display::FunctionSignature;\n-\n     let display = FunctionSignature::from_hir(ctx.db, func.clone());\n \n     let func_name = func.name(ctx.db);\n@@ -51,11 +52,7 @@ fn add_function_impl(acc: &mut Completions, ctx: &CompletionContext, func: &hir:\n         CompletionItemKind::Function\n     };\n \n-    let snippet = {\n-        let mut s = format!(\"{}\", display);\n-        s.push_str(\" {}\");\n-        s\n-    };\n+    let snippet = format!(\"{} {{}}\", display);\n \n     builder.insert_text(snippet).kind(completion_kind).add_to(acc);\n }"}]}