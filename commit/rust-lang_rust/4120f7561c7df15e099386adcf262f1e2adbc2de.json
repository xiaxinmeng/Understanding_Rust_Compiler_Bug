{"sha": "4120f7561c7df15e099386adcf262f1e2adbc2de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxMjBmNzU2MWM3ZGYxNWUwOTkzODZhZGNmMjYyZjFlMmFkYmMyZGU=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-26T13:11:08Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-05-18T01:31:03Z"}, "message": "Add back missing help for ignore blocks\n\nThis also gives a better error message when a span is missing.", "tree": {"sha": "bc1f0d35e4d146bab18bbda8ab57757efc3788e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc1f0d35e4d146bab18bbda8ab57757efc3788e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4120f7561c7df15e099386adcf262f1e2adbc2de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4120f7561c7df15e099386adcf262f1e2adbc2de", "html_url": "https://github.com/rust-lang/rust/commit/4120f7561c7df15e099386adcf262f1e2adbc2de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4120f7561c7df15e099386adcf262f1e2adbc2de/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b574c67b93fbe0fc1194865441a1fa596b8922f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b574c67b93fbe0fc1194865441a1fa596b8922f1", "html_url": "https://github.com/rust-lang/rust/commit/b574c67b93fbe0fc1194865441a1fa596b8922f1"}], "stats": {"total": 74, "additions": 40, "deletions": 34}, "files": [{"sha": "46c4a8a41aca6d00b79d2f40f25f12cbdb3f136e", "filename": "src/doc/rustdoc/src/lints.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4120f7561c7df15e099386adcf262f1e2adbc2de/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "raw_url": "https://github.com/rust-lang/rust/raw/4120f7561c7df15e099386adcf262f1e2adbc2de/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md?ref=4120f7561c7df15e099386adcf262f1e2adbc2de", "patch": "@@ -328,7 +328,7 @@ warning: Rust code block is empty\n --> src/lib.rs:8:5\n |\n 8 | /// ```rust\n-|     ^^^^^^^\n+|       ^^^^^^^\n ```\n \n ## bare_urls"}, {"sha": "4cc16de6808f35eca4dcfddff0d62754e25d1e8e", "filename": "src/librustdoc/passes/check_code_block_syntax.rs", "status": "modified", "additions": 26, "deletions": 28, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/4120f7561c7df15e099386adcf262f1e2adbc2de/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4120f7561c7df15e099386adcf262f1e2adbc2de/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs?ref=4120f7561c7df15e099386adcf262f1e2adbc2de", "patch": "@@ -61,7 +61,7 @@ impl<'a, 'tcx> SyntaxChecker<'a, 'tcx> {\n         };\n \n         let hir_id = self.cx.tcx.hir().local_def_id_to_hir_id(local_id);\n-        let suggest_using_text = code_block.syntax.is_none() && code_block.is_fenced;\n+        let empty_block = code_block.syntax.is_none() && code_block.is_fenced;\n         let is_ignore = code_block.is_ignore;\n \n         // The span and whether it is precise or not.\n@@ -78,40 +78,38 @@ impl<'a, 'tcx> SyntaxChecker<'a, 'tcx> {\n         // lambda that will use the lint to start a new diagnostic and add\n         // a suggestion to it when needed.\n         let diag_builder = |lint: LintDiagnosticBuilder<'_>| {\n-            let mut diag = if precise_span {\n-                let msg = if buffer.has_errors {\n-                    \"could not parse code block as Rust code\"\n-                } else {\n-                    \"Rust code block is empty\"\n-                };\n-\n-                let mut diag = lint.build(msg);\n-\n-                if suggest_using_text {\n-                    let extended_msg = if is_ignore {\n-                        \"`ignore` code blocks require valid Rust code for syntax highlighting. \\\n-                         Mark blocks that do not contain Rust code as text\"\n-                    } else {\n-                        \"mark blocks that do not contain Rust code as text\"\n-                    };\n+            let explanation = if is_ignore {\n+                \"`ignore` code blocks require valid Rust code for syntax highlighting; \\\n+                    mark blocks that do not contain Rust code as text\"\n+            } else {\n+                \"mark blocks that do not contain Rust code as text\"\n+            };\n+            let msg = if buffer.has_errors {\n+                \"could not parse code block as Rust code\"\n+            } else {\n+                \"Rust code block is empty\"\n+            };\n+            let mut diag = lint.build(msg);\n \n+            if precise_span {\n+                if is_ignore {\n+                    // giving an accurate suggestion is hard because `ignore` might not have come first in the list.\n+                    // just give a `help` instead.\n+                    diag.span_help(\n+                        sp.from_inner(InnerSpan::new(0, 3)),\n+                        &format!(\"{}: ```text\", explanation),\n+                    );\n+                } else if empty_block {\n                     diag.span_suggestion(\n                         sp.from_inner(InnerSpan::new(0, 3)),\n-                        extended_msg,\n+                        explanation,\n                         String::from(\"```text\"),\n                         Applicability::MachineApplicable,\n                     );\n                 }\n-\n-                diag\n-            } else {\n-                let mut diag = lint.build(\"doc comment contains an invalid Rust code block\");\n-                if suggest_using_text {\n-                    diag.help(\"mark blocks that do not contain Rust code as text: ```text\");\n-                }\n-\n-                diag\n-            };\n+            } else if empty_block || is_ignore {\n+                diag.help(&format!(\"{}: ```text\", explanation));\n+            }\n \n             // FIXME(#67563): Provide more context for these errors by displaying the spans inline.\n             for message in buffer.messages.iter() {"}, {"sha": "86f6a2868fb56af1107918665b267b9c99bb40c4", "filename": "src/test/rustdoc-ui/ignore-block-help.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4120f7561c7df15e099386adcf262f1e2adbc2de/src%2Ftest%2Frustdoc-ui%2Fignore-block-help.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4120f7561c7df15e099386adcf262f1e2adbc2de/src%2Ftest%2Frustdoc-ui%2Fignore-block-help.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fignore-block-help.rs?ref=4120f7561c7df15e099386adcf262f1e2adbc2de", "patch": "@@ -3,5 +3,8 @@\n /// ```ignore (to-prevent-tidy-error)\n /// let heart = '\u2764\ufe0f';\n /// ```\n-//~^^^ WARN\n+//~^^^ WARNING could not parse code block\n+//~| NOTE on by default\n+//~| NOTE character literal may only contain one codepoint\n+//~| HELP `ignore` code blocks require valid Rust code\n pub struct X;"}, {"sha": "b809ece86e76a4e4ae43cf1713ce7d50ebfc6d5c", "filename": "src/test/rustdoc-ui/ignore-block-help.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4120f7561c7df15e099386adcf262f1e2adbc2de/src%2Ftest%2Frustdoc-ui%2Fignore-block-help.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4120f7561c7df15e099386adcf262f1e2adbc2de/src%2Ftest%2Frustdoc-ui%2Fignore-block-help.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fignore-block-help.stderr?ref=4120f7561c7df15e099386adcf262f1e2adbc2de", "patch": "@@ -7,7 +7,12 @@ LL | | /// let heart = '\u2764\ufe0f';\n LL | | /// ```\n    | |_______^\n    |\n-   = note: `#[warn(invalid_rust_codeblock)]` on by default\n+   = note: `#[warn(rustdoc::invalid_rust_codeblock)]` on by default\n+help: `ignore` code blocks require valid Rust code for syntax highlighting; mark blocks that do not contain Rust code as text: ```text\n+  --> $DIR/ignore-block-help.rs:3:5\n+   |\n+LL | /// ```ignore (to-prevent-tidy-error)\n+   |     ^^^\n    = note: error from rustc: character literal may only contain one codepoint\n \n warning: 1 warning emitted"}, {"sha": "b503d1093fda8e9e353ba78af406fa3a0f510057", "filename": "src/test/rustdoc-ui/invalid-syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4120f7561c7df15e099386adcf262f1e2adbc2de/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4120f7561c7df15e099386adcf262f1e2adbc2de/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.rs?ref=4120f7561c7df15e099386adcf262f1e2adbc2de", "patch": "@@ -71,7 +71,7 @@ pub fn blargh() {}\n /// \\_\n #[doc = \"```\"]\n pub fn crazy_attrs() {}\n-//~^^^^ WARNING doc comment contains an invalid Rust code block\n+//~^^^^ WARNING could not parse code block\n \n /// ```rust\n /// ```"}, {"sha": "7fcb9a0e9a9aba64ca9ce322cb0b37b54149744c", "filename": "src/test/rustdoc-ui/invalid-syntax.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4120f7561c7df15e099386adcf262f1e2adbc2de/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4120f7561c7df15e099386adcf262f1e2adbc2de/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr?ref=4120f7561c7df15e099386adcf262f1e2adbc2de", "patch": "@@ -7,7 +7,7 @@ LL | | /// \\__________pkt->size___________/          \\_result->size_/ \\__pkt->si\n LL | | /// ```\n    | |_______^\n    |\n-   = note: `#[warn(invalid_rust_codeblock)]` on by default\n+   = note: `#[warn(rustdoc::invalid_rust_codeblock)]` on by default\n    = note: error from rustc: unknown start of token: \\\n    = note: error from rustc: unknown start of token: \\\n    = note: error from rustc: unknown start of token: \\\n@@ -91,7 +91,7 @@ LL | | /// ```\n    |\n    = note: error from rustc: unknown start of token: \\\n \n-warning: doc comment contains an invalid Rust code block\n+warning: could not parse code block as Rust code\n   --> $DIR/invalid-syntax.rs:70:1\n    |\n LL | / #[doc = \"```\"]"}]}