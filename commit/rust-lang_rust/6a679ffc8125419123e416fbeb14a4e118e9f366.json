{"sha": "6a679ffc8125419123e416fbeb14a4e118e9f366", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNjc5ZmZjODEyNTQxOTEyM2U0MTZmYmViMTRhNGUxMThlOWYzNjY=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-02-12T23:54:17Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-02-13T18:35:47Z"}, "message": "bypass auto_da_alloc for metadata files", "tree": {"sha": "80912d7a9473fd2454b870979058b3840f9a7d75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80912d7a9473fd2454b870979058b3840f9a7d75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a679ffc8125419123e416fbeb14a4e118e9f366", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a679ffc8125419123e416fbeb14a4e118e9f366", "html_url": "https://github.com/rust-lang/rust/commit/6a679ffc8125419123e416fbeb14a4e118e9f366", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a679ffc8125419123e416fbeb14a4e118e9f366/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f5aee2d5241139d808f4fdece0026603489afd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f5aee2d5241139d808f4fdece0026603489afd1", "html_url": "https://github.com/rust-lang/rust/commit/3f5aee2d5241139d808f4fdece0026603489afd1"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "c1ae450483e67badc535c9016bc02150dc2ebdd8", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a679ffc8125419123e416fbeb14a4e118e9f366/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a679ffc8125419123e416fbeb14a4e118e9f366/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=6a679ffc8125419123e416fbeb14a4e118e9f366", "patch": "@@ -983,7 +983,7 @@ fn encode_and_write_metadata(\n             .unwrap_or_else(|err| tcx.sess.fatal(&format!(\"couldn't create a temp dir: {}\", err)));\n         let metadata_tmpdir = MaybeTempDir::new(metadata_tmpdir, tcx.sess.opts.cg.save_temps);\n         let metadata_filename = emit_metadata(tcx.sess, &metadata, &metadata_tmpdir);\n-        if let Err(e) = fs::rename(&metadata_filename, &out_filename) {\n+        if let Err(e) = util::non_durable_rename(&metadata_filename, &out_filename) {\n             tcx.sess.fatal(&format!(\"failed to write {}: {}\", out_filename.display(), e));\n         }\n         if tcx.sess.opts.json_artifact_notifications {"}, {"sha": "dc2c90472c0ee8199eb5b720d0253b79430c9ae2", "filename": "compiler/rustc_interface/src/util.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6a679ffc8125419123e416fbeb14a4e118e9f366/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a679ffc8125419123e416fbeb14a4e118e9f366/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Futil.rs?ref=6a679ffc8125419123e416fbeb14a4e118e9f366", "patch": "@@ -670,6 +670,24 @@ pub fn build_output_filenames(\n     }\n }\n \n+#[cfg(not(target_os = \"linux\"))]\n+pub fn non_durable_rename(src: &Path, dst: &Path) -> std::io::Result<()> {\n+    std::fs::rename(src, dst)\n+}\n+\n+/// This function attempts to bypass the auto_da_alloc heuristic implemented by some filesystems\n+/// such as btrfs and ext4. When renaming over a file that already exists then they will \"helpfully\"\n+/// write back the source file before committing the rename in case a developer forgot some of\n+/// the fsyncs in the open/write/fsync(file)/rename/fsync(dir) dance for atomic file updates.\n+///\n+/// To avoid triggering this heuristic we delete the destination first, if it exists.\n+/// The cost of an extra syscall is much lower than getting descheduled for the sync IO.\n+#[cfg(target_os = \"linux\")]\n+pub fn non_durable_rename(src: &Path, dst: &Path) -> std::io::Result<()> {\n+    let _ = std::fs::remove_file(dst);\n+    std::fs::rename(src, dst)\n+}\n+\n // Note: Also used by librustdoc, see PR #43348. Consider moving this struct elsewhere.\n //\n // FIXME: Currently the `everybody_loops` transformation is not applied to:"}]}