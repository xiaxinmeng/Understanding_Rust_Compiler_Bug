{"sha": "823013349ffc58e243560f21886152cc62917f1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMzAxMzM0OWZmYzU4ZTI0MzU2MGYyMTg4NjE1MmNjNjI5MTdmMWQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-30T10:06:16Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-31T08:22:45Z"}, "message": "Pull a layout computation out of a loop", "tree": {"sha": "5a59a0b9dfe130c1bdbed0291593a95684498f04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a59a0b9dfe130c1bdbed0291593a95684498f04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/823013349ffc58e243560f21886152cc62917f1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/823013349ffc58e243560f21886152cc62917f1d", "html_url": "https://github.com/rust-lang/rust/commit/823013349ffc58e243560f21886152cc62917f1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/823013349ffc58e243560f21886152cc62917f1d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1236d57d841a8bd66c47202b8dddd13e269c8e6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1236d57d841a8bd66c47202b8dddd13e269c8e6e", "html_url": "https://github.com/rust-lang/rust/commit/1236d57d841a8bd66c47202b8dddd13e269c8e6e"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "634a0c9ada8bf4154344e1c1c1074f86663c09c2", "filename": "src/librustc_mir/interpret/terminator/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/823013349ffc58e243560f21886152cc62917f1d/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/823013349ffc58e243560f21886152cc62917f1d/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs?ref=823013349ffc58e243560f21886152cc62917f1d", "patch": "@@ -39,12 +39,15 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n             } => {\n                 let discr_val = self.eval_operand(discr)?;\n                 let discr_prim = self.value_to_scalar(discr_val)?;\n+                let discr_layout = self.layout_of(discr_val.ty).unwrap();\n+                trace!(\"SwitchInt({:?}, {:#?})\", discr_prim, discr_layout);\n+                let discr_prim = discr_prim.to_bits(discr_layout.size)?;\n \n                 // Branch to the `otherwise` case by default, if no match is found.\n                 let mut target_block = targets[targets.len() - 1];\n \n                 for (index, &const_int) in values.iter().enumerate() {\n-                    if discr_prim.to_bits(self.layout_of(discr_val.ty).unwrap().size)? == const_int {\n+                    if discr_prim == const_int {\n                         target_block = targets[index];\n                         break;\n                     }"}]}