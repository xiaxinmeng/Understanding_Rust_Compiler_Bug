{"sha": "14ef447d1237a2534f3acc19a2f986b217ef274d", "node_id": "C_kwDOAAsO6NoAKDE0ZWY0NDdkMTIzN2EyNTM0ZjNhY2MxOWEyZjk4NmIyMTdlZjI3NGQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-27T10:46:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-27T10:46:40Z"}, "message": "Rollup merge of #83791 - the8472:relax-zip-side-effect-guarantee, r=dtolnay\n\nWeaken guarantee around advancing underlying iterators in zip\n\nThe current guarantee (introduced in #52279) is too strong as it prevents adapters from exploiting knowledge about the iterator length and using counted loops for example because they would stop calling `next()` before it ever returned `None`. Additionally several nested zip iterators already fail to uphold this.\n\nThis does not yet remove any of the specialization code that tries (and sometimes fails) to uphold the guarantee for `next()`\nbecause removing it would also affect `next_back()` in more surprising ways.\n\nThe intent is to be able to remove for example this branch\n\nhttps://github.com/rust-lang/rust/blob/36bcf4069717b9dff90270d13b53a3b130329960/library/core/src/iter/adapters/zip.rs#L234-L243\n\nor this test\n\nhttps://github.com/rust-lang/rust/blob/36bcf4069717b9dff90270d13b53a3b130329960/library/core/tests/iter/adapters/zip.rs#L177-L188\n\nSolves #82303 by declaring it a non-issue.", "tree": {"sha": "4704930421982bb95024ac595c411f054a3cea1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4704930421982bb95024ac595c411f054a3cea1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14ef447d1237a2534f3acc19a2f986b217ef274d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhogyQCRBK7hj4Ov3rIwAAwQoIAFdsKEmC0jCZqMAcwQWz102B\nDIg94nPqzY63sjQU3CJqhETnm45LaYIFBtLtUedE6/ojftNbujv73W8kowhAVnuu\nHcln7B/fNuwUuASwcY5tBod7UrUjHXySk8UDTNuBXYgL91H3RI57A7ezVxit4PUG\nrSCvM3ZbYl3VwHEZW+D2iXcQQRr4pooxxdSfwAtS7Gt7miVxWwkuQjJyGGS6in2+\nz8Wk32hDcUAQBCmt1Lti8j4lrUtqE2ybY8j8sqxTHl+FLOwJ3o6PVTcS7T0SA0bZ\n/ctp6uZSxvIIR0qdry75COKk4Ic9AbQ3l4qAkDfgiCb42WmJXiImO7xJxeBaHeY=\n=8nSa\n-----END PGP SIGNATURE-----\n", "payload": "tree 4704930421982bb95024ac595c411f054a3cea1d\nparent 84826fec957aa17b0e068775c1c5574f707d43b0\nparent 2ff677dcbe2228323553447054d130a0c4585a91\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638010000 +0100\ncommitter GitHub <noreply@github.com> 1638010000 +0100\n\nRollup merge of #83791 - the8472:relax-zip-side-effect-guarantee, r=dtolnay\n\nWeaken guarantee around advancing underlying iterators in zip\n\nThe current guarantee (introduced in #52279) is too strong as it prevents adapters from exploiting knowledge about the iterator length and using counted loops for example because they would stop calling `next()` before it ever returned `None`. Additionally several nested zip iterators already fail to uphold this.\n\nThis does not yet remove any of the specialization code that tries (and sometimes fails) to uphold the guarantee for `next()`\nbecause removing it would also affect `next_back()` in more surprising ways.\n\nThe intent is to be able to remove for example this branch\n\nhttps://github.com/rust-lang/rust/blob/36bcf4069717b9dff90270d13b53a3b130329960/library/core/src/iter/adapters/zip.rs#L234-L243\n\nor this test\n\nhttps://github.com/rust-lang/rust/blob/36bcf4069717b9dff90270d13b53a3b130329960/library/core/tests/iter/adapters/zip.rs#L177-L188\n\nSolves #82303 by declaring it a non-issue.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14ef447d1237a2534f3acc19a2f986b217ef274d", "html_url": "https://github.com/rust-lang/rust/commit/14ef447d1237a2534f3acc19a2f986b217ef274d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14ef447d1237a2534f3acc19a2f986b217ef274d/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84826fec957aa17b0e068775c1c5574f707d43b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/84826fec957aa17b0e068775c1c5574f707d43b0", "html_url": "https://github.com/rust-lang/rust/commit/84826fec957aa17b0e068775c1c5574f707d43b0"}, {"sha": "2ff677dcbe2228323553447054d130a0c4585a91", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ff677dcbe2228323553447054d130a0c4585a91", "html_url": "https://github.com/rust-lang/rust/commit/2ff677dcbe2228323553447054d130a0c4585a91"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "186a015510a084fcb978d5b6dc3b9692e76263b2", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/14ef447d1237a2534f3acc19a2f986b217ef274d/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ef447d1237a2534f3acc19a2f986b217ef274d/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=14ef447d1237a2534f3acc19a2f986b217ef274d", "patch": "@@ -461,8 +461,10 @@ pub trait Iterator {\n     /// In other words, it zips two iterators together, into a single one.\n     ///\n     /// If either iterator returns [`None`], [`next`] from the zipped iterator\n-    /// will return [`None`]. If the first iterator returns [`None`], `zip` will\n-    /// short-circuit and `next` will not be called on the second iterator.\n+    /// will return [`None`].\n+    /// If the zipped iterator has no more elements to return then each further attempt to advance\n+    /// it will first try to advance the first iterator at most one time and if it still yielded an item\n+    /// try to advance the second iterator at most one time.\n     ///\n     /// # Examples\n     ///"}]}