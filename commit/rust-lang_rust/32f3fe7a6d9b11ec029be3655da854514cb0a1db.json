{"sha": "32f3fe7a6d9b11ec029be3655da854514cb0a1db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyZjNmZTdhNmQ5YjExZWMwMjliZTM2NTVkYTg1NDUxNGNiMGExZGI=", "commit": {"author": {"name": "Quentin Boyer", "email": "qbsecond@gmail.com", "date": "2019-11-03T15:44:19Z"}, "committer": {"name": "Quentin Boyer", "email": "qbsecond@gmail.com", "date": "2019-11-03T15:44:19Z"}, "message": "add rustc_error(delay_span_bug_from_inside_query) attribute", "tree": {"sha": "fe22a1e1b1e30871600fbea804e08a9174b2a16b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe22a1e1b1e30871600fbea804e08a9174b2a16b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32f3fe7a6d9b11ec029be3655da854514cb0a1db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32f3fe7a6d9b11ec029be3655da854514cb0a1db", "html_url": "https://github.com/rust-lang/rust/commit/32f3fe7a6d9b11ec029be3655da854514cb0a1db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32f3fe7a6d9b11ec029be3655da854514cb0a1db/comments", "author": {"login": "traxys", "id": 5623227, "node_id": "MDQ6VXNlcjU2MjMyMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/5623227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traxys", "html_url": "https://github.com/traxys", "followers_url": "https://api.github.com/users/traxys/followers", "following_url": "https://api.github.com/users/traxys/following{/other_user}", "gists_url": "https://api.github.com/users/traxys/gists{/gist_id}", "starred_url": "https://api.github.com/users/traxys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traxys/subscriptions", "organizations_url": "https://api.github.com/users/traxys/orgs", "repos_url": "https://api.github.com/users/traxys/repos", "events_url": "https://api.github.com/users/traxys/events{/privacy}", "received_events_url": "https://api.github.com/users/traxys/received_events", "type": "User", "site_admin": false}, "committer": {"login": "traxys", "id": 5623227, "node_id": "MDQ6VXNlcjU2MjMyMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/5623227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traxys", "html_url": "https://github.com/traxys", "followers_url": "https://api.github.com/users/traxys/followers", "following_url": "https://api.github.com/users/traxys/following{/other_user}", "gists_url": "https://api.github.com/users/traxys/gists{/gist_id}", "starred_url": "https://api.github.com/users/traxys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traxys/subscriptions", "organizations_url": "https://api.github.com/users/traxys/orgs", "repos_url": "https://api.github.com/users/traxys/repos", "events_url": "https://api.github.com/users/traxys/events{/privacy}", "received_events_url": "https://api.github.com/users/traxys/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6299c3302216174de41a24ca44033f978cd64666", "url": "https://api.github.com/repos/rust-lang/rust/commits/6299c3302216174de41a24ca44033f978cd64666", "html_url": "https://github.com/rust-lang/rust/commit/6299c3302216174de41a24ca44033f978cd64666"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "2bc4b59962b1b416f8951e9f4b25ef71bdb2488c", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/32f3fe7a6d9b11ec029be3655da854514cb0a1db/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32f3fe7a6d9b11ec029be3655da854514cb0a1db/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=32f3fe7a6d9b11ec029be3655da854514cb0a1db", "patch": "@@ -29,6 +29,12 @@ use syntax_pos::symbol::InternedString;\n // Queries marked with `fatal_cycle` do not need the latter implementation,\n // as they will raise an fatal error on query cycles instead.\n rustc_queries! {\n+    Other {\n+        query trigger_delay_span_bug(key: DefId) -> () {\n+            desc { \"trigger a delay span bug\" }\n+        }\n+    }\n+\n     Other {\n         /// Records the type of every item.\n         query type_of(key: DefId) -> Ty<'tcx> {"}, {"sha": "bfc70b0d875a9b130bc7b240faeb21df2e602cd9", "filename": "src/librustc_codegen_utils/lib.rs", "status": "modified", "additions": 29, "deletions": 3, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/32f3fe7a6d9b11ec029be3655da854514cb0a1db/src%2Flibrustc_codegen_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32f3fe7a6d9b11ec029be3655da854514cb0a1db/src%2Flibrustc_codegen_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flib.rs?ref=32f3fe7a6d9b11ec029be3655da854514cb0a1db", "patch": "@@ -19,26 +19,52 @@ extern crate rustc;\n \n use rustc::ty::TyCtxt;\n use rustc::ty::query::Providers;\n-use rustc::hir::def_id::LOCAL_CRATE;\n+use rustc::hir::def_id::{LOCAL_CRATE, DefId};\n use syntax::symbol::sym;\n \n pub mod link;\n pub mod codegen_backend;\n pub mod symbol_names;\n pub mod symbol_names_test;\n \n+\n+pub fn trigger_delay_span_bug(tcx: TyCtxt<'_>, key: DefId) {\n+    tcx.sess.delay_span_bug(tcx.def_span(key), \"compilation successful\");\n+}\n+\n /// check for the #[rustc_error] annotation, which forces an\n /// error in codegen. This is used to write compile-fail tests\n /// that actually test that compilation succeeds without\n /// reporting an error.\n pub fn check_for_rustc_errors_attr(tcx: TyCtxt<'_>) {\n     if let Some((def_id, _)) = tcx.entry_fn(LOCAL_CRATE) {\n-        if tcx.has_attr(def_id, sym::rustc_error) {\n-            tcx.sess.span_fatal(tcx.def_span(def_id), \"compilation successful\");\n+        let attrs = &*tcx.get_attrs(def_id);\n+        for attr in attrs {\n+            if attr.check_name(sym::rustc_error) {\n+                match attr.meta_item_list() {\n+                    // check if there is a #[rustc_error(delayed)]\n+                    Some(list) => {\n+                        if list.iter().any(|list_item| {\n+                            list_item.ident().map(|i| i.name) ==\n+                                Some(sym::delay_span_bug_from_inside_query)\n+                        }) {\n+                            tcx.ensure().trigger_delay_span_bug(def_id);\n+                        }\n+                    }\n+                    // bare #[rustc_error]\n+                    None => {\n+                        tcx.sess.span_fatal(tcx.def_span(def_id), \"compilation successful\");\n+                    }\n+                }\n+            }\n         }\n     }\n }\n \n pub fn provide(providers: &mut Providers<'_>) {\n     crate::symbol_names::provide(providers);\n+    *providers = Providers {\n+        trigger_delay_span_bug,\n+        ..*providers\n+    };\n }"}, {"sha": "e9eef1c9d6b02a2baed46396a7fc5e1c34c0a815", "filename": "src/libsyntax/feature_gate/builtin_attrs.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/32f3fe7a6d9b11ec029be3655da854514cb0a1db/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32f3fe7a6d9b11ec029be3655da854514cb0a1db/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs?ref=32f3fe7a6d9b11ec029be3655da854514cb0a1db", "patch": "@@ -533,7 +533,10 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n     rustc_attr!(TEST, rustc_variance, Normal, template!(Word)),\n     rustc_attr!(TEST, rustc_layout, Normal, template!(List: \"field1, field2, ...\")),\n     rustc_attr!(TEST, rustc_regions, Normal, template!(Word)),\n-    rustc_attr!(TEST, rustc_error, Whitelisted, template!(Word)),\n+    rustc_attr!(\n+        TEST, rustc_error, Whitelisted,\n+        template!(Word, List: \"delay_span_bug_from_inside_query\")\n+    ),\n     rustc_attr!(TEST, rustc_dump_user_substs, Whitelisted, template!(Word)),\n     rustc_attr!(TEST, rustc_if_this_changed, Whitelisted, template!(Word, List: \"DepNode\")),\n     rustc_attr!(TEST, rustc_then_this_would_need, Whitelisted, template!(List: \"DepNode\")),"}, {"sha": "6ff9ee03e194155dce63893bb7f7b671525bbe78", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/32f3fe7a6d9b11ec029be3655da854514cb0a1db/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32f3fe7a6d9b11ec029be3655da854514cb0a1db/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=32f3fe7a6d9b11ec029be3655da854514cb0a1db", "patch": "@@ -234,6 +234,7 @@ symbols! {\n         default_lib_allocator,\n         default_type_parameter_fallback,\n         default_type_params,\n+        delay_span_bug_from_inside_query,\n         deny,\n         deprecated,\n         deref,"}]}