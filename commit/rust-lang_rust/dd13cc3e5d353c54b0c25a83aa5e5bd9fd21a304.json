{"sha": "dd13cc3e5d353c54b0c25a83aa5e5bd9fd21a304", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkMTNjYzNlNWQzNTNjNTRiMGMyNWE4M2FhNWU1YmQ5ZmQyMWEzMDQ=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-01-17T13:49:39Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-01-17T13:49:39Z"}, "message": "Fix make tidy", "tree": {"sha": "eb0a56ed6003170e5fe17086ede541bb73a83c0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb0a56ed6003170e5fe17086ede541bb73a83c0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd13cc3e5d353c54b0c25a83aa5e5bd9fd21a304", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd13cc3e5d353c54b0c25a83aa5e5bd9fd21a304", "html_url": "https://github.com/rust-lang/rust/commit/dd13cc3e5d353c54b0c25a83aa5e5bd9fd21a304", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd13cc3e5d353c54b0c25a83aa5e5bd9fd21a304/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c51f60ee2fad1db6ed0615bae8ed99ce08b0fdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c51f60ee2fad1db6ed0615bae8ed99ce08b0fdd", "html_url": "https://github.com/rust-lang/rust/commit/1c51f60ee2fad1db6ed0615bae8ed99ce08b0fdd"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "348185aae56d98fd3f47d71501a1d0ed2d6ffd84", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/dd13cc3e5d353c54b0c25a83aa5e5bd9fd21a304/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd13cc3e5d353c54b0c25a83aa5e5bd9fd21a304/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=dd13cc3e5d353c54b0c25a83aa5e5bd9fd21a304", "patch": "@@ -1866,14 +1866,17 @@ impl<'a> LoweringContext<'a> {\n                                 let allow_ident = self.str_to_ident(\"allow\");\n                                 let uc_ident = self.str_to_ident(\"unreachable_code\");\n                                 let uc_meta_item = attr::mk_spanned_word_item(e.span, uc_ident);\n-                                let uc_nested_meta_item = NestedMetaItemKind::MetaItem(uc_meta_item);\n-                                let uc_spanned = respan(e.span, uc_nested_meta_item);\n+                                let uc_nested = NestedMetaItemKind::MetaItem(uc_meta_item);\n+                                let uc_spanned = respan(e.span, uc_nested);\n                                 attr::mk_spanned_list_item(e.span, allow_ident, vec![uc_spanned])\n                             };\n                             attr::mk_spanned_attr_outer(e.span, attr::mk_attr_id(), allow)\n                         };\n                         let attrs = From::from(vec![val_attr]);\n-                        let val_expr = P(self.expr_ident_with_attrs(e.span, val_ident, val_pat.id, attrs));\n+                        let val_expr = P(self.expr_ident_with_attrs(e.span,\n+                                                                    val_ident,\n+                                                                    val_pat.id,\n+                                                                    attrs));\n                         let val_block = P(self.block_expr(val_expr));\n                         let ok_expr = P(self.expr_block(val_block, ThinVec::new()));\n \n@@ -1915,8 +1918,8 @@ impl<'a> LoweringContext<'a> {\n                             let allow_ident = self.str_to_ident(\"allow\");\n                             let up_ident = self.str_to_ident(\"unreachable_patterns\");\n                             let up_meta_item = attr::mk_spanned_word_item(e.span, up_ident);\n-                            let up_nested_meta_item = NestedMetaItemKind::MetaItem(up_meta_item);\n-                            let up_spanned = respan(e.span, up_nested_meta_item);\n+                            let up_nested = NestedMetaItemKind::MetaItem(up_meta_item);\n+                            let up_spanned = respan(e.span, up_nested);\n                             attr::mk_spanned_list_item(e.span, allow_ident, vec![up_spanned])\n                         };\n                         attr::mk_spanned_attr_outer(e.span, attr::mk_attr_id(), allow)"}]}