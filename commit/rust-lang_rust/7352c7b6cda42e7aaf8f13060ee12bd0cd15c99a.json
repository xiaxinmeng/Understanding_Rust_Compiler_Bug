{"sha": "7352c7b6cda42e7aaf8f13060ee12bd0cd15c99a", "node_id": "C_kwDOAAsO6NoAKDczNTJjN2I2Y2RhNDJlN2FhZjhmMTMwNjBlZTEyYmQwY2QxNWM5OWE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-07-04T04:08:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-04T04:08:07Z"}, "message": "Rollup merge of #98501 - Enselic:err_if_attr_found, r=compiler-errors\n\nrustc_passes/src/entry.rs: De-duplicate more code with `fn throw_attr_err()`\n\nSo we can more easily re-use the code for other attributes later. More specifically [`#[unix_sigpipe]`](https://github.com/rust-lang/rust/pull/97802). This refactoring is covered by this test:\nhttps://github.com/rust-lang/rust/blob/8aab472d52ba7314dc193c73abcd384e2586123c/src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs-error.rs#L120\n(Well, only `#[start]`, but the code for `#[rustc_main]` is identical.)", "tree": {"sha": "50e86f666ff7f347339abdd6328296e889b61000", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50e86f666ff7f347339abdd6328296e889b61000"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7352c7b6cda42e7aaf8f13060ee12bd0cd15c99a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiwmenCRBK7hj4Ov3rIwAAjV8IAIHp7O7mGr8lKvn6tgsE8n2J\nac5trSdo+BmagfNLjdNZvu06Jm4l8UJRgJCFInxDz8Z3iq0QX+aEXxCAyVGcRlDp\n+QXahOAhWjOY6BXd8TDGHvSXpCcYJGi2DbVujfNvoFPNqJ7vD45CxRyXryDOg92i\nK98ZsmM/kpkhy6zL5mJ3+Ptg5MOMLhBW7pXR0fqgj/yWPEUPtS9jsro0g8vwNyqD\nLIigLzuIvHwb1BOsI2uz0UC5v0kfUSSwZ9Oh/SE8Vf6AZkYp4jjUA+8mJP38ZlD0\ninTURCf42r1lRMkr8GxWOvgkyAAHtxW1yprobA7kDhptVVUM2muNF6SUZeDXpKg=\n=l/I1\n-----END PGP SIGNATURE-----\n", "payload": "tree 50e86f666ff7f347339abdd6328296e889b61000\nparent d46c728bcda687b1cf5f3bedca3d501e797b2a0f\nparent 4731d4b6d321e15f64e794ca4d95144bc29ca751\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1656907687 +0200\ncommitter GitHub <noreply@github.com> 1656907687 +0200\n\nRollup merge of #98501 - Enselic:err_if_attr_found, r=compiler-errors\n\nrustc_passes/src/entry.rs: De-duplicate more code with `fn throw_attr_err()`\n\nSo we can more easily re-use the code for other attributes later. More specifically [`#[unix_sigpipe]`](https://github.com/rust-lang/rust/pull/97802). This refactoring is covered by this test:\nhttps://github.com/rust-lang/rust/blob/8aab472d52ba7314dc193c73abcd384e2586123c/src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs-error.rs#L120\n(Well, only `#[start]`, but the code for `#[rustc_main]` is identical.)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7352c7b6cda42e7aaf8f13060ee12bd0cd15c99a", "html_url": "https://github.com/rust-lang/rust/commit/7352c7b6cda42e7aaf8f13060ee12bd0cd15c99a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7352c7b6cda42e7aaf8f13060ee12bd0cd15c99a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d46c728bcda687b1cf5f3bedca3d501e797b2a0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d46c728bcda687b1cf5f3bedca3d501e797b2a0f", "html_url": "https://github.com/rust-lang/rust/commit/d46c728bcda687b1cf5f3bedca3d501e797b2a0f"}, {"sha": "4731d4b6d321e15f64e794ca4d95144bc29ca751", "url": "https://api.github.com/repos/rust-lang/rust/commits/4731d4b6d321e15f64e794ca4d95144bc29ca751", "html_url": "https://github.com/rust-lang/rust/commit/4731d4b6d321e15f64e794ca4d95144bc29ca751"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "1add91fc9c53137739edd65719b7736171e73fa8", "filename": "compiler/rustc_passes/src/entry.rs", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7352c7b6cda42e7aaf8f13060ee12bd0cd15c99a/compiler%2Frustc_passes%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7352c7b6cda42e7aaf8f13060ee12bd0cd15c99a/compiler%2Frustc_passes%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fentry.rs?ref=7352c7b6cda42e7aaf8f13060ee12bd0cd15c99a", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::entry::EntryPointType;\n+use rustc_ast::{entry::EntryPointType, Attribute};\n use rustc_errors::struct_span_err;\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::{DefId, LocalDefId, CRATE_DEF_ID, LOCAL_CRATE};\n@@ -7,9 +7,8 @@ use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{DefIdTree, TyCtxt};\n use rustc_session::config::{CrateType, EntryFnType};\n use rustc_session::parse::feature_err;\n-use rustc_session::Session;\n use rustc_span::symbol::sym;\n-use rustc_span::{Span, DUMMY_SP};\n+use rustc_span::{Span, Symbol, DUMMY_SP};\n \n struct EntryContext<'tcx> {\n     tcx: TyCtxt<'tcx>,\n@@ -72,9 +71,16 @@ fn entry_point_type(ctxt: &EntryContext<'_>, id: ItemId, at_root: bool) -> Entry\n     }\n }\n \n-fn throw_attr_err(sess: &Session, span: Span, attr: &str) {\n-    sess.struct_span_err(span, &format!(\"`{}` attribute can only be used on functions\", attr))\n-        .emit();\n+fn err_if_attr_found(ctxt: &EntryContext<'_>, attrs: &[Attribute], sym: Symbol) {\n+    if let Some(attr) = ctxt.tcx.sess.find_by_name(attrs, sym) {\n+        ctxt.tcx\n+            .sess\n+            .struct_span_err(\n+                attr.span,\n+                &format!(\"`{}` attribute can only be used on functions\", sym.as_str()),\n+            )\n+            .emit();\n+    }\n }\n \n fn find_item(id: ItemId, ctxt: &mut EntryContext<'_>) {\n@@ -84,12 +90,8 @@ fn find_item(id: ItemId, ctxt: &mut EntryContext<'_>) {\n         EntryPointType::None => (),\n         _ if !matches!(ctxt.tcx.def_kind(id.def_id), DefKind::Fn) => {\n             let attrs = ctxt.tcx.hir().attrs(id.hir_id());\n-            if let Some(attr) = ctxt.tcx.sess.find_by_name(attrs, sym::start) {\n-                throw_attr_err(&ctxt.tcx.sess, attr.span, \"start\");\n-            }\n-            if let Some(attr) = ctxt.tcx.sess.find_by_name(attrs, sym::rustc_main) {\n-                throw_attr_err(&ctxt.tcx.sess, attr.span, \"rustc_main\");\n-            }\n+            err_if_attr_found(ctxt, attrs, sym::start);\n+            err_if_attr_found(ctxt, attrs, sym::rustc_main);\n         }\n         EntryPointType::MainNamed => (),\n         EntryPointType::OtherMain => {"}]}