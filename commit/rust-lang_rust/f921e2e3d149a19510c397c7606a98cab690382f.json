{"sha": "f921e2e3d149a19510c397c7606a98cab690382f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5MjFlMmUzZDE0OWExOTUxMGMzOTdjNzYwNmE5OGNhYjY5MDM4MmY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-11T22:13:11Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-11T22:13:11Z"}, "message": "Revert \"build: Build libraries in the bin directory on win32\"\n\nThis reverts commit c00ec5f9c936639ec2fd9291cd484afa56aa24c8.", "tree": {"sha": "7b26be71b67cd3a3291ce19283b41a405cb413c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b26be71b67cd3a3291ce19283b41a405cb413c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f921e2e3d149a19510c397c7606a98cab690382f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f921e2e3d149a19510c397c7606a98cab690382f", "html_url": "https://github.com/rust-lang/rust/commit/f921e2e3d149a19510c397c7606a98cab690382f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f921e2e3d149a19510c397c7606a98cab690382f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94c389a25bde3f86f25e45b2a31d09bf72d8deeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/94c389a25bde3f86f25e45b2a31d09bf72d8deeb", "html_url": "https://github.com/rust-lang/rust/commit/94c389a25bde3f86f25e45b2a31d09bf72d8deeb"}], "stats": {"total": 54, "additions": 12, "deletions": 42}, "files": [{"sha": "34d5f59fdc6b3d7d64a6b0e8708caef9ca56f208", "filename": "Makefile.in", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f921e2e3d149a19510c397c7606a98cab690382f/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/f921e2e3d149a19510c397c7606a98cab690382f/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=f921e2e3d149a19510c397c7606a98cab690382f", "patch": "@@ -262,7 +262,6 @@ export CFG_HOST_TRIPLE\n export CFG_LLVM_ROOT\n export CFG_ENABLE_MINGW_CROSS\n export CFG_PREFIX\n-export CFG_LIBDIR\n \n ######################################################################\n # Subprograms\n@@ -280,22 +279,12 @@ define SREQ\n # Destinations of artifacts for the host compiler\n HROOT$(1)_H_$(3) = $(3)/stage$(1)\n HBIN$(1)_H_$(3) = $$(HROOT$(1)_H_$(3))/bin\n-# FIXME: Temporary hack for moving win32 libs to the bin directory\n-ifeq ($(1),0)\n HLIB$(1)_H_$(3) = $$(HROOT$(1)_H_$(3))/lib\n-else\n-HLIB$(1)_H_$(3) = $$(HROOT$(1)_H_$(3))/$$(CFG_LIBDIR)\n-endif\n \n # Destinations of artifacts for target architectures\n TROOT$(1)_T_$(2)_H_$(3) = $$(HLIB$(1)_H_$(3))/rustc/$(2)\n TBIN$(1)_T_$(2)_H_$(3) = $$(TROOT$(1)_T_$(2)_H_$(3))/bin\n-# FIXME: Temporary hack for moving win32 libs to the bin directory\n-ifeq ($(1),0)\n TLIB$(1)_T_$(2)_H_$(3) = $$(TROOT$(1)_T_$(2)_H_$(3))/lib\n-else\n-TLIB$(1)_T_$(2)_H_$(3) = $$(TROOT$(1)_T_$(2)_H_$(3))/$$(CFG_LIBDIR)\n-endif\n \n # The name of the core and standard libraries used by rustc\n ifdef CFG_DISABLE_SHAREDSTD"}, {"sha": "d0d86973377d1f2b647249fdf2b2ad4792ab8d4d", "filename": "configure", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f921e2e3d149a19510c397c7606a98cab690382f/configure", "raw_url": "https://github.com/rust-lang/rust/raw/f921e2e3d149a19510c397c7606a98cab690382f/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=f921e2e3d149a19510c397c7606a98cab690382f", "patch": "@@ -397,14 +397,6 @@ do\n   done\n done\n \n-# On windows we just store the libraries in the bin directory because\n-# there's no rpath\n-CFG_LIBDIR=lib\n-if [ \"$CFG_OSTYPE\" = \"pc-mingw32\" ]\n-then\n-    CFG_LIBDIR=bin\n-fi\n-\n for h in $CFG_TARGET_TRIPLES\n do\n     for t in $CFG_TARGET_TRIPLES\n@@ -415,13 +407,13 @@ do\n             make_dir $h/stage$i/bin\n \n             # host lib dir\n-            make_dir $h/stage$i/$CFG_LIBDIR\n+            make_dir $h/stage$i/lib\n \n             # target bin dir\n-            make_dir $h/stage$i/$CFG_LIBDIR/rustc/$t/bin\n+            make_dir $h/stage$i/lib/rustc/$t/bin\n \n             # target lib dir\n-            make_dir $h/stage$i/lib/$CFG_LIBDIR/$t/$CFG_LIBDIR\n+            make_dir $h/stage$i/lib/rustc/$t/lib\n         done\n     done\n \n@@ -590,7 +582,6 @@ putvar CFG_HOST_TRIPLE\n putvar CFG_TARGET_TRIPLES\n putvar CFG_C_COMPILER\n putvar CFG_PREFIX\n-putvar CFG_LIBDIR\n \n # Setting this again because it may have been changed\n if [ $CFG_DISABLE_MANAGE_SUBMODULES ]"}, {"sha": "40a3dd8ebc6b959d257f4f0e8f6c6a50f1cbb587", "filename": "mk/platform.mk", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f921e2e3d149a19510c397c7606a98cab690382f/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/f921e2e3d149a19510c397c7606a98cab690382f/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=f921e2e3d149a19510c397c7606a98cab690382f", "patch": "@@ -108,14 +108,14 @@ endif\n \n CFG_TESTLIB=$(CFG_BUILD_DIR)/$(2)/$(strip \\\n  $(if $(findstring stage0,$(1)), \\\n-       stage0/$(CFG_LIBDIR), \\\n+       stage0/lib, \\\n       $(if $(findstring stage1,$(1)), \\\n-           stage1/$(CFG_LIBDIR), \\\n+           stage1/lib, \\\n           $(if $(findstring stage2,$(1)), \\\n-               stage2/$(CFG_LIBDIR), \\\n+               stage2/lib, \\\n                $(if $(findstring stage3,$(1)), \\\n-                    stage3/$(CFG_LIBDIR), \\\n-               )))))/rustc/$(CFG_HOST_TRIPLE)/$(CFG_LIBDIR)\n+                    stage3/lib, \\\n+               )))))/rustc/$(CFG_HOST_TRIPLE)/lib\n \n ifdef CFG_UNIXY\n   CFG_INFO := $(info cfg: unix-y environment)"}, {"sha": "91f025308e0f31afdfcf023ac3bcdc0bcf66aacf", "filename": "src/comp/back/rpath.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f921e2e3d149a19510c397c7606a98cab690382f/src%2Fcomp%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f921e2e3d149a19510c397c7606a98cab690382f/src%2Fcomp%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Frpath.rs?ref=f921e2e3d149a19510c397c7606a98cab690382f", "patch": "@@ -191,6 +191,7 @@ fn minimize_rpaths(rpaths: [str]) -> [str] {\n #[cfg(target_os = \"linux\")]\n #[cfg(target_os = \"macos\")]\n #[cfg(target_os = \"freebsd\")]\n+#[cfg(test)]\n mod test {\n     #[test]\n     fn test_rpaths_to_flags() {"}, {"sha": "e030ddeed40e7128c63780aba0461d556de5c9b2", "filename": "src/comp/util/filesearch.rs", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f921e2e3d149a19510c397c7606a98cab690382f/src%2Fcomp%2Futil%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f921e2e3d149a19510c397c7606a98cab690382f/src%2Fcomp%2Futil%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Futil%2Ffilesearch.rs?ref=f921e2e3d149a19510c397c7606a98cab690382f", "patch": "@@ -16,7 +16,6 @@ export pick_file;\n export search;\n export relative_target_lib_path;\n export get_cargo_root;\n-export libdir;\n \n type pick<T> = block(path: fs::path) -> option::t<T>;\n \n@@ -81,7 +80,7 @@ fn search<T: copy>(filesearch: filesearch, pick: pick<T>) -> option::t<T> {\n }\n \n fn relative_target_lib_path(target_triple: str) -> [fs::path] {\n-    [libdir(), \"rustc\", target_triple, libdir()]\n+    [\"lib\", \"rustc\", target_triple, \"lib\"]\n }\n \n fn make_target_lib_path(sysroot: fs::path,\n@@ -122,16 +121,6 @@ fn get_cargo_root() -> result::t<fs::path, str> {\n \n fn get_cargo_lib_path() -> result::t<fs::path, str> {\n     result::chain(get_cargo_root()) { |p|\n-        result::ok(fs::connect(p, libdir()))\n+        result::ok(fs::connect(p, \"lib\"))\n     }\n-}\n-\n-// The name of the directory rustc expects libraries to be located.\n-// On Unix should be \"lib\", on windows \"bin\"\n-fn libdir() -> str {\n-   let libdir = #env(\"CFG_LIBDIR\");\n-   if str::is_empty(libdir) {\n-      fail \"rustc compiled without CFG_LIBDIR environment variable\";\n-   }\n-   libdir\n-}\n+}\n\\ No newline at end of file"}]}