{"sha": "d21228fce738fd024c45f12fc3cf09801329bcec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMTIyOGZjZTczOGZkMDI0YzQ1ZjEyZmMzY2YwOTgwMTMyOWJjZWM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-12T01:18:43Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-12T18:35:29Z"}, "message": "stdlib: Box data in EBML documents", "tree": {"sha": "7781f41f65b2c1f05da8f8ffe76ca8a19598c60c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7781f41f65b2c1f05da8f8ffe76ca8a19598c60c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d21228fce738fd024c45f12fc3cf09801329bcec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d21228fce738fd024c45f12fc3cf09801329bcec", "html_url": "https://github.com/rust-lang/rust/commit/d21228fce738fd024c45f12fc3cf09801329bcec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d21228fce738fd024c45f12fc3cf09801329bcec/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1f9bfbac93765f833cd20a599165025f18faebe", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1f9bfbac93765f833cd20a599165025f18faebe", "html_url": "https://github.com/rust-lang/rust/commit/e1f9bfbac93765f833cd20a599165025f18faebe"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "32fa260f87860306d58f7b7492e1d2ecb122c4ce", "filename": "src/lib/ebmlivec.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d21228fce738fd024c45f12fc3cf09801329bcec/src%2Flib%2Febmlivec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d21228fce738fd024c45f12fc3cf09801329bcec/src%2Flib%2Febmlivec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Febmlivec.rs?ref=d21228fce738fd024c45f12fc3cf09801329bcec", "patch": "@@ -15,9 +15,9 @@ type ebml_state = rec(ebml_tag ebml_tag, uint tag_pos, uint data_pos);\n // modules within this file.\n \n // ebml reading\n-type doc = rec(u8[] data, uint start, uint end);\n+type doc = rec(@u8[] data, uint start, uint end);\n \n-fn vint_at(&u8[] data, uint start) -> tup(uint, uint) {\n+fn vint_at(&@u8[] data, uint start) -> tup(uint, uint) {\n     auto a = data.(start);\n     if (a & 0x80u8 != 0u8) { ret tup(a & 0x7fu8 as uint, start + 1u); }\n     if (a & 0x40u8 != 0u8) {\n@@ -35,11 +35,11 @@ fn vint_at(&u8[] data, uint start) -> tup(uint, uint) {\n     } else { log_err \"vint too big\"; fail; }\n }\n \n-fn new_doc(&u8[] data) -> doc {\n-    ret rec(data=data, start=0u, end=ivec::len[u8](data));\n+fn new_doc(&@u8[] data) -> doc {\n+    ret rec(data=data, start=0u, end=ivec::len[u8](*data));\n }\n \n-fn doc_at(&u8[] data, uint start) -> doc {\n+fn doc_at(&@u8[] data, uint start) -> doc {\n     auto elt_tag = vint_at(data, start);\n     auto elt_size = vint_at(data, elt_tag._1);\n     auto end = elt_size._1 + elt_size._0;\n@@ -91,9 +91,9 @@ iter tagged_docs(doc d, uint tg) -> doc {\n     }\n }\n \n-fn doc_data(doc d) -> u8[] { ret ivec::slice[u8](d.data, d.start, d.end); }\n+fn doc_data(doc d) -> u8[] { ret ivec::slice[u8](*d.data, d.start, d.end); }\n \n-fn be_uint_from_bytes(&u8[] data, uint start, uint size) -> uint {\n+fn be_uint_from_bytes(&@u8[] data, uint start, uint size) -> uint {\n     auto sz = size;\n     assert (sz <= 4u);\n     auto val = 0u;"}]}