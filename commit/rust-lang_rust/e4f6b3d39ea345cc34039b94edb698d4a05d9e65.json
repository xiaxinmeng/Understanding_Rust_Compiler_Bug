{"sha": "e4f6b3d39ea345cc34039b94edb698d4a05d9e65", "node_id": "C_kwDOAAsO6NoAKGU0ZjZiM2QzOWVhMzQ1Y2MzNDAzOWI5NGVkYjY5OGQ0YTA1ZDllNjU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-10T23:57:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-10T23:57:26Z"}, "message": "Rollup merge of #112484 - bdbai:fix/uwpntdll, r=ChrisDenton\n\nFix ntdll linkage issues on Windows UWP platforms\n\nSee discussion: https://github.com/rust-lang/rust/issues/112265#issuecomment-1575479683\n\nStatic loading `ntdll` functions does not work for UWP programs, which will end up link errors complaining about missing symbols, or failure to pass the WACK tests. The breakage was introduced in #108262.\n\nThis PR basically reverts part of the changes in #108262 for UWP only, and fixes some lint suggestions.", "tree": {"sha": "2918a65a562e70c51dd3567610a8b228daa52a79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2918a65a562e70c51dd3567610a8b228daa52a79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4f6b3d39ea345cc34039b94edb698d4a05d9e65", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkhQ3mCRBK7hj4Ov3rIwAAHLIIAIp09mNymAjj00degZI17Cpc\nvBjnrTSuKsGHKIQmwXy1sbiEkg0RVai9cS+oA1kT4rchMu6k8+s49IbEWuTJC6/L\ne3A4T6Vm+r2dOJInUWtSw0fZMKJH/j1mFn/fmtyUbvhOBxXfqZyzqQ8qPx+USKsk\ngakacGEf3E+2uWIfSp41PPx5CgTk8zg4sijNpvIipblaSsLRb60SlIr7Rec5EZgU\nQqj8+lTRH12y5A4x7uE32PX1qCYKFwkGWvR0OR2yxFns5Ma3R94lZb1xExvpETs7\nGWjaGe1WIdA8iasTze9g65xt+dq1nxtGpnj6Kz0EthXXfzfeCF4sE2Ku/rDpm2g=\n=SRah\n-----END PGP SIGNATURE-----\n", "payload": "tree 2918a65a562e70c51dd3567610a8b228daa52a79\nparent dbe31bb693b8d7a44a52162132c7e1f4a84cdeb5\nparent cd523f2f184b4325b860e7705b939f7ec1cfb4f0\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1686441446 +0200\ncommitter GitHub <noreply@github.com> 1686441446 +0200\n\nRollup merge of #112484 - bdbai:fix/uwpntdll, r=ChrisDenton\n\nFix ntdll linkage issues on Windows UWP platforms\n\nSee discussion: https://github.com/rust-lang/rust/issues/112265#issuecomment-1575479683\n\nStatic loading `ntdll` functions does not work for UWP programs, which will end up link errors complaining about missing symbols, or failure to pass the WACK tests. The breakage was introduced in #108262.\n\nThis PR basically reverts part of the changes in #108262 for UWP only, and fixes some lint suggestions.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4f6b3d39ea345cc34039b94edb698d4a05d9e65", "html_url": "https://github.com/rust-lang/rust/commit/e4f6b3d39ea345cc34039b94edb698d4a05d9e65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4f6b3d39ea345cc34039b94edb698d4a05d9e65/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbe31bb693b8d7a44a52162132c7e1f4a84cdeb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbe31bb693b8d7a44a52162132c7e1f4a84cdeb5", "html_url": "https://github.com/rust-lang/rust/commit/dbe31bb693b8d7a44a52162132c7e1f4a84cdeb5"}, {"sha": "cd523f2f184b4325b860e7705b939f7ec1cfb4f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd523f2f184b4325b860e7705b939f7ec1cfb4f0", "html_url": "https://github.com/rust-lang/rust/commit/cd523f2f184b4325b860e7705b939f7ec1cfb4f0"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "5fc6136ba1fc7e9b049615b6ca0aed50857b4b61", "filename": "library/std/src/sys/windows/c.rs", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/e4f6b3d39ea345cc34039b94edb698d4a05d9e65/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4f6b3d39ea345cc34039b94edb698d4a05d9e65/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs?ref=e4f6b3d39ea345cc34039b94edb698d4a05d9e65", "patch": "@@ -19,6 +19,7 @@ pub use windows_sys::*;\n pub type DWORD = c_ulong;\n pub type NonZeroDWORD = NonZero_c_ulong;\n pub type LARGE_INTEGER = c_longlong;\n+#[cfg_attr(target_vendor = \"uwp\", allow(unused))]\n pub type LONG = c_long;\n pub type UINT = c_uint;\n pub type WCHAR = u16;\n@@ -267,6 +268,8 @@ pub unsafe fn getaddrinfo(\n     windows_sys::getaddrinfo(node.cast::<u8>(), service.cast::<u8>(), hints, res)\n }\n \n+cfg_if::cfg_if! {\n+if #[cfg(not(target_vendor = \"uwp\"))] {\n pub unsafe fn NtReadFile(\n     filehandle: BorrowedHandle<'_>,\n     event: HANDLE,\n@@ -313,6 +316,8 @@ pub unsafe fn NtWriteFile(\n         key.map(|k| k as *const u32).unwrap_or(ptr::null()),\n     )\n }\n+}\n+}\n \n // Functions that aren't available on every version of Windows that we support,\n // but we still use them and just provide some form of a fallback implementation.\n@@ -376,4 +381,54 @@ compat_fn_with_fallback! {\n     ) -> NTSTATUS {\n         panic!(\"keyed events not available\")\n     }\n+\n+    // These functions are available on UWP when lazily loaded. They will fail WACK if loaded statically.\n+    #[cfg(target_vendor = \"uwp\")]\n+    pub fn NtCreateFile(\n+        filehandle: *mut HANDLE,\n+        desiredaccess: FILE_ACCESS_RIGHTS,\n+        objectattributes: *const OBJECT_ATTRIBUTES,\n+        iostatusblock: *mut IO_STATUS_BLOCK,\n+        allocationsize: *const i64,\n+        fileattributes: FILE_FLAGS_AND_ATTRIBUTES,\n+        shareaccess: FILE_SHARE_MODE,\n+        createdisposition: NTCREATEFILE_CREATE_DISPOSITION,\n+        createoptions: NTCREATEFILE_CREATE_OPTIONS,\n+        eabuffer: *const ::core::ffi::c_void,\n+        ealength: u32\n+    ) -> NTSTATUS {\n+        STATUS_NOT_IMPLEMENTED\n+    }\n+    #[cfg(target_vendor = \"uwp\")]\n+    pub fn NtReadFile(\n+        filehandle: BorrowedHandle<'_>,\n+        event: HANDLE,\n+        apcroutine: PIO_APC_ROUTINE,\n+        apccontext: *mut c_void,\n+        iostatusblock: &mut IO_STATUS_BLOCK,\n+        buffer: *mut crate::mem::MaybeUninit<u8>,\n+        length: ULONG,\n+        byteoffset: Option<&LARGE_INTEGER>,\n+        key: Option<&ULONG>\n+    ) -> NTSTATUS {\n+        STATUS_NOT_IMPLEMENTED\n+    }\n+    #[cfg(target_vendor = \"uwp\")]\n+    pub fn NtWriteFile(\n+        filehandle: BorrowedHandle<'_>,\n+        event: HANDLE,\n+        apcroutine: PIO_APC_ROUTINE,\n+        apccontext: *mut c_void,\n+        iostatusblock: &mut IO_STATUS_BLOCK,\n+        buffer: *const u8,\n+        length: ULONG,\n+        byteoffset: Option<&LARGE_INTEGER>,\n+        key: Option<&ULONG>\n+    ) -> NTSTATUS {\n+        STATUS_NOT_IMPLEMENTED\n+    }\n+    #[cfg(target_vendor = \"uwp\")]\n+    pub fn RtlNtStatusToDosError(Status: NTSTATUS) -> u32 {\n+        Status as u32\n+    }\n }"}, {"sha": "2cf1ade99ce547052f9a11fa823c1410ffd62a26", "filename": "library/std/src/sys/windows/c/windows_sys.lst", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e4f6b3d39ea345cc34039b94edb698d4a05d9e65/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc%2Fwindows_sys.lst", "raw_url": "https://github.com/rust-lang/rust/raw/e4f6b3d39ea345cc34039b94edb698d4a05d9e65/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc%2Fwindows_sys.lst", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc%2Fwindows_sys.lst?ref=e4f6b3d39ea345cc34039b94edb698d4a05d9e65", "patch": "@@ -1930,6 +1930,7 @@ Windows.Win32.Foundation.SetLastError\n Windows.Win32.Foundation.STATUS_DELETE_PENDING\n Windows.Win32.Foundation.STATUS_END_OF_FILE\n Windows.Win32.Foundation.STATUS_INVALID_PARAMETER\n+Windows.Win32.Foundation.STATUS_NOT_IMPLEMENTED\n Windows.Win32.Foundation.STATUS_PENDING\n Windows.Win32.Foundation.STATUS_SUCCESS\n Windows.Win32.Foundation.TRUE"}, {"sha": "8c8b006a1d3d319602bc3baee9eeeec4c4b161e1", "filename": "library/std/src/sys/windows/c/windows_sys.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e4f6b3d39ea345cc34039b94edb698d4a05d9e65/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc%2Fwindows_sys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4f6b3d39ea345cc34039b94edb698d4a05d9e65/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc%2Fwindows_sys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc%2Fwindows_sys.rs?ref=e4f6b3d39ea345cc34039b94edb698d4a05d9e65", "patch": "@@ -3888,6 +3888,7 @@ pub type STARTUPINFOW_FLAGS = u32;\n pub const STATUS_DELETE_PENDING: NTSTATUS = -1073741738i32;\n pub const STATUS_END_OF_FILE: NTSTATUS = -1073741807i32;\n pub const STATUS_INVALID_PARAMETER: NTSTATUS = -1073741811i32;\n+pub const STATUS_NOT_IMPLEMENTED: NTSTATUS = -1073741822i32;\n pub const STATUS_PENDING: NTSTATUS = 259i32;\n pub const STATUS_SUCCESS: NTSTATUS = 0i32;\n pub const STD_ERROR_HANDLE: STD_HANDLE = 4294967284u32;"}, {"sha": "5d8fd13785a09e6a4b05eef54254b27e7d071f25", "filename": "library/std/src/sys/windows/rand.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e4f6b3d39ea345cc34039b94edb698d4a05d9e65/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4f6b3d39ea345cc34039b94edb698d4a05d9e65/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Frand.rs?ref=e4f6b3d39ea345cc34039b94edb698d4a05d9e65", "patch": "@@ -1,5 +1,3 @@\n-use crate::ffi::c_void;\n-use crate::io;\n use crate::mem;\n use crate::ptr;\n use crate::sys::c;\n@@ -25,6 +23,9 @@ pub fn hashmap_random_keys() -> (u64, u64) {\n #[cfg(not(target_vendor = \"uwp\"))]\n #[inline(never)]\n fn fallback_rng() -> (u64, u64) {\n+    use crate::ffi::c_void;\n+    use crate::io;\n+\n     let mut v = (0, 0);\n     let ret = unsafe {\n         c::RtlGenRandom(&mut v as *mut _ as *mut c_void, mem::size_of_val(&v) as c::ULONG)"}]}