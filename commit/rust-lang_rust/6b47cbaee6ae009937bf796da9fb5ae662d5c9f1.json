{"sha": "6b47cbaee6ae009937bf796da9fb5ae662d5c9f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiNDdjYmFlZTZhZTAwOTkzN2JmNzk2ZGE5ZmI1YWU2NjJkNWM5ZjE=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-11-08T03:40:19Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-11-24T19:37:24Z"}, "message": "Improve error message when opaque type is not fully constrained", "tree": {"sha": "f993f5c4ae79ccb02af1c8ef4379192ab35ed4c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f993f5c4ae79ccb02af1c8ef4379192ab35ed4c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl3a2/QACgkQtAh+UQ6Y\nsWT9ShAAoBYt61JcvdyUXq9I8sfLXVA2982BqI0ZeKqtBSr6wnYIhIfRUQH9qiK3\nABu4kN1q+/5FwBxqc3Ofcneyi9aevHn3lt1GS0ki2iRXSbcBq177tavYxr//JLNT\nSRbbeCZNjzlVo9nirUP1xu3VIm+YrK75Pul+Sx4rNa8KzIFdTXCH6V/+I3dj7yjE\nMZb4S/gCWDxuaQzpIviSfImU8O681ZQv8A1VhRylmRvclM7VltRqbqvh9zeO6f4D\nKfgTvWD3vAFNoCkhhKpWCKJyV2uiBgndlXqaCQDKni20JNyvd7tqcktA/jolO8YL\nudbHmN2od7b4WxJfhfQ3+1MOZZ/gRdZ2PVZdSzLOmIqEETCs2vV3LnDo7Je2FpUA\ngZMYwvTBKoJRioJqS+s0gahMJQ94bTsgFp+dZM0aQFA39wxwpwpAePYNfKe3nGg4\ndHcg7IIvgIxx1hibJJvo4P6+BJMASGFtZt0rxQ1XlASjEUsBkQ2d4x7V1UE3e2os\nAK8AWqXv+l7sY2uuOc9OYS2QQ1940BdWOvK0b6ImZv9qwDHw4PgJSrKCXnC+A6O3\n8ReKIUmVvS63u1mE20WbtqNXJAfXI7RSjHiy0opWIHsYwLOBtBjrHFbBPeCYVJmq\ntkAnWynXCts7TQS4E3fTduXAM0vivvC0ojeUmuRIlE7vtqTEWJ4=\n=gjy3\n-----END PGP SIGNATURE-----", "payload": "tree f993f5c4ae79ccb02af1c8ef4379192ab35ed4c2\nparent 4b57d2228b4f00e647efb10b0f874dd1fa9baefd\nauthor Aaron Hill <aa1ronham@gmail.com> 1573184419 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1574624244 -0500\n\nImprove error message when opaque type is not fully constrained\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1", "html_url": "https://github.com/rust-lang/rust/commit/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b57d2228b4f00e647efb10b0f874dd1fa9baefd", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b57d2228b4f00e647efb10b0f874dd1fa9baefd", "html_url": "https://github.com/rust-lang/rust/commit/4b57d2228b4f00e647efb10b0f874dd1fa9baefd"}], "stats": {"total": 67, "additions": 21, "deletions": 46}, "files": [{"sha": "652f081e1761ca5f237c14615739325503f501f5", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=6b47cbaee6ae009937bf796da9fb5ae662d5c9f1", "patch": "@@ -1617,11 +1617,18 @@ fn find_opaque_ty_constraints(tcx: TyCtxt<'_>, def_id: DefId) -> Ty<'_> {\n                     ty::Param(_) => true,\n                     _ => false,\n                 };\n-                if !substs.types().all(is_param) {\n-                    self.tcx.sess.span_err(\n-                        span,\n-                        \"defining opaque type use does not fully define opaque type\",\n-                    );\n+                let bad_substs: Vec<_> = substs.types().enumerate()\n+                    .filter(|(_, ty)| !is_param(ty)).collect();\n+                if !bad_substs.is_empty() {\n+                    let identity_substs = InternalSubsts::identity_for_item(self.tcx, self.def_id);\n+                    for (i, bad_subst) in bad_substs {\n+                        self.tcx.sess.span_err(\n+                            span,\n+                            &format!(\"defining opaque type use does not fully define opaque type: \\\n+                            generic parameter `{}` is specified as concrete type `{}`\",\n+                            identity_substs.type_at(i), bad_subst)\n+                        );\n+                    }\n                 } else if let Some((prev_span, prev_ty, ref prev_indices)) = self.found {\n                     let mut ty = concrete_type.walk().fuse();\n                     let mut p_ty = prev_ty.walk().fuse();"}, {"sha": "bb22d582f21676d966b64747ec390091331e2c45", "filename": "src/test/ui/type-alias-impl-trait/bound_reduction2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbound_reduction2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbound_reduction2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbound_reduction2.stderr?ref=6b47cbaee6ae009937bf796da9fb5ae662d5c9f1", "patch": "@@ -1,4 +1,4 @@\n-error: defining opaque type use does not fully define opaque type\n+error: defining opaque type use does not fully define opaque type: generic parameter `V` is specified as concrete type `<T as TraitWithAssoc>::Assoc`\n   --> $DIR/bound_reduction2.rs:17:1\n    |\n LL | / fn foo_desugared<T: TraitWithAssoc>(_: T) -> Foo<T::Assoc> {"}, {"sha": "b952aaa79ccee7cdaaea641fd3314195bc988104", "filename": "src/test/ui/type-alias-impl-trait/generic_nondefining_use.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_nondefining_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_nondefining_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_nondefining_use.stderr?ref=6b47cbaee6ae009937bf796da9fb5ae662d5c9f1", "patch": "@@ -4,7 +4,7 @@ error: at least one trait must be specified\n LL | type Cmp<T> = impl 'static;\n    |               ^^^^^^^^^^^^\n \n-error: defining opaque type use does not fully define opaque type\n+error: defining opaque type use does not fully define opaque type: generic parameter `T` is specified as concrete type `u32`\n   --> $DIR/generic_nondefining_use.rs:11:1\n    |\n LL | / fn cmp() -> Cmp<u32> {"}, {"sha": "96ac7860283ac3b6f63e53dbd34def8a7095ccae", "filename": "src/test/ui/type-alias-impl-trait/issue-58887.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-58887.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-58887.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-58887.rs?ref=6b47cbaee6ae009937bf796da9fb5ae662d5c9f1", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(type_alias_impl_trait)]\n \n trait UnwrapItemsExt {\n@@ -11,11 +13,8 @@ where\n     E: std::fmt::Debug,\n {\n     type Iter = impl Iterator<Item = T>;\n-    //~^ ERROR: could not find defining uses\n \n     fn unwrap_items(self) -> Self::Iter {\n-    //~^ ERROR: type parameter `T` is part of concrete type\n-    //~| ERROR: type parameter `E` is part of concrete type\n         self.map(|x| x.unwrap())\n     }\n }"}, {"sha": "7e2895711d34550f44fba1094e38f97adcded536", "filename": "src/test/ui/type-alias-impl-trait/issue-58887.stderr", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4b57d2228b4f00e647efb10b0f874dd1fa9baefd/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-58887.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4b57d2228b4f00e647efb10b0f874dd1fa9baefd/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-58887.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-58887.stderr?ref=4b57d2228b4f00e647efb10b0f874dd1fa9baefd", "patch": "@@ -1,30 +0,0 @@\n-error: type parameter `T` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n-  --> $DIR/issue-58887.rs:16:41\n-   |\n-LL |       fn unwrap_items(self) -> Self::Iter {\n-   |  _________________________________________^\n-LL | |\n-LL | |\n-LL | |         self.map(|x| x.unwrap())\n-LL | |     }\n-   | |_____^\n-\n-error: type parameter `E` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n-  --> $DIR/issue-58887.rs:16:41\n-   |\n-LL |       fn unwrap_items(self) -> Self::Iter {\n-   |  _________________________________________^\n-LL | |\n-LL | |\n-LL | |         self.map(|x| x.unwrap())\n-LL | |     }\n-   | |_____^\n-\n-error: could not find defining uses\n-  --> $DIR/issue-58887.rs:13:5\n-   |\n-LL |     type Iter = impl Iterator<Item = T>;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 3 previous errors\n-"}, {"sha": "8fea29ac14b9a0cd1eb19d267308de0a01a5d186", "filename": "src/test/ui/type-alias-impl-trait/issue-60564.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-60564.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-60564.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-60564.rs?ref=6b47cbaee6ae009937bf796da9fb5ae662d5c9f1", "patch": "@@ -18,7 +18,7 @@ where\n {\n     type BitsIter = IterBitsIter<T, E, u8>;\n     fn iter_bits(self, n: u8) -> Self::BitsIter {\n-    //~^ ERROR type parameter `E` is part of concrete type but not used\n+    //~^ ERROR defining opaque type use does not fully define opaque typ\n         (0u8..n)\n             .rev()\n             .map(move |shift| ((self >> T::from(shift)) & T::from(1)).try_into().unwrap())"}, {"sha": "9de3e759e15211084e155ce3690193b7bd7b7cd0", "filename": "src/test/ui/type-alias-impl-trait/issue-60564.stderr", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-60564.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-60564.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-60564.stderr?ref=6b47cbaee6ae009937bf796da9fb5ae662d5c9f1", "patch": "@@ -1,8 +1,7 @@\n-error: type parameter `E` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n-  --> $DIR/issue-60564.rs:20:49\n+error: defining opaque type use does not fully define opaque type: generic parameter `I` is specified as concrete type `u8`\n+  --> $DIR/issue-60564.rs:20:5\n    |\n-LL |       fn iter_bits(self, n: u8) -> Self::BitsIter {\n-   |  _________________________________________________^\n+LL | /     fn iter_bits(self, n: u8) -> Self::BitsIter {\n LL | |\n LL | |         (0u8..n)\n LL | |             .rev()"}, {"sha": "d68f1bd30a0da1035d19d5ca6196f5f12834bbf6", "filename": "src/test/ui/type-alias-impl-trait/not_a_defining_use.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fnot_a_defining_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6b47cbaee6ae009937bf796da9fb5ae662d5c9f1/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fnot_a_defining_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fnot_a_defining_use.stderr?ref=6b47cbaee6ae009937bf796da9fb5ae662d5c9f1", "patch": "@@ -1,4 +1,4 @@\n-error: defining opaque type use does not fully define opaque type\n+error: defining opaque type use does not fully define opaque type: generic parameter `U` is specified as concrete type `u32`\n   --> $DIR/not_a_defining_use.rs:9:1\n    |\n LL | / fn two<T: Debug>(t: T) -> Two<T, u32> {"}]}