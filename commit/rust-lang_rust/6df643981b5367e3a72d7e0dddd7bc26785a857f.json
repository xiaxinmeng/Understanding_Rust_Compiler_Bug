{"sha": "6df643981b5367e3a72d7e0dddd7bc26785a857f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkZjY0Mzk4MWI1MzY3ZTNhNzJkN2UwZGRkZDdiYzI2Nzg1YTg1N2Y=", "commit": {"author": {"name": "Jens Nockert", "email": "jens@nockert.se", "date": "2013-01-11T11:51:16Z"}, "committer": {"name": "Jens Nockert", "email": "jens@nockert.se", "date": "2013-01-11T11:51:16Z"}, "message": "Make std::sync::semaphore() public", "tree": {"sha": "4963849d38ea664604767e7ad1c428697e74c162", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4963849d38ea664604767e7ad1c428697e74c162"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6df643981b5367e3a72d7e0dddd7bc26785a857f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6df643981b5367e3a72d7e0dddd7bc26785a857f", "html_url": "https://github.com/rust-lang/rust/commit/6df643981b5367e3a72d7e0dddd7bc26785a857f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6df643981b5367e3a72d7e0dddd7bc26785a857f/comments", "author": {"login": "auroranockert", "id": 49616, "node_id": "MDQ6VXNlcjQ5NjE2", "avatar_url": "https://avatars.githubusercontent.com/u/49616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auroranockert", "html_url": "https://github.com/auroranockert", "followers_url": "https://api.github.com/users/auroranockert/followers", "following_url": "https://api.github.com/users/auroranockert/following{/other_user}", "gists_url": "https://api.github.com/users/auroranockert/gists{/gist_id}", "starred_url": "https://api.github.com/users/auroranockert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auroranockert/subscriptions", "organizations_url": "https://api.github.com/users/auroranockert/orgs", "repos_url": "https://api.github.com/users/auroranockert/repos", "events_url": "https://api.github.com/users/auroranockert/events{/privacy}", "received_events_url": "https://api.github.com/users/auroranockert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "auroranockert", "id": 49616, "node_id": "MDQ6VXNlcjQ5NjE2", "avatar_url": "https://avatars.githubusercontent.com/u/49616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auroranockert", "html_url": "https://github.com/auroranockert", "followers_url": "https://api.github.com/users/auroranockert/followers", "following_url": "https://api.github.com/users/auroranockert/following{/other_user}", "gists_url": "https://api.github.com/users/auroranockert/gists{/gist_id}", "starred_url": "https://api.github.com/users/auroranockert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auroranockert/subscriptions", "organizations_url": "https://api.github.com/users/auroranockert/orgs", "repos_url": "https://api.github.com/users/auroranockert/repos", "events_url": "https://api.github.com/users/auroranockert/events{/privacy}", "received_events_url": "https://api.github.com/users/auroranockert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad2fc50ca1d8fecdc54306203f226d87a365ce36", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad2fc50ca1d8fecdc54306203f226d87a365ce36", "html_url": "https://github.com/rust-lang/rust/commit/ad2fc50ca1d8fecdc54306203f226d87a365ce36"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fea2c69f336c90bf2aeca551468425f0d0fa5629", "filename": "src/libstd/sync.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6df643981b5367e3a72d7e0dddd7bc26785a857f/src%2Flibstd%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6df643981b5367e3a72d7e0dddd7bc26785a857f/src%2Flibstd%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync.rs?ref=6df643981b5367e3a72d7e0dddd7bc26785a857f", "patch": "@@ -360,7 +360,7 @@ impl &Sem<~[mut Waitqueue]> {\n struct Semaphore { priv sem: Sem<()> }\n \n /// Create a new semaphore with the specified count.\n-fn semaphore(count: int) -> Semaphore {\n+pub fn semaphore(count: int) -> Semaphore {\n     Semaphore { sem: new_sem(count, ()) }\n }\n "}]}