{"sha": "40224f46c0158ff8bf6657f2272dba9ec2ee96d7", "node_id": "C_kwDOAAsO6NoAKDQwMjI0ZjQ2YzAxNThmZjhiZjY2NTdmMjI3MmRiYTllYzJlZTk2ZDc", "commit": {"author": {"name": "kyoto7250", "email": "50972773+kyoto7250@users.noreply.github.com", "date": "2022-04-12T00:49:00Z"}, "committer": {"name": "kyoto7250", "email": "50972773+kyoto7250@users.noreply.github.com", "date": "2022-04-12T00:49:00Z"}, "message": "refactor: Put together an if statement", "tree": {"sha": "4298a1b0ffc210cd1d280567a043431d6473cfcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4298a1b0ffc210cd1d280567a043431d6473cfcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40224f46c0158ff8bf6657f2272dba9ec2ee96d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40224f46c0158ff8bf6657f2272dba9ec2ee96d7", "html_url": "https://github.com/rust-lang/rust/commit/40224f46c0158ff8bf6657f2272dba9ec2ee96d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40224f46c0158ff8bf6657f2272dba9ec2ee96d7/comments", "author": {"login": "kyoto7250", "id": 50972773, "node_id": "MDQ6VXNlcjUwOTcyNzcz", "avatar_url": "https://avatars.githubusercontent.com/u/50972773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyoto7250", "html_url": "https://github.com/kyoto7250", "followers_url": "https://api.github.com/users/kyoto7250/followers", "following_url": "https://api.github.com/users/kyoto7250/following{/other_user}", "gists_url": "https://api.github.com/users/kyoto7250/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyoto7250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyoto7250/subscriptions", "organizations_url": "https://api.github.com/users/kyoto7250/orgs", "repos_url": "https://api.github.com/users/kyoto7250/repos", "events_url": "https://api.github.com/users/kyoto7250/events{/privacy}", "received_events_url": "https://api.github.com/users/kyoto7250/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kyoto7250", "id": 50972773, "node_id": "MDQ6VXNlcjUwOTcyNzcz", "avatar_url": "https://avatars.githubusercontent.com/u/50972773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyoto7250", "html_url": "https://github.com/kyoto7250", "followers_url": "https://api.github.com/users/kyoto7250/followers", "following_url": "https://api.github.com/users/kyoto7250/following{/other_user}", "gists_url": "https://api.github.com/users/kyoto7250/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyoto7250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyoto7250/subscriptions", "organizations_url": "https://api.github.com/users/kyoto7250/orgs", "repos_url": "https://api.github.com/users/kyoto7250/repos", "events_url": "https://api.github.com/users/kyoto7250/events{/privacy}", "received_events_url": "https://api.github.com/users/kyoto7250/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9716a9eff0d68c92fd064b293f0ffbd083645fa5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9716a9eff0d68c92fd064b293f0ffbd083645fa5", "html_url": "https://github.com/rust-lang/rust/commit/9716a9eff0d68c92fd064b293f0ffbd083645fa5"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "ceb66947d02c6717a0ba802f61268997c00e48f0", "filename": "clippy_lints/src/map_clone.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/40224f46c0158ff8bf6657f2272dba9ec2ee96d7/clippy_lints%2Fsrc%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40224f46c0158ff8bf6657f2272dba9ec2ee96d7/clippy_lints%2Fsrc%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_clone.rs?ref=40224f46c0158ff8bf6657f2272dba9ec2ee96d7", "patch": "@@ -143,15 +143,11 @@ fn lint_needless_cloning(cx: &LateContext<'_>, root: Span, receiver: Span) {\n impl MapClone {\n     fn lint_explicit_closure(&self, cx: &LateContext<'_>, replace: Span, root: Span, is_copy: bool) {\n         let mut applicability = Applicability::MachineApplicable;\n-        let message = if is_copy && meets_msrv(self.msrv.as_ref(), &msrvs::ITERATOR_COPIED) {\n-            \"you are using an explicit closure for copying elements\"\n-        } else {\n-            \"you are using an explicit closure for cloning elements\"\n-        };\n-        let sugg_method = if is_copy && meets_msrv(self.msrv.as_ref(), &msrvs::ITERATOR_COPIED) {\n-            \"copied\"\n+\n+        let (message, sugg_method) = if is_copy && meets_msrv(self.msrv.as_ref(), &msrvs::ITERATOR_COPIED) {\n+            (\"you are using an explicit closure for copying elements\", \"copied\")\n         } else {\n-            \"cloned\"\n+            (\"you are using an explicit closure for cloning elements\", \"cloned\")\n         };\n \n         span_lint_and_sugg("}]}