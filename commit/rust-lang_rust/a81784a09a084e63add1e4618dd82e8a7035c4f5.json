{"sha": "a81784a09a084e63add1e4618dd82e8a7035c4f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MTc4NGEwOWEwODRlNjNhZGQxZTQ2MThkZDgyZThhNzAzNWM0ZjU=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-11T14:01:58Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-15T09:48:22Z"}, "message": "Undo a change not neceesary for this bugfix", "tree": {"sha": "482f1bd13eeef53e3c277ef54532cd22cc582a8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/482f1bd13eeef53e3c277ef54532cd22cc582a8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a81784a09a084e63add1e4618dd82e8a7035c4f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a81784a09a084e63add1e4618dd82e8a7035c4f5", "html_url": "https://github.com/rust-lang/rust/commit/a81784a09a084e63add1e4618dd82e8a7035c4f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a81784a09a084e63add1e4618dd82e8a7035c4f5/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2c43dc1adcf1d264b981a506b1840ba42eeea7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2c43dc1adcf1d264b981a506b1840ba42eeea7f", "html_url": "https://github.com/rust-lang/rust/commit/b2c43dc1adcf1d264b981a506b1840ba42eeea7f"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "68ac945ca89a93d8aa2c864198ea409f347a74bf", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a81784a09a084e63add1e4618dd82e8a7035c4f5/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a81784a09a084e63add1e4618dd82e8a7035c4f5/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=a81784a09a084e63add1e4618dd82e8a7035c4f5", "patch": "@@ -347,16 +347,10 @@ pub fn intern_const_alloc_recursive<M: CompileTimeMachine<'mir, 'tcx>>(\n             // references and a `leftover_allocations` set (where we only have a todo-list here).\n             // So we hand-roll the interning logic here again.\n             match intern_kind {\n-                // Mutable statics may contain mutable allocations even behind relocations\n-                InternKind::Static(hir::Mutability::Mut) => {}\n-                // Once we get heap allocations we need to revisit whether immutable statics can\n-                // refer to mutable (e.g. via interior mutability) allocations.\n-                // Note: this is never the base value of the static, we can only get here for\n-                // pointers encountered inside the base allocation, and then only for ones not at\n-                // reference type, as that is checked by the type based main interner.\n-                InternKind::Static(hir::Mutability::Not) => {\n-                    alloc.mutability = Mutability::Not;\n-                }\n+                // Statics may contain mutable allocations even behind relocations.\n+                // Even for immutable statics it would be ok to have mutable allocations behind\n+                // raw pointers, e.g. for `static FOO: *const AtomicUsize = &AtomicUsize::new(42)`.\n+                InternKind::Static(_) => {}\n                 // Raw pointers in promoteds may only point to immutable things so we mark\n                 // everything as immutable.\n                 // It is UB to mutate through a raw pointer obtained via an immutable reference."}]}