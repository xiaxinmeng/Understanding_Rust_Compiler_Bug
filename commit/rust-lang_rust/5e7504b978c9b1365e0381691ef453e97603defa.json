{"sha": "5e7504b978c9b1365e0381691ef453e97603defa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNzUwNGI5NzhjOWIxMzY1ZTAzODE2OTFlZjQ1M2U5NzYwM2RlZmE=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-02-02T20:46:04Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-02-02T20:46:04Z"}, "message": "Merge #36\n\n36: Static items r=matklad a=matklad", "tree": {"sha": "44333026e9a488deef5ebc73eb6c8a277d1975dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44333026e9a488deef5ebc73eb6c8a277d1975dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e7504b978c9b1365e0381691ef453e97603defa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e7504b978c9b1365e0381691ef453e97603defa", "html_url": "https://github.com/rust-lang/rust/commit/5e7504b978c9b1365e0381691ef453e97603defa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e7504b978c9b1365e0381691ef453e97603defa/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "f9ecc680f0317bc56e661d7b41e7edcf52b2f995", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9ecc680f0317bc56e661d7b41e7edcf52b2f995", "html_url": "https://github.com/rust-lang/rust/commit/f9ecc680f0317bc56e661d7b41e7edcf52b2f995"}, {"sha": "0000f4f4f2f32c6ff67db6cbc27e3a49c85f4b99", "url": "https://api.github.com/repos/rust-lang/rust/commits/0000f4f4f2f32c6ff67db6cbc27e3a49c85f4b99", "html_url": "https://github.com/rust-lang/rust/commit/0000f4f4f2f32c6ff67db6cbc27e3a49c85f4b99"}], "stats": {"total": 90, "additions": 81, "deletions": 9}, "files": [{"sha": "53248519f64c42c9ef32018af386e0b27d8ce17a", "filename": "grammar.ron", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5e7504b978c9b1365e0381691ef453e97603defa/grammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/5e7504b978c9b1365e0381691ef453e97603defa/grammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/grammar.ron?ref=5e7504b978c9b1365e0381691ef453e97603defa", "patch": "@@ -21,7 +21,10 @@ Grammar(\n         \"loop\",\n         \"while\",\n         \"if\",\n-        \"match\"\n+        \"match\",\n+        \"const\",\n+        \"static\",\n+        \"mut\",\n     ],\n     tokens: [\n         \"ERROR\",\n@@ -85,6 +88,7 @@ Grammar(\n         \"EXTERN_CRATE_ITEM\",\n         \"MOD_ITEM\",\n         \"USE_ITEM\",\n+        \"STATIC_ITEM\",\n \n         \"EXTERN_BLOCK\",\n         \"ENUM_VARIANT\","}, {"sha": "9930de34783f5d535d1cad22381ad922365e683d", "filename": "src/parser/event_parser/grammar/items/mod.rs", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5e7504b978c9b1365e0381691ef453e97603defa/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e7504b978c9b1365e0381691ef453e97603defa/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems%2Fmod.rs?ref=5e7504b978c9b1365e0381691ef453e97603defa", "patch": "@@ -46,6 +46,10 @@ fn item(p: &mut Parser) {\n                 }\n             }\n         }\n+        STATIC_KW => {\n+            static_item(p);\n+            STATIC_ITEM\n+        }\n         MOD_KW => {\n             mod_item(p);\n             MOD_ITEM\n@@ -92,6 +96,24 @@ fn extern_crate_item(p: &mut Parser) {\n     p.expect(IDENT) && alias(p) && p.expect(SEMI);\n }\n \n+fn extern_block(p: &mut Parser) {\n+    assert!(p.at(L_CURLY));\n+    p.bump();\n+    p.expect(R_CURLY);\n+}\n+\n+fn static_item(p: &mut Parser) {\n+    assert!(p.at(STATIC_KW));\n+    p.bump();\n+    p.eat(MUT_KW);\n+    p.expect(IDENT);\n+    p.expect(COLON);\n+    types::type_ref(p);\n+    p.expect(EQ);\n+    expressions::expr(p);\n+    p.expect(SEMI);\n+}\n+\n fn mod_item(p: &mut Parser) {\n     assert!(p.at(MOD_KW));\n     p.bump();\n@@ -104,12 +126,6 @@ fn mod_item(p: &mut Parser) {\n     }\n }\n \n-fn extern_block(p: &mut Parser) {\n-    assert!(p.at(L_CURLY));\n-    p.bump();\n-    p.expect(R_CURLY);\n-}\n-\n fn abi(p: &mut Parser) {\n     assert!(p.at(EXTERN_KW));\n     let abi = p.start();"}, {"sha": "8d21d3fb7bbd9637b9d6da9b84e60ae0ba431b29", "filename": "src/syntax_kinds.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5e7504b978c9b1365e0381691ef453e97603defa/src%2Fsyntax_kinds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e7504b978c9b1365e0381691ef453e97603defa/src%2Fsyntax_kinds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds.rs?ref=5e7504b978c9b1365e0381691ef453e97603defa", "patch": "@@ -28,6 +28,9 @@ pub enum SyntaxKind {\n     WHILE_KW,\n     IF_KW,\n     MATCH_KW,\n+    CONST_KW,\n+    STATIC_KW,\n+    MUT_KW,\n     ERROR,\n     IDENT,\n     UNDERSCORE,\n@@ -86,6 +89,7 @@ pub enum SyntaxKind {\n     EXTERN_CRATE_ITEM,\n     MOD_ITEM,\n     USE_ITEM,\n+    STATIC_ITEM,\n     EXTERN_BLOCK,\n     ENUM_VARIANT,\n     NAMED_FIELD,\n@@ -137,6 +141,9 @@ impl SyntaxKind {\n             WHILE_KW => &SyntaxInfo { name: \"WHILE_KW\" },\n             IF_KW => &SyntaxInfo { name: \"IF_KW\" },\n             MATCH_KW => &SyntaxInfo { name: \"MATCH_KW\" },\n+            CONST_KW => &SyntaxInfo { name: \"CONST_KW\" },\n+            STATIC_KW => &SyntaxInfo { name: \"STATIC_KW\" },\n+            MUT_KW => &SyntaxInfo { name: \"MUT_KW\" },\n             ERROR => &SyntaxInfo { name: \"ERROR\" },\n             IDENT => &SyntaxInfo { name: \"IDENT\" },\n             UNDERSCORE => &SyntaxInfo { name: \"UNDERSCORE\" },\n@@ -195,6 +202,7 @@ impl SyntaxKind {\n             EXTERN_CRATE_ITEM => &SyntaxInfo { name: \"EXTERN_CRATE_ITEM\" },\n             MOD_ITEM => &SyntaxInfo { name: \"MOD_ITEM\" },\n             USE_ITEM => &SyntaxInfo { name: \"USE_ITEM\" },\n+            STATIC_ITEM => &SyntaxInfo { name: \"STATIC_ITEM\" },\n             EXTERN_BLOCK => &SyntaxInfo { name: \"EXTERN_BLOCK\" },\n             ENUM_VARIANT => &SyntaxInfo { name: \"ENUM_VARIANT\" },\n             NAMED_FIELD => &SyntaxInfo { name: \"NAMED_FIELD\" },\n@@ -242,6 +250,9 @@ pub(crate) fn ident_to_keyword(ident: &str) -> Option<SyntaxKind> {\n         \"while\" => Some(WHILE_KW),\n         \"if\" => Some(IF_KW),\n         \"match\" => Some(MATCH_KW),\n+        \"const\" => Some(CONST_KW),\n+        \"static\" => Some(STATIC_KW),\n+        \"mut\" => Some(MUT_KW),\n         _ => None,\n     }\n }"}, {"sha": "b74fc606ec6d416b084100beaa5d7ca81656557a", "filename": "tests/data/lexer/0011_keywords.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5e7504b978c9b1365e0381691ef453e97603defa/tests%2Fdata%2Flexer%2F0011_keywords.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e7504b978c9b1365e0381691ef453e97603defa/tests%2Fdata%2Flexer%2F0011_keywords.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Flexer%2F0011_keywords.rs?ref=5e7504b978c9b1365e0381691ef453e97603defa", "patch": "@@ -1 +1,3 @@\n-fn use struct trait enum impl true false as extern crate mod pub self super in where for loop while if match\n+fn use struct trait enum impl true false as extern crate\n+mod pub self super in where for loop while if match const\n+static mut"}, {"sha": "05b1f099543b657451f06e50def6a283fcc7a415", "filename": "tests/data/lexer/0011_keywords.txt", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5e7504b978c9b1365e0381691ef453e97603defa/tests%2Fdata%2Flexer%2F0011_keywords.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5e7504b978c9b1365e0381691ef453e97603defa/tests%2Fdata%2Flexer%2F0011_keywords.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Flexer%2F0011_keywords.txt?ref=5e7504b978c9b1365e0381691ef453e97603defa", "patch": "@@ -19,7 +19,7 @@ WHITESPACE 1 \" \"\n EXTERN_KW 6 \"extern\"\n WHITESPACE 1 \" \"\n CRATE_KW 5 \"crate\"\n-WHITESPACE 1 \" \"\n+WHITESPACE 1 \"\\n\"\n MOD_KW 3 \"mod\"\n WHITESPACE 1 \" \"\n PUB_KW 3 \"pub\"\n@@ -41,4 +41,10 @@ WHITESPACE 1 \" \"\n IF_KW 2 \"if\"\n WHITESPACE 1 \" \"\n MATCH_KW 5 \"match\"\n+WHITESPACE 1 \" \"\n+CONST_KW 5 \"const\"\n+WHITESPACE 1 \"\\n\"\n+STATIC_KW 6 \"static\"\n+WHITESPACE 1 \" \"\n+MUT_KW 3 \"mut\"\n WHITESPACE 1 \"\\n\""}, {"sha": "5fb92ce33f0d4e63f5cf54e43a5e7ae1363776f4", "filename": "tests/data/parser/ok/0023_static_items.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e7504b978c9b1365e0381691ef453e97603defa/tests%2Fdata%2Fparser%2Fok%2F0023_static_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e7504b978c9b1365e0381691ef453e97603defa/tests%2Fdata%2Fparser%2Fok%2F0023_static_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0023_static_items.rs?ref=5e7504b978c9b1365e0381691ef453e97603defa", "patch": "@@ -0,0 +1,2 @@\n+static FOO: u32 = 1;\n+static mut BAR: i32 = 92;"}, {"sha": "7cd2228fabe53339ffdcdc4bb5ad176582e34623", "filename": "tests/data/parser/ok/0023_static_items.txt", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/5e7504b978c9b1365e0381691ef453e97603defa/tests%2Fdata%2Fparser%2Fok%2F0023_static_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5e7504b978c9b1365e0381691ef453e97603defa/tests%2Fdata%2Fparser%2Fok%2F0023_static_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0023_static_items.txt?ref=5e7504b978c9b1365e0381691ef453e97603defa", "patch": "@@ -0,0 +1,31 @@\n+FILE@[0; 47)\n+  STATIC_ITEM@[0; 21)\n+    STATIC_KW@[0; 6)\n+    WHITESPACE@[6; 7)\n+    IDENT@[7; 10) \"FOO\"\n+    COLON@[10; 11)\n+    WHITESPACE@[11; 12)\n+    IDENT@[12; 15) \"u32\"\n+    WHITESPACE@[15; 16)\n+    EQ@[16; 17)\n+    LITERAL@[17; 19)\n+      WHITESPACE@[17; 18)\n+      INT_NUMBER@[18; 19)\n+    SEMI@[19; 20)\n+    WHITESPACE@[20; 21)\n+  STATIC_ITEM@[21; 47)\n+    STATIC_KW@[21; 27)\n+    WHITESPACE@[27; 28)\n+    MUT_KW@[28; 31)\n+    WHITESPACE@[31; 32)\n+    IDENT@[32; 35) \"BAR\"\n+    COLON@[35; 36)\n+    WHITESPACE@[36; 37)\n+    IDENT@[37; 40) \"i32\"\n+    WHITESPACE@[40; 41)\n+    EQ@[41; 42)\n+    LITERAL@[42; 45)\n+      WHITESPACE@[42; 43)\n+      INT_NUMBER@[43; 45)\n+    SEMI@[45; 46)\n+    WHITESPACE@[46; 47)"}]}