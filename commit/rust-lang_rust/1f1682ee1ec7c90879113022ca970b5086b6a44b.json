{"sha": "1f1682ee1ec7c90879113022ca970b5086b6a44b", "node_id": "C_kwDOAAsO6NoAKDFmMTY4MmVlMWVjN2M5MDg3OTExMzAyMmNhOTcwYjUwODZiNmE0NGI", "commit": {"author": {"name": "zhoufan", "email": "1247714429@qq.com", "date": "2021-11-17T10:16:25Z"}, "committer": {"name": "zhoufan", "email": "1247714429@qq.com", "date": "2021-11-17T10:16:25Z"}, "message": "minor: remove duplicate calls", "tree": {"sha": "317e8a682aad75cfaa30dea30161bb14884f472e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/317e8a682aad75cfaa30dea30161bb14884f472e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f1682ee1ec7c90879113022ca970b5086b6a44b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f1682ee1ec7c90879113022ca970b5086b6a44b", "html_url": "https://github.com/rust-lang/rust/commit/1f1682ee1ec7c90879113022ca970b5086b6a44b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f1682ee1ec7c90879113022ca970b5086b6a44b/comments", "author": {"login": "xffxff", "id": 30254428, "node_id": "MDQ6VXNlcjMwMjU0NDI4", "avatar_url": "https://avatars.githubusercontent.com/u/30254428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xffxff", "html_url": "https://github.com/xffxff", "followers_url": "https://api.github.com/users/xffxff/followers", "following_url": "https://api.github.com/users/xffxff/following{/other_user}", "gists_url": "https://api.github.com/users/xffxff/gists{/gist_id}", "starred_url": "https://api.github.com/users/xffxff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xffxff/subscriptions", "organizations_url": "https://api.github.com/users/xffxff/orgs", "repos_url": "https://api.github.com/users/xffxff/repos", "events_url": "https://api.github.com/users/xffxff/events{/privacy}", "received_events_url": "https://api.github.com/users/xffxff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xffxff", "id": 30254428, "node_id": "MDQ6VXNlcjMwMjU0NDI4", "avatar_url": "https://avatars.githubusercontent.com/u/30254428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xffxff", "html_url": "https://github.com/xffxff", "followers_url": "https://api.github.com/users/xffxff/followers", "following_url": "https://api.github.com/users/xffxff/following{/other_user}", "gists_url": "https://api.github.com/users/xffxff/gists{/gist_id}", "starred_url": "https://api.github.com/users/xffxff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xffxff/subscriptions", "organizations_url": "https://api.github.com/users/xffxff/orgs", "repos_url": "https://api.github.com/users/xffxff/repos", "events_url": "https://api.github.com/users/xffxff/events{/privacy}", "received_events_url": "https://api.github.com/users/xffxff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "add6cccd4c923fbb5c83cc27b06aa84b2cbc9557", "url": "https://api.github.com/repos/rust-lang/rust/commits/add6cccd4c923fbb5c83cc27b06aa84b2cbc9557", "html_url": "https://github.com/rust-lang/rust/commit/add6cccd4c923fbb5c83cc27b06aa84b2cbc9557"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "147d641235710c6a9b0e335becf27d7360e3df19", "filename": "crates/hir_def/src/body/scope.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1f1682ee1ec7c90879113022ca970b5086b6a44b/crates%2Fhir_def%2Fsrc%2Fbody%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f1682ee1ec7c90879113022ca970b5086b6a44b/crates%2Fhir_def%2Fsrc%2Fbody%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Fscope.rs?ref=1f1682ee1ec7c90879113022ca970b5086b6a44b", "patch": "@@ -151,18 +151,15 @@ fn compute_block_scopes(\n         match stmt {\n             Statement::Let { pat, initializer, else_branch, .. } => {\n                 if let Some(expr) = initializer {\n-                    scopes.set_scope(*expr, scope);\n                     compute_expr_scopes(*expr, body, scopes, scope);\n                 }\n                 if let Some(expr) = else_branch {\n-                    scopes.set_scope(*expr, scope);\n                     compute_expr_scopes(*expr, body, scopes, scope);\n                 }\n                 scope = scopes.new_scope(scope);\n                 scopes.add_bindings(body, scope, *pat);\n             }\n             Statement::Expr { expr, .. } => {\n-                scopes.set_scope(*expr, scope);\n                 compute_expr_scopes(*expr, body, scopes, scope);\n             }\n         }"}]}