{"sha": "559f00ba9951b29c73339d94bcaeb5efa94b332a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1OWYwMGJhOTk1MWIyOWM3MzMzOWQ5NGJjYWViNWVmYTk0YjMzMmE=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-11-22T13:48:30Z"}, "committer": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-11-22T13:48:30Z"}, "message": "Fix up indentation of function style paths\n\nFixes https://github.com/rust-lang-nursery/rustfmt/issues/105.", "tree": {"sha": "0d8e3697badf297e9e0681685733a66efedc43b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d8e3697badf297e9e0681685733a66efedc43b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/559f00ba9951b29c73339d94bcaeb5efa94b332a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/559f00ba9951b29c73339d94bcaeb5efa94b332a", "html_url": "https://github.com/rust-lang/rust/commit/559f00ba9951b29c73339d94bcaeb5efa94b332a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/559f00ba9951b29c73339d94bcaeb5efa94b332a/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b0ae00488616a93ffd015d97b65624cf47da818", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b0ae00488616a93ffd015d97b65624cf47da818", "html_url": "https://github.com/rust-lang/rust/commit/1b0ae00488616a93ffd015d97b65624cf47da818"}], "stats": {"total": 62, "additions": 40, "deletions": 22}, "files": [{"sha": "d1502d173dabfef9900d443f07d242b92b64af67", "filename": "src/items.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/559f00ba9951b29c73339d94bcaeb5efa94b332a/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/559f00ba9951b29c73339d94bcaeb5efa94b332a/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=559f00ba9951b29c73339d94bcaeb5efa94b332a", "patch": "@@ -473,10 +473,7 @@ pub fn format_struct(context: &RewriteContext,\n     }\n }\n \n-fn format_unit_struct(item_name: &str,\n-                      ident: ast::Ident,\n-                      vis: ast::Visibility)\n-                      -> Option<String> {\n+fn format_unit_struct(item_name: &str, ident: ast::Ident, vis: ast::Visibility) -> Option<String> {\n     let mut result = String::with_capacity(1024);\n \n     let header_str = format_header(item_name, ident, vis);"}, {"sha": "6d8ee483b14cd9e7ed7209191f540f9ef7692cf9", "filename": "src/types.rs", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/559f00ba9951b29c73339d94bcaeb5efa94b332a/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/559f00ba9951b29c73339d94bcaeb5efa94b332a/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=559f00ba9951b29c73339d94bcaeb5efa94b332a", "patch": "@@ -200,11 +200,7 @@ fn rewrite_segment(expr_context: bool,\n                                      \">\",\n                                      |param| param.get_span().lo,\n                                      |param| param.get_span().hi,\n-                                     |seg| {\n-                                         seg.rewrite(context,\n-                                                     context.config.max_width,\n-                                                     offset + extra_offset)\n-                                     },\n+                                     |seg| seg.rewrite(context, list_width, offset + extra_offset),\n                                      list_lo,\n                                      span_hi);\n             let list_str = try_opt!(format_item_list(items,\n@@ -218,16 +214,8 @@ fn rewrite_segment(expr_context: bool,\n             format!(\"{}<{}>\", separator, list_str)\n         }\n         ast::PathParameters::ParenthesizedParameters(ref data) => {\n-            let output = match data.output {\n-                Some(ref ty) => {\n-                    let type_str = try_opt!(ty.rewrite(context, width, offset));\n-                    format!(\" -> {}\", type_str)\n-                }\n-                None => String::new(),\n-            };\n-\n             // 2 for ()\n-            let budget = try_opt!(width.checked_sub(output.len() + 2));\n+            let budget = try_opt!(width.checked_sub(2));\n             // 1 for (\n             let offset = offset + 1;\n             let list_lo = span_after(data.span, \"(\", context.codemap);\n@@ -239,9 +227,30 @@ fn rewrite_segment(expr_context: bool,\n                                      |ty| ty.rewrite(context, budget, offset),\n                                      list_lo,\n                                      span_hi);\n+            println!(\"got here\");\n+\n             let list_str = try_opt!(format_fn_args(items, budget, offset, context.config));\n \n-            format!(\"({}){}\", list_str, output)\n+            println!(\"got here 2\");\n+            let output = match data.output {\n+                Some(ref ty) => {\n+                    let budget = try_opt!(width.checked_sub(4));\n+                    let type_str = try_opt!(ty.rewrite(context, budget, offset + 4));\n+                    format!(\" -> {}\", type_str)\n+                }\n+                None => String::new(),\n+            };\n+\n+            println!(\"got here 3\");\n+\n+            let infix = if output.len() + list_str.len() > width {\n+                format!(\"\\n{}\", (offset - 1).to_string(context.config))\n+            } else {\n+                String::new()\n+            };\n+            println!(\"({}){}{}\", &list_str, &infix, &output);\n+\n+            format!(\"({}){}{}\", list_str, infix, output)\n         }\n         _ => String::new(),\n     };"}, {"sha": "4c216ec26b8740ae028fa616f3f060a5edb216d0", "filename": "tests/source/fn-simple.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/559f00ba9951b29c73339d94bcaeb5efa94b332a/tests%2Fsource%2Ffn-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/559f00ba9951b29c73339d94bcaeb5efa94b332a/tests%2Fsource%2Ffn-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-simple.rs?ref=559f00ba9951b29c73339d94bcaeb5efa94b332a", "patch": "@@ -1,6 +1,9 @@\n \n fn simple(/*pre-comment on a function!?*/ i: i32/*yes, it's possible!  */   \n-                                        ,response: NoWay /* hose */) {\"cool\"}\n+                                        ,response: NoWay /* hose */) {\n+fn op(x: Typ, key : &[u8], upd : Box<Fn(Option<&memcache::Item>) -> (memcache::Status, Result<memcache::Item, Option<String>>)>) -> MapResult {}\n+\n+        \"cool\"}\n \n \n fn weird_comment(/* /*/ double level */ comment */ x: Hello /*/*/* tripple, even */*/*/,"}, {"sha": "6acb1a3e582fc3eb016872c8cc372b918c7659e4", "filename": "tests/target/fn-simple.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/559f00ba9951b29c73339d94bcaeb5efa94b332a/tests%2Ftarget%2Ffn-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/559f00ba9951b29c73339d94bcaeb5efa94b332a/tests%2Ftarget%2Ffn-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-simple.rs?ref=559f00ba9951b29c73339d94bcaeb5efa94b332a", "patch": "@@ -2,6 +2,13 @@\n fn simple(// pre-comment on a function!?\n           i: i32, // yes, it's possible!\n           response: NoWay /* hose */) {\n+    fn op(x: Typ,\n+          key: &[u8],\n+          upd: Box<Fn(Option<&memcache::Item>)\n+                      -> (memcache::Status, Result<memcache::Item, Option<String>>)>)\n+          -> MapResult {\n+    }\n+\n     \"cool\"\n }\n \n@@ -23,7 +30,8 @@ fn generic<T>(arg: T) -> &SomeType\n                 C,\n                 D,\n                 // pre comment\n-                E /* last comment */) -> &SomeType\n+                E /* last comment */)\n+                -> &SomeType\n {\n     arg(a, b, c, d, e)\n }"}, {"sha": "cf96392036b19451a6978d54d0be3d4e337a170a", "filename": "tests/target/hard-tabs.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/559f00ba9951b29c73339d94bcaeb5efa94b332a/tests%2Ftarget%2Fhard-tabs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/559f00ba9951b29c73339d94bcaeb5efa94b332a/tests%2Ftarget%2Fhard-tabs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fhard-tabs.rs?ref=559f00ba9951b29c73339d94bcaeb5efa94b332a", "patch": "@@ -69,7 +69,8 @@ fn main() {\n \t\t            C,\n \t\t            D,\n \t\t            // pre comment\n-\t\t            E /* last comment */) -> &SomeType\n+\t\t            E /* last comment */)\n+\t\t            -> &SomeType\n \t{\n \t\targ(a, b, c, d, e)\n \t}"}]}