{"sha": "1f06a8b361dda56defe67d7af56a406cd2fbae08", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmMDZhOGIzNjFkZGE1NmRlZmU2N2Q3YWY1NmE0MDZjZDJmYmFlMDg=", "commit": {"author": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2019-06-30T03:19:24Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-06-30T03:19:24Z"}, "message": "fix extraction of missing comments when rewriting an empty where clause (#3663)", "tree": {"sha": "a972704240cb4f099557b8eaeebf7187803db9e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a972704240cb4f099557b8eaeebf7187803db9e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f06a8b361dda56defe67d7af56a406cd2fbae08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f06a8b361dda56defe67d7af56a406cd2fbae08", "html_url": "https://github.com/rust-lang/rust/commit/1f06a8b361dda56defe67d7af56a406cd2fbae08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f06a8b361dda56defe67d7af56a406cd2fbae08/comments", "author": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b", "html_url": "https://github.com/rust-lang/rust/commit/b6f7f24915152c4ecd7ef4520bf2bb759bf4c13b"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "6222c34b1a2d9eea62a0fca887998a56aa0061d3", "filename": "src/comment.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f06a8b361dda56defe67d7af56a406cd2fbae08/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f06a8b361dda56defe67d7af56a406cd2fbae08/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=1f06a8b361dda56defe67d7af56a406cd2fbae08", "patch": "@@ -859,7 +859,9 @@ pub(crate) fn rewrite_missing_comment(\n ) -> Option<String> {\n     let missing_snippet = context.snippet(span);\n     let trimmed_snippet = missing_snippet.trim();\n-    if !trimmed_snippet.is_empty() {\n+    // check the span starts with a comment\n+    let pos = trimmed_snippet.find('/');\n+    if !trimmed_snippet.is_empty() && pos.is_some() {\n         rewrite_comment(trimmed_snippet, false, shape, context.config)\n     } else {\n         Some(String::new())\n@@ -880,7 +882,7 @@ pub(crate) fn recover_missing_comment_in_span(\n         Some(String::new())\n     } else {\n         let missing_snippet = context.snippet(span);\n-        let pos = missing_snippet.find('/').unwrap_or(0);\n+        let pos = missing_snippet.find('/')?;\n         // 1 = ` `\n         let total_width = missing_comment.len() + used_width + 1;\n         let force_new_line_before_comment ="}, {"sha": "7b16b2dfde065fc123d3785d6b2feb4c2ad7a972", "filename": "tests/source/issue-3639.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f06a8b361dda56defe67d7af56a406cd2fbae08/tests%2Fsource%2Fissue-3639.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f06a8b361dda56defe67d7af56a406cd2fbae08/tests%2Fsource%2Fissue-3639.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-3639.rs?ref=1f06a8b361dda56defe67d7af56a406cd2fbae08", "patch": "@@ -0,0 +1,5 @@\n+trait Foo where {}\n+struct Bar where {}\n+struct Bax where;\n+struct Baz(String) where;\n+impl<> Foo<> for Bar<> where {}"}, {"sha": "e8fddce2de62c4cef846f735938b34b7adadc39b", "filename": "tests/target/issue-3639.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f06a8b361dda56defe67d7af56a406cd2fbae08/tests%2Ftarget%2Fissue-3639.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f06a8b361dda56defe67d7af56a406cd2fbae08/tests%2Ftarget%2Fissue-3639.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3639.rs?ref=1f06a8b361dda56defe67d7af56a406cd2fbae08", "patch": "@@ -0,0 +1,5 @@\n+trait Foo {}\n+struct Bar {}\n+struct Bax;\n+struct Baz(String);\n+impl Foo for Bar {}"}]}