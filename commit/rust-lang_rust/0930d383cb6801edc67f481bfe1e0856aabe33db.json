{"sha": "0930d383cb6801edc67f481bfe1e0856aabe33db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5MzBkMzgzY2I2ODAxZWRjNjdmNDgxYmZlMWUwODU2YWFiZTMzZGI=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-28T14:40:02Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-28T15:01:26Z"}, "message": "rename schedule_drop_{enum,adt}_contents.", "tree": {"sha": "69b56a8973dffce5d4598faa192b44fa27c74a54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69b56a8973dffce5d4598faa192b44fa27c74a54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0930d383cb6801edc67f481bfe1e0856aabe33db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0930d383cb6801edc67f481bfe1e0856aabe33db", "html_url": "https://github.com/rust-lang/rust/commit/0930d383cb6801edc67f481bfe1e0856aabe33db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0930d383cb6801edc67f481bfe1e0856aabe33db/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da2276e293359708b62bb489801cb9872d19d32f", "url": "https://api.github.com/repos/rust-lang/rust/commits/da2276e293359708b62bb489801cb9872d19d32f", "html_url": "https://github.com/rust-lang/rust/commit/da2276e293359708b62bb489801cb9872d19d32f"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "637325881436dd8e2e1b1c6ad2b076b017f2773c", "filename": "src/librustc_trans/trans/cleanup.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0930d383cb6801edc67f481bfe1e0856aabe33db/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0930d383cb6801edc67f481bfe1e0856aabe33db/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs?ref=0930d383cb6801edc67f481bfe1e0856aabe33db", "patch": "@@ -438,10 +438,10 @@ impl<'blk, 'tcx> CleanupMethods<'blk, 'tcx> for FunctionContext<'blk, 'tcx> {\n     /// `ty`. The scheduled code handles extracting the discriminant\n     /// and dropping the contents associated with that variant\n     /// *without* executing any associated drop implementation.\n-    fn schedule_drop_enum_contents(&self,\n-                                   cleanup_scope: ScopeId,\n-                                   val: ValueRef,\n-                                   ty: Ty<'tcx>) {\n+    fn schedule_drop_adt_contents(&self,\n+                                  cleanup_scope: ScopeId,\n+                                  val: ValueRef,\n+                                  ty: Ty<'tcx>) {\n         // `if` below could be \"!contents_needs_drop\"; skipping drop\n         // is just an optimization, so sound to be conservative.\n         if !self.type_needs_drop(ty) { return; }\n@@ -455,7 +455,7 @@ impl<'blk, 'tcx> CleanupMethods<'blk, 'tcx> for FunctionContext<'blk, 'tcx> {\n             skip_dtor: true,\n         };\n \n-        debug!(\"schedule_drop_enum_contents({:?}, val={}, ty={}) fill_on_drop={} skip_dtor={}\",\n+        debug!(\"schedule_drop_adt_contents({:?}, val={}, ty={}) fill_on_drop={} skip_dtor={}\",\n                cleanup_scope,\n                self.ccx.tn().val_to_string(val),\n                ty.repr(self.ccx.tcx()),\n@@ -1240,10 +1240,10 @@ pub trait CleanupMethods<'blk, 'tcx> {\n                                   cleanup_scope: ScopeId,\n                                   val: ValueRef,\n                                   ty: Ty<'tcx>);\n-    fn schedule_drop_enum_contents(&self,\n-                                   cleanup_scope: ScopeId,\n-                                   val: ValueRef,\n-                                   ty: Ty<'tcx>);\n+    fn schedule_drop_adt_contents(&self,\n+                                  cleanup_scope: ScopeId,\n+                                  val: ValueRef,\n+                                  ty: Ty<'tcx>);\n     fn schedule_drop_immediate(&self,\n                                cleanup_scope: ScopeId,\n                                val: ValueRef,"}, {"sha": "a2a9e89ff6351cd5a0d8fd05d72ad7f65693c965", "filename": "src/librustc_trans/trans/glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0930d383cb6801edc67f481bfe1e0856aabe33db/src%2Flibrustc_trans%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0930d383cb6801edc67f481bfe1e0856aabe33db/src%2Flibrustc_trans%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fglue.rs?ref=0930d383cb6801edc67f481bfe1e0856aabe33db", "patch": "@@ -383,7 +383,7 @@ fn trans_struct_drop<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n \n     // Issue #23611: schedule cleanup of contents, re-inspecting the\n     // discriminant (if any) in case of variant swap in drop code.\n-    bcx.fcx.schedule_drop_enum_contents(cleanup::CustomScope(contents_scope), v0, t);\n+    bcx.fcx.schedule_drop_adt_contents(cleanup::CustomScope(contents_scope), v0, t);\n \n     let glue_type = get_drop_glue_type(bcx.ccx(), t);\n     let dtor_ty = ty::mk_ctor_fn(bcx.tcx(), class_did, &[glue_type], ty::mk_nil(bcx.tcx()));"}]}