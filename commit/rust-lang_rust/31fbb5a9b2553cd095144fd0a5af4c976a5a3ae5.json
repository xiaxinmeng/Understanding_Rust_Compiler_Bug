{"sha": "31fbb5a9b2553cd095144fd0a5af4c976a5a3ae5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxZmJiNWE5YjI1NTNjZDA5NTE0NGZkMGE1YWY0Yzk3NmE1YTNhZTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-31T11:10:52Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-31T11:10:52Z"}, "message": "fix imports", "tree": {"sha": "d279d8cd60f326e1103c4b402a4f257b5b16991c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d279d8cd60f326e1103c4b402a4f257b5b16991c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31fbb5a9b2553cd095144fd0a5af4c976a5a3ae5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31fbb5a9b2553cd095144fd0a5af4c976a5a3ae5", "html_url": "https://github.com/rust-lang/rust/commit/31fbb5a9b2553cd095144fd0a5af4c976a5a3ae5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31fbb5a9b2553cd095144fd0a5af4c976a5a3ae5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1fceafcea2b458cc44592947ef06ddf0ad39e58", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1fceafcea2b458cc44592947ef06ddf0ad39e58", "html_url": "https://github.com/rust-lang/rust/commit/e1fceafcea2b458cc44592947ef06ddf0ad39e58"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "85116796d3859b09c2645f720889cdc3a6c6a71a", "filename": "tests/run-pass/hashmap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/31fbb5a9b2553cd095144fd0a5af4c976a5a3ae5/tests%2Frun-pass%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31fbb5a9b2553cd095144fd0a5af4c976a5a3ae5/tests%2Frun-pass%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fhashmap.rs?ref=31fbb5a9b2553cd095144fd0a5af4c976a5a3ae5", "patch": "@@ -1,8 +1,8 @@\n // macOS needs FS access for its HashMap:\n // compile-flags: -Zmiri-disable-isolation\n \n-use std::collections::{self, HashMap};\n-use std::hash::{BuildHasherDefault, BuildHasher};\n+use std::collections::HashMap;\n+use std::hash::BuildHasher;\n \n fn test_map<S: BuildHasher>(mut map: HashMap<i32, i32, S>) {\n     map.insert(0, 0);"}]}