{"sha": "6ebc761f99149b47524664b6625ee36e04449baa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlYmM3NjFmOTkxNDliNDc1MjQ2NjRiNjYyNWVlMzZlMDQ0NDliYWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-02-27T23:45:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-02-27T23:45:41Z"}, "message": "auto merge of #5140 : yjh0502/rust/issue_4458, r=catamorphism\n\nFix is a bug fix for issue #4458.\r\n\r\nThis patch is quite straight-forward. A test for result_str() is added.", "tree": {"sha": "738114347c3fcdd79785a2aac5cb46c1c7c6caac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/738114347c3fcdd79785a2aac5cb46c1c7c6caac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ebc761f99149b47524664b6625ee36e04449baa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ebc761f99149b47524664b6625ee36e04449baa", "html_url": "https://github.com/rust-lang/rust/commit/6ebc761f99149b47524664b6625ee36e04449baa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ebc761f99149b47524664b6625ee36e04449baa/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33e7a1f087b3b8047891b91fa95c5626042e7f6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/33e7a1f087b3b8047891b91fa95c5626042e7f6e", "html_url": "https://github.com/rust-lang/rust/commit/33e7a1f087b3b8047891b91fa95c5626042e7f6e"}, {"sha": "5ae9b2949fd632f20ccc8afe30e273c0aa5b665b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ae9b2949fd632f20ccc8afe30e273c0aa5b665b", "html_url": "https://github.com/rust-lang/rust/commit/5ae9b2949fd632f20ccc8afe30e273c0aa5b665b"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "69c3de5ff6285c8d18d44129947cb8ec84b46c15", "filename": "src/libstd/sha1.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6ebc761f99149b47524664b6625ee36e04449baa/src%2Flibstd%2Fsha1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ebc761f99149b47524664b6625ee36e04449baa/src%2Flibstd%2Fsha1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsha1.rs?ref=6ebc761f99149b47524664b6625ee36e04449baa", "patch": "@@ -251,7 +251,11 @@ pub fn sha1() -> Sha1 {\n             let rr = mk_result(self);\n             let mut s = ~\"\";\n             for vec::each(rr) |b| {\n-                s += uint::to_str_radix(*b as uint, 16u);\n+                let hex = uint::to_str_radix(*b as uint, 16u);\n+                if hex.len() == 1 {\n+                    s += \"0\";\n+                }\n+                s += hex;\n             }\n             return s;\n         }\n@@ -283,6 +287,7 @@ mod tests {\n             struct Test {\n                 input: ~str,\n                 output: ~[u8],\n+                output_str: ~str,\n             }\n \n             fn a_million_letter_a() -> ~str {\n@@ -306,6 +311,7 @@ mod tests {\n                         0x78u8, 0x50u8, 0xC2u8, 0x6Cu8,\n                         0x9Cu8, 0xD0u8, 0xD8u8, 0x9Du8,\n                     ],\n+                    output_str: ~\"a9993e364706816aba3e25717850c26c9cd0d89d\"\n                 },\n                 Test {\n                     input:\n@@ -318,6 +324,7 @@ mod tests {\n                         0xF9u8, 0x51u8, 0x29u8, 0xE5u8,\n                         0xE5u8, 0x46u8, 0x70u8, 0xF1u8,\n                     ],\n+                    output_str: ~\"84983e441c3bd26ebaae4aa1f95129e5e54670f1\"\n                 },\n                 Test {\n                     input: a_million_letter_a(),\n@@ -328,6 +335,7 @@ mod tests {\n                         0xDBu8, 0xADu8, 0x27u8, 0x31u8,\n                         0x65u8, 0x34u8, 0x01u8, 0x6Fu8,\n                     ],\n+                    output_str: ~\"34aa973cd4c4daa4f61eeb2bdbad27316534016f\"\n                 },\n             ];\n             // Examples from wikipedia\n@@ -342,6 +350,7 @@ mod tests {\n                         0xbbu8, 0x76u8, 0xe7u8, 0x39u8,\n                         0x1bu8, 0x93u8, 0xebu8, 0x12u8,\n                     ],\n+                    output_str: ~\"2fd4e1c67a2d28fced849ee1bb76e7391b93eb12\",\n                 },\n                 Test {\n                     input: ~\"The quick brown fox jumps over the lazy cog\",\n@@ -352,6 +361,7 @@ mod tests {\n                         0x0bu8, 0xd1u8, 0x7du8, 0x9bu8,\n                         0x10u8, 0x0du8, 0xb4u8, 0xb3u8,\n                     ],\n+                    output_str: ~\"de9f2c7fd25e1b3afad3e85a0bd17d9b100db4b3\",\n                 },\n             ];\n             let tests = fips_180_1_tests + wikipedia_tests;\n@@ -373,6 +383,11 @@ mod tests {\n                 sh.input_str(t.input);\n                 let out = sh.result();\n                 check_vec_eq(t.output, out);\n+\n+                let out_str = sh.result_str();\n+                assert(out_str.len() == 40);\n+                assert(out_str == t.output_str);\n+\n                 sh.reset();\n             }\n \n@@ -389,6 +404,11 @@ mod tests {\n                 }\n                 let out = sh.result();\n                 check_vec_eq(t.output, out);\n+\n+                let out_str = sh.result_str();\n+                assert(out_str.len() == 40);\n+                assert(out_str == t.output_str);\n+\n                 sh.reset();\n             }\n         }"}]}