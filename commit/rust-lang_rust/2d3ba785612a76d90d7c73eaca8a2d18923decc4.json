{"sha": "2d3ba785612a76d90d7c73eaca8a2d18923decc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkM2JhNzg1NjEyYTc2ZDkwZDdjNzNlYWNhOGEyZDE4OTIzZGVjYzQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-03-08T19:09:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-08T19:09:07Z"}, "message": "Rollup merge of #82888 - Daggy1234:patch-1, r=joshtriplett\n\nGrammar Fixes\n\nFound typo's in the array rustdoc. Pr'ed a fix!", "tree": {"sha": "b3d6d4e4abf63e61cdc940a983111b04e470130d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3d6d4e4abf63e61cdc940a983111b04e470130d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d3ba785612a76d90d7c73eaca8a2d18923decc4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgRnZTCRBK7hj4Ov3rIwAAdHIIACdxBCrtikfLRnQsXbsxJQcu\nsxkd+feFOsK6wzHo0pBOHDWjgXApbJUqwir/Vn/pYsUe5TQdqN4+mha64Nhuq7xD\nNv8FKEVdRB6+y3T3ayjzqF/iI3ey4O6EM+v4xp12r1zwReIhwms45Pgrj9swP28V\nxyYmjfRo7EQtEZD8qTOhV8BKKcG58fhA8lX9dWYBM1Un06GtJ1zbfrWJbbkZmfg1\nVMdQo7KckpDShzQqu+GqQEDTY9HpyxVN4OsEMnlhm1iKuW8cTvj9EcNwk4QhlywW\nbqlMcvgnZU2+7nXT/DZW4SjtMKJ9ZNtje6fYAPLznohKaPo+/kT15UOB9wVOQsk=\n=dRdL\n-----END PGP SIGNATURE-----\n", "payload": "tree b3d6d4e4abf63e61cdc940a983111b04e470130d\nparent 3908eec60fe4f95bcde989651e98b2a3b3965a4b\nparent 655155caa08af56d13bfa79753ff854634fd1417\nauthor Mara Bos <m-ou.se@m-ou.se> 1615230547 +0100\ncommitter GitHub <noreply@github.com> 1615230547 +0100\n\nRollup merge of #82888 - Daggy1234:patch-1, r=joshtriplett\n\nGrammar Fixes\n\nFound typo's in the array rustdoc. Pr'ed a fix!\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d3ba785612a76d90d7c73eaca8a2d18923decc4", "html_url": "https://github.com/rust-lang/rust/commit/2d3ba785612a76d90d7c73eaca8a2d18923decc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d3ba785612a76d90d7c73eaca8a2d18923decc4/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3908eec60fe4f95bcde989651e98b2a3b3965a4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3908eec60fe4f95bcde989651e98b2a3b3965a4b", "html_url": "https://github.com/rust-lang/rust/commit/3908eec60fe4f95bcde989651e98b2a3b3965a4b"}, {"sha": "655155caa08af56d13bfa79753ff854634fd1417", "url": "https://api.github.com/repos/rust-lang/rust/commits/655155caa08af56d13bfa79753ff854634fd1417", "html_url": "https://github.com/rust-lang/rust/commit/655155caa08af56d13bfa79753ff854634fd1417"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "8f52985d1df717327a4d149302c436386df300ff", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2d3ba785612a76d90d7c73eaca8a2d18923decc4/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d3ba785612a76d90d7c73eaca8a2d18923decc4/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=2d3ba785612a76d90d7c73eaca8a2d18923decc4", "patch": "@@ -42,7 +42,7 @@ pub fn from_mut<T>(s: &mut T) -> &mut [T; 1] {\n /// without causing much metadata bloat.\n ///\n /// The trait is marked unsafe in order to restrict implementors to fixed-size\n-/// arrays. User of this trait can assume that implementors have the exact\n+/// arrays. A user of this trait can assume that implementors have the exact\n /// layout in memory of a fixed size array (for example, for unsafe\n /// initialization).\n ///\n@@ -489,7 +489,7 @@ impl<T, const N: usize> [T; N] {\n     /// ```\n     ///\n     /// This method is particularly useful if combined with other methods, like\n-    /// [`map`](#method.map). This way, you can can avoid moving the original\n+    /// [`map`](#method.map). This way, you can avoid moving the original\n     /// array if its elements are not `Copy`.\n     ///\n     /// ```\n@@ -564,7 +564,7 @@ where\n /// yields fewer than `N` items, `None` is returned and all already yielded\n /// items are dropped.\n ///\n-/// Since the iterator is passed as mutable reference and this function calls\n+/// Since the iterator is passed as a mutable reference and this function calls\n /// `next` at most `N` times, the iterator can still be used afterwards to\n /// retrieve the remaining items.\n ///"}]}