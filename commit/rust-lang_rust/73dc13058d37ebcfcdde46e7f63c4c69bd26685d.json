{"sha": "73dc13058d37ebcfcdde46e7f63c4c69bd26685d", "node_id": "C_kwDOAAsO6NoAKDczZGMxMzA1OGQzN2ViY2ZjZGRlNDZlN2Y2M2M0YzY5YmQyNjY4NWQ", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-04-06T08:35:49Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-04-06T08:35:49Z"}, "message": "remove ~const Drop from rustdoc test", "tree": {"sha": "397618df2a44e3b76b24330280afa421cb142ee4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/397618df2a44e3b76b24330280afa421cb142ee4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73dc13058d37ebcfcdde46e7f63c4c69bd26685d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmJNUO4ACgkQzXazX3c0\ndp62ow//diX8pYDsvHV3GUgoISugFNfGyGbaoSqw37cCDucpyDgw1yjf4Xhe4ork\n4Pr+uT4EYDg4ar4qQP2mJj9hgJjMOmX648iJHycsTGvwIP6Q5gfGkoa21cCd8b6O\nRPNi+s32N9wvrqtVkKVMICH4hryGx3sqtQJIZ3OABX3kewgqNVrmi6dJeXO0ijFK\ndl2bQR41bbJKZ+vz56sdUuTshQQKBG+g+QD+f7STM9hZxJPYDZEiupea9VSjoAO8\nMob6uc8PROZPpeB6xkXj+4wRYp0AnsFj28MPXZqbjXKXaJ1Pvtq7q4Rvlv7DhA8e\nBKWA91T+qFdO0/lm5+uJ8LHb4l5ZAUgW+UkqXIy/GBPKS63AtRFCjGF36F6qkoP1\n2vPbK9W5gNemyWGu5HjL+Q2l+4QfbE8eTr77AbHoIAFLQNiXXheqJtelnlniKveq\nhkKpjY7MVrqaApITsSAd7glQQqjtABGvuZkH5x1ZqTsybUH2fULJnt4w8bSkS9N1\nkwNzAkNE7aJTrgy84833OhMmdLddctZk0RT+KLKWNGOe53fBQKAVNC6mBh0Jy6T0\nkoWulfvrNv0ulchEBiXGDKhG+qT3lcaJlBN6U2OcdzHNySz9cYyoQHG835WR3Jk5\nuhdmTseBF8kCvPsGNVvvuIc4u/R6/gVnERjPEFZcHsyN9mlu4dQ=\n=O3w1\n-----END PGP SIGNATURE-----", "payload": "tree 397618df2a44e3b76b24330280afa421cb142ee4\nparent 466720c77764b7f8da9d563802828ce933d451c1\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1649234149 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1649234149 +0200\n\nremove ~const Drop from rustdoc test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73dc13058d37ebcfcdde46e7f63c4c69bd26685d", "html_url": "https://github.com/rust-lang/rust/commit/73dc13058d37ebcfcdde46e7f63c4c69bd26685d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73dc13058d37ebcfcdde46e7f63c4c69bd26685d/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "466720c77764b7f8da9d563802828ce933d451c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/466720c77764b7f8da9d563802828ce933d451c1", "html_url": "https://github.com/rust-lang/rust/commit/466720c77764b7f8da9d563802828ce933d451c1"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "c5353c4d5b5235ca86cb3ab85c452624ed959ee9", "filename": "src/test/rustdoc/rfc-2632-const-trait-impl.rs", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/73dc13058d37ebcfcdde46e7f63c4c69bd26685d/src%2Ftest%2Frustdoc%2Frfc-2632-const-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73dc13058d37ebcfcdde46e7f63c4c69bd26685d/src%2Ftest%2Frustdoc%2Frfc-2632-const-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Frfc-2632-const-trait-impl.rs?ref=73dc13058d37ebcfcdde46e7f63c4c69bd26685d", "patch": "@@ -11,50 +11,40 @@\n pub struct S<T>(T);\n \n // @!has foo/trait.Tr.html '//pre[@class=\"rust trait\"]/code/a[@class=\"trait\"]' '~const'\n-// @!has - '//pre[@class=\"rust trait\"]/code/a[@class=\"trait\"]' 'Drop'\n // @has - '//pre[@class=\"rust trait\"]/code/a[@class=\"trait\"]' 'Clone'\n // @!has - '//pre[@class=\"rust trait\"]/code/span[@class=\"where\"]' '~const'\n-// @!has - '//pre[@class=\"rust trait\"]/code/span[@class=\"where\"]' 'Drop'\n // @has - '//pre[@class=\"rust trait\"]/code/span[@class=\"where\"]' ': Clone'\n pub trait Tr<T> {\n     // @!has - '//div[@id=\"method.a\"]/h4[@class=\"code-header\"]' '~const'\n-    // @!has - '//div[@id=\"method.a\"]/h4[@class=\"code-header\"]/a[@class=\"trait\"]' 'Drop'\n     // @has - '//div[@id=\"method.a\"]/h4[@class=\"code-header\"]/a[@class=\"trait\"]' 'Clone'\n     // @!has - '//div[@id=\"method.a\"]/h4[@class=\"code-header\"]/span[@class=\"where\"]' '~const'\n-    // @!has - '//div[@id=\"method.a\"]/h4[@class=\"code-header\"]/span[@class=\"where fmt-newline\"]' 'Drop'\n     // @has - '//div[@id=\"method.a\"]/h4[@class=\"code-header\"]/span[@class=\"where fmt-newline\"]' ': Clone'\n     #[default_method_body_is_const]\n-    fn a<A: ~const Drop + ~const Clone>() where Option<A>: ~const Drop + ~const Clone {}\n+    fn a<A: ~const Clone>() where Option<A>: ~const Clone {}\n }\n \n // @!has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]' '~const'\n-// @!has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]/a[@class=\"trait\"]' 'Drop'\n // @has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]/a[@class=\"trait\"]' 'Clone'\n // @!has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]/span[@class=\"where\"]' '~const'\n-// @!has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]/span[@class=\"where fmt-newline\"]' 'Drop'\n // @has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]/span[@class=\"where fmt-newline\"]' ': Clone'\n-impl<T: ~const Drop + ~const Clone> const Tr<T> for T where Option<T>: ~const Drop + ~const Clone {\n-    fn a<A: ~const Drop + ~const Clone>() where Option<A>: ~const Drop + ~const Clone {}\n+impl<T: ~const Clone> const Tr<T> for T where Option<T>: ~const Clone {\n+    fn a<A: ~const Clone>() where Option<A>: ~const Clone {}\n }\n \n // @!has foo/fn.foo.html '//pre[@class=\"rust fn\"]/code/a[@class=\"trait\"]' '~const'\n-// @!has - '//pre[@class=\"rust fn\"]/code/a[@class=\"trait\"]' 'Drop'\n // @has - '//pre[@class=\"rust fn\"]/code/a[@class=\"trait\"]' 'Clone'\n // @!has - '//pre[@class=\"rust fn\"]/code/span[@class=\"where fmt-newline\"]' '~const'\n-// @!has - '//pre[@class=\"rust fn\"]/code/span[@class=\"where fmt-newline\"]' 'Drop'\n // @has - '//pre[@class=\"rust fn\"]/code/span[@class=\"where fmt-newline\"]' ': Clone'\n-pub const fn foo<F: ~const Drop + ~const Clone>() where Option<F>: ~const Drop + ~const Clone {\n+pub const fn foo<F: ~const Clone>() where Option<F>: ~const Clone {\n     F::a()\n }\n \n impl<T> S<T> {\n     // @!has foo/struct.S.html '//section[@id=\"method.foo\"]/h4[@class=\"code-header\"]' '~const'\n-    // @!has - '//section[@id=\"method.foo\"]/h4[@class=\"code-header\"]/a[@class=\"trait\"]' 'Drop'\n     // @has - '//section[@id=\"method.foo\"]/h4[@class=\"code-header\"]/a[@class=\"trait\"]' 'Clone'\n     // @!has - '//section[@id=\"method.foo\"]/h4[@class=\"code-header\"]/span[@class=\"where\"]' '~const'\n-    // @!has - '//section[@id=\"method.foo\"]/h4[@class=\"code-header\"]/span[@class=\"where fmt-newline\"]' 'Drop'\n     // @has - '//section[@id=\"method.foo\"]/h4[@class=\"code-header\"]/span[@class=\"where fmt-newline\"]' ': Clone'\n-    pub const fn foo<B: ~const Drop + ~const Clone>() where B: ~const Drop + ~const Clone {\n+    pub const fn foo<B: ~const Clone>() where B: ~const Clone {\n         B::a()\n     }\n }"}]}