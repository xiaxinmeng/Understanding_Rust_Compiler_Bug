{"sha": "94cec74096280509083798bfcbd1be169fd43562", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0Y2VjNzQwOTYyODA1MDkwODM3OThiZmNiZDFiZTE2OWZkNDM1NjI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-10-11T23:40:18Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-10-11T23:40:18Z"}, "message": "Try to print backtraces on failure", "tree": {"sha": "e10dbce1e72079b4ebddf5a9ad58a92776e92715", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e10dbce1e72079b4ebddf5a9ad58a92776e92715"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94cec74096280509083798bfcbd1be169fd43562", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94cec74096280509083798bfcbd1be169fd43562", "html_url": "https://github.com/rust-lang/rust/commit/94cec74096280509083798bfcbd1be169fd43562", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94cec74096280509083798bfcbd1be169fd43562/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99086292ac50458244722aedbad53c5047214429", "url": "https://api.github.com/repos/rust-lang/rust/commits/99086292ac50458244722aedbad53c5047214429", "html_url": "https://github.com/rust-lang/rust/commit/99086292ac50458244722aedbad53c5047214429"}], "stats": {"total": 63, "additions": 46, "deletions": 17}, "files": [{"sha": "74a5d00ef1271eed9312ef9b4825ce9dd1a99d1f", "filename": "src/rt/rust_log.cpp", "status": "modified", "additions": 25, "deletions": 17, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/94cec74096280509083798bfcbd1be169fd43562/src%2Frt%2Frust_log.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/94cec74096280509083798bfcbd1be169fd43562/src%2Frt%2Frust_log.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_log.cpp?ref=94cec74096280509083798bfcbd1be169fd43562", "patch": "@@ -6,30 +6,38 @@\n #include \"rust_internal.h\"\n #include \"util/array_list.h\"\n #include <stdarg.h>\n+#include <stdlib.h>\n+#include <string.h>\n+#include <alloca.h>\n \n static uint32_t\n read_type_bit_mask() {\n     uint32_t bits = rust_log::ULOG | rust_log::ERR;\n     char *env_str = getenv(\"RUST_LOG\");\n     if (env_str) {\n+        char *str = (char *)alloca(strlen(env_str) + 2);\n+        str[0] = ',';\n+        strcpy(str + 1, env_str);\n+\n         bits = 0;\n-        bits |= strstr(env_str, \"err\") ? rust_log::ERR : 0;\n-        bits |= strstr(env_str, \"mem\") ? rust_log::MEM : 0;\n-        bits |= strstr(env_str, \"comm\") ? rust_log::COMM : 0;\n-        bits |= strstr(env_str, \"task\") ? rust_log::TASK : 0;\n-        bits |= strstr(env_str, \"up\") ? rust_log::UPCALL : 0;\n-        bits |= strstr(env_str, \"dom\") ? rust_log::DOM : 0;\n-        bits |= strstr(env_str, \"ulog\") ? rust_log::ULOG : 0;\n-        bits |= strstr(env_str, \"trace\") ? rust_log::TRACE : 0;\n-        bits |= strstr(env_str, \"dwarf\") ? rust_log::DWARF : 0;\n-        bits |= strstr(env_str, \"cache\") ? rust_log::CACHE : 0;\n-        bits |= strstr(env_str, \"timer\") ? rust_log::TIMER : 0;\n-        bits |= strstr(env_str, \"gc\") ? rust_log::GC : 0;\n-        bits |= strstr(env_str, \"stdlib\") ? rust_log::STDLIB : 0;\n-        bits |= strstr(env_str, \"special\") ? rust_log::SPECIAL : 0;\n-        bits |= strstr(env_str, \"kern\") ? rust_log::KERN : 0;\n-        bits |= strstr(env_str, \"all\") ? rust_log::ALL : 0;\n-        bits = strstr(env_str, \"none\") ? 0 : bits;\n+        bits |= strstr(str, \",err\") ? rust_log::ERR : 0;\n+        bits |= strstr(str, \",mem\") ? rust_log::MEM : 0;\n+        bits |= strstr(str, \",comm\") ? rust_log::COMM : 0;\n+        bits |= strstr(str, \",task\") ? rust_log::TASK : 0;\n+        bits |= strstr(str, \",up\") ? rust_log::UPCALL : 0;\n+        bits |= strstr(str, \",dom\") ? rust_log::DOM : 0;\n+        bits |= strstr(str, \",ulog\") ? rust_log::ULOG : 0;\n+        bits |= strstr(str, \",trace\") ? rust_log::TRACE : 0;\n+        bits |= strstr(str, \",dwarf\") ? rust_log::DWARF : 0;\n+        bits |= strstr(str, \",cache\") ? rust_log::CACHE : 0;\n+        bits |= strstr(str, \",timer\") ? rust_log::TIMER : 0;\n+        bits |= strstr(str, \",gc\") ? rust_log::GC : 0;\n+        bits |= strstr(str, \",stdlib\") ? rust_log::STDLIB : 0;\n+        bits |= strstr(str, \",special\") ? rust_log::SPECIAL : 0;\n+        bits |= strstr(str, \",kern\") ? rust_log::KERN : 0;\n+        bits |= strstr(str, \",bt\") ? rust_log::BT : 0;\n+        bits |= strstr(str, \",all\") ? rust_log::ALL : 0;\n+        bits = strstr(str, \",none\") ? 0 : bits;\n     }\n     return bits;\n }"}, {"sha": "59aa504f6945b6482344a97d7b77706d09028e1d", "filename": "src/rt/rust_log.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/94cec74096280509083798bfcbd1be169fd43562/src%2Frt%2Frust_log.h", "raw_url": "https://github.com/rust-lang/rust/raw/94cec74096280509083798bfcbd1be169fd43562/src%2Frt%2Frust_log.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_log.h?ref=94cec74096280509083798bfcbd1be169fd43562", "patch": "@@ -42,6 +42,7 @@ class rust_log {\n         STDLIB = 0x1000,\n         SPECIAL = 0x2000,\n         KERN = 0x4000,\n+        BT = 0x8000,\n         ALL = 0xffffffff\n     };\n "}, {"sha": "530e5997f5500974496735b818f508324f642749", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/94cec74096280509083798bfcbd1be169fd43562/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/94cec74096280509083798bfcbd1be169fd43562/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=94cec74096280509083798bfcbd1be169fd43562", "patch": "@@ -4,6 +4,10 @@\n #include \"valgrind.h\"\n #include \"memcheck.h\"\n \n+#ifndef __WIN32__\n+#include <execinfo.h>\n+#endif\n+\n // Stacks\n \n // FIXME (issue #151): This should be 0x300; the change here is for\n@@ -366,6 +370,7 @@ void\n rust_task::fail(size_t nargs) {\n     // See note in ::kill() regarding who should call this.\n     dom->log(rust_log::TASK, \"task %s @0x%\" PRIxPTR \" failing\", name, this);\n+    backtrace();\n     // Unblock the task so it can unwind.\n     unblock();\n     if (this == dom->root_task)\n@@ -632,6 +637,18 @@ rust_task::log(uint32_t type_bits, char const *fmt, ...) {\n     }\n }\n \n+void\n+rust_task::backtrace() {\n+    if (!dom->get_log().is_tracing(rust_log::BT))\n+        return;\n+\n+#ifndef __WIN32__\n+    void *call_stack[256];\n+    int nframes = ::backtrace(call_stack, 256);\n+    backtrace_symbols_fd(call_stack + 1, nframes - 1, 2);\n+#endif\n+}\n+\n rust_handle<rust_task> *\n rust_task::get_handle() {\n     if (handle == NULL) {"}, {"sha": "9fbc67acff58ddedf02a08678f0622777e1ee4eb", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/94cec74096280509083798bfcbd1be169fd43562/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/94cec74096280509083798bfcbd1be169fd43562/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=94cec74096280509083798bfcbd1be169fd43562", "patch": "@@ -83,6 +83,9 @@ rust_task : public maybe_proxy<rust_task>,\n \n     void log(uint32_t type_bits, char const *fmt, ...);\n \n+    // Print a backtrace, if the \"bt\" logging option is on.\n+    void backtrace();\n+\n     // Swap in some glue code to run when we have returned to the\n     // task's context (assuming we're the active task).\n     void run_after_return(size_t nargs, uintptr_t glue);"}]}