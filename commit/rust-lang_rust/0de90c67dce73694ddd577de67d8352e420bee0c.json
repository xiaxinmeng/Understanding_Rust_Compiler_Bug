{"sha": "0de90c67dce73694ddd577de67d8352e420bee0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkZTkwYzY3ZGNlNzM2OTRkZGQ1NzdkZTY3ZDgzNTJlNDIwYmVlMGM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-22T13:32:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-22T13:32:09Z"}, "message": "Rollup merge of #62709 - nhynes:test-maplike-fromiter, r=cuviper\n\nTest that maplike FromIter satisfies uniqueness\n\nThis PR adds a simple assertion to the `HashMap` and `HashSet` tests to ensure that uniqueness is satisfied when `FromIter`ing. This is useful for people who want to test their custom type against the Map/Set interfaces since they'll copy the tests wholesale but possibly miss this bug (where _they_ = _me_).", "tree": {"sha": "3588f6a94ad061e808dea12d2b71d505804ba871", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3588f6a94ad061e808dea12d2b71d505804ba871"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0de90c67dce73694ddd577de67d8352e420bee0c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdNbrZCRBK7hj4Ov3rIwAAdHIIAGESs4RetkKObzLKzk7zpwAK\nCx16GX9kv4NARe2CEjCDb9lexEg3k42WGOIrR9oL+7ky+PRX3N3ijUQDFubL2MAf\ntPvo4l3t460CZoRzXbPYMG1YHZZlyDJeGASONxqJHAwDEW8m//lRVpxXsCVp+mY/\nYMeFvrdrzEqiIEIg+D2TsDaFcf+fwKXrTPAHZMPicYbgmaugiFJpTBCi4zDrEZSf\nvvVPOENOQCLbf9xRQuKwiLM3p5BNJfToyqH4N5hMpAGNZIT8nYEX2auLeBcNwjwC\nJTz/czeVDlr7kHLtnumccGbL3Mt6nLYdQ93WRnjejJjvLmcMqh/58WkimqDdxJo=\n=OsV/\n-----END PGP SIGNATURE-----\n", "payload": "tree 3588f6a94ad061e808dea12d2b71d505804ba871\nparent 4bc1ce7bdb7f5dc9ea07c0b630c087d8e11140e4\nparent 503cedac0c33782ab2ec6765f6b790850d260bd2\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1563802329 +0200\ncommitter GitHub <noreply@github.com> 1563802329 +0200\n\nRollup merge of #62709 - nhynes:test-maplike-fromiter, r=cuviper\n\nTest that maplike FromIter satisfies uniqueness\n\nThis PR adds a simple assertion to the `HashMap` and `HashSet` tests to ensure that uniqueness is satisfied when `FromIter`ing. This is useful for people who want to test their custom type against the Map/Set interfaces since they'll copy the tests wholesale but possibly miss this bug (where _they_ = _me_).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0de90c67dce73694ddd577de67d8352e420bee0c", "html_url": "https://github.com/rust-lang/rust/commit/0de90c67dce73694ddd577de67d8352e420bee0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0de90c67dce73694ddd577de67d8352e420bee0c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bc1ce7bdb7f5dc9ea07c0b630c087d8e11140e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bc1ce7bdb7f5dc9ea07c0b630c087d8e11140e4", "html_url": "https://github.com/rust-lang/rust/commit/4bc1ce7bdb7f5dc9ea07c0b630c087d8e11140e4"}, {"sha": "503cedac0c33782ab2ec6765f6b790850d260bd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/503cedac0c33782ab2ec6765f6b790850d260bd2", "html_url": "https://github.com/rust-lang/rust/commit/503cedac0c33782ab2ec6765f6b790850d260bd2"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "1e28ee8da26b49e35aa7b6d9240fe7bbe1604672", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0de90c67dce73694ddd577de67d8352e420bee0c/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0de90c67dce73694ddd577de67d8352e420bee0c/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=0de90c67dce73694ddd577de67d8352e420bee0c", "patch": "@@ -3138,13 +3138,15 @@ mod test_map {\n \n     #[test]\n     fn test_from_iter() {\n-        let xs = [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)];\n+        let xs = [(1, 1), (2, 2), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)];\n \n         let map: HashMap<_, _> = xs.iter().cloned().collect();\n \n         for &(k, v) in &xs {\n             assert_eq!(map.get(&k), Some(&v));\n         }\n+\n+        assert_eq!(map.iter().len(), xs.len() - 1);\n     }\n \n     #[test]"}, {"sha": "d243412405a790e08f2f58254a3556013c9fd53d", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0de90c67dce73694ddd577de67d8352e420bee0c/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0de90c67dce73694ddd577de67d8352e420bee0c/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=0de90c67dce73694ddd577de67d8352e420bee0c", "patch": "@@ -1782,13 +1782,15 @@ mod test_set {\n \n     #[test]\n     fn test_from_iter() {\n-        let xs = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n+        let xs = [1, 2, 2, 3, 4, 5, 6, 7, 8, 9];\n \n         let set: HashSet<_> = xs.iter().cloned().collect();\n \n         for x in &xs {\n             assert!(set.contains(x));\n         }\n+\n+        assert_eq!(set.iter().len(), xs.len() - 1);\n     }\n \n     #[test]"}]}