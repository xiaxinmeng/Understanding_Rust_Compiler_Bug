{"sha": "b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee", "node_id": "C_kwDOAAsO6NoAKGI3M2NkZjFiMjlkMjVkM2M2ZDBjYzRmOGE3NzQ0YjA4OTMwZTg2ZWU", "commit": {"author": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2023-01-18T00:14:56Z"}, "committer": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2023-01-18T00:14:56Z"}, "message": "special case removing `&` suggestion", "tree": {"sha": "a3bdc4dc6325dff8a8b5b26cb2a70fca101ac6ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3bdc4dc6325dff8a8b5b26cb2a70fca101ac6ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJJBAABCAAzFiEEYSWD6p+RIeSP1N2eF81cKtrg00QFAmPHOgAVHGV6cmFzdXJl\nQG91dGxvb2suY29tAAoJEBfNXCra4NNEcawP/1HyU7zz3bs4OEzArp3ZpcgohMZh\nUJzZDx4Mk19OZAlJ0zH440+BQHm5p4Jjy3NtTFr2PU9Ewmo+IY/vDdtTyTTGYWEu\n9/3fPfgMJ6uv/J6BbHnaOCl7iBxJBn0g3OuITlr/0NwziTpIrfoEE5AL04e9ahv6\nRP/3LBmSLslKmJKCGoBDKXC1zlxkYncFhw72Ovobl10fHPxThrOqhRzqSa96V9h2\nlqg+Z3auA2D5usdfWQIzHp+B/1vWPFr4FeSJBlSu6aATMd0rxhS+zOWjB0yqwI47\n3B3U4Ay5r30cjk7BTf42Pxwr7C6wjSm9gIpWETAoa0eIfQ9tQ4TqtlyZTvo2O1cv\n+2NvU6yBA1upreQdRqWkbVTetzaLq3g/efRqUNGhl1QvDW4KWdI248mqfszub0lr\nshlH++MliK5AVEBmTUIIWlH76a5o5GuKI6dRUjyEZmm2XQ6A/1kHtP99zBoNw/A4\nE0ZXFz1/UW5qTpcMV5Q1gX/LRrxL8QIHvH6pJddWOzZVX4dzmMoSJnetafuY50HE\naw8W04I6xEvz8g3SHaI1g1RKN9GdPv5jCHBgtijemqy19zqYlbfbZyfAv96/8dDZ\nFWszVuMJ6Bu43n7quid438JQH0vatcENsYZuJHvOJvQ7fPVIvsReNRmqiwtezfYh\nArUAtePWJ4CdJskJ\n=vCyG\n-----END PGP SIGNATURE-----", "payload": "tree a3bdc4dc6325dff8a8b5b26cb2a70fca101ac6ed\nparent ca1178f02237fd84649a30b74052da4ef265371f\nauthor Ezra Shaw <ezrasure@outlook.com> 1674000896 +1300\ncommitter Ezra Shaw <ezrasure@outlook.com> 1674000896 +1300\n\nspecial case removing `&` suggestion\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee", "html_url": "https://github.com/rust-lang/rust/commit/b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee/comments", "author": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca1178f02237fd84649a30b74052da4ef265371f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca1178f02237fd84649a30b74052da4ef265371f", "html_url": "https://github.com/rust-lang/rust/commit/ca1178f02237fd84649a30b74052da4ef265371f"}], "stats": {"total": 57, "additions": 45, "deletions": 12}, "files": [{"sha": "5e59475a7bdfcf5fc21f74ec1bba240962e5e865", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee", "patch": "@@ -1787,6 +1787,14 @@ impl Expr<'_> {\n         expr\n     }\n \n+    pub fn peel_borrows(&self) -> &Self {\n+        let mut expr = self;\n+        while let ExprKind::AddrOf(.., inner) = &expr.kind {\n+            expr = inner;\n+        }\n+        expr\n+    }\n+\n     pub fn can_have_side_effects(&self) -> bool {\n         match self.peel_drop_temps().kind {\n             ExprKind::Path(_) | ExprKind::Lit(_) => false,"}, {"sha": "712f9b87aed0ad623b3bcd77be096c07cb5ce5b1", "filename": "compiler/rustc_hir_typeck/src/cast.rs", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee/compiler%2Frustc_hir_typeck%2Fsrc%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee/compiler%2Frustc_hir_typeck%2Fsrc%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fcast.rs?ref=b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee", "patch": "@@ -31,6 +31,7 @@\n use super::FnCtxt;\n \n use crate::type_error_struct;\n+use hir::ExprKind;\n use rustc_errors::{\n     struct_span_err, Applicability, DelayDm, Diagnostic, DiagnosticBuilder, ErrorGuaranteed,\n };\n@@ -237,12 +238,23 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n                     fcx,\n                 );\n \n-                err.span_suggestion_verbose(\n-                    self.expr_span.shrink_to_lo(),\n-                    \"dereference the expression\",\n-                    \"*\",\n-                    Applicability::MachineApplicable,\n-                );\n+                if matches!(self.expr.kind, ExprKind::AddrOf(..)) {\n+                    // get just the borrow part of the expression\n+                    let span = self.expr_span.with_hi(self.expr.peel_borrows().span.lo());\n+                    err.span_suggestion_verbose(\n+                        span,\n+                        \"remove the unneeded borrow\",\n+                        \"\",\n+                        Applicability::MachineApplicable,\n+                    );\n+                } else {\n+                    err.span_suggestion_verbose(\n+                        self.expr_span.shrink_to_lo(),\n+                        \"dereference the expression\",\n+                        \"*\",\n+                        Applicability::MachineApplicable,\n+                    );\n+                }\n \n                 err.emit();\n             }"}, {"sha": "6f6c6513846cf228c0deeaad8c651af0faee273c", "filename": "tests/ui/error-codes/E0606.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee/tests%2Fui%2Ferror-codes%2FE0606.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee/tests%2Fui%2Ferror-codes%2FE0606.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0606.rs?ref=b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee", "patch": "@@ -1,3 +1,4 @@\n fn main() {\n-    &0u8 as u8; //~ ERROR E0606\n+    let x = &(&0u8 as u8); //~ ERROR E0606\n+    x as u8; //~ casting `&u8` as `u8` is invalid [E0606]\n }"}, {"sha": "2492eb299cc55b39de13f96225feee7ebfb76f79", "filename": "tests/ui/error-codes/E0606.stderr", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee/tests%2Fui%2Ferror-codes%2FE0606.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee/tests%2Fui%2Ferror-codes%2FE0606.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0606.stderr?ref=b73cdf1b29d25d3c6d0cc4f8a7744b08930e86ee", "patch": "@@ -1,14 +1,26 @@\n error[E0606]: casting `&u8` as `u8` is invalid\n-  --> $DIR/E0606.rs:2:5\n+  --> $DIR/E0606.rs:2:14\n    |\n-LL |     &0u8 as u8;\n-   |     ^^^^^^^^^^\n+LL |     let x = &(&0u8 as u8);\n+   |              ^^^^^^^^^^^^\n+   |\n+help: remove the unneeded borrow\n+   |\n+LL -     let x = &(&0u8 as u8);\n+LL +     let x = &(0u8 as u8);\n+   |\n+\n+error[E0606]: casting `&u8` as `u8` is invalid\n+  --> $DIR/E0606.rs:3:5\n+   |\n+LL |     x as u8;\n+   |     ^^^^^^^\n    |\n help: dereference the expression\n    |\n-LL |     *&0u8 as u8;\n+LL |     *x as u8;\n    |     +\n \n-error: aborting due to previous error\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0606`."}]}