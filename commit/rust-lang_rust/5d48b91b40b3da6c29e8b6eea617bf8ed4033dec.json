{"sha": "5d48b91b40b3da6c29e8b6eea617bf8ed4033dec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkNDhiOTFiNDBiM2RhNmMyOWU4YjZlZWE2MTdiZjhlZDQwMzNkZWM=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-01-01T15:59:59Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-01-01T16:01:09Z"}, "message": "field_reassign_with_default: don't expand macros in suggestion\n\nfixes #6522\n\nchangelog: field_reassign_with_default: don't expand macros in lint suggestion (#6522)", "tree": {"sha": "152201be1522f0453a3156d0762aeeab7346bcb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/152201be1522f0453a3156d0762aeeab7346bcb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d48b91b40b3da6c29e8b6eea617bf8ed4033dec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d48b91b40b3da6c29e8b6eea617bf8ed4033dec", "html_url": "https://github.com/rust-lang/rust/commit/5d48b91b40b3da6c29e8b6eea617bf8ed4033dec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d48b91b40b3da6c29e8b6eea617bf8ed4033dec/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60919e416d16d7293b43a14737a755c34207f043", "url": "https://api.github.com/repos/rust-lang/rust/commits/60919e416d16d7293b43a14737a755c34207f043", "html_url": "https://github.com/rust-lang/rust/commit/60919e416d16d7293b43a14737a755c34207f043"}], "stats": {"total": 53, "additions": 38, "deletions": 15}, "files": [{"sha": "9fa06d7cde9f9e45047c795f636dfa443469876d", "filename": "clippy_lints/src/default.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5d48b91b40b3da6c29e8b6eea617bf8ed4033dec/clippy_lints%2Fsrc%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d48b91b40b3da6c29e8b6eea617bf8ed4033dec/clippy_lints%2Fsrc%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault.rs?ref=5d48b91b40b3da6c29e8b6eea617bf8ed4033dec", "patch": "@@ -1,4 +1,6 @@\n-use crate::utils::{any_parent_is_automatically_derived, contains_name, match_def_path, paths, qpath_res, snippet};\n+use crate::utils::{\n+    any_parent_is_automatically_derived, contains_name, match_def_path, paths, qpath_res, snippet_with_macro_callsite,\n+};\n use crate::utils::{span_lint_and_note, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc_data_structures::fx::FxHashSet;\n@@ -187,7 +189,7 @@ impl LateLintPass<'_> for Default {\n                     .into_iter()\n                     .map(|(field, rhs)| {\n                         // extract and store the assigned value for help message\n-                        let value_snippet = snippet(cx, rhs.span, \"..\");\n+                        let value_snippet = snippet_with_macro_callsite(cx, rhs.span, \"..\");\n                         format!(\"{}: {}\", field, value_snippet)\n                     })\n                     .collect::<Vec<String>>()"}, {"sha": "2990397c03e817725bff5af28d31649c7dcbb5b8", "filename": "tests/ui/field_reassign_with_default.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5d48b91b40b3da6c29e8b6eea617bf8ed4033dec/tests%2Fui%2Ffield_reassign_with_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d48b91b40b3da6c29e8b6eea617bf8ed4033dec/tests%2Fui%2Ffield_reassign_with_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffield_reassign_with_default.rs?ref=5d48b91b40b3da6c29e8b6eea617bf8ed4033dec", "patch": "@@ -11,6 +11,11 @@ struct B {\n     j: i64,\n }\n \n+#[derive(Default)]\n+struct C {\n+    i: Vec<i32>,\n+    j: i64,\n+}\n /// Implements .next() that returns a different number each time.\n struct SideEffect(i32);\n \n@@ -111,6 +116,10 @@ fn main() {\n     // don't lint - some private fields\n     let mut x = m::F::default();\n     x.a = 1;\n+\n+    // don't expand macros in the suggestion (#6522)\n+    let mut a: C = C::default();\n+    a.i = vec![1];\n }\n \n mod m {"}, {"sha": "59d2ac8ed69760d5c8890cca95aa4af9434bfcb2", "filename": "tests/ui/field_reassign_with_default.stderr", "status": "modified", "additions": 25, "deletions": 13, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/5d48b91b40b3da6c29e8b6eea617bf8ed4033dec/tests%2Fui%2Ffield_reassign_with_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d48b91b40b3da6c29e8b6eea617bf8ed4033dec/tests%2Fui%2Ffield_reassign_with_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffield_reassign_with_default.stderr?ref=5d48b91b40b3da6c29e8b6eea617bf8ed4033dec", "patch": "@@ -1,75 +1,87 @@\n error: field assignment outside of initializer for an instance created with Default::default()\n-  --> $DIR/field_reassign_with_default.rs:30:5\n+  --> $DIR/field_reassign_with_default.rs:35:5\n    |\n LL |     a.i = 42;\n    |     ^^^^^^^^^\n    |\n    = note: `-D clippy::field-reassign-with-default` implied by `-D warnings`\n note: consider initializing the variable with `A { i: 42, ..Default::default() }` and removing relevant reassignments\n-  --> $DIR/field_reassign_with_default.rs:29:5\n+  --> $DIR/field_reassign_with_default.rs:34:5\n    |\n LL |     let mut a: A = Default::default();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: field assignment outside of initializer for an instance created with Default::default()\n-  --> $DIR/field_reassign_with_default.rs:70:5\n+  --> $DIR/field_reassign_with_default.rs:75:5\n    |\n LL |     a.j = 43;\n    |     ^^^^^^^^^\n    |\n note: consider initializing the variable with `A { j: 43, i: 42 }` and removing relevant reassignments\n-  --> $DIR/field_reassign_with_default.rs:69:5\n+  --> $DIR/field_reassign_with_default.rs:74:5\n    |\n LL |     let mut a: A = Default::default();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: field assignment outside of initializer for an instance created with Default::default()\n-  --> $DIR/field_reassign_with_default.rs:75:5\n+  --> $DIR/field_reassign_with_default.rs:80:5\n    |\n LL |     a.i = 42;\n    |     ^^^^^^^^^\n    |\n note: consider initializing the variable with `A { i: 42, j: 44 }` and removing relevant reassignments\n-  --> $DIR/field_reassign_with_default.rs:74:5\n+  --> $DIR/field_reassign_with_default.rs:79:5\n    |\n LL |     let mut a: A = Default::default();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: field assignment outside of initializer for an instance created with Default::default()\n-  --> $DIR/field_reassign_with_default.rs:81:5\n+  --> $DIR/field_reassign_with_default.rs:86:5\n    |\n LL |     a.i = 42;\n    |     ^^^^^^^^^\n    |\n note: consider initializing the variable with `A { i: 42, ..Default::default() }` and removing relevant reassignments\n-  --> $DIR/field_reassign_with_default.rs:80:5\n+  --> $DIR/field_reassign_with_default.rs:85:5\n    |\n LL |     let mut a = A::default();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: field assignment outside of initializer for an instance created with Default::default()\n-  --> $DIR/field_reassign_with_default.rs:91:5\n+  --> $DIR/field_reassign_with_default.rs:96:5\n    |\n LL |     a.i = Default::default();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: consider initializing the variable with `A { i: Default::default(), ..Default::default() }` and removing relevant reassignments\n-  --> $DIR/field_reassign_with_default.rs:90:5\n+  --> $DIR/field_reassign_with_default.rs:95:5\n    |\n LL |     let mut a: A = Default::default();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: field assignment outside of initializer for an instance created with Default::default()\n-  --> $DIR/field_reassign_with_default.rs:95:5\n+  --> $DIR/field_reassign_with_default.rs:100:5\n    |\n LL |     a.i = Default::default();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: consider initializing the variable with `A { i: Default::default(), j: 45 }` and removing relevant reassignments\n-  --> $DIR/field_reassign_with_default.rs:94:5\n+  --> $DIR/field_reassign_with_default.rs:99:5\n    |\n LL |     let mut a: A = Default::default();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 6 previous errors\n+error: field assignment outside of initializer for an instance created with Default::default()\n+  --> $DIR/field_reassign_with_default.rs:122:5\n+   |\n+LL |     a.i = vec![1];\n+   |     ^^^^^^^^^^^^^^\n+   |\n+note: consider initializing the variable with `C { i: vec![1], ..Default::default() }` and removing relevant reassignments\n+  --> $DIR/field_reassign_with_default.rs:121:5\n+   |\n+LL |     let mut a: C = C::default();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 7 previous errors\n "}]}