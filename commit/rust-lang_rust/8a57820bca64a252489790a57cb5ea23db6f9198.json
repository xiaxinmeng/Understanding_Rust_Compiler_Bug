{"sha": "8a57820bca64a252489790a57cb5ea23db6f9198", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNTc4MjBiY2E2NGEyNTI0ODk3OTBhNTdjYjVlYTIzZGI2ZjkxOTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-20T13:07:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-20T13:07:35Z"}, "message": "Auto merge of #84665 - adamgemmell:aarch64-features, r=Amanieu\n\nUpdate list of allowed aarch64 features\n\nI recently added these features to std_detect for aarch64 linux, pending [review](https://github.com/rust-lang/stdarch/pull/1146).\n\nI have commented any features not supported by LLVM 9, the current minimum version for Rust. Some (PAuth at least) were renamed between 9 & 12 and I've left them disabled. TME, however, is not in LLVM 9 but I've left it enabled.\n\nSee https://github.com/rust-lang/stdarch/issues/993", "tree": {"sha": "c4470c2041d794ab0ea73165363e4e50dc887680", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4470c2041d794ab0ea73165363e4e50dc887680"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a57820bca64a252489790a57cb5ea23db6f9198", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a57820bca64a252489790a57cb5ea23db6f9198", "html_url": "https://github.com/rust-lang/rust/commit/8a57820bca64a252489790a57cb5ea23db6f9198", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a57820bca64a252489790a57cb5ea23db6f9198/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35bab923c8e5a1e8291735e7630539002eb80d7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/35bab923c8e5a1e8291735e7630539002eb80d7b", "html_url": "https://github.com/rust-lang/rust/commit/35bab923c8e5a1e8291735e7630539002eb80d7b"}, {"sha": "d3737a66074945f65858086609cd51377c14559b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3737a66074945f65858086609cd51377c14559b", "html_url": "https://github.com/rust-lang/rust/commit/d3737a66074945f65858086609cd51377c14559b"}], "stats": {"total": 86, "additions": 83, "deletions": 3}, "files": [{"sha": "387062a671d253c900a5b9b0647c8b83f18c0463", "filename": "compiler/rustc_codegen_llvm/src/llvm_util.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8a57820bca64a252489790a57cb5ea23db6f9198/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a57820bca64a252489790a57cb5ea23db6f9198/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs?ref=8a57820bca64a252489790a57cb5ea23db6f9198", "patch": "@@ -152,6 +152,12 @@ pub fn to_llvm_feature<'a>(sess: &Session, s: &'a str) -> &'a str {\n         (\"x86\", \"avx512vpclmulqdq\") => \"vpclmulqdq\",\n         (\"aarch64\", \"fp\") => \"fp-armv8\",\n         (\"aarch64\", \"fp16\") => \"fullfp16\",\n+        (\"aarch64\", \"fhm\") => \"fp16fml\",\n+        (\"aarch64\", \"rcpc2\") => \"rcpc-immo\",\n+        (\"aarch64\", \"dpb\") => \"ccpp\",\n+        (\"aarch64\", \"dpb2\") => \"ccdp\",\n+        (\"aarch64\", \"frintts\") => \"fptoint\",\n+        (\"aarch64\", \"fcma\") => \"complxnum\",\n         (_, s) => s,\n     }\n }"}, {"sha": "98d550d732fe21ddd4d323ade5f27abdf358aa65", "filename": "compiler/rustc_codegen_ssa/src/target_features.rs", "status": "modified", "additions": 77, "deletions": 2, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/8a57820bca64a252489790a57cb5ea23db6f9198/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a57820bca64a252489790a57cb5ea23db6f9198/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs?ref=8a57820bca64a252489790a57cb5ea23db6f9198", "patch": "@@ -17,6 +17,8 @@ const ARM_ALLOWED_FEATURES: &[(&str, Option<Symbol>)] = &[\n     (\"neon\", Some(sym::arm_target_feature)),\n     (\"crc\", Some(sym::arm_target_feature)),\n     (\"crypto\", Some(sym::arm_target_feature)),\n+    (\"aes\", Some(sym::arm_target_feature)),\n+    (\"sha2\", Some(sym::arm_target_feature)),\n     (\"v5te\", Some(sym::arm_target_feature)),\n     (\"v6\", Some(sym::arm_target_feature)),\n     (\"v6k\", Some(sym::arm_target_feature)),\n@@ -33,22 +35,95 @@ const ARM_ALLOWED_FEATURES: &[(&str, Option<Symbol>)] = &[\n     (\"thumb-mode\", Some(sym::arm_target_feature)),\n ];\n \n+// Commented features are not available in LLVM 10.0, or have since been renamed\n const AARCH64_ALLOWED_FEATURES: &[(&str, Option<Symbol>)] = &[\n-    (\"fp\", Some(sym::aarch64_target_feature)),\n+    // FEAT_AdvSimd\n     (\"neon\", Some(sym::aarch64_target_feature)),\n+    // FEAT_FP\n+    (\"fp\", Some(sym::aarch64_target_feature)),\n+    // FEAT_FP16\n+    (\"fp16\", Some(sym::aarch64_target_feature)),\n+    // FEAT_SVE\n     (\"sve\", Some(sym::aarch64_target_feature)),\n+    // FEAT_CRC\n     (\"crc\", Some(sym::aarch64_target_feature)),\n+    // Cryptographic extension\n     (\"crypto\", Some(sym::aarch64_target_feature)),\n+    // FEAT_RAS\n     (\"ras\", Some(sym::aarch64_target_feature)),\n+    // FEAT_LSE\n     (\"lse\", Some(sym::aarch64_target_feature)),\n+    // FEAT_RDM\n     (\"rdm\", Some(sym::aarch64_target_feature)),\n-    (\"fp16\", Some(sym::aarch64_target_feature)),\n+    // FEAT_RCPC\n     (\"rcpc\", Some(sym::aarch64_target_feature)),\n+    // FEAT_RCPC2\n+    (\"rcpc2\", Some(sym::aarch64_target_feature)),\n+    // FEAT_DotProd\n     (\"dotprod\", Some(sym::aarch64_target_feature)),\n+    // FEAT_TME\n     (\"tme\", Some(sym::aarch64_target_feature)),\n+    // FEAT_FHM\n+    (\"fhm\", Some(sym::aarch64_target_feature)),\n+    // FEAT_DIT\n+    (\"dit\", Some(sym::aarch64_target_feature)),\n+    // FEAT_FLAGM\n+    // (\"flagm\", Some(sym::aarch64_target_feature)),\n+    // FEAT_SSBS\n+    (\"ssbs\", Some(sym::aarch64_target_feature)),\n+    // FEAT_SB\n+    (\"sb\", Some(sym::aarch64_target_feature)),\n+    // FEAT_PAUTH\n+    // (\"pauth\", Some(sym::aarch64_target_feature)),\n+    // FEAT_DPB\n+    (\"dpb\", Some(sym::aarch64_target_feature)),\n+    // FEAT_DPB2\n+    (\"dpb2\", Some(sym::aarch64_target_feature)),\n+    // FEAT_SVE2\n+    (\"sve2\", Some(sym::aarch64_target_feature)),\n+    // FEAT_SVE2_AES\n+    (\"sve2-aes\", Some(sym::aarch64_target_feature)),\n+    // FEAT_SVE2_SM4\n+    (\"sve2-sm4\", Some(sym::aarch64_target_feature)),\n+    // FEAT_SVE2_SHA3\n+    (\"sve2-sha3\", Some(sym::aarch64_target_feature)),\n+    // FEAT_SVE2_BitPerm\n+    (\"sve2-bitperm\", Some(sym::aarch64_target_feature)),\n+    // FEAT_FRINTTS\n+    (\"frintts\", Some(sym::aarch64_target_feature)),\n+    // FEAT_I8MM\n+    // (\"i8mm\", Some(sym::aarch64_target_feature)),\n+    // FEAT_F32MM\n+    // (\"f32mm\", Some(sym::aarch64_target_feature)),\n+    // FEAT_F64MM\n+    // (\"f64mm\", Some(sym::aarch64_target_feature)),\n+    // FEAT_BF16\n+    // (\"bf16\", Some(sym::aarch64_target_feature)),\n+    // FEAT_RAND\n+    (\"rand\", Some(sym::aarch64_target_feature)),\n+    // FEAT_BTI\n+    (\"bti\", Some(sym::aarch64_target_feature)),\n+    // FEAT_MTE\n+    (\"mte\", Some(sym::aarch64_target_feature)),\n+    // FEAT_JSCVT\n+    (\"jsconv\", Some(sym::aarch64_target_feature)),\n+    // FEAT_FCMA\n+    (\"fcma\", Some(sym::aarch64_target_feature)),\n+    // FEAT_AES\n+    (\"aes\", Some(sym::aarch64_target_feature)),\n+    // FEAT_SHA1 & FEAT_SHA256\n+    (\"sha2\", Some(sym::aarch64_target_feature)),\n+    // FEAT_SHA512 & FEAT_SHA3\n+    (\"sha3\", Some(sym::aarch64_target_feature)),\n+    // FEAT_SM3 & FEAT_SM4\n+    (\"sm4\", Some(sym::aarch64_target_feature)),\n     (\"v8.1a\", Some(sym::aarch64_target_feature)),\n     (\"v8.2a\", Some(sym::aarch64_target_feature)),\n     (\"v8.3a\", Some(sym::aarch64_target_feature)),\n+    (\"v8.4a\", Some(sym::aarch64_target_feature)),\n+    (\"v8.5a\", Some(sym::aarch64_target_feature)),\n+    // (\"v8.6a\", Some(sym::aarch64_target_feature)),\n+    // (\"v8.7a\", Some(sym::aarch64_target_feature)),\n ];\n \n const X86_ALLOWED_FEATURES: &[(&str, Option<Symbol>)] = &["}, {"sha": "c7107b5d0a3ef2cc4daa1b97fd5a2f7ada96475b", "filename": "library/std/tests/run-time-detect.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8a57820bca64a252489790a57cb5ea23db6f9198/library%2Fstd%2Ftests%2Frun-time-detect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a57820bca64a252489790a57cb5ea23db6f9198/library%2Fstd%2Ftests%2Frun-time-detect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Ftests%2Frun-time-detect.rs?ref=8a57820bca64a252489790a57cb5ea23db6f9198", "patch": "@@ -27,7 +27,6 @@ fn aarch64_linux() {\n     println!(\"asimd: {}\", is_aarch64_feature_detected!(\"asimd\"));\n     println!(\"sve: {}\", is_aarch64_feature_detected!(\"sve\"));\n     println!(\"crc: {}\", is_aarch64_feature_detected!(\"crc\"));\n-    println!(\"crypto: {}\", is_aarch64_feature_detected!(\"crypto\"));\n     println!(\"lse: {}\", is_aarch64_feature_detected!(\"lse\"));\n     println!(\"rdm: {}\", is_aarch64_feature_detected!(\"rdm\"));\n     println!(\"rcpc: {}\", is_aarch64_feature_detected!(\"rcpc\"));"}]}