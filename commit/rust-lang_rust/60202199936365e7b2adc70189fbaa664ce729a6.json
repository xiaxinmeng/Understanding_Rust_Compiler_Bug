{"sha": "60202199936365e7b2adc70189fbaa664ce729a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwMjAyMTk5OTM2MzY1ZTdiMmFkYzcwMTg5ZmJhYTY2NGNlNzI5YTY=", "commit": {"author": {"name": "Otto Rask", "email": "ojrask@gmail.com", "date": "2018-08-30T09:20:41Z"}, "committer": {"name": "Otto Rask", "email": "ojrask@gmail.com", "date": "2018-08-30T09:20:41Z"}, "message": "Rephrase Arc documentation changes regarding clones\n\nMake it clearer that `Arc::clone()` in fact creates a whole new\nArc with the internal pointer pointing to the same location as\nthe source Arc.", "tree": {"sha": "ae25a721ad58d1b6c333c341195d5515ee8ee03c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae25a721ad58d1b6c333c341195d5515ee8ee03c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60202199936365e7b2adc70189fbaa664ce729a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60202199936365e7b2adc70189fbaa664ce729a6", "html_url": "https://github.com/rust-lang/rust/commit/60202199936365e7b2adc70189fbaa664ce729a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60202199936365e7b2adc70189fbaa664ce729a6/comments", "author": {"login": "rask", "id": 98275, "node_id": "MDQ6VXNlcjk4Mjc1", "avatar_url": "https://avatars.githubusercontent.com/u/98275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rask", "html_url": "https://github.com/rask", "followers_url": "https://api.github.com/users/rask/followers", "following_url": "https://api.github.com/users/rask/following{/other_user}", "gists_url": "https://api.github.com/users/rask/gists{/gist_id}", "starred_url": "https://api.github.com/users/rask/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rask/subscriptions", "organizations_url": "https://api.github.com/users/rask/orgs", "repos_url": "https://api.github.com/users/rask/repos", "events_url": "https://api.github.com/users/rask/events{/privacy}", "received_events_url": "https://api.github.com/users/rask/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rask", "id": 98275, "node_id": "MDQ6VXNlcjk4Mjc1", "avatar_url": "https://avatars.githubusercontent.com/u/98275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rask", "html_url": "https://github.com/rask", "followers_url": "https://api.github.com/users/rask/followers", "following_url": "https://api.github.com/users/rask/following{/other_user}", "gists_url": "https://api.github.com/users/rask/gists{/gist_id}", "starred_url": "https://api.github.com/users/rask/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rask/subscriptions", "organizations_url": "https://api.github.com/users/rask/orgs", "repos_url": "https://api.github.com/users/rask/repos", "events_url": "https://api.github.com/users/rask/events{/privacy}", "received_events_url": "https://api.github.com/users/rask/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5399616f1d98b4bcc1da87af15f75c95e3c2288b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5399616f1d98b4bcc1da87af15f75c95e3c2288b", "html_url": "https://github.com/rust-lang/rust/commit/5399616f1d98b4bcc1da87af15f75c95e3c2288b"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "72a4740b15660a5a4a686f31a3be6ad47b9824f6", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/60202199936365e7b2adc70189fbaa664ce729a6/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60202199936365e7b2adc70189fbaa664ce729a6/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=60202199936365e7b2adc70189fbaa664ce729a6", "patch": "@@ -49,8 +49,9 @@ const MAX_REFCOUNT: usize = (isize::MAX) as usize;\n ///\n /// The type `Arc<T>` provides shared ownership of a value of type `T`,\n /// allocated in the heap. Invoking [`clone`][clone] on `Arc` produces\n-/// a new pointer to the same `Arc` reference value in the heap. When the last\n-/// `Arc` pointer to a given value is destroyed, the pointed-to value is also\n+/// a new `Arc` instance, which points to the same value on the heap as the\n+/// source `Arc`, while increasing a reference count. When the last `Arc`\n+/// pointer to a given value is destroyed, the pointed-to value is also\n /// destroyed.\n ///\n /// Shared references in Rust disallow mutation by default, and `Arc` is no\n@@ -107,8 +108,7 @@ const MAX_REFCOUNT: usize = (isize::MAX) as usize;\n /// // The two syntaxes below are equivalent.\n /// let a = foo.clone();\n /// let b = Arc::clone(&foo);\n-/// // a and b both point to the same memory location where foo resides\n-/// // (not where the value wrapped by foo resides).\n+/// // a and b both point to the same memory location as foo\n /// ```\n ///\n /// The [`Arc::clone(&from)`] syntax is the most idiomatic because it conveys more explicitly"}]}