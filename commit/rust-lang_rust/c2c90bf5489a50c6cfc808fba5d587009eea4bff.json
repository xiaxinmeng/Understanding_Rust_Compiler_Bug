{"sha": "c2c90bf5489a50c6cfc808fba5d587009eea4bff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyYzkwYmY1NDg5YTUwYzZjZmM4MDhmYmE1ZDU4NzAwOWVlYTRiZmY=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-26T19:43:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-26T19:43:16Z"}, "message": "Rollup merge of #80900 - camelid:readpointerasbytes-ice, r=oli-obk\n\nFix ICE with `ReadPointerAsBytes` validation error\n\nFixes #79690.\n\nr? ``````@oli-obk``````", "tree": {"sha": "c8a9b9cab9051fd049264457d63980025002e1b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8a9b9cab9051fd049264457d63980025002e1b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2c90bf5489a50c6cfc808fba5d587009eea4bff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgEHDUCRBK7hj4Ov3rIwAAdHIIAIOlyeG1eVSCB4jiibV/aosu\n+/C6B8u4ExjG8e9uQpNXEvOkOVPxIUci6Be/B0udvIj4xBln480InseU83YwJHEf\nVaayokw/8bKKUAOF1g7LGe5gCJt/HXKhukaVDfmxWuMDCgfAmQmi2K8CDRjnV/ox\nEHOre22/ls/lxx0JMnGaKgXkxfnxSXLgMfhO2UwHT6b9C+vk74RWULdXgkuHbAxF\nb/3q3zNDLsiRKqYaNntHa2fA5eyUjQvVFOaYDx5W3BhaKel/xNrlxg7zAQ5j+axd\nPvNO8xH0J9dyIIV3FjgVloFYa0BuIK4wi7qDpLsfFnxbuaeTQtRnJ8+1yypEtjA=\n=yxOf\n-----END PGP SIGNATURE-----\n", "payload": "tree c8a9b9cab9051fd049264457d63980025002e1b5\nparent fe6b3a97921eb59502dfca13505e3ef68f5289bb\nparent 2be19932335f76cb4a97c275038a019751fbba6a\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1611690196 +0900\ncommitter GitHub <noreply@github.com> 1611690196 +0900\n\nRollup merge of #80900 - camelid:readpointerasbytes-ice, r=oli-obk\n\nFix ICE with `ReadPointerAsBytes` validation error\n\nFixes #79690.\n\nr? ``````@oli-obk``````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2c90bf5489a50c6cfc808fba5d587009eea4bff", "html_url": "https://github.com/rust-lang/rust/commit/c2c90bf5489a50c6cfc808fba5d587009eea4bff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2c90bf5489a50c6cfc808fba5d587009eea4bff/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe6b3a97921eb59502dfca13505e3ef68f5289bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe6b3a97921eb59502dfca13505e3ef68f5289bb", "html_url": "https://github.com/rust-lang/rust/commit/fe6b3a97921eb59502dfca13505e3ef68f5289bb"}, {"sha": "2be19932335f76cb4a97c275038a019751fbba6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2be19932335f76cb4a97c275038a019751fbba6a", "html_url": "https://github.com/rust-lang/rust/commit/2be19932335f76cb4a97c275038a019751fbba6a"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "0b7492631c41d7c8437c07db6e5a01d265b71ae1", "filename": "compiler/rustc_mir/src/interpret/validity.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c2c90bf5489a50c6cfc808fba5d587009eea4bff/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2c90bf5489a50c6cfc808fba5d587009eea4bff/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fvalidity.rs?ref=c2c90bf5489a50c6cfc808fba5d587009eea4bff", "patch": "@@ -515,7 +515,11 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValidityVisitor<'rt, 'mir, '\n                 Ok(true)\n             }\n             ty::Float(_) | ty::Int(_) | ty::Uint(_) => {\n-                let value = self.ecx.read_scalar(value)?;\n+                let value = try_validation!(\n+                    self.ecx.read_scalar(value),\n+                    self.path,\n+                    err_unsup!(ReadPointerAsBytes) => { \"read of part of a pointer\" },\n+                );\n                 // NOTE: Keep this in sync with the array optimization for int/float\n                 // types below!\n                 if self.ctfe_mode.is_some() {"}, {"sha": "a2e7b97b3187d8f6fe58900ff8f761f2edf3e351", "filename": "src/test/ui/consts/issue-79690.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c2c90bf5489a50c6cfc808fba5d587009eea4bff/src%2Ftest%2Fui%2Fconsts%2Fissue-79690.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2c90bf5489a50c6cfc808fba5d587009eea4bff/src%2Ftest%2Fui%2Fconsts%2Fissue-79690.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-79690.rs?ref=c2c90bf5489a50c6cfc808fba5d587009eea4bff", "patch": "@@ -0,0 +1,32 @@\n+// ignore-32bit\n+// This test gives a different error on 32-bit architectures.\n+\n+union Transmute<T: Copy, U: Copy> {\n+    t: T,\n+    u: U,\n+}\n+trait Bar {\n+    fn bar(&self) -> u32;\n+}\n+struct Foo {\n+    foo: u32,\n+    bar: bool,\n+}\n+impl Bar for Foo {\n+    fn bar(&self) -> u32 {\n+        self.foo\n+    }\n+}\n+#[derive(Copy, Clone)]\n+struct Fat<'a>(&'a Foo, &'static VTable);\n+struct VTable {\n+    size: Foo,\n+}\n+const FOO: &dyn Bar = &Foo {\n+    foo: 128,\n+    bar: false,\n+};\n+const G: Fat = unsafe { Transmute { t: FOO }.u };\n+//~^ ERROR it is undefined behavior to use this value\n+\n+fn main() {}"}, {"sha": "918dd4c20f96cbdab5c1106eebb21cbc1a12a119", "filename": "src/test/ui/consts/issue-79690.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c2c90bf5489a50c6cfc808fba5d587009eea4bff/src%2Ftest%2Fui%2Fconsts%2Fissue-79690.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c2c90bf5489a50c6cfc808fba5d587009eea4bff/src%2Ftest%2Fui%2Fconsts%2Fissue-79690.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-79690.stderr?ref=c2c90bf5489a50c6cfc808fba5d587009eea4bff", "patch": "@@ -0,0 +1,11 @@\n+error[E0080]: it is undefined behavior to use this value\n+  --> $DIR/issue-79690.rs:29:1\n+   |\n+LL | const G: Fat = unsafe { Transmute { t: FOO }.u };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered read of part of a pointer at .1.<deref>.size.foo\n+   |\n+   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0080`."}]}