{"sha": "160371550fbb7783200f6184109c02babf06efb3", "node_id": "C_kwDOAAsO6NoAKDE2MDM3MTU1MGZiYjc3ODMyMDBmNjE4NDEwOWMwMmJhYmYwNmVmYjM", "commit": {"author": {"name": "Icxolu", "email": "10486322+Icxolu@users.noreply.github.com", "date": "2023-05-03T19:05:50Z"}, "committer": {"name": "Icxolu", "email": "10486322+Icxolu@users.noreply.github.com", "date": "2023-05-03T19:05:50Z"}, "message": "add `rustfix` annotation", "tree": {"sha": "303a9d3756140569d6f0cd2f1a4d9fbf40256717", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/303a9d3756140569d6f0cd2f1a4d9fbf40256717"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/160371550fbb7783200f6184109c02babf06efb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/160371550fbb7783200f6184109c02babf06efb3", "html_url": "https://github.com/rust-lang/rust/commit/160371550fbb7783200f6184109c02babf06efb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/160371550fbb7783200f6184109c02babf06efb3/comments", "author": {"login": "Icxolu", "id": 10486322, "node_id": "MDQ6VXNlcjEwNDg2MzIy", "avatar_url": "https://avatars.githubusercontent.com/u/10486322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Icxolu", "html_url": "https://github.com/Icxolu", "followers_url": "https://api.github.com/users/Icxolu/followers", "following_url": "https://api.github.com/users/Icxolu/following{/other_user}", "gists_url": "https://api.github.com/users/Icxolu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Icxolu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Icxolu/subscriptions", "organizations_url": "https://api.github.com/users/Icxolu/orgs", "repos_url": "https://api.github.com/users/Icxolu/repos", "events_url": "https://api.github.com/users/Icxolu/events{/privacy}", "received_events_url": "https://api.github.com/users/Icxolu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Icxolu", "id": 10486322, "node_id": "MDQ6VXNlcjEwNDg2MzIy", "avatar_url": "https://avatars.githubusercontent.com/u/10486322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Icxolu", "html_url": "https://github.com/Icxolu", "followers_url": "https://api.github.com/users/Icxolu/followers", "following_url": "https://api.github.com/users/Icxolu/following{/other_user}", "gists_url": "https://api.github.com/users/Icxolu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Icxolu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Icxolu/subscriptions", "organizations_url": "https://api.github.com/users/Icxolu/orgs", "repos_url": "https://api.github.com/users/Icxolu/repos", "events_url": "https://api.github.com/users/Icxolu/events{/privacy}", "received_events_url": "https://api.github.com/users/Icxolu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ed7fd1ecc94eb82d99fe18192c156f367029731", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ed7fd1ecc94eb82d99fe18192c156f367029731", "html_url": "https://github.com/rust-lang/rust/commit/4ed7fd1ecc94eb82d99fe18192c156f367029731"}], "stats": {"total": 131, "additions": 126, "deletions": 5}, "files": [{"sha": "4c2d1ea48e1192284417b679e145ab4c3ba71423", "filename": "tests/ui/default_constructed_unit_structs.fixed", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/rust-lang/rust/blob/160371550fbb7783200f6184109c02babf06efb3/tests%2Fui%2Fdefault_constructed_unit_structs.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/160371550fbb7783200f6184109c02babf06efb3/tests%2Fui%2Fdefault_constructed_unit_structs.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_constructed_unit_structs.fixed?ref=160371550fbb7783200f6184109c02babf06efb3", "patch": "@@ -0,0 +1,119 @@\n+//@run-rustfix\n+\n+#![allow(unused)]\n+#![warn(clippy::default_constructed_unit_structs)]\n+use std::marker::PhantomData;\n+\n+#[derive(Default)]\n+struct UnitStruct;\n+\n+impl UnitStruct {\n+    fn new() -> Self {\n+        //should lint\n+        Self\n+    }\n+}\n+\n+#[derive(Default)]\n+struct TupleStruct(usize);\n+\n+impl TupleStruct {\n+    fn new() -> Self {\n+        // should not lint\n+        Self(Default::default())\n+    }\n+}\n+\n+// no lint for derived impl\n+#[derive(Default)]\n+struct NormalStruct {\n+    inner: PhantomData<usize>,\n+}\n+\n+struct NonDefaultStruct;\n+\n+impl NonDefaultStruct {\n+    fn default() -> Self {\n+        Self\n+    }\n+}\n+\n+#[derive(Default)]\n+enum SomeEnum {\n+    #[default]\n+    Unit,\n+    Tuple(UnitStruct),\n+    Struct {\n+        inner: usize,\n+    },\n+}\n+\n+impl NormalStruct {\n+    fn new() -> Self {\n+        // should lint\n+        Self {\n+            inner: PhantomData,\n+        }\n+    }\n+\n+    fn new2() -> Self {\n+        // should not lint\n+        Self {\n+            inner: Default::default(),\n+        }\n+    }\n+}\n+\n+#[derive(Default)]\n+struct GenericStruct<T> {\n+    t: T,\n+}\n+\n+impl<T: Default> GenericStruct<T> {\n+    fn new() -> Self {\n+        // should not lint\n+        Self { t: T::default() }\n+    }\n+\n+    fn new2() -> Self {\n+        // should not lint\n+        Self { t: Default::default() }\n+    }\n+}\n+\n+struct FakeDefault;\n+impl FakeDefault {\n+    fn default() -> Self {\n+        Self\n+    }\n+}\n+\n+impl Default for FakeDefault {\n+    fn default() -> Self {\n+        Self\n+    }\n+}\n+\n+#[derive(Default)]\n+struct EmptyStruct {}\n+\n+#[derive(Default)]\n+#[non_exhaustive]\n+struct NonExhaustiveStruct;\n+\n+fn main() {\n+    // should lint\n+    let _ = PhantomData::<usize>;\n+    let _: PhantomData<i32> = PhantomData;\n+    let _ = UnitStruct;\n+\n+    // should not lint\n+    let _ = TupleStruct::default();\n+    let _ = NormalStruct::default();\n+    let _ = NonExhaustiveStruct::default();\n+    let _ = SomeEnum::default();\n+    let _ = NonDefaultStruct::default();\n+    let _ = EmptyStruct::default();\n+    let _ = FakeDefault::default();\n+    let _ = <FakeDefault as Default>::default();\n+}"}, {"sha": "850793dd5de81a32e4494474240adfc02d90ac05", "filename": "tests/ui/default_constructed_unit_structs.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/160371550fbb7783200f6184109c02babf06efb3/tests%2Fui%2Fdefault_constructed_unit_structs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/160371550fbb7783200f6184109c02babf06efb3/tests%2Fui%2Fdefault_constructed_unit_structs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_constructed_unit_structs.rs?ref=160371550fbb7783200f6184109c02babf06efb3", "patch": "@@ -1,3 +1,5 @@\n+//@run-rustfix\n+\n #![allow(unused)]\n #![warn(clippy::default_constructed_unit_structs)]\n use std::marker::PhantomData;"}, {"sha": "4058943d08727eae7a8aa072c234b39396e1c49a", "filename": "tests/ui/default_constructed_unit_structs.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/160371550fbb7783200f6184109c02babf06efb3/tests%2Fui%2Fdefault_constructed_unit_structs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/160371550fbb7783200f6184109c02babf06efb3/tests%2Fui%2Fdefault_constructed_unit_structs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_constructed_unit_structs.stderr?ref=160371550fbb7783200f6184109c02babf06efb3", "patch": "@@ -1,31 +1,31 @@\n error: use of `default` to create a unit struct\n-  --> $DIR/default_constructed_unit_structs.rs:11:13\n+  --> $DIR/default_constructed_unit_structs.rs:13:13\n    |\n LL |         Self::default()\n    |             ^^^^^^^^^^^ help: remove this call to `default`\n    |\n    = note: `-D clippy::default-constructed-unit-structs` implied by `-D warnings`\n \n error: use of `default` to create a unit struct\n-  --> $DIR/default_constructed_unit_structs.rs:53:31\n+  --> $DIR/default_constructed_unit_structs.rs:55:31\n    |\n LL |             inner: PhantomData::default(),\n    |                               ^^^^^^^^^^^ help: remove this call to `default`\n \n error: use of `default` to create a unit struct\n-  --> $DIR/default_constructed_unit_structs.rs:104:33\n+  --> $DIR/default_constructed_unit_structs.rs:106:33\n    |\n LL |     let _ = PhantomData::<usize>::default();\n    |                                 ^^^^^^^^^^^ help: remove this call to `default`\n \n error: use of `default` to create a unit struct\n-  --> $DIR/default_constructed_unit_structs.rs:105:42\n+  --> $DIR/default_constructed_unit_structs.rs:107:42\n    |\n LL |     let _: PhantomData<i32> = PhantomData::default();\n    |                                          ^^^^^^^^^^^ help: remove this call to `default`\n \n error: use of `default` to create a unit struct\n-  --> $DIR/default_constructed_unit_structs.rs:106:23\n+  --> $DIR/default_constructed_unit_structs.rs:108:23\n    |\n LL |     let _ = UnitStruct::default();\n    |                       ^^^^^^^^^^^ help: remove this call to `default`"}]}