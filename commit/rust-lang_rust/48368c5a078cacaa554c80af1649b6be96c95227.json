{"sha": "48368c5a078cacaa554c80af1649b6be96c95227", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MzY4YzVhMDc4Y2FjYWE1NTRjODBhZjE2NDliNmJlOTZjOTUyMjc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-27T22:03:30Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-27T23:45:54Z"}, "message": "test: Add test for two restricted keyword cases", "tree": {"sha": "a19bbc592d96ea6c9413df19844d7ffbb91697f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a19bbc592d96ea6c9413df19844d7ffbb91697f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48368c5a078cacaa554c80af1649b6be96c95227", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48368c5a078cacaa554c80af1649b6be96c95227", "html_url": "https://github.com/rust-lang/rust/commit/48368c5a078cacaa554c80af1649b6be96c95227", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48368c5a078cacaa554c80af1649b6be96c95227/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bde5a842ce286508e503694b2cac0251600e25be", "url": "https://api.github.com/repos/rust-lang/rust/commits/bde5a842ce286508e503694b2cac0251600e25be", "html_url": "https://github.com/rust-lang/rust/commit/bde5a842ce286508e503694b2cac0251600e25be"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "7e9a386045440470b28d6d87183f23dbe462dbd7", "filename": "src/librustsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48368c5a078cacaa554c80af1649b6be96c95227/src%2Flibrustsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48368c5a078cacaa554c80af1649b6be96c95227/src%2Flibrustsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fparse%2Fparser.rs?ref=48368c5a078cacaa554c80af1649b6be96c95227", "patch": "@@ -1395,7 +1395,7 @@ fn parse_pat(p: parser) -> @ast::pat {\n                 subpat = parse_pat(p);\n             } else {\n                 if is_restricted_keyword(p, fieldname) {\n-                    p.fatal(\"found \" + fieldname + \" in binding position\");\n+                    p.fatal(\"found `\" + fieldname + \"` in binding position\");\n                 }\n                 subpat = @{id: p.get_id(),\n                            node: ast::pat_ident(fieldpath, none),\n@@ -2149,7 +2149,7 @@ fn parse_item_enum(p: parser, attrs: [ast::attribute]) -> @ast::item {\n     // Newtype syntax\n     if p.token == token::EQ {\n         if is_restricted_keyword(p, id) {\n-            p.fatal(\"found \" + id + \" in enum constructor position\");\n+            p.fatal(\"found `\" + id + \"` in enum constructor position\");\n         }\n         p.bump();\n         let ty = parse_ty(p, false);"}, {"sha": "238e2404c9e046cd7d451e9792bfc9ced44631ad", "filename": "src/test/compile-fail/restricted-keyword1.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/48368c5a078cacaa554c80af1649b6be96c95227/src%2Ftest%2Fcompile-fail%2Frestricted-keyword1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48368c5a078cacaa554c80af1649b6be96c95227/src%2Ftest%2Fcompile-fail%2Frestricted-keyword1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frestricted-keyword1.rs?ref=48368c5a078cacaa554c80af1649b6be96c95227", "patch": "@@ -0,0 +1,7 @@\n+// error-pattern:found `let` in binding position\n+\n+fn main() {\n+    alt true {\n+      {let} { }\n+    }\n+}"}, {"sha": "30f755c6016c09c52d74136b66d152b6622cadd3", "filename": "src/test/compile-fail/restricted-keyword2.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/48368c5a078cacaa554c80af1649b6be96c95227/src%2Ftest%2Fcompile-fail%2Frestricted-keyword2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48368c5a078cacaa554c80af1649b6be96c95227/src%2Ftest%2Fcompile-fail%2Frestricted-keyword2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frestricted-keyword2.rs?ref=48368c5a078cacaa554c80af1649b6be96c95227", "patch": "@@ -0,0 +1,5 @@\n+// error-pattern:found `let` in enum constructor position\n+\n+fn main() {\n+    enum let = int;\n+}"}]}