{"sha": "ddd19866a739deb7cf798218d3b5b52a77b04a7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkZDE5ODY2YTczOWRlYjdjZjc5ODIxOGQzYjViNTJhNzdiMDRhN2E=", "commit": {"author": {"name": "Ivan Tham", "email": "pickfire@riseup.net", "date": "2020-10-02T06:44:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-02T06:44:01Z"}, "message": "Clean up on example doc fixes for ptr::copy\n\nFollow up of #77385", "tree": {"sha": "05188da18f4d8768ceccf599a9488d73faac5305", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05188da18f4d8768ceccf599a9488d73faac5305"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddd19866a739deb7cf798218d3b5b52a77b04a7a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfdswxCRBK7hj4Ov3rIwAAdHIIACArv32UQ84Cy7Ja3VFOBiaX\n40xsBe32zOL8K4RowlGd1BAzcyVMfDsv/ww49sEpjqURO3XcBuQtKnEWtN+D1gGl\nhN06Ae1lxPa0DUis/657i3rKc+aV6NyjAJtWTgDYFXrDTYqy9dL3/lXPXEF/bNuZ\n7o33fKB6YWyBEsjhZTdPIWiV8F/rNuHcFlQ0DXG3baqivo7bo7PHwaSLz1s4mnkN\nt5yYlxs1RsKLgNs3cjSFJ4ofdXbPhk/Da/9yIHEVF6n+Bs5i0nleplthEzTckEco\njqORpjsauHlOhBvFz1ZZwGQsYNJ2udxoZRSqRfUvpUJVW1Me/8KuQEUwRuquoeQ=\n=x19s\n-----END PGP SIGNATURE-----\n", "payload": "tree 05188da18f4d8768ceccf599a9488d73faac5305\nparent f283d3f02cf3ed261a519afe05cde9e23d1d9278\nauthor Ivan Tham <pickfire@riseup.net> 1601621041 +0800\ncommitter GitHub <noreply@github.com> 1601621041 +0800\n\nClean up on example doc fixes for ptr::copy\n\nFollow up of #77385"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddd19866a739deb7cf798218d3b5b52a77b04a7a", "html_url": "https://github.com/rust-lang/rust/commit/ddd19866a739deb7cf798218d3b5b52a77b04a7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddd19866a739deb7cf798218d3b5b52a77b04a7a/comments", "author": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f283d3f02cf3ed261a519afe05cde9e23d1d9278", "url": "https://api.github.com/repos/rust-lang/rust/commits/f283d3f02cf3ed261a519afe05cde9e23d1d9278", "html_url": "https://github.com/rust-lang/rust/commit/f283d3f02cf3ed261a519afe05cde9e23d1d9278"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "426cdb12ec4e40118c91c7749c03d8a84dd8bb1e", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ddd19866a739deb7cf798218d3b5b52a77b04a7a/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddd19866a739deb7cf798218d3b5b52a77b04a7a/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=ddd19866a739deb7cf798218d3b5b52a77b04a7a", "patch": "@@ -1901,9 +1901,10 @@ pub unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {\n /// ```\n /// use std::ptr;\n ///\n-/// /// # Safety:\n+/// /// # Safety\n+/// ///\n /// /// * `ptr` must be correctly aligned for its type and non-zero.\n-/// /// * `ptr` must be valid for reads of `elts` contiguous objects of type `T`.\n+/// /// * `ptr` must be valid for reads of `elts` contiguous elements of type `T`.\n /// /// * Those elements must not be used after calling this function unless `T: Copy`.\n /// # #[allow(dead_code)]\n /// unsafe fn from_buf_raw<T>(ptr: *const T, elts: usize) -> Vec<T> {"}]}