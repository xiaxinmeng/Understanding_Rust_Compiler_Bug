{"sha": "41c562d4a578637306dca2d9a7889d8f5bb4a58e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxYzU2MmQ0YTU3ODYzNzMwNmRjYTJkOWE3ODg5ZDhmNWJiNGE1OGU=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2020-12-10T10:34:22Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2020-12-12T14:10:01Z"}, "message": "Improve variable naming", "tree": {"sha": "9f37aebd58fe3993be73fda8c1d81fc53dd58b2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f37aebd58fe3993be73fda8c1d81fc53dd58b2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41c562d4a578637306dca2d9a7889d8f5bb4a58e", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEb0jkZw3AJLMiOp9wGI/nM3KGUrEFAl/UzzkACgkQGI/nM3KG\nUrH44xAAoa16/wiq7KWonGLU4p9en/W5xIReBAioo2lJRkgewVBgYg5kQrDPQ78i\nRaLdXCOi/nMVpfBH7ZzYOiDSxjkGkY01via4+s3WrSlWZC5NtC0dmXJLWubAmcv3\n/Z+ao21YQrWy8ua36oF8UoTY79IxaNRZwqMGnaOz1DVpnsHNctYNJEa+kl9aU6Td\njo8NAarFcnzZvAj4dVAowJRIx0l8+g+Zh7Ni9bxlfgk+ds4qBln2nfKvEC4tndQO\nkuuYlph3zBMuSir+vDB8DIDI6qVMF5Ihb6JGrhQHHMFKYeLJUUb/8csHo+qPVFbg\n+qSygbmh4FfbU7q29gbQ/R1cMSsE8RCeqnFEE1fxe2Zwf7hF0NDtB0PhKyc6m2zd\nierwntw5/wGr44jr1SfuwRhmgczkigiBDs+q//fLBBiwk8x1wGO9iKYHcCk2yLmp\nnunnvfQkJ+/itr/nYoSPCdtOyc1R02CVV6WywSuSMLKMO2Y0FGF/JayY34+pbBri\nw8tVt0w3NJl/UTUvWyv9EshC5sQgTzrG7BLrfw7aOPfQbRVAYM8bnQbXXvxJEhON\nOjqHMda7UlTQO4oJo/PiJRUxcAUrrmwmiKoRt50z0MO/8yKXAbRnme/u1RKzQsGj\nGoni0VZNnqoZvmVUb4vo8ahDMR0/0njfQnyCXgrOxqQtarKgUHE=\n=UnxY\n-----END PGP SIGNATURE-----", "payload": "tree 9f37aebd58fe3993be73fda8c1d81fc53dd58b2d\nparent 4bd9ed9b88d47bba3dc91fde6c0a27b63f63fe4b\nauthor Philipp Hansch <dev@phansch.net> 1607596462 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1607782201 +0100\n\nImprove variable naming\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41c562d4a578637306dca2d9a7889d8f5bb4a58e", "html_url": "https://github.com/rust-lang/rust/commit/41c562d4a578637306dca2d9a7889d8f5bb4a58e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41c562d4a578637306dca2d9a7889d8f5bb4a58e/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bd9ed9b88d47bba3dc91fde6c0a27b63f63fe4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bd9ed9b88d47bba3dc91fde6c0a27b63f63fe4b", "html_url": "https://github.com/rust-lang/rust/commit/4bd9ed9b88d47bba3dc91fde6c0a27b63f63fe4b"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "6a1fa61b12d6b33860c978b7056fb8bd651b1c7c", "filename": "clippy_dev/src/bless.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/41c562d4a578637306dca2d9a7889d8f5bb4a58e/clippy_dev%2Fsrc%2Fbless.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c562d4a578637306dca2d9a7889d8f5bb4a58e/clippy_dev%2Fsrc%2Fbless.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fbless.rs?ref=41c562d4a578637306dca2d9a7889d8f5bb4a58e", "patch": "@@ -1,4 +1,4 @@\n-//! `bless` updates the 'expected output' files in the repo with changed output files\n+//! `bless` updates the reference files in the repo with changed output files\n //! from the last test run.\n \n use std::env;\n@@ -28,35 +28,35 @@ pub fn bless() {\n             .filter_map(Result::ok)\n             .filter(|f| f.path().extension() == Some(OsStr::new(\"rs\")))\n             .for_each(|f| {\n-                update_test_file(f.path().with_extension(\"stdout\"));\n-                update_test_file(f.path().with_extension(\"stderr\"));\n-                update_test_file(f.path().with_extension(\"fixed\"));\n+                update_reference_file(f.path().with_extension(\"stdout\"));\n+                update_reference_file(f.path().with_extension(\"stderr\"));\n+                update_reference_file(f.path().with_extension(\"fixed\"));\n             });\n     }\n }\n \n-fn update_test_file(test_file_path: PathBuf) {\n-    let build_output_path = build_dir().join(PathBuf::from(test_file_path.file_name().unwrap()));\n-    let relative_test_file_path = test_file_path.strip_prefix(clippy_project_root()).unwrap();\n+fn update_reference_file(reference_file_path: PathBuf) {\n+    let test_output_path = build_dir().join(PathBuf::from(reference_file_path.file_name().unwrap()));\n+    let relative_reference_file_path = reference_file_path.strip_prefix(clippy_project_root()).unwrap();\n \n     // If compiletest did not write any changes during the test run,\n     // we don't have to update anything\n-    if !build_output_path.exists() {\n+    if !test_output_path.exists() {\n         return;\n     }\n \n-    let build_output = fs::read(&build_output_path).expect(\"Unable to read build output file\");\n-    let test_file = fs::read(&test_file_path).expect(\"Unable to read test file\");\n+    let test_output_file = fs::read(&test_output_path).expect(\"Unable to read test output file\");\n+    let reference_file = fs::read(&reference_file_path).expect(\"Unable to read reference file\");\n \n-    if build_output != test_file {\n-        // If a test run caused an output file to change, update the test file\n-        println!(\"updating {}\", &relative_test_file_path.display());\n-        fs::copy(build_output_path, &test_file_path).expect(\"Could not update test file\");\n+    if test_output_file != reference_file {\n+        // If a test run caused an output file to change, update the reference file\n+        println!(\"updating {}\", &relative_reference_file_path.display());\n+        fs::copy(test_output_path, &reference_file_path).expect(\"Could not update reference file\");\n \n-        if test_file.is_empty() {\n-            // If we copied over an empty output file, we remove it\n-            println!(\"removing {}\", &relative_test_file_path.display());\n-            fs::remove_file(test_file_path).expect(\"Could not remove test file\");\n+        if reference_file.is_empty() {\n+            // If we copied over an empty output file, we remove the now empty reference file\n+            println!(\"removing {}\", &relative_reference_file_path.display());\n+            fs::remove_file(reference_file_path).expect(\"Could not remove reference file\");\n         }\n     }\n }"}]}