{"sha": "fb5475887f8f3641aea994e1f8f8954d1290449a", "node_id": "C_kwDOAAsO6NoAKGZiNTQ3NTg4N2Y4ZjM2NDFhZWE5OTRlMWY4Zjg5NTRkMTI5MDQ0OWE", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-10-19T19:49:21Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-10-19T19:49:39Z"}, "message": "Extract orig_opt_local_def_id as a function", "tree": {"sha": "8de7c62e8c2ccdd2b5bfc14ebae87b5580f86d0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8de7c62e8c2ccdd2b5bfc14ebae87b5580f86d0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb5475887f8f3641aea994e1f8f8954d1290449a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmNQVNMACgkQgTGiTgx5\n7694YQ/+Om7jBhnSHgkaZ2yhzGFz49e3NoDOZGj3AMwTHpt9P893PcKpRtENEVg4\nqWAGE2NdmWnAqJBzZvhdTigswgYFLkbHGSM2vUE7qXCJ0Gre8kBrbz64yI73IUMS\n94++cjj2uqkLqbgx94yxJKo2VJf3dN0BjcSsiQERI7RV2d15gDSzidzzH378QoCp\nqb0BOkneLAEunRDGUYxult2AR9Xn894c0XTtEvMEUqOS62jYtJt1zDECHlIAh9WS\n/CpJhqPR5OKYfyhHIE2q1FVWuu7YfqJmk9jvZRclGIlLbQN/VIRWPUbDVhyeuL7S\nH3C9D5giXZUoqRFvVHgM87ZK62vTv3o8iEvJYcoWTX4ECjznF7WFJ8tjpyMBxzR1\nMWF/pEKZYbH9FAAJ17/Uiip1B4HvFR5BUNTYB/04qx4eYXgibKDyTeplC9m0/3v7\nOfhZcXJC3mDvym6xzmu8psllpbHeLLP+5uWGkQyB0eotypEQUlpKyWXd/oik6p7G\nAulmQhlEC9eSvfNQgugsa0MGxPhBjJ2iZzDvHzv8U5j4CkH9XoTIu6HkTnp2Ojx3\nxD8p0wsZb38ufgS8z7c4Mm+9dD31Eo5P6eayVmq4bk7//ET+geHjOXZxJgUHSDW5\nKzez3RueURdk8ji5xuEzSVoCucZJzhr9lnmHDcu8YQv+2kshgoc=\n=je/l\n-----END PGP SIGNATURE-----", "payload": "tree 8de7c62e8c2ccdd2b5bfc14ebae87b5580f86d0c\nparent 4b8f4319954ff2642690b9e5cbe4af352d095bf6\nauthor Santiago Pastorino <spastorino@gmail.com> 1666208961 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1666208979 -0300\n\nExtract orig_opt_local_def_id as a function\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb5475887f8f3641aea994e1f8f8954d1290449a", "html_url": "https://github.com/rust-lang/rust/commit/fb5475887f8f3641aea994e1f8f8954d1290449a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb5475887f8f3641aea994e1f8f8954d1290449a/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b8f4319954ff2642690b9e5cbe4af352d095bf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b8f4319954ff2642690b9e5cbe4af352d095bf6", "html_url": "https://github.com/rust-lang/rust/commit/4b8f4319954ff2642690b9e5cbe4af352d095bf6"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "ea213385dc6b582a57a8c17d5acad1ca7c55b60d", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fb5475887f8f3641aea994e1f8f8954d1290449a/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb5475887f8f3641aea994e1f8f8954d1290449a/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=fb5475887f8f3641aea994e1f8f8954d1290449a", "patch": "@@ -506,6 +506,17 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         start\n     }\n \n+    /// Given the id of some node in the AST, finds the `LocalDefId` associated with it by the name\n+    /// resolver (if any).\n+    fn orig_opt_local_def_id(&self, node: NodeId) -> Option<LocalDefId> {\n+        self.resolver.node_id_to_def_id.get(&node).map(|local_def_id| *local_def_id)\n+    }\n+\n+    fn orig_local_def_id(&self, node: NodeId) -> LocalDefId {\n+        self.orig_opt_local_def_id(node)\n+            .unwrap_or_else(|| panic!(\"no entry for node id: `{:?}`\", node))\n+    }\n+\n     /// Given the id of some node in the AST, finds the `LocalDefId` associated with it by the name\n     /// resolver (if any), after applying any remapping from `get_remapped_def_id`.\n     ///\n@@ -520,10 +531,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n     /// we would create an opaque type `type FooReturn<'a1> = impl Debug + 'a1`.\n     /// When lowering the `Debug + 'a` bounds, we add a remapping to map `'a` to `'a1`.\n     fn opt_local_def_id(&self, node: NodeId) -> Option<LocalDefId> {\n-        self.resolver\n-            .node_id_to_def_id\n-            .get(&node)\n-            .map(|local_def_id| self.get_remapped_def_id(*local_def_id))\n+        self.orig_opt_local_def_id(node).map(|local_def_id| self.get_remapped_def_id(local_def_id))\n     }\n \n     fn local_def_id(&self, node: NodeId) -> LocalDefId {"}]}