{"sha": "87faaec7a30cab721aa03ad2e6301c9cd91f5847", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZmFhZWM3YTMwY2FiNzIxYWEwM2FkMmU2MzAxYzljZDkxZjU4NDc=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-04-26T13:49:53Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-05-09T11:07:43Z"}, "message": "add needless_borrow lint", "tree": {"sha": "a8a9286e10900e9dc070b4f0a30cc98d8b55a037", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8a9286e10900e9dc070b4f0a30cc98d8b55a037"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87faaec7a30cab721aa03ad2e6301c9cd91f5847", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXMG9/AAoJEFbW7qD8Z6xGlX4QAIKL4XzIXhJjwlqhPf+9V7Su\ntV2vfT3fofrO2fmONZcWrs+mUyKU6iDXsbuN8AX+OiANmXqFcCVZf3Xxlu3SaGCV\n/4AvY482awJL70lH5QDyOrjzd4BmtGyChfaqboqB1PVy1QJhHDX+ngLNgIjpqcKV\nsKhEUiOpvOfaZaOzc2NKcB29DjyWEpI2UKeFDLHVZrbIQ/DXQVo+iJjnw+ionPGU\nj6lVuMsF2zaLi8US8E6xFGvbcYACurB4hK1t0/sdTp6xLBZxkCBsGrV4LYMA5XHw\nzc7lqGmPPVQvZ9/zW6t4oQOxUCpw4qcNj67m4Vmyi0j95hdXiJSJilcTzbBbQ+wD\n9b/dY/fxxG3y+axHJnrr9UWLWb0kCeSEwcAVoqEkndiHZKDj1/fP4pEnsh/fN9Dq\nySzAuaw5z7fkTb673C1N6PuI4A5Tb65HDdEvfcFUlLde8c7lh8iDGEnfkXFfrSs6\nf+frH+gRRxE346sgJnuXHQGOTyjDGpPsi687KWilGXaSJ9EGGYoJvV6AhJgVj0JW\nhTHJt7e4hRzT0nLzmeX7r79GFiYjEVzhJyv5vYUVN0PmAeViC8Z4kMmTZXG1a1K3\nknqBuidK+p1SFN4vpURti4sV4DhSqfWJfmJ5zAbN+d/FMcjtN/XVeycNipkzu2n0\n4OCSPL1ja5dbX53Ix5Pz\n=BV3l\n-----END PGP SIGNATURE-----", "payload": "tree a8a9286e10900e9dc070b4f0a30cc98d8b55a037\nparent d70e7bb5fc96f56e7ef14bdfeeb3176a4bbffc7f\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1461678593 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1462792063 +0200\n\nadd needless_borrow lint\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87faaec7a30cab721aa03ad2e6301c9cd91f5847", "html_url": "https://github.com/rust-lang/rust/commit/87faaec7a30cab721aa03ad2e6301c9cd91f5847", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87faaec7a30cab721aa03ad2e6301c9cd91f5847/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d70e7bb5fc96f56e7ef14bdfeeb3176a4bbffc7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d70e7bb5fc96f56e7ef14bdfeeb3176a4bbffc7f", "html_url": "https://github.com/rust-lang/rust/commit/d70e7bb5fc96f56e7ef14bdfeeb3176a4bbffc7f"}], "stats": {"total": 85, "additions": 84, "deletions": 1}, "files": [{"sha": "3fb3c6869485f35b6f794ba823dbfdb5193f5d0c", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/87faaec7a30cab721aa03ad2e6301c9cd91f5847/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/87faaec7a30cab721aa03ad2e6301c9cd91f5847/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=87faaec7a30cab721aa03ad2e6301c9cd91f5847", "patch": "@@ -149,6 +149,7 @@ All notable changes to this project will be documented in this file.\n [`mutex_atomic`]: https://github.com/Manishearth/rust-clippy/wiki#mutex_atomic\n [`mutex_integer`]: https://github.com/Manishearth/rust-clippy/wiki#mutex_integer\n [`needless_bool`]: https://github.com/Manishearth/rust-clippy/wiki#needless_bool\n+[`needless_borrow`]: https://github.com/Manishearth/rust-clippy/wiki#needless_borrow\n [`needless_lifetimes`]: https://github.com/Manishearth/rust-clippy/wiki#needless_lifetimes\n [`needless_range_loop`]: https://github.com/Manishearth/rust-clippy/wiki#needless_range_loop\n [`needless_return`]: https://github.com/Manishearth/rust-clippy/wiki#needless_return"}, {"sha": "8f3519c95c43fb7e2045831fa3484f792e5631f3", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/87faaec7a30cab721aa03ad2e6301c9cd91f5847/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/87faaec7a30cab721aa03ad2e6301c9cd91f5847/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=87faaec7a30cab721aa03ad2e6301c9cd91f5847", "patch": "@@ -17,7 +17,7 @@ Table of contents:\n \n ## Lints\n \n-There are 146 lints included in this crate:\n+There are 147 lints included in this crate:\n \n name                                                                                                                 | default | meaning\n ---------------------------------------------------------------------------------------------------------------------|---------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n@@ -97,6 +97,7 @@ name\n [mutex_atomic](https://github.com/Manishearth/rust-clippy/wiki#mutex_atomic)                                         | warn    | using a Mutex where an atomic value could be used instead\n [mutex_integer](https://github.com/Manishearth/rust-clippy/wiki#mutex_integer)                                       | allow   | using a Mutex for an integer type\n [needless_bool](https://github.com/Manishearth/rust-clippy/wiki#needless_bool)                                       | warn    | if-statements with plain booleans in the then- and else-clause, e.g. `if p { true } else { false }`\n+[needless_borrow](https://github.com/Manishearth/rust-clippy/wiki#needless_borrow)                                   | warn    | taking a reference that is going to be automatically dereferenced\n [needless_lifetimes](https://github.com/Manishearth/rust-clippy/wiki#needless_lifetimes)                             | warn    | using explicit lifetimes for references in function arguments when elision rules would allow omitting them\n [needless_range_loop](https://github.com/Manishearth/rust-clippy/wiki#needless_range_loop)                           | warn    | for-looping over a range of indices where an iterator over items would do\n [needless_return](https://github.com/Manishearth/rust-clippy/wiki#needless_return)                                   | warn    | using a return statement like `return expr;` where an expression would suffice"}, {"sha": "dc0efe815b2f2970c2a1da1d222afc19574ef9e8", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/87faaec7a30cab721aa03ad2e6301c9cd91f5847/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87faaec7a30cab721aa03ad2e6301c9cd91f5847/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=87faaec7a30cab721aa03ad2e6301c9cd91f5847", "patch": "@@ -96,6 +96,7 @@ pub mod mut_mut;\n pub mod mut_reference;\n pub mod mutex_atomic;\n pub mod needless_bool;\n+pub mod needless_borrow;\n pub mod needless_update;\n pub mod neg_multiply;\n pub mod new_without_default;\n@@ -210,6 +211,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n     reg.register_late_lint_pass(box zero_div_zero::ZeroDivZeroPass);\n     reg.register_late_lint_pass(box mutex_atomic::MutexAtomic);\n     reg.register_late_lint_pass(box needless_update::NeedlessUpdatePass);\n+    reg.register_late_lint_pass(box needless_borrow::NeedlessBorrow);\n     reg.register_late_lint_pass(box no_effect::NoEffectPass);\n     reg.register_late_lint_pass(box map_clone::MapClonePass);\n     reg.register_late_lint_pass(box temporary_assignment::TemporaryAssignmentPass);\n@@ -364,6 +366,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n         mutex_atomic::MUTEX_ATOMIC,\n         needless_bool::BOOL_COMPARISON,\n         needless_bool::NEEDLESS_BOOL,\n+        needless_borrow::NEEDLESS_BORROW,\n         needless_update::NEEDLESS_UPDATE,\n         neg_multiply::NEG_MULTIPLY,\n         new_without_default::NEW_WITHOUT_DEFAULT,"}, {"sha": "294a12dad99779606a1c98c54b62a58f2f810a5d", "filename": "src/needless_borrow.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/87faaec7a30cab721aa03ad2e6301c9cd91f5847/src%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87faaec7a30cab721aa03ad2e6301c9cd91f5847/src%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fneedless_borrow.rs?ref=87faaec7a30cab721aa03ad2e6301c9cd91f5847", "patch": "@@ -0,0 +1,50 @@\n+//! Checks for needless address of operations (`&`)\n+//!\n+//! This lint is **warn** by default\n+\n+use rustc::lint::*;\n+use rustc::hir::*;\n+use rustc::ty::TyRef;\n+use utils::{span_lint, in_macro};\n+\n+/// **What it does:** This lint checks for address of operations (`&`) that are going to be dereferenced immediately by the compiler\n+///\n+/// **Why is this bad?** Suggests that the receiver of the expression borrows the expression\n+///\n+/// **Known problems:**\n+///\n+/// **Example:** `let x: &i32 = &&&&&&5;`\n+declare_lint! {\n+    pub NEEDLESS_BORROW,\n+    Warn,\n+    \"taking a reference that is going to be automatically dereferenced\"\n+}\n+\n+#[derive(Copy,Clone)]\n+pub struct NeedlessBorrow;\n+\n+impl LintPass for NeedlessBorrow {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(NEEDLESS_BORROW)\n+    }\n+}\n+\n+impl LateLintPass for NeedlessBorrow {\n+    fn check_expr(&mut self, cx: &LateContext, e: &Expr) {\n+        if in_macro(cx, e.span) {\n+            return;\n+        }\n+        if let ExprAddrOf(MutImmutable, ref inner) = e.node {\n+            if let TyRef(..) = cx.tcx.expr_ty(inner).sty {\n+                let ty = cx.tcx.expr_ty(e);\n+                let adj_ty = cx.tcx.expr_ty_adjusted(e);\n+                if ty != adj_ty {\n+                    span_lint(cx,\n+                              NEEDLESS_BORROW,\n+                              e.span,\n+                              \"this expression borrows a reference that is immediately dereferenced by the compiler\");\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "c932f8f9a0fe06992e2b76e704520ab16f7a70bb", "filename": "tests/compile-fail/eta.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/87faaec7a30cab721aa03ad2e6301c9cd91f5847/tests%2Fcompile-fail%2Feta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87faaec7a30cab721aa03ad2e6301c9cd91f5847/tests%2Fcompile-fail%2Feta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Feta.rs?ref=87faaec7a30cab721aa03ad2e6301c9cd91f5847", "patch": "@@ -18,6 +18,7 @@ fn main() {\n     //~| SUGGESTION let c = Some(1u8).map({1+2; foo});\n     let d = Some(1u8).map(|a| foo((|b| foo2(b))(a))); //is adjusted?\n     all(&[1, 2, 3], &&2, |x, y| below(x, y)); //is adjusted\n+    //~^ WARN needless_borrow\n     unsafe {\n         Some(1u8).map(|a| unsafe_fn(a)); // unsafe fn\n     }"}, {"sha": "242691aa268a7af5b2bbb65bad48b7c14183374d", "filename": "tests/compile-fail/needless_borrow.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/87faaec7a30cab721aa03ad2e6301c9cd91f5847/tests%2Fcompile-fail%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87faaec7a30cab721aa03ad2e6301c9cd91f5847/tests%2Fcompile-fail%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fneedless_borrow.rs?ref=87faaec7a30cab721aa03ad2e6301c9cd91f5847", "patch": "@@ -0,0 +1,27 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+\n+fn x(y: &i32) -> i32 {\n+    *y\n+}\n+\n+#[deny(clippy)]\n+#[allow(unused_variables)]\n+fn main() {\n+    let a = 5;\n+    let b = x(&a);\n+    let c = x(&&a); //~ ERROR: needless_borrow\n+    let s = &String::from(\"hi\");\n+    let s_ident = f(&s); // should not error, because `&String` implements Copy, but `String` does not\n+    let g_val = g(&Vec::new()); // should not error, because `&Vec<T>` derefs to `&[T]`\n+    let vec = Vec::new();\n+    let vec_val = g(&vec); // should not error, because `&Vec<T>` derefs to `&[T]`\n+}\n+\n+fn f<T:Copy>(y: &T) -> T {\n+    *y\n+}\n+\n+fn g(y: &[u8]) -> u8 {\n+    y[0]\n+}"}]}