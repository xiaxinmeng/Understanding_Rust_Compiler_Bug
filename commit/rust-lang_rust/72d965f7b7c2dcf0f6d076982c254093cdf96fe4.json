{"sha": "72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyZDk2NWY3YjdjMmRjZjBmNmQwNzY5ODJjMjU0MDkzY2RmOTZmZTQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-06T22:23:57Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-13T03:36:28Z"}, "message": "Reword label as per review comment", "tree": {"sha": "996011b062529fe4ce7c2feb3f1a60b093c8bc33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/996011b062529fe4ce7c2feb3f1a60b093c8bc33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "html_url": "https://github.com/rust-lang/rust/commit/72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9e10f1aee72445c0e3c1e25915fbf5f2070256a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9e10f1aee72445c0e3c1e25915fbf5f2070256a", "html_url": "https://github.com/rust-lang/rust/commit/f9e10f1aee72445c0e3c1e25915fbf5f2070256a"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "eec92675af6811957923fbb9fc2d1d7f8bf28d91", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -488,7 +488,7 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n     fn note_error_origin(&self, err: &mut DiagnosticBuilder<'tcx>, cause: &ObligationCause<'tcx>) {\n         match cause.code {\n             ObligationCauseCode::MatchExpressionArmPattern { span, ty } => {\n-                err.span_label(span, format!(\"this match expression evaluates to `{}`\", ty));\n+                err.span_label(span, format!(\"this match expression has type `{}`\", ty));\n             }\n             ObligationCauseCode::MatchExpressionArm { arm_span, source } => match source {\n                 hir::MatchSource::IfLetDesugar { .. } => {"}, {"sha": "417667a5354fd723d445c5e9271bb60ccf7d59e1", "filename": "src/test/ui/block-result/issue-13624.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fblock-result%2Fissue-13624.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fblock-result%2Fissue-13624.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-13624.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -13,7 +13,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-13624.rs:22:9\n    |\n LL |       match enum_struct_variant {\n-   |             ------------------- this match expression evaluates to `()`\n+   |             ------------------- this match expression has type `()`\n LL |         a::Enum::EnumStructVariant { x, y, z } => {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected (), found enum `a::Enum`\n    |"}, {"sha": "f69a389336590817614194480b0a7f037ada8ca2", "filename": "src/test/ui/error-codes/E0308-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Ferror-codes%2FE0308-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Ferror-codes%2FE0308-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0308-4.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/E0308-4.rs:4:9\n    |\n LL |     match x {\n-   |           - this match expression evaluates to `u8`\n+   |           - this match expression has type `u8`\n LL |         0u8..=3i8 => (), //~ ERROR E0308\n    |         ^^^^^^^^^ expected u8, found i8\n "}, {"sha": "683ad48ff52c0b4249eefe376f2474f353961678", "filename": "src/test/ui/issues/issue-11844.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-11844.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-11844.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-11844.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-11844.rs:6:9\n    |\n LL |     match a {\n-   |           - this match expression evaluates to `std::option::Option<std::boxed::Box<{integer}>>`\n+   |           - this match expression has type `std::option::Option<std::boxed::Box<{integer}>>`\n LL |         Ok(a) => //~ ERROR: mismatched types\n    |         ^^^^^ expected enum `std::option::Option`, found enum `std::result::Result`\n    |"}, {"sha": "768d11bf899a1f333f33f22c15aeb0c8769305aa", "filename": "src/test/ui/issues/issue-12552.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-12552.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-12552.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12552.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-12552.rs:6:5\n    |\n LL |   match t {\n-   |         - this match expression evaluates to `std::result::Result<_, {integer}>`\n+   |         - this match expression has type `std::result::Result<_, {integer}>`\n LL |     Some(k) => match k { //~ ERROR mismatched types\n    |     ^^^^^^^ expected enum `std::result::Result`, found enum `std::option::Option`\n    |"}, {"sha": "66255891f469a01534d355464546a796ca3c14f1", "filename": "src/test/ui/issues/issue-13466.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-13466.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-13466.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13466.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-13466.rs:8:9\n    |\n LL |     let _x: usize = match Some(1) {\n-   |                           ------- this match expression evaluates to `std::option::Option<{integer}>`\n+   |                           ------- this match expression has type `std::option::Option<{integer}>`\n LL |         Ok(u) => u,\n    |         ^^^^^ expected enum `std::option::Option`, found enum `std::result::Result`\n    |\n@@ -13,7 +13,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-13466.rs:14:9\n    |\n LL |     let _x: usize = match Some(1) {\n-   |                           ------- this match expression evaluates to `std::option::Option<{integer}>`\n+   |                           ------- this match expression has type `std::option::Option<{integer}>`\n ...\n LL |         Err(e) => panic!(e)\n    |         ^^^^^^ expected enum `std::option::Option`, found enum `std::result::Result`"}, {"sha": "de9757d5d32ed912e4cc322177d84d0b9b74e658", "filename": "src/test/ui/issues/issue-15896.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-15896.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-15896.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-15896.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-15896.rs:11:11\n    |\n LL |     let u = match e {\n-   |                   - this match expression evaluates to `main::R`\n+   |                   - this match expression has type `main::R`\n LL |         E::B(\n LL |           Tau{t: x},\n    |           ^^^^^^^^^ expected enum `main::R`, found struct `main::Tau`"}, {"sha": "1779d0befd871faab0eb4d6751dcb64ce5fa8d9f", "filename": "src/test/ui/issues/issue-16401.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-16401.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-16401.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16401.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-16401.rs:8:9\n    |\n LL |     match () {\n-   |           -- this match expression evaluates to `()`\n+   |           -- this match expression has type `()`\n LL |         Slice { data: data, len: len } => (),\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected (), found struct `Slice`\n    |"}, {"sha": "51903cfadab15e4ee9096679d32a83cb3a1a4634", "filename": "src/test/ui/issues/issue-3680.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-3680.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-3680.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3680.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-3680.rs:3:9\n    |\n LL |     match None {\n-   |           ---- this match expression evaluates to `std::option::Option<_>`\n+   |           ---- this match expression has type `std::option::Option<_>`\n LL |         Err(_) => ()\n    |         ^^^^^^ expected enum `std::option::Option`, found enum `std::result::Result`\n    |"}, {"sha": "0a918a789703e5f0e66725373b2e78026dfe3575", "filename": "src/test/ui/issues/issue-5100.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -29,7 +29,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-5100.rs:33:9\n    |\n LL |     match (true, false) {\n-   |           ------------- this match expression evaluates to `(bool, bool)`\n+   |           ------------- this match expression has type `(bool, bool)`\n LL |         box (true, false) => ()\n    |         ^^^^^^^^^^^^^^^^^ expected tuple, found struct `std::boxed::Box`\n    |"}, {"sha": "649a0c1581a687e0069b1e2504d13e5d7722d46c", "filename": "src/test/ui/issues/issue-5358-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-5358-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-5358-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5358-1.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-5358-1.rs:6:9\n    |\n LL |     match S(Either::Left(5)) {\n-   |           ------------------ this match expression evaluates to `S`\n+   |           ------------------ this match expression has type `S`\n LL |         Either::Right(_) => {}\n    |         ^^^^^^^^^^^^^^^^ expected struct `S`, found enum `Either`\n    |"}, {"sha": "7bb682028748706ea5aa1c406e11c5de8035d7b6", "filename": "src/test/ui/issues/issue-7092.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-7092.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fissues%2Fissue-7092.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-7092.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-7092.rs:6:9\n    |\n LL |     match x {\n-   |           - this match expression evaluates to `Whatever`\n+   |           - this match expression has type `Whatever`\n LL |         Some(field) =>\n    |         ^^^^^^^^^^^ expected enum `Whatever`, found enum `std::option::Option`\n    |"}, {"sha": "532f5e23ff5e90f6b66bc4bd0961b3881b0d1cd2", "filename": "src/test/ui/match/match-range-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fmatch%2Fmatch-range-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fmatch%2Fmatch-range-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-range-fail.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -20,7 +20,7 @@ error[E0308]: mismatched types\n   --> $DIR/match-range-fail.rs:17:9\n    |\n LL |     match 5 {\n-   |           - this match expression evaluates to `{integer}`\n+   |           - this match expression has type `{integer}`\n LL |         'c' ..= 100 => { }\n    |         ^^^^^^^^^^^ expected integer, found char\n    |"}, {"sha": "2a24a293e98364e68c6a3a4c47fbecac7ace3e05", "filename": "src/test/ui/match/match-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fmatch%2Fmatch-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fmatch%2Fmatch-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-struct.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/match-struct.rs:6:9\n    |\n LL |     match (S { a: 1 }) {\n-   |           ------------ this match expression evaluates to `S`\n+   |           ------------ this match expression has type `S`\n LL |         E::C(_) => (),\n    |         ^^^^^^^ expected struct `S`, found enum `E`\n    |"}, {"sha": "53b663513696626d0b3a3a09eafb8fa17dc5bd9f", "filename": "src/test/ui/match/match-tag-unary.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fmatch%2Fmatch-tag-unary.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fmatch%2Fmatch-tag-unary.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-tag-unary.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -4,7 +4,7 @@ error[E0308]: mismatched types\n LL | fn main() { let x: A = A::A(0); match x { B::B(y) => { } } } //~ ERROR mismatched types\n    |                                       -   ^^^^^^^ expected enum `A`, found enum `B`\n    |                                       |\n-   |                                       this match expression evaluates to `A`\n+   |                                       this match expression has type `A`\n    |\n    = note: expected type `A`\n               found type `B`"}, {"sha": "a73f9ab4dfddaa787be86ef8d324fb843bb9e6c2", "filename": "src/test/ui/mismatched_types/E0409.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fmismatched_types%2FE0409.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fmismatched_types%2FE0409.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2FE0409.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -10,7 +10,7 @@ error[E0308]: mismatched types\n   --> $DIR/E0409.rs:5:23\n    |\n LL |     match x {\n-   |           - this match expression evaluates to `_`\n+   |           - this match expression has type `_`\n LL |         (0, ref y) | (y, 0) => {} //~ ERROR E0409\n    |                       ^ expected &{integer}, found integer\n    |"}, {"sha": "c3a203cf3ab6e65b95cc68a9f06b9ce1a0633de0", "filename": "src/test/ui/or-pattern-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2For-pattern-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2For-pattern-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-pattern-mismatch.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -4,7 +4,7 @@ error[E0308]: mismatched types\n LL | fn main() { match Blah::A(1, 1, 2) { Blah::A(_, x, y) | Blah::B(x, y) => { } } }\n    |                   ----------------                                 ^ expected usize, found isize\n    |                   |\n-   |                   this match expression evaluates to `_`\n+   |                   this match expression has type `_`\n    |\n    = note: expected type `usize`\n               found type `isize`"}, {"sha": "c2810d764c2ceba3d2247485e1f357aa962d755b", "filename": "src/test/ui/pattern/pattern-error-continue.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -22,7 +22,7 @@ error[E0308]: mismatched types\n   --> $DIR/pattern-error-continue.rs:22:9\n    |\n LL |     match 'c' {\n-   |           --- this match expression evaluates to `char`\n+   |           --- this match expression has type `char`\n LL |         S { .. } => (),\n    |         ^^^^^^^^ expected char, found struct `S`\n    |"}, {"sha": "69cd552aabd1bf56c29f311977558064e6daa56a", "filename": "src/test/ui/pattern/pattern-tyvar.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fpattern%2Fpattern-tyvar.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fpattern%2Fpattern-tyvar.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpattern-tyvar.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/pattern-tyvar.rs:5:18\n    |\n LL |     match t {\n-   |           - this match expression evaluates to `std::option::Option<std::vec::Vec<isize>>`\n+   |           - this match expression has type `std::option::Option<std::vec::Vec<isize>>`\n LL |       Bar::T1(_, Some::<isize>(x)) => { //~ ERROR mismatched types\n    |                  ^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found isize\n    |"}, {"sha": "148f084e401ac7dd5bdfb7c62f6f13b818ea12c8", "filename": "src/test/ui/resolve/resolve-inconsistent-binding-mode.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fresolve%2Fresolve-inconsistent-binding-mode.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fresolve%2Fresolve-inconsistent-binding-mode.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-inconsistent-binding-mode.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -24,7 +24,7 @@ error[E0308]: mismatched types\n   --> $DIR/resolve-inconsistent-binding-mode.rs:7:32\n    |\n LL |     match x {\n-   |           - this match expression evaluates to `_`\n+   |           - this match expression has type `_`\n LL |       Opts::A(ref i) | Opts::B(i) => {}\n    |                                ^ expected &isize, found isize\n    |\n@@ -35,7 +35,7 @@ error[E0308]: mismatched types\n   --> $DIR/resolve-inconsistent-binding-mode.rs:16:32\n    |\n LL |     match x {\n-   |           - this match expression evaluates to `_`\n+   |           - this match expression has type `_`\n LL |       Opts::A(ref i) | Opts::B(i) => {}\n    |                                ^ expected &isize, found isize\n    |\n@@ -46,7 +46,7 @@ error[E0308]: mismatched types\n   --> $DIR/resolve-inconsistent-binding-mode.rs:25:36\n    |\n LL |     match x {\n-   |           - this match expression evaluates to `_`\n+   |           - this match expression has type `_`\n LL |       Opts::A(ref mut i) | Opts::B(ref i) => {}\n    |                                    ^^^^^ types differ in mutability\n    |"}, {"sha": "cc62316bec1851c82be12ddd0c97d37f075e199b", "filename": "src/test/ui/structs/structure-constructor-type-mismatch.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fstructs%2Fstructure-constructor-type-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72d965f7b7c2dcf0f6d076982c254093cdf96fe4/src%2Ftest%2Fui%2Fstructs%2Fstructure-constructor-type-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstructure-constructor-type-mismatch.stderr?ref=72d965f7b7c2dcf0f6d076982c254093cdf96fe4", "patch": "@@ -110,7 +110,7 @@ error[E0308]: mismatched types\n   --> $DIR/structure-constructor-type-mismatch.rs:54:9\n    |\n LL |     match (Point { x: 1, y: 2 }) {\n-   |           ---------------------- this match expression evaluates to `Point<{integer}>`\n+   |           ---------------------- this match expression has type `Point<{integer}>`\n LL |         PointF::<u32> { .. } => {} //~ ERROR wrong number of type arguments\n    |         ^^^^^^^^^^^^^^^^^^^^ expected integer, found f32\n    |\n@@ -121,7 +121,7 @@ error[E0308]: mismatched types\n   --> $DIR/structure-constructor-type-mismatch.rs:59:9\n    |\n LL |     match (Point { x: 1, y: 2 }) {\n-   |           ---------------------- this match expression evaluates to `Point<{integer}>`\n+   |           ---------------------- this match expression has type `Point<{integer}>`\n LL |         PointF { .. } => {} //~ ERROR mismatched types\n    |         ^^^^^^^^^^^^^ expected integer, found f32\n    |\n@@ -132,7 +132,7 @@ error[E0308]: mismatched types\n   --> $DIR/structure-constructor-type-mismatch.rs:67:9\n    |\n LL |     match (Pair { x: 1, y: 2 }) {\n-   |           --------------------- this match expression evaluates to `Pair<{integer}, {integer}>`\n+   |           --------------------- this match expression has type `Pair<{integer}, {integer}>`\n LL |         PairF::<u32> { .. } => {} //~ ERROR mismatched types\n    |         ^^^^^^^^^^^^^^^^^^^ expected integer, found f32\n    |"}]}