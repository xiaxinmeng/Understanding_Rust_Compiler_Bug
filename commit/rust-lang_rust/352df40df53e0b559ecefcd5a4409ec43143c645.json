{"sha": "352df40df53e0b559ecefcd5a4409ec43143c645", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MmRmNDBkZjUzZTBiNTU5ZWNlZmNkNWE0NDA5ZWM0MzE0M2M2NDU=", "commit": {"author": {"name": "jumbatm", "email": "30644300+jumbatm@users.noreply.github.com", "date": "2020-08-25T13:41:13Z"}, "committer": {"name": "jumbatm", "email": "30644300+jumbatm@users.noreply.github.com", "date": "2020-08-25T14:19:45Z"}, "message": "Remove unnecessary assert.", "tree": {"sha": "5db7165a09604fd8a193dbd073edb1baedecea5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5db7165a09604fd8a193dbd073edb1baedecea5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/352df40df53e0b559ecefcd5a4409ec43143c645", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/352df40df53e0b559ecefcd5a4409ec43143c645", "html_url": "https://github.com/rust-lang/rust/commit/352df40df53e0b559ecefcd5a4409ec43143c645", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/352df40df53e0b559ecefcd5a4409ec43143c645/comments", "author": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ea86af1eaed20227a6176995aa6c082f245924c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ea86af1eaed20227a6176995aa6c082f245924c", "html_url": "https://github.com/rust-lang/rust/commit/2ea86af1eaed20227a6176995aa6c082f245924c"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "f8d30ebb0b18fac2ab6e8438a879d30c577cd3c7", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/352df40df53e0b559ecefcd5a4409ec43143c645/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/352df40df53e0b559ecefcd5a4409ec43143c645/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=352df40df53e0b559ecefcd5a4409ec43143c645", "patch": "@@ -2180,11 +2180,12 @@ impl ClashingExternDeclarations {\n                         if is_transparent && !is_non_null {\n                             debug_assert!(def.variants.len() == 1);\n                             let v = &def.variants[VariantIdx::new(0)];\n-                            assert!(\n-                                v.fields.len() > 0,\n-                                \"single-variant transparent structure with zero-sized field\"\n-                            );\n-                            ty = v.transparent_newtype_field(tcx).unwrap().ty(tcx, substs);\n+                            ty = v\n+                                .transparent_newtype_field(tcx)\n+                                .expect(\n+                                    \"single-variant transparent structure with zero-sized field\",\n+                                )\n+                                .ty(tcx, substs);\n                             continue;\n                         }\n                     }"}]}