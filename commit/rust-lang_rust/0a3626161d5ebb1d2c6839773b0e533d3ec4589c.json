{"sha": "0a3626161d5ebb1d2c6839773b0e533d3ec4589c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMzYyNjE2MWQ1ZWJiMWQyYzY4Mzk3NzNiMGU1MzNkM2VjNDU4OWM=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-12-16T13:17:52Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-12-16T13:17:52Z"}, "message": "Write impl data to crate library files\n\n(No one is actually reading it yet.)\n\nIssue #1227", "tree": {"sha": "0f5114f953b01e0f8b0350160a138e5832ea064b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f5114f953b01e0f8b0350160a138e5832ea064b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a3626161d5ebb1d2c6839773b0e533d3ec4589c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a3626161d5ebb1d2c6839773b0e533d3ec4589c", "html_url": "https://github.com/rust-lang/rust/commit/0a3626161d5ebb1d2c6839773b0e533d3ec4589c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a3626161d5ebb1d2c6839773b0e533d3ec4589c/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d529757515671d5826d8d2203ce0a4f82a3bdee5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d529757515671d5826d8d2203ce0a4f82a3bdee5", "html_url": "https://github.com/rust-lang/rust/commit/d529757515671d5826d8d2203ce0a4f82a3bdee5"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "4376a50e9b41309ae87568d7d91f80d69e42fec5", "filename": "src/comp/metadata/common.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a3626161d5ebb1d2c6839773b0e533d3ec4589c/src%2Fcomp%2Fmetadata%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a3626161d5ebb1d2c6839773b0e533d3ec4589c/src%2Fcomp%2Fmetadata%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcommon.rs?ref=0a3626161d5ebb1d2c6839773b0e533d3ec4589c", "patch": "@@ -66,6 +66,10 @@ const tag_items_data_item_inlineness: uint = 0x27u;\n \n const tag_crate_hash: uint = 0x28u;\n \n+const tag_mod_impl: uint = 0x30u;\n+\n+const tag_impl_method: uint = 0x31u;\n+\n // djb's cdb hashes.\n fn hash_node_id(&&node_id: int) -> uint { ret 177573u ^ (node_id as uint); }\n "}, {"sha": "8b716f8a444aebb9ac1289fb4fc0e9a0e61822a3", "filename": "src/comp/metadata/encoder.rs", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/0a3626161d5ebb1d2c6839773b0e533d3ec4589c/src%2Fcomp%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a3626161d5ebb1d2c6839773b0e533d3ec4589c/src%2Fcomp%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fencoder.rs?ref=0a3626161d5ebb1d2c6839773b0e533d3ec4589c", "patch": "@@ -137,6 +137,7 @@ fn encode_module_item_paths(ebml_w: ebml::writer, module: _mod, path: [str],\n             encode_def_id(ebml_w, local_def(it.id));\n             ebml::end_tag(ebml_w);\n           }\n+          item_impl(_, _, _) {}\n         }\n     }\n }\n@@ -278,10 +279,20 @@ fn encode_info_for_item(ecx: @encode_ctxt, ebml_w: ebml::writer, item: @item,\n         encode_symbol(ecx, ebml_w, item.id);\n         ebml::end_tag(ebml_w);\n       }\n-      item_mod(_) {\n+      item_mod(m) {\n         ebml::start_tag(ebml_w, tag_items_data_item);\n         encode_def_id(ebml_w, local_def(item.id));\n         encode_family(ebml_w, 'm' as u8);\n+        for i in m.items {\n+            alt i.node {\n+              item_impl(_, _, _) {\n+                ebml::start_tag(ebml_w, tag_mod_impl);\n+                ebml_w.writer.write(str::bytes(def_to_str(local_def(i.id))));\n+                ebml::end_tag(ebml_w);\n+              }\n+              _ {}\n+            }\n+        }\n         ebml::end_tag(ebml_w);\n       }\n       item_native_mod(_) {\n@@ -349,6 +360,31 @@ fn encode_info_for_item(ecx: @encode_ctxt, ebml_w: ebml::writer, item: @item,\n         encode_symbol(ecx, ebml_w, ctor_id);\n         ebml::end_tag(ebml_w);\n       }\n+      item_impl(tps, _, methods) {\n+        ebml::start_tag(ebml_w, tag_items_data_item);\n+        encode_def_id(ebml_w, local_def(item.id));\n+        encode_family(ebml_w, 'I' as u8);\n+        encode_type_param_kinds(ebml_w, tps);\n+        encode_type(ecx, ebml_w, node_id_to_monotype(ecx.ccx.tcx, item.id));\n+        for m in methods {\n+            ebml::start_tag(ebml_w, tag_impl_method);\n+            ebml_w.writer.write(str::bytes(def_to_str(local_def(m.node.id))));\n+            ebml::end_tag(ebml_w);\n+        }\n+        ebml::end_tag(ebml_w);\n+\n+        for m in methods {\n+            index += [{val: m.node.id, pos: ebml_w.writer.tell()}];\n+            ebml::start_tag(ebml_w, tag_items_data_item);\n+            encode_def_id(ebml_w, local_def(m.node.id));\n+            encode_family(ebml_w, 'i' as u8);\n+            encode_type_param_kinds(ebml_w, tps + m.node.tps);\n+            encode_type(ecx, ebml_w,\n+                        node_id_to_monotype(ecx.ccx.tcx, m.node.id));\n+            encode_symbol(ecx, ebml_w, m.node.id);\n+            ebml::end_tag(ebml_w);\n+        }\n+      }\n     }\n }\n "}]}