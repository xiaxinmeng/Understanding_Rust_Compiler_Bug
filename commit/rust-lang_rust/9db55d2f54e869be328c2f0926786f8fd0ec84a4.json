{"sha": "9db55d2f54e869be328c2f0926786f8fd0ec84a4", "node_id": "C_kwDOAAsO6NoAKDlkYjU1ZDJmNTRlODY5YmUzMjhjMmYwOTI2Nzg2ZjhmZDBlYzg0YTQ", "commit": {"author": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-06-26T18:28:06Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-07-06T19:24:53Z"}, "message": "Fix vector comparison now returning a vector of integers", "tree": {"sha": "5c0fd25303607e20a108c111f15751ead6aa11b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c0fd25303607e20a108c111f15751ead6aa11b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9db55d2f54e869be328c2f0926786f8fd0ec84a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9db55d2f54e869be328c2f0926786f8fd0ec84a4", "html_url": "https://github.com/rust-lang/rust/commit/9db55d2f54e869be328c2f0926786f8fd0ec84a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9db55d2f54e869be328c2f0926786f8fd0ec84a4/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6205f1a0c590381bef30a6faf6bd55ba13d9c05a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6205f1a0c590381bef30a6faf6bd55ba13d9c05a", "html_url": "https://github.com/rust-lang/rust/commit/6205f1a0c590381bef30a6faf6bd55ba13d9c05a"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "867fd531f5043b23a625bd27631c7f3560c2d578", "filename": "src/builder.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9db55d2f54e869be328c2f0926786f8fd0ec84a4/src%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9db55d2f54e869be328c2f0926786f8fd0ec84a4/src%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuilder.rs?ref=9db55d2f54e869be328c2f0926786f8fd0ec84a4", "patch": "@@ -1490,6 +1490,9 @@ impl<'a, 'gcc, 'tcx> Builder<'a, 'gcc, 'tcx> {\n         let zeros = self.context.new_rvalue_from_vector(None, cond_type, &zeros);\n \n         let masks = self.context.new_comparison(None, ComparisonOp::NotEquals, cond, zeros);\n+        // NOTE: masks is a vector of integers, but the values can be vectors of floats, so use bitcast to make\n+        // the & operation work.\n+        let masks = self.bitcast_if_needed(masks, then_val.get_type());\n         let then_vals = masks & then_val;\n \n         let ones = vec![self.context.new_rvalue_one(element_type); num_units];\n@@ -1509,6 +1512,16 @@ impl<'a, 'gcc, 'tcx> Builder<'a, 'gcc, 'tcx> {\n fn difference_or_zero<'gcc>(a: RValue<'gcc>, b: RValue<'gcc>, context: &'gcc Context<'gcc>) -> RValue<'gcc> {\n     let difference = a - b;\n     let masks = context.new_comparison(None, ComparisonOp::GreaterThanEquals, b, a);\n+    // NOTE: masks is a vector of integers, but the values can be vectors of floats, so use bitcast to make\n+    // the & operation work.\n+    let a_type = a.get_type();\n+    let masks =\n+        if masks.get_type() != a_type {\n+            context.new_bitcast(None, masks, a_type)\n+        }\n+        else {\n+            masks\n+        };\n     difference & masks\n }\n "}]}