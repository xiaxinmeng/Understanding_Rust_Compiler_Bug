{"sha": "f624f6b5a6e4b5955a958975897c029afe50ff7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2MjRmNmI1YTZlNGI1OTU1YTk1ODk3NTg5N2MwMjlhZmU1MGZmN2Y=", "commit": {"author": {"name": "David Alber", "email": "alber.david@gmail.com", "date": "2018-01-18T05:32:47Z"}, "committer": {"name": "David Alber", "email": "alber.david@gmail.com", "date": "2018-01-26T05:02:18Z"}, "message": "Fixing `force_multiline_blocks=false` snippet", "tree": {"sha": "7ee2677efc06af2b690284bdba8bb1353caf80ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ee2677efc06af2b690284bdba8bb1353caf80ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f624f6b5a6e4b5955a958975897c029afe50ff7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f624f6b5a6e4b5955a958975897c029afe50ff7f", "html_url": "https://github.com/rust-lang/rust/commit/f624f6b5a6e4b5955a958975897c029afe50ff7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f624f6b5a6e4b5955a958975897c029afe50ff7f/comments", "author": {"login": "davidalber", "id": 933552, "node_id": "MDQ6VXNlcjkzMzU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/933552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidalber", "html_url": "https://github.com/davidalber", "followers_url": "https://api.github.com/users/davidalber/followers", "following_url": "https://api.github.com/users/davidalber/following{/other_user}", "gists_url": "https://api.github.com/users/davidalber/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidalber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidalber/subscriptions", "organizations_url": "https://api.github.com/users/davidalber/orgs", "repos_url": "https://api.github.com/users/davidalber/repos", "events_url": "https://api.github.com/users/davidalber/events{/privacy}", "received_events_url": "https://api.github.com/users/davidalber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidalber", "id": 933552, "node_id": "MDQ6VXNlcjkzMzU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/933552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidalber", "html_url": "https://github.com/davidalber", "followers_url": "https://api.github.com/users/davidalber/followers", "following_url": "https://api.github.com/users/davidalber/following{/other_user}", "gists_url": "https://api.github.com/users/davidalber/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidalber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidalber/subscriptions", "organizations_url": "https://api.github.com/users/davidalber/orgs", "repos_url": "https://api.github.com/users/davidalber/repos", "events_url": "https://api.github.com/users/davidalber/events{/privacy}", "received_events_url": "https://api.github.com/users/davidalber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f925c581fe0c477d2591dba680db6ccb19036859", "url": "https://api.github.com/repos/rust-lang/rust/commits/f925c581fe0c477d2591dba680db6ccb19036859", "html_url": "https://github.com/rust-lang/rust/commit/f925c581fe0c477d2591dba680db6ccb19036859"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "f001ecf1cd41fe3138e9aaed9b77f59de5646956", "filename": "Configurations.md", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f624f6b5a6e4b5955a958975897c029afe50ff7f/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/f624f6b5a6e4b5955a958975897c029afe50ff7f/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=f624f6b5a6e4b5955a958975897c029afe50ff7f", "patch": "@@ -1161,16 +1161,18 @@ Force multiline closure and match arm bodies to be wrapped in a block\n #### `false` (default):\n \n ```rust\n-result.and_then(|maybe_value| match maybe_value {\n-    None => ...,\n-    Some(value) => ...,\n-})\n+fn main() {\n+    result.and_then(|maybe_value| match maybe_value {\n+        None => foo(),\n+        Some(value) => bar(),\n+    });\n \n-match lorem {\n-    None => if ipsum {\n-        println!(\"Hello World\");\n-    },\n-    Some(dolor) => ...,\n+    match lorem {\n+        None => if ipsum {\n+            println!(\"Hello World\");\n+        },\n+        Some(dolor) => foo(),\n+    }\n }\n ```\n "}]}