{"sha": "da81a33b05c216f0958e0110a1e059204d34ed85", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhODFhMzNiMDVjMjE2ZjA5NThlMDExMGExZTA1OTIwNGQzNGVkODU=", "commit": {"author": {"name": "Lee Bousfield", "email": "ljbousfield@gmail.com", "date": "2017-07-08T17:02:52Z"}, "committer": {"name": "Lee Bousfield", "email": "ljbousfield@gmail.com", "date": "2017-07-08T17:02:52Z"}, "message": "Box large array to avoid blowing the stack", "tree": {"sha": "8f394cf0daba07aeb11b765829706538b297cfbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f394cf0daba07aeb11b765829706538b297cfbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da81a33b05c216f0958e0110a1e059204d34ed85", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE4PWe0/2fDR3tomkkxB9lBMEWQgkFAllhEDwACgkQxB9lBMEW\nQgmLnwf/Tnar39KE9pJnx516O7a9kqhqtPF0aHKbF5mKZwb0yCJzT27AKoO77/J+\nEocBciasGMpd+wEHQfwke7v3COzsy0ga53aeLZmXHnZTBuQB7QPIYjRnI39YJne7\ns3PJ7u+JdBIqg9p051aVV91SzneKlZ3Dw2oMQuLpJ+LRzf7J1GqfZZJ+1MGdtGC9\nko7XAghjlgHbtvo7V0A5AG/wE9XYPcTPpOLhDfXNXG32et1Cjolh0JlHc7cOB9Dd\nQoZQfSzFEl178djSs4GM0cQFosM72YuohGwm/3xTf2FSMBA6JAzQrqCj3pQWPD75\nlpwOYNV7rpL0+N9OTSq9ChJ3yoCmkQ==\n=mB4k\n-----END PGP SIGNATURE-----", "payload": "tree 8f394cf0daba07aeb11b765829706538b297cfbc\nparent afed75a2d9b7e049dc26be7af3cb72297274d343\nauthor Lee Bousfield <ljbousfield@gmail.com> 1499533372 -0400\ncommitter Lee Bousfield <ljbousfield@gmail.com> 1499533372 -0400\n\nBox large array to avoid blowing the stack\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da81a33b05c216f0958e0110a1e059204d34ed85", "html_url": "https://github.com/rust-lang/rust/commit/da81a33b05c216f0958e0110a1e059204d34ed85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da81a33b05c216f0958e0110a1e059204d34ed85/comments", "author": {"login": "PlasmaPower", "id": 6006498, "node_id": "MDQ6VXNlcjYwMDY0OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6006498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PlasmaPower", "html_url": "https://github.com/PlasmaPower", "followers_url": "https://api.github.com/users/PlasmaPower/followers", "following_url": "https://api.github.com/users/PlasmaPower/following{/other_user}", "gists_url": "https://api.github.com/users/PlasmaPower/gists{/gist_id}", "starred_url": "https://api.github.com/users/PlasmaPower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PlasmaPower/subscriptions", "organizations_url": "https://api.github.com/users/PlasmaPower/orgs", "repos_url": "https://api.github.com/users/PlasmaPower/repos", "events_url": "https://api.github.com/users/PlasmaPower/events{/privacy}", "received_events_url": "https://api.github.com/users/PlasmaPower/received_events", "type": "User", "site_admin": false}, "committer": {"login": "PlasmaPower", "id": 6006498, "node_id": "MDQ6VXNlcjYwMDY0OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6006498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PlasmaPower", "html_url": "https://github.com/PlasmaPower", "followers_url": "https://api.github.com/users/PlasmaPower/followers", "following_url": "https://api.github.com/users/PlasmaPower/following{/other_user}", "gists_url": "https://api.github.com/users/PlasmaPower/gists{/gist_id}", "starred_url": "https://api.github.com/users/PlasmaPower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PlasmaPower/subscriptions", "organizations_url": "https://api.github.com/users/PlasmaPower/orgs", "repos_url": "https://api.github.com/users/PlasmaPower/repos", "events_url": "https://api.github.com/users/PlasmaPower/events{/privacy}", "received_events_url": "https://api.github.com/users/PlasmaPower/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afed75a2d9b7e049dc26be7af3cb72297274d343", "url": "https://api.github.com/repos/rust-lang/rust/commits/afed75a2d9b7e049dc26be7af3cb72297274d343", "html_url": "https://github.com/rust-lang/rust/commit/afed75a2d9b7e049dc26be7af3cb72297274d343"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "59d053991673042bd3b1d12fee85055b3112efb9", "filename": "src/test/run-pass/align-struct.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/da81a33b05c216f0958e0110a1e059204d34ed85/src%2Ftest%2Frun-pass%2Falign-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da81a33b05c216f0958e0110a1e059204d34ed85/src%2Ftest%2Frun-pass%2Falign-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falign-struct.rs?ref=da81a33b05c216f0958e0110a1e059204d34ed85", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n #![feature(attr_literals)]\n #![feature(repr_align)]\n+#![feature(box_syntax)]\n \n use std::mem;\n \n@@ -201,13 +202,14 @@ pub fn main() {\n     assert_eq!(mem::size_of_val(&a), 16);\n     assert!(is_aligned_to(&a, 16));\n \n-    let mut arr = [0; 0x10000];\n-    arr[0] = 132;\n-    let large = AlignLarge {\n-        stuff: arr,\n+    let mut large = box AlignLarge {\n+        stuff: [0; 0x10000],\n     };\n+    large.stuff[0] = 132;\n+    *large.stuff.last_mut().unwrap() = 102;\n     assert_eq!(large.stuff[0], 132);\n+    assert_eq!(large.stuff.last(), Some(&102));\n     assert_eq!(mem::align_of::<AlignLarge>(), 0x10000);\n-    assert_eq!(mem::align_of_val(&large), 0x10000);\n-    assert!(is_aligned_to(&large, 0x10000));\n+    assert_eq!(mem::align_of_val(&*large), 0x10000);\n+    assert!(is_aligned_to(&*large, 0x10000));\n }"}]}