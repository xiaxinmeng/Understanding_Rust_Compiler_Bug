{"sha": "5c875d93855c6d577962b0f74f17374f37b219c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjODc1ZDkzODU1YzZkNTc3OTYyYjBmNzRmMTczNzRmMzdiMjE5Yzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-24T20:07:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-24T20:07:44Z"}, "message": "Auto merge of #54416 - christianpoveda:master, r=wesleywiser\n\nExtend MIR inlining to all operand variants\n\nThis fixes https://github.com/rust-lang/rust/issues/54193\nr? @eddyb", "tree": {"sha": "a97a542ff5a8394423839343df391c29a394720a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a97a542ff5a8394423839343df391c29a394720a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c875d93855c6d577962b0f74f17374f37b219c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c875d93855c6d577962b0f74f17374f37b219c9", "html_url": "https://github.com/rust-lang/rust/commit/5c875d93855c6d577962b0f74f17374f37b219c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c875d93855c6d577962b0f74f17374f37b219c9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70073ec61d0d56bca45b9bd40659bb75799cd273", "url": "https://api.github.com/repos/rust-lang/rust/commits/70073ec61d0d56bca45b9bd40659bb75799cd273", "html_url": "https://github.com/rust-lang/rust/commit/70073ec61d0d56bca45b9bd40659bb75799cd273"}, {"sha": "1e3c86e1c40e703f632087751d073b58bd96a6df", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e3c86e1c40e703f632087751d073b58bd96a6df", "html_url": "https://github.com/rust-lang/rust/commit/1e3c86e1c40e703f632087751d073b58bd96a6df"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "04f61235ca195cfb45c850933cd583306751cbc1", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c875d93855c6d577962b0f74f17374f37b219c9/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c875d93855c6d577962b0f74f17374f37b219c9/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=5c875d93855c6d577962b0f74f17374f37b219c9", "patch": "@@ -94,8 +94,8 @@ impl<'a, 'tcx> Inliner<'a, 'tcx> {\n                 // Only consider direct calls to functions\n                 let terminator = bb_data.terminator();\n                 if let TerminatorKind::Call {\n-                    func: Operand::Constant(ref f), .. } = terminator.kind {\n-                        if let ty::FnDef(callee_def_id, substs) = f.ty.sty {\n+                    func: ref op, .. } = terminator.kind {\n+                        if let ty::FnDef(callee_def_id, substs) = op.ty(caller_mir, self.tcx).sty {\n                             if let Some(instance) = Instance::resolve(self.tcx,\n                                                                       param_env,\n                                                                       callee_def_id,"}, {"sha": "da95842ea4deed06f87a6e7f6e875b559183e8f8", "filename": "src/test/mir-opt/inline-any-operand.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/5c875d93855c6d577962b0f74f17374f37b219c9/src%2Ftest%2Fmir-opt%2Finline-any-operand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c875d93855c6d577962b0f74f17374f37b219c9/src%2Ftest%2Fmir-opt%2Finline-any-operand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline-any-operand.rs?ref=5c875d93855c6d577962b0f74f17374f37b219c9", "patch": "@@ -0,0 +1,39 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z span_free_formats\n+\n+// Tests that MIR inliner works for any operand\n+\n+fn main() {\n+    println!(\"{}\", bar());\n+}\n+\n+#[inline(always)]\n+fn foo(x: i32, y: i32) -> bool {\n+    x == y\n+}\n+\n+fn bar() -> bool {\n+    let f = foo;\n+    f(1, -1)\n+}\n+\n+// END RUST SOURCE\n+// START rustc.bar.Inline.after.mir\n+// ...\n+// bb0: {\n+//     ...\n+//     _0 = Eq(move _3, move _4);\n+//     ...\n+//     return;\n+// }\n+// ...\n+// END rustc.bar.Inline.after.mir"}]}