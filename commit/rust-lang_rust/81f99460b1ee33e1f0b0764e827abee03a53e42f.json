{"sha": "81f99460b1ee33e1f0b0764e827abee03a53e42f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxZjk5NDYwYjFlZTMzZTFmMGIwNzY0ZTgyN2FiZWUwM2E1M2U0MmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-05T09:27:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-05T09:27:18Z"}, "message": "Auto merge of #7034 - Jarcho:missing_doc_ice, r=phansch\n\nFix ICE in `missing_panics_doc`\n\nfixes: #7033\nchangelog: Fix ICE in `missing_panics_doc` while searching in a `const` block", "tree": {"sha": "8df4f3b6fb313568d4a6f9eb4520a06f9be91a34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8df4f3b6fb313568d4a6f9eb4520a06f9be91a34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81f99460b1ee33e1f0b0764e827abee03a53e42f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81f99460b1ee33e1f0b0764e827abee03a53e42f", "html_url": "https://github.com/rust-lang/rust/commit/81f99460b1ee33e1f0b0764e827abee03a53e42f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81f99460b1ee33e1f0b0764e827abee03a53e42f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d221c569e266ada7363c6cea3727b62ef74af99", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d221c569e266ada7363c6cea3727b62ef74af99", "html_url": "https://github.com/rust-lang/rust/commit/8d221c569e266ada7363c6cea3727b62ef74af99"}, {"sha": "a00de90cebedbf24e0cb75ca347f1752335aedca", "url": "https://api.github.com/repos/rust-lang/rust/commits/a00de90cebedbf24e0cb75ca347f1752335aedca", "html_url": "https://github.com/rust-lang/rust/commit/a00de90cebedbf24e0cb75ca347f1752335aedca"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "69d478500915ba458acf5d4ae42e058a82eb86b4", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/81f99460b1ee33e1f0b0764e827abee03a53e42f/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f99460b1ee33e1f0b0764e827abee03a53e42f/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=81f99460b1ee33e1f0b0764e827abee03a53e42f", "patch": "@@ -11,7 +11,7 @@ use rustc_errors::emitter::EmitterWriter;\n use rustc_errors::Handler;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n-use rustc_hir::{Expr, ExprKind, QPath};\n+use rustc_hir::{AnonConst, Expr, ExprKind, QPath};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::hir::map::Map;\n use rustc_middle::lint::in_external_macro;\n@@ -735,6 +735,9 @@ impl<'a, 'tcx> Visitor<'tcx> for FindPanicUnwrap<'a, 'tcx> {\n         intravisit::walk_expr(self, expr);\n     }\n \n+    // Panics in const blocks will cause compilation to fail.\n+    fn visit_anon_const(&mut self, _: &'tcx AnonConst) {}\n+\n     fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::OnlyBodies(self.cx.tcx.hir())\n     }"}, {"sha": "c946a047f1b0a88c56ef98d57428b1d8cd98b20e", "filename": "tests/ui/doc.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/81f99460b1ee33e1f0b0764e827abee03a53e42f/tests%2Fui%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f99460b1ee33e1f0b0764e827abee03a53e42f/tests%2Fui%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc.rs?ref=81f99460b1ee33e1f0b0764e827abee03a53e42f", "patch": "@@ -1,8 +1,8 @@\n //! This file tests for the `DOC_MARKDOWN` lint.\n \n-#![allow(dead_code)]\n+#![allow(dead_code, incomplete_features)]\n #![warn(clippy::doc_markdown)]\n-#![feature(custom_inner_attributes)]\n+#![feature(custom_inner_attributes, const_generics, const_evaluatable_checked, const_option)]\n #![rustfmt::skip]\n \n /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n@@ -202,3 +202,20 @@ fn issue_2343() {}\n /// This should not cause an ICE:\n /// __|_ _|__||_|\n fn pulldown_cmark_crash() {}\n+\n+// issue #7033 - const_evaluatable_checked ICE\n+struct S<T, const N: usize>\n+where [(); N.checked_next_power_of_two().unwrap()]: {\n+    arr: [T; N.checked_next_power_of_two().unwrap()],\n+    n: usize,\n+}\n+\n+impl<T: Copy + Default, const N: usize> S<T, N>\n+where [(); N.checked_next_power_of_two().unwrap()]: {\n+    fn new() -> Self {\n+        Self {\n+            arr: [T::default(); N.checked_next_power_of_two().unwrap()],\n+            n: 0,\n+        }\n+    }\n+}"}]}