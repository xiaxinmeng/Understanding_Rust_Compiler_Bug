{"sha": "5b7e6c0f3c71891a40a77493bb251fccd5944feb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViN2U2YzBmM2M3MTg5MWE0MGE3NzQ5M2JiMjUxZmNjZDU5NDRmZWI=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-02-17T11:41:37Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-02-21T02:32:15Z"}, "message": "Add documentation for the `-Zself-profile-events` flag", "tree": {"sha": "d2af959a030236553652b32047b4f31f694f846c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2af959a030236553652b32047b4f31f694f846c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b7e6c0f3c71891a40a77493bb251fccd5944feb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b7e6c0f3c71891a40a77493bb251fccd5944feb", "html_url": "https://github.com/rust-lang/rust/commit/5b7e6c0f3c71891a40a77493bb251fccd5944feb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b7e6c0f3c71891a40a77493bb251fccd5944feb/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "535fc0f43ab40a1f4982f80a3d922e6e202c6702", "url": "https://api.github.com/repos/rust-lang/rust/commits/535fc0f43ab40a1f4982f80a3d922e6e202c6702", "html_url": "https://github.com/rust-lang/rust/commit/535fc0f43ab40a1f4982f80a3d922e6e202c6702"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "3ce18743be50801360ef737c510d6ebc0e86ba61", "filename": "src/doc/unstable-book/src/compiler-flags/self-profile-events.md", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/5b7e6c0f3c71891a40a77493bb251fccd5944feb/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fself-profile-events.md", "raw_url": "https://github.com/rust-lang/rust/raw/5b7e6c0f3c71891a40a77493bb251fccd5944feb/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fself-profile-events.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fself-profile-events.md?ref=5b7e6c0f3c71891a40a77493bb251fccd5944feb", "patch": "@@ -0,0 +1,74 @@\n+# `self-profile-events`\n+\n+---------------------\n+\n+The `-Zself-profile-events` compiler flag controls what events are recorded by the self-profiler when it is enabled via the `-Zself-profile` flag.\n+\n+This flag takes a comma delimited list of event types to record.\n+\n+For example:\n+\n+```console\n+$ rustc -Zself-profile -Zself-profile-events=default,args\n+```\n+\n+## Event types\n+\n+- `query-provider`\n+  - Traces each query used internally by the compiler.\n+\n+- `generic-activity`\n+  - Traces other parts of the compiler not covered by the query system.\n+\n+- `query-cache-hit`\n+  - Adds tracing information that records when the in-memory query cache is \"hit\" and does not need to re-execute a query which has been cached.\n+  - Disabled by default because this significantly increases the trace file size.\n+\n+- `query-blocked`\n+  - Tracks time that a query tries to run but is blocked waiting on another thread executing the same query to finish executing.\n+  - Query blocking only occurs when the compiler is built with parallel mode support.\n+\n+- `incr-cache-load`\n+  - Tracks time that is spent loading and deserializing query results from the incremental compilation on-disk cache.\n+\n+- `query-keys`\n+  - Adds a serialized representation of each query's query key to the tracing data.\n+  - Disabled by default because this significantly increases the trace file size.\n+\n+- `function-args`\n+  - Adds additional tracing data to some `generic-activity` events.\n+  - Disabled by default for parity with `query-keys`.\n+\n+- `llvm`\n+  - Adds tracing information about LLVM passes and codegeneration.\n+  - Disabled by default because this only works when `-Znew-llvm-pass-manager` is enabled.\n+\n+## Event synonyms\n+\n+- `none`\n+  - Disables all events.\n+  Equivalent to the self-profiler being disabled.\n+\n+- `default`\n+  - The default set of events which stikes a balance between providing detailed tracing data and adding additional overhead to the compilation.\n+\n+- `args`\n+  - Equivalent to `query-keys` and `function-args`.\n+\n+- `all`\n+  - Enables all events.\n+\n+## Examples\n+\n+Enable the profiler and capture the default set of events (both invocations are equivalent):\n+\n+```console\n+$ rustc -Zself-profile\n+$ rustc -Zself-profile -Zself-profile-events=default\n+```\n+\n+Enable the profiler and capture the default events and their arguments:\n+\n+```console\n+$ rustc -Zself-profile -Zself-profile-events=default,args\n+```"}]}