{"sha": "5f76240354af9e8a2dfffbb4205e686d0e5ef081", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmNzYyNDAzNTRhZjllOGEyZGZmZmJiNDIwNWU2ODZkMGU1ZWYwODE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-18T01:13:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-18T01:13:53Z"}, "message": "Rollup merge of #74457 - Keruspe:install, r=Mark-Simulacrum\n\nrustbuild: drop tool::should_install\n\nAlways install when the build succeeds\n\nFixes #74431", "tree": {"sha": "4617f9cddc0ffd28b6d11660056c560057e6441c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4617f9cddc0ffd28b6d11660056c560057e6441c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f76240354af9e8a2dfffbb4205e686d0e5ef081", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfEkzSCRBK7hj4Ov3rIwAAdHIIAAKLjA9fNRN4CvC1eU1aa3K2\nu007KtnqzsdMtUv+b3Jawc7pk1Uh51qpla4ekpYyM+VlCS6BRxIMxRPHERN6Oo1b\nRCJdYeDA4NuI6l/9w9bk3hdUzxfxZJYGy86jHAh1YAC8gcYgjZtuhb+BmiFaRnK6\nYghFESqpp116N7xw+xvuNi5ZedUeIRYAJhg65FQpLfiG67UKn0Wut/t4zc2kaHbG\nKabqp7X/XVKjrA4DVKYmtmXpO9j4JGDcTixvnszBk+ehCJaQDYuI0SlOjJKyxFYC\nwEjwoU+HDKf3Sx9l8Z7nR9ImSktdQfMZM+NxNTKgSlXZ6Y9mqG7DKcnKYipQ9e0=\n=MHuo\n-----END PGP SIGNATURE-----\n", "payload": "tree 4617f9cddc0ffd28b6d11660056c560057e6441c\nparent 0d669a97e3c3c8ed0cdb0de980080115e894165e\nparent 4adb13c3a4328046688f04d4a15c8c3321ca6bfb\nauthor Manish Goregaokar <manishsmail@gmail.com> 1595034833 -0700\ncommitter GitHub <noreply@github.com> 1595034833 -0700\n\nRollup merge of #74457 - Keruspe:install, r=Mark-Simulacrum\n\nrustbuild: drop tool::should_install\n\nAlways install when the build succeeds\n\nFixes #74431\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f76240354af9e8a2dfffbb4205e686d0e5ef081", "html_url": "https://github.com/rust-lang/rust/commit/5f76240354af9e8a2dfffbb4205e686d0e5ef081", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f76240354af9e8a2dfffbb4205e686d0e5ef081/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d669a97e3c3c8ed0cdb0de980080115e894165e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d669a97e3c3c8ed0cdb0de980080115e894165e", "html_url": "https://github.com/rust-lang/rust/commit/0d669a97e3c3c8ed0cdb0de980080115e894165e"}, {"sha": "4adb13c3a4328046688f04d4a15c8c3321ca6bfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4adb13c3a4328046688f04d4a15c8c3321ca6bfb", "html_url": "https://github.com/rust-lang/rust/commit/4adb13c3a4328046688f04d4a15c8c3321ca6bfb"}], "stats": {"total": 29, "additions": 5, "deletions": 24}, "files": [{"sha": "dcdc681e87dbb010e75ee5c34eee6951bd990da1", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 5, "deletions": 24, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5f76240354af9e8a2dfffbb4205e686d0e5ef081/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f76240354af9e8a2dfffbb4205e686d0e5ef081/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=5f76240354af9e8a2dfffbb4205e686d0e5ef081", "patch": "@@ -160,11 +160,6 @@ macro_rules! install {\n                 config.extended && config.tools.as_ref()\n                     .map_or(true, |t| t.contains($path))\n             }\n-\n-            #[allow(dead_code)]\n-            fn should_install(builder: &Builder<'_>) -> bool {\n-                builder.config.tools.as_ref().map_or(false, |t| t.contains($path))\n-            }\n         }\n \n         impl Step for $name {\n@@ -211,8 +206,7 @@ install!((self, builder, _config),\n         install_cargo(builder, self.compiler.stage, self.target);\n     };\n     Rls, \"rls\", Self::should_build(_config), only_hosts: true, {\n-        if builder.ensure(dist::Rls { compiler: self.compiler, target: self.target }).is_some() ||\n-            Self::should_install(builder) {\n+        if builder.ensure(dist::Rls { compiler: self.compiler, target: self.target }).is_some() {\n             install_rls(builder, self.compiler.stage, self.target);\n         } else {\n             builder.info(\n@@ -222,27 +216,14 @@ install!((self, builder, _config),\n     };\n     RustAnalyzer, \"rust-analyzer\", Self::should_build(_config), only_hosts: true, {\n         builder.ensure(dist::RustAnalyzer { compiler: self.compiler, target: self.target });\n-        if Self::should_install(builder) {\n-            install_rust_analyzer(builder, self.compiler.stage, self.target);\n-        } else {\n-            builder.info(\n-                &format!(\"skipping Install rust-analyzer stage{} ({})\", self.compiler.stage, self.target),\n-            );\n-        }\n+        install_rust_analyzer(builder, self.compiler.stage, self.target);\n     };\n     Clippy, \"clippy\", Self::should_build(_config), only_hosts: true, {\n         builder.ensure(dist::Clippy { compiler: self.compiler, target: self.target });\n-        if Self::should_install(builder) {\n-            install_clippy(builder, self.compiler.stage, self.target);\n-        } else {\n-            builder.info(\n-                &format!(\"skipping Install clippy stage{} ({})\", self.compiler.stage, self.target),\n-            );\n-        }\n+        install_clippy(builder, self.compiler.stage, self.target);\n     };\n     Miri, \"miri\", Self::should_build(_config), only_hosts: true, {\n-        if builder.ensure(dist::Miri { compiler: self.compiler, target: self.target }).is_some() ||\n-            Self::should_install(builder) {\n+        if builder.ensure(dist::Miri { compiler: self.compiler, target: self.target }).is_some() {\n             install_miri(builder, self.compiler.stage, self.target);\n         } else {\n             builder.info(\n@@ -254,7 +235,7 @@ install!((self, builder, _config),\n         if builder.ensure(dist::Rustfmt {\n             compiler: self.compiler,\n             target: self.target\n-        }).is_some() || Self::should_install(builder) {\n+        }).is_some() {\n             install_rustfmt(builder, self.compiler.stage, self.target);\n         } else {\n             builder.info("}]}