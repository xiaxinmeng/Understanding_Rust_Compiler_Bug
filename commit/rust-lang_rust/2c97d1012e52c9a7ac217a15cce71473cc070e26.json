{"sha": "2c97d1012e52c9a7ac217a15cce71473cc070e26", "node_id": "C_kwDOAAsO6NoAKDJjOTdkMTAxMmU1MmM5YTdhYzIxN2ExNWNjZTcxNDczY2MwNzBlMjY", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-01-28T09:20:58Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-01-28T09:40:59Z"}, "message": "Fix wrong assumption in `DecodeUtf16::size_hint`\n\n`self.buf` can contain a surrogate, but only a leading one.", "tree": {"sha": "d1b1d9629a1b84fbf208d64fc00687ff45df1af3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1b1d9629a1b84fbf208d64fc00687ff45df1af3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c97d1012e52c9a7ac217a15cce71473cc070e26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c97d1012e52c9a7ac217a15cce71473cc070e26", "html_url": "https://github.com/rust-lang/rust/commit/2c97d1012e52c9a7ac217a15cce71473cc070e26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c97d1012e52c9a7ac217a15cce71473cc070e26/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c8cd1ff376568ffe41ee94f2c99a0d3d83262d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c8cd1ff376568ffe41ee94f2c99a0d3d83262d5", "html_url": "https://github.com/rust-lang/rust/commit/9c8cd1ff376568ffe41ee94f2c99a0d3d83262d5"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "81d49ffe06e6d373bf2c5ac84c6a87d1d149c2cc", "filename": "library/core/src/char/decode.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2c97d1012e52c9a7ac217a15cce71473cc070e26/library%2Fcore%2Fsrc%2Fchar%2Fdecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c97d1012e52c9a7ac217a15cce71473cc070e26/library%2Fcore%2Fsrc%2Fchar%2Fdecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fchar%2Fdecode.rs?ref=2c97d1012e52c9a7ac217a15cce71473cc070e26", "patch": "@@ -121,10 +121,15 @@ impl<I: Iterator<Item = u16>> Iterator for DecodeUtf16<I> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         let (low, high) = self.iter.size_hint();\n \n-        // `self.buf` will never contain the first part of a surrogate,\n-        // so the presence of `buf == Some(...)` always means +1\n-        // on lower and upper bound.\n-        let addition_from_buf = self.buf.is_some() as usize;\n+        // If\n+        // - `self.buf` contains a non surrogate (`u < 0xD800 || 0xDFFF < u`), or\n+        // - `high == Some(0)` (and `self.buf` contains a leading surrogate since\n+        //   it can never contain a trailing surrogate)\n+        //\n+        // then buf contains an additional character or error that doesn't\n+        // need a pair from `self.iter`, so it's +1 additional element.\n+        let addition_from_buf =\n+            self.buf.map_or(false, |u| u < 0xD800 || 0xDFFF < u || high == Some(0)) as usize;\n \n         // `self.iter` could contain entirely valid surrogates (2 elements per\n         // char), or entirely non-surrogates (1 element per char)."}, {"sha": "347ac04feb31c009a9f3955d72e00c85ded76b14", "filename": "library/core/tests/char.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2c97d1012e52c9a7ac217a15cce71473cc070e26/library%2Fcore%2Ftests%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c97d1012e52c9a7ac217a15cce71473cc070e26/library%2Fcore%2Ftests%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fchar.rs?ref=2c97d1012e52c9a7ac217a15cce71473cc070e26", "patch": "@@ -319,7 +319,7 @@ fn test_decode_utf16_size_hint() {\n \n             assert!(\n                 lower <= count && count <= upper.unwrap(),\n-                \"lower = {lower}, upper = {upper:?}\"\n+                \"lower = {lower}, count = {count}, upper = {upper:?}\"\n             );\n \n             if let None = iter.next() {\n@@ -328,6 +328,7 @@ fn test_decode_utf16_size_hint() {\n         }\n     }\n \n+    check(&[0xD800, 0xD800, 0xDC00]);\n     check(&[0xD800, 0x41, 0x42]);\n     check(&[0xD800, 0]);\n     check(&[0xD834, 0x006d]);"}]}