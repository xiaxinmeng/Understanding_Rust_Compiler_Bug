{"sha": "7702f690a9592605be71104ec9d0b732af940fcc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MDJmNjkwYTk1OTI2MDViZTcxMTA0ZWM5ZDBiNzMyYWY5NDBmY2M=", "commit": {"author": {"name": "ice1000", "email": "ice1000kotlin@foxmail.com", "date": "2019-12-05T13:28:31Z"}, "committer": {"name": "ice1000", "email": "ice1000kotlin@foxmail.com", "date": "2019-12-05T13:28:31Z"}, "message": "One pub function less is good!", "tree": {"sha": "3ba9e21961170598f800ea24ed1f5a1a6b345ffa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ba9e21961170598f800ea24ed1f5a1a6b345ffa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7702f690a9592605be71104ec9d0b732af940fcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7702f690a9592605be71104ec9d0b732af940fcc", "html_url": "https://github.com/rust-lang/rust/commit/7702f690a9592605be71104ec9d0b732af940fcc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7702f690a9592605be71104ec9d0b732af940fcc/comments", "author": {"login": "ice1000", "id": 16398479, "node_id": "MDQ6VXNlcjE2Mzk4NDc5", "avatar_url": "https://avatars.githubusercontent.com/u/16398479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ice1000", "html_url": "https://github.com/ice1000", "followers_url": "https://api.github.com/users/ice1000/followers", "following_url": "https://api.github.com/users/ice1000/following{/other_user}", "gists_url": "https://api.github.com/users/ice1000/gists{/gist_id}", "starred_url": "https://api.github.com/users/ice1000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ice1000/subscriptions", "organizations_url": "https://api.github.com/users/ice1000/orgs", "repos_url": "https://api.github.com/users/ice1000/repos", "events_url": "https://api.github.com/users/ice1000/events{/privacy}", "received_events_url": "https://api.github.com/users/ice1000/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ice1000", "id": 16398479, "node_id": "MDQ6VXNlcjE2Mzk4NDc5", "avatar_url": "https://avatars.githubusercontent.com/u/16398479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ice1000", "html_url": "https://github.com/ice1000", "followers_url": "https://api.github.com/users/ice1000/followers", "following_url": "https://api.github.com/users/ice1000/following{/other_user}", "gists_url": "https://api.github.com/users/ice1000/gists{/gist_id}", "starred_url": "https://api.github.com/users/ice1000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ice1000/subscriptions", "organizations_url": "https://api.github.com/users/ice1000/orgs", "repos_url": "https://api.github.com/users/ice1000/repos", "events_url": "https://api.github.com/users/ice1000/events{/privacy}", "received_events_url": "https://api.github.com/users/ice1000/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "762915826ac6893036f8b5cd5e63677ed862f6d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/762915826ac6893036f8b5cd5e63677ed862f6d9", "html_url": "https://github.com/rust-lang/rust/commit/762915826ac6893036f8b5cd5e63677ed862f6d9"}], "stats": {"total": 19, "additions": 7, "deletions": 12}, "files": [{"sha": "18d87f6d70ce1ff5b3d767f4dcb9091cc129de97", "filename": "crates/ra_hir/src/from_source.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7702f690a9592605be71104ec9d0b732af940fcc/crates%2Fra_hir%2Fsrc%2Ffrom_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7702f690a9592605be71104ec9d0b732af940fcc/crates%2Fra_hir%2Fsrc%2Ffrom_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Ffrom_source.rs?ref=7702f690a9592605be71104ec9d0b732af940fcc", "patch": "@@ -235,11 +235,10 @@ impl Module {\n                 let src_parent = InFile { file_id: src.file_id, value: parent_declaration };\n                 Module::from_declaration(db, src_parent)\n             }\n-            _ => {\n-                let src_parent = InFile {\n-                    file_id: src.file_id,\n-                    value: ModuleSource::from_file_id(db, src.file_id.original_file(db)),\n-                };\n+            None => {\n+                let source_file = db.parse(src.file_id.original_file(db)).tree();\n+                let src_parent =\n+                    InFile { file_id: src.file_id, value: ModuleSource::SourceFile(source_file) };\n                 Module::from_definition(db, src_parent)\n             }\n         }?;"}, {"sha": "0a2b32bbde7ea7a0bba6caba8eb91491a3e158cf", "filename": "crates/ra_hir_def/src/nameres.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7702f690a9592605be71104ec9d0b732af940fcc/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7702f690a9592605be71104ec9d0b732af940fcc/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs?ref=7702f690a9592605be71104ec9d0b732af940fcc", "patch": "@@ -390,11 +390,6 @@ impl ModuleSource {\n             ModuleSource::SourceFile(source_file)\n         }\n     }\n-\n-    pub fn from_file_id(db: &impl DefDatabase, file_id: FileId) -> ModuleSource {\n-        let source_file = db.parse(file_id).tree();\n-        ModuleSource::SourceFile(source_file)\n-    }\n }\n \n mod diagnostics {"}, {"sha": "aef3fa3df01fcb417a598dc2c3bfbb8df202cd2e", "filename": "crates/ra_ide/src/parent_module.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7702f690a9592605be71104ec9d0b732af940fcc/crates%2Fra_ide%2Fsrc%2Fparent_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7702f690a9592605be71104ec9d0b732af940fcc/crates%2Fra_ide%2Fsrc%2Fparent_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fparent_module.rs?ref=7702f690a9592605be71104ec9d0b732af940fcc", "patch": "@@ -1,6 +1,6 @@\n //! FIXME: write short doc here\n \n-use ra_db::{CrateId, FileId, FilePosition};\n+use ra_db::{CrateId, FileId, FilePosition, SourceDatabase};\n \n use crate::{db::RootDatabase, NavigationTarget};\n \n@@ -21,7 +21,8 @@ pub(crate) fn parent_module(db: &RootDatabase, position: FilePosition) -> Vec<Na\n \n /// Returns `Vec` for the same reason as `parent_module`\n pub(crate) fn crate_for(db: &RootDatabase, file_id: FileId) -> Vec<CrateId> {\n-    let src = hir::ModuleSource::from_file_id(db, file_id);\n+    let source_file = db.parse(file_id).tree();\n+    let src = hir::ModuleSource::SourceFile(source_file);\n     let module =\n         match hir::Module::from_definition(db, hir::InFile { file_id: file_id.into(), value: src })\n         {"}]}