{"sha": "190179489d7e19043c1cd087d4d4fc9035614227", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MDE3OTQ4OWQ3ZTE5MDQzYzFjZDA4N2Q0ZDRmYzkwMzU2MTQyMjc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-06T15:41:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-06T15:41:09Z"}, "message": "Merge #3496\n\n3496: Less confusing profile names r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "637cf6dfb29d0b7d0ecee76a348e65187bdfc2ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/637cf6dfb29d0b7d0ecee76a348e65187bdfc2ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/190179489d7e19043c1cd087d4d4fc9035614227", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeYm8VCRBK7hj4Ov3rIwAAdHIIACXuImk7Sgcboig723k+zmJe\nZTdxEWYQ3P9CvD7FBgvxwK+jnOulKlAF5igLyMknF6gcDu5BfcKPJU+Z33JMVuQ4\nurFL/oXGH+tclnk/Scmq2JL/Zv5lJh7NZyxOWrVFeMPpFMtY6QpR+NVzFbmZ7rM6\n42zmXKqIKFrg7N+CferS805fTLUPvhtNKY7+Zln27V5hmhouk82lSdFkwT8oU5qF\nP6zB+HBiYoQNdDvLGWCDrJgHDFk69/oE3GRnedrNV7CaVFxfGj0X6m0D8wyCyK13\n4b5N99hzbn8jJ5qNt+Wv8xbsoIiIszvDU5XSnbnmng1rrDXGNxRPmRUXRUZtGLU=\n=cRAO\n-----END PGP SIGNATURE-----\n", "payload": "tree 637cf6dfb29d0b7d0ecee76a348e65187bdfc2ba\nparent aa82b5915de32f582b58cd25816bc3be69aa75c7\nparent 59f91f2f9ba4cb6fa86fccb8a427cb9af2ecd192\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1583509269 +0000\ncommitter GitHub <noreply@github.com> 1583509269 +0000\n\nMerge #3496\n\n3496: Less confusing profile names r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/190179489d7e19043c1cd087d4d4fc9035614227", "html_url": "https://github.com/rust-lang/rust/commit/190179489d7e19043c1cd087d4d4fc9035614227", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/190179489d7e19043c1cd087d4d4fc9035614227/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa82b5915de32f582b58cd25816bc3be69aa75c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa82b5915de32f582b58cd25816bc3be69aa75c7", "html_url": "https://github.com/rust-lang/rust/commit/aa82b5915de32f582b58cd25816bc3be69aa75c7"}, {"sha": "59f91f2f9ba4cb6fa86fccb8a427cb9af2ecd192", "url": "https://api.github.com/repos/rust-lang/rust/commits/59f91f2f9ba4cb6fa86fccb8a427cb9af2ecd192", "html_url": "https://github.com/rust-lang/rust/commit/59f91f2f9ba4cb6fa86fccb8a427cb9af2ecd192"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2338b2cbe0a909749409d71224f6c8aa3797ec3e", "filename": "crates/ra_hir_def/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/190179489d7e19043c1cd087d4d4fc9035614227/crates%2Fra_hir_def%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/190179489d7e19043c1cd087d4d4fc9035614227/crates%2Fra_hir_def%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fdb.rs?ref=190179489d7e19043c1cd087d4d4fc9035614227", "patch": "@@ -110,6 +110,6 @@ pub trait DefDatabase: InternDatabase + AstDatabase {\n }\n \n fn crate_def_map(db: &impl DefDatabase, krate: CrateId) -> Arc<CrateDefMap> {\n-    let _p = profile(\"crate_def_map\");\n+    let _p = profile(\"wait_crate_def_map\");\n     db.compute_crate_def_map(krate)\n }"}, {"sha": "166d1c421af3e6ab3fb7ea903db371a582082ba3", "filename": "crates/ra_hir_def/src/nameres.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/190179489d7e19043c1cd087d4d4fc9035614227/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/190179489d7e19043c1cd087d4d4fc9035614227/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs?ref=190179489d7e19043c1cd087d4d4fc9035614227", "patch": "@@ -182,7 +182,7 @@ impl CrateDefMap {\n         db: &impl DefDatabase,\n         krate: CrateId,\n     ) -> Arc<CrateDefMap> {\n-        let _p = profile(\"compute_crate_def_map\");\n+        let _p = profile(\"crate_def_map\");\n         let def_map = {\n             let crate_graph = db.crate_graph();\n             let edition = crate_graph.edition(krate);"}, {"sha": "c43619d1c94c7a899eac0a6a3d2c28c2185f5cee", "filename": "crates/ra_hir_ty/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/190179489d7e19043c1cd087d4d4fc9035614227/crates%2Fra_hir_ty%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/190179489d7e19043c1cd087d4d4fc9035614227/crates%2Fra_hir_ty%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdb.rs?ref=190179489d7e19043c1cd087d4d4fc9035614227", "patch": "@@ -111,7 +111,7 @@ pub trait HirDatabase: DefDatabase {\n }\n \n fn infer(db: &impl HirDatabase, def: DefWithBodyId) -> Arc<InferenceResult> {\n-    let _p = profile(\"infer\");\n+    let _p = profile(\"wait_infer\");\n     db.do_infer(def)\n }\n "}, {"sha": "437086ff6f17cfe557af93b9ee07e4794ead0e19", "filename": "crates/ra_hir_ty/src/infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/190179489d7e19043c1cd087d4d4fc9035614227/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/190179489d7e19043c1cd087d4d4fc9035614227/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs?ref=190179489d7e19043c1cd087d4d4fc9035614227", "patch": "@@ -64,7 +64,7 @@ mod coerce;\n \n /// The entry point of type inference.\n pub fn do_infer_query(db: &impl HirDatabase, def: DefWithBodyId) -> Arc<InferenceResult> {\n-    let _p = profile(\"do_infer\");\n+    let _p = profile(\"infer\");\n     let resolver = def.resolver(db);\n     let mut ctx = InferenceContext::new(db, def, resolver);\n "}]}