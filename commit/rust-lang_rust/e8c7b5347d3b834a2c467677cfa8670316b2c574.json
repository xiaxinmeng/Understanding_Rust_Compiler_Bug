{"sha": "e8c7b5347d3b834a2c467677cfa8670316b2c574", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4YzdiNTM0N2QzYjgzNGEyYzQ2NzY3N2NmYTg2NzAzMTZiMmM1NzQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-10T01:38:57Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-10T01:39:32Z"}, "message": "rustc: Add a region checking pass\n\nErrors aren't reported yet, because the regions aren't properly inferred from the & operator at the moment and that would break the tests.", "tree": {"sha": "404529f023d41b70efd960bbfa9066e10e5707fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/404529f023d41b70efd960bbfa9066e10e5707fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8c7b5347d3b834a2c467677cfa8670316b2c574", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8c7b5347d3b834a2c467677cfa8670316b2c574", "html_url": "https://github.com/rust-lang/rust/commit/e8c7b5347d3b834a2c467677cfa8670316b2c574", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8c7b5347d3b834a2c467677cfa8670316b2c574/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0905ad2bbe66d11e73a6bef723d14c0e022c0943", "url": "https://api.github.com/repos/rust-lang/rust/commits/0905ad2bbe66d11e73a6bef723d14c0e022c0943", "html_url": "https://github.com/rust-lang/rust/commit/0905ad2bbe66d11e73a6bef723d14c0e022c0943"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "ca7028e5e9eb5c8570ea30f2ed632e8937ea173b", "filename": "src/rustc/driver/driver.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8c7b5347d3b834a2c467677cfa8670316b2c574/src%2Frustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8c7b5347d3b834a2c467677cfa8670316b2c574/src%2Frustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fdriver%2Fdriver.rs?ref=e8c7b5347d3b834a2c467677cfa8670316b2c574", "patch": "@@ -163,6 +163,8 @@ fn compile_upto(sess: session, cfg: ast::crate_cfg,\n     let mutbl_map =\n         time(time_passes, \"mutability checking\",\n              bind middle::mutbl::check_crate(ty_cx, crate));\n+    time(time_passes, \"region checking\",\n+         bind middle::regionck::check_crate(ty_cx, crate));\n     let (copy_map, ref_map) =\n         time(time_passes, \"alias checking\",\n              bind middle::alias::check_crate(ty_cx, crate));"}, {"sha": "9a31d2c2a29031ef3966d9428d870dffcd449a88", "filename": "src/rustc/middle/regionck.rs", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/e8c7b5347d3b834a2c467677cfa8670316b2c574/src%2Frustc%2Fmiddle%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8c7b5347d3b834a2c467677cfa8670316b2c574/src%2Frustc%2Fmiddle%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fregionck.rs?ref=e8c7b5347d3b834a2c467677cfa8670316b2c574", "patch": "@@ -0,0 +1,71 @@\n+/*\n+ * The region checking pass. Ensures that region-annotated pointers never\n+ * outlive their referents.\n+ */\n+\n+import driver::session::session;\n+import middle::ty;\n+import std::map::hashmap;\n+import syntax::{ast, visit};\n+\n+type ctxt = {\n+    tcx: ty::ctxt,\n+    enclosing_block: option<ast::node_id>\n+};\n+\n+fn check_expr(expr: @ast::expr, cx: ctxt, visitor: visit::vt<ctxt>) {\n+    ty::walk_ty(cx.tcx, ty::expr_ty(cx.tcx, expr)) { |t|\n+        alt ty::get(t).struct {\n+            ty::ty_rptr(region, _) {\n+                alt region {\n+                    ty::re_named(_) | ty::re_caller(_) { /* ok */ }\n+                    ty::re_block(rbi) {\n+                        let referent_block_id = rbi;\n+                        let enclosing_block_id = alt cx.enclosing_block {\n+                            none {\n+                                cx.tcx.sess.span_bug(expr.span, \"block \" +\n+                                                     \"region type outside \" +\n+                                                     \"a block?!\");\n+                            }\n+                            some(eb) { eb }\n+                        };\n+\n+                        let parent_blocks = cx.tcx.region_map.parent_blocks;\n+                        while enclosing_block_id != referent_block_id {\n+                            if parent_blocks.contains_key(referent_block_id) {\n+                                referent_block_id =\n+                                    parent_blocks.get(referent_block_id);\n+                            } else {\n+                                // TODO: Enable this.\n+\n+                                //cx.tcx.sess.span_err(expr.span,\n+                                //                     \"reference escapes \" +\n+                                //                     \"its block\");\n+                                break;\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+            _ { /* no-op */ }\n+        }\n+    }\n+\n+    visit::visit_expr(expr, cx, visitor);\n+}\n+\n+fn check_block(blk: ast::blk, cx: ctxt, visitor: visit::vt<ctxt>) {\n+    let new_cx: ctxt = { enclosing_block: some(blk.node.id) with cx };\n+    visit::visit_block(blk, new_cx, visitor);\n+}\n+\n+fn check_crate(ty_cx: ty::ctxt, crate: @ast::crate) {\n+    let cx: ctxt = {tcx: ty_cx, enclosing_block: none};\n+    let visitor = visit::mk_vt(@{\n+        visit_expr: check_expr,\n+        visit_block: check_block\n+        with *visit::default_visitor()\n+    });\n+    visit::visit_crate(*crate, cx, visitor);\n+}\n+"}, {"sha": "4a512e059c18a694b5e831900f2bb12dba0ae88c", "filename": "src/rustc/rustc.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e8c7b5347d3b834a2c467677cfa8670316b2c574/src%2Frustc%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/e8c7b5347d3b834a2c467677cfa8670316b2c574/src%2Frustc%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Frustc.rc?ref=e8c7b5347d3b834a2c467677cfa8670316b2c574", "patch": "@@ -45,6 +45,7 @@ mod middle {\n     mod capture;\n     mod pat_util;\n     mod region;\n+    mod regionck;\n \n     mod tstate {\n         mod ck;"}]}