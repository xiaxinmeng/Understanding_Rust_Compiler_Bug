{"sha": "6061752853a672e3058ba763b1fc5b310796ab93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNjE3NTI4NTNhNjcyZTMwNThiYTc2M2IxZmM1YjMxMDc5NmFiOTM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-06-26T07:39:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-26T07:39:14Z"}, "message": "Rollup merge of #73707 - LeSeulArtichaut:patch-3, r=kennytm\n\nFix links in `SliceIndex` documentation\n\nSee [this doc](https://doc.rust-lang.org/nightly/std/slice/trait.SliceIndex.html#tymethod.get_unchecked) whose links aren't active because of this missing newline.", "tree": {"sha": "81c2477007658226d2737c2c21e582bc1ded3339", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81c2477007658226d2737c2c21e582bc1ded3339"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6061752853a672e3058ba763b1fc5b310796ab93", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe9aYiCRBK7hj4Ov3rIwAAdHIIAAlAq+WltXdiOFcO8m1wfsPV\nt5r8a5sP0RB+kS5AUSCc3o9oq01kl0LqpiZM4JxglpBxlQbkxUQZUYHRSf2ZJZ8a\nAJSxqAh77XwsMbGp13bZUU5bKdI4PlB++SqCWmvL9upxp5FAHIo4nQJUWy5HdoXy\nFdsJ0ZtDDIv6WqdemX7ndbdq3es927UYHniF9+mboIUMjWVJuVAX/HxqT9L0b9MO\nPGEnoFqoATwJgm5nrYMenLOw3U+zLnoGVshMMQ69CjcITL6yY+c1kiUlqRAq+fHT\ntixeFhhRw/8cyLWcjvn8qErl3b9C4+T54HXK2wVKuidH9U7ItzBlMe5LsxOezHo=\n=6M9p\n-----END PGP SIGNATURE-----\n", "payload": "tree 81c2477007658226d2737c2c21e582bc1ded3339\nparent 1755e3b05cd5d8d8771bb72f8e42b632b4c8fbc3\nparent 2735f43cef6b00ac4ca2d59f07830a25513031a9\nauthor Manish Goregaokar <manishsmail@gmail.com> 1593157154 -0700\ncommitter GitHub <noreply@github.com> 1593157154 -0700\n\nRollup merge of #73707 - LeSeulArtichaut:patch-3, r=kennytm\n\nFix links in `SliceIndex` documentation\n\nSee [this doc](https://doc.rust-lang.org/nightly/std/slice/trait.SliceIndex.html#tymethod.get_unchecked) whose links aren't active because of this missing newline.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6061752853a672e3058ba763b1fc5b310796ab93", "html_url": "https://github.com/rust-lang/rust/commit/6061752853a672e3058ba763b1fc5b310796ab93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6061752853a672e3058ba763b1fc5b310796ab93/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1755e3b05cd5d8d8771bb72f8e42b632b4c8fbc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1755e3b05cd5d8d8771bb72f8e42b632b4c8fbc3", "html_url": "https://github.com/rust-lang/rust/commit/1755e3b05cd5d8d8771bb72f8e42b632b4c8fbc3"}, {"sha": "2735f43cef6b00ac4ca2d59f07830a25513031a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2735f43cef6b00ac4ca2d59f07830a25513031a9", "html_url": "https://github.com/rust-lang/rust/commit/2735f43cef6b00ac4ca2d59f07830a25513031a9"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "57bacdd99eff448489a0524c72c3fdd6fb116587", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6061752853a672e3058ba763b1fc5b310796ab93/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6061752853a672e3058ba763b1fc5b310796ab93/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=6061752853a672e3058ba763b1fc5b310796ab93", "patch": "@@ -2817,6 +2817,7 @@ pub trait SliceIndex<T: ?Sized>: private_slice_index::Sealed {\n     /// performing any bounds checking.\n     /// Calling this method with an out-of-bounds index is *[undefined behavior]*\n     /// even if the resulting reference is not used.\n+    ///\n     /// [undefined behavior]: ../../reference/behavior-considered-undefined.html\n     #[unstable(feature = \"slice_index_methods\", issue = \"none\")]\n     unsafe fn get_unchecked(self, slice: &T) -> &Self::Output;\n@@ -2825,6 +2826,7 @@ pub trait SliceIndex<T: ?Sized>: private_slice_index::Sealed {\n     /// performing any bounds checking.\n     /// Calling this method with an out-of-bounds index is *[undefined behavior]*\n     /// even if the resulting reference is not used.\n+    ///\n     /// [undefined behavior]: ../../reference/behavior-considered-undefined.html\n     #[unstable(feature = \"slice_index_methods\", issue = \"none\")]\n     unsafe fn get_unchecked_mut(self, slice: &mut T) -> &mut Self::Output;"}]}