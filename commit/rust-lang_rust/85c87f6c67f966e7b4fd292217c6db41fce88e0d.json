{"sha": "85c87f6c67f966e7b4fd292217c6db41fce88e0d", "node_id": "C_kwDOAAsO6NoAKDg1Yzg3ZjZjNjdmOTY2ZTdiNGZkMjkyMjE3YzZkYjQxZmNlODhlMGQ", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-05-29T15:37:05Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-06-22T04:42:56Z"}, "message": "Add bootstrap to tidy check", "tree": {"sha": "87eebf1e27072aec266863d086414da9a17107c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87eebf1e27072aec266863d086414da9a17107c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85c87f6c67f966e7b4fd292217c6db41fce88e0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85c87f6c67f966e7b4fd292217c6db41fce88e0d", "html_url": "https://github.com/rust-lang/rust/commit/85c87f6c67f966e7b4fd292217c6db41fce88e0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85c87f6c67f966e7b4fd292217c6db41fce88e0d/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cde0f7877bda27e13da269ff7e6171831c84ec1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cde0f7877bda27e13da269ff7e6171831c84ec1", "html_url": "https://github.com/rust-lang/rust/commit/9cde0f7877bda27e13da269ff7e6171831c84ec1"}], "stats": {"total": 110, "additions": 106, "deletions": 4}, "files": [{"sha": "859d35b7d7ba1b9a8b63dfc45a86cd866cd0fa3f", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85c87f6c67f966e7b4fd292217c6db41fce88e0d/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85c87f6c67f966e7b4fd292217c6db41fce88e0d/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=85c87f6c67f966e7b4fd292217c6db41fce88e0d", "patch": "@@ -549,7 +549,7 @@ impl Build {\n         ];\n         for s in rust_submodules {\n             build.update_submodule(Path::new(s));\n-        } \n+        }\n \n         build.verbose(\"learning about cargo\");\n         metadata::build(&mut build);"}, {"sha": "c66ecda937d00781fc31275920c645d24c2faefe", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 105, "deletions": 3, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/85c87f6c67f966e7b4fd292217c6db41fce88e0d/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85c87f6c67f966e7b4fd292217c6db41fce88e0d/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=85c87f6c67f966e7b4fd292217c6db41fce88e0d", "patch": "@@ -63,6 +63,10 @@ const EXCEPTIONS_CRANELIFT: &[(&str, &str)] = &[\n     (\"target-lexicon\", \"Apache-2.0 WITH LLVM-exception\"),\n ];\n \n+const EXCEPTIONS_BOOTSTRAP: &[(&str, &str)] = &[\n+    (\"ryu\", \"Apache-2.0 OR BSL-1.0\"), // through serde\n+];\n+\n /// These are the root crates that are part of the runtime. The licenses for\n /// these and all their dependencies *must not* be in the exception list.\n const RUNTIME_CRATES: &[&str] = &[\"std\", \"core\", \"alloc\", \"test\", \"panic_abort\", \"panic_unwind\"];\n@@ -96,7 +100,6 @@ const PERMITTED_DEPENDENCIES: &[&str] = &[\n     \"chalk-ir\",\n     \"chalk-solve\",\n     \"chrono\",\n-    \"cmake\",\n     \"compiler_builtins\",\n     \"cpufeatures\",\n     \"crc32fast\",\n@@ -290,6 +293,82 @@ const PERMITTED_CRANELIFT_DEPENDENCIES: &[&str] = &[\n     \"winapi-x86_64-pc-windows-gnu\",\n ];\n \n+const PERMITTED_BOOTSTRAP_DEPENDENCIES: &[&str] = &[\n+    \"aho-corasick\",\n+    \"autocfg\",\n+    \"ansi_term\",\n+    \"block-buffer\",\n+    \"bitflags\",\n+    \"bstr\",\n+    \"core-foundation-sys\",\n+    \"cc\",\n+    \"cfg-if\",\n+    \"crossbeam-utils\",\n+    \"cmake\",\n+    \"cpufeatures\",\n+    \"crossbeam-channel\",\n+    \"crossbeam-deque\",\n+    \"crossbeam-epoch\",\n+    \"crypto-common\",\n+    \"ctor\",\n+    \"diff\",\n+    \"digest\",\n+    \"either\",\n+    \"filetime\",\n+    \"fnv\",\n+    \"getopts\",\n+    \"generic-array\",\n+    \"globset\",\n+    \"hermit-abi\",\n+    \"hex\",\n+    \"ignore\",\n+    \"itoa\",\n+    \"lazy_static\",\n+    \"libc\",\n+    \"log\",\n+    \"lzma-sys\",\n+    \"memchr\",\n+    \"memoffset\",\n+    \"ntapi\",\n+    \"num_cpus\",\n+    \"once_cell\",\n+    \"opener\",\n+    \"output_vt100\",\n+    \"pkg-config\",\n+    \"pretty_assertions\",\n+    \"proc-macro2\",\n+    \"quote\",\n+    \"rayon\",\n+    \"rayon-core\",\n+    \"redox_syscall\",\n+    \"regex\",\n+    \"regex-automata\",\n+    \"regex-syntax\",\n+    \"ryu\",\n+    \"same-file\",\n+    \"scopeguard\",\n+    \"serde\",\n+    \"serde_derive\",\n+    \"serde_json\",\n+    \"sha2\",\n+    \"syn\",\n+    \"sysinfo\",\n+    \"tar\",\n+    \"thread_local\",\n+    \"toml\",\n+    \"typenum\",\n+    \"unicode-ident\",\n+    \"unicode-width\",\n+    \"version_check\",\n+    \"walkdir\",\n+    \"winapi\",\n+    \"winapi-i686-pc-windows-gnu\",\n+    \"winapi-util\",\n+    \"winapi-x86_64-pc-windows-gnu\",\n+    \"xattr\",\n+    \"xz2\",\n+];\n+\n const FORBIDDEN_TO_HAVE_DUPLICATES: &[&str] = &[\n     // These two crates take quite a long time to build, so don't allow two versions of them\n     // to accidentally sneak into our dependency graph, in order to ensure we keep our CI times\n@@ -309,7 +388,13 @@ pub fn check(root: &Path, cargo: &Path, bad: &mut bool) {\n     let metadata = t!(cmd.exec());\n     let runtime_ids = compute_runtime_crates(&metadata);\n     check_exceptions(&metadata, EXCEPTIONS, runtime_ids, bad);\n-    check_dependencies(&metadata, PERMITTED_DEPENDENCIES, RESTRICTED_DEPENDENCY_CRATES, bad);\n+    check_dependencies(\n+        &metadata,\n+        \"main workspace\",\n+        PERMITTED_DEPENDENCIES,\n+        RESTRICTED_DEPENDENCY_CRATES,\n+        bad,\n+    );\n     check_crate_duplicate(&metadata, FORBIDDEN_TO_HAVE_DUPLICATES, bad);\n     check_rustfix(&metadata, bad);\n \n@@ -323,11 +408,27 @@ pub fn check(root: &Path, cargo: &Path, bad: &mut bool) {\n     check_exceptions(&metadata, EXCEPTIONS_CRANELIFT, runtime_ids, bad);\n     check_dependencies(\n         &metadata,\n+        \"cranelift\",\n         PERMITTED_CRANELIFT_DEPENDENCIES,\n         &[\"rustc_codegen_cranelift\"],\n         bad,\n     );\n     check_crate_duplicate(&metadata, &[], bad);\n+\n+    let mut cmd = cargo_metadata::MetadataCommand::new();\n+    cmd.cargo_path(cargo)\n+        .manifest_path(root.join(\"src/bootstrap/Cargo.toml\"))\n+        .features(cargo_metadata::CargoOpt::AllFeatures);\n+    let metadata = t!(cmd.exec());\n+    let runtime_ids = HashSet::new();\n+    check_exceptions(&metadata, EXCEPTIONS_BOOTSTRAP, runtime_ids, bad);\n+    check_dependencies(\n+        &metadata,\n+        \"bootstrap\",\n+        PERMITTED_BOOTSTRAP_DEPENDENCIES,\n+        &[\"bootstrap\"],\n+        bad,\n+    );\n }\n \n /// Check that all licenses are in the valid list in `LICENSES`.\n@@ -409,6 +510,7 @@ fn check_exceptions(\n /// Specifically, this checks that the dependencies are on the `PERMITTED_DEPENDENCIES`.\n fn check_dependencies(\n     metadata: &Metadata,\n+    descr: &str,\n     permitted_dependencies: &[&'static str],\n     restricted_dependency_crates: &[&'static str],\n     bad: &mut bool,\n@@ -438,7 +540,7 @@ fn check_dependencies(\n     }\n \n     if !unapproved.is_empty() {\n-        tidy_error!(bad, \"Dependencies not explicitly permitted:\");\n+        tidy_error!(bad, \"Dependencies for {} not explicitly permitted:\", descr);\n         for dep in unapproved {\n             println!(\"* {dep}\");\n         }"}]}