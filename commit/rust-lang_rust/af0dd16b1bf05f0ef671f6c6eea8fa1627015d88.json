{"sha": "af0dd16b1bf05f0ef671f6c6eea8fa1627015d88", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMGRkMTZiMWJmMDVmMGVmNjcxZjZjNmVlYThmYTE2MjcwMTVkODg=", "commit": {"author": {"name": "mdinger", "email": "mdinger.bugzilla@gmail.com", "date": "2014-04-30T13:10:15Z"}, "committer": {"name": "mdinger", "email": "mdinger.bugzilla@gmail.com", "date": "2014-04-30T13:10:15Z"}, "message": "Fix typo", "tree": {"sha": "2f99aad052a9142b41a4aa695071d57791f3b5ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f99aad052a9142b41a4aa695071d57791f3b5ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af0dd16b1bf05f0ef671f6c6eea8fa1627015d88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af0dd16b1bf05f0ef671f6c6eea8fa1627015d88", "html_url": "https://github.com/rust-lang/rust/commit/af0dd16b1bf05f0ef671f6c6eea8fa1627015d88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af0dd16b1bf05f0ef671f6c6eea8fa1627015d88/comments", "author": {"login": "mdinger", "id": 4156987, "node_id": "MDQ6VXNlcjQxNTY5ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/4156987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdinger", "html_url": "https://github.com/mdinger", "followers_url": "https://api.github.com/users/mdinger/followers", "following_url": "https://api.github.com/users/mdinger/following{/other_user}", "gists_url": "https://api.github.com/users/mdinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdinger/subscriptions", "organizations_url": "https://api.github.com/users/mdinger/orgs", "repos_url": "https://api.github.com/users/mdinger/repos", "events_url": "https://api.github.com/users/mdinger/events{/privacy}", "received_events_url": "https://api.github.com/users/mdinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mdinger", "id": 4156987, "node_id": "MDQ6VXNlcjQxNTY5ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/4156987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdinger", "html_url": "https://github.com/mdinger", "followers_url": "https://api.github.com/users/mdinger/followers", "following_url": "https://api.github.com/users/mdinger/following{/other_user}", "gists_url": "https://api.github.com/users/mdinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdinger/subscriptions", "organizations_url": "https://api.github.com/users/mdinger/orgs", "repos_url": "https://api.github.com/users/mdinger/repos", "events_url": "https://api.github.com/users/mdinger/events{/privacy}", "received_events_url": "https://api.github.com/users/mdinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7d2d5876c4d26dd5941c723aad2fc53c6fcc9aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7d2d5876c4d26dd5941c723aad2fc53c6fcc9aa", "html_url": "https://github.com/rust-lang/rust/commit/f7d2d5876c4d26dd5941c723aad2fc53c6fcc9aa"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "bd1e9b27ccb0dab81524f2c0a17b7c42141746a7", "filename": "src/doc/tutorial.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af0dd16b1bf05f0ef671f6c6eea8fa1627015d88/src%2Fdoc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/af0dd16b1bf05f0ef671f6c6eea8fa1627015d88/src%2Fdoc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftutorial.md?ref=af0dd16b1bf05f0ef671f6c6eea8fa1627015d88", "patch": "@@ -1736,7 +1736,7 @@ let closure = || -> () { println!(\"{}\", x) }; // can capture enclosing scope\n \n // `fun_arg` is an invalid definition\n fn  fun_arg       (arg: int) -> () { println!(\"{}\", arg + x) }; // cannot capture enclosing scope\n-let closure_arg = |arg: int| -> () { println!(\"{}\", arg + x) }; // Can capture enclosing scope\n+let closure_arg = |arg: int| -> () { println!(\"{}\", arg + x) }; // can capture enclosing scope\n //                       ^\n // Requires a type because the implementation needs to know which `+` to use.\n // In the future, the implementation may not need the help."}]}