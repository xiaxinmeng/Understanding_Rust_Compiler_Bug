{"sha": "4ad04ad8419577f5dec37a80f3b46506edb84c96", "node_id": "C_kwDOAAsO6NoAKDRhZDA0YWQ4NDE5NTc3ZjVkZWMzN2E4MGYzYjQ2NTA2ZWRiODRjOTY", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-25T16:20:55Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-22T21:41:48Z"}, "message": "Set debug location to debug operand spill.", "tree": {"sha": "97c0c99e17859229dd6a51fdb42b94d69dee8f2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97c0c99e17859229dd6a51fdb42b94d69dee8f2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ad04ad8419577f5dec37a80f3b46506edb84c96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ad04ad8419577f5dec37a80f3b46506edb84c96", "html_url": "https://github.com/rust-lang/rust/commit/4ad04ad8419577f5dec37a80f3b46506edb84c96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ad04ad8419577f5dec37a80f3b46506edb84c96/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb758cfc6d773b15af5bf65330ea7c36d7c3673d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb758cfc6d773b15af5bf65330ea7c36d7c3673d", "html_url": "https://github.com/rust-lang/rust/commit/bb758cfc6d773b15af5bf65330ea7c36d7c3673d"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "b67230cf498c4a6731b8cdd3010dcecf03676cab", "filename": "compiler/rustc_codegen_ssa/src/mir/debuginfo.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4ad04ad8419577f5dec37a80f3b46506edb84c96/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ad04ad8419577f5dec37a80f3b46506edb84c96/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fdebuginfo.rs?ref=4ad04ad8419577f5dec37a80f3b46506edb84c96", "patch": "@@ -494,6 +494,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                         let Some(dbg_loc) = self.dbg_loc(var.source_info) else { continue };\n \n                         if let Ok(operand) = self.eval_mir_constant_to_operand(bx, &c) {\n+                            self.set_debug_loc(bx, var.source_info);\n                             let base = Self::spill_operand_to_stack(\n                                 &operand,\n                                 Some(var.name.to_string()),"}]}