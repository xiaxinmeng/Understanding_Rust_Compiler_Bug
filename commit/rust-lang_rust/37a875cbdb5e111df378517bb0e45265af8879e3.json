{"sha": "37a875cbdb5e111df378517bb0e45265af8879e3", "node_id": "C_kwDOAAsO6NoAKDM3YTg3NWNiZGI1ZTExMWRmMzc4NTE3YmIwZTQ1MjY1YWY4ODc5ZTM", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-02-15T00:49:49Z"}, "committer": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-02-15T00:49:49Z"}, "message": "Try to fix codegen tests for ??? LLVM 14 ???", "tree": {"sha": "8659e7872a10f55b3bc06fa5bc11a5409470560c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8659e7872a10f55b3bc06fa5bc11a5409470560c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37a875cbdb5e111df378517bb0e45265af8879e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37a875cbdb5e111df378517bb0e45265af8879e3", "html_url": "https://github.com/rust-lang/rust/commit/37a875cbdb5e111df378517bb0e45265af8879e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37a875cbdb5e111df378517bb0e45265af8879e3/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a82adf01253aa6dc16ce979217c9404957cea6f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a82adf01253aa6dc16ce979217c9404957cea6f9", "html_url": "https://github.com/rust-lang/rust/commit/a82adf01253aa6dc16ce979217c9404957cea6f9"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "ea24569bd10c16698fe4a62ffa3d76266c5eb0ec", "filename": "tests/codegen/simd-intrinsic/simd-intrinsic-generic-bitmask.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37a875cbdb5e111df378517bb0e45265af8879e3/tests%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-bitmask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37a875cbdb5e111df378517bb0e45265af8879e3/tests%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-bitmask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-bitmask.rs?ref=37a875cbdb5e111df378517bb0e45265af8879e3", "patch": "@@ -55,7 +55,7 @@ pub unsafe fn bitmask_uint(x: u32x2) -> u8 {\n // CHECK-LABEL: @bitmask_int16\n #[no_mangle]\n pub unsafe fn bitmask_int16(x: i8x16) -> u16 {\n-    // CHECK: [[A:%[0-9]+]] = lshr <16 x i8> %{{x|1}}, <i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7>\n+    // CHECK: [[A:%[0-9]+]] = lshr <16 x i8> %{{x|1|2}}, <i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7>\n     // CHECK: [[B:%[0-9]+]] = trunc <16 x i8> [[A]] to <16 x i1>\n     // CHECK: %{{[0-9]+}} = bitcast <16 x i1> [[B]] to i16\n     // CHECK-NOT: zext"}, {"sha": "80583dec195243723c7a8541859df2324d3cadd8", "filename": "tests/codegen/simd-intrinsic/simd-intrinsic-generic-extract-insert.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/37a875cbdb5e111df378517bb0e45265af8879e3/tests%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-extract-insert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37a875cbdb5e111df378517bb0e45265af8879e3/tests%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-extract-insert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-extract-insert.rs?ref=37a875cbdb5e111df378517bb0e45265af8879e3", "patch": "@@ -21,27 +21,27 @@ extern \"platform-intrinsic\" {\n // CHECK-LABEL: @extract_m\n #[no_mangle]\n pub unsafe fn extract_m(v: M, i: u32) -> f32  {\n-    // CHECK: extractelement <4 x float> %{{v|1}}, i32 %i\n+    // CHECK: extractelement <4 x float> %{{v|1|2}}, i32 %i\n     simd_extract(v, i)\n }\n \n // CHECK-LABEL: @extract_s\n #[no_mangle]\n pub unsafe fn extract_s(v: S<4>, i: u32) -> f32  {\n-    // CHECK: extractelement <4 x float> %{{v|1}}, i32 %i\n+    // CHECK: extractelement <4 x float> %{{v|1|2}}, i32 %i\n     simd_extract(v, i)\n }\n \n // CHECK-LABEL: @insert_m\n #[no_mangle]\n pub unsafe fn insert_m(v: M, i: u32, j: f32) -> M  {\n-    // CHECK: insertelement <4 x float> %{{v|1}}, float %j, i32 %i\n+    // CHECK: insertelement <4 x float> %{{v|1|2}}, float %j, i32 %i\n     simd_insert(v, i, j)\n }\n \n // CHECK-LABEL: @insert_s\n #[no_mangle]\n pub unsafe fn insert_s(v: S<4>, i: u32, j: f32) -> S<4>  {\n-    // CHECK: insertelement <4 x float> %{{v|1}}, float %j, i32 %i\n+    // CHECK: insertelement <4 x float> %{{v|1|2}}, float %j, i32 %i\n     simd_insert(v, i, j)\n }"}]}