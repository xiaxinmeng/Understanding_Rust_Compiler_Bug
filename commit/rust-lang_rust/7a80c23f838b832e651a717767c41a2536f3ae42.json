{"sha": "7a80c23f838b832e651a717767c41a2536f3ae42", "node_id": "C_kwDOAAsO6NoAKDdhODBjMjNmODM4YjgzMmU2NTFhNzE3NzY3YzQxYTI1MzZmM2FlNDI", "commit": {"author": {"name": "SabrinaJewson", "email": "sejewson@gmail.com", "date": "2022-03-30T18:31:50Z"}, "committer": {"name": "SabrinaJewson", "email": "sejewson@gmail.com", "date": "2022-03-30T20:49:13Z"}, "message": "Suggest from_utf8_unchecked in const contexts", "tree": {"sha": "85ec11a3abb60004e845b50e89a86a94b9b43fff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85ec11a3abb60004e845b50e89a86a94b9b43fff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a80c23f838b832e651a717767c41a2536f3ae42", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJHBAABCAAxFiEEpFrenxYsOeUIs3WAPVQ4/6XwVWQFAmJEwksTHHNlamV3c29u\nQGdtYWlsLmNvbQAKCRA9VDj/pfBVZNb8EACpkOEWKTKeRM7EnDmMddOdEkAForjH\n59iKFf6LWmUQPqb1XDb9SMI7pTe0AC2H4YEX1CGjv6HEybshptulUBmKEhzX44qg\niOb78GTrzH/vdHV4sJjvpeMNUxnkp4cZF9svT49L4WZCNU53bHkeqIidHJwDWJzA\n2D0U0+GBy5m8oZwDDjUyP9jYpmVP5yrDsENbm0CMoeqtH+Db/KUA1RcVjzEDcAxr\nauHbyFkO4ca9JloawWLTJiEdlveQOBk2kawv0rbMLcu1J44rX3fiF8+An15aKB/X\nH5XO89vtZ3VfP3pzgBAxu4Ohefpj42NsZDwBx7oPG4Nnd0Co5n8/p1PA8fj8XMon\nMVqEcposi46jNlh10eWLP9oPSaKlwY0NEwtMS6upRcoOXYjd8JuZju5U60lonQuJ\nsh/10SJlcgNZ48Cn3UUxHpM4ZHSSeIr6j1iz0kWhOIR1DhDAdmHFyL5gxXCKUZkR\n3nRctjoOGVnEwhjjzJBYxVjl85w+1vqHwXvhP7m8aUvczUU/tEGnifQ9lXBkyJGc\nRlzN/kwT0OcNRme2OpUbBGngEsstFw+Vwzikzmzymh1I1Tg0UuwhuufTgOtBgT9o\nSG21sWTDtktKy0S5WyKvnISy5cjvXQ8dguTQ6Av39VhWpfrWynUouTLS68Jw76AS\ncQUzbStLQ21pBQ==\n=GbGn\n-----END PGP SIGNATURE-----", "payload": "tree 85ec11a3abb60004e845b50e89a86a94b9b43fff\nparent db5739ac55f3b27da778c7ffab0540990eb121a3\nauthor SabrinaJewson <sejewson@gmail.com> 1648665110 +0100\ncommitter SabrinaJewson <sejewson@gmail.com> 1648673353 +0100\n\nSuggest from_utf8_unchecked in const contexts\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a80c23f838b832e651a717767c41a2536f3ae42", "html_url": "https://github.com/rust-lang/rust/commit/7a80c23f838b832e651a717767c41a2536f3ae42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a80c23f838b832e651a717767c41a2536f3ae42/comments", "author": {"login": "SabrinaJewson", "id": 58880148, "node_id": "MDQ6VXNlcjU4ODgwMTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/58880148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SabrinaJewson", "html_url": "https://github.com/SabrinaJewson", "followers_url": "https://api.github.com/users/SabrinaJewson/followers", "following_url": "https://api.github.com/users/SabrinaJewson/following{/other_user}", "gists_url": "https://api.github.com/users/SabrinaJewson/gists{/gist_id}", "starred_url": "https://api.github.com/users/SabrinaJewson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SabrinaJewson/subscriptions", "organizations_url": "https://api.github.com/users/SabrinaJewson/orgs", "repos_url": "https://api.github.com/users/SabrinaJewson/repos", "events_url": "https://api.github.com/users/SabrinaJewson/events{/privacy}", "received_events_url": "https://api.github.com/users/SabrinaJewson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SabrinaJewson", "id": 58880148, "node_id": "MDQ6VXNlcjU4ODgwMTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/58880148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SabrinaJewson", "html_url": "https://github.com/SabrinaJewson", "followers_url": "https://api.github.com/users/SabrinaJewson/followers", "following_url": "https://api.github.com/users/SabrinaJewson/following{/other_user}", "gists_url": "https://api.github.com/users/SabrinaJewson/gists{/gist_id}", "starred_url": "https://api.github.com/users/SabrinaJewson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SabrinaJewson/subscriptions", "organizations_url": "https://api.github.com/users/SabrinaJewson/orgs", "repos_url": "https://api.github.com/users/SabrinaJewson/repos", "events_url": "https://api.github.com/users/SabrinaJewson/events{/privacy}", "received_events_url": "https://api.github.com/users/SabrinaJewson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db5739ac55f3b27da778c7ffab0540990eb121a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/db5739ac55f3b27da778c7ffab0540990eb121a3", "html_url": "https://github.com/rust-lang/rust/commit/db5739ac55f3b27da778c7ffab0540990eb121a3"}], "stats": {"total": 35, "additions": 23, "deletions": 12}, "files": [{"sha": "9c893cacf4fd1f6737e01e815e94ab9ea4540cdf", "filename": "clippy_lints/src/transmute/transmute_ref_to_ref.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7a80c23f838b832e651a717767c41a2536f3ae42/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ref_to_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a80c23f838b832e651a717767c41a2536f3ae42/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ref_to_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ref_to_ref.rs?ref=7a80c23f838b832e651a717767c41a2536f3ae42", "patch": "@@ -32,17 +32,19 @@ pub(super) fn check<'tcx>(\n                     \"\"\n                 };\n \n+                let snippet = snippet(cx, arg.span, \"..\");\n+\n                 span_lint_and_sugg(\n                     cx,\n                     TRANSMUTE_BYTES_TO_STR,\n                     e.span,\n                     &format!(\"transmute from a `{}` to a `{}`\", from_ty, to_ty),\n                     \"consider using\",\n-                    format!(\n-                        \"std::str::from_utf8{}({}).unwrap()\",\n-                        postfix,\n-                        snippet(cx, arg.span, \"..\"),\n-                    ),\n+                    if const_context {\n+                        format!(\"unsafe {{ std::str::from_utf8_unchecked{postfix}({snippet}) }}\")\n+                    } else {\n+                        format!(\"std::str::from_utf8{postfix}({snippet}).unwrap()\")\n+                    },\n                     Applicability::Unspecified,\n                 );\n                 triggered = true;"}, {"sha": "5b688ce4d644f766881cf36b74e3648df9c2f061", "filename": "tests/ui/transmute.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7a80c23f838b832e651a717767c41a2536f3ae42/tests%2Fui%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a80c23f838b832e651a717767c41a2536f3ae42/tests%2Fui%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute.rs?ref=7a80c23f838b832e651a717767c41a2536f3ae42", "patch": "@@ -134,9 +134,12 @@ mod num_to_bytes {\n     }\n }\n \n-fn bytes_to_str(b: &[u8], mb: &mut [u8]) {\n-    let _: &str = unsafe { std::mem::transmute(b) };\n+fn bytes_to_str(mb: &mut [u8]) {\n+    const B: &[u8] = b\"\";\n+\n+    let _: &str = unsafe { std::mem::transmute(B) };\n     let _: &mut str = unsafe { std::mem::transmute(mb) };\n+    const _: &str = unsafe { std::mem::transmute(B) };\n }\n \n fn main() {}"}, {"sha": "1213d192ae9c3587038538fccfbeb52979f462f0", "filename": "tests/ui/transmute.stderr", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7a80c23f838b832e651a717767c41a2536f3ae42/tests%2Fui%2Ftransmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7a80c23f838b832e651a717767c41a2536f3ae42/tests%2Fui%2Ftransmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute.stderr?ref=7a80c23f838b832e651a717767c41a2536f3ae42", "patch": "@@ -227,18 +227,24 @@ LL |             let _: [u8; 16] = std::mem::transmute(0i128);\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `to_ne_bytes()`: `0i128.to_ne_bytes()`\n \n error: transmute from a `&[u8]` to a `&str`\n-  --> $DIR/transmute.rs:138:28\n+  --> $DIR/transmute.rs:140:28\n    |\n-LL |     let _: &str = unsafe { std::mem::transmute(b) };\n-   |                            ^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::str::from_utf8(b).unwrap()`\n+LL |     let _: &str = unsafe { std::mem::transmute(B) };\n+   |                            ^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::str::from_utf8(B).unwrap()`\n    |\n    = note: `-D clippy::transmute-bytes-to-str` implied by `-D warnings`\n \n error: transmute from a `&mut [u8]` to a `&mut str`\n-  --> $DIR/transmute.rs:139:32\n+  --> $DIR/transmute.rs:141:32\n    |\n LL |     let _: &mut str = unsafe { std::mem::transmute(mb) };\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::str::from_utf8_mut(mb).unwrap()`\n \n-error: aborting due to 38 previous errors\n+error: transmute from a `&[u8]` to a `&str`\n+  --> $DIR/transmute.rs:142:30\n+   |\n+LL |     const _: &str = unsafe { std::mem::transmute(B) };\n+   |                              ^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `unsafe { std::str::from_utf8_unchecked(B) }`\n+\n+error: aborting due to 39 previous errors\n "}]}