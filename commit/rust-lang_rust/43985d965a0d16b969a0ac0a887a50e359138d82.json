{"sha": "43985d965a0d16b969a0ac0a887a50e359138d82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzOTg1ZDk2NWEwZDE2Yjk2OWEwYWMwYTg4N2E1MGUzNTkxMzhkODI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-17T22:23:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-17T22:23:38Z"}, "message": "Rollup merge of #59984 - gluyas:collections-with_capacity-doc-fix, r=rkruppe\n\nRemove collection-specific `with_capacity` documentation from `std::collections`\n\nFixes #59931\n\nThe style of `std::collections` module doc is very much a beginner friendly guide, and documenting niche, collection-specific behaviour feels out of place, if not brittle.\n\nThe note about `VecDeque` is outdated (see issue), and while `Vec` probably won't change its guarantees any time soon, the users who are interested in its allocation properties will find that in its own documentation.", "tree": {"sha": "c1057d5f3a8312169ef8119de35b71d77417ec23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1057d5f3a8312169ef8119de35b71d77417ec23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43985d965a0d16b969a0ac0a887a50e359138d82", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJct6dqCRBK7hj4Ov3rIwAAdHIIAJSliTw7rRXntzYHuHkmI2Fw\noLv6yViIRLzB0SOtLcmL6y5yqX2RVxXkrbQhe5HRjPDd0RSQEO+JkWJ2E9c3axoQ\nzasWnOIrt84tsmPkq1I1r/liwvxudgH6cpde6cEIDhuRzoG/644x7+MVaV8xMl2D\n5thkqWKkhsmJagvp2MJaSTWHo2PG8zH4UUOi9Twc8HAWdYhyC9vcS4XyNohHTokp\n3E4ioZc+Bm3zqzNZpbjT1bzoPHdUjpKa9jVJ5+cRapVoqW0LyRiNdOXQvK4Sd2Cj\nW6MTd+Yed4W/A47qndnUbgmvCxpSEKzLf0zFvuzMdQ+n0njmIvei58MPVOVShvM=\n=0SwN\n-----END PGP SIGNATURE-----\n", "payload": "tree c1057d5f3a8312169ef8119de35b71d77417ec23\nparent a20438773b0bb67a2ce2543eb91b0ce7cbcdef0f\nparent 64dc041511852441ebc071c6fdf1e110e80b7b97\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1555539818 +0200\ncommitter GitHub <noreply@github.com> 1555539818 +0200\n\nRollup merge of #59984 - gluyas:collections-with_capacity-doc-fix, r=rkruppe\n\nRemove collection-specific `with_capacity` documentation from `std::collections`\n\nFixes #59931\n\nThe style of `std::collections` module doc is very much a beginner friendly guide, and documenting niche, collection-specific behaviour feels out of place, if not brittle.\n\nThe note about `VecDeque` is outdated (see issue), and while `Vec` probably won't change its guarantees any time soon, the users who are interested in its allocation properties will find that in its own documentation.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43985d965a0d16b969a0ac0a887a50e359138d82", "html_url": "https://github.com/rust-lang/rust/commit/43985d965a0d16b969a0ac0a887a50e359138d82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43985d965a0d16b969a0ac0a887a50e359138d82/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a20438773b0bb67a2ce2543eb91b0ce7cbcdef0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a20438773b0bb67a2ce2543eb91b0ce7cbcdef0f", "html_url": "https://github.com/rust-lang/rust/commit/a20438773b0bb67a2ce2543eb91b0ce7cbcdef0f"}, {"sha": "64dc041511852441ebc071c6fdf1e110e80b7b97", "url": "https://api.github.com/repos/rust-lang/rust/commits/64dc041511852441ebc071c6fdf1e110e80b7b97", "html_url": "https://github.com/rust-lang/rust/commit/64dc041511852441ebc071c6fdf1e110e80b7b97"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "15c2532f8b4e0b839645ca6885acc5cfbe7c306c", "filename": "src/libstd/collections/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/43985d965a0d16b969a0ac0a887a50e359138d82/src%2Flibstd%2Fcollections%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43985d965a0d16b969a0ac0a887a50e359138d82/src%2Flibstd%2Fcollections%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fmod.rs?ref=43985d965a0d16b969a0ac0a887a50e359138d82", "patch": "@@ -150,10 +150,9 @@\n //! Any `with_capacity` constructor will instruct the collection to allocate\n //! enough space for the specified number of elements. Ideally this will be for\n //! exactly that many elements, but some implementation details may prevent\n-//! this. [`Vec`] and [`VecDeque`] can be relied on to allocate exactly the\n-//! requested amount, though. Use `with_capacity` when you know exactly how many\n-//! elements will be inserted, or at least have a reasonable upper-bound on that\n-//! number.\n+//! this. See collection-specific documentation for details. In general, use\n+//! `with_capacity` when you know exactly how many elements will be inserted, or\n+//! at least have a reasonable upper-bound on that number.\n //!\n //! When anticipating a large influx of elements, the `reserve` family of\n //! methods can be used to hint to the collection how much room it should make"}]}