{"sha": "c75543d648a1b49329ecd3b9bfcf748f4d708a6f", "node_id": "C_kwDOAAsO6NoAKGM3NTU0M2Q2NDhhMWI0OTMyOWVjZDNiOWJmY2Y3NDhmNGQ3MDhhNmY", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-05-08T06:09:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-08T06:09:21Z"}, "message": "Rollup merge of #111022 - Nilstrieb:smaller-bitflags, r=compiler-errors\n\nUse smaller ints for bitflags\n\nFree shrinking!", "tree": {"sha": "2a2b66351805326e4a608dd760a7341ad718cc10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a2b66351805326e4a608dd760a7341ad718cc10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c75543d648a1b49329ecd3b9bfcf748f4d708a6f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkWJIRCRBK7hj4Ov3rIwAApu4IACVaWCdobq8YLMuzELHGvhbu\npQC0Dh+kF+VmUeyC62pR4T1iDJIMKfu03dlCRxX4zwgCu4hehiQYU4AuWZtELAIb\nrRBgKGhF42V/bjiI7zA8SN4u3rljCR4IAePtct86k8MLKg/O69pYrHtQfPB74R9v\nkRxOzLwWOHEXr7Jx4mBqtKl3MvlLcsNEEf/s67x+F+ckHLTLDYUgYyFm7k1qxPWi\nBKEudD4kVWtJcEFmZgx+gms1f/TXM81aobj6wMDfSHmot6SYnK8pYbBfz/44Agvu\njxin/2ndGjUrdhmDBYkhlkPxPC31gE/HWeZ4ZgEs2nGuhwWuq5Gr+mhzddWlhI0=\n=RqU2\n-----END PGP SIGNATURE-----\n", "payload": "tree 2a2b66351805326e4a608dd760a7341ad718cc10\nparent e04c9019f03e7c3dc86a5f3b3ab779d326a47158\nparent f2645776dc5e519a0a0bd4e79f2801de197c2fbc\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1683526161 +0530\ncommitter GitHub <noreply@github.com> 1683526161 +0530\n\nRollup merge of #111022 - Nilstrieb:smaller-bitflags, r=compiler-errors\n\nUse smaller ints for bitflags\n\nFree shrinking!\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c75543d648a1b49329ecd3b9bfcf748f4d708a6f", "html_url": "https://github.com/rust-lang/rust/commit/c75543d648a1b49329ecd3b9bfcf748f4d708a6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c75543d648a1b49329ecd3b9bfcf748f4d708a6f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e04c9019f03e7c3dc86a5f3b3ab779d326a47158", "url": "https://api.github.com/repos/rust-lang/rust/commits/e04c9019f03e7c3dc86a5f3b3ab779d326a47158", "html_url": "https://github.com/rust-lang/rust/commit/e04c9019f03e7c3dc86a5f3b3ab779d326a47158"}, {"sha": "f2645776dc5e519a0a0bd4e79f2801de197c2fbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2645776dc5e519a0a0bd4e79f2801de197c2fbc", "html_url": "https://github.com/rust-lang/rust/commit/f2645776dc5e519a0a0bd4e79f2801de197c2fbc"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "5e13e7c8aafc8187a4876e65d44f0a069675175d", "filename": "compiler/rustc_data_structures/src/profiling.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c75543d648a1b49329ecd3b9bfcf748f4d708a6f/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c75543d648a1b49329ecd3b9bfcf748f4d708a6f/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs?ref=c75543d648a1b49329ecd3b9bfcf748f4d708a6f", "patch": "@@ -101,7 +101,7 @@ use parking_lot::RwLock;\n use smallvec::SmallVec;\n \n bitflags::bitflags! {\n-    struct EventFilter: u32 {\n+    struct EventFilter: u16 {\n         const GENERIC_ACTIVITIES  = 1 << 0;\n         const QUERY_PROVIDERS     = 1 << 1;\n         const QUERY_CACHE_HITS    = 1 << 2;"}, {"sha": "ad9891a5dca687cc1b98716c519a15d3ddf8bdf3", "filename": "compiler/rustc_middle/src/ty/adt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c75543d648a1b49329ecd3b9bfcf748f4d708a6f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c75543d648a1b49329ecd3b9bfcf748f4d708a6f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadt.rs?ref=c75543d648a1b49329ecd3b9bfcf748f4d708a6f", "patch": "@@ -26,7 +26,7 @@ use super::{Destructor, FieldDef, GenericPredicates, Ty, TyCtxt, VariantDef, Var\n \n bitflags! {\n     #[derive(HashStable, TyEncodable, TyDecodable)]\n-    pub struct AdtFlags: u32 {\n+    pub struct AdtFlags: u16 {\n         const NO_ADT_FLAGS        = 0;\n         /// Indicates whether the ADT is an enum.\n         const IS_ENUM             = 1 << 0;"}, {"sha": "88b084bbccbdcaf756fe2e53669b17af2a2ce039", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c75543d648a1b49329ecd3b9bfcf748f4d708a6f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c75543d648a1b49329ecd3b9bfcf748f4d708a6f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=c75543d648a1b49329ecd3b9bfcf748f4d708a6f", "patch": "@@ -1739,7 +1739,7 @@ pub struct Destructor {\n \n bitflags! {\n     #[derive(HashStable, TyEncodable, TyDecodable)]\n-    pub struct VariantFlags: u32 {\n+    pub struct VariantFlags: u8 {\n         const NO_VARIANT_FLAGS        = 0;\n         /// Indicates whether the field list of this variant is `#[non_exhaustive]`.\n         const IS_FIELD_LIST_NON_EXHAUSTIVE = 1 << 0;"}, {"sha": "52159a7b06aa5178310ea0e4a2b3fc2aa4e58f33", "filename": "compiler/rustc_target/src/abi/call/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c75543d648a1b49329ecd3b9bfcf748f4d708a6f/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c75543d648a1b49329ecd3b9bfcf748f4d708a6f/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs?ref=c75543d648a1b49329ecd3b9bfcf748f4d708a6f", "patch": "@@ -65,7 +65,7 @@ mod attr_impl {\n     // The subset of llvm::Attribute needed for arguments, packed into a bitfield.\n     bitflags::bitflags! {\n         #[derive(Default, HashStable_Generic)]\n-        pub struct ArgAttribute: u16 {\n+        pub struct ArgAttribute: u8 {\n             const NoAlias   = 1 << 1;\n             const NoCapture = 1 << 2;\n             const NonNull   = 1 << 3;"}]}