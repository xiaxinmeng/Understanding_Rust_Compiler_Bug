{"sha": "5be97beeea9f33a1d3d60e06f38e3c34fff34aa6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViZTk3YmVlZWE5ZjMzYTFkM2Q2MGUwNmYzOGUzYzM0ZmZmMzRhYTY=", "commit": {"author": {"name": "Carol (Nichols || Goulding)", "email": "carol.nichols@gmail.com", "date": "2017-08-16T19:37:29Z"}, "committer": {"name": "Carol (Nichols || Goulding)", "email": "carol.nichols@gmail.com", "date": "2017-08-16T23:08:33Z"}, "message": "Implement a temp redirect for cargo docs\n\nAs discussed in\nhttps://github.com/rust-lang/cargo/issues/4040#issuecomment-321639074\n\nThis is a redirect meant to be replaced once cargo docs have been\nconverted to mdbook. We just want *a* URL to ride the trains for now so\nthat we can print doc.rust-lang.org/cargo in the paper book and\nguarantee that it will go *somewhere* useful by the time the book is\nprinted.\n\nImplemented as a meta redirect in HTML because we don't currently have\nany google juice at doc.rust-lang.org/cargo to lose.", "tree": {"sha": "24f2d6d80cb83966a32f27bb99a78e1cfa402aa9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24f2d6d80cb83966a32f27bb99a78e1cfa402aa9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5be97beeea9f33a1d3d60e06f38e3c34fff34aa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5be97beeea9f33a1d3d60e06f38e3c34fff34aa6", "html_url": "https://github.com/rust-lang/rust/commit/5be97beeea9f33a1d3d60e06f38e3c34fff34aa6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5be97beeea9f33a1d3d60e06f38e3c34fff34aa6/comments", "author": {"login": "carols10cents", "id": 193874, "node_id": "MDQ6VXNlcjE5Mzg3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/193874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carols10cents", "html_url": "https://github.com/carols10cents", "followers_url": "https://api.github.com/users/carols10cents/followers", "following_url": "https://api.github.com/users/carols10cents/following{/other_user}", "gists_url": "https://api.github.com/users/carols10cents/gists{/gist_id}", "starred_url": "https://api.github.com/users/carols10cents/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carols10cents/subscriptions", "organizations_url": "https://api.github.com/users/carols10cents/orgs", "repos_url": "https://api.github.com/users/carols10cents/repos", "events_url": "https://api.github.com/users/carols10cents/events{/privacy}", "received_events_url": "https://api.github.com/users/carols10cents/received_events", "type": "User", "site_admin": false}, "committer": {"login": "carols10cents", "id": 193874, "node_id": "MDQ6VXNlcjE5Mzg3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/193874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carols10cents", "html_url": "https://github.com/carols10cents", "followers_url": "https://api.github.com/users/carols10cents/followers", "following_url": "https://api.github.com/users/carols10cents/following{/other_user}", "gists_url": "https://api.github.com/users/carols10cents/gists{/gist_id}", "starred_url": "https://api.github.com/users/carols10cents/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carols10cents/subscriptions", "organizations_url": "https://api.github.com/users/carols10cents/orgs", "repos_url": "https://api.github.com/users/carols10cents/repos", "events_url": "https://api.github.com/users/carols10cents/events{/privacy}", "received_events_url": "https://api.github.com/users/carols10cents/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f94b7103bef77b22ff436b148792834b9e44065", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f94b7103bef77b22ff436b148792834b9e44065", "html_url": "https://github.com/rust-lang/rust/commit/3f94b7103bef77b22ff436b148792834b9e44065"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "e325fc65f051d3f1e22e768ea035ab0281f4340a", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5be97beeea9f33a1d3d60e06f38e3c34fff34aa6/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5be97beeea9f33a1d3d60e06f38e3c34fff34aa6/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=5be97beeea9f33a1d3d60e06f38e3c34fff34aa6", "patch": "@@ -257,7 +257,7 @@ impl<'a> Builder<'a> {\n             Kind::Bench => describe!(check::Crate, check::CrateLibrustc),\n             Kind::Doc => describe!(doc::UnstableBook, doc::UnstableBookGen, doc::TheBook,\n                 doc::Standalone, doc::Std, doc::Test, doc::Rustc, doc::ErrorIndex, doc::Nomicon,\n-                doc::Reference, doc::Rustdoc),\n+                doc::Reference, doc::Rustdoc, doc::CargoBook),\n             Kind::Dist => describe!(dist::Docs, dist::Mingw, dist::Rustc, dist::DebuggerScripts,\n                 dist::Std, dist::Analysis, dist::Src, dist::PlainSourceTarball, dist::Cargo,\n                 dist::Rls, dist::Extended, dist::HashSign),"}, {"sha": "86f5346bea1fb1558afd3a07306d563462b5c0a1", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/5be97beeea9f33a1d3d60e06f38e3c34fff34aa6/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5be97beeea9f33a1d3d60e06f38e3c34fff34aa6/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=5be97beeea9f33a1d3d60e06f38e3c34fff34aa6", "patch": "@@ -240,6 +240,51 @@ impl Step for TheBook {\n     }\n }\n \n+#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n+pub struct CargoBook {\n+    target: Interned<String>,\n+}\n+\n+impl Step for CargoBook {\n+    type Output = ();\n+    const DEFAULT: bool = true;\n+\n+    fn should_run(run: ShouldRun) -> ShouldRun {\n+        let builder = run.builder;\n+        run.path(\"src/doc/cargo\").default_condition(builder.build.config.docs)\n+    }\n+\n+    fn make_run(run: RunConfig) {\n+        run.builder.ensure(CargoBook {\n+            target: run.target,\n+        });\n+    }\n+\n+    /// Create a placeholder for the cargo documentation so that doc.rust-lang.org/cargo will\n+    /// redirect to doc.crates.io. We want to publish doc.rust-lang.org/cargo in the paper\n+    /// version of the book, but we don't want to rush the process of switching cargo's docs\n+    /// over to mdbook and deploying them. When the cargo book is ready, this implementation\n+    /// should build the mdbook instead of this redirect page.\n+    fn run(self, builder: &Builder) {\n+        let build = builder.build;\n+        let out = build.doc_out(self.target);\n+\n+        let cargo_dir = out.join(\"cargo\");\n+        t!(fs::create_dir_all(&cargo_dir));\n+\n+        let index = cargo_dir.join(\"index.html\");\n+        let redirect_html = r#\"\n+            <html>\n+                <head>\n+                    <meta http-equiv=\"refresh\" content=\"0; URL='http://doc.crates.io'\" />\n+                </head>\n+            </html>\"#;\n+\n+        println!(\"Creating cargo book redirect page\");\n+        t!(t!(File::create(&index)).write_all(redirect_html.as_bytes()));\n+    }\n+}\n+\n fn invoke_rustdoc(builder: &Builder, compiler: Compiler, target: Interned<String>, markdown: &str) {\n     let build = builder.build;\n     let out = build.doc_out(target);"}]}