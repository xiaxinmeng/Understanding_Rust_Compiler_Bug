{"sha": "f7f7c2aff80f0870f0d71bf70075e3b5bf68994f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3ZjdjMmFmZjgwZjA4NzBmMGQ3MWJmNzAwNzVlM2I1YmY2ODk5NGY=", "commit": {"author": {"name": "uHOOCCOOHu", "email": "hooccooh1896@gmail.com", "date": "2019-09-07T16:05:58Z"}, "committer": {"name": "uHOOCCOOHu", "email": "hooccooh1896@gmail.com", "date": "2019-09-08T17:34:53Z"}, "message": "Revert \"Replace with immutable map to avoid heavy cloning\"\n\nThis reverts commit 2c494eb803c88ef5d23607c3b156fce60c2b8076.\n\nSee: https://github.com/rust-analyzer/rust-analyzer/pull/1784#issuecomment-529119924", "tree": {"sha": "194c41ab1320730d7f08823127404056e235cf2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/194c41ab1320730d7f08823127404056e235cf2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7f7c2aff80f0870f0d71bf70075e3b5bf68994f", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEXLDp5dXVcfV/VA/qztOS3gxIPQAFAl11O70ACgkQztOS3gxI\nPQCU9A//bck2CbIqZefOI6kIBQ4TIKExt9zeiS39d/dAwIIPYuVSz84bfOpOLIzR\nBjLBBgOe0ylNr4OtvpH+ksN42uqOdnY4kieq/IeQxMol2ruf96BoMzvqGUGh9y9G\naxIoW806lhER3uMtl+fUIoKfdg0La9p5zvm7/4N6ZADytrPZcEJgDdHktp4HidV5\nEs7x9FHZKzLMCqKbB7AtGLIKmD497wBBUh9aBD1kmsgOcEr0Gd1auS3Wlwdq/+E4\nOpgDVySwvUo1vKjaWfcWdpdkRRtMi4QLSh9fblKvWmUER8XEh6vtqDwm/qG7DtVt\nc2hjoIXy0JvI6nJ7rI+Yx5wp+Jci4asyIHEdX9xq69JxX0OPcw/lzFhP3vu7732p\njWU3XvEPhEPLIptLMLqPlqdvvnu/6VkRtH73Hoa1H4wKydzxNqy/DoITFK8ufiWY\n2YYPmpuwdq6LpPcuxUAJsgqlMl1YLxq+Y8WRGc7S8meANAee7POzs0aFOudDKiJF\nFFeJH8I1yYau0Cp6RWDuJRrw3KK4IrHrq0yEwLHlXajalp8M1fOzW7CkI/d2nSC1\nkDc1l3dbXiXQoccnuEnYQ3VZNfNC9Yt+aNb+tfQnH9zgi/mmpTiks5W+Th1W6GIs\nXm9nCxUy5Ems7Y9s0iaB+wbFcDdMNKzJR50No8C84DgMe6E02tw=\n=HIqP\n-----END PGP SIGNATURE-----", "payload": "tree 194c41ab1320730d7f08823127404056e235cf2e\nparent c90256429bf41958ff6c7390dfd5fa25123eabb3\nauthor uHOOCCOOHu <hooccooh1896@gmail.com> 1567872358 +0800\ncommitter uHOOCCOOHu <hooccooh1896@gmail.com> 1567964093 +0800\n\nRevert \"Replace with immutable map to avoid heavy cloning\"\n\nThis reverts commit 2c494eb803c88ef5d23607c3b156fce60c2b8076.\n\nSee: https://github.com/rust-analyzer/rust-analyzer/pull/1784#issuecomment-529119924\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7f7c2aff80f0870f0d71bf70075e3b5bf68994f", "html_url": "https://github.com/rust-lang/rust/commit/f7f7c2aff80f0870f0d71bf70075e3b5bf68994f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7f7c2aff80f0870f0d71bf70075e3b5bf68994f/comments", "author": null, "committer": null, "parents": [{"sha": "c90256429bf41958ff6c7390dfd5fa25123eabb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c90256429bf41958ff6c7390dfd5fa25123eabb3", "html_url": "https://github.com/rust-lang/rust/commit/c90256429bf41958ff6c7390dfd5fa25123eabb3"}], "stats": {"total": 38, "additions": 2, "deletions": 36}, "files": [{"sha": "f93f11a82951fa8ef8c474c5c337c83f617a9279", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f7f7c2aff80f0870f0d71bf70075e3b5bf68994f/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/f7f7c2aff80f0870f0d71bf70075e3b5bf68994f/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=f7f7c2aff80f0870f0d71bf70075e3b5bf68994f", "patch": "@@ -484,16 +484,6 @@ dependencies = [\n  \"unicode-normalization 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"im\"\n-version = \"13.0.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"sized-chunks 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"typenum 1.11.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"indexmap\"\n version = \"1.1.0\"\n@@ -1016,7 +1006,6 @@ dependencies = [\n  \"chalk-rust-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git)\",\n  \"chalk-solve 0.1.0 (git+https://github.com/rust-lang/chalk.git)\",\n  \"ena 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"im 13.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"insta 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lalrpop-intern 0.15.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1561,14 +1550,6 @@ dependencies = [\n  \"yaml-rust 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"sized-chunks\"\n-version = \"0.3.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"typenum 1.11.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"slab\"\n version = \"0.4.2\"\n@@ -1703,11 +1684,6 @@ dependencies = [\n  \"winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"typenum\"\n-version = \"1.11.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n [[package]]\n name = \"unicase\"\n version = \"2.5.1\"\n@@ -1917,7 +1893,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum globset 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"925aa2cac82d8834e2b2a4415b6f6879757fb5c0928fc445ae76461a12eed8f2\"\n \"checksum heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"20564e78d53d2bb135c343b3f47714a56af2061f1c928fdb541dc7b9fdd94205\"\n \"checksum idna 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"02e2673c30ee86b5b96a9cb52ad15718aa1f966f5ab9ad54a8b95d5ca33120a9\"\n-\"checksum im 13.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8db49f8bc08d5cc4e2bb0f7d25a6d1db2c79bc6f7d7c86c96c657eb3d214125f\"\n \"checksum indexmap 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a4d6d89e0948bf10c08b9ecc8ac5b83f07f857ebe2c0cbe38de15b4e4f510356\"\n \"checksum indicatif 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2c60da1c9abea75996b70a931bba6c750730399005b61ccd853cee50ef3d0d0c\"\n \"checksum inotify 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"40b54539f3910d6f84fbf9a643efd6e3aa6e4f001426c0329576128255994718\"\n@@ -2012,7 +1987,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum serde_json 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)\" = \"051c49229f282f7c6f3813f8286cc1e3323e8051823fce42c7ea80fe13521704\"\n \"checksum serde_repr 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cd02c7587ec314570041b2754829f84d873ced14a96d1fd1823531e11db40573\"\n \"checksum serde_yaml 0.8.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"38b08a9a90e5260fe01c6480ec7c811606df6d3a660415808c3c3fa8ed95b582\"\n-\"checksum sized-chunks 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f01db57d7ee89c8e053245deb77040a6cc8508311f381c88749c33d4b9b78785\"\n \"checksum slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c111b5bd5695e56cffe5129854aa230b39c93a305372fdbb2668ca2394eea9f8\"\n \"checksum smallvec 0.6.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ab606a9c5e214920bb66c458cd7be8ef094f813f20fe77a54cc7dbfff220d4b7\"\n \"checksum smol_str 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)\" = \"590700be3630457c56f8c73c0ea39881476ad7076cd84057d44f4f38f79914fb\"\n@@ -2028,7 +2002,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c6b53e329000edc2b34dbe8545fd20e55a333362d0a321909685a19bd28c3f1b\"\n \"checksum threadpool 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e2f0c90a5f3459330ac8bc0d2f879c693bb7a2f59689c1083fc4ef83834da865\"\n \"checksum time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\" = \"db8dcfca086c1143c9270ac42a2bbd8a7ee477b78ac8e45b19abfb0cbede4b6f\"\n-\"checksum typenum 1.11.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6d2783fe2d6b8c1101136184eb41be8b1ad379e4657050b8aaff0c79ee7575f9\"\n \"checksum unicase 2.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2e2e6bd1e59e56598518beb94fd6db628ded570326f0a98c679a304bd9f00150\"\n \"checksum unicode-bidi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"49f2bd0c6468a8230e1db229cff8029217cf623c767ea5d60bfbd42729ea54d5\"\n \"checksum unicode-normalization 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"141339a08b982d942be2ca06ff8b076563cbe223d1befd5450716790d44e2426\""}, {"sha": "d9bed4ddaf28917f832db4a1e905831221f44fef", "filename": "crates/ra_hir/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f7f7c2aff80f0870f0d71bf70075e3b5bf68994f/crates%2Fra_hir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f7f7c2aff80f0870f0d71bf70075e3b5bf68994f/crates%2Fra_hir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2FCargo.toml?ref=f7f7c2aff80f0870f0d71bf70075e3b5bf68994f", "patch": "@@ -6,7 +6,6 @@ authors = [\"rust-analyzer developers\"]\n \n [dependencies]\n arrayvec = \"0.4.10\"\n-im = \"13.0.0\"\n log = \"0.4.5\"\n relative-path = \"0.4.0\"\n rustc-hash = \"1.0\""}, {"sha": "befbb2a9b3d6cbd19e4d6f049df71bbdd7753ddf", "filename": "crates/ra_hir/src/nameres.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f7f7c2aff80f0870f0d71bf70075e3b5bf68994f/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7f7c2aff80f0870f0d71bf70075e3b5bf68994f/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres.rs?ref=f7f7c2aff80f0870f0d71bf70075e3b5bf68994f", "patch": "@@ -54,15 +54,14 @@ mod mod_resolution;\n #[cfg(test)]\n mod tests;\n \n-use std::hash::BuildHasherDefault;\n use std::sync::Arc;\n \n use once_cell::sync::Lazy;\n use ra_arena::{impl_arena_id, Arena, RawId};\n use ra_db::{Edition, FileId};\n use ra_prof::profile;\n use ra_syntax::ast;\n-use rustc_hash::{FxHashMap, FxHashSet, FxHasher};\n+use rustc_hash::{FxHashMap, FxHashSet};\n use test_utils::tested_by;\n \n use crate::{\n@@ -74,8 +73,6 @@ use crate::{\n     AstId, BuiltinType, Crate, HirFileId, MacroDef, Module, ModuleDef, Name, Path, PathKind, Trait,\n };\n \n-pub(crate) type ImmFxHashMap<K, V> = im::HashMap<K, V, BuildHasherDefault<FxHasher>>;\n-\n pub(crate) use self::raw::{ImportSourceMap, RawItems};\n \n pub use self::{\n@@ -142,7 +139,7 @@ pub(crate) struct ModuleData {\n pub struct ModuleScope {\n     items: FxHashMap<Name, Resolution>,\n     macros: FxHashMap<Name, MacroDef>,\n-    textual_macros: ImmFxHashMap<Name, MacroDef>,\n+    textual_macros: FxHashMap<Name, MacroDef>,\n }\n \n static BUILTIN_SCOPE: Lazy<FxHashMap<Name, Resolution>> = Lazy::new(|| {"}, {"sha": "10c32ffa1c4beea8dd9e256e43fcc5a9f8604249", "filename": "crates/ra_hir/src/nameres/collector.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f7f7c2aff80f0870f0d71bf70075e3b5bf68994f/crates%2Fra_hir%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7f7c2aff80f0870f0d71bf70075e3b5bf68994f/crates%2Fra_hir%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Fcollector.rs?ref=f7f7c2aff80f0870f0d71bf70075e3b5bf68994f", "patch": "@@ -631,7 +631,6 @@ where\n         modules[res].parent = Some(self.module_id);\n         modules[res].declaration = Some(declaration);\n         modules[res].definition = definition;\n-        // Cloning immutable map is lazy and fast\n         modules[res].scope.textual_macros = modules[self.module_id].scope.textual_macros.clone();\n         modules[self.module_id].children.insert(name.clone(), res);\n         let resolution = Resolution {\n@@ -708,8 +707,6 @@ where\n     }\n \n     fn import_all_textual_macros(&mut self, module_id: CrateModuleId) {\n-        // `clone()` is needed here to avoid mutable borrow `self.def_collector` when first borrow is alive\n-        // Cloning immutable map is lazy and fast\n         let macros = self.def_collector.def_map[module_id].scope.textual_macros.clone();\n         for (name, macro_) in macros {\n             self.def_collector.define_textual_macro(self.module_id, name.clone(), macro_.id);"}]}