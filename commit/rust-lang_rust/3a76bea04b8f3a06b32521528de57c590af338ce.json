{"sha": "3a76bea04b8f3a06b32521528de57c590af338ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhNzZiZWEwNGI4ZjNhMDZiMzI1MjE1MjhkZTU3YzU5MGFmMzM4Y2U=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-07-06T04:04:03Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-07-06T05:34:32Z"}, "message": "Update rustfix tests", "tree": {"sha": "896c687a007d5bdc9dcd3bfdee9425aefc0f67c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/896c687a007d5bdc9dcd3bfdee9425aefc0f67c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a76bea04b8f3a06b32521528de57c590af338ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a76bea04b8f3a06b32521528de57c590af338ce", "html_url": "https://github.com/rust-lang/rust/commit/3a76bea04b8f3a06b32521528de57c590af338ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a76bea04b8f3a06b32521528de57c590af338ce/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7293defb34552ddadf363410b9d6e9985d8db747", "url": "https://api.github.com/repos/rust-lang/rust/commits/7293defb34552ddadf363410b9d6e9985d8db747", "html_url": "https://github.com/rust-lang/rust/commit/7293defb34552ddadf363410b9d6e9985d8db747"}], "stats": {"total": 57, "additions": 27, "deletions": 30}, "files": [{"sha": "db3126654103ae8392db869dcc96b6feb209c9e0", "filename": "tests/ui/replace_consts.fixed", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3a76bea04b8f3a06b32521528de57c590af338ce/tests%2Fui%2Freplace_consts.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/3a76bea04b8f3a06b32521528de57c590af338ce/tests%2Fui%2Freplace_consts.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freplace_consts.fixed?ref=3a76bea04b8f3a06b32521528de57c590af338ce", "patch": "@@ -4,12 +4,9 @@\n #![deny(clippy::replace_consts)]\n \n use std::sync::atomic::*;\n-use std::sync::{Once, ONCE_INIT};\n \n #[rustfmt::skip]\n fn bad() {\n-    // Once\n-    { let foo = ONCE_INIT; };\n     // Min\n     { let foo = isize::min_value(); };\n     { let foo = i8::min_value(); };\n@@ -40,8 +37,6 @@ fn bad() {\n \n #[rustfmt::skip]\n fn good() {\n-    // Once\n-    { let foo = Once::new(); };\n     // Atomic\n     { let foo = AtomicBool::new(false); };\n     { let foo = AtomicIsize::new(0); };"}, {"sha": "18e9ac9f1008bb56cd19484b60360e277d15b5e5", "filename": "tests/ui/replace_consts.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a76bea04b8f3a06b32521528de57c590af338ce/tests%2Fui%2Freplace_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a76bea04b8f3a06b32521528de57c590af338ce/tests%2Fui%2Freplace_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freplace_consts.rs?ref=3a76bea04b8f3a06b32521528de57c590af338ce", "patch": "@@ -4,10 +4,12 @@\n #![deny(clippy::replace_consts)]\n \n use std::sync::atomic::*;\n-use std::sync::{Once, ONCE_INIT};\n+use std::sync::Once;\n \n #[rustfmt::skip]\n fn bad() {\n+    #[allow(deprecated, unused_imports)]\n+    use std::sync::ONCE_INIT;\n     // Once\n     { let foo = ONCE_INIT; };\n     // Min"}, {"sha": "b0d0788a9182066fce27e4ea00c0db32e9f5d083", "filename": "tests/ui/replace_consts.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/3a76bea04b8f3a06b32521528de57c590af338ce/tests%2Fui%2Freplace_consts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a76bea04b8f3a06b32521528de57c590af338ce/tests%2Fui%2Freplace_consts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freplace_consts.stderr?ref=3a76bea04b8f3a06b32521528de57c590af338ce", "patch": "@@ -1,5 +1,5 @@\n error: using `MIN`\n-  --> $DIR/replace_consts.rs:14:17\n+  --> $DIR/replace_consts.rs:11:17\n    |\n LL |     { let foo = std::isize::MIN; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `isize::min_value()`\n@@ -11,139 +11,139 @@ LL | #![deny(clippy::replace_consts)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:15:17\n+  --> $DIR/replace_consts.rs:12:17\n    |\n LL |     { let foo = std::i8::MIN; };\n    |                 ^^^^^^^^^^^^ help: try this: `i8::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:16:17\n+  --> $DIR/replace_consts.rs:13:17\n    |\n LL |     { let foo = std::i16::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i16::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:17:17\n+  --> $DIR/replace_consts.rs:14:17\n    |\n LL |     { let foo = std::i32::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i32::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:18:17\n+  --> $DIR/replace_consts.rs:15:17\n    |\n LL |     { let foo = std::i64::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i64::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:19:17\n+  --> $DIR/replace_consts.rs:16:17\n    |\n LL |     { let foo = std::i128::MIN; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `i128::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:20:17\n+  --> $DIR/replace_consts.rs:17:17\n    |\n LL |     { let foo = std::usize::MIN; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `usize::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:21:17\n+  --> $DIR/replace_consts.rs:18:17\n    |\n LL |     { let foo = std::u8::MIN; };\n    |                 ^^^^^^^^^^^^ help: try this: `u8::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:22:17\n+  --> $DIR/replace_consts.rs:19:17\n    |\n LL |     { let foo = std::u16::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u16::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:23:17\n+  --> $DIR/replace_consts.rs:20:17\n    |\n LL |     { let foo = std::u32::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u32::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:24:17\n+  --> $DIR/replace_consts.rs:21:17\n    |\n LL |     { let foo = std::u64::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u64::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:25:17\n+  --> $DIR/replace_consts.rs:22:17\n    |\n LL |     { let foo = std::u128::MIN; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `u128::min_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:27:17\n+  --> $DIR/replace_consts.rs:24:17\n    |\n LL |     { let foo = std::isize::MAX; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `isize::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:28:17\n+  --> $DIR/replace_consts.rs:25:17\n    |\n LL |     { let foo = std::i8::MAX; };\n    |                 ^^^^^^^^^^^^ help: try this: `i8::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:29:17\n+  --> $DIR/replace_consts.rs:26:17\n    |\n LL |     { let foo = std::i16::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i16::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:30:17\n+  --> $DIR/replace_consts.rs:27:17\n    |\n LL |     { let foo = std::i32::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i32::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:31:17\n+  --> $DIR/replace_consts.rs:28:17\n    |\n LL |     { let foo = std::i64::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i64::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:32:17\n+  --> $DIR/replace_consts.rs:29:17\n    |\n LL |     { let foo = std::i128::MAX; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `i128::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:33:17\n+  --> $DIR/replace_consts.rs:30:17\n    |\n LL |     { let foo = std::usize::MAX; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `usize::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:34:17\n+  --> $DIR/replace_consts.rs:31:17\n    |\n LL |     { let foo = std::u8::MAX; };\n    |                 ^^^^^^^^^^^^ help: try this: `u8::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:35:17\n+  --> $DIR/replace_consts.rs:32:17\n    |\n LL |     { let foo = std::u16::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u16::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:36:17\n+  --> $DIR/replace_consts.rs:33:17\n    |\n LL |     { let foo = std::u32::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u32::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:37:17\n+  --> $DIR/replace_consts.rs:34:17\n    |\n LL |     { let foo = std::u64::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u64::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:38:17\n+  --> $DIR/replace_consts.rs:35:17\n    |\n LL |     { let foo = std::u128::MAX; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `u128::max_value()`"}]}