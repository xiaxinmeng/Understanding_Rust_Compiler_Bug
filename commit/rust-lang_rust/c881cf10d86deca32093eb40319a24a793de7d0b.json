{"sha": "c881cf10d86deca32093eb40319a24a793de7d0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4ODFjZjEwZDg2ZGVjYTMyMDkzZWI0MDMxOWEyNGE3OTNkZTdkMGI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-06T13:24:56Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-08T07:41:28Z"}, "message": "clippy nits", "tree": {"sha": "598433da5a2263f4585ec16707c562f963829ff8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/598433da5a2263f4585ec16707c562f963829ff8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c881cf10d86deca32093eb40319a24a793de7d0b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXV8woAAoJEFbW7qD8Z6xGnMQP/3XF5rA6BGXuu7qq2us2rDCw\nT0dTbwlNWIAdEZA0qHqTaPfVBQ3Lx2SS2/isbVC36OhUyLikCHqHeAJBqezqds4l\nEmdj9MIGG0L4Ppqzx6K0snsLTJy0/43psgUWCRd/YOJeZZqC3zZFQCF+isuIWSGV\nmIHuI6rpr2oMLumDqYLRfHSogjpDADCKfoioDhRV5C5FycWF6ObUeWlWhL/np2jq\ng1r+XeNUIKZB4gTZoBl96nHR/iRPxA8EPApMX7rbascxw43p8eD5dFf2sEEP0bf2\ng8oOYCck6cxH0VPycs1F9lCmts2PurTtMWMzQNTrCl6nGOL3eWThRMeKIFTtieHI\nol7Zmxyy8S8m+2oHViGt8g+mONOLx9YJVQSAIO/+wONo4ClHatKcR0wck5rB3xdh\nSWdj+1jmOlM8Nibft9VWcpyypRu6OC11d2VDjXgSJj8ns3/4LBfM0XH4ziT8Ds2X\nQHN1QCktC8/Fpx/v4aaPuFr0dMsTdlgkot8vkKlqrM3JqBBO1RWcbZsjJfI5lDFX\nycM6Z9lZQ/AcKixHUX4udD4HeVCo9dfUTfLhMOPH4f4yCYiu4pVQZ2iyvnuGrbf5\nM3+wgjEoSjLpacaiO51gT46b9fEVlb3vZcx7j4UhUt0lEnB3NHYNg3MR/u1vWM4H\nIrcxOTsM+o6zi14eLrY2\n=fQnj\n-----END PGP SIGNATURE-----", "payload": "tree 598433da5a2263f4585ec16707c562f963829ff8\nparent f42be6db54660b73f814e6083a87005e799d5666\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465219496 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465371688 +0200\n\nclippy nits"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c881cf10d86deca32093eb40319a24a793de7d0b", "html_url": "https://github.com/rust-lang/rust/commit/c881cf10d86deca32093eb40319a24a793de7d0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c881cf10d86deca32093eb40319a24a793de7d0b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f42be6db54660b73f814e6083a87005e799d5666", "url": "https://api.github.com/repos/rust-lang/rust/commits/f42be6db54660b73f814e6083a87005e799d5666", "html_url": "https://github.com/rust-lang/rust/commit/f42be6db54660b73f814e6083a87005e799d5666"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f733d1d46c8380af4f81d8e3691d885177781adb", "filename": "src/interpreter/stepper.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c881cf10d86deca32093eb40319a24a793de7d0b/src%2Finterpreter%2Fstepper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c881cf10d86deca32093eb40319a24a793de7d0b/src%2Finterpreter%2Fstepper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fstepper.rs?ref=c881cf10d86deca32093eb40319a24a793de7d0b", "patch": "@@ -129,7 +129,7 @@ impl<'fncx, 'a, 'b: 'a + 'mir, 'mir, 'tcx: 'b> Stepper<'fncx, 'a, 'b, 'mir, 'tcx\n             Ok(Event::Terminator)\n         } else {\n             self.process = Self::constant;\n-            return Ok(Event::Constant);\n+            Ok(Event::Constant)\n         }\n     }\n "}, {"sha": "ab527a47c0bf5cbb57088e54ffa7fae6bfd5288d", "filename": "src/memory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c881cf10d86deca32093eb40319a24a793de7d0b/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c881cf10d86deca32093eb40319a24a793de7d0b/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=c881cf10d86deca32093eb40319a24a793de7d0b", "patch": "@@ -88,7 +88,7 @@ impl Memory {\n             alloc.bytes.extend(iter::repeat(0).take(amount));\n             alloc.undef_mask.grow(amount, false);\n         } else if size > new_size {\n-            return Err(EvalError::Unimplemented(format!(\"unimplemented allocation relocation\")));\n+            return Err(EvalError::Unimplemented(format!(\"unimplemented allocation relocation (from {} to {})\", size, new_size)));\n             // alloc.bytes.truncate(new_size);\n             // alloc.undef_mask.len = new_size;\n             // TODO: potentially remove relocations"}]}