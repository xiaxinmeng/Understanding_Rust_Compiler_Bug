{"sha": "0ff568a3c1d4cc51109aacc88a598e6d3cfe5ea0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmZjU2OGEzYzFkNGNjNTExMDlhYWNjODhhNTk4ZTZkM2NmZTVlYTA=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-04-18T09:34:07Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-04-18T10:37:27Z"}, "message": "libcore: add an EnumerateIterator, like Python's `enumerate`.", "tree": {"sha": "02f665927d6e66fd67c9b65f019a9281623494ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02f665927d6e66fd67c9b65f019a9281623494ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ff568a3c1d4cc51109aacc88a598e6d3cfe5ea0", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ff568a3c1d4cc51109aacc88a598e6d3cfe5ea0", "html_url": "https://github.com/rust-lang/rust/commit/0ff568a3c1d4cc51109aacc88a598e6d3cfe5ea0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ff568a3c1d4cc51109aacc88a598e6d3cfe5ea0/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d32d4d12096dc39ff428f606e2242eaae0c6a0de", "url": "https://api.github.com/repos/rust-lang/rust/commits/d32d4d12096dc39ff428f606e2242eaae0c6a0de", "html_url": "https://github.com/rust-lang/rust/commit/d32d4d12096dc39ff428f606e2242eaae0c6a0de"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "8a9f2d3e99425124e0ecb4c29997bea2180148c8", "filename": "src/libcore/iterator.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/0ff568a3c1d4cc51109aacc88a598e6d3cfe5ea0/src%2Flibcore%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ff568a3c1d4cc51109aacc88a598e6d3cfe5ea0/src%2Flibcore%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiterator.rs?ref=0ff568a3c1d4cc51109aacc88a598e6d3cfe5ea0", "patch": "@@ -22,6 +22,7 @@ pub trait IteratorUtil<A> {\n     // FIXME: #5898: should be called map\n     fn transform<'r, B>(self, f: &'r fn(A) -> B) -> MapIterator<'r, A, B, Self>;\n     fn filter<'r>(self, predicate: &'r fn(&A) -> bool) -> FilterIterator<'r, A, Self>;\n+    fn enumerate(self) -> EnumerateIterator<Self>;\n     fn advance(&mut self, f: &fn(A) -> bool);\n }\n \n@@ -42,6 +43,11 @@ impl<A, T: Iterator<A>> IteratorUtil<A> for T {\n         FilterIterator{iter: self, predicate: predicate}\n     }\n \n+    #[inline(always)]\n+    fn enumerate(self) -> EnumerateIterator<T> {\n+        EnumerateIterator{iter: self, count: 0}\n+    }\n+\n     /// A shim implementing the `for` loop iteration protocol for iterator objects\n     #[inline]\n     fn advance(&mut self, f: &fn(A) -> bool) {\n@@ -104,3 +110,22 @@ impl<'self, A, B, T: Iterator<A>> Iterator<B> for MapIterator<'self, A, B, T> {\n         }\n     }\n }\n+\n+pub struct EnumerateIterator<T> {\n+    priv iter: T,\n+    priv count: uint\n+}\n+\n+impl<A, T: Iterator<A>> Iterator<(uint, A)> for EnumerateIterator<T> {\n+    #[inline]\n+    fn next(&mut self) -> Option<(uint, A)> {\n+        match self.iter.next() {\n+            Some(a) => {\n+                let ret = Some((self.count, a));\n+                self.count += 1;\n+                ret\n+            }\n+            _ => None\n+        }\n+    }\n+}"}, {"sha": "eebe6a7a37f32497ae6cbe945b4edf134bd56b7c", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0ff568a3c1d4cc51109aacc88a598e6d3cfe5ea0/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ff568a3c1d4cc51109aacc88a598e6d3cfe5ea0/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=0ff568a3c1d4cc51109aacc88a598e6d3cfe5ea0", "patch": "@@ -4474,6 +4474,16 @@ mod tests {\n             i += 1;\n         }\n     }\n+\n+    #[test]\n+    fn test_iterator_enumerate() {\n+        use iterator::*;\n+        let xs = [0u,1,2,3,4,5];\n+        let mut it = xs.iter().enumerate();\n+        for it.advance |(i, &x): (uint, &uint)| {\n+            assert_eq!(i, x);\n+        }\n+    }\n }\n \n // Local Variables:"}]}