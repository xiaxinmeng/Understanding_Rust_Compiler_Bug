{"sha": "6af8e46a9af03b94baec980d188798a58f3eb75c", "node_id": "C_kwDOAAsO6NoAKDZhZjhlNDZhOWFmMDNiOTRiYWVjOTgwZDE4ODc5OGE1OGYzZWI3NWM", "commit": {"author": {"name": "nidnogg", "email": "henriquevt98@gmail.com", "date": "2022-08-18T04:54:11Z"}, "committer": {"name": "nidnogg", "email": "henriquevt98@gmail.com", "date": "2022-08-22T02:22:50Z"}, "message": "Finished const_eval module migration, moving onto sibling folders", "tree": {"sha": "cf12141dad38c8774ce269e2f47b0deb4026c302", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf12141dad38c8774ce269e2f47b0deb4026c302"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6af8e46a9af03b94baec980d188798a58f3eb75c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6af8e46a9af03b94baec980d188798a58f3eb75c", "html_url": "https://github.com/rust-lang/rust/commit/6af8e46a9af03b94baec980d188798a58f3eb75c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6af8e46a9af03b94baec980d188798a58f3eb75c/comments", "author": {"login": "nidnogg", "id": 17261185, "node_id": "MDQ6VXNlcjE3MjYxMTg1", "avatar_url": "https://avatars.githubusercontent.com/u/17261185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nidnogg", "html_url": "https://github.com/nidnogg", "followers_url": "https://api.github.com/users/nidnogg/followers", "following_url": "https://api.github.com/users/nidnogg/following{/other_user}", "gists_url": "https://api.github.com/users/nidnogg/gists{/gist_id}", "starred_url": "https://api.github.com/users/nidnogg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nidnogg/subscriptions", "organizations_url": "https://api.github.com/users/nidnogg/orgs", "repos_url": "https://api.github.com/users/nidnogg/repos", "events_url": "https://api.github.com/users/nidnogg/events{/privacy}", "received_events_url": "https://api.github.com/users/nidnogg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nidnogg", "id": 17261185, "node_id": "MDQ6VXNlcjE3MjYxMTg1", "avatar_url": "https://avatars.githubusercontent.com/u/17261185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nidnogg", "html_url": "https://github.com/nidnogg", "followers_url": "https://api.github.com/users/nidnogg/followers", "following_url": "https://api.github.com/users/nidnogg/following{/other_user}", "gists_url": "https://api.github.com/users/nidnogg/gists{/gist_id}", "starred_url": "https://api.github.com/users/nidnogg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nidnogg/subscriptions", "organizations_url": "https://api.github.com/users/nidnogg/orgs", "repos_url": "https://api.github.com/users/nidnogg/repos", "events_url": "https://api.github.com/users/nidnogg/events{/privacy}", "received_events_url": "https://api.github.com/users/nidnogg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b71ffca18a9f4a9515773b2c23d13f501d1e08f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b71ffca18a9f4a9515773b2c23d13f501d1e08f", "html_url": "https://github.com/rust-lang/rust/commit/0b71ffca18a9f4a9515773b2c23d13f501d1e08f"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "57867f77a02e48337549f1b755290813e8c45f21", "filename": "compiler/rustc_const_eval/src/const_eval/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6af8e46a9af03b94baec980d188798a58f3eb75c/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6af8e46a9af03b94baec980d188798a58f3eb75c/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmod.rs?ref=6af8e46a9af03b94baec980d188798a58f3eb75c", "patch": "@@ -1,16 +1,16 @@\n // Not in interpret to make sure we do not use private implementation details\n \n+use crate::errors::MaxNumNodesExceeded;\n+use crate::interpret::{\n+    intern_const_alloc_recursive, ConstValue, InternKind, InterpCx, InterpResult, MemPlaceMeta,\n+    Scalar,\n+};\n use rustc_hir::Mutability;\n use rustc_middle::mir;\n use rustc_middle::mir::interpret::{EvalToValTreeResult, GlobalId};\n use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::{source_map::DUMMY_SP, symbol::Symbol};\n \n-use crate::interpret::{\n-    intern_const_alloc_recursive, ConstValue, InternKind, InterpCx, InterpResult, MemPlaceMeta,\n-    Scalar,\n-};\n-\n mod error;\n mod eval_queries;\n mod fn_queries;\n@@ -77,7 +77,7 @@ pub(crate) fn eval_to_valtree<'tcx>(\n                 ValTreeCreationError::NodesOverflow => {\n                     let msg = format!(\"maximum number of nodes exceeded in constant {}\", &s);\n                     let mut diag = match tcx.hir().span_if_local(did) {\n-                        Some(span) => tcx.sess.struct_span_err(span, &msg),\n+                        Some(span) => tcx.sess.create_err(MaxNumNodesExceeded { span, s }),\n                         None => tcx.sess.struct_err(&msg),\n                     };\n                     diag.emit();"}, {"sha": "1a0faad2c2c55f34af9496f407d959dfa525777a", "filename": "compiler/rustc_const_eval/src/errors.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6af8e46a9af03b94baec980d188798a58f3eb75c/compiler%2Frustc_const_eval%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6af8e46a9af03b94baec980d188798a58f3eb75c/compiler%2Frustc_const_eval%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ferrors.rs?ref=6af8e46a9af03b94baec980d188798a58f3eb75c", "patch": "@@ -87,3 +87,11 @@ pub(crate) struct TransientMutBorrowErrRaw {\n     pub span: Span,\n     pub kind: ConstContext,\n }\n+\n+#[derive(SessionDiagnostic)]\n+#[error(const_eval::const_evaL_max_num_nodes_exceeded)]\n+pub(crate) struct MaxNumNodesExceeded {\n+    #[primary_span]\n+    pub span: Span,\n+    pub s: String,\n+}"}, {"sha": "37abbe321bd68a94dcdc56b665e831b028c52ae2", "filename": "compiler/rustc_error_messages/locales/en-US/const_eval.ftl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6af8e46a9af03b94baec980d188798a58f3eb75c/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fconst_eval.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/6af8e46a9af03b94baec980d188798a58f3eb75c/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fconst_eval.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fconst_eval.ftl?ref=6af8e46a9af03b94baec980d188798a58f3eb75c", "patch": "@@ -29,3 +29,5 @@ const_eval_mut_deref =\n const_eval_transient_mut_borrow = mutable references are not allowed in {$kind}s\n \n const_eval_transient_mut_borrow_raw = raw mutable references are not allowed in {$kind}s\n+\n+const_evaL_max_num_nodes_exceeded = maximum number of nodes exceeded in constant {$s}"}]}