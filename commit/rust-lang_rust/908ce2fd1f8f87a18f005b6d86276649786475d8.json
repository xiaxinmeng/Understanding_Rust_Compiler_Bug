{"sha": "908ce2fd1f8f87a18f005b6d86276649786475d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwOGNlMmZkMWY4Zjg3YTE4ZjAwNWI2ZDg2Mjc2NjQ5Nzg2NDc1ZDg=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-22T16:22:06Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-23T14:57:59Z"}, "message": "Improve wording of macro-not-found-but-name-exists note.", "tree": {"sha": "58a1cd66889becdf6661de85b3750cb33ac3a971", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58a1cd66889becdf6661de85b3750cb33ac3a971"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/908ce2fd1f8f87a18f005b6d86276649786475d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/908ce2fd1f8f87a18f005b6d86276649786475d8", "html_url": "https://github.com/rust-lang/rust/commit/908ce2fd1f8f87a18f005b6d86276649786475d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/908ce2fd1f8f87a18f005b6d86276649786475d8/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e22bf47d0fb496dea79ec436ad8f5f6fef2418c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e22bf47d0fb496dea79ec436ad8f5f6fef2418c", "html_url": "https://github.com/rust-lang/rust/commit/4e22bf47d0fb496dea79ec436ad8f5f6fef2418c"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "ca2c22854c4f5d1bd9d2c9eaaaa76f79471b2456", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/908ce2fd1f8f87a18f005b6d86276649786475d8/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/908ce2fd1f8f87a18f005b6d86276649786475d8/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=908ce2fd1f8f87a18f005b6d86276649786475d8", "patch": "@@ -971,14 +971,24 @@ impl<'a> Resolver<'a> {\n                 false,\n                 ident.span,\n             ) {\n-                let res = binding.res();\n-                let desc = match res.macro_kind() {\n-                    Some(MacroKind::Bang) => \"a function-like macro\".to_string(),\n-                    Some(MacroKind::Attr) => format!(\"an attribute: `#[{}]`\", ident),\n-                    Some(MacroKind::Derive) => format!(\"a derive macro: `#[derive({})]`\", ident),\n-                    // Don't confuse the user with tool modules.\n-                    None if res == Res::ToolMod => continue,\n-                    None => format!(\n+                let desc = match binding.res() {\n+                    Res::Def(DefKind::Macro(MacroKind::Bang), _) => {\n+                        \"a function-like macro\".to_string()\n+                    }\n+                    Res::Def(DefKind::Macro(MacroKind::Attr), _) | Res::NonMacroAttr(..) => {\n+                        format!(\"an attribute: `#[{}]`\", ident)\n+                    }\n+                    Res::Def(DefKind::Macro(MacroKind::Derive), _) => {\n+                        format!(\"a derive macro: `#[derive({})]`\", ident)\n+                    }\n+                    Res::ToolMod => {\n+                        // Don't confuse the user with tool modules.\n+                        continue;\n+                    }\n+                    Res::Def(DefKind::Trait, _) if macro_kind == MacroKind::Derive => {\n+                        \"only a trait, without a derive macro\".to_string()\n+                    }\n+                    res => format!(\n                         \"{} {}, not {} {}\",\n                         res.article(),\n                         res.descr(),"}, {"sha": "14e2f66068b01f1a76535e2fd4836e901d529759", "filename": "src/test/ui/macros/issue-88206.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/908ce2fd1f8f87a18f005b6d86276649786475d8/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.rs", "raw_url": "https://github.com/rust-lang/rust/raw/908ce2fd1f8f87a18f005b6d86276649786475d8/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.rs?ref=908ce2fd1f8f87a18f005b6d86276649786475d8", "patch": "@@ -15,7 +15,7 @@ mod hey {\n }\n \n use hey::{Serialize, Deserialize, X};\n-//~^ NOTE `Serialize` is imported here, but it is a trait\n+//~^ NOTE `Serialize` is imported here, but it is only a trait, without a derive macro\n //~| NOTE `Deserialize` is imported here, but it is a trait\n //~| NOTE `X` is imported here, but it is a struct\n "}, {"sha": "f7f5b564880075c9b676da0b544accbbac194092", "filename": "src/test/ui/macros/issue-88206.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/908ce2fd1f8f87a18f005b6d86276649786475d8/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/908ce2fd1f8f87a18f005b6d86276649786475d8/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.stderr?ref=908ce2fd1f8f87a18f005b6d86276649786475d8", "patch": "@@ -104,7 +104,7 @@ error: cannot find derive macro `Serialize` in this scope\n LL | #[derive(Serialize)]\n    |          ^^^^^^^^^\n    |\n-note: `Serialize` is imported here, but it is a trait, not a derive macro\n+note: `Serialize` is imported here, but it is only a trait, without a derive macro\n   --> $DIR/issue-88206.rs:17:11\n    |\n LL | use hey::{Serialize, Deserialize, X};"}]}