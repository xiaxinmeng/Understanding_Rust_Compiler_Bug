{"sha": "01d7af11e17887c4fc77902e77840d00309bf572", "node_id": "C_kwDOAAsO6NoAKDAxZDdhZjExZTE3ODg3YzRmYzc3OTAyZTc3ODQwZDAwMzA5YmY1NzI", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2023-03-06T14:38:31Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2023-03-15T12:55:22Z"}, "message": "Bump version placeholders", "tree": {"sha": "5faf354414da359d80a5904a52341d298944accb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5faf354414da359d80a5904a52341d298944accb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01d7af11e17887c4fc77902e77840d00309bf572", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01d7af11e17887c4fc77902e77840d00309bf572", "html_url": "https://github.com/rust-lang/rust/commit/01d7af11e17887c4fc77902e77840d00309bf572", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01d7af11e17887c4fc77902e77840d00309bf572/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "992d154f3a84cc8abcefcf6e6cf3698e4821b506", "url": "https://api.github.com/repos/rust-lang/rust/commits/992d154f3a84cc8abcefcf6e6cf3698e4821b506", "html_url": "https://github.com/rust-lang/rust/commit/992d154f3a84cc8abcefcf6e6cf3698e4821b506"}], "stats": {"total": 48, "additions": 24, "deletions": 24}, "files": [{"sha": "3d644de166526343d977bb09b7067162571fdd4a", "filename": "compiler/rustc_feature/src/accepted.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01d7af11e17887c4fc77902e77840d00309bf572/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01d7af11e17887c4fc77902e77840d00309bf572/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs?ref=01d7af11e17887c4fc77902e77840d00309bf572", "patch": "@@ -91,7 +91,7 @@ declare_features! (\n     /// Allows coercing non capturing closures to function pointers.\n     (accepted, closure_to_fn_coercion, \"1.19.0\", Some(39817), None),\n     /// Allows using the CMPXCHG16B target feature.\n-    (accepted, cmpxchg16b_target_feature, \"CURRENT_RUSTC_VERSION\", Some(44839), None),\n+    (accepted, cmpxchg16b_target_feature, \"1.69.0\", Some(44839), None),\n     /// Allows usage of the `compile_error!` macro.\n     (accepted, compile_error, \"1.20.0\", Some(40872), None),\n     /// Allows `impl Trait` in function return types."}, {"sha": "e0a7c864b94dc964cc1b577a0d7c23cbec6112f7", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/01d7af11e17887c4fc77902e77840d00309bf572/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01d7af11e17887c4fc77902e77840d00309bf572/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=01d7af11e17887c4fc77902e77840d00309bf572", "patch": "@@ -161,7 +161,7 @@ declare_features! (\n     /// Allows using `#[lang = \"..\"]` attribute for linking items to special compiler logic.\n     (active, lang_items, \"1.0.0\", None, None),\n     /// Allows the `multiple_supertrait_upcastable` lint.\n-    (active, multiple_supertrait_upcastable, \"CURRENT_RUSTC_VERSION\", None, None),\n+    (active, multiple_supertrait_upcastable, \"1.69.0\", None, None),\n     /// Allows using `#[omit_gdb_pretty_printer_section]`.\n     (active, omit_gdb_pretty_printer_section, \"1.5.0\", None, None),\n     /// Allows using `#[prelude_import]` on glob `use` items.\n@@ -214,7 +214,7 @@ declare_features! (\n     /// Allows declaring with `#![needs_panic_runtime]` that a panic runtime is needed.\n     (active, needs_panic_runtime, \"1.10.0\", Some(32837), None),\n     /// Allows using `+bundled,+whole-archive` native libs.\n-    (active, packed_bundled_libs, \"CURRENT_RUSTC_VERSION\", Some(108081), None),\n+    (active, packed_bundled_libs, \"1.69.0\", Some(108081), None),\n     /// Allows using the `#![panic_runtime]` attribute.\n     (active, panic_runtime, \"1.10.0\", Some(32837), None),\n     /// Allows using `#[rustc_allow_const_fn_unstable]`.\n@@ -468,7 +468,7 @@ declare_features! (\n     /// Allows using the `non_exhaustive_omitted_patterns` lint.\n     (active, non_exhaustive_omitted_patterns_lint, \"1.57.0\", Some(89554), None),\n     /// Allows `for<T>` binders in where-clauses\n-    (incomplete, non_lifetime_binders, \"CURRENT_RUSTC_VERSION\", Some(108185), None),\n+    (incomplete, non_lifetime_binders, \"1.69.0\", Some(108185), None),\n     /// Allows making `dyn Trait` well-formed even if `Trait` is not object safe.\n     /// In that case, `dyn Trait: Trait` does not hold. Moreover, coercions and\n     /// casts in safe Rust to `dyn Trait` for such a `Trait` is also forbidden."}, {"sha": "d4103183cd8b7a10df34378ebc0676845aa31922", "filename": "library/core/src/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01d7af11e17887c4fc77902e77840d00309bf572/library%2Fcore%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01d7af11e17887c4fc77902e77840d00309bf572/library%2Fcore%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ferror.rs?ref=01d7af11e17887c4fc77902e77840d00309bf572", "patch": "@@ -489,7 +489,7 @@ impl Error for crate::char::CharTryFromError {\n #[stable(feature = \"duration_checked_float\", since = \"1.66.0\")]\n impl Error for crate::time::TryFromFloatSecsError {}\n \n-#[stable(feature = \"cstr_from_bytes_until_nul\", since = \"CURRENT_RUSTC_VERSION\")]\n+#[stable(feature = \"cstr_from_bytes_until_nul\", since = \"1.69.0\")]\n impl Error for crate::ffi::FromBytesUntilNulError {}\n \n #[unstable(feature = \"get_many_mut\", issue = \"104642\")]"}, {"sha": "fe8abdf7fad2fa49c6dc1d5571d3767f6c4cc488", "filename": "library/core/src/ffi/c_str.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/01d7af11e17887c4fc77902e77840d00309bf572/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01d7af11e17887c4fc77902e77840d00309bf572/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs?ref=01d7af11e17887c4fc77902e77840d00309bf572", "patch": "@@ -153,10 +153,10 @@ impl Error for FromBytesWithNulError {\n /// This error is created by the [`CStr::from_bytes_until_nul`] method.\n ///\n #[derive(Clone, PartialEq, Eq, Debug)]\n-#[stable(feature = \"cstr_from_bytes_until_nul\", since = \"CURRENT_RUSTC_VERSION\")]\n+#[stable(feature = \"cstr_from_bytes_until_nul\", since = \"1.69.0\")]\n pub struct FromBytesUntilNulError(());\n \n-#[stable(feature = \"cstr_from_bytes_until_nul\", since = \"CURRENT_RUSTC_VERSION\")]\n+#[stable(feature = \"cstr_from_bytes_until_nul\", since = \"1.69.0\")]\n impl fmt::Display for FromBytesUntilNulError {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         write!(f, \"data provided does not contain a nul\")\n@@ -324,8 +324,8 @@ impl CStr {\n     /// ```\n     ///\n     #[rustc_allow_const_fn_unstable(const_slice_index)]\n-    #[stable(feature = \"cstr_from_bytes_until_nul\", since = \"CURRENT_RUSTC_VERSION\")]\n-    #[rustc_const_stable(feature = \"cstr_from_bytes_until_nul\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[stable(feature = \"cstr_from_bytes_until_nul\", since = \"1.69.0\")]\n+    #[rustc_const_stable(feature = \"cstr_from_bytes_until_nul\", since = \"1.69.0\")]\n     pub const fn from_bytes_until_nul(bytes: &[u8]) -> Result<&CStr, FromBytesUntilNulError> {\n         let nul_pos = memchr::memchr(0, bytes);\n         match nul_pos {"}, {"sha": "2d48e27158004eaa58c7c4923661febec989dc8d", "filename": "library/core/src/net/socket_addr.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/01d7af11e17887c4fc77902e77840d00309bf572/library%2Fcore%2Fsrc%2Fnet%2Fsocket_addr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01d7af11e17887c4fc77902e77840d00309bf572/library%2Fcore%2Fsrc%2Fnet%2Fsocket_addr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnet%2Fsocket_addr.rs?ref=01d7af11e17887c4fc77902e77840d00309bf572", "patch": "@@ -121,7 +121,7 @@ impl SocketAddr {\n     /// ```\n     #[stable(feature = \"ip_addr\", since = \"1.7.0\")]\n     #[must_use]\n-    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"1.69.0\")]\n     pub const fn new(ip: IpAddr, port: u16) -> SocketAddr {\n         match ip {\n             IpAddr::V4(a) => SocketAddr::V4(SocketAddrV4::new(a, port)),\n@@ -141,7 +141,7 @@ impl SocketAddr {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"ip_addr\", since = \"1.7.0\")]\n-    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"1.69.0\")]\n     pub const fn ip(&self) -> IpAddr {\n         match *self {\n             SocketAddr::V4(ref a) => IpAddr::V4(*a.ip()),\n@@ -182,7 +182,7 @@ impl SocketAddr {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"1.69.0\")]\n     pub const fn port(&self) -> u16 {\n         match *self {\n             SocketAddr::V4(ref a) => a.port(),\n@@ -226,7 +226,7 @@ impl SocketAddr {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"sockaddr_checker\", since = \"1.16.0\")]\n-    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"1.69.0\")]\n     pub const fn is_ipv4(&self) -> bool {\n         matches!(*self, SocketAddr::V4(_))\n     }\n@@ -248,7 +248,7 @@ impl SocketAddr {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"sockaddr_checker\", since = \"1.16.0\")]\n-    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"1.69.0\")]\n     pub const fn is_ipv6(&self) -> bool {\n         matches!(*self, SocketAddr::V6(_))\n     }\n@@ -268,7 +268,7 @@ impl SocketAddrV4 {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[must_use]\n-    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"1.69.0\")]\n     pub const fn new(ip: Ipv4Addr, port: u16) -> SocketAddrV4 {\n         SocketAddrV4 { ip, port }\n     }\n@@ -285,7 +285,7 @@ impl SocketAddrV4 {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"1.69.0\")]\n     pub const fn ip(&self) -> &Ipv4Addr {\n         &self.ip\n     }\n@@ -318,7 +318,7 @@ impl SocketAddrV4 {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"1.69.0\")]\n     pub const fn port(&self) -> u16 {\n         self.port\n     }\n@@ -359,7 +359,7 @@ impl SocketAddrV6 {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[must_use]\n-    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"1.69.0\")]\n     pub const fn new(ip: Ipv6Addr, port: u16, flowinfo: u32, scope_id: u32) -> SocketAddrV6 {\n         SocketAddrV6 { ip, port, flowinfo, scope_id }\n     }\n@@ -376,7 +376,7 @@ impl SocketAddrV6 {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"1.69.0\")]\n     pub const fn ip(&self) -> &Ipv6Addr {\n         &self.ip\n     }\n@@ -409,7 +409,7 @@ impl SocketAddrV6 {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"1.69.0\")]\n     pub const fn port(&self) -> u16 {\n         self.port\n     }\n@@ -452,7 +452,7 @@ impl SocketAddrV6 {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"1.69.0\")]\n     pub const fn flowinfo(&self) -> u32 {\n         self.flowinfo\n     }\n@@ -492,7 +492,7 @@ impl SocketAddrV6 {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_socketaddr\", since = \"1.69.0\")]\n     pub const fn scope_id(&self) -> u32 {\n         self.scope_id\n     }"}, {"sha": "99a4e0b5106c255af44d5baaf8cc9c20bdd11ea5", "filename": "library/std/src/os/fd/owned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01d7af11e17887c4fc77902e77840d00309bf572/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01d7af11e17887c4fc77902e77840d00309bf572/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs?ref=01d7af11e17887c4fc77902e77840d00309bf572", "patch": "@@ -399,7 +399,7 @@ impl<T: AsFd> AsFd for crate::sync::Arc<T> {\n     }\n }\n \n-#[stable(feature = \"asfd_rc\", since = \"CURRENT_RUSTC_VERSION\")]\n+#[stable(feature = \"asfd_rc\", since = \"1.69.0\")]\n impl<T: AsFd> AsFd for crate::rc::Rc<T> {\n     #[inline]\n     fn as_fd(&self) -> BorrowedFd<'_> {"}, {"sha": "592e072ad908ab4c9029e2ab3a5515597c02181a", "filename": "library/std/src/os/fd/raw.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01d7af11e17887c4fc77902e77840d00309bf572/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01d7af11e17887c4fc77902e77840d00309bf572/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs?ref=01d7af11e17887c4fc77902e77840d00309bf572", "patch": "@@ -254,7 +254,7 @@ impl<T: AsRawFd> AsRawFd for crate::sync::Arc<T> {\n     }\n }\n \n-#[stable(feature = \"asfd_rc\", since = \"CURRENT_RUSTC_VERSION\")]\n+#[stable(feature = \"asfd_rc\", since = \"1.69.0\")]\n impl<T: AsRawFd> AsRawFd for crate::rc::Rc<T> {\n     #[inline]\n     fn as_raw_fd(&self) -> RawFd {"}]}