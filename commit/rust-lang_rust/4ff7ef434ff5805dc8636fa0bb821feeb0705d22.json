{"sha": "4ff7ef434ff5805dc8636fa0bb821feeb0705d22", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmZjdlZjQzNGZmNTgwNWRjODYzNmZhMGJiODIxZmVlYjA3MDVkMjI=", "commit": {"author": {"name": "=Mark Sinclair", "email": "mark.edward.x@gmail.com", "date": "2013-07-14T15:26:03Z"}, "committer": {"name": "=Mark Sinclair", "email": "mark.edward.x@gmail.com", "date": "2013-07-14T15:26:03Z"}, "message": "Implemented FromIterator for std::hashmap", "tree": {"sha": "893d3cfab36f6a85cf41f83d5ed91e88400c7396", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/893d3cfab36f6a85cf41f83d5ed91e88400c7396"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ff7ef434ff5805dc8636fa0bb821feeb0705d22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ff7ef434ff5805dc8636fa0bb821feeb0705d22", "html_url": "https://github.com/rust-lang/rust/commit/4ff7ef434ff5805dc8636fa0bb821feeb0705d22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ff7ef434ff5805dc8636fa0bb821feeb0705d22/comments", "author": {"login": "MarkJr94", "id": 1462602, "node_id": "MDQ6VXNlcjE0NjI2MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkJr94", "html_url": "https://github.com/MarkJr94", "followers_url": "https://api.github.com/users/MarkJr94/followers", "following_url": "https://api.github.com/users/MarkJr94/following{/other_user}", "gists_url": "https://api.github.com/users/MarkJr94/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkJr94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkJr94/subscriptions", "organizations_url": "https://api.github.com/users/MarkJr94/orgs", "repos_url": "https://api.github.com/users/MarkJr94/repos", "events_url": "https://api.github.com/users/MarkJr94/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkJr94/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MarkJr94", "id": 1462602, "node_id": "MDQ6VXNlcjE0NjI2MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkJr94", "html_url": "https://github.com/MarkJr94", "followers_url": "https://api.github.com/users/MarkJr94/followers", "following_url": "https://api.github.com/users/MarkJr94/following{/other_user}", "gists_url": "https://api.github.com/users/MarkJr94/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkJr94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkJr94/subscriptions", "organizations_url": "https://api.github.com/users/MarkJr94/orgs", "repos_url": "https://api.github.com/users/MarkJr94/repos", "events_url": "https://api.github.com/users/MarkJr94/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkJr94/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d0feb58e7f5ae67546db9c3cd7fdf4ab792d839", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d0feb58e7f5ae67546db9c3cd7fdf4ab792d839", "html_url": "https://github.com/rust-lang/rust/commit/8d0feb58e7f5ae67546db9c3cd7fdf4ab792d839"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "d62a445882efd647531b0905ae695e71e923f535", "filename": "src/libstd/hashmap.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/4ff7ef434ff5805dc8636fa0bb821feeb0705d22/src%2Flibstd%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff7ef434ff5805dc8636fa0bb821feeb0705d22/src%2Flibstd%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fhashmap.rs?ref=4ff7ef434ff5805dc8636fa0bb821feeb0705d22", "patch": "@@ -18,7 +18,7 @@\n use container::{Container, Mutable, Map, Set};\n use cmp::{Eq, Equiv};\n use hash::Hash;\n-use iterator::{Iterator, IteratorUtil};\n+use iterator::{Iterator, IteratorUtil, FromIterator};\n use num;\n use option::{None, Option, Some};\n use rand::RngUtil;\n@@ -610,6 +610,18 @@ impl<'self, K> Iterator<&'self K> for HashSetIterator<'self, K> {\n     }\n }\n \n+impl<K: Eq + Hash, V, T: Iterator<(K, V)>> FromIterator<(K, V), T> for HashMap<K, V> {\n+    pub fn from_iterator(iter: &mut T) -> HashMap<K, V> {\n+        let (lower, _) = iter.size_hint();\n+        let mut map = HashMap::with_capacity(lower);\n+\n+        for iter.advance |(k, v)| {\n+            map.insert(k, v);\n+        }\n+\n+        map\n+    }\n+}        \n \n /// An implementation of a hash set using the underlying representation of a\n /// HashMap where the value is (). As with the `HashMap` type, a `HashSet`\n@@ -935,6 +947,17 @@ mod test_map {\n \n         assert_eq!(m.find_equiv(&(\"qux\")), None);\n     }\n+\n+    #[test]\n+    fn test_from_iter() {\n+        let xs = ~[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)];\n+        \n+        let map: HashMap<int, int> = xs.iter().transform(|&x| x).collect();\n+\n+        for xs.iter().advance |&(k, v)| {\n+            assert_eq!(map.find(&k), Some(&v));\n+        }\n+    }\n }\n \n #[cfg(test)]"}]}