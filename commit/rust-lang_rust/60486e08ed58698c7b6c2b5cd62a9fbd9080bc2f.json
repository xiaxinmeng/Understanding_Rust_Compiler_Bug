{"sha": "60486e08ed58698c7b6c2b5cd62a9fbd9080bc2f", "node_id": "C_kwDOAAsO6NoAKDYwNDg2ZTA4ZWQ1ODY5OGM3YjZjMmI1Y2Q2MmE5ZmJkOTA4MGJjMmY", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-03-15T00:17:14Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-03-15T00:17:14Z"}, "message": "SimdPartialOrd implies SimdPartialEq", "tree": {"sha": "6a7eaf87c6975f8996300c6dc8a08d091e389d50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a7eaf87c6975f8996300c6dc8a08d091e389d50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60486e08ed58698c7b6c2b5cd62a9fbd9080bc2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60486e08ed58698c7b6c2b5cd62a9fbd9080bc2f", "html_url": "https://github.com/rust-lang/rust/commit/60486e08ed58698c7b6c2b5cd62a9fbd9080bc2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60486e08ed58698c7b6c2b5cd62a9fbd9080bc2f/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a02c4d9cbee120915535f6fc8379849e10e8373", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a02c4d9cbee120915535f6fc8379849e10e8373", "html_url": "https://github.com/rust-lang/rust/commit/2a02c4d9cbee120915535f6fc8379849e10e8373"}], "stats": {"total": 13, "additions": 2, "deletions": 11}, "files": [{"sha": "9a87bc2e34460628597d227af8350f136bc39632", "filename": "crates/core_simd/src/ord.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/60486e08ed58698c7b6c2b5cd62a9fbd9080bc2f/crates%2Fcore_simd%2Fsrc%2Ford.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60486e08ed58698c7b6c2b5cd62a9fbd9080bc2f/crates%2Fcore_simd%2Fsrc%2Ford.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ford.rs?ref=60486e08ed58698c7b6c2b5cd62a9fbd9080bc2f", "patch": "@@ -1,10 +1,7 @@\n-use crate::simd::{intrinsics, LaneCount, Mask, Simd, SimdElement, SupportedLaneCount};\n+use crate::simd::{intrinsics, LaneCount, Mask, Simd, SimdPartialEq, SupportedLaneCount};\n \n /// Parallel `PartialOrd`.\n-pub trait SimdPartialOrd {\n-    /// The mask type returned by each comparison.\n-    type Mask;\n-\n+pub trait SimdPartialOrd: SimdPartialEq {\n     /// Test if each lane is less than the corresponding lane in `other`.\n     #[must_use = \"method returns a new mask and does not mutate the original value\"]\n     fn simd_lt(self, other: Self) -> Self::Mask;\n@@ -51,8 +48,6 @@ macro_rules! impl_integer {\n         where\n             LaneCount<LANES>: SupportedLaneCount,\n         {\n-            type Mask = Mask<<$integer as SimdElement>::Mask, LANES>;\n-\n             #[inline]\n             fn simd_lt(self, other: Self) -> Self::Mask {\n                 // Safety: `self` is a vector, and the result of the comparison\n@@ -118,8 +113,6 @@ macro_rules! impl_float {\n         where\n             LaneCount<LANES>: SupportedLaneCount,\n         {\n-            type Mask = Mask<<$float as SimdElement>::Mask, LANES>;\n-\n             #[inline]\n             fn simd_lt(self, other: Self) -> Self::Mask {\n                 // Safety: `self` is a vector, and the result of the comparison\n@@ -161,8 +154,6 @@ macro_rules! impl_mask {\n         where\n             LaneCount<LANES>: SupportedLaneCount,\n         {\n-            type Mask = Self;\n-\n             #[inline]\n             fn simd_lt(self, other: Self) -> Self::Mask {\n                 // Safety: `self` is a vector, and the result of the comparison"}]}