{"sha": "233dede5b67ef6edc97797663a671538dcbd3c57", "node_id": "C_kwDOAAsO6NoAKDIzM2RlZGU1YjY3ZWY2ZWRjOTc3OTc2NjNhNjcxNTM4ZGNiZDNjNTc", "commit": {"author": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-11-28T20:52:27Z"}, "committer": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-12-03T22:51:49Z"}, "message": "fix inline asm test by not hardcoding symbol names", "tree": {"sha": "7aff4d197f53822a34d6c444283632aff1cd292b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7aff4d197f53822a34d6c444283632aff1cd292b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/233dede5b67ef6edc97797663a671538dcbd3c57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/233dede5b67ef6edc97797663a671538dcbd3c57", "html_url": "https://github.com/rust-lang/rust/commit/233dede5b67ef6edc97797663a671538dcbd3c57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/233dede5b67ef6edc97797663a671538dcbd3c57/comments", "author": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f870be4b57586f0ecea23c155228209b02e3445", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f870be4b57586f0ecea23c155228209b02e3445", "html_url": "https://github.com/rust-lang/rust/commit/7f870be4b57586f0ecea23c155228209b02e3445"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "94cc7d750491a9d0bcb7616eda308d247b6dd87b", "filename": "src/test/ui/asm/aarch64/may_unwind.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/233dede5b67ef6edc97797663a671538dcbd3c57/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fmay_unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/233dede5b67ef6edc97797663a671538dcbd3c57/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fmay_unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fmay_unwind.rs?ref=233dede5b67ef6edc97797663a671538dcbd3c57", "patch": "@@ -3,7 +3,7 @@\n // run-pass\n // needs-asm-support\n \n-#![feature(asm, asm_unwind)]\n+#![feature(asm, asm_sym, asm_unwind)]\n \n use std::panic::{catch_unwind, resume_unwind, AssertUnwindSafe};\n \n@@ -15,7 +15,6 @@ impl Drop for Foo<'_> {\n     }\n }\n \n-#[no_mangle]\n extern \"C\" fn panicky() {\n     resume_unwind(Box::new(()));\n }\n@@ -24,7 +23,14 @@ fn main() {\n     let flag = &mut true;\n     catch_unwind(AssertUnwindSafe(|| {\n         let _foo = Foo(flag);\n-        unsafe { asm!(\"bl _panicky\", clobber_abi(\"C\"), options(may_unwind)) };\n+        unsafe {\n+            asm!(\n+                \"bl {}\",\n+                sym panicky,\n+                clobber_abi(\"C\"),\n+                options(may_unwind)\n+            );\n+        }\n     }))\n     .expect_err(\"expected a panic\");\n     assert_eq!(*flag, false);"}, {"sha": "5ac4dd9b956d70662e624642dfffd72657b23b3f", "filename": "src/test/ui/asm/x86_64/may_unwind.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/233dede5b67ef6edc97797663a671538dcbd3c57/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Fmay_unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/233dede5b67ef6edc97797663a671538dcbd3c57/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Fmay_unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Fmay_unwind.rs?ref=233dede5b67ef6edc97797663a671538dcbd3c57", "patch": "@@ -3,7 +3,7 @@\n // run-pass\n // needs-asm-support\n \n-#![feature(asm, asm_unwind)]\n+#![feature(asm, asm_sym, asm_unwind)]\n \n use std::panic::{catch_unwind, resume_unwind, AssertUnwindSafe};\n \n@@ -15,7 +15,6 @@ impl Drop for Foo<'_> {\n     }\n }\n \n-#[no_mangle]\n extern \"C\" fn panicky() {\n     resume_unwind(Box::new(()));\n }\n@@ -24,7 +23,14 @@ fn main() {\n     let flag = &mut true;\n     catch_unwind(AssertUnwindSafe(|| {\n         let _foo = Foo(flag);\n-        unsafe { asm!(\"call panicky\", clobber_abi(\"C\"), options(may_unwind)) };\n+        unsafe {\n+            asm!(\n+                \"call {}\",\n+                sym panicky,\n+                clobber_abi(\"C\"),\n+                options(may_unwind)\n+            );\n+        }\n     }))\n     .expect_err(\"expected a panic\");\n     assert_eq!(*flag, false);"}]}