{"sha": "e0111758eb4f215db4ec26f809ef3edf5dfb66f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMTExNzU4ZWI0ZjIxNWRiNGVjMjZmODA5ZWYzZWRmNWRmYjY2ZjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-10-17T21:06:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-17T21:06:46Z"}, "message": "Auto merge of #36915 - jfirebaugh:E0308-split, r=nikomatsakis\n\nUse a distinct error code for \"if may be missing an else clause\"\n\nIntroduce the possibility of assigning distinct error codes to the various origin types of E0308. Start by assigning E0317 for the \"IfExpressionWithNoElse\" case, and write a long diagnostic specific to this case.\n\nFixes #36596", "tree": {"sha": "fa8590b5ab17783327b773286e6e044a68916224", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa8590b5ab17783327b773286e6e044a68916224"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0111758eb4f215db4ec26f809ef3edf5dfb66f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0111758eb4f215db4ec26f809ef3edf5dfb66f5", "html_url": "https://github.com/rust-lang/rust/commit/e0111758eb4f215db4ec26f809ef3edf5dfb66f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0111758eb4f215db4ec26f809ef3edf5dfb66f5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce316268014ed7bc3599324b379be1331997d3ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce316268014ed7bc3599324b379be1331997d3ab", "html_url": "https://github.com/rust-lang/rust/commit/ce316268014ed7bc3599324b379be1331997d3ab"}, {"sha": "d07602b573d210775dd183d414c1ac36a2751144", "url": "https://api.github.com/repos/rust-lang/rust/commits/d07602b573d210775dd183d414c1ac36a2751144", "html_url": "https://github.com/rust-lang/rust/commit/d07602b573d210775dd183d414c1ac36a2751144"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "465a09505e4a77e4c9b8e86cebb1182d946f4e57", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e0111758eb4f215db4ec26f809ef3edf5dfb66f5/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0111758eb4f215db4ec26f809ef3edf5dfb66f5/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=e0111758eb4f215db4ec26f809ef3edf5dfb66f5", "patch": "@@ -1407,6 +1407,23 @@ fn make_child<'elve>(x: &mut &'elve isize, y: &mut &'elve isize) {\n ```\n \"##,\n \n+E0317: r##\"\n+This error occurs when an `if` expression without an `else` block is used in a\n+context where a type other than `()` is expected, for example a `let`\n+expression:\n+\n+```compile_fail,E0317\n+fn main() {\n+    let x = 5;\n+    let a = if x == 5 { 1 };\n+}\n+```\n+\n+An `if` expression without an `else` block has the type `()`, so this is a type\n+error. To resolve it, add an `else` block having the same type as the `if`\n+block.\n+\"##,\n+\n E0398: r##\"\n In Rust 1.3, the default object lifetime bounds are expected to change, as\n described in RFC #1156 [1]. You are getting a warning because the compiler"}, {"sha": "373ea4aac57b0af1e0b505f3fe658317ac7b6b5b", "filename": "src/librustc/infer/error_reporting.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e0111758eb4f215db4ec26f809ef3edf5dfb66f5/src%2Flibrustc%2Finfer%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0111758eb4f215db4ec26f809ef3edf5dfb66f5/src%2Flibrustc%2Finfer%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting.rs?ref=e0111758eb4f215db4ec26f809ef3edf5dfb66f5", "patch": "@@ -577,11 +577,16 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                                          terr: &TypeError<'tcx>)\n                                          -> DiagnosticBuilder<'tcx>\n     {\n-        // FIXME: do we want to use a different error code for each origin?\n-        let mut diag = struct_span_err!(\n-            self.tcx.sess, trace.origin.span(), E0308,\n-            \"{}\", trace.origin.as_failure_str()\n-        );\n+        let span = trace.origin.span();\n+        let failure_str = trace.origin.as_failure_str();\n+        let mut diag = match trace.origin {\n+            TypeOrigin::IfExpressionWithNoElse(_) => {\n+                struct_span_err!(self.tcx.sess, span, E0317, \"{}\", failure_str)\n+            },\n+            _ => {\n+                struct_span_err!(self.tcx.sess, span, E0308, \"{}\", failure_str)\n+            },\n+        };\n         self.note_type_err(&mut diag, trace.origin, None, Some(trace.values), terr);\n         diag\n     }"}, {"sha": "95bcce5a8474afb6aea4e1672143a32a0b0866b8", "filename": "src/test/compile-fail/if-without-else-result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e0111758eb4f215db4ec26f809ef3edf5dfb66f5/src%2Ftest%2Fcompile-fail%2Fif-without-else-result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0111758eb4f215db4ec26f809ef3edf5dfb66f5/src%2Ftest%2Fcompile-fail%2Fif-without-else-result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fif-without-else-result.rs?ref=e0111758eb4f215db4ec26f809ef3edf5dfb66f5", "patch": "@@ -10,7 +10,7 @@\n \n fn main() {\n     let a = if true { true };\n-    //~^ ERROR if may be missing an else clause\n+    //~^ ERROR if may be missing an else clause [E0317]\n     //~| expected type `()`\n     //~| found type `bool`\n     //~| expected (), found bool"}]}