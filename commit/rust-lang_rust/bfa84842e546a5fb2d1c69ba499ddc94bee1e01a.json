{"sha": "bfa84842e546a5fb2d1c69ba499ddc94bee1e01a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmYTg0ODQyZTU0NmE1ZmIyZDFjNjliYTQ5OWRkYzk0YmVlMWUwMWE=", "commit": {"author": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2021-05-07T11:40:43Z"}, "committer": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2021-05-07T11:55:03Z"}, "message": "Rearrange SGX split module files\n\nIn #75979 several inlined modules were split out into multiple files.\nThis PR keeps the multiple files but moves a few things around to\norganize things in a coherent way.", "tree": {"sha": "6f139af6fcd62774e43a769664e2be98579d51a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f139af6fcd62774e43a769664e2be98579d51a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfa84842e546a5fb2d1c69ba499ddc94bee1e01a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfa84842e546a5fb2d1c69ba499ddc94bee1e01a", "html_url": "https://github.com/rust-lang/rust/commit/bfa84842e546a5fb2d1c69ba499ddc94bee1e01a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfa84842e546a5fb2d1c69ba499ddc94bee1e01a/comments", "author": null, "committer": null, "parents": [{"sha": "ac888e8675182c703c2cd097957878faf88dad94", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac888e8675182c703c2cd097957878faf88dad94", "html_url": "https://github.com/rust-lang/rust/commit/ac888e8675182c703c2cd097957878faf88dad94"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "13d96e9a633d34a344384e1dd760d702d346fd17", "filename": "library/std/src/sys/sgx/abi/tls/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bfa84842e546a5fb2d1c69ba499ddc94bee1e01a/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fabi%2Ftls%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa84842e546a5fb2d1c69ba499ddc94bee1e01a/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fabi%2Ftls%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fabi%2Ftls%2Fmod.rs?ref=bfa84842e546a5fb2d1c69ba499ddc94bee1e01a", "previous_filename": "library/std/src/sys/sgx/abi/tls.rs"}, {"sha": "61bb11d9a6fad746db505927b37854ff3b8ec89a", "filename": "library/std/src/sys/sgx/waitqueue/mod.rs", "status": "renamed", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bfa84842e546a5fb2d1c69ba499ddc94bee1e01a/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fwaitqueue%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa84842e546a5fb2d1c69ba499ddc94bee1e01a/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fwaitqueue%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fwaitqueue%2Fmod.rs?ref=bfa84842e546a5fb2d1c69ba499ddc94bee1e01a", "patch": "@@ -13,13 +13,8 @@\n #[cfg(test)]\n mod tests;\n \n-/// A doubly-linked list where callers are in charge of memory allocation\n-/// of the nodes in the list.\n-mod unsafe_list;\n-\n-/// Trivial spinlock-based implementation of `sync::Mutex`.\n-// FIXME: Perhaps use Intel TSX to avoid locking?\n mod spin_mutex;\n+mod unsafe_list;\n \n use crate::num::NonZeroUsize;\n use crate::ops::{Deref, DerefMut};", "previous_filename": "library/std/src/sys/sgx/waitqueue.rs"}, {"sha": "f6e851ccaddfaed51f9bf3b3be1a31309cfa920d", "filename": "library/std/src/sys/sgx/waitqueue/spin_mutex.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bfa84842e546a5fb2d1c69ba499ddc94bee1e01a/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fwaitqueue%2Fspin_mutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa84842e546a5fb2d1c69ba499ddc94bee1e01a/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fwaitqueue%2Fspin_mutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fwaitqueue%2Fspin_mutex.rs?ref=bfa84842e546a5fb2d1c69ba499ddc94bee1e01a", "patch": "@@ -1,3 +1,6 @@\n+//! Trivial spinlock-based implementation of `sync::Mutex`.\n+// FIXME: Perhaps use Intel TSX to avoid locking?\n+\n #[cfg(test)]\n mod tests;\n "}, {"sha": "cf2f0886c15464773fb1de1313db8913207eb4a4", "filename": "library/std/src/sys/sgx/waitqueue/unsafe_list.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bfa84842e546a5fb2d1c69ba499ddc94bee1e01a/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fwaitqueue%2Funsafe_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa84842e546a5fb2d1c69ba499ddc94bee1e01a/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fwaitqueue%2Funsafe_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fwaitqueue%2Funsafe_list.rs?ref=bfa84842e546a5fb2d1c69ba499ddc94bee1e01a", "patch": "@@ -1,3 +1,6 @@\n+//! A doubly-linked list where callers are in charge of memory allocation\n+//! of the nodes in the list.\n+\n #[cfg(test)]\n mod tests;\n "}]}