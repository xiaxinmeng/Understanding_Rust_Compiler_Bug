{"sha": "6c9e85726c46254f0bb1b23d781c4c1b8a11e797", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjOWU4NTcyNmM0NjI1NGYwYmIxYjIzZDc4MWM0YzFiOGExMWU3OTc=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-10-05T00:29:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-05T00:29:23Z"}, "message": "Rollup merge of #75853 - LeSeulArtichaut:core-intra-docs-3, r=jyn514\n\nUse more intra-doc-links in `core::fmt`\n\nThis is a follow-up to #75819, which encountered some broken links due to #75176, so this PR contains the links that are blocked on #75176.\n\nr? @jyn514", "tree": {"sha": "d032c384ec8f8964c173751cf830a603174f0a2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d032c384ec8f8964c173751cf830a603174f0a2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c9e85726c46254f0bb1b23d781c4c1b8a11e797", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfemjjCRBK7hj4Ov3rIwAAdHIIAItFW0R+i/io3X3YmHjzVaT5\nYEK5TpHDsyHli70Qegcux59FnGQxg+wHV7fiiyZugj8bGDAn8CStnwxfU9Z2eLQC\nYwwDm2mGaX7/O89ubi4B3vpfkZ7yAFCEsZjRg9gVMLwGFCv5uMOg9Jtn6mm/bEgM\n3o/ZCxhv/O+QB01jSar7799MpbTmVD+W5JGiazR5bD1nyenKBYDcHSrQMvyFtei2\nt+zSxgPZFhtaxlzlrJCYUm5Tp4rMVyB0dSngZy6aTtvyeTh7T7kW8q87+zURv13g\nOrf/Td0ZmeaTSb9VYhMLixFLMHsqv/dDX5ncwptxzKHD1iTXyLPL4FDssA3nUH0=\n=tOS9\n-----END PGP SIGNATURE-----\n", "payload": "tree d032c384ec8f8964c173751cf830a603174f0a2c\nparent beb5ae474d2835962ebdf7416bd1c9ad864fe101\nparent 17d3c0a1788c5fc53947109a902869a51d8caa38\nauthor Dylan DPC <dylan.dpc@gmail.com> 1601857763 +0200\ncommitter GitHub <noreply@github.com> 1601857763 +0200\n\nRollup merge of #75853 - LeSeulArtichaut:core-intra-docs-3, r=jyn514\n\nUse more intra-doc-links in `core::fmt`\n\nThis is a follow-up to #75819, which encountered some broken links due to #75176, so this PR contains the links that are blocked on #75176.\n\nr? @jyn514\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c9e85726c46254f0bb1b23d781c4c1b8a11e797", "html_url": "https://github.com/rust-lang/rust/commit/6c9e85726c46254f0bb1b23d781c4c1b8a11e797", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c9e85726c46254f0bb1b23d781c4c1b8a11e797/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "beb5ae474d2835962ebdf7416bd1c9ad864fe101", "url": "https://api.github.com/repos/rust-lang/rust/commits/beb5ae474d2835962ebdf7416bd1c9ad864fe101", "html_url": "https://github.com/rust-lang/rust/commit/beb5ae474d2835962ebdf7416bd1c9ad864fe101"}, {"sha": "17d3c0a1788c5fc53947109a902869a51d8caa38", "url": "https://api.github.com/repos/rust-lang/rust/commits/17d3c0a1788c5fc53947109a902869a51d8caa38", "html_url": "https://github.com/rust-lang/rust/commit/17d3c0a1788c5fc53947109a902869a51d8caa38"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "54772ebb523a3a0d8ec2743ef285b24cb63daa15", "filename": "library/core/src/fmt/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c9e85726c46254f0bb1b23d781c4c1b8a11e797/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c9e85726c46254f0bb1b23d781c4c1b8a11e797/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs?ref=6c9e85726c46254f0bb1b23d781c4c1b8a11e797", "patch": "@@ -102,7 +102,7 @@ pub struct Error;\n /// library. The [`write!`] macro accepts an instance of [`io::Write`], and the\n /// [`io::Write`] trait is favored over implementing this trait.\n ///\n-/// [`write!`]: ../../std/macro.write.html\n+/// [`write!`]: crate::write!\n /// [`io::Write`]: ../../std/io/trait.Write.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Write {\n@@ -1058,7 +1058,7 @@ pub trait UpperExp {\n /// assert_eq!(output, \"Hello world!\");\n /// ```\n ///\n-/// [`write!`]: ../../std/macro.write.html\n+/// [`write!`]: crate::write!\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub fn write(output: &mut dyn Write, args: Arguments<'_>) -> Result {\n     let mut formatter = Formatter {\n@@ -1886,7 +1886,7 @@ impl<'a> Formatter<'a> {\n     /// assert_eq!(format!(\"{:?}\", Foo(vec![10, 11])), \"{10, 11}\");\n     /// ```\n     ///\n-    /// [`format_args!`]: ../../std/macro.format_args.html\n+    /// [`format_args!`]: crate::format_args\n     ///\n     /// In this more complex example, we use [`format_args!`] and `.debug_set()`\n     /// to build a list of match arms:"}]}