{"sha": "8ac2af17cafa34cef317b20fa075e15e84bc96e1", "node_id": "C_kwDOAAsO6NoAKDhhYzJhZjE3Y2FmYTM0Y2VmMzE3YjIwZmEwNzVlMTVlODRiYzk2ZTE", "commit": {"author": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-06-10T12:02:24Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-06-10T12:02:24Z"}, "message": "Update cross-compiling instructions", "tree": {"sha": "615d6d2daf2879a6538391f3809333b203e29a62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/615d6d2daf2879a6538391f3809333b203e29a62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ac2af17cafa34cef317b20fa075e15e84bc96e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ac2af17cafa34cef317b20fa075e15e84bc96e1", "html_url": "https://github.com/rust-lang/rust/commit/8ac2af17cafa34cef317b20fa075e15e84bc96e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ac2af17cafa34cef317b20fa075e15e84bc96e1/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e48c92e3913546f763e9c84084444c944aefc71c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e48c92e3913546f763e9c84084444c944aefc71c", "html_url": "https://github.com/rust-lang/rust/commit/e48c92e3913546f763e9c84084444c944aefc71c"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "aa3626db4ef5bd80d402910c0847eb1941f70bd7", "filename": "Readme.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ac2af17cafa34cef317b20fa075e15e84bc96e1/Readme.md", "raw_url": "https://github.com/rust-lang/rust/raw/8ac2af17cafa34cef317b20fa075e15e84bc96e1/Readme.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Readme.md?ref=8ac2af17cafa34cef317b20fa075e15e84bc96e1", "patch": "@@ -146,6 +146,5 @@ To get the `rustc` command to run in `gdb`, add the `--verbose` flag to `cargo b\n  * Since rustc doesn't support this architecture yet, set it back to `TARGET_TRIPLE=\"mips-unknown-linux-gnu\"` (or another target having the same attributes). Alternatively, create a [target specification file](https://book.avr-rust.com/005.1-the-target-specification-json-file.html) (note that the `arch` specified in this file must be supported by the rust compiler).\n  * Set `linker='-Clinker=m68k-linux-gcc'`.\n  * Set the path to the cross-compiling libgccjit in `gcc_path`.\n- * Disable the 128-bit integer types if the target doesn't support them by using `let i128_type = context.new_type::<i64>();` in `context.rs` (same for u128_type).\n  * Comment the line: `context.add_command_line_option(\"-masm=intel\");` in src/base.rs.\n  * (might not be necessary) Disable the compilation of libstd.so (and possibly libcore.so?)."}]}