{"sha": "61349a3d18353ddfbd992a3bf51a88f5f0cfcddd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMzQ5YTNkMTgzNTNkZGZiZDk5MmEzYmY1MWE4OGY1ZjBjZmNkZGQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-27T08:45:59Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-27T08:53:01Z"}, "message": "extract assist helper for getting a specific token", "tree": {"sha": "3ba7cd2af94b8e8d9795e19165f1339213ce7cde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ba7cd2af94b8e8d9795e19165f1339213ce7cde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61349a3d18353ddfbd992a3bf51a88f5f0cfcddd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61349a3d18353ddfbd992a3bf51a88f5f0cfcddd", "html_url": "https://github.com/rust-lang/rust/commit/61349a3d18353ddfbd992a3bf51a88f5f0cfcddd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61349a3d18353ddfbd992a3bf51a88f5f0cfcddd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "384032442965b70001d7c15ec0db65bfe5634ee9", "url": "https://api.github.com/repos/rust-lang/rust/commits/384032442965b70001d7c15ec0db65bfe5634ee9", "html_url": "https://github.com/rust-lang/rust/commit/384032442965b70001d7c15ec0db65bfe5634ee9"}], "stats": {"total": 27, "additions": 12, "deletions": 15}, "files": [{"sha": "20d33fb164a1f80b5ba376a81dbfb98cf722772a", "filename": "crates/ra_assists/src/assist_ctx.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/61349a3d18353ddfbd992a3bf51a88f5f0cfcddd/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61349a3d18353ddfbd992a3bf51a88f5f0cfcddd/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs?ref=61349a3d18353ddfbd992a3bf51a88f5f0cfcddd", "patch": "@@ -5,7 +5,7 @@ use ra_db::FileRange;\n use ra_fmt::{leading_indent, reindent};\n use ra_syntax::{\n     algo::{self, find_covering_element, find_node_at_offset},\n-    AstNode, SourceFile, SyntaxElement, SyntaxNode, SyntaxToken, TextRange, TextUnit,\n+    AstNode, SourceFile, SyntaxElement, SyntaxKind, SyntaxNode, SyntaxToken, TextRange, TextUnit,\n     TokenAtOffset,\n };\n use ra_text_edit::TextEditBuilder;\n@@ -111,6 +111,10 @@ impl<'a, DB: HirDatabase> AssistCtx<'a, DB> {\n         self.source_file.syntax().token_at_offset(self.frange.range.start())\n     }\n \n+    pub(crate) fn find_token_at_offset(&self, kind: SyntaxKind) -> Option<SyntaxToken> {\n+        self.token_at_offset().find(|it| it.kind() == kind)\n+    }\n+\n     pub(crate) fn node_at_offset<N: AstNode>(&self) -> Option<N> {\n         find_node_at_offset(self.source_file.syntax(), self.frange.range.start())\n     }"}, {"sha": "53ba8011d7562d64b5cd1c7145f5665315c1f954", "filename": "crates/ra_assists/src/assists/flip_comma.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61349a3d18353ddfbd992a3bf51a88f5f0cfcddd/crates%2Fra_assists%2Fsrc%2Fassists%2Fflip_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61349a3d18353ddfbd992a3bf51a88f5f0cfcddd/crates%2Fra_assists%2Fsrc%2Fassists%2Fflip_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fflip_comma.rs?ref=61349a3d18353ddfbd992a3bf51a88f5f0cfcddd", "patch": "@@ -19,7 +19,7 @@ use crate::{Assist, AssistCtx, AssistId};\n // }\n // ```\n pub(crate) fn flip_comma(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let comma = ctx.token_at_offset().find(|leaf| leaf.kind() == T![,])?;\n+    let comma = ctx.find_token_at_offset(T![,])?;\n     let prev = non_trivia_sibling(comma.clone().into(), Direction::Prev)?;\n     let next = non_trivia_sibling(comma.clone().into(), Direction::Next)?;\n "}, {"sha": "ea756d1cabd45597590b3a66abe4666a2bd42e0c", "filename": "crates/ra_assists/src/assists/raw_string.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/61349a3d18353ddfbd992a3bf51a88f5f0cfcddd/crates%2Fra_assists%2Fsrc%2Fassists%2Fraw_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61349a3d18353ddfbd992a3bf51a88f5f0cfcddd/crates%2Fra_assists%2Fsrc%2Fassists%2Fraw_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fraw_string.rs?ref=61349a3d18353ddfbd992a3bf51a88f5f0cfcddd", "patch": "@@ -3,17 +3,14 @@\n use hir::db::HirDatabase;\n use ra_syntax::{\n     SyntaxKind::{RAW_STRING, STRING},\n-    SyntaxToken, TextRange, TextUnit,\n+    TextRange, TextUnit,\n };\n use rustc_lexer;\n \n use crate::{Assist, AssistCtx, AssistId};\n \n pub(crate) fn make_raw_string(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let token = ctx.token_at_offset().right_biased()?;\n-    if token.kind() != STRING {\n-        return None;\n-    }\n+    let token = ctx.find_token_at_offset(STRING)?;\n     let text = token.text().as_str();\n     let usual_string_range = find_usual_string_range(text)?;\n     let start_of_inside = usual_string_range.start().to_usize() + 1;\n@@ -44,7 +41,7 @@ pub(crate) fn make_raw_string(mut ctx: AssistCtx<impl HirDatabase>) -> Option<As\n }\n \n pub(crate) fn make_usual_string(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let token = raw_string_token(&ctx)?;\n+    let token = ctx.find_token_at_offset(RAW_STRING)?;\n     let text = token.text().as_str();\n     let usual_string_range = find_usual_string_range(text)?;\n     ctx.add_action(AssistId(\"make_usual_string\"), \"make usual string\", |edit| {\n@@ -60,7 +57,7 @@ pub(crate) fn make_usual_string(mut ctx: AssistCtx<impl HirDatabase>) -> Option<\n }\n \n pub(crate) fn add_hash(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let token = raw_string_token(&ctx)?;\n+    let token = ctx.find_token_at_offset(RAW_STRING)?;\n     ctx.add_action(AssistId(\"add_hash\"), \"add hash to raw string\", |edit| {\n         edit.target(token.text_range());\n         edit.insert(token.text_range().start() + TextUnit::of_char('r'), \"#\");\n@@ -70,7 +67,7 @@ pub(crate) fn add_hash(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n }\n \n pub(crate) fn remove_hash(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let token = raw_string_token(&ctx)?;\n+    let token = ctx.find_token_at_offset(RAW_STRING)?;\n     let text = token.text().as_str();\n     if text.starts_with(\"r\\\"\") {\n         // no hash to remove\n@@ -91,10 +88,6 @@ pub(crate) fn remove_hash(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist\n     ctx.build()\n }\n \n-fn raw_string_token(ctx: &AssistCtx<impl HirDatabase>) -> Option<SyntaxToken> {\n-    ctx.token_at_offset().right_biased().filter(|it| it.kind() == RAW_STRING)\n-}\n-\n fn count_hashes(s: &str) -> usize {\n     let mut max_hash_streak = 0usize;\n     for idx in s.match_indices(\"\\\"#\").map(|(i, _)| i) {"}, {"sha": "09bde1b72cf525b2506653901ffd2e389b6568cb", "filename": "crates/ra_assists/src/assists/split_import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61349a3d18353ddfbd992a3bf51a88f5f0cfcddd/crates%2Fra_assists%2Fsrc%2Fassists%2Fsplit_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61349a3d18353ddfbd992a3bf51a88f5f0cfcddd/crates%2Fra_assists%2Fsrc%2Fassists%2Fsplit_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fsplit_import.rs?ref=61349a3d18353ddfbd992a3bf51a88f5f0cfcddd", "patch": "@@ -8,7 +8,7 @@ use ra_syntax::{ast, AstNode, TextUnit, T};\n use crate::{Assist, AssistCtx, AssistId};\n \n pub(crate) fn split_import(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let colon_colon = ctx.token_at_offset().find(|leaf| leaf.kind() == T![::])?;\n+    let colon_colon = ctx.find_token_at_offset(T![::])?;\n     let path = ast::Path::cast(colon_colon.parent())?;\n     let top_path = successors(Some(path), |it| it.parent_path()).last()?;\n "}]}