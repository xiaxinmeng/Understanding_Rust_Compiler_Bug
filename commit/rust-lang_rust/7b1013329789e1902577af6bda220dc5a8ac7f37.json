{"sha": "7b1013329789e1902577af6bda220dc5a8ac7f37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMTAxMzMyOTc4OWUxOTAyNTc3YWY2YmRhMjIwZGM1YThhYzdmMzc=", "commit": {"author": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-02T06:53:28Z"}, "committer": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-15T22:10:43Z"}, "message": "Fix some random stuff", "tree": {"sha": "c5fbf950a5413c040df85cc8eff001809c8ae5cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5fbf950a5413c040df85cc8eff001809c8ae5cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b1013329789e1902577af6bda220dc5a8ac7f37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b1013329789e1902577af6bda220dc5a8ac7f37", "html_url": "https://github.com/rust-lang/rust/commit/7b1013329789e1902577af6bda220dc5a8ac7f37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b1013329789e1902577af6bda220dc5a8ac7f37/comments", "author": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d767ee11616390d128853a06f5addb619e79213f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d767ee11616390d128853a06f5addb619e79213f", "html_url": "https://github.com/rust-lang/rust/commit/d767ee11616390d128853a06f5addb619e79213f"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "6b9cd2956216f80716b0660f3f9fdab28f10134c", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7b1013329789e1902577af6bda220dc5a8ac7f37/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b1013329789e1902577af6bda220dc5a8ac7f37/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=7b1013329789e1902577af6bda220dc5a8ac7f37", "patch": "@@ -429,8 +429,8 @@ pub enum BorrowKind {\n \n     /// Data must be immutable but not aliasable.  This kind of borrow\n     /// cannot currently be expressed by the user and is used only in\n-    /// implicit closure bindings. It is needed when you the closure\n-    /// is borrowing or mutating a mutable referent, e.g.:\n+    /// implicit closure bindings. It is needed when the closure is\n+    /// borrowing or mutating a mutable referent, e.g.:\n     ///\n     ///    let x: &mut isize = ...;\n     ///    let y = || *x += 5;\n@@ -443,7 +443,7 @@ pub enum BorrowKind {\n     ///    let y = (&mut Env { &x }, fn_ptr);  // Closure is pair of env and fn\n     ///    fn fn_ptr(env: &mut Env) { **env.x += 5; }\n     ///\n-    /// This is then illegal because you cannot mutate a `&mut` found\n+    /// This is then illegal because you cannot mutate an `&mut` found\n     /// in an aliasable location. To solve, you'd have to translate with\n     /// an `&mut` borrow:\n     ///\n@@ -673,7 +673,7 @@ pub struct LocalDecl<'tcx> {\n     /// ROOT SCOPE\n     ///  \u2502{ argument x: &str }\n     ///  \u2502\n-    ///  \u2502 \u2502{ #[allow(unused_mut] } // this is actually split into 2 scopes\n+    ///  \u2502 \u2502{ #[allow(unused_mut)] } // this is actually split into 2 scopes\n     ///  \u2502 \u2502                        // in practice because I'm lazy.\n     ///  \u2502 \u2502\n     ///  \u2502 \u2502\u2190 x.source_info.scope\n@@ -906,7 +906,7 @@ pub enum TerminatorKind<'tcx> {\n \n     /// Drop the Place and assign the new value over it. This ensures\n     /// that the assignment to `P` occurs *even if* the destructor for\n-    /// place unwinds. Its semantics are best explained by by the\n+    /// place unwinds. Its semantics are best explained by the\n     /// elaboration:\n     ///\n     /// ```"}, {"sha": "5bbedbcfeee4e5efd9390b06f0c43efa21218284", "filename": "src/librustc_mir/borrow_check/move_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b1013329789e1902577af6bda220dc5a8ac7f37/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b1013329789e1902577af6bda220dc5a8ac7f37/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs?ref=7b1013329789e1902577af6bda220dc5a8ac7f37", "patch": "@@ -155,7 +155,7 @@ impl<'a, 'gcx, 'tcx> MirBorrowckCtxt<'a, 'gcx, 'tcx> {\n         statement_span: Span,\n     ) {\n         debug!(\n-            \"append_to_grouped_errors(match_place={:?}, match_span={:?})\",\n+            \"append_binding_error(match_place={:?}, match_span={:?})\",\n             match_place, match_span\n         );\n "}, {"sha": "ebf9631831c88d76ccd4e063f40551a3ecccb5ee", "filename": "src/librustc_mir/build/matches/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7b1013329789e1902577af6bda220dc5a8ac7f37/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b1013329789e1902577af6bda220dc5a8ac7f37/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs?ref=7b1013329789e1902577af6bda220dc5a8ac7f37", "patch": "@@ -321,9 +321,10 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n         block.unit()\n     }\n \n-    /// Declares the bindings of the given pattern and returns the visibility scope\n-    /// for the bindings in this patterns, if such a scope had to be created.\n-    /// NOTE: Declaring the bindings should always be done in their drop scope.\n+    /// Declares the bindings of the given patterns and returns the visibility\n+    /// scope for the bindings in these patterns, if such a scope had to be\n+    /// created. NOTE: Declaring the bindings should always be done in their\n+    /// drop scope.\n     pub fn declare_bindings(&mut self,\n                             mut visibility_scope: Option<SourceScope>,\n                             scope_span: Span,"}]}