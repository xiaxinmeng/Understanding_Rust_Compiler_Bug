{"sha": "8cfc388d40673b21282dcdf656cbff3ac8166eca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjZmMzODhkNDA2NzNiMjEyODJkY2RmNjU2Y2JmZjNhYzgxNjZlY2E=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-05-27T22:19:38Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-05-27T22:20:58Z"}, "message": "Switched calling conventions so that spawn with multiple arguments works.", "tree": {"sha": "2934640774ac780fa522c9e78dd046a15e08dc8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2934640774ac780fa522c9e78dd046a15e08dc8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cfc388d40673b21282dcdf656cbff3ac8166eca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cfc388d40673b21282dcdf656cbff3ac8166eca", "html_url": "https://github.com/rust-lang/rust/commit/8cfc388d40673b21282dcdf656cbff3ac8166eca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cfc388d40673b21282dcdf656cbff3ac8166eca/comments", "author": null, "committer": null, "parents": [{"sha": "d49998f0ed9b0a239b40d30ccfde750f8439cac4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d49998f0ed9b0a239b40d30ccfde750f8439cac4", "html_url": "https://github.com/rust-lang/rust/commit/d49998f0ed9b0a239b40d30ccfde750f8439cac4"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "835098c3d7fb3096b5be89552aa9c4ce34f2d230", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8cfc388d40673b21282dcdf656cbff3ac8166eca/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cfc388d40673b21282dcdf656cbff3ac8166eca/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=8cfc388d40673b21282dcdf656cbff3ac8166eca", "patch": "@@ -5949,7 +5949,6 @@ fn mk_spawn_wrapper(&@block_ctxt cx,\n                     &ty::t args_ty) -> result {\n     auto llmod = cx.fcx.lcx.ccx.llmod;\n     let TypeRef args_ty_tref = type_of(cx.fcx.lcx.ccx, cx.sp, args_ty);\n-    //let TypeRef wrapper_fn_type = T_fn([args_ty_tref], T_void());\n \n     let TypeRef wrapper_fn_type =\n         type_of_fn(cx.fcx.lcx.ccx, cx.sp, ast::proto_fn,\n@@ -5963,8 +5962,8 @@ fn mk_spawn_wrapper(&@block_ctxt cx,\n                  ty_str(cx.fcx.lcx.ccx.tn, wrapper_fn_type));\n \n     // TODO: construct a name based on tname\n-    auto llfndecl = decl_cdecl_fn(llmod, \"spawn_wrap\",\n-                                  wrapper_fn_type);\n+    auto llfndecl = decl_fastcall_fn(llmod, \"spawn_wrap\",\n+                                     wrapper_fn_type);\n \n     log_err #fmt(\"spawn wrapper decl type: %s\", \n                  val_str(cx.fcx.lcx.ccx.tn, llfndecl));\n@@ -6028,10 +6027,10 @@ fn mk_spawn_wrapper(&@block_ctxt cx,\n         i += 1;\n     }\n \n-    fbcx.build.Call(llfn,\n-                    child_args);\n+    fbcx.build.FastCall(llfn,\n+                        child_args);\n     fbcx.build.RetVoid();\n-\n+    \n     finish_fn(fcx, fbcx.llbb);\n \n     // TODO: make sure we clean up everything we need to."}, {"sha": "6d8734bd430080226a52080303145c2f9aa5f172", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8cfc388d40673b21282dcdf656cbff3ac8166eca/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/8cfc388d40673b21282dcdf656cbff3ac8166eca/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=8cfc388d40673b21282dcdf656cbff3ac8166eca", "patch": "@@ -480,7 +480,7 @@ upcall_start_task(rust_task *spawner,\n     // here.\n     uintptr_t start_args[] = {0, 0, 0, args};\n     \n-    task->start(spawnee_fn, (uintptr_t)&start_args, sizeof(start_args));\n+    task->start(spawnee_fn, (uintptr_t)start_args, sizeof(start_args));\n     return task;\n }\n "}, {"sha": "6978326d9b1e69aa68b25eca877ee4db7dbb65e3", "filename": "src/test/run-pass/spawn.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8cfc388d40673b21282dcdf656cbff3ac8166eca/src%2Ftest%2Frun-pass%2Fspawn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cfc388d40673b21282dcdf656cbff3ac8166eca/src%2Ftest%2Frun-pass%2Fspawn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn.rs?ref=8cfc388d40673b21282dcdf656cbff3ac8166eca", "patch": "@@ -2,11 +2,11 @@\n // -*- rust -*-\n \n fn main() {\n-  auto t = spawn child(10);\n+    auto t = spawn child(10);\n }\n \n fn child(int i) {\n-   log_err i;\n+    log_err i;\n }\n \n // Local Variables:"}]}