{"sha": "8472849529a9e5a809822d5f9dfc132d937064b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0NzI4NDk1MjlhOWU1YTgwOTgyMmQ1ZjlkZmMxMzJkOTM3MDY0YjE=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-06-11T00:43:22Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-06-11T00:55:04Z"}, "message": "sync: Once is no longer unsafe, update docs", "tree": {"sha": "82b52b991a64c80875a0458b029b060c8c26f02f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82b52b991a64c80875a0458b029b060c8c26f02f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8472849529a9e5a809822d5f9dfc132d937064b1", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8472849529a9e5a809822d5f9dfc132d937064b1", "html_url": "https://github.com/rust-lang/rust/commit/8472849529a9e5a809822d5f9dfc132d937064b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8472849529a9e5a809822d5f9dfc132d937064b1/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1302f9c4f6619bf83fff39b305b990d8f628eb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1302f9c4f6619bf83fff39b305b990d8f628eb7", "html_url": "https://github.com/rust-lang/rust/commit/b1302f9c4f6619bf83fff39b305b990d8f628eb7"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "87f6575cfe7d79954e4cd41f9e2376f4b1f9efaa", "filename": "src/libsync/one.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8472849529a9e5a809822d5f9dfc132d937064b1/src%2Flibsync%2Fone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472849529a9e5a809822d5f9dfc132d937064b1/src%2Flibsync%2Fone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsync%2Fone.rs?ref=8472849529a9e5a809822d5f9dfc132d937064b1", "patch": "@@ -18,22 +18,18 @@ use std::sync::atomics;\n \n use mutex::{StaticMutex, MUTEX_INIT};\n \n-/// A type which can be used to run a one-time global initialization. This type\n-/// is *unsafe* to use because it is built on top of the `Mutex` in this module.\n-/// It does not know whether the currently running task is in a green or native\n-/// context, and a blocking mutex should *not* be used under normal\n-/// circumstances on a green task.\n-///\n-/// Despite its unsafety, it is often useful to have a one-time initialization\n-/// routine run for FFI bindings or related external functionality. This type\n-/// can only be statically constructed with the `ONCE_INIT` value.\n+/// A synchronization primitive which can be used to run a one-time global\n+/// initialization. Useful for one-time initialization for FFI or related\n+/// functionality. This type can only be constructed with the `ONCE_INIT`\n+/// value.\n ///\n /// # Example\n ///\n /// ```rust\n /// use sync::one::{Once, ONCE_INIT};\n ///\n /// static mut START: Once = ONCE_INIT;\n+///\n /// unsafe {\n ///     START.doit(|| {\n ///         // run initialization here\n@@ -58,7 +54,7 @@ impl Once {\n     /// will be executed if this is the first time `doit` has been called, and\n     /// otherwise the routine will *not* be invoked.\n     ///\n-    /// This method will block the calling *os thread* if another initialization\n+    /// This method will block the calling task if another initialization\n     /// routine is currently running.\n     ///\n     /// When this function returns, it is guaranteed that some initialization"}]}