{"sha": "1c9c32782d7dddadfbb9dd9dd149b33e28308439", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjOWMzMjc4MmQ3ZGRkYWRmYmI5ZGQ5ZGQxNDliMzNlMjgzMDg0Mzk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-05T18:06:08Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-05T18:07:06Z"}, "message": "tutorial: Remove the section on strings\n\nIt's already covered in the types section.", "tree": {"sha": "fe7751d6d727ddd77eb85d9b966a3b3db5172e71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe7751d6d727ddd77eb85d9b966a3b3db5172e71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c9c32782d7dddadfbb9dd9dd149b33e28308439", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c9c32782d7dddadfbb9dd9dd149b33e28308439", "html_url": "https://github.com/rust-lang/rust/commit/1c9c32782d7dddadfbb9dd9dd149b33e28308439", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c9c32782d7dddadfbb9dd9dd149b33e28308439/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69b363e02a29184641789598877409844736a7a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/69b363e02a29184641789598877409844736a7a1", "html_url": "https://github.com/rust-lang/rust/commit/69b363e02a29184641789598877409844736a7a1"}], "stats": {"total": 26, "additions": 0, "deletions": 26}, "files": [{"sha": "3962b17540504cc63d7100bbcfd7604d9ade81a2", "filename": "doc/tutorial.md", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1c9c32782d7dddadfbb9dd9dd149b33e28308439/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/1c9c32782d7dddadfbb9dd9dd149b33e28308439/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=1c9c32782d7dddadfbb9dd9dd149b33e28308439", "patch": "@@ -1214,32 +1214,6 @@ let your_crayons = ~[banana_mania, beaver, bittersweet];\n my_crayons += your_crayons;\n ~~~~\n \n-## Strings\n-\n-The `~str` type in Rust is represented exactly the same way as a unique\n-vector of immutable bytes (`~[u8]`). This sequence of bytes is\n-interpreted as an UTF-8 encoded sequence of characters. This has the\n-advantage that UTF-8 encoded I/O (which should really be the default\n-for modern systems) is very fast, and that strings have, for most\n-intents and purposes, a nicely compact representation. It has the\n-disadvantage that you only get constant-time access by byte, not by\n-character.\n-\n-~~~~\n-let huh = ~\"what?\";\n-let que: u8 = huh[4]; // indexing a string returns a `u8`\n-assert que == '?' as u8;\n-~~~~\n-\n-A lot of algorithms don't need constant-time indexed access (they\n-iterate over all characters, which `str::chars` helps with), and\n-for those that do, many don't need actual characters, and can operate\n-on bytes. For algorithms that do really need to index by character,\n-there are core library functions available.\n-\n-> ***Note:*** like vectors, strings will soon be allocatable in\n-> the local heap and on the stack, in addition to the exchange heap.\n-\n ## Vector and string methods\n \n Both vectors and strings support a number of useful"}]}