{"sha": "557369ed2eadc3861ce32c53ef0c207bc112abc0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NzM2OWVkMmVhZGMzODYxY2UzMmM1M2VmMGMyMDdiYzExMmFiYzA=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-11-23T10:33:39Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-11-23T10:39:53Z"}, "message": "core: Fix example for .map()\n\nMake the example use DoubleEndedIterator for map, like it said it would.", "tree": {"sha": "235477c4581844c355b0d216e637c56a1e419047", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/235477c4581844c355b0d216e637c56a1e419047"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/557369ed2eadc3861ce32c53ef0c207bc112abc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/557369ed2eadc3861ce32c53ef0c207bc112abc0", "html_url": "https://github.com/rust-lang/rust/commit/557369ed2eadc3861ce32c53ef0c207bc112abc0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/557369ed2eadc3861ce32c53ef0c207bc112abc0/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c6048d0f4b4ad49f608f3ecba7183201d4c0eda", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c6048d0f4b4ad49f608f3ecba7183201d4c0eda", "html_url": "https://github.com/rust-lang/rust/commit/1c6048d0f4b4ad49f608f3ecba7183201d4c0eda"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "11f1cf5591d7f419afcebdba3746fa6755ba44ba", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/557369ed2eadc3861ce32c53ef0c207bc112abc0/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/557369ed2eadc3861ce32c53ef0c207bc112abc0/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=557369ed2eadc3861ce32c53ef0c207bc112abc0", "patch": "@@ -920,7 +920,7 @@ unsafe impl<A, B> TrustedLen for Zip<A, B>\n /// you can also [`map()`] backwards:\n ///\n /// ```rust\n-/// let v: Vec<i32> = vec![1, 2, 3].into_iter().rev().map(|x| x + 1).collect();\n+/// let v: Vec<i32> = vec![1, 2, 3].into_iter().map(|x| x + 1).rev().collect();\n ///\n /// assert_eq!(v, [4, 3, 2]);\n /// ```"}]}