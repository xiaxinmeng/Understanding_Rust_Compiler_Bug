{"sha": "1dffbe5c379894add3097c005a8b0e4c70173e4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkZmZiZTVjMzc5ODk0YWRkMzA5N2MwMDVhOGIwZTRjNzAxNzNlNGE=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-21T22:44:31Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-21T22:44:31Z"}, "message": "Remove TODO on self_hosting_parsing\n\nThis improving this code is not a good use of people-time, and this\nmight be the most performant approach nonwithstanding\nan api for this use case being added to walkdir", "tree": {"sha": "0d9fd0d5831921a2f950927910959275679c9165", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d9fd0d5831921a2f950927910959275679c9165"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1dffbe5c379894add3097c005a8b0e4c70173e4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1dffbe5c379894add3097c005a8b0e4c70173e4a", "html_url": "https://github.com/rust-lang/rust/commit/1dffbe5c379894add3097c005a8b0e4c70173e4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1dffbe5c379894add3097c005a8b0e4c70173e4a/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4dbf71d33291ab9c6d83a06fa88f322d7078034c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dbf71d33291ab9c6d83a06fa88f322d7078034c", "html_url": "https://github.com/rust-lang/rust/commit/4dbf71d33291ab9c6d83a06fa88f322d7078034c"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "4266864bdfc29b5734de1cabdbe7777561ea9178", "filename": "crates/ra_syntax/tests/test.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1dffbe5c379894add3097c005a8b0e4c70173e4a/crates%2Fra_syntax%2Ftests%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dffbe5c379894add3097c005a8b0e4c70173e4a/crates%2Fra_syntax%2Ftests%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Ftest.rs?ref=1dffbe5c379894add3097c005a8b0e4c70173e4a", "patch": "@@ -65,14 +65,10 @@ fn self_hosting_parsing() {\n     for entry in walkdir::WalkDir::new(dir)\n         .into_iter()\n         .filter_entry(|entry| {\n-            !entry\n-                .path()\n-                .components()\n-                // TODO: this more neatly\n-                .any(|component| {\n-                    // Get all files which are not in the crates/ra_syntax/tests/data folder\n-                    component == Component::Normal(OsStr::new(\"data\"))\n-                })\n+            !entry.path().components().any(|component| {\n+                // Get all files which are not in the crates/ra_syntax/tests/data folder\n+                component == Component::Normal(OsStr::new(\"data\"))\n+            })\n         })\n         .map(|e| e.unwrap())\n         .filter(|entry| {"}]}