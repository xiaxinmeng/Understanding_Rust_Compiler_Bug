{"sha": "ba354b1726988eca0d4a0b023c1bafd576b3570b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMzU0YjE3MjY5ODhlY2EwZDRhMGIwMjNjMWJhZmQ1NzZiMzU3MGI=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-11-19T05:30:48Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-11-29T20:09:10Z"}, "message": "Allow the expansion of old-style expr macros in stmt position.", "tree": {"sha": "c4a58d74cb90508a98ac048a511d6fdffbfed8ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4a58d74cb90508a98ac048a511d6fdffbfed8ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba354b1726988eca0d4a0b023c1bafd576b3570b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba354b1726988eca0d4a0b023c1bafd576b3570b", "html_url": "https://github.com/rust-lang/rust/commit/ba354b1726988eca0d4a0b023c1bafd576b3570b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba354b1726988eca0d4a0b023c1bafd576b3570b/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7fcc9b52e83db053633648a61b1a3f4c8ce25e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7fcc9b52e83db053633648a61b1a3f4c8ce25e6", "html_url": "https://github.com/rust-lang/rust/commit/b7fcc9b52e83db053633648a61b1a3f4c8ce25e6"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "07290c9248b61edee1fc3677dd9c837f5ccf217c", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ba354b1726988eca0d4a0b023c1bafd576b3570b/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba354b1726988eca0d4a0b023c1bafd576b3570b/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=ba354b1726988eca0d4a0b023c1bafd576b3570b", "patch": "@@ -303,6 +303,24 @@ fn expand_stmt(exts: HashMap<~str, syntax_extension>, cx: ext_ctxt,\n \n             return (fully_expanded, sp)\n         }\n+\n+        Some(normal({expander: exp, span: exp_sp})) => {\n+            //convert the new-style invoc for the old-style macro\n+            let arg = base::tt_args_to_original_flavor(cx, pth.span, tts);\n+            let exp_expr = exp(cx, mac.span, arg, None);\n+            let expanded = @{node: ast::stmt_expr(exp_expr, cx.next_id()),\n+                             span: exp_expr.span};\n+\n+            cx.bt_push(ExpandedFrom({call_site: sp,\n+                                      callie: {name: *extname,\n+                                               span: exp_sp}}));\n+            //keep going, outside-in\n+            let fully_expanded = fld.fold_stmt(expanded).node;\n+            cx.bt_pop();\n+\n+            (fully_expanded, sp)\n+        }\n+\n         _ => {\n             cx.span_fatal(pth.span,\n                           fmt!(\"'%s' is not a tt-style macro\","}]}