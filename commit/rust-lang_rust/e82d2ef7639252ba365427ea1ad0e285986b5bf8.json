{"sha": "e82d2ef7639252ba365427ea1ad0e285986b5bf8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4MmQyZWY3NjM5MjUyYmEzNjU0MjdlYTFhZDBlMjg1OTg2YjViZjg=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lindsey@rockstargirl.org", "date": "2012-08-09T17:41:00Z"}, "committer": {"name": "Lindsey Kuper", "email": "lindsey@rockstargirl.org", "date": "2012-08-09T18:10:09Z"}, "message": "Minor cleanup", "tree": {"sha": "e1d7b4a7cbf5cbff0a2af92af9a414345185c90f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1d7b4a7cbf5cbff0a2af92af9a414345185c90f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e82d2ef7639252ba365427ea1ad0e285986b5bf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e82d2ef7639252ba365427ea1ad0e285986b5bf8", "html_url": "https://github.com/rust-lang/rust/commit/e82d2ef7639252ba365427ea1ad0e285986b5bf8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e82d2ef7639252ba365427ea1ad0e285986b5bf8/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a77a17e3b51f2185fbbab2a4a301d6572834c72", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a77a17e3b51f2185fbbab2a4a301d6572834c72", "html_url": "https://github.com/rust-lang/rust/commit/9a77a17e3b51f2185fbbab2a4a301d6572834c72"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "985b54a325c97f204b5912ab644b6c439a211c94", "filename": "src/rustc/middle/typeck/coherence.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e82d2ef7639252ba365427ea1ad0e285986b5bf8/src%2Frustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e82d2ef7639252ba365427ea1ad0e285986b5bf8/src%2Frustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcoherence.rs?ref=e82d2ef7639252ba365427ea1ad0e285986b5bf8", "patch": "@@ -288,24 +288,24 @@ class CoherenceChecker {\n         }\n \n         for associated_traits.each |associated_trait| {\n-            let def = self.crate_context.tcx.def_map.get\n-                (associated_trait.ref_id);\n+            let trait_did =\n+                self.trait_ref_to_trait_def_id(associated_trait);\n             debug!{\"(checking implementation) adding impl for trait \\\n                     '%s', item '%s'\",\n                    ast_map::node_id_to_str(self.crate_context.tcx.items,\n-                                           associated_trait.ref_id),\n+                                           trait_did.node),\n                    *item.ident};\n \n             let implementation = self.create_impl_from_item(item);\n-            self.add_trait_method(def_id_of_def(def), implementation);\n+            self.add_trait_method(trait_did, implementation);\n         }\n \n         // Add the implementation to the mapping from implementation to base\n         // type def ID, if there is a base type for this implementation.\n \n         match get_base_type_def_id(self.inference_context,\n-                                 item.span,\n-                                 self_type.ty) {\n+                                   item.span,\n+                                   self_type.ty) {\n             none => {\n                 // Nothing to do.\n             }"}]}