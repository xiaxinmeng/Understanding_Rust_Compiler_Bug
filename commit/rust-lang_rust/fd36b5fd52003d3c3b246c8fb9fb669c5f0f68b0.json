{"sha": "fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkMzZiNWZkNTIwMDNkM2MzYjI0NmM4ZmI5ZmI2NjljNWYwZjY4YjA=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-23T21:56:31Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-06-03T17:19:29Z"}, "message": "Add test for #[must_use] in tuples", "tree": {"sha": "c96cd63fede46a301513fb6bec373f6fcf2b089d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c96cd63fede46a301513fb6bec373f6fcf2b089d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0", "html_url": "https://github.com/rust-lang/rust/commit/fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbac81a0f11c21eb09344a1d9277393ffdba474e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbac81a0f11c21eb09344a1d9277393ffdba474e", "html_url": "https://github.com/rust-lang/rust/commit/bbac81a0f11c21eb09344a1d9277393ffdba474e"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "67ea41e1bedadef0219cec1371220381f4b3eb0e", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0", "patch": "@@ -1,7 +1,7 @@\n use rustc::hir::def::{Res, DefKind};\n use rustc::hir::def_id::DefId;\n use rustc::lint;\n-use rustc::ty;\n+use rustc::ty::{self, Ty};\n use rustc::ty::adjustment;\n use rustc_data_structures::fx::FxHashMap;\n use lint::{LateContext, EarlyContext, LintContext, LintArray};\n@@ -137,7 +137,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n         // Returns whether an error has been emitted (and thus another does not need to be later).\n         fn check_must_use_ty(\n             cx: &LateContext<'_, '_>,\n-            ty: ty::Ty<'_>,\n+            ty: Ty<'_>,\n             span: Span,\n         ) -> bool {\n             match ty.sty {"}, {"sha": "bc972d7ffc3914ad31cb89680ff1ffe6b53cbcf0", "filename": "src/test/ui/lint/must_use-tuple.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0/src%2Ftest%2Fui%2Flint%2Fmust_use-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0/src%2Ftest%2Fui%2Flint%2Fmust_use-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_use-tuple.rs?ref=fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0", "patch": "@@ -0,0 +1,5 @@\n+#![deny(unused_must_use)]\n+\n+fn main() {\n+    (Ok::<(), ()>(()),); //~ ERROR unused `std::result::Result` that must be used\n+}"}, {"sha": "67d1ec01966f97d8e7c184650230d1f29c2d814d", "filename": "src/test/ui/lint/must_use-tuple.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0/src%2Ftest%2Fui%2Flint%2Fmust_use-tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0/src%2Ftest%2Fui%2Flint%2Fmust_use-tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_use-tuple.stderr?ref=fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0", "patch": "@@ -0,0 +1,15 @@\n+error: unused `std::result::Result` that must be used\n+  --> $DIR/must_use-tuple.rs:4:5\n+   |\n+LL |     (Ok::<(), ()>(()),);\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/must_use-tuple.rs:1:9\n+   |\n+LL | #![deny(unused_must_use)]\n+   |         ^^^^^^^^^^^^^^^\n+   = note: this `Result` may be an `Err` variant, which should be handled\n+\n+error: aborting due to previous error\n+"}]}