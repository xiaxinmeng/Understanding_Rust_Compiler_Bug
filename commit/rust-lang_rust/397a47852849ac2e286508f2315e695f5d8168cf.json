{"sha": "397a47852849ac2e286508f2315e695f5d8168cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5N2E0Nzg1Mjg0OWFjMmUyODY1MDhmMjMxNWU2OTVmNWQ4MTY4Y2Y=", "commit": {"author": {"name": "Matthijs Hofstra", "email": "thiezz@gmail.com", "date": "2013-04-03T16:28:44Z"}, "committer": {"name": "Matthijs Hofstra", "email": "thiezz@gmail.com", "date": "2013-04-03T16:28:44Z"}, "message": "Unstable didn't need transmute_mut after all.", "tree": {"sha": "b0a90303b1669fb725f845286d8bb15fd0254ffb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0a90303b1669fb725f845286d8bb15fd0254ffb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/397a47852849ac2e286508f2315e695f5d8168cf", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/397a47852849ac2e286508f2315e695f5d8168cf", "html_url": "https://github.com/rust-lang/rust/commit/397a47852849ac2e286508f2315e695f5d8168cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/397a47852849ac2e286508f2315e695f5d8168cf/comments", "author": {"login": "Thiez", "id": 204550, "node_id": "MDQ6VXNlcjIwNDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/204550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thiez", "html_url": "https://github.com/Thiez", "followers_url": "https://api.github.com/users/Thiez/followers", "following_url": "https://api.github.com/users/Thiez/following{/other_user}", "gists_url": "https://api.github.com/users/Thiez/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thiez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thiez/subscriptions", "organizations_url": "https://api.github.com/users/Thiez/orgs", "repos_url": "https://api.github.com/users/Thiez/repos", "events_url": "https://api.github.com/users/Thiez/events{/privacy}", "received_events_url": "https://api.github.com/users/Thiez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Thiez", "id": 204550, "node_id": "MDQ6VXNlcjIwNDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/204550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thiez", "html_url": "https://github.com/Thiez", "followers_url": "https://api.github.com/users/Thiez/followers", "following_url": "https://api.github.com/users/Thiez/following{/other_user}", "gists_url": "https://api.github.com/users/Thiez/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thiez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thiez/subscriptions", "organizations_url": "https://api.github.com/users/Thiez/orgs", "repos_url": "https://api.github.com/users/Thiez/repos", "events_url": "https://api.github.com/users/Thiez/events{/privacy}", "received_events_url": "https://api.github.com/users/Thiez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c16919d3a8e83e4c72668f6ad89d48f6ba8341f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c16919d3a8e83e4c72668f6ad89d48f6ba8341f6", "html_url": "https://github.com/rust-lang/rust/commit/c16919d3a8e83e4c72668f6ad89d48f6ba8341f6"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c717c1692a8c532593fcd1073bd089ea83ff49ad", "filename": "src/libcore/unstable.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/397a47852849ac2e286508f2315e695f5d8168cf/src%2Flibcore%2Funstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/397a47852849ac2e286508f2315e695f5d8168cf/src%2Flibcore%2Funstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funstable.rs?ref=397a47852849ac2e286508f2315e695f5d8168cf", "patch": "@@ -120,9 +120,9 @@ impl<T> Drop for ArcDestruct<T>{\n     fn finalize(&self) {\n         unsafe {\n             do task::unkillable {\n-                let data: ~ArcData<T> = cast::reinterpret_cast(&self.data);\n+                let mut data: ~ArcData<T> = cast::reinterpret_cast(&self.data);\n                 let new_count =\n-                    intrinsics::atomic_xsub(cast::transmute_mut(&data.count), 1) - 1;\n+                    intrinsics::atomic_xsub(&mut data.count, 1) - 1;\n                 assert!(new_count >= 0);\n                 if new_count == 0 {\n                     // drop glue takes over.\n@@ -185,8 +185,8 @@ pub unsafe fn get_shared_immutable_state<'a,T:Owned>(\n pub unsafe fn clone_shared_mutable_state<T:Owned>(rc: &SharedMutableState<T>)\n         -> SharedMutableState<T> {\n     unsafe {\n-        let ptr: ~ArcData<T> = cast::reinterpret_cast(&(*rc).data);\n-        let new_count = intrinsics::atomic_xadd(cast::transmute_mut(&ptr.count), 1) + 1;\n+        let mut ptr: ~ArcData<T> = cast::reinterpret_cast(&(*rc).data);\n+        let new_count = intrinsics::atomic_xadd(&mut ptr.count, 1) + 1;\n         assert!(new_count >= 2);\n         cast::forget(ptr);\n     }"}]}