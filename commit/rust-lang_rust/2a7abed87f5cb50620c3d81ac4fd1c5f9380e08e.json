{"sha": "2a7abed87f5cb50620c3d81ac4fd1c5f9380e08e", "node_id": "C_kwDOAAsO6NoAKDJhN2FiZWQ4N2Y1Y2I1MDYyMGMzZDgxYWM0ZmQxYzVmOTM4MGUwOGU", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-07-05T19:54:38Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-07-05T19:54:40Z"}, "message": "Return a FxIndexSet in is_late_bound query.\n\nThis return value is iterated upon by borrowck, hence the need to preserve\na deterministic iteration order.", "tree": {"sha": "f630a0f0bf2f6e41dbc4c44f64c4bade16e8fbd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f630a0f0bf2f6e41dbc4c44f64c4bade16e8fbd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a7abed87f5cb50620c3d81ac4fd1c5f9380e08e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a7abed87f5cb50620c3d81ac4fd1c5f9380e08e", "html_url": "https://github.com/rust-lang/rust/commit/2a7abed87f5cb50620c3d81ac4fd1c5f9380e08e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a7abed87f5cb50620c3d81ac4fd1c5f9380e08e/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5c6a48aee84215a9200dfa1c4c6ad88f5721f56", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5c6a48aee84215a9200dfa1c4c6ad88f5721f56", "html_url": "https://github.com/rust-lang/rust/commit/a5c6a48aee84215a9200dfa1c4c6ad88f5721f56"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "661a9b1944c580646e22ffe79fbe650856d17b44", "filename": "compiler/rustc_middle/src/arena.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2a7abed87f5cb50620c3d81ac4fd1c5f9380e08e/compiler%2Frustc_middle%2Fsrc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a7abed87f5cb50620c3d81ac4fd1c5f9380e08e/compiler%2Frustc_middle%2Fsrc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Farena.rs?ref=2a7abed87f5cb50620c3d81ac4fd1c5f9380e08e", "patch": "@@ -96,6 +96,7 @@ macro_rules! arena_types {\n             // (during lowering) and the `librustc_middle` arena (for decoding MIR)\n             [decode] asm_template: rustc_ast::InlineAsmTemplatePiece,\n             [decode] used_trait_imports: rustc_data_structures::fx::FxHashSet<rustc_hir::def_id::LocalDefId>,\n+            [decode] is_late_bound_map: rustc_data_structures::fx::FxIndexSet<rustc_hir::def_id::LocalDefId>,\n             [decode] impl_source: rustc_middle::traits::ImplSource<'tcx, ()>,\n \n             [] dep_kind: rustc_middle::dep_graph::DepKindStruct,"}, {"sha": "f66f1865c347c243fddbf8bce9c5c66bf7571bac", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a7abed87f5cb50620c3d81ac4fd1c5f9380e08e/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a7abed87f5cb50620c3d81ac4fd1c5f9380e08e/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=2a7abed87f5cb50620c3d81ac4fd1c5f9380e08e", "patch": "@@ -1573,7 +1573,7 @@ rustc_queries! {\n         Option<&'tcx FxHashMap<ItemLocalId, Region>> {\n         desc { \"looking up a named region\" }\n     }\n-    query is_late_bound_map(_: LocalDefId) -> Option<&'tcx FxHashSet<LocalDefId>> {\n+    query is_late_bound_map(_: LocalDefId) -> Option<&'tcx FxIndexSet<LocalDefId>> {\n         desc { \"testing if a region is late bound\" }\n     }\n     /// For a given item (like a struct), gets the default lifetimes to be used"}, {"sha": "557dbecfabe097bb3b00aa10e59571776b91bcb6", "filename": "compiler/rustc_resolve/src/late/lifetimes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2a7abed87f5cb50620c3d81ac4fd1c5f9380e08e/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a7abed87f5cb50620c3d81ac4fd1c5f9380e08e/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs?ref=2a7abed87f5cb50620c3d81ac4fd1c5f9380e08e", "patch": "@@ -2539,12 +2539,12 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n /// \"Constrained\" basically means that it appears in any type but\n /// not amongst the inputs to a projection. In other words, `<&'a\n /// T as Trait<''b>>::Foo` does not constrain `'a` or `'b`.\n-fn is_late_bound_map(tcx: TyCtxt<'_>, def_id: LocalDefId) -> Option<&FxHashSet<LocalDefId>> {\n+fn is_late_bound_map(tcx: TyCtxt<'_>, def_id: LocalDefId) -> Option<&FxIndexSet<LocalDefId>> {\n     let hir_id = tcx.hir().local_def_id_to_hir_id(def_id);\n     let decl = tcx.hir().fn_decl_by_hir_id(hir_id)?;\n     let generics = tcx.hir().get_generics(def_id)?;\n \n-    let mut late_bound = FxHashSet::default();\n+    let mut late_bound = FxIndexSet::default();\n \n     let mut constrained_by_input = ConstrainedCollector::default();\n     for arg_ty in decl.inputs {"}]}