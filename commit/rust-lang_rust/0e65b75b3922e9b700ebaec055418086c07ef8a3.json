{"sha": "0e65b75b3922e9b700ebaec055418086c07ef8a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNjViNzViMzkyMmU5YjcwMGViYWVjMDU1NDE4MDg2YzA3ZWY4YTM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-06-01T07:27:42Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-06-01T07:27:42Z"}, "message": "Rollup merge of #33921 - jameysharp:patch-1, r=alexcrichton\n\nInline simple Cursor write calls\n\nImplementing the Write trait for Cursors over slices is so light-weight that under some circumstances multiple writes can be fused into a single instruction. In general I think inlining these functions is a good idea because most of the code can be constant-folded and copy-propagated away.\n\nCloses issue #33916.\n\nr? @alexcrichton", "tree": {"sha": "3a218cbdff92867c35a76796fd937a448b06da19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a218cbdff92867c35a76796fd937a448b06da19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e65b75b3922e9b700ebaec055418086c07ef8a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e65b75b3922e9b700ebaec055418086c07ef8a3", "html_url": "https://github.com/rust-lang/rust/commit/0e65b75b3922e9b700ebaec055418086c07ef8a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e65b75b3922e9b700ebaec055418086c07ef8a3/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9cd460f6c90f821bf9b6e6a824a496660ce7281", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9cd460f6c90f821bf9b6e6a824a496660ce7281", "html_url": "https://github.com/rust-lang/rust/commit/d9cd460f6c90f821bf9b6e6a824a496660ce7281"}, {"sha": "80d733385aa2ff150a5d6f83ecfe55afc7e19e68", "url": "https://api.github.com/repos/rust-lang/rust/commits/80d733385aa2ff150a5d6f83ecfe55afc7e19e68", "html_url": "https://github.com/rust-lang/rust/commit/80d733385aa2ff150a5d6f83ecfe55afc7e19e68"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "2d780559db1229b5382bdf831ec4b117f93ff43d", "filename": "src/libstd/io/cursor.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e65b75b3922e9b700ebaec055418086c07ef8a3/src%2Flibstd%2Fio%2Fcursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e65b75b3922e9b700ebaec055418086c07ef8a3/src%2Flibstd%2Fio%2Fcursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fcursor.rs?ref=0e65b75b3922e9b700ebaec055418086c07ef8a3", "patch": "@@ -230,6 +230,7 @@ impl<T> BufRead for Cursor<T> where T: AsRef<[u8]> {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a> Write for Cursor<&'a mut [u8]> {\n+    #[inline]\n     fn write(&mut self, data: &[u8]) -> io::Result<usize> {\n         let pos = cmp::min(self.pos, self.inner.len() as u64);\n         let amt = (&mut self.inner[(pos as usize)..]).write(data)?;\n@@ -269,6 +270,7 @@ impl Write for Cursor<Vec<u8>> {\n \n #[stable(feature = \"cursor_box_slice\", since = \"1.5.0\")]\n impl Write for Cursor<Box<[u8]>> {\n+    #[inline]\n     fn write(&mut self, buf: &[u8]) -> io::Result<usize> {\n         let pos = cmp::min(self.pos, self.inner.len() as u64);\n         let amt = (&mut self.inner[(pos as usize)..]).write(buf)?;"}]}