{"sha": "aa571e378b67134903a66094cf9aa7b2ce7118e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhNTcxZTM3OGI2NzEzNDkwM2E2NjA5NGNmOWFhN2IyY2U3MTE4ZTg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-06T14:48:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-06T14:48:05Z"}, "message": "Merge #3030\n\n3030: Tweak goto parent module r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "964172a911af7bb7e57c26b5e8e08467e9cb9c2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/964172a911af7bb7e57c26b5e8e08467e9cb9c2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa571e378b67134903a66094cf9aa7b2ce7118e8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJePCclCRBK7hj4Ov3rIwAAdHIIAC0hsbjPMjyNnm8sWZcA1YKr\nG+g3iqX+ndBfVj1GZfTUX/p0kRUHrMaiCmpGVw1cpDjfWQymuO/noON1L2F8h2iP\n+iCLl1uKAt3f/wcZ9NOI2LCMxnG0ZPws1XkgQerp09seV1z5XZWhwd7DQQiN2Oqm\nUHId4Wgb9Ge4wOaixW7tLhghYhfaLPsRotTH0qapNonT0na2JM3Cj8o/AFshY8cZ\nfsezqYfMsbMsd63gau5EvE1Deo3lAJ+tWexHcuTDXOKEE8wUWk29knR++/rEMyOR\n80cc6UbVYRQ5BOVZDpI0ywMgdlC8YsDphLVPdCy6/8QC8A2HcawisPtuRFjYx90=\n=s3X1\n-----END PGP SIGNATURE-----\n", "payload": "tree 964172a911af7bb7e57c26b5e8e08467e9cb9c2e\nparent ff2d77bde6acffc5e4c42878606b3d6d92300e11\nparent 832dfae25024b8e6da097bfbf99a6b749e5e0ad0\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1581000485 +0000\ncommitter GitHub <noreply@github.com> 1581000485 +0000\n\nMerge #3030\n\n3030: Tweak goto parent module r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa571e378b67134903a66094cf9aa7b2ce7118e8", "html_url": "https://github.com/rust-lang/rust/commit/aa571e378b67134903a66094cf9aa7b2ce7118e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa571e378b67134903a66094cf9aa7b2ce7118e8/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff2d77bde6acffc5e4c42878606b3d6d92300e11", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff2d77bde6acffc5e4c42878606b3d6d92300e11", "html_url": "https://github.com/rust-lang/rust/commit/ff2d77bde6acffc5e4c42878606b3d6d92300e11"}, {"sha": "832dfae25024b8e6da097bfbf99a6b749e5e0ad0", "url": "https://api.github.com/repos/rust-lang/rust/commits/832dfae25024b8e6da097bfbf99a6b749e5e0ad0", "html_url": "https://github.com/rust-lang/rust/commit/832dfae25024b8e6da097bfbf99a6b749e5e0ad0"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "5bf4d20625210abe84796ce6cbabdbb71cfaa8f7", "filename": "crates/ra_ide/src/marks.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa571e378b67134903a66094cf9aa7b2ce7118e8/crates%2Fra_ide%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa571e378b67134903a66094cf9aa7b2ce7118e8/crates%2Fra_ide%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmarks.rs?ref=aa571e378b67134903a66094cf9aa7b2ce7118e8", "patch": "@@ -11,4 +11,5 @@ test_utils::marks!(\n     call_info_bad_offset\n     dont_complete_current_use\n     dont_complete_primitive_in_use\n+    test_resolve_parent_module_on_module_decl\n );"}, {"sha": "af14d6ab3a620f8771bb537b7e5f651dd2e908a6", "filename": "crates/ra_ide/src/parent_module.rs", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/aa571e378b67134903a66094cf9aa7b2ce7118e8/crates%2Fra_ide%2Fsrc%2Fparent_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa571e378b67134903a66094cf9aa7b2ce7118e8/crates%2Fra_ide%2Fsrc%2Fparent_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fparent_module.rs?ref=aa571e378b67134903a66094cf9aa7b2ce7118e8", "patch": "@@ -6,6 +6,7 @@ use ra_syntax::{\n     algo::find_node_at_offset,\n     ast::{self, AstNode},\n };\n+use test_utils::tested_by;\n \n use crate::NavigationTarget;\n \n@@ -14,7 +15,21 @@ use crate::NavigationTarget;\n pub(crate) fn parent_module(db: &RootDatabase, position: FilePosition) -> Vec<NavigationTarget> {\n     let mut sb = hir::SourceBinder::new(db);\n     let parse = db.parse(position.file_id);\n-    let module = match find_node_at_offset::<ast::Module>(parse.tree().syntax(), position.offset) {\n+\n+    let mut module = find_node_at_offset::<ast::Module>(parse.tree().syntax(), position.offset);\n+\n+    // If cursor is literally on `mod foo`, go to the grandpa.\n+    if let Some(m) = &module {\n+        if !m\n+            .item_list()\n+            .map_or(false, |it| it.syntax().text_range().contains_inclusive(position.offset))\n+        {\n+            tested_by!(test_resolve_parent_module_on_module_decl);\n+            module = m.syntax().ancestors().skip(1).find_map(ast::Module::cast);\n+        }\n+    }\n+\n+    let module = match module {\n         Some(module) => sb.to_def(hir::InFile::new(position.file_id.into(), module)),\n         None => sb.to_module_def(position.file_id),\n     };\n@@ -41,6 +56,7 @@ pub(crate) fn crate_for(db: &RootDatabase, file_id: FileId) -> Vec<CrateId> {\n mod tests {\n     use ra_cfg::CfgOptions;\n     use ra_db::Env;\n+    use test_utils::covers;\n \n     use crate::{\n         mock_analysis::{analysis_and_position, MockAnalysis},\n@@ -62,6 +78,25 @@ mod tests {\n         nav.assert_match(\"foo MODULE FileId(1) [0; 8)\");\n     }\n \n+    #[test]\n+    fn test_resolve_parent_module_on_module_decl() {\n+        covers!(test_resolve_parent_module_on_module_decl);\n+        let (analysis, pos) = analysis_and_position(\n+            \"\n+            //- /lib.rs\n+            mod foo;\n+\n+            //- /foo.rs\n+            mod <|>bar;\n+\n+            //- /foo/bar.rs\n+            // empty\n+            \",\n+        );\n+        let nav = analysis.parent_module(pos).unwrap().pop().unwrap();\n+        nav.assert_match(\"foo MODULE FileId(1) [0; 8)\");\n+    }\n+\n     #[test]\n     fn test_resolve_parent_module_for_inline() {\n         let (analysis, pos) = analysis_and_position("}]}