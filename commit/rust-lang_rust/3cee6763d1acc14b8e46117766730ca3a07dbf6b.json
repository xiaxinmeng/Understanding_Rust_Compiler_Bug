{"sha": "3cee6763d1acc14b8e46117766730ca3a07dbf6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjZWU2NzYzZDFhY2MxNGI4ZTQ2MTE3NzY2NzMwY2EzYTA3ZGJmNmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-14T03:03:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-14T03:03:52Z"}, "message": "auto merge of #5336 : ILyoan/rust/remove_unused, r=sanxiyn\n\nRemove unused imports to get rid of warnings.", "tree": {"sha": "31952d7ce7735b443a534706c9978ec35155af1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31952d7ce7735b443a534706c9978ec35155af1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cee6763d1acc14b8e46117766730ca3a07dbf6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cee6763d1acc14b8e46117766730ca3a07dbf6b", "html_url": "https://github.com/rust-lang/rust/commit/3cee6763d1acc14b8e46117766730ca3a07dbf6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cee6763d1acc14b8e46117766730ca3a07dbf6b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "900a0c8df15162e750a6f34496dcf239d0848503", "url": "https://api.github.com/repos/rust-lang/rust/commits/900a0c8df15162e750a6f34496dcf239d0848503", "html_url": "https://github.com/rust-lang/rust/commit/900a0c8df15162e750a6f34496dcf239d0848503"}, {"sha": "688c4c403d087245464e2bf0c5a8c2c760c50fc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/688c4c403d087245464e2bf0c5a8c2c760c50fc6", "html_url": "https://github.com/rust-lang/rust/commit/688c4c403d087245464e2bf0c5a8c2c760c50fc6"}], "stats": {"total": 14, "additions": 2, "deletions": 12}, "files": [{"sha": "8cd8b297e2f3babf3d15015a24a4874fd085c23a", "filename": "src/libcore/at_vec.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3cee6763d1acc14b8e46117766730ca3a07dbf6b/src%2Flibcore%2Fat_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cee6763d1acc14b8e46117766730ca3a07dbf6b/src%2Flibcore%2Fat_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fat_vec.rs?ref=3cee6763d1acc14b8e46117766730ca3a07dbf6b", "patch": "@@ -13,7 +13,6 @@\n use cast::transmute;\n use kinds::Copy;\n use iter;\n-use libc;\n use option::Option;\n use ptr::addr_of;\n use sys;"}, {"sha": "2f9d4304cba70d0f0fe0b43fb4737fc48fd428df", "filename": "src/libcore/num/cmath.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3cee6763d1acc14b8e46117766730ca3a07dbf6b/src%2Flibcore%2Fnum%2Fcmath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cee6763d1acc14b8e46117766730ca3a07dbf6b/src%2Flibcore%2Fnum%2Fcmath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fcmath.rs?ref=3cee6763d1acc14b8e46117766730ca3a07dbf6b", "patch": "@@ -10,10 +10,6 @@\n \n #[doc(hidden)]; // FIXME #3538\n \n-use libc::c_int;\n-use libc::c_float;\n-use libc::c_double;\n-\n // function names are almost identical to C's libmath, a few have been\n // renamed, grep for \"rename:\"\n "}, {"sha": "2c447b3e4ae381c535b2274105ccd26a53544965", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3cee6763d1acc14b8e46117766730ca3a07dbf6b/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cee6763d1acc14b8e46117766730ca3a07dbf6b/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=3cee6763d1acc14b8e46117766730ca3a07dbf6b", "patch": "@@ -19,7 +19,6 @@ use iter::BaseIter;\n use iter;\n use kinds::Copy;\n use libc;\n-use libc::size_t;\n use option::{None, Option, Some};\n use unstable::intrinsics;\n use ptr;\n@@ -76,9 +75,9 @@ pub fn reserve<T>(v: &mut ~[T], n: uint) {\n             let td = sys::get_type_desc::<T>();\n             if ((**ptr).box_header.ref_count ==\n                 managed::raw::RC_MANAGED_UNIQUE) {\n-                rustrt::vec_reserve_shared_actual(td, ptr, n as size_t);\n+                rustrt::vec_reserve_shared_actual(td, ptr, n as libc::size_t);\n             } else {\n-                rustrt::vec_reserve_shared(td, ptr, n as size_t);\n+                rustrt::vec_reserve_shared(td, ptr, n as libc::size_t);\n             }\n         }\n     }\n@@ -2071,7 +2070,6 @@ pub mod raw {\n     use kinds::Copy;\n     use managed;\n     use option::{None, Some};\n-    use option;\n     use unstable::intrinsics;\n     use ptr::addr_of;\n     use ptr;"}, {"sha": "40394391f1adb337955dbd0428b428863d3290e3", "filename": "src/librustc/middle/trans/controlflow.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3cee6763d1acc14b8e46117766730ca3a07dbf6b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cee6763d1acc14b8e46117766730ca3a07dbf6b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs?ref=3cee6763d1acc14b8e46117766730ca3a07dbf6b", "patch": "@@ -30,7 +30,6 @@ use syntax::ast::ident;\n use syntax::ast_map::path_mod;\n use syntax::ast_util;\n use syntax::codemap::span;\n-use syntax::print::pprust::expr_to_str;\n \n pub fn trans_block(bcx: block, b: &ast::blk, dest: expr::Dest) -> block {\n     let _icx = bcx.insn_ctxt(\"trans_block\");"}, {"sha": "17595913f942341d5b964b1ca8596ecbc9c57024", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3cee6763d1acc14b8e46117766730ca3a07dbf6b/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cee6763d1acc14b8e46117766730ca3a07dbf6b/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=3cee6763d1acc14b8e46117766730ca3a07dbf6b", "patch": "@@ -1706,7 +1706,6 @@ pub fn check_expr_with_unifier(fcx: @mut FnCtxt,\n         let expr_t = structurally_resolved_type(fcx, expr.span,\n                                                 fcx.expr_ty(base));\n         let (base_t, derefs) = do_autoderef(fcx, expr.span, expr_t);\n-        let n_tys = tys.len();\n \n         match structure_of(fcx, expr.span, base_t) {\n             ty::ty_struct(base_id, ref substs) => {"}, {"sha": "3f363b613d7da9492bf3aa5ea0c3abb74add4bfd", "filename": "src/libstd/test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3cee6763d1acc14b8e46117766730ca3a07dbf6b/src%2Flibstd%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cee6763d1acc14b8e46117766730ca3a07dbf6b/src%2Flibstd%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftest.rs?ref=3cee6763d1acc14b8e46117766730ca3a07dbf6b", "patch": "@@ -26,7 +26,6 @@ use core::either::Either;\n use core::either;\n use core::io::WriterUtil;\n use core::io;\n-use core::libc::size_t;\n use core::comm::{stream, Chan, Port, SharedChan};\n use core::option;\n use core::prelude::*;"}]}