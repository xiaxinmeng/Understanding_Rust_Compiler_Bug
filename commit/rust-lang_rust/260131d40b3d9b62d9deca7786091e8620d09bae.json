{"sha": "260131d40b3d9b62d9deca7786091e8620d09bae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2MDEzMWQ0MGIzZDliNjJkOWRlY2E3Nzg2MDkxZTg2MjBkMDliYWU=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-10-21T13:47:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-10-21T13:47:22Z"}, "message": "Rollup merge of #45407 - topecongiro:fix-typos/librust-hir-README, r=kennytm\n\nFix typos in README.md", "tree": {"sha": "dd9784777fcd71fde781b2f4a782e90cda93fa4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd9784777fcd71fde781b2f4a782e90cda93fa4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/260131d40b3d9b62d9deca7786091e8620d09bae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/260131d40b3d9b62d9deca7786091e8620d09bae", "html_url": "https://github.com/rust-lang/rust/commit/260131d40b3d9b62d9deca7786091e8620d09bae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/260131d40b3d9b62d9deca7786091e8620d09bae/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22e808a2faf0da0236675f49d58ac683d32f3f68", "url": "https://api.github.com/repos/rust-lang/rust/commits/22e808a2faf0da0236675f49d58ac683d32f3f68", "html_url": "https://github.com/rust-lang/rust/commit/22e808a2faf0da0236675f49d58ac683d32f3f68"}, {"sha": "a59282d8ed5bf3168bdeccd9b724f322163461bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/a59282d8ed5bf3168bdeccd9b724f322163461bf", "html_url": "https://github.com/rust-lang/rust/commit/a59282d8ed5bf3168bdeccd9b724f322163461bf"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "e283fc40c50a345fc9ed5658753bc45eb9d6836a", "filename": "src/librustc/hir/README.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/260131d40b3d9b62d9deca7786091e8620d09bae/src%2Flibrustc%2Fhir%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/260131d40b3d9b62d9deca7786091e8620d09bae/src%2Flibrustc%2Fhir%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2FREADME.md?ref=260131d40b3d9b62d9deca7786091e8620d09bae", "patch": "@@ -57,7 +57,7 @@ carry around references into the HIR, but rather to carry around\n *identifier numbers* (or just \"ids\"). Right now, you will find four\n sorts of identifiers in active use:\n \n-- `DefId`, which primarily name \"definitions\" or top-level items.\n+- `DefId`, which primarily names \"definitions\" or top-level items.\n   - You can think of a `DefId` as being shorthand for a very explicit\n     and complete path, like `std::collections::HashMap`. However,\n     these paths are able to name things that are not nameable in\n@@ -114,6 +114,6 @@ A **body** represents some kind of executable code, such as the body\n of a function/closure or the definition of a constant. Bodies are\n associated with an **owner**, which is typically some kind of item\n (e.g., a `fn()` or `const`), but could also be a closure expression\n-(e.g., `|x, y| x + y`). You can use the HIR map to find find the body\n+(e.g., `|x, y| x + y`). You can use the HIR map to find the body\n associated with a given def-id (`maybe_body_owned_by()`) or to find\n the owner of a body (`body_owner_def_id()`)."}, {"sha": "fb0c7ce1df23dd38a3be7a1c37f33b969701d39d", "filename": "src/librustc/mir/README.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/260131d40b3d9b62d9deca7786091e8620d09bae/src%2Flibrustc%2Fmir%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/260131d40b3d9b62d9deca7786091e8620d09bae/src%2Flibrustc%2Fmir%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2FREADME.md?ref=260131d40b3d9b62d9deca7786091e8620d09bae", "patch": "@@ -6,7 +6,7 @@ register and define new MIR transformations and analyses.\n \n Most of the code that operates on MIR can be found in the\n `librustc_mir` crate or other crates. The code found here in\n-`librustc` is just the datatype definitions, alonging the functions\n+`librustc` is just the datatype definitions, along with the functions\n which operate on MIR to be placed everywhere else.\n \n ## MIR Data Types and visitor\n@@ -27,7 +27,7 @@ As a MIR *consumer*, you are expected to use one of the queries that\n returns a \"final MIR\". As of the time of this writing, there is only\n one: `optimized_mir(def_id)`, but more are expected to come in the\n future. For foreign def-ids, we simply read the MIR from the other\n-crate's metadata. But for local query, this query will construct the\n+crate's metadata. But for local def-ids, the query will construct the\n MIR and then iteratively optimize it by putting it through various\n pipeline stages. This section describes those pipeline stages and how\n you can extend them.\n@@ -51,7 +51,7 @@ a `&'tcx Steal<Mir<'tcx>>`, allocated using\n **stolen** by the next suite of optimizations -- this is an\n optimization to avoid cloning the MIR. Attempting to use a stolen\n result will cause a panic in the compiler. Therefore, it is important\n-that you not read directly from these intermediate queries except as\n+that you do not read directly from these intermediate queries except as\n part of the MIR processing pipeline.\n \n Because of this stealing mechanism, some care must also be taken to"}, {"sha": "8207c18e67791af4507a6b5604cd298ce4ea9863", "filename": "src/librustc/ty/maps/README.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/260131d40b3d9b62d9deca7786091e8620d09bae/src%2Flibrustc%2Fty%2Fmaps%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/260131d40b3d9b62d9deca7786091e8620d09bae/src%2Flibrustc%2Fty%2Fmaps%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2FREADME.md?ref=260131d40b3d9b62d9deca7786091e8620d09bae", "patch": "@@ -169,7 +169,7 @@ That is, they take an `&mut Providers` and mutate it in place. Usually\n we use the formulation above just because it looks nice, but you could\n as well do `providers.type_of = type_of`, which would be equivalent.\n (Here, `type_of` would be a top-level function, defined as we saw\n-before.) So, if we wanted to have add a provider for some other query,\n+before.) So, if we want to add a provider for some other query,\n let's call it `fubar`, into the crate above, we might modify the `provide()`\n function like so:\n \n@@ -185,7 +185,7 @@ pub fn provide(providers: &mut Providers) {\n fn fubar<'cx, 'tcx>(tcx: TyCtxt<'cx, 'tcx>, key: DefId) -> Fubar<'tcx> { .. }\n ```\n \n-NB. Most of the `rustc_*` crate only provide **local\n+NB. Most of the `rustc_*` crates only provide **local\n providers**. Almost all **extern providers** wind up going through the\n `rustc_metadata` crate, which loads the information from the crate\n metadata.  But in some cases there are crates that provide queries for\n@@ -201,7 +201,7 @@ Well, defining a query takes place in two steps:\n 1. first, you have to specify the query name and arguments; and then,\n 2. you have to supply query providers where needed.\n \n-The specify the query name and arguments, you simply add an entry\n+To specify the query name and arguments, you simply add an entry\n to the big macro invocation in `mod.rs`. This will probably have changed\n by the time you read this README, but at present it looks something\n like:"}]}