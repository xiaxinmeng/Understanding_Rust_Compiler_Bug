{"sha": "b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1NjhlZmMwY2YxNzNhYzdiMmQzNzI4NGJlZGE1ZmRmOGE3Njg2YWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-20T16:51:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-20T16:51:44Z"}, "message": "auto merge of #13020 : alexcrichton/rust/vec, r=brson\n\nThe commits have the details.", "tree": {"sha": "415a907e4fe835d78e4bfb2e3581010a33eed192", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/415a907e4fe835d78e4bfb2e3581010a33eed192"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "html_url": "https://github.com/rust-lang/rust/commit/b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c01e2f05a3ef27e464d1f0057ddabcde6ffde70c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c01e2f05a3ef27e464d1f0057ddabcde6ffde70c", "html_url": "https://github.com/rust-lang/rust/commit/c01e2f05a3ef27e464d1f0057ddabcde6ffde70c"}, {"sha": "da3625161d8f8bcb2f43d703eec8d002d0bb9c87", "url": "https://api.github.com/repos/rust-lang/rust/commits/da3625161d8f8bcb2f43d703eec8d002d0bb9c87", "html_url": "https://github.com/rust-lang/rust/commit/da3625161d8f8bcb2f43d703eec8d002d0bb9c87"}], "stats": {"total": 243, "additions": 12, "deletions": 231}, "files": [{"sha": "ae7f3246272711e32959c8eb900339497678e74f", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -13,7 +13,6 @@\n \n #[allow(non_camel_case_types)];\n #[deny(warnings)];\n-#[allow(deprecated_owned_vector)];\n \n extern crate test;\n extern crate getopts;"}, {"sha": "2cc41dd7085d98cf6c6210d386112a4fbeeee349", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -24,7 +24,6 @@\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n #[allow(missing_doc)];\n #[feature(managed_boxes)];\n-#[allow(deprecated_owned_vector)];\n \n extern crate collections;\n "}, {"sha": "f92aee98479899c50236693073861e6a8526a252", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -25,7 +25,6 @@\n // NOTE remove the following two attributes after the next snapshot.\n #[allow(unrecognized_lint)];\n #[allow(default_type_param_usage)];\n-#[allow(deprecated_owned_vector)];\n \n extern crate rand;\n "}, {"sha": "5601bd87bb999e0bfc3647b1ac909fd2b35d22ac", "filename": "src/libflate/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibflate%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibflate%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibflate%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -94,7 +94,6 @@ pub fn inflate_bytes_zlib(bytes: &[u8]) -> CVec<u8> {\n \n #[cfg(test)]\n mod tests {\n-    #[allow(deprecated_owned_vector)];\n     extern crate rand;\n \n     use super::{inflate_bytes, deflate_bytes};"}, {"sha": "f4937755484a7f5fd25396b88ae2d99c2bd06318", "filename": "src/libgetopts/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibgetopts%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibgetopts%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgetopts%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -84,7 +84,6 @@\n       html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n #[deny(missing_doc)];\n-#[allow(deprecated_owned_vector)];\n \n #[feature(globs, phase)];\n "}, {"sha": "c5af3309e2146da1eceb7d1c8b983dc970a81e7f", "filename": "src/libglob/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibglob%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibglob%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibglob%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -30,7 +30,6 @@\n #[doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n       html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n-#[allow(deprecated_owned_vector)];\n \n use std::cell::Cell;\n use std::{cmp, os, path};"}, {"sha": "a23d2d4f3a57e8e5b17a264c74d2de92692892fb", "filename": "src/libgreen/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibgreen%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibgreen%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgreen%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -174,7 +174,6 @@\n // NB this does *not* include globs, please keep it that way.\n #[feature(macro_rules, phase)];\n #[allow(visible_private_types)];\n-#[allow(deprecated_owned_vector)];\n \n #[cfg(test)] #[phase(syntax, link)] extern crate log;\n extern crate rand;"}, {"sha": "50639a59eb9b79480ff1450322a83bfca0f0cac4", "filename": "src/liblog/directive.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Fliblog%2Fdirective.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Fliblog%2Fdirective.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblog%2Fdirective.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n use std::cmp;\n-use std::vec::Vec;\n \n #[deriving(Show, Clone)]\n pub struct LogDirective {"}, {"sha": "45ba598a795a3b6e30914fd57f4017fa4aa5272d", "filename": "src/liblog/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Fliblog%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Fliblog%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblog%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -126,7 +126,6 @@ use std::local_data;\n use std::os;\n use std::rt;\n use std::slice;\n-use std::vec::Vec;\n \n use sync::one::{Once, ONCE_INIT};\n "}, {"sha": "b997aa4f11cfdf2cf056256e0116ed9c43701801", "filename": "src/libnative/io/file_unix.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibnative%2Fio%2Ffile_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibnative%2Fio%2Ffile_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ffile_unix.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -19,7 +19,6 @@ use std::libc;\n use std::mem;\n use std::rt::rtio;\n use std::slice;\n-use std::vec::Vec;\n \n use io::{IoResult, retry, keep_going};\n "}, {"sha": "4b6942a1083163dcd0cdf9da9cd9e2d802c4b12b", "filename": "src/libnative/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibnative%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibnative%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -50,7 +50,6 @@\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n #[deny(unused_result, unused_must_use)];\n #[allow(non_camel_case_types)];\n-#[allow(deprecated_owned_vector)];\n \n // NB this crate explicitly does *not* allow glob imports, please seriously\n //    consider whether they're needed before adding that feature here (the"}, {"sha": "5716a1dedf3ae628b19e6092d5460dcf867d95eb", "filename": "src/libnum/bigint.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibnum%2Fbigint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibnum%2Fbigint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Fbigint.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -29,7 +29,6 @@ use std::str;\n use std::uint;\n use std::{i64, u64};\n use std::vec;\n-use std::vec::Vec;\n \n /**\n A `BigDigit` is a `BigUint`'s composing element.\n@@ -1461,7 +1460,6 @@ mod biguint_tests {\n     use std::num::CheckedDiv;\n     use rand::{task_rng};\n     use std::u64;\n-    use std::vec::Vec;\n \n     #[test]\n     fn test_from_slice() {\n@@ -2195,7 +2193,6 @@ mod bigint_tests {\n     use std::num::{ToPrimitive, FromPrimitive};\n     use rand::{task_rng};\n     use std::u64;\n-    use std::vec::Vec;\n \n     #[test]\n     fn test_from_biguint() {"}, {"sha": "e2c6c37dae18028ebbd4f62b4e15ba1507a630fb", "filename": "src/libnum/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibnum%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibnum%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -17,7 +17,6 @@\n #[doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n       html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n-#[allow(deprecated_owned_vector)];\n \n extern crate rand;\n "}, {"sha": "afd4fa73ef6d848278e35b15d91aac8d3d06cd57", "filename": "src/libnum/rational.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibnum%2Frational.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibnum%2Frational.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Frational.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -16,7 +16,6 @@ use std::cmp;\n use std::fmt;\n use std::from_str::FromStr;\n use std::num::{Zero,One,ToStrRadix,FromStrRadix,Round};\n-use std::vec::Vec;\n use bigint::{BigInt, BigUint, Sign, Plus, Minus};\n \n /// Represents the ratio between 2 numbers."}, {"sha": "357363597d9732c175b486414e065cf025c8f7dc", "filename": "src/librand/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrand%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrand%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -71,7 +71,6 @@ println!(\"{:?}\", tuple_ptr)\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n \n #[feature(macro_rules, managed_boxes, phase)];\n-#[allow(deprecated_owned_vector)];\n \n #[cfg(test)]\n #[phase(syntax, link)] extern crate log;"}, {"sha": "aa561333756ecfe6b323deb320fa5adf2f332f8c", "filename": "src/librustc/back/archive.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Farchive.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -16,7 +16,6 @@ use metadata::filesearch;\n use lib::llvm::{ArchiveRef, llvm};\n \n use std::cast;\n-use std::vec::Vec;\n use std::io;\n use std::io::{fs, TempDir};\n use std::libc;"}, {"sha": "b363b06fbdcdcf078a52499560ca0c1435fb6425", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -33,7 +33,6 @@ use std::ptr;\n use std::str;\n use std::io;\n use std::io::{fs, TempDir, Process};\n-use std::vec::Vec;\n use flate;\n use serialize::hex::ToHex;\n use syntax::abi;\n@@ -105,7 +104,6 @@ pub mod write {\n     use std::io::Process;\n     use std::libc::{c_uint, c_int};\n     use std::str;\n-    use std::vec::Vec;\n \n     // On android, we by default compile for armv7 processors. This enables\n     // things like double word CAS instructions (rather than emulating them)"}, {"sha": "9667d7b84e9c0b7ec254395285e230160560391d", "filename": "src/librustc/back/mips.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fback%2Fmips.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fback%2Fmips.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Fmips.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -11,7 +11,6 @@\n use back::target_strs;\n use driver::session::sess_os_to_meta_os;\n use metadata::loader::meta_section_name;\n-use std::vec::Vec;\n use syntax::abi;\n \n pub fn get_target_strs(target_triple: ~str, target_os: abi::Os) -> target_strs::t {"}, {"sha": "08e96ec9215edc6e6df9f52a2906ff6b3823379c", "filename": "src/librustc/back/rpath.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Frpath.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -15,7 +15,6 @@ use metadata::filesearch;\n \n use collections::HashSet;\n use std::{os, slice};\n-use std::vec::Vec;\n use syntax::abi;\n \n fn not_win32(os: abi::Os) -> bool {"}, {"sha": "1528fff511310f0c9c7c539fd489a08db66564b3", "filename": "src/librustc/back/target_strs.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fback%2Ftarget_strs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fback%2Ftarget_strs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Ftarget_strs.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -10,8 +10,6 @@\n \n #[allow(non_camel_case_types)];\n \n-use std::vec::Vec;\n-\n pub struct t {\n     module_asm: ~str,\n     meta_sect_name: ~str,"}, {"sha": "ae9cd37fe69286f21abf4b1ec4022bde323b0f64", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -37,7 +37,6 @@ use std::io::fs;\n use std::io::MemReader;\n use std::mem::drop;\n use std::os;\n-use std::vec::Vec;\n use std::vec;\n use getopts::{optopt, optmulti, optflag, optflagopt};\n use getopts;"}, {"sha": "113906f570be923f81064e9c3e814d20f6d695f0", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -28,7 +28,6 @@ use syntax::{abi, ast, codemap};\n use syntax;\n \n use std::cell::{Cell, RefCell};\n-use std::vec::Vec;\n use collections::HashSet;\n \n pub struct Config {\n@@ -407,7 +406,7 @@ macro_rules! cgoptions(\n             }\n         }\n \n-        fn parse_list(slot: &mut ::std::vec::Vec<~str>, v: Option<&str>)\n+        fn parse_list(slot: &mut Vec<~str>, v: Option<&str>)\n                       -> bool {\n             match v {\n                 Some(s) => {"}, {"sha": "b4861d196e0299d55f470ae1a2b6f8c01dbb2e0f", "filename": "src/librustc/front/config.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Ffront%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Ffront%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Fconfig.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::vec::Vec;\n use syntax::fold::Folder;\n use syntax::{ast, fold, attr};\n use syntax::codemap;"}, {"sha": "c3743db8adcbb448e06e500a04b1e9f72947cd70", "filename": "src/librustc/front/feature_gate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Ffront%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Ffront%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ffeature_gate.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -31,7 +31,6 @@ use syntax::parse::token;\n use driver::session::Session;\n \n use std::cell::Cell;\n-use std::vec::Vec;\n \n /// This is a list of all known features since the beginning of time. This list\n /// can never shrink, it may only be expanded (in order to prevent old programs"}, {"sha": "6a6819ae516d168e4670815e0e195bab261f5ee4", "filename": "src/librustc/front/std_inject.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Ffront%2Fstd_inject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Ffront%2Fstd_inject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Fstd_inject.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -11,7 +11,6 @@\n \n use driver::session::Session;\n \n-use std::vec::Vec;\n use std::vec;\n use syntax::ast;\n use syntax::attr;"}, {"sha": "b0def333cb3bab3c7cff05842c704ff445ef453a", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -28,7 +28,6 @@ This API is completely unstable and subject to change.\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n \n #[allow(deprecated)];\n-#[allow(deprecated_owned_vector)];\n #[feature(macro_rules, globs, struct_variant, managed_boxes)];\n #[feature(quote, default_type_params, phase)];\n \n@@ -55,7 +54,6 @@ use std::io;\n use std::os;\n use std::str;\n use std::task;\n-use std::vec::Vec;\n use std::vec;\n use syntax::ast;\n use syntax::diagnostic::Emitter;"}, {"sha": "8d48403b6e56f68a19840a106505e8f233608626", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -23,7 +23,6 @@ use metadata::loader;\n use metadata::loader::Os;\n \n use std::cell::RefCell;\n-use std::vec::Vec;\n use collections::HashMap;\n use syntax::ast;\n use syntax::abi;"}, {"sha": "47202feef9a161525aa385cd9178180b073be686", "filename": "src/librustc/metadata/csearch.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcsearch.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -20,7 +20,6 @@ use middle::typeck;\n \n use reader = serialize::ebml::reader;\n use std::rc::Rc;\n-use std::vec::Vec;\n use std::vec;\n use syntax::ast;\n use syntax::ast_map;"}, {"sha": "c1d3ad76260aef83406962fafc6c684c6cb01f21", "filename": "src/librustc/metadata/cstore.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcstore.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -18,7 +18,6 @@ use metadata::decoder;\n use metadata::loader;\n \n use std::cell::RefCell;\n-use std::vec::Vec;\n use std::c_vec::CVec;\n use collections::HashMap;\n use syntax::ast;"}, {"sha": "61d6b1d9d75a246170082a3fcf45f728cae0ecb4", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -33,7 +33,6 @@ use std::io;\n use std::io::extensions::u64_from_be_bytes;\n use std::option;\n use std::rc::Rc;\n-use std::vec::Vec;\n use serialize::ebml::reader;\n use serialize::ebml;\n use serialize::Decodable;"}, {"sha": "9faa5610887d58d8651ba39a230df95e00a310eb", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -32,7 +32,6 @@ use std::hash;\n use std::hash::Hash;\n use std::io::MemWriter;\n use std::str;\n-use std::vec::Vec;\n use collections::HashMap;\n use syntax::abi::AbiSet;\n use syntax::ast::*;"}, {"sha": "f9ef4ebabdc9872b44df4048b3ed07d1940b77a3", "filename": "src/librustc/metadata/filesearch.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -13,7 +13,6 @@\n use std::cell::RefCell;\n use std::os;\n use std::io::fs;\n-use std::vec::Vec;\n use collections::HashSet;\n \n pub enum FileMatch { FileMatches, FileDoesntMatch }"}, {"sha": "c670638385507a7665bd349939a32b9d40a17f35", "filename": "src/librustc/metadata/loader.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Floader.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -31,7 +31,6 @@ use std::io;\n use std::os::consts::{macos, freebsd, linux, android, win32};\n use std::str;\n use std::slice;\n-use std::vec::Vec;\n \n use collections::{HashMap, HashSet};\n use flate;"}, {"sha": "1e9b98073fa9413a96d4929d63139be99421b960", "filename": "src/librustc/metadata/tydecode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftydecode.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -20,7 +20,6 @@ use middle::ty;\n \n use std::str;\n use std::uint;\n-use std::vec::Vec;\n use syntax::abi::AbiSet;\n use syntax::abi;\n use syntax::ast;"}, {"sha": "35014d4085a8cade438427fee1b2ece2a82378bf", "filename": "src/librustc/metadata/tyencode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftyencode.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -19,7 +19,6 @@ use std::io;\n use std::io::MemWriter;\n use std::str;\n use std::fmt;\n-use std::vec::Vec;\n \n use middle::ty::param_ty;\n use middle::ty;"}, {"sha": "9abb35d5738523ed44194dc9ede95019f82c76a6", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -37,7 +37,6 @@ use std::cast;\n use std::cell::RefCell;\n use std::io::Seek;\n use std::rc::Rc;\n-use std::vec::Vec;\n \n use serialize::ebml::reader;\n use serialize::ebml;"}, {"sha": "6b8af3cbc53ae76b2155dc0c108a5b30b771104e", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -23,7 +23,6 @@ use middle::borrowck::*;\n use middle::moves;\n use middle::ty;\n use middle::typeck::MethodCall;\n-use std::vec::Vec;\n use syntax::ast;\n use syntax::ast_util;\n use syntax::codemap::Span;"}, {"sha": "8ecac0a60bede1cc24d39de84af1d7346080faba", "filename": "src/librustc/middle/borrowck/gather_loans/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -27,7 +27,6 @@ use middle::typeck::MethodCall;\n use util::common::indenter;\n use util::ppaux::{Repr};\n \n-use std::vec::Vec;\n use syntax::ast;\n use syntax::ast_util;\n use syntax::ast_util::IdRange;"}, {"sha": "39ec183da45b6ba95980c25eb31d9a747cb16bb8", "filename": "src/librustc/middle/borrowck/gather_loans/restrictions.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Frestrictions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Frestrictions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Frestrictions.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -12,7 +12,6 @@\n  * Computes the restrictions that result from a borrow.\n  */\n \n-use std::vec::Vec;\n use std::vec;\n use middle::borrowck::*;\n use mc = middle::mem_categorization;"}, {"sha": "362553ccbf12d5d7780f21d114cb347707706db3", "filename": "src/librustc/middle/borrowck/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -25,7 +25,6 @@ use std::cell::{Cell, RefCell};\n use collections::HashMap;\n use std::ops::{BitOr, BitAnd};\n use std::result::{Result};\n-use std::vec::Vec;\n use syntax::ast;\n use syntax::ast_map;\n use syntax::ast_util;"}, {"sha": "de4059142e4db69027eb6ff299f9d7539e06d840", "filename": "src/librustc/middle/borrowck/move_data.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmove_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmove_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmove_data.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -17,7 +17,6 @@ comments in the section \"Moves and initialization\" and in `doc.rs`.\n \n use std::cell::RefCell;\n use std::uint;\n-use std::vec::Vec;\n use collections::{HashMap, HashSet};\n use middle::borrowck::*;\n use middle::dataflow::DataFlowContext;"}, {"sha": "a742ff336b22e175d7ad7df7d1233d172835a403", "filename": "src/librustc/middle/cfg/construct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fcfg%2Fconstruct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fcfg%2Fconstruct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcfg%2Fconstruct.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -12,7 +12,6 @@ use middle::cfg::*;\n use middle::graph;\n use middle::typeck;\n use middle::ty;\n-use std::vec::Vec;\n use syntax::ast;\n use syntax::ast_util;\n use syntax::opt_vec;"}, {"sha": "6bec35665fbd7d3c45a90a39a75b27a84f6ef724", "filename": "src/librustc/middle/check_const.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -15,7 +15,6 @@ use middle::ty;\n use middle::typeck;\n use util::ppaux;\n \n-use std::vec::Vec;\n use syntax::ast::*;\n use syntax::{ast_util, ast_map};\n use syntax::visit::Visitor;"}, {"sha": "9e74e9605daf5ed462dbe39a7b8a8fc520475162", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -21,7 +21,6 @@ use util::ppaux::ty_to_str;\n \n use std::cmp;\n use std::iter;\n-use std::vec::Vec;\n use std::vec;\n use syntax::ast::*;\n use syntax::ast_util::{unguarded_pat, walk_pat};"}, {"sha": "5f0db7b3821953cbc582820f167e8abf173400c2", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -26,7 +26,6 @@ use syntax::{ast, ast_map, ast_util};\n use std::cell::RefCell;\n use collections::HashMap;\n use std::rc::Rc;\n-use std::vec::Vec;\n \n //\n // This pass classifies expressions by their constant-ness."}, {"sha": "114bf3bae2cb10436cc993ec2cf7d4d090f4dad1", "filename": "src/librustc/middle/dataflow.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fdataflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fdataflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdataflow.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -20,7 +20,6 @@\n use std::io;\n use std::uint;\n use std::slice;\n-use std::vec::Vec;\n use syntax::ast;\n use syntax::ast_util;\n use syntax::ast_util::IdRange;"}, {"sha": "7004ce3f0d4fd4a0b7c92435bb0e6d9118ec5615", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -19,7 +19,6 @@ use middle::typeck;\n use util::nodemap::NodeSet;\n \n use collections::HashSet;\n-use std::vec::Vec;\n use syntax::ast;\n use syntax::ast_map;\n use syntax::ast_util::{local_def, def_id_of_def, is_local};"}, {"sha": "7adfd6e0af03b3bf789b0908b0b4f84c27e0dc05", "filename": "src/librustc/middle/entry.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fentry.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -11,7 +11,6 @@\n \n use driver::session;\n use driver::session::Session;\n-use std::vec::Vec;\n use syntax::ast::{Crate, Name, NodeId, Item, ItemFn};\n use syntax::ast_map;\n use syntax::attr;"}, {"sha": "d836f8e332b175aee3092c36dfa0028e46440b17", "filename": "src/librustc/middle/freevars.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ffreevars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ffreevars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ffreevars.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -17,7 +17,6 @@ use middle::resolve;\n use middle::ty;\n use util::nodemap::{NodeMap, NodeSet};\n \n-use std::vec::Vec;\n use syntax::codemap::Span;\n use syntax::{ast, ast_util};\n use syntax::visit;"}, {"sha": "66539c63d53f52c0a4dc5744b31ac65994c750e2", "filename": "src/librustc/middle/graph.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fgraph.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -35,7 +35,6 @@ be indexed by the direction (see the type `Direction`).\n */\n \n use std::uint;\n-use std::vec::Vec;\n \n pub struct Graph<N,E> {\n     priv nodes: Vec<Node<N>> ,"}, {"sha": "d9843ba36cc81b31a299512bd94c2b8bfb763a81", "filename": "src/librustc/middle/kind.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fkind.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -16,7 +16,6 @@ use middle::typeck;\n use util::ppaux::{Repr, ty_to_str};\n use util::ppaux::UserString;\n \n-use std::vec::Vec;\n use syntax::ast::*;\n use syntax::attr;\n use syntax::codemap::Span;"}, {"sha": "2a1cb6f5a8fc3416969c5bdcdcd1eb908f984ba0", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -33,7 +33,6 @@ use syntax::visit;\n use collections::HashMap;\n use std::iter::Enumerate;\n use std::slice;\n-use std::vec::Vec;\n \n // The actual lang items defined come at the end of this file in one handy table.\n // So you probably just want to nip down to the end."}, {"sha": "6c13d496166aec8b4f112efb8d9236d650cc0d1b", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -58,7 +58,6 @@ use std::u16;\n use std::u32;\n use std::u64;\n use std::u8;\n-use std::vec::Vec;\n use collections::SmallIntMap;\n use syntax::ast_map;\n use syntax::ast_util::IdVisitingOperation;\n@@ -405,7 +404,7 @@ static lint_table: &'static [(&'static str, LintSpec)] = &[\n      LintSpec {\n         lint: DeprecatedOwnedVector,\n         desc: \"use of a `~[T]` vector\",\n-        default: warn\n+        default: allow,\n     }),\n ];\n "}, {"sha": "5e8bee803f3767b3c7b4270f4d7891c4741b0035", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -116,7 +116,6 @@ use std::io;\n use std::rc::Rc;\n use std::str;\n use std::uint;\n-use std::vec::Vec;\n use syntax::ast::*;\n use syntax::codemap::Span;\n use syntax::parse::token::special_idents;"}, {"sha": "895fff1df5cb25eeb5d8358806dec2f2627477b6", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -66,7 +66,6 @@ use middle::ty;\n use middle::typeck;\n use util::ppaux::{ty_to_str, region_ptr_to_str, Repr};\n \n-use std::vec::Vec;\n use syntax::ast::{MutImmutable, MutMutable};\n use syntax::ast;\n use syntax::codemap::Span;"}, {"sha": "fb0aa1e405c4e5dd51ffcded9c8ae25f28833c70", "filename": "src/librustc/middle/moves.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmoves.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -138,7 +138,6 @@ use util::ppaux::UserString;\n use util::nodemap::{NodeMap, NodeSet};\n \n use std::rc::Rc;\n-use std::vec::Vec;\n use syntax::ast::*;\n use syntax::ast_util;\n use syntax::visit;"}, {"sha": "36c6c19028444df0c33cb7b06dd707867e4ea24f", "filename": "src/librustc/middle/pat_util.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fpat_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fpat_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fpat_util.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -12,7 +12,6 @@\n use middle::resolve;\n \n use collections::HashMap;\n-use std::vec::Vec;\n use syntax::ast::*;\n use syntax::ast_util::{path_to_ident, walk_pat};\n use syntax::codemap::Span;"}, {"sha": "6dd4eb360f2bff5003b41ea747cb3e5b65c3b7fc", "filename": "src/librustc/middle/privacy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fprivacy.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -13,7 +13,6 @@\n //! which are available for use externally when compiled as a library.\n \n use std::mem::replace;\n-use std::vec::Vec;\n \n use metadata::csearch;\n use middle::lint;"}, {"sha": "97f492ae73dadbc85e0152ee7d68d872e2f95b63", "filename": "src/librustc/middle/reachable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Freachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Freachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Freachable.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -20,7 +20,6 @@ use middle::typeck;\n use middle::privacy;\n use util::nodemap::NodeSet;\n \n-use std::vec::Vec;\n use collections::HashSet;\n use syntax::ast;\n use syntax::ast_map;"}, {"sha": "a1f74aaee4e42c77a9eef12b4eff3456262f2b46", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -27,7 +27,6 @@ use middle::ty;\n use util::nodemap::NodeMap;\n \n use std::cell::RefCell;\n-use std::vec::Vec;\n use collections::{HashMap, HashSet};\n use syntax::codemap::Span;\n use syntax::{ast, visit};"}, {"sha": "86180a042974825276c882481abb0ba8fdb46f9e", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -34,7 +34,6 @@ use syntax::visit::Visitor;\n use std::cell::{Cell, RefCell};\n use std::uint;\n use std::mem::replace;\n-use std::vec::Vec;\n use collections::{HashMap, HashSet};\n \n // Definition mapping"}, {"sha": "49d8c5acb17de9341fb0a8c7043a60badd7a6489", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -18,7 +18,6 @@\n  */\n \n use driver::session::Session;\n-use std::vec::Vec;\n use util::nodemap::NodeMap;\n use syntax::ast;\n use syntax::codemap::Span;"}, {"sha": "43a6b2c46a5cb0249bf8fe532ba081502cfa58f1", "filename": "src/librustc/middle/subst.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fsubst.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -16,7 +16,6 @@ use middle::ty_fold::TypeFolder;\n use util::ppaux::Repr;\n \n use std::rc::Rc;\n-use std::vec::Vec;\n use syntax::codemap::Span;\n use syntax::opt_vec::OptVec;\n "}, {"sha": "31296ba260bfbda324d44a82af757be71796c71e", "filename": "src/librustc/middle/trans/_match.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -225,7 +225,6 @@ use util::ppaux::{Repr, vec_map_to_str};\n \n use collections::HashMap;\n use std::cell::Cell;\n-use std::vec::Vec;\n use std::vec;\n use syntax::ast;\n use syntax::ast::Ident;"}, {"sha": "8ec061fc2f5da7f679329c5ca3c90f7e7f4bd010", "filename": "src/librustc/middle/trans/adt.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -57,7 +57,6 @@ use middle::trans::type_::Type;\n use middle::trans::type_of;\n use middle::ty;\n use middle::ty::Disr;\n-use std::vec::Vec;\n use std::vec;\n use syntax::abi::{X86, X86_64, Arm, Mips};\n use syntax::ast;"}, {"sha": "f4ce7c3c6a6924b9a43bd2cb8f3bd93eb4df5670", "filename": "src/librustc/middle/trans/asm.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fasm.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -23,7 +23,6 @@ use middle::trans::type_of;\n use middle::trans::type_::Type;\n \n use std::c_str::ToCStr;\n-use std::vec::Vec;\n use syntax::ast;\n \n // Take an inline assembly expression and splat it out via LLVM"}, {"sha": "3cdbc38ab07f99d1efcafd53ec0cd19fb908d35f", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -76,7 +76,6 @@ use std::c_str::ToCStr;\n use std::cell::{Cell, RefCell};\n use std::libc::c_uint;\n use std::local_data;\n-use std::vec::Vec;\n use syntax::abi::{X86, X86_64, Arm, Mips, Rust, RustIntrinsic, OsWin32};\n use syntax::ast_map::PathName;\n use syntax::ast_util::{local_def, is_local};"}, {"sha": "059582e95d48fd3db745d453d066de2782270c9e", "filename": "src/librustc/middle/trans/builder.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuilder.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -20,7 +20,6 @@ use middle::trans::type_::Type;\n \n use collections::HashMap;\n use std::libc::{c_uint, c_ulonglong, c_char};\n-use std::vec::Vec;\n use syntax::codemap::Span;\n \n pub struct Builder<'a> {"}, {"sha": "ddd9f11034d7c3f30977073bdde28faa38b791fb", "filename": "src/librustc/middle/trans/cabi.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -16,7 +16,6 @@ use middle::trans::cabi_x86_64;\n use middle::trans::cabi_arm;\n use middle::trans::cabi_mips;\n use middle::trans::type_::Type;\n-use std::vec::Vec;\n use syntax::abi::{X86, X86_64, Arm, Mips};\n \n #[deriving(Clone, Eq)]"}, {"sha": "5dc9a915746064625755054e49b0657586178aa3", "filename": "src/librustc/middle/trans/cabi_arm.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_arm.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -17,8 +17,6 @@ use middle::trans::context::CrateContext;\n use middle::trans::type_::Type;\n \n use std::cmp;\n-use std::option::{None, Some};\n-use std::vec::Vec;\n \n fn align_up_to(off: uint, a: uint) -> uint {\n     return (off + a - 1u) / a * a;"}, {"sha": "a373207585595bb64d800c8ced6debd545e1dd4b", "filename": "src/librustc/middle/trans/cabi_mips.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_mips.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_mips.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_mips.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -18,8 +18,6 @@ use middle::trans::context::CrateContext;\n use middle::trans::cabi::*;\n use middle::trans::type_::Type;\n \n-use std::vec::Vec;\n-\n fn align_up_to(off: uint, a: uint) -> uint {\n     return (off + a - 1u) / a * a;\n }"}, {"sha": "93b6fdd8988c5f2a399a3ed68fbc71af9287205b", "filename": "src/librustc/middle/trans/cabi_x86.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -15,7 +15,6 @@ use super::cabi::*;\n use super::common::*;\n use super::machine::*;\n use middle::trans::type_::Type;\n-use std::vec::Vec;\n \n pub fn compute_abi_info(ccx: &CrateContext,\n                         atys: &[Type],"}, {"sha": "dbb258ea3997cd217ff4624f87a3ed69b6bcc3db", "filename": "src/librustc/middle/trans/cabi_x86_64.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86_64.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -21,7 +21,6 @@ use middle::trans::context::CrateContext;\n use middle::trans::type_::Type;\n \n use std::cmp;\n-use std::vec::Vec;\n \n #[deriving(Clone, Eq)]\n enum RegClass {"}, {"sha": "78ecc7cc2b3f10741c0480c9cf8a3477e56e9778", "filename": "src/librustc/middle/trans/callee.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -49,7 +49,6 @@ use util::ppaux::Repr;\n \n use middle::trans::type_::Type;\n \n-use std::vec::Vec;\n use std::vec;\n use syntax::ast;\n use syntax::abi::AbiSet;"}, {"sha": "8b4348a8fcba735e839cf7385eccd9affbb1a55f", "filename": "src/librustc/middle/trans/closure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -27,7 +27,6 @@ use util::ppaux::Repr;\n use util::ppaux::ty_to_str;\n \n use arena::TypedArena;\n-use std::vec::Vec;\n use syntax::ast;\n use syntax::ast_util;\n "}, {"sha": "40ab85a91bf99345719c304d1c2e78fab5adc684", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -35,7 +35,6 @@ use collections::HashMap;\n use std::c_str::ToCStr;\n use std::cell::{Cell, RefCell};\n use std::libc::{c_uint, c_longlong, c_ulonglong, c_char};\n-use std::vec::Vec;\n use syntax::ast::Ident;\n use syntax::ast;\n use syntax::ast_map::{PathElem, PathName};"}, {"sha": "c542556c48f9912bc83d67733a5cb735585cdd9c", "filename": "src/librustc/middle/trans/context.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -33,7 +33,6 @@ use std::cell::{Cell, RefCell};\n use std::c_str::ToCStr;\n use std::libc::c_uint;\n use std::ptr;\n-use std::vec::Vec;\n use collections::{HashMap, HashSet};\n use syntax::ast;\n use syntax::parse::token::InternedString;"}, {"sha": "313ee8b592b4dde5defbe83440435cfdb8ece6f9", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -149,7 +149,6 @@ use std::libc::{c_uint, c_ulonglong, c_longlong};\n use std::ptr;\n use std::sync::atomics;\n use std::slice;\n-use std::vec::Vec;\n use syntax::codemap::{Span, Pos};\n use syntax::{abi, ast, codemap, ast_util, ast_map, opt_vec};\n use syntax::parse::token;"}, {"sha": "543f2bcf968aedbcf85173a46e0ec44c1222f398", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -71,7 +71,6 @@ use middle::trans::machine::llsize_of;\n use middle::trans::type_::Type;\n \n use std::slice;\n-use std::vec::Vec;\n use syntax::ast;\n use syntax::codemap;\n use syntax::print::pprust::{expr_to_str};"}, {"sha": "3c808cf4232b6a566a9c5a703237ebaed3066a54", "filename": "src/librustc/middle/trans/foreign.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -27,7 +27,6 @@ use middle::ty::FnSig;\n use middle::ty;\n use std::cmp;\n use std::libc::c_uint;\n-use std::vec::Vec;\n use syntax::abi::{Cdecl, Aapcs, C, AbiSet, Win64};\n use syntax::abi::{RustIntrinsic, Rust, Stdcall, Fastcall, System};\n use syntax::codemap::Span;"}, {"sha": "9618d082068880e67d09a8003326a035545a0f09", "filename": "src/librustc/middle/trans/intrinsic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fintrinsic.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -25,7 +25,6 @@ use middle::trans::machine;\n use middle::trans::machine::llsize_of;\n use middle::trans::type_::Type;\n use middle::ty;\n-use std::vec::Vec;\n use syntax::ast;\n use syntax::ast_map;\n use syntax::parse::token;"}, {"sha": "918037e2181294da75fcf1ec3a140f3ce2a1a0e9", "filename": "src/librustc/middle/trans/meth.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -34,7 +34,6 @@ use util::common::indenter;\n use util::ppaux::Repr;\n \n use std::c_str::ToCStr;\n-use std::vec::Vec;\n use std::vec;\n use syntax::parse::token;\n use syntax::{ast, ast_map, visit};"}, {"sha": "85c0e38e0f6f6366af74e15fad893956d6f140fd", "filename": "src/librustc/middle/trans/monomorphize.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -23,7 +23,6 @@ use middle::ty;\n use middle::typeck;\n use util::ppaux::Repr;\n \n-use std::vec::Vec;\n use syntax::ast;\n use syntax::ast_map;\n use syntax::ast_util::local_def;"}, {"sha": "a0c1b0c042abcb00525496e2fb667d3ae89a6ef0", "filename": "src/librustc/middle/trans/reflect.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -27,8 +27,6 @@ use util::ppaux::ty_to_str;\n \n use arena::TypedArena;\n use std::libc::c_uint;\n-use std::option::{Some,None};\n-use std::vec::Vec;\n use std::vec;\n use syntax::ast::DefId;\n use syntax::ast;"}, {"sha": "7155c73c0026e114caf648a815affc51ced563ce", "filename": "src/librustc/middle/trans/type_.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -21,7 +21,6 @@ use syntax::abi::{X86, X86_64, Arm, Mips};\n use std::c_str::ToCStr;\n use std::cast;\n use std::slice;\n-use std::vec::Vec;\n \n use std::libc::{c_uint};\n "}, {"sha": "6b02339577e73da8a4ad0d8170a2f3799f2729f4", "filename": "src/librustc/middle/trans/type_of.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_of.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -19,7 +19,6 @@ use util::ppaux::Repr;\n \n use middle::trans::type_::Type;\n \n-use std::vec::Vec;\n use syntax::ast;\n use syntax::opt_vec;\n "}, {"sha": "a153aa48219e7929f8203a3b76cea81d2e5dc1b2", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -40,7 +40,6 @@ use std::fmt;\n use std::hash::{Hash, sip};\n use std::ops;\n use std::rc::Rc;\n-use std::vec::Vec;\n use std::vec;\n use collections::{HashMap, HashSet};\n use syntax::ast::*;"}, {"sha": "88262e8ee73258a7a02b71759010467609e72b2f", "filename": "src/librustc/middle/ty_fold.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fty_fold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Fty_fold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty_fold.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -13,8 +13,6 @@\n use middle::ty;\n use util::ppaux::Repr;\n \n-use std::vec::Vec;\n-\n pub trait TypeFolder {\n     fn tcx<'a>(&'a self) -> &'a ty::ctxt;\n "}, {"sha": "be7668eaf404ddf088e6ace50f6f428b6a5a3128", "filename": "src/librustc/middle/typeck/astconv.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -60,7 +60,6 @@ use middle::typeck::rscope::{RegionScope};\n use middle::typeck::lookup_def_tcx;\n use util::ppaux::Repr;\n \n-use std::vec::Vec;\n use syntax::abi::AbiSet;\n use syntax::{ast, ast_util};\n use syntax::codemap::Span;"}, {"sha": "3e6cb5a188994d594b5f1028a60c7ae6aa62d524", "filename": "src/librustc/middle/typeck/check/_match.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -20,7 +20,6 @@ use middle::typeck::infer;\n use middle::typeck::require_same_types;\n \n use collections::{HashMap, HashSet};\n-use std::vec::Vec;\n use syntax::ast;\n use syntax::ast_util;\n use syntax::parse::token;"}, {"sha": "055a996e8ec77e6b2e227f4b7162ecebfb5c4b24", "filename": "src/librustc/middle/typeck/check/method.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -97,7 +97,6 @@ use util::ppaux::Repr;\n \n use collections::HashSet;\n use std::result;\n-use std::vec::Vec;\n use std::vec;\n use syntax::ast::{DefId, SelfValue, SelfRegion};\n use syntax::ast::{SelfUniq, SelfStatic};"}, {"sha": "8f59bb2800074d9aab49648b656419f0056db83b", "filename": "src/librustc/middle/typeck/check/regionmanip.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionmanip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionmanip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionmanip.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -15,7 +15,6 @@ use middle::ty_fold;\n use middle::ty_fold::TypeFolder;\n \n use collections::HashMap;\n-use std::vec::Vec;\n use util::ppaux::Repr;\n use util::ppaux;\n "}, {"sha": "e3c6db1708175be83f38de304dd02dfc3d39463a", "filename": "src/librustc/middle/typeck/check/vtable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -30,7 +30,6 @@ use util::ppaux::Repr;\n use collections::HashSet;\n use std::cell::RefCell;\n use std::result;\n-use std::vec::Vec;\n use syntax::ast;\n use syntax::ast_util;\n use syntax::codemap::Span;"}, {"sha": "669f14ccb8cd1f72601a7a83f5e64864db6013fd", "filename": "src/librustc/middle/typeck/check/writeback.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -28,7 +28,6 @@ use middle::typeck::write_ty_to_tcx;\n use util::ppaux;\n use util::ppaux::Repr;\n \n-use std::vec::Vec;\n use syntax::ast;\n use syntax::codemap::Span;\n use syntax::print::pprust::pat_to_str;"}, {"sha": "c75e56914b253209cbf23fa218891c4b1c2881f3", "filename": "src/librustc/middle/typeck/coherence.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -48,7 +48,6 @@ use syntax::visit;\n use collections::HashSet;\n use std::cell::RefCell;\n use std::rc::Rc;\n-use std::vec::Vec;\n use std::vec;\n \n struct UniversalQuantificationResult {"}, {"sha": "ec460f8c6b59b77eaa9546aececbbfaff6c60494", "filename": "src/librustc/middle/typeck/collect.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -46,7 +46,6 @@ use util::ppaux;\n use util::ppaux::Repr;\n \n use std::rc::Rc;\n-use std::vec::Vec;\n use std::vec;\n use collections::HashSet;\n "}, {"sha": "2af6ed0266a2a383c9fcff6ffcb47e245b6b863d", "filename": "src/librustc/middle/typeck/infer/combine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -63,7 +63,7 @@ use util::common::indent;\n use util::ppaux::Repr;\n \n use std::result;\n-use std::vec::Vec;\n+\n use syntax::ast::{Onceness, Purity};\n use syntax::ast;\n use syntax::opt_vec;"}, {"sha": "53c39068fb9420292accb09295a9785dbbe35bf0", "filename": "src/librustc/middle/typeck/infer/error_reporting.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Ferror_reporting.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -76,7 +76,6 @@ use middle::typeck::infer::region_inference::ProcessedErrors;\n use middle::typeck::infer::region_inference::SameRegions;\n use std::cell::{Cell, RefCell};\n use std::char::from_u32;\n-use std::vec::Vec;\n use syntax::ast;\n use syntax::ast_map;\n use syntax::ast_util;"}, {"sha": "000d2843cca9c6b874342801417c14a9060a2047", "filename": "src/librustc/middle/typeck/infer/lattice.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Flattice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Flattice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Flattice.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -46,7 +46,6 @@ use middle::typeck::infer::to_str::InferStr;\n use util::common::indenter;\n \n use collections::HashMap;\n-use std::vec::Vec;\n \n pub trait LatticeValue {\n     fn sub(cf: &CombineFields, a: &Self, b: &Self) -> ures;"}, {"sha": "923822039b1d52a5efcf6f7a67ed8d1a6f7ac5cf", "filename": "src/librustc/middle/typeck/infer/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -39,7 +39,6 @@ use middle::typeck::infer::unify::{ValsAndBindings, Root};\n use middle::typeck::infer::error_reporting::ErrorReporting;\n use std::cell::{Cell, RefCell};\n use std::result;\n-use std::vec::Vec;\n use syntax::ast::{MutImmutable, MutMutable};\n use syntax::ast;\n use syntax::codemap;"}, {"sha": "7d2159b5b68c4085472e6004cf186c5087fac998", "filename": "src/librustc/middle/typeck/infer/region_inference/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference%2Fmod.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -27,7 +27,6 @@ use util::ppaux::{Repr};\n use std::cell::{Cell, RefCell};\n use std::uint;\n use std::slice;\n-use std::vec::Vec;\n use collections::{HashMap, HashSet};\n use syntax::ast;\n use syntax::opt_vec;"}, {"sha": "4bc0e765af50120012be35850368e3d8c1619613", "filename": "src/librustc/middle/typeck/infer/resolve.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fresolve.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -58,7 +58,6 @@ use middle::typeck::infer::unify::{Root, UnifyInferCtxtMethods};\n use util::common::{indent, indenter};\n use util::ppaux::ty_to_str;\n \n-use std::vec::Vec;\n use syntax::ast;\n \n pub static resolve_nested_tvar: uint = 0b0000000001;"}, {"sha": "1c2ca2799acbd5b70608f70bf093327bb678932f", "filename": "src/librustc/middle/typeck/infer/unify.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -17,7 +17,6 @@ use middle::typeck::infer::{Bounds, uok, ures};\n use middle::typeck::infer::InferCtxt;\n use middle::typeck::infer::to_str::InferStr;\n use std::cell::RefCell;\n-use std::vec::Vec;\n use syntax::ast;\n \n #[deriving(Clone)]"}, {"sha": "66314e141545dc8c0a2c8e3734fe45f29a1ede66", "filename": "src/librustc/middle/typeck/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fmod.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -72,7 +72,6 @@ use util::nodemap::{DefIdMap, FnvHashMap, NodeMap};\n \n use std::cell::RefCell;\n use std::rc::Rc;\n-use std::vec::Vec;\n use collections::List;\n use syntax::codemap::Span;\n use syntax::print::pprust::*;"}, {"sha": "995d3589c20477e12c4055aee810ec105527c9bc", "filename": "src/librustc/middle/typeck/rscope.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Frscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Frscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Frscope.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -12,7 +12,6 @@\n use middle::ty;\n \n use std::cell::Cell;\n-use std::vec::Vec;\n use syntax::ast;\n use syntax::codemap::Span;\n use syntax::opt_vec::OptVec;"}, {"sha": "db74ad99d814d8a8c512ffc9ee339a440256b5bd", "filename": "src/librustc/middle/typeck/variance.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fvariance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fvariance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fvariance.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -197,7 +197,6 @@ use arena;\n use arena::Arena;\n use middle::ty;\n use std::fmt;\n-use std::vec::Vec;\n use syntax::ast;\n use syntax::ast_util;\n use syntax::opt_vec;"}, {"sha": "732723fec9cd51105a71760f341285aff678202c", "filename": "src/librustc/util/common.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fcommon.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -16,7 +16,6 @@ use syntax::visit;\n use syntax::visit::Visitor;\n \n use std::local_data;\n-use std::vec::Vec;\n \n use time;\n "}, {"sha": "4e0a9c3fc3decc8a504cc2c27deaf51e7bed93a1", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -23,7 +23,6 @@ use middle::ty::{ty_uniq, ty_trait, ty_int, ty_uint, ty_unboxed_vec, ty_infer};\n use middle::ty;\n use middle::typeck;\n \n-use std::vec::Vec;\n use syntax::abi::AbiSet;\n use syntax::ast_map;\n use syntax::codemap::{Span, Pos};"}, {"sha": "75d6f1f5cd19eef5576dc78b9a96d1ff2aaa5a9a", "filename": "src/librustc/util/sha2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Futil%2Fsha2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustc%2Futil%2Fsha2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fsha2.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -15,7 +15,6 @@\n use std::iter::range_step;\n use std::num::Zero;\n use std::slice::bytes::{MutableByteVector, copy_memory};\n-use std::vec::Vec;\n use serialize::hex::ToHex;\n \n /// Write a u32 into a vector, which must be 4 bytes long. The value is written in big-endian\n@@ -529,7 +528,6 @@ mod tests {\n     use super::{Digest, Sha256, FixedBuffer};\n     use std::num::Bounded;\n     use std::slice;\n-    use std::vec::Vec;\n     use self::rand::isaac::IsaacRng;\n     use self::rand::Rng;\n     use serialize::hex::FromHex;"}, {"sha": "57b381d915af0b82ed5c05edb43987b3b00d896c", "filename": "src/librustdoc/clean.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustdoc%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustdoc%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -30,7 +30,6 @@ use core;\n use doctree;\n use visit_ast;\n use std::local_data;\n-use std::vec::Vec;\n \n pub trait Clean<T> {\n     fn clean(&self) -> T;"}, {"sha": "6bbe22402d10c6dfb38a085d0d964da0c25d7ad4", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -39,7 +39,6 @@ use std::io;\n use std::io::{fs, File, BufferedWriter, MemWriter, BufferedReader};\n use std::str;\n use std::slice;\n-use std::vec::Vec;\n use collections::{HashMap, HashSet};\n \n use sync::Arc;"}, {"sha": "f8d91fffb1fe1132e63f182db3d80d11f8a06802", "filename": "src/librustdoc/html/toc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustdoc%2Fhtml%2Ftoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustdoc%2Fhtml%2Ftoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftoc.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -11,7 +11,6 @@\n //! Table-of-contents creation.\n \n use std::fmt;\n-use std::vec::Vec;\n \n /// A (recursive) table of contents\n #[deriving(Eq)]"}, {"sha": "069ab37a2ad013e6df688f0896f0a09d4a9dbc41", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -14,7 +14,6 @@\n #[crate_type = \"dylib\"];\n #[crate_type = \"rlib\"];\n \n-#[allow(deprecated_owned_vector)];\n #[feature(globs, struct_variant, managed_boxes, macro_rules, phase)];\n \n extern crate syntax;"}, {"sha": "f8ebfae6cfb92a4da368264ac1435991b25d0c2d", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n use std::{str, io};\n-use std::vec::Vec;\n \n use collections::HashSet;\n "}, {"sha": "cd8cc8bde6a209facee42727a9fd979673a1bb1d", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -11,7 +11,6 @@\n //! Rust AST Visitor. Extracts useful information and massages it into a form\n //! usable for clean\n \n-use std::vec::Vec;\n use syntax::abi::AbiSet;\n use syntax::ast;\n use syntax::ast_util;"}, {"sha": "890f44faabc0d6e0280b7e3edca56c1651107928", "filename": "src/librustuv/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustuv%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibrustuv%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -42,7 +42,6 @@ via `close` and `delete` methods.\n #[feature(macro_rules)];\n #[deny(unused_result, unused_must_use)];\n #[allow(visible_private_types)];\n-#[allow(deprecated_owned_vector)];\n \n #[cfg(test)] extern crate green;\n "}, {"sha": "707b9c0ba74da4553f51effa14ae1686a088002d", "filename": "src/libsemver/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsemver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsemver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsemver%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -41,7 +41,6 @@ use std::cmp;\n use std::fmt;\n use std::fmt::Show;\n use std::option::{Option, Some, None};\n-use std::vec::Vec;\n \n /// An identifier in the pre-release or build metadata. If the identifier can\n /// be parsed as a decimal value, it will be represented with `Numeric`."}, {"sha": "3d4a7cd909a51140c98e67d7baa638ab3014261f", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -28,7 +28,6 @@ Core encoding and decoding interfaces.\n // NOTE remove the following two attributes after the next snapshot.\n #[allow(unrecognized_lint)];\n #[allow(default_type_param_usage)];\n-#[allow(deprecated_owned_vector)];\n \n // test harness access\n #[cfg(test)]"}, {"sha": "60de03a7b430f96810e54e32398d48b8f5cea020", "filename": "src/libserialize/serialize.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibserialize%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibserialize%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fserialize.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -17,7 +17,6 @@ Core encoding and decoding interfaces.\n use std::path;\n use std::rc::Rc;\n use std::slice;\n-use std::vec::Vec;\n \n pub trait Encoder {\n     // Primitive types:"}, {"sha": "583510a7e80779b7991d619d125e05c6837c8dee", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -65,7 +65,6 @@\n #[deny(non_camel_case_types)];\n #[deny(missing_doc)];\n #[allow(unknown_features)];\n-#[allow(deprecated_owned_vector)];\n \n // When testing libstd, bring in libuv as the I/O backend so tests can print\n // things and all of the std::io tests have an I/O interface to run on top"}, {"sha": "f8e56cf8a2f46d87d4d42c83fcda9d72de60d39f", "filename": "src/libstd/prelude.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibstd%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibstd%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -59,6 +59,7 @@ pub use slice::{ImmutableEqVector, ImmutableTotalOrdVector, ImmutableCloneableVe\n pub use slice::{OwnedVector, OwnedCloneableVector, OwnedEqVector};\n pub use slice::{MutableVector, MutableTotalOrdVector};\n pub use slice::{Vector, VectorVector, CloneableVector, ImmutableVector};\n+pub use vec::Vec;\n \n // Reexported runtime types\n pub use comm::{channel, Sender, Receiver};"}, {"sha": "70874a029ac42aa9e1d1bd306d2d421cf2c7d498", "filename": "src/libsync/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsync%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsync%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsync%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -21,8 +21,6 @@\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n #[feature(phase)];\n \n-#[allow(deprecated_owned_vector)];\n-\n #[cfg(test)] #[phase(syntax, link)] extern crate log;\n \n pub use arc::{Arc, MutexArc, RWArc, RWWriteMode, RWReadMode, ArcCondvar, CowArc};"}, {"sha": "b159920d929cf3bb3e670a34ea0d8bba55958ae3", "filename": "src/libsyntax/abi.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fabi.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n use std::fmt;\n-use std::vec::Vec;\n use std::fmt::Show;\n \n #[deriving(Eq)]"}, {"sha": "d1d9ae2322d09c9813a033d217c6977efeddc42b", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -21,7 +21,6 @@ use std::fmt;\n use std::fmt::Show;\n use std::option::Option;\n use std::rc::Rc;\n-use std::vec::Vec;\n use serialize::{Encodable, Decodable, Encoder, Decoder};\n \n /// A pointer abstraction. FIXME(eddyb) #10676 use Rc<T> in the future.\n@@ -1157,7 +1156,13 @@ mod test {\n     use codemap::*;\n     use super::*;\n \n-    use std::vec::Vec;\n+    fn is_freeze<T: Freeze>() {}\n+\n+    // Assert that the AST remains Freeze (#10693).\n+    #[test]\n+    fn ast_is_freeze() {\n+        is_freeze::<Item>();\n+    }\n \n     // are ASTs encodable?\n     #[test]"}, {"sha": "0b9bf43f0ef09f6176e7202aa5319810e24e6188", "filename": "src/libsyntax/ast_map.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fast_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fast_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_map.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -22,7 +22,6 @@ use std::cell::RefCell;\n use std::iter;\n use std::slice;\n use std::fmt;\n-use std::vec::Vec;\n \n #[deriving(Clone, Eq)]\n pub enum PathElem {"}, {"sha": "656ca1c88bae8a0ee27c4253a024a96c4e0c90b7", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -22,7 +22,6 @@ use visit;\n use std::cell::Cell;\n use std::cmp;\n use std::u32;\n-use std::vec::Vec;\n \n pub fn path_name_i(idents: &[Ident]) -> ~str {\n     // FIXME: Bad copies (#2543 -- same for everything else that says \"bad\")\n@@ -711,7 +710,6 @@ mod test {\n     use ast::*;\n     use super::*;\n     use opt_vec;\n-    use std::vec::Vec;\n \n     fn ident_to_segment(id : &Ident) -> PathSegment {\n         PathSegment {identifier:id.clone(),"}, {"sha": "ff9f9dece95d17e589dfb2beee1de413efb4fb5e", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -21,7 +21,6 @@ use parse::token;\n use crateid::CrateId;\n \n use collections::HashSet;\n-use std::vec::Vec;\n \n pub trait AttrMetaMethods {\n     // This could be changed to `fn check_name(&self, name: InternedString) ->"}, {"sha": "fca1e25648bad65446a596aabcd15feb6379e272", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -24,7 +24,6 @@ source code snippets, etc.\n use std::cell::RefCell;\n use std::cmp;\n use std::rc::Rc;\n-use std::vec::Vec;\n use serialize::{Encodable, Decodable, Encoder, Decoder};\n \n pub trait Pos {"}, {"sha": "96664fc39f6c2e8210ad1a887dbd838d9a994e35", "filename": "src/libsyntax/crateid.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fcrateid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fcrateid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcrateid.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -19,7 +19,6 @@ use std::fmt;\n /// to be `0.0`.\n \n use std::from_str::FromStr;\n-use std::vec::Vec;\n \n #[deriving(Clone, Eq)]\n pub struct CrateId {"}, {"sha": "9371f817ac8cdcbcbb19b2d160a0cf5d6c2dfc75", "filename": "src/libsyntax/ext/asm.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fasm.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -20,8 +20,6 @@ use parse;\n use parse::token::InternedString;\n use parse::token;\n \n-use std::vec::Vec;\n-\n enum State {\n     Asm,\n     Outputs,"}, {"sha": "ccf98f031a17f0a362ad9fe600b38430c84fd0a3", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -20,7 +20,6 @@ use parse::token::{InternedString, intern, str_to_ident};\n use util::small_vector::SmallVector;\n \n use collections::HashMap;\n-use std::vec::Vec;\n \n // new-style macro! tt code:\n //"}, {"sha": "e860866ebf93e5ca2746b055c6dcbcc2a75cdde1", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -21,8 +21,6 @@ use opt_vec::OptVec;\n use parse::token::special_idents;\n use parse::token;\n \n-use std::vec::Vec;\n-\n pub struct Field {\n     ident: ast::Ident,\n     ex: @ast::Expr"}, {"sha": "ba6ad4888e29b09f14ac9126b6ced283b771325e", "filename": "src/libsyntax/ext/bytes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fbytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fbytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbytes.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -17,7 +17,6 @@ use ext::base;\n use ext::build::AstBuilder;\n \n use std::char;\n-use std::vec::Vec;\n \n pub fn expand_syntax_ext(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree]) -> base::MacResult {\n     // Gather all argument expressions"}, {"sha": "d83a386554e10246dcf153e4172c68ce33bee2cd", "filename": "src/libsyntax/ext/cfg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fcfg.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -26,8 +26,6 @@ use parse::token::InternedString;\n use parse::token;\n use parse;\n \n-use std::vec::Vec;\n-\n pub fn expand_cfg(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree]) -> base::MacResult {\n     let mut p = parse::new_parser_from_tts(cx.parse_sess(),\n                                            cx.cfg(),"}, {"sha": "45a20afab7d3c6a1b3d1ef789dfa506e989ba6ff", "filename": "src/libsyntax/ext/concat_idents.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fconcat_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fconcat_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fconcat_idents.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -15,7 +15,6 @@ use ext::base;\n use opt_vec;\n use parse::token;\n use parse::token::{str_to_ident};\n-use std::vec::Vec;\n \n pub fn expand_syntax_ext(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n     -> base::MacResult {"}, {"sha": "3cbccae664bec12b34800f803b3ee5b185ece019", "filename": "src/libsyntax/ext/deriving/clone.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -14,8 +14,6 @@ use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n \n-use std::vec::Vec;\n-\n pub fn expand_deriving_clone(cx: &mut ExtCtxt,\n                              span: Span,\n                              mitem: @MetaItem,"}, {"sha": "975b8885de7348deee1541467544970ef83a3f4b", "filename": "src/libsyntax/ext/deriving/cmp/eq.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -14,8 +14,6 @@ use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n \n-use std::vec::Vec;\n-\n pub fn expand_deriving_eq(cx: &mut ExtCtxt,\n                           span: Span,\n                           mitem: @MetaItem,"}, {"sha": "5605c0b61071b78563dea401f33ab2e426cea325", "filename": "src/libsyntax/ext/deriving/cmp/ord.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -15,8 +15,6 @@ use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n \n-use std::vec::Vec;\n-\n pub fn expand_deriving_ord(cx: &mut ExtCtxt,\n                            span: Span,\n                            mitem: @MetaItem,"}, {"sha": "ffabed95db5240056618b9e47dce21e9909592b8", "filename": "src/libsyntax/ext/deriving/cmp/totaleq.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotaleq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotaleq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotaleq.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -14,8 +14,6 @@ use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n \n-use std::vec::Vec;\n-\n pub fn expand_deriving_totaleq(cx: &mut ExtCtxt,\n                                span: Span,\n                                mitem: @MetaItem,"}, {"sha": "a584f8abe05ef78b6a7df196478fc6c9b6ba90c4", "filename": "src/libsyntax/ext/deriving/cmp/totalord.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -16,7 +16,6 @@ use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n \n use std::cmp::{Ordering, Equal, Less, Greater};\n-use std::vec::Vec;\n \n pub fn expand_deriving_totalord(cx: &mut ExtCtxt,\n                                 span: Span,"}, {"sha": "4c9a58c46f733270232df7b94900672ef8617329", "filename": "src/libsyntax/ext/deriving/decodable.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fdecodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fdecodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fdecodable.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -21,8 +21,6 @@ use ext::deriving::generic::*;\n use parse::token::InternedString;\n use parse::token;\n \n-use std::vec::Vec;\n-\n pub fn expand_deriving_decodable(cx: &mut ExtCtxt,\n                                  span: Span,\n                                  mitem: @MetaItem,"}, {"sha": "46e9dfb89abac3b2e608f3b7d59de1edc2ed3baf", "filename": "src/libsyntax/ext/deriving/default.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fdefault.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -14,8 +14,6 @@ use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n \n-use std::vec::Vec;\n-\n pub fn expand_deriving_default(cx: &mut ExtCtxt,\n                             span: Span,\n                             mitem: @MetaItem,"}, {"sha": "2fa6ec6888b6b41d189f2ad145e9564f352b70b2", "filename": "src/libsyntax/ext/deriving/encodable.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -89,8 +89,6 @@ use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n use parse::token;\n \n-use std::vec::Vec;\n-\n pub fn expand_deriving_encodable(cx: &mut ExtCtxt,\n                                  span: Span,\n                                  mitem: @MetaItem,"}, {"sha": "546c3eac41cbe62178ea4afe41e60c11cf6076e6", "filename": "src/libsyntax/ext/deriving/generic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -187,7 +187,6 @@ use codemap::Span;\n use opt_vec;\n use parse::token::InternedString;\n \n-use std::vec::Vec;\n use std::vec;\n \n pub use self::ty::*;"}, {"sha": "23331dc03cb4f805cea822c3f459395416d2a57f", "filename": "src/libsyntax/ext/deriving/hash.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -14,8 +14,6 @@ use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n \n-use std::vec::Vec;\n-\n pub fn expand_deriving_hash(cx: &mut ExtCtxt,\n                             span: Span,\n                             mitem: @MetaItem,"}, {"sha": "267a12fdff90d017d588ac1928605d6bf7008545", "filename": "src/libsyntax/ext/deriving/primitive.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fprimitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fprimitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fprimitive.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -16,8 +16,6 @@ use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n use parse::token::InternedString;\n \n-use std::vec::Vec;\n-\n pub fn expand_deriving_from_primitive(cx: &mut ExtCtxt,\n                                       span: Span,\n                                       mitem: @MetaItem,"}, {"sha": "a31759065ae8d3e30f1c78d663a48ee2894b0af6", "filename": "src/libsyntax/ext/deriving/rand.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -15,8 +15,6 @@ use ext::base::ExtCtxt;\n use ext::build::{AstBuilder};\n use ext::deriving::generic::*;\n \n-use std::vec::Vec;\n-\n pub fn expand_deriving_rand(cx: &mut ExtCtxt,\n                             span: Span,\n                             mitem: @MetaItem,"}, {"sha": "1c80fb9ced2edbb2cbbb5ec17964f83b48d5eb1a", "filename": "src/libsyntax/ext/deriving/show.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fshow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fshow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fshow.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -19,7 +19,6 @@ use ext::deriving::generic::*;\n use parse::token;\n \n use collections::HashMap;\n-use std::vec::Vec;\n \n pub fn expand_deriving_show(cx: &mut ExtCtxt,\n                             span: Span,"}, {"sha": "5b29af185a489d908547f88a33859b6d1e224e33", "filename": "src/libsyntax/ext/deriving/ty.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fty.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -20,8 +20,6 @@ use ext::build::AstBuilder;\n use codemap::{Span,respan};\n use opt_vec;\n \n-use std::vec::Vec;\n-\n /// The types of pointers\n pub enum PtrTy<'a> {\n     Send, // ~"}, {"sha": "9feae18689416c6c215a4a8fe5796669a94eddae", "filename": "src/libsyntax/ext/deriving/zero.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fderiving%2Fzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fzero.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -14,8 +14,6 @@ use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n \n-use std::vec::Vec;\n-\n pub fn expand_deriving_zero(cx: &mut ExtCtxt,\n                             span: Span,\n                             mitem: @MetaItem,"}, {"sha": "ecf63c8257da1d3dc2676e31b70ccce5a8ffc3ee", "filename": "src/libsyntax/ext/env.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fenv.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -22,7 +22,6 @@ use ext::build::AstBuilder;\n use parse::token;\n \n use std::os;\n-use std::vec::Vec;\n \n pub fn expand_option_env(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n     -> base::MacResult {"}, {"sha": "395bae822a1742c8c0b5cbf2cffb38425d1172b7", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -32,7 +32,6 @@ use util::small_vector::SmallVector;\n use std::cast;\n use std::unstable::dynamic_lib::DynamicLibrary;\n use std::os;\n-use std::vec::Vec;\n \n pub fn expand_expr(e: @ast::Expr, fld: &mut MacroExpander) -> @ast::Expr {\n     match e.node {\n@@ -979,8 +978,6 @@ mod test {\n     use visit;\n     use visit::Visitor;\n \n-    use std::vec::Vec;\n-\n     // a visitor that extracts the paths\n     // from a given thingy and puts them in a mutable\n     // array (passed in to the traversal)"}, {"sha": "0f11dc51a995c0019a165b06e9e17804cfb5eda1", "filename": "src/libsyntax/ext/format.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fformat.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -21,7 +21,6 @@ use rsparse = parse;\n use std::fmt::parse;\n use collections::{HashMap, HashSet};\n use std::slice;\n-use std::vec::Vec;\n \n #[deriving(Eq)]\n enum ArgumentType {"}, {"sha": "597e35843856d7ced77654964bd9c1c62a74787f", "filename": "src/libsyntax/ext/mtwt.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fmtwt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fmtwt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fmtwt.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -20,7 +20,6 @@ use ast::{Ident, Mrk, Name, SyntaxContext};\n use std::cell::RefCell;\n use std::local_data;\n use std::rc::Rc;\n-use std::vec::Vec;\n \n use collections::HashMap;\n \n@@ -281,7 +280,6 @@ mod tests {\n     use super::{resolve, xorPush, new_mark_internal, new_sctable_internal};\n     use super::{new_rename_internal, marksof_internal, resolve_internal};\n     use super::{SCTable, EmptyCtxt, Mark, Rename, IllegalCtxt};\n-    use std::vec::Vec;\n     use collections::HashMap;\n \n     #[test] fn xorpush_test () {"}, {"sha": "14847aee8cf61dca641f4847a0bb2abe6ef06b41", "filename": "src/libsyntax/ext/quote.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fquote.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -17,8 +17,6 @@ use parse::token::*;\n use parse::token;\n use parse;\n \n-use std::vec::Vec;\n-\n /**\n *\n * Quasiquoting works via token trees.\n@@ -37,8 +35,6 @@ pub mod rt {\n     use parse;\n     use print::pprust;\n \n-    use std::vec::Vec;\n-\n     pub use ast::*;\n     pub use parse::token::*;\n     pub use parse::new_parser_from_tts;"}, {"sha": "ecd60fc9932d97ac88269b5eecd746e93f7c83cc", "filename": "src/libsyntax/ext/registrar.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fregistrar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Fregistrar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fregistrar.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -15,8 +15,6 @@ use diagnostic;\n use visit;\n use visit::Visitor;\n \n-use std::vec::Vec;\n-\n struct MacroRegistrarContext {\n     registrars: Vec<(ast::NodeId, Span)> ,\n }"}, {"sha": "aa4f192f7792c6c09d36a0db239b2816d3396bc8", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -22,7 +22,6 @@ use parse::token::{Token, EOF, Nonterminal};\n use parse::token;\n \n use collections::HashMap;\n-use std::vec::Vec;\n \n /* This is an Earley-like parser, without support for in-grammar nonterminals,\n only by calling out to the main rust parser for named nonterminals (which it"}, {"sha": "b2f4904ec8f7529cd1855778b56d29fc4ecfa77e", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -28,7 +28,6 @@ use print;\n use util::small_vector::SmallVector;\n \n use std::cell::RefCell;\n-use std::vec::Vec;\n \n struct ParserAnyMacro<'a> {\n     parser: RefCell<Parser<'a>>,"}, {"sha": "e9db0bd0bd23c142c43f38634cc43be3da8e1d8f", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -18,7 +18,6 @@ use parse::token;\n use parse::lexer::TokenAndSpan;\n \n use std::cell::{Cell, RefCell};\n-use std::vec::Vec;\n use collections::HashMap;\n \n ///an unzipping of `TokenTree`s"}, {"sha": "e1a41471de44fc22e028d9aece2c36e5831305e8", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -16,8 +16,6 @@ use parse::token;\n use opt_vec::OptVec;\n use util::small_vector::SmallVector;\n \n-use std::vec::Vec;\n-\n // We may eventually want to be able to fold over type parameters, too.\n pub trait Folder {\n     fn fold_crate(&mut self, c: Crate) -> Crate {"}, {"sha": "73ff9e147e8e6da042af570d975722bd9d7377c9", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -30,7 +30,6 @@ This API is completely unstable and subject to change.\n \n #[allow(deprecated)];\n #[deny(non_camel_case_types)];\n-#[allow(deprecated_owned_vector)];\n \n extern crate serialize;\n extern crate term;"}, {"sha": "aeb521468d2c52d8dc7de709c50dac77cc850684", "filename": "src/libsyntax/opt_vec.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fopt_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fopt_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fopt_vec.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -17,7 +17,6 @@\n \n use std::default::Default;\n use std::slice;\n-use std::vec::Vec;\n \n #[deriving(Clone, Encodable, Decodable, Hash)]\n pub enum OptVec<T> {"}, {"sha": "c30ab4bda274918f2d6ff87e95821d8851dd837a", "filename": "src/libsyntax/parse/attr.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fparse%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fparse%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fattr.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -15,8 +15,6 @@ use parse::token;\n use parse::parser::Parser;\n use parse::token::INTERPOLATED;\n \n-use std::vec::Vec;\n-\n // a parser that can parse attributes.\n pub trait ParserAttr {\n     fn parse_outer_attributes(&mut self) -> Vec<ast::Attribute> ;"}, {"sha": "8abc01b6d7545ba570ea09578f8a6d71466dddbd", "filename": "src/libsyntax/parse/comments.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fparse%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fparse%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fcomments.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -20,7 +20,6 @@ use parse::token;\n use std::io;\n use std::str;\n use std::uint;\n-use std::vec::Vec;\n \n #[deriving(Clone, Eq)]\n pub enum CommentStyle {"}, {"sha": "58ec6acc3ac017a15c6a4ff5129bc01b7a39b96d", "filename": "src/libsyntax/parse/lexer.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fparse%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fparse%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -1005,7 +1005,6 @@ mod test {\n     use parse::token;\n     use parse::token::{str_to_ident};\n     use std::io::util;\n-    use std::vec::Vec;\n \n     fn mk_sh() -> diagnostic::SpanHandler {\n         let emitter = diagnostic::EmitterWriter::new(~util::NullWriter);"}, {"sha": "286b44e5c8086175e387bbbd6a456ca5c29d0997", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -21,7 +21,6 @@ use std::cell::RefCell;\n use std::io::File;\n use std::rc::Rc;\n use std::str;\n-use std::vec::Vec;\n \n pub mod lexer;\n pub mod parser;\n@@ -279,7 +278,6 @@ mod test {\n     use std::io;\n     use std::io::MemWriter;\n     use std::str;\n-    use std::vec::Vec;\n     use codemap::{Span, BytePos, Spanned};\n     use opt_vec;\n     use ast;"}, {"sha": "5398844d52a0de8bb16049c4154d5c994ff759ce", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -82,7 +82,6 @@ use std::cell::Cell;\n use collections::HashSet;\n use std::kinds::marker;\n use std::mem::replace;\n-use std::vec::Vec;\n use std::vec;\n \n #[allow(non_camel_case_types)]"}, {"sha": "eebb98294d5e46532845cff406a6ed60cc12e9f4", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -22,7 +22,6 @@ use std::char;\n use std::fmt;\n use std::local_data;\n use std::path::BytesContainer;\n-use std::vec::Vec;\n \n #[allow(non_camel_case_types)]\n #[deriving(Clone, Encodable, Decodable, Eq, Hash, Show)]"}, {"sha": "4996c1e96a86b0d673270d0d38a15a3418a535c1", "filename": "src/libsyntax/print/pp.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fprint%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fprint%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpp.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -62,7 +62,6 @@\n  */\n \n use std::io;\n-use std::vec::Vec;\n \n #[deriving(Clone, Eq)]\n pub enum Breaks {"}, {"sha": "1b8f48861aac1ff943727f778ce4a1bb077fd15a", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -32,7 +32,6 @@ use std::char;\n use std::str;\n use std::io;\n use std::io::{IoResult, MemWriter};\n-use std::vec::Vec;\n \n // The &mut State is stored here to prevent recursive type.\n pub enum AnnNode<'a> {\n@@ -2392,8 +2391,6 @@ mod test {\n     use codemap;\n     use parse::token;\n \n-    use std::vec::Vec;\n-\n     #[test]\n     fn test_fun_to_str() {\n         let abba_ident = token::str_to_ident(\"abba\");"}, {"sha": "2dea6f79ee66d9eff75ed259a33d96a93176631c", "filename": "src/libsyntax/util/interner.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Futil%2Finterner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Futil%2Finterner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Finterner.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -21,7 +21,6 @@ use std::cmp::Equiv;\n use std::fmt;\n use std::hash::Hash;\n use std::rc::Rc;\n-use std::vec::Vec;\n \n pub struct Interner<T> {\n     priv map: RefCell<HashMap<T, Name>>,"}, {"sha": "b62990036e5e3267387db445bc54523dbac99d9c", "filename": "src/libsyntax/util/parser_testing.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Futil%2Fparser_testing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Futil%2Fparser_testing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fparser_testing.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -15,8 +15,6 @@ use parse::{new_parser_from_source_str};\n use parse::parser::Parser;\n use parse::token;\n \n-use std::vec::Vec;\n-\n // map a string to tts, using a made-up filename:\n pub fn string_to_tts(source_str: ~str) -> Vec<ast::TokenTree> {\n     let ps = new_parse_sess();"}, {"sha": "ac2b00bed7656ea0579e92400e89414aa235026a", "filename": "src/libsyntax/util/small_vector.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Futil%2Fsmall_vector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Futil%2Fsmall_vector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fsmall_vector.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n use std::mem;\n-use std::vec::Vec;\n use std::vec;\n \n /// A vector type optimized for cases where the size is almost always 0 or 1\n@@ -146,8 +145,6 @@ impl<T> Iterator<T> for MoveItems<T> {\n mod test {\n     use super::*;\n \n-    use std::vec::Vec;\n-\n     #[test]\n     fn test_len() {\n         let v: SmallVector<int> = SmallVector::zero();"}, {"sha": "482bac7777758ef9b913534369bffd587acb4acf", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -15,7 +15,6 @@ use codemap::Span;\n use parse;\n use opt_vec;\n use opt_vec::OptVec;\n-use std::vec::Vec;\n \n // Context-passing AST walker. Each overridden visit method has full control\n // over what happens with its node, it can do its own traversal of the node's"}, {"sha": "411b0558573144b2c5b752d90e596a8742aedf08", "filename": "src/libterm/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibterm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibterm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -22,7 +22,6 @@\n #[feature(macro_rules)];\n #[deny(non_camel_case_types)];\n #[allow(missing_doc)];\n-#[allow(deprecated_owned_vector)];\n \n extern crate collections;\n "}, {"sha": "3ec80d97d06133fde3d68266a0b278549f24de5a", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -33,7 +33,6 @@\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n \n #[feature(asm, macro_rules)];\n-#[allow(deprecated_owned_vector)];\n \n extern crate collections;\n extern crate getopts;"}, {"sha": "183d86059acbdc6ee28d31c41028b0034ef1e762", "filename": "src/libtime/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibtime%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibtime%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtime%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -17,7 +17,6 @@\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n \n #[feature(phase)];\n-#[allow(deprecated_owned_vector)];\n \n #[cfg(test)] #[phase(syntax, link)] extern crate log;\n extern crate serialize;"}, {"sha": "55d8700013018e22ca5efa9f8ca9df36f2d7b134", "filename": "src/liburl/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Fliburl%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Fliburl%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliburl%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -18,7 +18,6 @@\n       html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n #[feature(default_type_params)];\n-#[allow(deprecated_owned_vector)];\n \n extern crate collections;\n \n@@ -28,7 +27,6 @@ use std::hash::Hash;\n use std::io::BufReader;\n use std::from_str::FromStr;\n use std::uint;\n-use std::vec::Vec;\n \n use collections::HashMap;\n "}, {"sha": "d4a33d6782dd5531c60edd2fedafe22d59244674", "filename": "src/libuuid/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibuuid%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibuuid%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibuuid%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -62,8 +62,6 @@ Examples of string representations:\n       html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n \n-#[allow(deprecated_owned_vector)];\n-\n #[feature(default_type_params)];\n \n // NOTE remove the following two attributes after the next snapshot."}, {"sha": "79ed15655ccc1cde317f45008cbcd1fdd9b90466", "filename": "src/libworkcache/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibworkcache%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Flibworkcache%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibworkcache%2Flib.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -16,7 +16,7 @@\n       html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n #[feature(phase)];\n-#[allow(deprecated_owned_vector, visible_private_types)];\n+#[allow(visible_private_types)];\n \n #[phase(syntax, link)] extern crate log;\n extern crate serialize;"}, {"sha": "0ca326c1e0d9fd101a1675e3ece815d146882938", "filename": "src/test/compile-fail/issue-11873.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Ftest%2Fcompile-fail%2Fissue-11873.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Ftest%2Fcompile-fail%2Fissue-11873.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-11873.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::vec::Vec;\n-\n fn main() {\n     let mut v = vec!(1);\n     let f = || v.push(2);"}, {"sha": "00877e7c2c90b8323eec84451c04ba6a151d8f9c", "filename": "src/test/run-pass/overloaded-autoderef-count.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Ftest%2Frun-pass%2Foverloaded-autoderef-count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Ftest%2Frun-pass%2Foverloaded-autoderef-count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foverloaded-autoderef-count.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -10,7 +10,6 @@\n \n use std::cell::Cell;\n use std::ops::{Deref, DerefMut};\n-use std::vec::Vec;\n \n #[deriving(Eq)]\n struct DerefCounter<T> {"}, {"sha": "0316311993ab7779de859987cc905456ba397e5e", "filename": "src/test/run-pass/typeck_type_placeholder_1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Ftest%2Frun-pass%2Ftypeck_type_placeholder_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b568efc0cf173ac7b2d37284beda5fdf8a7686ab/src%2Ftest%2Frun-pass%2Ftypeck_type_placeholder_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypeck_type_placeholder_1.rs?ref=b568efc0cf173ac7b2d37284beda5fdf8a7686ab", "patch": "@@ -14,8 +14,6 @@\n static CONSTEXPR: *int = &'static 413 as *_;\n \n pub fn main() {\n-    use std::vec::Vec;\n-\n     let x: Vec<_> = range(0u, 5).collect();\n     assert_eq!(x.as_slice(), &[0u,1,2,3,4]);\n "}]}