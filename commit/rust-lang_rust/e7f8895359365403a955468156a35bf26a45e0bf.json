{"sha": "e7f8895359365403a955468156a35bf26a45e0bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3Zjg4OTUzNTkzNjU0MDNhOTU1NDY4MTU2YTM1YmYyNmE0NWUwYmY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2020-03-24T19:20:19Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2020-03-24T19:25:43Z"}, "message": "save/restore `pessimistic_yield` when entering bodies\n\nThis flag is used to make the execution order around `+=` operators\npessimistic. Failure to save/restore the flag was causing independent\nasync blocks to effect one another, leading to strange ICEs and failed\nassumptions.", "tree": {"sha": "d2c2de7cb44e5e9037a2f742329b45d268b163f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2c2de7cb44e5e9037a2f742329b45d268b163f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7f8895359365403a955468156a35bf26a45e0bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7f8895359365403a955468156a35bf26a45e0bf", "html_url": "https://github.com/rust-lang/rust/commit/e7f8895359365403a955468156a35bf26a45e0bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7f8895359365403a955468156a35bf26a45e0bf/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dcf54f564c6d8bbf48960fb9aaec88a0e2e062a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2dcf54f564c6d8bbf48960fb9aaec88a0e2e062a", "html_url": "https://github.com/rust-lang/rust/commit/2dcf54f564c6d8bbf48960fb9aaec88a0e2e062a"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "1807756fe524b75ae59470518ea744aaa93629ee", "filename": "src/librustc_passes/region.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7f8895359365403a955468156a35bf26a45e0bf/src%2Flibrustc_passes%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7f8895359365403a955468156a35bf26a45e0bf/src%2Flibrustc_passes%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fregion.rs?ref=e7f8895359365403a955468156a35bf26a45e0bf", "patch": "@@ -720,6 +720,7 @@ impl<'tcx> Visitor<'tcx> for RegionResolutionVisitor<'tcx> {\n         let outer_ec = mem::replace(&mut self.expr_and_pat_count, 0);\n         let outer_cx = self.cx;\n         let outer_ts = mem::take(&mut self.terminating_scopes);\n+        let outer_pessimistic_yield = mem::replace(&mut self.pessimistic_yield, false);\n         self.terminating_scopes.insert(body.value.hir_id.local_id);\n \n         if let Some(root_id) = self.cx.root_id {\n@@ -771,6 +772,7 @@ impl<'tcx> Visitor<'tcx> for RegionResolutionVisitor<'tcx> {\n         self.expr_and_pat_count = outer_ec;\n         self.cx = outer_cx;\n         self.terminating_scopes = outer_ts;\n+        self.pessimistic_yield = outer_pessimistic_yield;\n     }\n \n     fn visit_arm(&mut self, a: &'tcx Arm<'tcx>) {"}, {"sha": "4dae96ec8a6a7bbbaab976f33bcdefac215ad067", "filename": "src/test/ui/async-await/issues/issue-69307.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e7f8895359365403a955468156a35bf26a45e0bf/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-69307.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7f8895359365403a955468156a35bf26a45e0bf/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-69307.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-69307.rs?ref=e7f8895359365403a955468156a35bf26a45e0bf", "patch": "@@ -0,0 +1,23 @@\n+// Regression test for #69307\n+//\n+// Having a `async { .. foo.await .. }` block appear inside of a `+=`\n+// expression was causing an ICE due to a failure to save/restore\n+// state in the AST numbering pass when entering a nested body.\n+//\n+// check-pass\n+// edition:2018\n+\n+fn block_on<F>(_: F) -> usize {\n+    0\n+}\n+\n+fn main() {}\n+\n+async fn bar() {\n+    let mut sum = 0;\n+    sum += block_on(async {\n+        baz().await;\n+    });\n+}\n+\n+async fn baz() {}"}]}