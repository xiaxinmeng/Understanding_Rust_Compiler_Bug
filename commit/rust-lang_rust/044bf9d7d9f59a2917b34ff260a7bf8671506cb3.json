{"sha": "044bf9d7d9f59a2917b34ff260a7bf8671506cb3", "node_id": "C_kwDOAAsO6NoAKDA0NGJmOWQ3ZDlmNTlhMjkxN2IzNGZmMjYwYTdiZjg2NzE1MDZjYjM", "commit": {"author": {"name": "LucasFA", "email": "23667494+LucasFA@users.noreply.github.com", "date": "2023-05-14T20:00:23Z"}, "committer": {"name": "LucasFA", "email": "23667494+LucasFA@users.noreply.github.com", "date": "2023-05-14T20:00:23Z"}, "message": "Appease lints\n\nA warning about an unnecessary drop used to appear when running the\nlinkchecker. Also some clippy warnings", "tree": {"sha": "aa64cb9f8e1e18ac2ac714e0713050c257912a3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa64cb9f8e1e18ac2ac714e0713050c257912a3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/044bf9d7d9f59a2917b34ff260a7bf8671506cb3", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEKfWb4ZCjaDDYuTdq3a3BrU/oUOMFAmRhPdcACgkQ3a3BrU/o\nUOOLiQ/+OPh/kCSvkjuno9dDsaaebcu0WgXXsaYo69QipFFRjzgub6TZJsozGENO\nFj5Ot0zsXmmrmZw/GwmPC4U/LGMgBUBDCZjxDlduuwg4gkBajjMv/9ydH487TU8+\n9L+lU1Ba5/iFXgTsZ7q0t3sJMkzyNREaeTd7nqHkYE39JkCK62oKuBOcw/qQ5Fj9\njgrdWyG50V9kDl8JfLATsntXH+aK7ZUVF5iKszjDD/VIItHJtB9rkPI9/jSs2CkD\nhRBl2MNa51FN9xIP0+tUiBELW46tHoR74ETnc1upmv4CzWLZRng71kIh2bIcP2T0\nlRQoCyCFNu06Aw7dkO17Dgi9zSDReTjiNpZrNyz+ezK1rVjgStn1hQXvUFQzI92L\nN+liJ7Fbs90rAchIINRrY9Dxb06ltIWVOoE5FfZgOKFcDwNamlAav3V/6MUrkZkV\nsP0hml9vy3PoRcJjXDbij1LDpqEvtIve0isgNfdsE/SBrLuTojbPomP3ybZBUBNB\nEpS/SDF3Av9wkDYzbCv4cS3Ze+4pAGn1pywqAvXugF/5nS4pCfoKimB1LEUNMD86\npFGA2Mh2IfupYS4PqPu1bnENpOn+3BSJM+KVZCjtF6AxM5krJsLIqQK0zL1mKGc+\nqCTe/zsq4OAsW3P+ORSLfv3EOly7+yick+bruTQDE9NaX6G90hY=\n=rMv0\n-----END PGP SIGNATURE-----", "payload": "tree aa64cb9f8e1e18ac2ac714e0713050c257912a3a\nparent eda41addfcf8112e69531f56ca8c478509be0135\nauthor LucasFA <23667494+LucasFA@users.noreply.github.com> 1684094423 +0200\ncommitter LucasFA <23667494+LucasFA@users.noreply.github.com> 1684094423 +0200\n\nAppease lints\n\nA warning about an unnecessary drop used to appear when running the\nlinkchecker. Also some clippy warnings\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/044bf9d7d9f59a2917b34ff260a7bf8671506cb3", "html_url": "https://github.com/rust-lang/rust/commit/044bf9d7d9f59a2917b34ff260a7bf8671506cb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/044bf9d7d9f59a2917b34ff260a7bf8671506cb3/comments", "author": {"login": "LucasFA", "id": 23667494, "node_id": "MDQ6VXNlcjIzNjY3NDk0", "avatar_url": "https://avatars.githubusercontent.com/u/23667494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LucasFA", "html_url": "https://github.com/LucasFA", "followers_url": "https://api.github.com/users/LucasFA/followers", "following_url": "https://api.github.com/users/LucasFA/following{/other_user}", "gists_url": "https://api.github.com/users/LucasFA/gists{/gist_id}", "starred_url": "https://api.github.com/users/LucasFA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LucasFA/subscriptions", "organizations_url": "https://api.github.com/users/LucasFA/orgs", "repos_url": "https://api.github.com/users/LucasFA/repos", "events_url": "https://api.github.com/users/LucasFA/events{/privacy}", "received_events_url": "https://api.github.com/users/LucasFA/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LucasFA", "id": 23667494, "node_id": "MDQ6VXNlcjIzNjY3NDk0", "avatar_url": "https://avatars.githubusercontent.com/u/23667494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LucasFA", "html_url": "https://github.com/LucasFA", "followers_url": "https://api.github.com/users/LucasFA/followers", "following_url": "https://api.github.com/users/LucasFA/following{/other_user}", "gists_url": "https://api.github.com/users/LucasFA/gists{/gist_id}", "starred_url": "https://api.github.com/users/LucasFA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LucasFA/subscriptions", "organizations_url": "https://api.github.com/users/LucasFA/orgs", "repos_url": "https://api.github.com/users/LucasFA/repos", "events_url": "https://api.github.com/users/LucasFA/events{/privacy}", "received_events_url": "https://api.github.com/users/LucasFA/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eda41addfcf8112e69531f56ca8c478509be0135", "url": "https://api.github.com/repos/rust-lang/rust/commits/eda41addfcf8112e69531f56ca8c478509be0135", "html_url": "https://github.com/rust-lang/rust/commit/eda41addfcf8112e69531f56ca8c478509be0135"}], "stats": {"total": 35, "additions": 16, "deletions": 19}, "files": [{"sha": "c8a370085a045390869c6ded5c4a9f5bb44f1411", "filename": "src/tools/linkchecker/main.rs", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/044bf9d7d9f59a2917b34ff260a7bf8671506cb3/src%2Ftools%2Flinkchecker%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/044bf9d7d9f59a2917b34ff260a7bf8671506cb3/src%2Ftools%2Flinkchecker%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flinkchecker%2Fmain.rs?ref=044bf9d7d9f59a2917b34ff260a7bf8671506cb3", "patch": "@@ -139,18 +139,18 @@ enum FileEntry {\n type Cache = HashMap<String, FileEntry>;\n \n fn small_url_encode(s: &str) -> String {\n-    s.replace(\"<\", \"%3C\")\n-        .replace(\">\", \"%3E\")\n-        .replace(\" \", \"%20\")\n-        .replace(\"?\", \"%3F\")\n-        .replace(\"'\", \"%27\")\n-        .replace(\"&\", \"%26\")\n-        .replace(\",\", \"%2C\")\n-        .replace(\":\", \"%3A\")\n-        .replace(\";\", \"%3B\")\n-        .replace(\"[\", \"%5B\")\n-        .replace(\"]\", \"%5D\")\n-        .replace(\"\\\"\", \"%22\")\n+    s.replace('<', \"%3C\")\n+        .replace('>', \"%3E\")\n+        .replace(' ', \"%20\")\n+        .replace('?', \"%3F\")\n+        .replace('\\'', \"%27\")\n+        .replace('&', \"%26\")\n+        .replace(',', \"%2C\")\n+        .replace(':', \"%3A\")\n+        .replace(';', \"%3B\")\n+        .replace('[', \"%5B\")\n+        .replace(']', \"%5D\")\n+        .replace('\\\"', \"%22\")\n }\n \n impl Checker {\n@@ -267,7 +267,6 @@ impl Checker {\n                 FileEntry::OtherFile => return,\n                 FileEntry::Redirect { target } => {\n                     let t = target.clone();\n-                    drop(target);\n                     let (target, redir_entry) = self.load_file(&t, report);\n                     match redir_entry {\n                         FileEntry::Missing => {\n@@ -391,7 +390,7 @@ impl Checker {\n         const ERROR_INVALID_NAME: i32 = 123;\n \n         let pretty_path =\n-            file.strip_prefix(&self.root).unwrap_or(&file).to_str().unwrap().to_string();\n+            file.strip_prefix(&self.root).unwrap_or(file).to_str().unwrap().to_string();\n \n         let entry =\n             self.cache.entry(pretty_path.clone()).or_insert_with(|| match fs::metadata(file) {\n@@ -470,10 +469,8 @@ fn is_exception(file: &Path, link: &str) -> bool {\n         // NOTE: This cannot be added to `LINKCHECK_EXCEPTIONS` because the resolved path\n         // calculated in `check` function is outside `build/<triple>/doc` dir.\n         // So the `strip_prefix` method just returns the old absolute broken path.\n-        if file.ends_with(\"std/primitive.slice.html\") {\n-            if link.ends_with(\"primitive.slice.html\") {\n-                return true;\n-            }\n+        if file.ends_with(\"std/primitive.slice.html\") && link.ends_with(\"primitive.slice.html\") {\n+            return true;\n         }\n         false\n     }\n@@ -545,7 +542,7 @@ fn with_attrs_in_source<F: FnMut(&str, usize, &str)>(source: &str, attr: &str, m\n fn parse_ids(ids: &mut HashSet<String>, file: &str, source: &str, report: &mut Report) {\n     if ids.is_empty() {\n         with_attrs_in_source(source, \" id\", |fragment, i, _| {\n-            let frag = fragment.trim_start_matches(\"#\").to_owned();\n+            let frag = fragment.trim_start_matches('#').to_owned();\n             let encoded = small_url_encode(&frag);\n             if !ids.insert(frag) {\n                 report.errors += 1;"}]}