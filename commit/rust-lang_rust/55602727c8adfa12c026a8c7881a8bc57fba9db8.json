{"sha": "55602727c8adfa12c026a8c7881a8bc57fba9db8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NjAyNzI3YzhhZGZhMTJjMDI2YThjNzg4MWE4YmM1N2ZiYTlkYjg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-01T20:22:01Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-01T20:22:01Z"}, "message": "Parser: first struct :-)", "tree": {"sha": "afebee4b834ba25b870b194e09a9d069cb922a38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afebee4b834ba25b870b194e09a9d069cb922a38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55602727c8adfa12c026a8c7881a8bc57fba9db8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55602727c8adfa12c026a8c7881a8bc57fba9db8", "html_url": "https://github.com/rust-lang/rust/commit/55602727c8adfa12c026a8c7881a8bc57fba9db8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55602727c8adfa12c026a8c7881a8bc57fba9db8/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46422f722bdcadbf4462dd5a9c65756434b2d97a", "url": "https://api.github.com/repos/rust-lang/rust/commits/46422f722bdcadbf4462dd5a9c65756434b2d97a", "html_url": "https://github.com/rust-lang/rust/commit/46422f722bdcadbf4462dd5a9c65756434b2d97a"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "be61483ecdc55a981b3e74c915259262cb0b5fe9", "filename": "src/parser/event_parser/grammar.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/55602727c8adfa12c026a8c7881a8bc57fba9db8/src%2Fparser%2Fevent_parser%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55602727c8adfa12c026a8c7881a8bc57fba9db8/src%2Fparser%2Fevent_parser%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar.rs?ref=55602727c8adfa12c026a8c7881a8bc57fba9db8", "patch": "@@ -43,13 +43,18 @@ fn item(p: &mut Parser) -> Result {\n     if p.current_is(STRUCT_KW) {\n         p.start(STRUCT_ITEM);\n         p.bump();\n+        let _ = struct_item(p);\n         p.finish();\n         return OK;\n     }\n     ERR\n }\n \n-\n+fn struct_item(p: &mut Parser) -> Result{\n+    p.expect(IDENT)?;\n+    p.expect(L_CURLY)?;\n+    p.expect(R_CURLY)\n+}\n \n // Paths, types, attributes, and stuff //\n "}, {"sha": "36452ef671a8e8bffa30e5db8f8216c93fc38335", "filename": "src/parser/event_parser/parser.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/55602727c8adfa12c026a8c7881a8bc57fba9db8/src%2Fparser%2Fevent_parser%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55602727c8adfa12c026a8c7881a8bc57fba9db8/src%2Fparser%2Fevent_parser%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fparser.rs?ref=55602727c8adfa12c026a8c7881a8bc57fba9db8", "patch": "@@ -69,6 +69,15 @@ impl<'t> Parser<'t> {\n         Some(kind)\n     }\n \n+    pub(crate) fn expect(&mut self, kind: SyntaxKind) -> Result<(), ()> {\n+        if kind == self.current().ok_or(())? {\n+            self.bump();\n+            Ok(())\n+        } else {\n+            Err(())\n+        }\n+    }\n+\n     fn event(&mut self, event: Event) {\n         self.events.push(event)\n     }"}, {"sha": "f599e9d2c5d877a0a27167058f74f1dc18964dd8", "filename": "tests/data/parser/0001_struct_item.txt", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/55602727c8adfa12c026a8c7881a8bc57fba9db8/tests%2Fdata%2Fparser%2F0001_struct_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/55602727c8adfa12c026a8c7881a8bc57fba9db8/tests%2Fdata%2Fparser%2F0001_struct_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2F0001_struct_item.txt?ref=55602727c8adfa12c026a8c7881a8bc57fba9db8", "patch": "@@ -1,12 +1,9 @@\n FILE@[0; 13)\n-  STRUCT_ITEM@[0; 7)\n+  STRUCT_ITEM@[0; 13)\n     STRUCT_KW@[0; 6)\n     WHITESPACE@[6; 7)\n-  ERROR@[7; 9)\n     IDENT@[7; 8)\n     WHITESPACE@[8; 9)\n-  ERROR@[9; 12)\n     L_CURLY@[9; 10)\n     WHITESPACE@[10; 12)\n-  ERROR@[12; 13)\n     R_CURLY@[12; 13)"}]}