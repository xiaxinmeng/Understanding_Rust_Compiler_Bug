{"sha": "d23800f3f23eae91fec31172e03fdfc9614c3d1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMzgwMGYzZjIzZWFlOTFmZWMzMTE3MmUwM2ZkZmM5NjE0YzNkMWM=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2015-12-01T16:37:01Z"}, "committer": {"name": "Oliver 'ker' Schneider", "email": "rust19446194516@oli-obk.de", "date": "2015-12-06T11:59:53Z"}, "message": "allow const function calls in consts that are used in patterns\n\ncloses #30117", "tree": {"sha": "f3d6326c7d48319ece58bb7567634650abbf73db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3d6326c7d48319ece58bb7567634650abbf73db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d23800f3f23eae91fec31172e03fdfc9614c3d1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d23800f3f23eae91fec31172e03fdfc9614c3d1c", "html_url": "https://github.com/rust-lang/rust/commit/d23800f3f23eae91fec31172e03fdfc9614c3d1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d23800f3f23eae91fec31172e03fdfc9614c3d1c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d75f861518cb3b43acd1ae774fd13605a5dfd2d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d75f861518cb3b43acd1ae774fd13605a5dfd2d9", "html_url": "https://github.com/rust-lang/rust/commit/d75f861518cb3b43acd1ae774fd13605a5dfd2d9"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "a8afefe939b394c03346600a9574a58711d86b5c", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d23800f3f23eae91fec31172e03fdfc9614c3d1c/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d23800f3f23eae91fec31172e03fdfc9614c3d1c/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=d23800f3f23eae91fec31172e03fdfc9614c3d1c", "patch": "@@ -332,6 +332,11 @@ pub fn const_expr_to_pat(tcx: &ty::ctxt, expr: &Expr, span: Span) -> P<hir::Pat>\n             let path = match def.full_def() {\n                 def::DefStruct(def_id) => def_to_path(tcx, def_id),\n                 def::DefVariant(_, variant_did, _) => def_to_path(tcx, variant_did),\n+                def::DefFn(..) => return P(hir::Pat {\n+                    id: expr.id,\n+                    node: hir::PatLit(P(expr.clone())),\n+                    span: span,\n+                }),\n                 _ => unreachable!()\n             };\n             let pats = args.iter().map(|expr| const_expr_to_pat(tcx, &**expr, span)).collect();\n@@ -1462,6 +1467,6 @@ fn get_fn_def<'a>(tcx: &'a ty::ctxt,\n             _ => signal!(e, NonConstPath),\n         },\n         Some(ast_map::NodeTraitItem(..)) => signal!(e, NonConstPath),\n-        Some(_) => unimplemented!(),\n+        Some(_) => signal!(e, UnimplementedConstVal(\"calling struct, tuple or variant\")),\n     }\n }"}, {"sha": "eec4c940585c0f75a0e4d2e7c33bd4efb5f05440", "filename": "src/test/run-pass/consts-in-patterns.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d23800f3f23eae91fec31172e03fdfc9614c3d1c/src%2Ftest%2Frun-pass%2Fconsts-in-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d23800f3f23eae91fec31172e03fdfc9614c3d1c/src%2Ftest%2Frun-pass%2Fconsts-in-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconsts-in-patterns.rs?ref=d23800f3f23eae91fec31172e03fdfc9614c3d1c", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,15 +8,20 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(const_fn)]\n \n const FOO: isize = 10;\n const BAR: isize = 3;\n \n+const fn foo() -> isize { 4 }\n+const BOO: isize = foo();\n+\n pub fn main() {\n     let x: isize = 3;\n     let y = match x {\n         FOO => 1,\n         BAR => 2,\n+        BOO => 4,\n         _ => 3\n     };\n     assert_eq!(y, 2);"}]}