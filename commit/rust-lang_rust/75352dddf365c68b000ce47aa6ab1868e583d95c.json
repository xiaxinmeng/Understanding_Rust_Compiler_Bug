{"sha": "75352dddf365c68b000ce47aa6ab1868e583d95c", "node_id": "C_kwDOAAsO6NoAKDc1MzUyZGRkZjM2NWM2OGIwMDBjZTQ3YWE2YWIxODY4ZTU4M2Q5NWM", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-11-26T16:47:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-26T16:47:24Z"}, "message": "Rollup merge of #104909 - compiler-errors:normalize_opaque_types-is-misleading, r=fee1-dead\n\nRename `normalize_opaque_types` to `reveal_opaque_types_in_bounds`\n\n1. The query name is a bit misleading, since it doesn't do any associated type normalization, and\n2. since it only takes a predicate list, it sounds a bit more powerful than it actually is.", "tree": {"sha": "e5ad349db6d0266a95530a8f3e080102648b44cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5ad349db6d0266a95530a8f3e080102648b44cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75352dddf365c68b000ce47aa6ab1868e583d95c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjgkMcCRBK7hj4Ov3rIwAADioIACt4kXBAedeC7irkZucwp1a6\nUv99wAJ8a9+vVfS5EXi4Jf3rfGx1rMVp33qF1ngVnoxwTfglbQwXIAM1GL6JkLtc\nfA3IwtgXZFwdVwjbpk3ulYbTA+nxwRisnd38ZB/XG6QYiLuAVLpm8CmyHzf6jcmG\n/BHdiHz3vL88dWo0mgwyzw+JVZQHNlpWhRB0By332Dv4Dd6TJzqNjk/uMH/rhbaw\nwHoh/HPA1YFPmBx1NSoiKpEkAUWK/z6EB3i13nlmB8rG5ygFovWR1Y8mp336hSox\nIK0auesoNSqU1b7MeOOyUl2fMwlPKZXLRTiVVdHrY0GnyTkmcDRVqFAeeHcddmA=\n=0ROD\n-----END PGP SIGNATURE-----\n", "payload": "tree e5ad349db6d0266a95530a8f3e080102648b44cc\nparent e6c83d9e429c0f93a9b26adea339ed77985d14bf\nparent 6b63d6c9189b4219c382938115fd9dfe807b57fd\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1669481244 +0100\ncommitter GitHub <noreply@github.com> 1669481244 +0100\n\nRollup merge of #104909 - compiler-errors:normalize_opaque_types-is-misleading, r=fee1-dead\n\nRename `normalize_opaque_types` to `reveal_opaque_types_in_bounds`\n\n1. The query name is a bit misleading, since it doesn't do any associated type normalization, and\n2. since it only takes a predicate list, it sounds a bit more powerful than it actually is.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75352dddf365c68b000ce47aa6ab1868e583d95c", "html_url": "https://github.com/rust-lang/rust/commit/75352dddf365c68b000ce47aa6ab1868e583d95c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75352dddf365c68b000ce47aa6ab1868e583d95c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6c83d9e429c0f93a9b26adea339ed77985d14bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6c83d9e429c0f93a9b26adea339ed77985d14bf", "html_url": "https://github.com/rust-lang/rust/commit/e6c83d9e429c0f93a9b26adea339ed77985d14bf"}, {"sha": "6b63d6c9189b4219c382938115fd9dfe807b57fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b63d6c9189b4219c382938115fd9dfe807b57fd", "html_url": "https://github.com/rust-lang/rust/commit/6b63d6c9189b4219c382938115fd9dfe807b57fd"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "38b72ec923193a4e0420d9e49df39bae51a2a29b", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/75352dddf365c68b000ce47aa6ab1868e583d95c/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75352dddf365c68b000ce47aa6ab1868e583d95c/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=75352dddf365c68b000ce47aa6ab1868e583d95c", "patch": "@@ -2068,8 +2068,8 @@ rustc_queries! {\n         remap_env_constness\n     }\n \n-    query normalize_opaque_types(key: &'tcx ty::List<ty::Predicate<'tcx>>) -> &'tcx ty::List<ty::Predicate<'tcx>> {\n-        desc { \"normalizing opaque types in `{:?}`\", key }\n+    query reveal_opaque_types_in_bounds(key: &'tcx ty::List<ty::Predicate<'tcx>>) -> &'tcx ty::List<ty::Predicate<'tcx>> {\n+        desc { \"revealing opaque types in `{:?}`\", key }\n     }\n \n     query limits(key: ()) -> Limits {"}, {"sha": "7ad2a9edd4eff5f12ef2aa3f45a7d1f428c582a9", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75352dddf365c68b000ce47aa6ab1868e583d95c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75352dddf365c68b000ce47aa6ab1868e583d95c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=75352dddf365c68b000ce47aa6ab1868e583d95c", "patch": "@@ -1747,7 +1747,7 @@ impl<'tcx> ParamEnv<'tcx> {\n         }\n \n         ParamEnv::new(\n-            tcx.normalize_opaque_types(self.caller_bounds()),\n+            tcx.reveal_opaque_types_in_bounds(self.caller_bounds()),\n             Reveal::All,\n             self.constness(),\n         )"}, {"sha": "717e5136e96d95625eb50aead137d3f2559d0f1f", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/75352dddf365c68b000ce47aa6ab1868e583d95c/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75352dddf365c68b000ce47aa6ab1868e583d95c/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=75352dddf365c68b000ce47aa6ab1868e583d95c", "patch": "@@ -1248,9 +1248,9 @@ where\n #[derive(Copy, Clone, Debug, HashStable, TyEncodable, TyDecodable)]\n pub struct AlwaysRequiresDrop;\n \n-/// Normalizes all opaque types in the given value, replacing them\n+/// Reveals all opaque types in the given value, replacing them\n /// with their underlying types.\n-pub fn normalize_opaque_types<'tcx>(\n+pub fn reveal_opaque_types_in_bounds<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     val: &'tcx ty::List<ty::Predicate<'tcx>>,\n ) -> &'tcx ty::List<ty::Predicate<'tcx>> {\n@@ -1287,7 +1287,7 @@ pub fn is_intrinsic(tcx: TyCtxt<'_>, def_id: DefId) -> bool {\n \n pub fn provide(providers: &mut ty::query::Providers) {\n     *providers = ty::query::Providers {\n-        normalize_opaque_types,\n+        reveal_opaque_types_in_bounds,\n         is_doc_hidden,\n         is_doc_notable_trait,\n         is_intrinsic,"}]}