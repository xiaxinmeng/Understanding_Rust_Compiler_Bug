{"sha": "0a5e54127243f4ff9f847e91356c3a73f18126f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNWU1NDEyNzI0M2Y0ZmY5Zjg0N2U5MTM1NmMzYTczZjE4MTI2ZjI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-19T06:36:05Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-19T06:36:05Z"}, "message": "two-phase-borrow comment", "tree": {"sha": "afa67a7c52abc24a017effd116b96a39461c12fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afa67a7c52abc24a017effd116b96a39461c12fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a5e54127243f4ff9f847e91356c3a73f18126f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a5e54127243f4ff9f847e91356c3a73f18126f2", "html_url": "https://github.com/rust-lang/rust/commit/0a5e54127243f4ff9f847e91356c3a73f18126f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a5e54127243f4ff9f847e91356c3a73f18126f2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5adfa1d56a9a458b98f81838a052872f5ca50a08", "url": "https://api.github.com/repos/rust-lang/rust/commits/5adfa1d56a9a458b98f81838a052872f5ca50a08", "html_url": "https://github.com/rust-lang/rust/commit/5adfa1d56a9a458b98f81838a052872f5ca50a08"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "bac35796ed135bb9098b62f70e00a6719545972b", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0a5e54127243f4ff9f847e91356c3a73f18126f2/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a5e54127243f4ff9f847e91356c3a73f18126f2/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=0a5e54127243f4ff9f847e91356c3a73f18126f2", "patch": "@@ -625,6 +625,11 @@ trait EvalContextPrivExt<'a, 'mir, 'tcx: 'a+'mir>: crate::MiriEvalContextExt<'a,\n         };\n \n         // Reborrow.\n+        // TODO: With `two_phase == true`, this performs a weak reborrow for a `Unique`. That\n+        // can lead to some possibly surprising effects, if the parent permission is\n+        // `SharedReadWrite` then we now have a `Unique` in the middle of them, which \"splits\"\n+        // them in terms of what remains valid when the `Unique` gets used.  Is that really\n+        // what we want?\n         this.reborrow(place, size, kind, new_tag, /*force_weak:*/ two_phase, protect)?;\n         let new_place = place.replace_tag(new_tag);\n         // Handle two-phase borrows."}]}