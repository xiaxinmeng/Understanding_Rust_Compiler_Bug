{"sha": "928d4c6744d4b06bb1d67ea9b967c27342eea38c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyOGQ0YzY3NDRkNGIwNmJiMWQ2N2VhOWI5NjdjMjczNDJlZWEzOGM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-09T17:08:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-09T17:08:23Z"}, "message": "Merge #6786\n\n6786: Implement HirDisplay for FnSig r=jonas-schievink a=jonas-schievink\n\nThis could be useful for diagnostics, but isn't used right now\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "aef234a140c8cf799e6b735825b806428373ad17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aef234a140c8cf799e6b735825b806428373ad17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/928d4c6744d4b06bb1d67ea9b967c27342eea38c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf0QSHCRBK7hj4Ov3rIwAAdHIIAI8hJFSOJsqRqf4FBP5zFYBl\nqPH1i+51qWe34HHk33zTpR7GPLpz/LLMixwqEVK1v1tz0T3Sq8M/zAs4J5nTD2Q3\n1ejjWvyINRL1kXFaK9ffSMnpHwWprQR1zhscA7OYIsMqBMcLBAuFYHHHhiTfjGUH\n+jwi0borOEOR07G5ZHcTueAaOHPQn9baa2EnfQ4Gawe6sdA4DnbYsqE1oDf/51pU\nwvDbTvhHFSsKyMHf3TO2Ptm8ccWoEepZxLrq5A1f7NdZ2C3HdShg/P8CVL86EUr3\nXh1EnTqapnllU+PVp+kuepcg0gxQuTkIzSbRptvCjljUJ0M+UJD4iwgbMaREIjk=\n=1xuS\n-----END PGP SIGNATURE-----\n", "payload": "tree aef234a140c8cf799e6b735825b806428373ad17\nparent 243ba330dd962f2d65cf1c8321e5e7d8ba01f03a\nparent dedd88857045838265f89788aeaf610e07c77661\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1607533703 +0000\ncommitter GitHub <noreply@github.com> 1607533703 +0000\n\nMerge #6786\n\n6786: Implement HirDisplay for FnSig r=jonas-schievink a=jonas-schievink\n\nThis could be useful for diagnostics, but isn't used right now\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/928d4c6744d4b06bb1d67ea9b967c27342eea38c", "html_url": "https://github.com/rust-lang/rust/commit/928d4c6744d4b06bb1d67ea9b967c27342eea38c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/928d4c6744d4b06bb1d67ea9b967c27342eea38c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "243ba330dd962f2d65cf1c8321e5e7d8ba01f03a", "url": "https://api.github.com/repos/rust-lang/rust/commits/243ba330dd962f2d65cf1c8321e5e7d8ba01f03a", "html_url": "https://github.com/rust-lang/rust/commit/243ba330dd962f2d65cf1c8321e5e7d8ba01f03a"}, {"sha": "dedd88857045838265f89788aeaf610e07c77661", "url": "https://api.github.com/repos/rust-lang/rust/commits/dedd88857045838265f89788aeaf610e07c77661", "html_url": "https://github.com/rust-lang/rust/commit/dedd88857045838265f89788aeaf610e07c77661"}], "stats": {"total": 43, "additions": 23, "deletions": 20}, "files": [{"sha": "e774819060dcee9cba1e084e4da461aac8b9e53b", "filename": "crates/hir_ty/src/display.rs", "status": "modified", "additions": 23, "deletions": 20, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/928d4c6744d4b06bb1d67ea9b967c27342eea38c/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/928d4c6744d4b06bb1d67ea9b967c27342eea38c/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs?ref=928d4c6744d4b06bb1d67ea9b967c27342eea38c", "patch": "@@ -297,26 +297,7 @@ impl HirDisplay for ApplicationTy {\n             }\n             TypeCtor::FnPtr { is_varargs, .. } => {\n                 let sig = FnSig::from_fn_ptr_substs(&self.parameters, is_varargs);\n-                write!(f, \"fn(\")?;\n-                f.write_joined(sig.params(), \", \")?;\n-                if is_varargs {\n-                    if sig.params().is_empty() {\n-                        write!(f, \"...\")?;\n-                    } else {\n-                        write!(f, \", ...\")?;\n-                    }\n-                }\n-                write!(f, \")\")?;\n-                let ret = sig.ret();\n-                if *ret != Ty::unit() {\n-                    let ret_display = ret.into_displayable(\n-                        f.db,\n-                        f.max_size,\n-                        f.omit_verbose_types,\n-                        f.display_target,\n-                    );\n-                    write!(f, \" -> {}\", ret_display)?;\n-                }\n+                sig.hir_fmt(f)?;\n             }\n             TypeCtor::FnDef(def) => {\n                 let sig = f.db.callable_item_signature(def).subst(&self.parameters);\n@@ -584,6 +565,28 @@ impl HirDisplay for Ty {\n     }\n }\n \n+impl HirDisplay for FnSig {\n+    fn hir_fmt(&self, f: &mut HirFormatter) -> Result<(), HirDisplayError> {\n+        write!(f, \"fn(\")?;\n+        f.write_joined(self.params(), \", \")?;\n+        if self.is_varargs {\n+            if self.params().is_empty() {\n+                write!(f, \"...\")?;\n+            } else {\n+                write!(f, \", ...\")?;\n+            }\n+        }\n+        write!(f, \")\")?;\n+        let ret = self.ret();\n+        if *ret != Ty::unit() {\n+            let ret_display =\n+                ret.into_displayable(f.db, f.max_size, f.omit_verbose_types, f.display_target);\n+            write!(f, \" -> {}\", ret_display)?;\n+        }\n+        Ok(())\n+    }\n+}\n+\n fn write_bounds_like_dyn_trait(\n     predicates: &[GenericPredicate],\n     f: &mut HirFormatter,"}]}