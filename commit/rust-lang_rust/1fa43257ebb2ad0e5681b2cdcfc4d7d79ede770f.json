{"sha": "1fa43257ebb2ad0e5681b2cdcfc4d7d79ede770f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmYTQzMjU3ZWJiMmFkMGU1NjgxYjJjZGNmYzRkN2Q3OWVkZTc3MGY=", "commit": {"author": {"name": "Julian Wollersberger", "email": "julian.wollersberger@gmx.at", "date": "2020-11-28T18:44:31Z"}, "committer": {"name": "Julian Wollersberger", "email": "julian.wollersberger@gmx.at", "date": "2020-11-28T18:44:31Z"}, "message": "Add test for issue #54121:\n\"simple type inference fails depending on order of trait bounds\"", "tree": {"sha": "ea1690663f752cd4bfb6fba2c080651ed6830b14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea1690663f752cd4bfb6fba2c080651ed6830b14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fa43257ebb2ad0e5681b2cdcfc4d7d79ede770f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fa43257ebb2ad0e5681b2cdcfc4d7d79ede770f", "html_url": "https://github.com/rust-lang/rust/commit/1fa43257ebb2ad0e5681b2cdcfc4d7d79ede770f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fa43257ebb2ad0e5681b2cdcfc4d7d79ede770f/comments", "author": null, "committer": null, "parents": [{"sha": "4ae328bef47dffcbf363e5ae873f419c06a5511d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ae328bef47dffcbf363e5ae873f419c06a5511d", "html_url": "https://github.com/rust-lang/rust/commit/4ae328bef47dffcbf363e5ae873f419c06a5511d"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "77e4bd4d6f5281f26bbf6d8008b66838ab6ac42c", "filename": "src/test/ui/associated-type-bounds/order-dependent-bounds-issue-54121.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/1fa43257ebb2ad0e5681b2cdcfc4d7d79ede770f/src%2Ftest%2Fui%2Fassociated-type-bounds%2Forder-dependent-bounds-issue-54121.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fa43257ebb2ad0e5681b2cdcfc4d7d79ede770f/src%2Ftest%2Fui%2Fassociated-type-bounds%2Forder-dependent-bounds-issue-54121.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Forder-dependent-bounds-issue-54121.rs?ref=1fa43257ebb2ad0e5681b2cdcfc4d7d79ede770f", "patch": "@@ -0,0 +1,47 @@\n+// check-pass\n+\n+// From https://github.com/rust-lang/rust/issues/54121/\n+//\n+// Whether the code compiled depended on the order of the trait bounds in\n+// `type T: Tr<u8, u8> + Tr<u16, u16>`\n+// But both should compile as order shouldn't matter.\n+\n+trait Tr<A, B> {\n+    fn exec(a: A, b: B);\n+}\n+\n+trait P {\n+    // This compiled successfully\n+    type T: Tr<u16, u16> + Tr<u8, u8>;\n+}\n+\n+trait Q {\n+    // This didn't compile\n+    type T: Tr<u8, u8> + Tr<u16, u16>;\n+}\n+\n+#[allow(dead_code)]\n+fn f<S: P>() {\n+    <S as P>::T::exec(0u8, 0u8)\n+}\n+\n+#[allow(dead_code)]\n+fn g<S: Q>() {\n+    // A mismatched types error was emitted on this line.\n+    <S as Q>::T::exec(0u8, 0u8)\n+}\n+\n+// Another reproduction of the same issue\n+trait Trait {\n+    type Type: Into<Self::Type1> + Into<Self::Type2> + Copy;\n+    type Type1;\n+    type Type2;\n+}\n+\n+#[allow(dead_code)]\n+fn foo<T: Trait>(x: T::Type) {\n+    let _1: T::Type1 = x.into();\n+    let _2: T::Type2 = x.into();\n+}\n+\n+fn main() { }"}]}