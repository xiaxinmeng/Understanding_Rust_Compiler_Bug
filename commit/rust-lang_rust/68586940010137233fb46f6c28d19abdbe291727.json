{"sha": "68586940010137233fb46f6c28d19abdbe291727", "node_id": "C_kwDOAAsO6NoAKDY4NTg2OTQwMDEwMTM3MjMzZmI0NmY2YzI4ZDE5YWJkYmUyOTE3Mjc", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-09-05T14:40:46Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-02-25T10:47:14Z"}, "message": "Add some tests", "tree": {"sha": "77a70b59cd438a3fcfbe3cee179ffdb2e76aa253", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77a70b59cd438a3fcfbe3cee179ffdb2e76aa253"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68586940010137233fb46f6c28d19abdbe291727", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68586940010137233fb46f6c28d19abdbe291727", "html_url": "https://github.com/rust-lang/rust/commit/68586940010137233fb46f6c28d19abdbe291727", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68586940010137233fb46f6c28d19abdbe291727/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6901c952ec3847ca522c69d4c854e9e0e51d5fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6901c952ec3847ca522c69d4c854e9e0e51d5fe", "html_url": "https://github.com/rust-lang/rust/commit/f6901c952ec3847ca522c69d4c854e9e0e51d5fe"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "4de58cc1d81c19c181fd600eb0014f47a91276cf", "filename": "crates/hir_ty/src/tests/method_resolution.rs", "status": "modified", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/68586940010137233fb46f6c28d19abdbe291727/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68586940010137233fb46f6c28d19abdbe291727/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs?ref=68586940010137233fb46f6c28d19abdbe291727", "patch": "@@ -1460,3 +1460,85 @@ fn main() {\n     \"#,\n     );\n }\n+\n+#[test]\n+fn deref_fun_1() {\n+    check_types(r#\"\n+//- minicore: deref\n+\n+struct A<T, U>(T, U);\n+struct B<T>(T);\n+struct C<T>(T);\n+\n+impl<T> core::ops::Deref for A<B<T>, u32> {\n+    type Target = B<T>;\n+    fn deref(&self) -> &B<T> { &self.0 }\n+}\n+impl core::ops::Deref for B<isize> {\n+    type Target = C<isize>;\n+    fn deref(&self) -> &C<isize> { loop {} }\n+}\n+\n+impl<T: Copy> C<T> {\n+    fn thing(&self) -> T { self.0 }\n+}\n+\n+fn make<T>() -> T { loop {} }\n+\n+fn test() {\n+    let a1 = A(make(), make());\n+    let _: usize = (*a1).0;\n+    a1;\n+  //^^ A<B<usize>, u32>\n+\n+    let a2 = A(make(), make());\n+    a2.thing();\n+  //^^^^^^^^^^ isize\n+    a2;\n+  //^^ A<B<isize>, u32>\n+}\n+\"#);\n+}\n+\n+#[test]\n+fn deref_fun_2() {\n+    check_types(r#\"\n+//- minicore: deref\n+\n+struct A<T, U>(T, U);\n+struct B<T>(T);\n+struct C<T>(T);\n+\n+impl<T> core::ops::Deref for A<B<T>, u32> {\n+    type Target = B<T>;\n+    fn deref(&self) -> &B<T> { &self.0 }\n+}\n+impl core::ops::Deref for B<isize> {\n+    type Target = C<isize>;\n+    fn deref(&self) -> &C<isize> { loop {} }\n+}\n+\n+impl<T> core::ops::Deref for A<C<T>, i32> {\n+    type Target = C<T>;\n+    fn deref(&self) -> &C<T> { &self.0 }\n+}\n+\n+impl<T: Copy> C<T> {\n+    fn thing(&self) -> T { self.0 }\n+}\n+\n+fn make<T>() -> T { loop {} }\n+\n+fn test() {\n+    let a1 = A(make(), 1u32);\n+    a1.thing();\n+    a1;\n+  //^^ A<B<isize>, u32>\n+\n+    let a2 = A(make(), 1i32);\n+    let _: &str = a2.thing();\n+    a2;\n+  //^^ A<C<&str>, i32>\n+}\n+\"#);\n+}"}]}