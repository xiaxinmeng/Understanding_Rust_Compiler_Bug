{"sha": "54d5a9846f6bfe0fe37e2a81c9bd74178ff1f3b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0ZDVhOTg0NmY2YmZlMGZlMzdlMmE4MWM5YmQ3NDE3OGZmMWYzYjQ=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-17T16:12:58Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-17T16:12:58Z"}, "message": "Try to fix pretty-printer failure\n\nI can't reproduce it on my side, unfortunately.", "tree": {"sha": "e0a02ea31f019f5d0f1f60ccd56a5d3daf081d47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0a02ea31f019f5d0f1f60ccd56a5d3daf081d47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54d5a9846f6bfe0fe37e2a81c9bd74178ff1f3b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54d5a9846f6bfe0fe37e2a81c9bd74178ff1f3b4", "html_url": "https://github.com/rust-lang/rust/commit/54d5a9846f6bfe0fe37e2a81c9bd74178ff1f3b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54d5a9846f6bfe0fe37e2a81c9bd74178ff1f3b4/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08c16b17e906958ce8e3902a3962e9d801fb6e8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/08c16b17e906958ce8e3902a3962e9d801fb6e8c", "html_url": "https://github.com/rust-lang/rust/commit/08c16b17e906958ce8e3902a3962e9d801fb6e8c"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "26ed2609ba2d23011fea083128e1c060809bad43", "filename": "src/comp/driver/driver.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/54d5a9846f6bfe0fe37e2a81c9bd74178ff1f3b4/src%2Fcomp%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54d5a9846f6bfe0fe37e2a81c9bd74178ff1f3b4/src%2Fcomp%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Fdriver.rs?ref=54d5a9846f6bfe0fe37e2a81c9bd74178ff1f3b4", "patch": "@@ -81,22 +81,21 @@ fn parse_input(sess: session, cfg: ast::crate_cfg, input: str) ->\n     if !input_is_stdin(input) {\n         parser::parse_crate_from_file(input, cfg, sess.parse_sess)\n     } else {\n-        let srcbytes = get_input_stream(sess, input).read_whole_stream();\n-        let srcstring = str::unsafe_from_bytes(srcbytes);\n-        parser::parse_crate_from_source_str(input, srcstring, cfg,\n-                                            sess.parse_sess)\n+        let src = get_input_str(sess, input);\n+        parser::parse_crate_from_source_str(input, src, cfg, sess.parse_sess)\n     }\n }\n \n-fn get_input_stream(sess: session, infile: str) -> io::reader {\n-    if !input_is_stdin(infile) {\n+fn get_input_str(sess: session, infile: str) -> str {\n+    let stream = if !input_is_stdin(infile) {\n         alt io::file_reader(infile) {\n           result::ok(reader) { reader }\n           result::err(e) {\n             sess.fatal(e)\n           }\n         }\n-    } else { io::stdin() }\n+    } else { io::stdin() };\n+    str::unsafe_from_bytes(stream.read_whole_stream())\n }\n \n fn time<T>(do_it: bool, what: str, thunk: fn@() -> T) -> T {\n@@ -285,7 +284,7 @@ fn pretty_print_input(sess: session, cfg: ast::crate_cfg, input: str,\n       _ { cu_parse }\n     };\n     let {crate, tcx} = compile_upto(sess, cfg, input, upto, none);\n-    let src = get_input_stream(sess, input);\n+    let src = get_input_str(sess, input);\n \n     let ann: pprust::pp_ann = pprust::no_ann();\n     alt ppm {\n@@ -299,7 +298,7 @@ fn pretty_print_input(sess: session, cfg: ast::crate_cfg, input: str,\n       ppm_expanded. | ppm_normal. {}\n     }\n     pprust::print_crate(sess.codemap, sess.diagnostic, crate, input,\n-                        src, io::stdout(), ann);\n+                        io::string_reader(src), io::stdout(), ann);\n }\n \n fn get_os(triple: str) -> option<session::os> {"}]}