{"sha": "db2c70bf4e9efcb53adcb8ed9c5b7eae8a55f33d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMmM3MGJmNGU5ZWZjYjUzYWRjYjhlZDljNWI3ZWFlOGE1NWYzM2Q=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-24T20:32:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-24T20:32:36Z"}, "message": "Rollup merge of #70359 - kornelski:mustsplit, r=Dylan-DPC\n\nmust_use on split_off\n\nA couple more for #70194", "tree": {"sha": "efe756070f1f4e129f4f8b74d1dd5728376fd516", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efe756070f1f4e129f4f8b74d1dd5728376fd516"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db2c70bf4e9efcb53adcb8ed9c5b7eae8a55f33d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeem5kCRBK7hj4Ov3rIwAAdHIIAKFzyu6ZKu3ZB54TPBXJ4zOs\nFCcsexmLUo9Av7qCKuJ7ZiJzWK1PIVIKjJh5Aaw8zQpPXhr58D5ipZl5SPunpDu6\nls4P7aAd2fHmGVmXuGgWEk2MGx2iJTm6KBrscLQkPL3QdXX+Uau6l2vhjOI92VEW\nx8SYOWW4QKvFVXGlMCok9iBg0u3O9frQY1ZQdDc8Q+3I7uEnVT32hlxBGQBpeByg\nVoFtHylB7J0OQ292+yy4IbuaqlbffuHSYFbHgONKM8F7pzCqrj29PnqkoxZCxkLT\nG2jWXSie1HrK5eHPxeNMaMnh4pDkK+l0+oQqVldb+ifFll3IU1ZYEBGtsFHBIsE=\n=IcB6\n-----END PGP SIGNATURE-----\n", "payload": "tree efe756070f1f4e129f4f8b74d1dd5728376fd516\nparent dc2901629960136330e86c02a0889f41481b4b00\nparent 42b10e51c18ad37f671dc289aa0f183d4dbceab9\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1585081956 +0100\ncommitter GitHub <noreply@github.com> 1585081956 +0100\n\nRollup merge of #70359 - kornelski:mustsplit, r=Dylan-DPC\n\nmust_use on split_off\n\nA couple more for #70194\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db2c70bf4e9efcb53adcb8ed9c5b7eae8a55f33d", "html_url": "https://github.com/rust-lang/rust/commit/db2c70bf4e9efcb53adcb8ed9c5b7eae8a55f33d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db2c70bf4e9efcb53adcb8ed9c5b7eae8a55f33d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc2901629960136330e86c02a0889f41481b4b00", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc2901629960136330e86c02a0889f41481b4b00", "html_url": "https://github.com/rust-lang/rust/commit/dc2901629960136330e86c02a0889f41481b4b00"}, {"sha": "42b10e51c18ad37f671dc289aa0f183d4dbceab9", "url": "https://api.github.com/repos/rust-lang/rust/commits/42b10e51c18ad37f671dc289aa0f183d4dbceab9", "html_url": "https://github.com/rust-lang/rust/commit/42b10e51c18ad37f671dc289aa0f183d4dbceab9"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "69284fbf1b37db7b89b26052d667007e252281d9", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/db2c70bf4e9efcb53adcb8ed9c5b7eae8a55f33d/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db2c70bf4e9efcb53adcb8ed9c5b7eae8a55f33d/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=db2c70bf4e9efcb53adcb8ed9c5b7eae8a55f33d", "patch": "@@ -1876,6 +1876,7 @@ impl<T> VecDeque<T> {\n     /// assert_eq!(buf2, [2, 3]);\n     /// ```\n     #[inline]\n+    #[must_use = \"use `.truncate()` if you don't need the other half\"]\n     #[stable(feature = \"split_off\", since = \"1.4.0\")]\n     pub fn split_off(&mut self, at: usize) -> Self {\n         let len = self.len();"}, {"sha": "7c89d38caa4e64dbd3ad7a0f1d445fff50870bc4", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/db2c70bf4e9efcb53adcb8ed9c5b7eae8a55f33d/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db2c70bf4e9efcb53adcb8ed9c5b7eae8a55f33d/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=db2c70bf4e9efcb53adcb8ed9c5b7eae8a55f33d", "patch": "@@ -1461,6 +1461,7 @@ impl String {\n     /// ```\n     #[inline]\n     #[stable(feature = \"string_split_off\", since = \"1.16.0\")]\n+    #[must_use = \"use `.truncate()` if you don't need the other half\"]\n     pub fn split_off(&mut self, at: usize) -> String {\n         assert!(self.is_char_boundary(at));\n         let other = self.vec.split_off(at);"}, {"sha": "d2f09eb4a75688fe1119cb4a3aab288999bd93c4", "filename": "src/liballoc/tests/string.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/db2c70bf4e9efcb53adcb8ed9c5b7eae8a55f33d/src%2Fliballoc%2Ftests%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db2c70bf4e9efcb53adcb8ed9c5b7eae8a55f33d/src%2Fliballoc%2Ftests%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fstring.rs?ref=db2c70bf4e9efcb53adcb8ed9c5b7eae8a55f33d", "patch": "@@ -266,14 +266,14 @@ fn test_split_off_empty() {\n fn test_split_off_past_end() {\n     let orig = \"Hello, world!\";\n     let mut split = String::from(orig);\n-    split.split_off(orig.len() + 1);\n+    let _ = split.split_off(orig.len() + 1);\n }\n \n #[test]\n #[should_panic]\n fn test_split_off_mid_char() {\n     let mut orig = String::from(\"\u5c71\");\n-    orig.split_off(1);\n+    let _ = orig.split_off(1);\n }\n \n #[test]"}]}