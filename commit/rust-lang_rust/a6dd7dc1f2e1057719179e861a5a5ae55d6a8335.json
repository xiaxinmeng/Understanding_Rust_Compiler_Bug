{"sha": "a6dd7dc1f2e1057719179e861a5a5ae55d6a8335", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZGQ3ZGMxZjJlMTA1NzcxOTE3OWU4NjFhNWE1YWU1NWQ2YTgzMzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-22T21:42:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-22T21:42:50Z"}, "message": "auto merge of #5971 : pcwalton/rust/is-absolute, r=pcwalton\n\nr? @jdm last commit", "tree": {"sha": "1235398bb9db2b0ae9dcff1c74f93465a58944db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1235398bb9db2b0ae9dcff1c74f93465a58944db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6dd7dc1f2e1057719179e861a5a5ae55d6a8335", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6dd7dc1f2e1057719179e861a5a5ae55d6a8335", "html_url": "https://github.com/rust-lang/rust/commit/a6dd7dc1f2e1057719179e861a5a5ae55d6a8335", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6dd7dc1f2e1057719179e861a5a5ae55d6a8335/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8205f73ce6201c4cf2780df04ea4ffb1949bbe9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8205f73ce6201c4cf2780df04ea4ffb1949bbe9b", "html_url": "https://github.com/rust-lang/rust/commit/8205f73ce6201c4cf2780df04ea4ffb1949bbe9b"}, {"sha": "2c5afa4753a7a5b525be83e42a767cf556103faa", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c5afa4753a7a5b525be83e42a767cf556103faa", "html_url": "https://github.com/rust-lang/rust/commit/2c5afa4753a7a5b525be83e42a767cf556103faa"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "23f7e912f96375bd338d9d503259699f706de36a", "filename": "src/libcore/path.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a6dd7dc1f2e1057719179e861a5a5ae55d6a8335/src%2Flibcore%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6dd7dc1f2e1057719179e861a5a5ae55d6a8335/src%2Flibcore%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpath.rs?ref=a6dd7dc1f2e1057719179e861a5a5ae55d6a8335", "patch": "@@ -67,6 +67,8 @@ pub trait GenericPath {\n     fn is_restricted(&self) -> bool;\n \n     fn normalize(&self) -> Self;\n+\n+    fn is_absolute(&self) -> bool;\n }\n \n #[cfg(windows)]\n@@ -379,10 +381,11 @@ impl ToStr for PosixPath {\n // FIXME (#3227): when default methods in traits are working, de-duplicate\n // PosixPath and WindowsPath, most of their methods are common.\n impl GenericPath for PosixPath {\n-\n     fn from_str(s: &str) -> PosixPath {\n         let mut components = ~[];\n-        for str::each_split_nonempty(s, |c| c == '/') |s| { components.push(s.to_owned()) }\n+        for str::each_split_nonempty(s, |c| c == '/') |s| {\n+            components.push(s.to_owned())\n+        }\n         let is_absolute = (s.len() != 0 && s[0] == '/' as u8);\n         return PosixPath { is_absolute: is_absolute,\n                            components: components }\n@@ -540,6 +543,10 @@ impl GenericPath for PosixPath {\n           //  ..self\n         }\n     }\n+\n+    fn is_absolute(&self) -> bool {\n+        self.is_absolute\n+    }\n }\n \n \n@@ -563,7 +570,6 @@ impl ToStr for WindowsPath {\n \n \n impl GenericPath for WindowsPath {\n-\n     fn from_str(s: &str) -> WindowsPath {\n         let host;\n         let device;\n@@ -809,6 +815,10 @@ impl GenericPath for WindowsPath {\n             components: normalize(self.components)\n         }\n     }\n+\n+    fn is_absolute(&self) -> bool {\n+        self.is_absolute\n+    }\n }\n \n "}]}