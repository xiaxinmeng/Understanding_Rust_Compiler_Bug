{"sha": "da5a6fb1b65ec6581a67e942a3850f6bc15a552c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNWE2ZmIxYjY1ZWM2NTgxYTY3ZTk0MmEzODUwZjZiYzE1YTU1MmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-26T17:50:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-26T17:50:54Z"}, "message": "Auto merge of #5845 - giraffate:fix_fp_useless_conversion, r=yaahc\n\nFix FP `useless_conversion`\n\nFix #5833.\n\nchangelog: none", "tree": {"sha": "bdfae2a134cca6a497b903d93c55185f11ed6ad5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdfae2a134cca6a497b903d93c55185f11ed6ad5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da5a6fb1b65ec6581a67e942a3850f6bc15a552c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da5a6fb1b65ec6581a67e942a3850f6bc15a552c", "html_url": "https://github.com/rust-lang/rust/commit/da5a6fb1b65ec6581a67e942a3850f6bc15a552c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da5a6fb1b65ec6581a67e942a3850f6bc15a552c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79f948ec0a507f8dc663508ce013104847fcc9f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/79f948ec0a507f8dc663508ce013104847fcc9f3", "html_url": "https://github.com/rust-lang/rust/commit/79f948ec0a507f8dc663508ce013104847fcc9f3"}, {"sha": "c81bbd05b95ae03da9af4e7e25e3784edd039465", "url": "https://api.github.com/repos/rust-lang/rust/commits/c81bbd05b95ae03da9af4e7e25e3784edd039465", "html_url": "https://github.com/rust-lang/rust/commit/c81bbd05b95ae03da9af4e7e25e3784edd039465"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "1bf37632e326cfa2d7a76be9361983a49fecd731", "filename": "clippy_lints/src/useless_conversion.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/da5a6fb1b65ec6581a67e942a3850f6bc15a552c/clippy_lints%2Fsrc%2Fuseless_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da5a6fb1b65ec6581a67e942a3850f6bc15a552c/clippy_lints%2Fsrc%2Fuseless_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuseless_conversion.rs?ref=da5a6fb1b65ec6581a67e942a3850f6bc15a552c", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{\n-    is_type_diagnostic_item, match_def_path, match_trait_method, paths, snippet, snippet_with_macro_callsite,\n-    span_lint_and_help, span_lint_and_sugg,\n+    get_parent_expr, is_type_diagnostic_item, match_def_path, match_trait_method, paths, snippet,\n+    snippet_with_macro_callsite, span_lint_and_help, span_lint_and_sugg,\n };\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n@@ -79,6 +79,13 @@ impl<'tcx> LateLintPass<'tcx> for UselessConversion {\n                     }\n                 }\n                 if match_trait_method(cx, e, &paths::INTO_ITERATOR) && &*name.ident.as_str() == \"into_iter\" {\n+                    if let Some(parent_expr) = get_parent_expr(cx, e) {\n+                        if let ExprKind::MethodCall(ref parent_name, ..) = parent_expr.kind {\n+                            if &*parent_name.ident.as_str() != \"into_iter\" {\n+                                return;\n+                            }\n+                        }\n+                    }\n                     let a = cx.typeck_results().expr_ty(e);\n                     let b = cx.typeck_results().expr_ty(&args[0]);\n                     if TyS::same_type(a, b) {"}, {"sha": "813cdaecaa91a8864f8f285a8f3c3130c0cb5bc4", "filename": "tests/ui/useless_conversion.fixed", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/da5a6fb1b65ec6581a67e942a3850f6bc15a552c/tests%2Fui%2Fuseless_conversion.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/da5a6fb1b65ec6581a67e942a3850f6bc15a552c/tests%2Fui%2Fuseless_conversion.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_conversion.fixed?ref=da5a6fb1b65ec6581a67e942a3850f6bc15a552c", "patch": "@@ -32,11 +32,20 @@ fn test_issue_3913() -> Result<(), std::io::Error> {\n     Ok(())\n }\n \n+fn test_issue_5833() -> Result<(), ()> {\n+    let text = \"foo\\r\\nbar\\n\\nbaz\\n\";\n+    let lines = text.lines();\n+    if Some(\"ok\") == lines.into_iter().next() {}\n+\n+    Ok(())\n+}\n+\n fn main() {\n     test_generic(10i32);\n     test_generic2::<i32, i32>(10i32);\n     test_questionmark().unwrap();\n     test_issue_3913().unwrap();\n+    test_issue_5833().unwrap();\n \n     let _: String = \"foo\".into();\n     let _: String = From::from(\"foo\");"}, {"sha": "540fea23b36b98e0061e4a7566b0666e04254516", "filename": "tests/ui/useless_conversion.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/da5a6fb1b65ec6581a67e942a3850f6bc15a552c/tests%2Fui%2Fuseless_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da5a6fb1b65ec6581a67e942a3850f6bc15a552c/tests%2Fui%2Fuseless_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_conversion.rs?ref=da5a6fb1b65ec6581a67e942a3850f6bc15a552c", "patch": "@@ -32,11 +32,20 @@ fn test_issue_3913() -> Result<(), std::io::Error> {\n     Ok(())\n }\n \n+fn test_issue_5833() -> Result<(), ()> {\n+    let text = \"foo\\r\\nbar\\n\\nbaz\\n\";\n+    let lines = text.lines();\n+    if Some(\"ok\") == lines.into_iter().next() {}\n+\n+    Ok(())\n+}\n+\n fn main() {\n     test_generic(10i32);\n     test_generic2::<i32, i32>(10i32);\n     test_questionmark().unwrap();\n     test_issue_3913().unwrap();\n+    test_issue_5833().unwrap();\n \n     let _: String = \"foo\".into();\n     let _: String = From::from(\"foo\");"}, {"sha": "b958b0354520326577fdfcf17d56e932a6b813df", "filename": "tests/ui/useless_conversion.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/da5a6fb1b65ec6581a67e942a3850f6bc15a552c/tests%2Fui%2Fuseless_conversion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/da5a6fb1b65ec6581a67e942a3850f6bc15a552c/tests%2Fui%2Fuseless_conversion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_conversion.stderr?ref=da5a6fb1b65ec6581a67e942a3850f6bc15a552c", "patch": "@@ -23,43 +23,43 @@ LL |         let _: i32 = 0i32.into();\n    |                      ^^^^^^^^^^^ help: consider removing `.into()`: `0i32`\n \n error: useless conversion to the same type\n-  --> $DIR/useless_conversion.rs:51:21\n+  --> $DIR/useless_conversion.rs:60:21\n    |\n LL |     let _: String = \"foo\".to_string().into();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `\"foo\".to_string()`\n \n error: useless conversion to the same type\n-  --> $DIR/useless_conversion.rs:52:21\n+  --> $DIR/useless_conversion.rs:61:21\n    |\n LL |     let _: String = From::from(\"foo\".to_string());\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `From::from()`: `\"foo\".to_string()`\n \n error: useless conversion to the same type\n-  --> $DIR/useless_conversion.rs:53:13\n+  --> $DIR/useless_conversion.rs:62:13\n    |\n LL |     let _ = String::from(\"foo\".to_string());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `\"foo\".to_string()`\n \n error: useless conversion to the same type\n-  --> $DIR/useless_conversion.rs:54:13\n+  --> $DIR/useless_conversion.rs:63:13\n    |\n LL |     let _ = String::from(format!(\"A: {:04}\", 123));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `format!(\"A: {:04}\", 123)`\n \n error: useless conversion to the same type\n-  --> $DIR/useless_conversion.rs:55:13\n+  --> $DIR/useless_conversion.rs:64:13\n    |\n LL |     let _ = \"\".lines().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `\"\".lines()`\n \n error: useless conversion to the same type\n-  --> $DIR/useless_conversion.rs:56:13\n+  --> $DIR/useless_conversion.rs:65:13\n    |\n LL |     let _ = vec![1, 2, 3].into_iter().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `vec![1, 2, 3].into_iter()`\n \n error: useless conversion to the same type\n-  --> $DIR/useless_conversion.rs:57:21\n+  --> $DIR/useless_conversion.rs:66:21\n    |\n LL |     let _: String = format!(\"Hello {}\", \"world\").into();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `format!(\"Hello {}\", \"world\")`"}]}