{"sha": "3bd1734ea28b837238806dc0970a52c7148112cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZDE3MzRlYTI4YjgzNzIzODgwNmRjMDk3MGE1MmM3MTQ4MTEyY2M=", "commit": {"author": {"name": "Christian Poveda", "email": "cpovedar@fnal.gov", "date": "2019-06-12T17:49:46Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-06-16T07:33:00Z"}, "message": "Add force_bits and force_ptr methods", "tree": {"sha": "d5242e69833410209524191d562bc0fbc7370c3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5242e69833410209524191d562bc0fbc7370c3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bd1734ea28b837238806dc0970a52c7148112cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bd1734ea28b837238806dc0970a52c7148112cc", "html_url": "https://github.com/rust-lang/rust/commit/3bd1734ea28b837238806dc0970a52c7148112cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bd1734ea28b837238806dc0970a52c7148112cc/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "374c63e0fc356eb61b1966cb6026a2a49fe9226d", "url": "https://api.github.com/repos/rust-lang/rust/commits/374c63e0fc356eb61b1966cb6026a2a49fe9226d", "html_url": "https://github.com/rust-lang/rust/commit/374c63e0fc356eb61b1966cb6026a2a49fe9226d"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "1908f45704e165a824a4dbb2b52fe049ffe51a78", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3bd1734ea28b837238806dc0970a52c7148112cc/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bd1734ea28b837238806dc0970a52c7148112cc/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=3bd1734ea28b837238806dc0970a52c7148112cc", "patch": "@@ -765,4 +765,17 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpretCx<'mir, 'tcx, M> {\n     pub fn truncate(&self, value: u128, ty: TyLayout<'_>) -> u128 {\n         truncate(value, ty.size)\n     }\n+\n+    #[inline(always)]\n+    pub fn force_ptr(\n+        &self,\n+        scalar: Scalar<M::PointerTag>,\n+    ) -> InterpResult<'tcx, Pointer<M::PointerTag>> {\n+        self.memory.force_ptr(scalar)\n+    }\n+\n+    #[inline(always)]\n+    pub fn force_bits(&self, scalar: Scalar<M::PointerTag>) -> InterpResult<'tcx, u128> {\n+        self.memory.force_bits(scalar)\n+    }\n }"}, {"sha": "8eb891cf90a09f4df5d096a6ff258715b7cddef0", "filename": "src/librustc_mir/interpret/machine.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3bd1734ea28b837238806dc0970a52c7148112cc/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bd1734ea28b837238806dc0970a52c7148112cc/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs?ref=3bd1734ea28b837238806dc0970a52c7148112cc", "patch": "@@ -11,7 +11,8 @@ use rustc::ty::{self, query::TyCtxtAt};\n \n use super::{\n     Allocation, AllocId, InterpResult, Scalar, AllocationExtra,\n-    InterpretCx, PlaceTy, OpTy, ImmTy, MemoryKind,\n+    InterpretCx, PlaceTy, OpTy, ImmTy, MemoryKind, Pointer,\n+    InterpErrorInfo, InterpError\n };\n \n /// Whether this kind of memory is allowed to leak\n@@ -208,4 +209,18 @@ pub trait Machine<'mir, 'tcx>: Sized {\n         ecx: &mut InterpretCx<'mir, 'tcx, Self>,\n         extra: Self::FrameExtra,\n     ) -> InterpResult<'tcx>;\n+\n+    fn int_to_ptr(\n+        _int: u64,\n+        _extra: &Self::MemoryExtra,\n+    ) -> InterpResult<'tcx, Pointer<Self::PointerTag>> {\n+        Err(InterpErrorInfo::from(InterpError::ReadBytesAsPointer))\n+    }\n+\n+    fn ptr_to_int(\n+        _ptr: Pointer<Self::PointerTag>,\n+        _extra: &Self::MemoryExtra,\n+    ) -> InterpResult<'tcx, u64> {\n+        Err(InterpErrorInfo::from(InterpError::ReadPointerAsBytes))\n+    }\n }"}, {"sha": "790ee72fe53f29f2be624e2b4636a519d5c8a713", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3bd1734ea28b837238806dc0970a52c7148112cc/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bd1734ea28b837238806dc0970a52c7148112cc/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=3bd1734ea28b837238806dc0970a52c7148112cc", "patch": "@@ -874,4 +874,21 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'mir, 'tcx, M> {\n         }\n         Ok(())\n     }\n+\n+    pub fn force_ptr(\n+        &self,\n+        scalar: Scalar<M::PointerTag>,\n+    ) -> InterpResult<'tcx, Pointer<M::PointerTag>> {\n+        match scalar {\n+            Scalar::Ptr(ptr) => Ok(ptr),\n+            _ => M::int_to_ptr(scalar.to_usize(self)?, &self.extra)\n+        }\n+    }\n+\n+    pub fn force_bits(&self, scalar: Scalar<M::PointerTag>) -> InterpResult<'tcx, u128> {\n+        match scalar.to_bits_or_ptr(self.pointer_size(), self) {\n+            Ok(bits) => Ok(bits),\n+            Err(ptr) => Ok(M::ptr_to_int(ptr, &self.extra)? as u128)\n+        }\n+    }\n }"}]}