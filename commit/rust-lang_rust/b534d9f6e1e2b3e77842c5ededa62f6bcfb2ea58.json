{"sha": "b534d9f6e1e2b3e77842c5ededa62f6bcfb2ea58", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1MzRkOWY2ZTFlMmIzZTc3ODQyYzVlZGVkYTYyZjZiY2ZiMmVhNTg=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-09-18T10:04:49Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-09-18T10:32:23Z"}, "message": "Fix broken link", "tree": {"sha": "11f1f0e6ee2ee50f85044810d413d2a4e66f1bf6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11f1f0e6ee2ee50f85044810d413d2a4e66f1bf6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b534d9f6e1e2b3e77842c5ededa62f6bcfb2ea58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b534d9f6e1e2b3e77842c5ededa62f6bcfb2ea58", "html_url": "https://github.com/rust-lang/rust/commit/b534d9f6e1e2b3e77842c5ededa62f6bcfb2ea58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b534d9f6e1e2b3e77842c5ededa62f6bcfb2ea58/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bffd2111f7b033902e60889da5d3fa7a033a7d5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bffd2111f7b033902e60889da5d3fa7a033a7d5e", "html_url": "https://github.com/rust-lang/rust/commit/bffd2111f7b033902e60889da5d3fa7a033a7d5e"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "8d3e30dbd4545cd2bddc8f5647ab37ea19ce1673", "filename": "library/std/src/sync/barrier.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b534d9f6e1e2b3e77842c5ededa62f6bcfb2ea58/library%2Fstd%2Fsrc%2Fsync%2Fbarrier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b534d9f6e1e2b3e77842c5ededa62f6bcfb2ea58/library%2Fstd%2Fsrc%2Fsync%2Fbarrier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fbarrier.rs?ref=b534d9f6e1e2b3e77842c5ededa62f6bcfb2ea58", "patch": "@@ -94,9 +94,9 @@ impl Barrier {\n     /// be used continuously.\n     ///\n     /// A single (arbitrary) thread will receive a [`BarrierWaitResult`] that\n-    /// returns `true` from [`is_leader`] when returning from this function, and\n-    /// all other threads will receive a result that will return `false` from\n-    /// [`BarrierWaitResult::is_leader`].\n+    /// returns `true` from [`BarrierWaitResult::is_leader()`] when returning\n+    /// from this function, and all other threads will receive a result that\n+    /// will return `false` from [`BarrierWaitResult::is_leader()`].\n     ///\n     /// # Examples\n     ///"}]}