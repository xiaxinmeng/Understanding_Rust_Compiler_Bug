{"sha": "1dc7eb8853f3ff5d8e4f7e4a717c55a7073f5533", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkYzdlYjg4NTNmM2ZmNWQ4ZTRmN2U0YTcxN2M1NWE3MDczZjU1MzM=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2016-01-20T18:04:31Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2016-01-20T18:04:31Z"}, "message": "syntax: Fix encoding and decoding spans\n\nThe protocol for `serialize::{En,De}code` doesn't allow for two\nintegers to be serialized next to each other. This switches the\nprotocol to serializing `Span`s as a struct. rbml structs don't\nhave any overhead, so the metadata shouldn't increase in size,\nbut it allows the json format to be properly generated, albeit\nslightly more heavy than when it was just serializing a span as\na u64.\n\nCloses #31025.\n\ns", "tree": {"sha": "927a01951a4f496ebd5028db75499fd08bd67879", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/927a01951a4f496ebd5028db75499fd08bd67879"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1dc7eb8853f3ff5d8e4f7e4a717c55a7073f5533", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1dc7eb8853f3ff5d8e4f7e4a717c55a7073f5533", "html_url": "https://github.com/rust-lang/rust/commit/1dc7eb8853f3ff5d8e4f7e4a717c55a7073f5533", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1dc7eb8853f3ff5d8e4f7e4a717c55a7073f5533/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4c9628de7d4e970b2cb43d0f1a4c8f9ad03aca1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4c9628de7d4e970b2cb43d0f1a4c8f9ad03aca1", "html_url": "https://github.com/rust-lang/rust/commit/c4c9628de7d4e970b2cb43d0f1a4c8f9ad03aca1"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "8d6c0df981f23d09eaa9f4c56b9800c3656fe70a", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/1dc7eb8853f3ff5d8e4f7e4a717c55a7073f5533/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dc7eb8853f3ff5d8e4f7e4a717c55a7073f5533/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=1dc7eb8853f3ff5d8e4f7e4a717c55a7073f5533", "patch": "@@ -164,16 +164,31 @@ impl Eq for Span {}\n \n impl Encodable for Span {\n     fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n-        try!(s.emit_u32(self.lo.0));\n-        s.emit_u32(self.hi.0)\n+        s.emit_struct(\"Span\", 2, |s| {\n+            try!(s.emit_struct_field(\"lo\", 0, |s| {\n+                self.lo.encode(s)\n+            }));\n+\n+            s.emit_struct_field(\"hi\", 1, |s| {\n+                self.hi.encode(s)\n+            })\n+        })\n     }\n }\n \n impl Decodable for Span {\n     fn decode<D: Decoder>(d: &mut D) -> Result<Span, D::Error> {\n-        let lo = BytePos(try! { d.read_u32() });\n-        let hi = BytePos(try! { d.read_u32() });\n-        Ok(mk_sp(lo, hi))\n+        d.read_struct(\"Span\", 2, |d| {\n+            let lo = try!(d.read_struct_field(\"lo\", 0, |d| {\n+                BytePos::decode(d)\n+            }));\n+\n+            let hi = try!(d.read_struct_field(\"hi\", 1, |d| {\n+                BytePos::decode(d)\n+            }));\n+\n+            Ok(mk_sp(lo, hi))\n+        })\n     }\n }\n "}]}