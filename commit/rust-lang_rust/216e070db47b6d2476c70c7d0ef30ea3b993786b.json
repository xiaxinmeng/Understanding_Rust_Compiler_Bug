{"sha": "216e070db47b6d2476c70c7d0ef30ea3b993786b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNmUwNzBkYjQ3YjZkMjQ3NmM3MGM3ZDBlZjMwZWEzYjk5Mzc4NmI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-14T13:35:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-14T13:35:28Z"}, "message": "Rollup merge of #71112 - cuviper:unsigned-Neg, r=Mark-Simulacrum\n\nRemove the last remnant of unsigned Neg\n\nIt's been gone since #23945, before Rust 1.0. The former wrapping\nsemantics have also been available as inherent methods for a long time\nnow. There's no reason to keep this unused macro around.", "tree": {"sha": "848e87c8c6ca2c1cbf551c4e91e9afc5fdce3fdc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/848e87c8c6ca2c1cbf551c4e91e9afc5fdce3fdc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/216e070db47b6d2476c70c7d0ef30ea3b993786b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJelbwgCRBK7hj4Ov3rIwAAdHIIACg1jRKThHMHo42xK8aE4o+y\n1dgbCABXMmrbc5EhNPYLl1kMMu5JLfULZcoB126tE59p0jC9Cb7oRyzFRvCxExnV\nSg/rwsgGEZrRAp0vkKXF5Gr/0fwMrnLZsWSMRlqEZ4G7Ur2G2ru6XN6+2XV7m4zI\nrJe0+D24Tg+CU22SvLCTxTudSbNF4j0BCGrgCNO7csyZs0Kjed6gJe64ksY4doNk\nH0eWfyclghEkL/1ruhMoPQIwtVjvPkFhx/H0ofwptHSg4IqKMPX9izM1dCRzjlDx\nK4hqKjLEd+61o9SgQ0H/mgNOVuvxN5vVqNhryOPW/lDwJ1SUcl9WW74aB0mel2o=\n=I/ls\n-----END PGP SIGNATURE-----\n", "payload": "tree 848e87c8c6ca2c1cbf551c4e91e9afc5fdce3fdc\nparent ba72b15666b2491415aec703a02c2364fe5e2790\nparent 9ede5b04d02e973e216be47a82992ec5cb58f7db\nauthor Dylan DPC <dylan.dpc@gmail.com> 1586871328 +0200\ncommitter GitHub <noreply@github.com> 1586871328 +0200\n\nRollup merge of #71112 - cuviper:unsigned-Neg, r=Mark-Simulacrum\n\nRemove the last remnant of unsigned Neg\n\nIt's been gone since #23945, before Rust 1.0. The former wrapping\nsemantics have also been available as inherent methods for a long time\nnow. There's no reason to keep this unused macro around.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/216e070db47b6d2476c70c7d0ef30ea3b993786b", "html_url": "https://github.com/rust-lang/rust/commit/216e070db47b6d2476c70c7d0ef30ea3b993786b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/216e070db47b6d2476c70c7d0ef30ea3b993786b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba72b15666b2491415aec703a02c2364fe5e2790", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba72b15666b2491415aec703a02c2364fe5e2790", "html_url": "https://github.com/rust-lang/rust/commit/ba72b15666b2491415aec703a02c2364fe5e2790"}, {"sha": "9ede5b04d02e973e216be47a82992ec5cb58f7db", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ede5b04d02e973e216be47a82992ec5cb58f7db", "html_url": "https://github.com/rust-lang/rust/commit/9ede5b04d02e973e216be47a82992ec5cb58f7db"}], "stats": {"total": 21, "additions": 4, "deletions": 17}, "files": [{"sha": "622a138abe9d19cae5ff0945563469b166a1da82", "filename": "src/libcore/ops/arith.rs", "status": "modified", "additions": 4, "deletions": 17, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/216e070db47b6d2476c70c7d0ef30ea3b993786b/src%2Flibcore%2Fops%2Farith.rs", "raw_url": "https://github.com/rust-lang/rust/raw/216e070db47b6d2476c70c7d0ef30ea3b993786b/src%2Flibcore%2Fops%2Farith.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Farith.rs?ref=216e070db47b6d2476c70c7d0ef30ea3b993786b", "patch": "@@ -617,35 +617,22 @@ pub trait Neg {\n     fn neg(self) -> Self::Output;\n }\n \n-macro_rules! neg_impl_core {\n-    ($id:ident => $body:expr, $($t:ty)*) => ($(\n+macro_rules! neg_impl {\n+    ($($t:ty)*) => ($(\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         impl Neg for $t {\n             type Output = $t;\n \n             #[inline]\n             #[rustc_inherit_overflow_checks]\n-            fn neg(self) -> $t { let $id = self; $body }\n+            fn neg(self) -> $t { -self }\n         }\n \n         forward_ref_unop! { impl Neg, neg for $t }\n     )*)\n }\n \n-macro_rules! neg_impl_numeric {\n-    ($($t:ty)*) => { neg_impl_core!{ x => -x, $($t)*} }\n-}\n-\n-#[allow(unused_macros)]\n-macro_rules! neg_impl_unsigned {\n-    ($($t:ty)*) => {\n-        neg_impl_core!{ x => {\n-            !x.wrapping_add(1)\n-        }, $($t)*} }\n-}\n-\n-// neg_impl_unsigned! { usize u8 u16 u32 u64 }\n-neg_impl_numeric! { isize i8 i16 i32 i64 i128 f32 f64 }\n+neg_impl! { isize i8 i16 i32 i64 i128 f32 f64 }\n \n /// The addition assignment operator `+=`.\n ///"}]}