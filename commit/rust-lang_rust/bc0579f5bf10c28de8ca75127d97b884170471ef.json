{"sha": "bc0579f5bf10c28de8ca75127d97b884170471ef", "node_id": "C_kwDOAAsO6NoAKGJjMDU3OWY1YmYxMGMyOGRlOGNhNzUxMjdkOTdiODg0MTcwNDcxZWY", "commit": {"author": {"name": "Alex Ozdemir", "email": "aozdemir@hmc.edu", "date": "2021-12-28T16:19:47Z"}, "committer": {"name": "Alex Ozdemir", "email": "aozdemir@hmc.edu", "date": "2021-12-28T16:19:58Z"}, "message": "test", "tree": {"sha": "bc62932e4c2d4d18bfb4010bb86bcadb6bb266da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc62932e4c2d4d18bfb4010bb86bcadb6bb266da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc0579f5bf10c28de8ca75127d97b884170471ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc0579f5bf10c28de8ca75127d97b884170471ef", "html_url": "https://github.com/rust-lang/rust/commit/bc0579f5bf10c28de8ca75127d97b884170471ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc0579f5bf10c28de8ca75127d97b884170471ef/comments", "author": {"login": "alex-ozdemir", "id": 5809398, "node_id": "MDQ6VXNlcjU4MDkzOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5809398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-ozdemir", "html_url": "https://github.com/alex-ozdemir", "followers_url": "https://api.github.com/users/alex-ozdemir/followers", "following_url": "https://api.github.com/users/alex-ozdemir/following{/other_user}", "gists_url": "https://api.github.com/users/alex-ozdemir/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-ozdemir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-ozdemir/subscriptions", "organizations_url": "https://api.github.com/users/alex-ozdemir/orgs", "repos_url": "https://api.github.com/users/alex-ozdemir/repos", "events_url": "https://api.github.com/users/alex-ozdemir/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-ozdemir/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alex-ozdemir", "id": 5809398, "node_id": "MDQ6VXNlcjU4MDkzOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5809398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-ozdemir", "html_url": "https://github.com/alex-ozdemir", "followers_url": "https://api.github.com/users/alex-ozdemir/followers", "following_url": "https://api.github.com/users/alex-ozdemir/following{/other_user}", "gists_url": "https://api.github.com/users/alex-ozdemir/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-ozdemir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-ozdemir/subscriptions", "organizations_url": "https://api.github.com/users/alex-ozdemir/orgs", "repos_url": "https://api.github.com/users/alex-ozdemir/repos", "events_url": "https://api.github.com/users/alex-ozdemir/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-ozdemir/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba70842c625abed2a61aa84dd0a7bd4b7b874063", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba70842c625abed2a61aa84dd0a7bd4b7b874063", "html_url": "https://github.com/rust-lang/rust/commit/ba70842c625abed2a61aa84dd0a7bd4b7b874063"}], "stats": {"total": 48, "additions": 34, "deletions": 14}, "files": [{"sha": "de60e284cad1c29ec593bf9b9278c389d203bb8a", "filename": "clippy_lints/src/identity_op.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc0579f5bf10c28de8ca75127d97b884170471ef/clippy_lints%2Fsrc%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc0579f5bf10c28de8ca75127d97b884170471ef/clippy_lints%2Fsrc%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_op.rs?ref=bc0579f5bf10c28de8ca75127d97b884170471ef", "patch": "@@ -62,8 +62,8 @@ impl<'tcx> LateLintPass<'tcx> for IdentityOp {\n \n fn is_allowed(cx: &LateContext<'_>, cmp: BinOp, left: &Expr<'_>, right: &Expr<'_>) -> bool {\n     // This lint applies to integers\n-    !cx.typeck_results().expr_ty(left).is_integral()\n-        || !cx.typeck_results().expr_ty(right).is_integral()\n+    !cx.typeck_results().expr_ty(left).peel_refs().is_integral()\n+        || !cx.typeck_results().expr_ty(right).peel_refs().is_integral()\n         // `1 << 0` is a common pattern in bit manipulation code\n         || (cmp.node == BinOpKind::Shl\n             && constant_simple(cx, cx.typeck_results(), right) == Some(Constant::Int(0))"}, {"sha": "a3985b68fbbb15db4a6e7031177a39dc93330838", "filename": "tests/ui/identity_op.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bc0579f5bf10c28de8ca75127d97b884170471ef/tests%2Fui%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc0579f5bf10c28de8ca75127d97b884170471ef/tests%2Fui%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_op.rs?ref=bc0579f5bf10c28de8ca75127d97b884170471ef", "patch": "@@ -2,6 +2,16 @@ const ONE: i64 = 1;\n const NEG_ONE: i64 = -1;\n const ZERO: i64 = 0;\n \n+struct A(String);\n+\n+impl std::ops::Shl<i32> for A {\n+    type Output = A;\n+    fn shl(mut self, other: i32) -> Self {\n+        self.0.push_str(&format!(\"{}\", other));\n+        self\n+    }\n+}\n+\n #[allow(\n     clippy::eq_op,\n     clippy::no_effect,\n@@ -38,4 +48,8 @@ fn main() {\n     42 << 0;\n     1 >> 0;\n     42 >> 0;\n+    &x >> 0;\n+\n+    let mut a = A(\"\".into());\n+    let b = a << 0; // no error: non-integer\n }"}, {"sha": "5b63eb9cc4fc2cb8f0efa6fcef2c766c2fb14a3e", "filename": "tests/ui/identity_op.stderr", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/bc0579f5bf10c28de8ca75127d97b884170471ef/tests%2Fui%2Fidentity_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc0579f5bf10c28de8ca75127d97b884170471ef/tests%2Fui%2Fidentity_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_op.stderr?ref=bc0579f5bf10c28de8ca75127d97b884170471ef", "patch": "@@ -1,70 +1,76 @@\n error: the operation is ineffective. Consider reducing it to `x`\n-  --> $DIR/identity_op.rs:16:5\n+  --> $DIR/identity_op.rs:26:5\n    |\n LL |     x + 0;\n    |     ^^^^^\n    |\n    = note: `-D clippy::identity-op` implied by `-D warnings`\n \n error: the operation is ineffective. Consider reducing it to `x`\n-  --> $DIR/identity_op.rs:17:5\n+  --> $DIR/identity_op.rs:27:5\n    |\n LL |     x + (1 - 1);\n    |     ^^^^^^^^^^^\n \n error: the operation is ineffective. Consider reducing it to `x`\n-  --> $DIR/identity_op.rs:19:5\n+  --> $DIR/identity_op.rs:29:5\n    |\n LL |     0 + x;\n    |     ^^^^^\n \n error: the operation is ineffective. Consider reducing it to `x`\n-  --> $DIR/identity_op.rs:22:5\n+  --> $DIR/identity_op.rs:32:5\n    |\n LL |     x | (0);\n    |     ^^^^^^^\n \n error: the operation is ineffective. Consider reducing it to `x`\n-  --> $DIR/identity_op.rs:25:5\n+  --> $DIR/identity_op.rs:35:5\n    |\n LL |     x * 1;\n    |     ^^^^^\n \n error: the operation is ineffective. Consider reducing it to `x`\n-  --> $DIR/identity_op.rs:26:5\n+  --> $DIR/identity_op.rs:36:5\n    |\n LL |     1 * x;\n    |     ^^^^^\n \n error: the operation is ineffective. Consider reducing it to `x`\n-  --> $DIR/identity_op.rs:32:5\n+  --> $DIR/identity_op.rs:42:5\n    |\n LL |     -1 & x;\n    |     ^^^^^^\n \n error: the operation is ineffective. Consider reducing it to `u`\n-  --> $DIR/identity_op.rs:35:5\n+  --> $DIR/identity_op.rs:45:5\n    |\n LL |     u & 255;\n    |     ^^^^^^^\n \n error: the operation is ineffective. Consider reducing it to `42`\n-  --> $DIR/identity_op.rs:38:5\n+  --> $DIR/identity_op.rs:48:5\n    |\n LL |     42 << 0;\n    |     ^^^^^^^\n \n error: the operation is ineffective. Consider reducing it to `1`\n-  --> $DIR/identity_op.rs:39:5\n+  --> $DIR/identity_op.rs:49:5\n    |\n LL |     1 >> 0;\n    |     ^^^^^^\n \n error: the operation is ineffective. Consider reducing it to `42`\n-  --> $DIR/identity_op.rs:40:5\n+  --> $DIR/identity_op.rs:50:5\n    |\n LL |     42 >> 0;\n    |     ^^^^^^^\n \n-error: aborting due to 11 previous errors\n+error: the operation is ineffective. Consider reducing it to `&x`\n+  --> $DIR/identity_op.rs:51:5\n+   |\n+LL |     &x >> 0;\n+   |     ^^^^^^^\n+\n+error: aborting due to 12 previous errors\n "}]}