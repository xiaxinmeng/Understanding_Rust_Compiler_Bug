{"sha": "a135ced5ce76a842c85a9b62baccefc5e53fb31c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExMzVjZWQ1Y2U3NmE4NDJjODVhOWI2MmJhY2NlZmM1ZTUzZmIzMWM=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-03-16T13:53:22Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-04-23T11:00:23Z"}, "message": "Fix ui test blessing when a test has an empty stderr file after having had content there before the current changes", "tree": {"sha": "da8a7f783a2f44a31ccbcf839c5e843508ee3d48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da8a7f783a2f44a31ccbcf839c5e843508ee3d48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a135ced5ce76a842c85a9b62baccefc5e53fb31c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a135ced5ce76a842c85a9b62baccefc5e53fb31c", "html_url": "https://github.com/rust-lang/rust/commit/a135ced5ce76a842c85a9b62baccefc5e53fb31c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a135ced5ce76a842c85a9b62baccefc5e53fb31c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66f7a5d92f5adb9053bf66e0bf8f6d31d404870d", "url": "https://api.github.com/repos/rust-lang/rust/commits/66f7a5d92f5adb9053bf66e0bf8f6d31d404870d", "html_url": "https://github.com/rust-lang/rust/commit/66f7a5d92f5adb9053bf66e0bf8f6d31d404870d"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "1dd5adb2209ef43b9f700117587fe3fe29632f15", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a135ced5ce76a842c85a9b62baccefc5e53fb31c/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a135ced5ce76a842c85a9b62baccefc5e53fb31c/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=a135ced5ce76a842c85a9b62baccefc5e53fb31c", "patch": "@@ -3338,6 +3338,10 @@ impl<'test> TestCx<'test> {\n     }\n \n     fn delete_file(&self, file: &PathBuf) {\n+        if !file.exists() {\n+            // Deleting a nonexistant file would error.\n+            return;\n+        }\n         if let Err(e) = fs::remove_file(file) {\n             self.fatal(&format!(\"failed to delete `{}`: {}\", file.display(), e,));\n         }\n@@ -3400,7 +3404,7 @@ impl<'test> TestCx<'test> {\n         let examined_content =\n             self.load_expected_output_from_path(&examined_path).unwrap_or_else(|_| String::new());\n \n-        if examined_path.exists() && canon_content == &examined_content {\n+        if canon_content == &examined_content {\n             self.delete_file(&examined_path);\n         }\n     }"}]}