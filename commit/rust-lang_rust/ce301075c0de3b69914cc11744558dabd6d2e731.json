{"sha": "ce301075c0de3b69914cc11744558dabd6d2e731", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlMzAxMDc1YzBkZTNiNjk5MTRjYzExNzQ0NTU4ZGFiZDZkMmU3MzE=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-23T12:58:17Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-23T16:57:00Z"}, "message": "Rename StableHashingContextLike to HashStableContext.", "tree": {"sha": "bb25cdd797d5e2bdda2cc4ef9153da3dd2080bf1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb25cdd797d5e2bdda2cc4ef9153da3dd2080bf1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce301075c0de3b69914cc11744558dabd6d2e731", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce301075c0de3b69914cc11744558dabd6d2e731", "html_url": "https://github.com/rust-lang/rust/commit/ce301075c0de3b69914cc11744558dabd6d2e731", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce301075c0de3b69914cc11744558dabd6d2e731/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9efd3205b57aaa8908a1eca337ab8336cdb16bc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9efd3205b57aaa8908a1eca337ab8336cdb16bc2", "html_url": "https://github.com/rust-lang/rust/commit/9efd3205b57aaa8908a1eca337ab8336cdb16bc2"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "55c02074fce7ceaf4a00bff9ee5c1cd82f763900", "filename": "src/librustc/ich/hcx.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce301075c0de3b69914cc11744558dabd6d2e731/src%2Flibrustc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce301075c0de3b69914cc11744558dabd6d2e731/src%2Flibrustc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fhcx.rs?ref=ce301075c0de3b69914cc11744558dabd6d2e731", "patch": "@@ -280,7 +280,7 @@ impl<'a> ToStableHashKey<StableHashingContext<'a>> for ast::NodeId {\n     }\n }\n \n-impl<'a> syntax_pos::StableHashingContextLike for StableHashingContext<'a> {\n+impl<'a> syntax_pos::HashStableContext for StableHashingContext<'a> {\n     /// Hashes a span in a stable way. We can't directly hash the span's `BytePos`\n     /// fields (that would be similar to hashing pointers, since those are just\n     /// offsets into the `SourceMap`). Instead, we hash the (file name, line, column)"}, {"sha": "2d7db94bf8c6555d304d11c13a9abbc3eb97a866", "filename": "src/librustc/ich/impls_syntax.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce301075c0de3b69914cc11744558dabd6d2e731/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce301075c0de3b69914cc11744558dabd6d2e731/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_syntax.rs?ref=ce301075c0de3b69914cc11744558dabd6d2e731", "patch": "@@ -16,7 +16,7 @@ use crate::hir::def_id::{DefId, CrateNum, CRATE_DEF_INDEX};\n use smallvec::SmallVec;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n \n-impl<'ctx> rustc_target::StableHashingContextLike for StableHashingContext<'ctx> {}\n+impl<'ctx> rustc_target::HashStableContext for StableHashingContext<'ctx> {}\n \n impl<'a> HashStable<StableHashingContext<'a>> for ast::Lifetime {\n     fn hash_stable(&self, hcx: &mut StableHashingContext<'a>, hasher: &mut StableHasher) {\n@@ -65,7 +65,7 @@ impl<'a> HashStable<StableHashingContext<'a>> for ast::Attribute {\n     }\n }\n \n-impl<'ctx> syntax::StableHashingContextLike for StableHashingContext<'ctx> {\n+impl<'ctx> syntax::HashStableContext for StableHashingContext<'ctx> {\n     fn hash_stable_tokenkind(&mut self, tokenkind: &token::TokenKind, hasher: &mut StableHasher) {\n         mem::discriminant(tokenkind).hash_stable(self, hasher);\n         match *tokenkind {"}, {"sha": "103fcd0e8e7bd79eda8cae46bc217446bb241f86", "filename": "src/librustc_macros/src/hash_stable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce301075c0de3b69914cc11744558dabd6d2e731/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce301075c0de3b69914cc11744558dabd6d2e731/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs?ref=ce301075c0de3b69914cc11744558dabd6d2e731", "patch": "@@ -51,7 +51,7 @@ pub fn hash_stable_generic_derive(mut s: synstructure::Structure<'_>) -> proc_ma\n     let generic: syn::GenericParam = parse_quote!(__CTX);\n     s.add_bounds(synstructure::AddBounds::Generics);\n     s.add_impl_generic(generic);\n-    s.add_where_predicate(parse_quote!{ __CTX: crate::StableHashingContextLike });\n+    s.add_where_predicate(parse_quote!{ __CTX: crate::HashStableContext });\n     let body = s.each(|bi| {\n         let attrs = parse_attributes(bi.ast());\n         if attrs.ignore {"}, {"sha": "5582eaf47c426f09b3409bd78b68dc7edc2e0c3e", "filename": "src/librustc_target/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce301075c0de3b69914cc11744558dabd6d2e731/src%2Flibrustc_target%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce301075c0de3b69914cc11744558dabd6d2e731/src%2Flibrustc_target%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Flib.rs?ref=ce301075c0de3b69914cc11744558dabd6d2e731", "patch": "@@ -21,4 +21,4 @@ pub mod spec;\n /// Requirements for a `StableHashingContext` to be used in this crate.\n /// This is a hack to allow using the `HashStable_Generic` derive macro\n /// instead of implementing everything in librustc.\n-pub trait StableHashingContextLike {}\n+pub trait HashStableContext {}"}, {"sha": "579d26579392ecc6fd32c7baddfbb337f0be59eb", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce301075c0de3b69914cc11744558dabd6d2e731/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce301075c0de3b69914cc11744558dabd6d2e731/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=ce301075c0de3b69914cc11744558dabd6d2e731", "patch": "@@ -115,6 +115,6 @@ pub mod early_buffered_lints;\n /// Requirements for a `StableHashingContext` to be used in this crate.\n /// This is a hack to allow using the `HashStable_Generic` derive macro\n /// instead of implementing everything in librustc.\n-pub trait StableHashingContextLike: syntax_pos::StableHashingContextLike {\n+pub trait HashStableContext: syntax_pos::HashStableContext {\n     fn hash_stable_tokenkind(&mut self, tokenkind: &token::TokenKind, hasher: &mut StableHasher);\n }"}, {"sha": "08afca921fc920d5340331f69a85b9eed5b3710e", "filename": "src/libsyntax/token.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce301075c0de3b69914cc11744558dabd6d2e731/src%2Flibsyntax%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce301075c0de3b69914cc11744558dabd6d2e731/src%2Flibsyntax%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftoken.rs?ref=ce301075c0de3b69914cc11744558dabd6d2e731", "patch": "@@ -264,7 +264,7 @@ pub enum TokenKind {\n rustc_data_structures::static_assert_size!(TokenKind, 16);\n \n impl<CTX> HashStable<CTX> for TokenKind\n-    where CTX: crate::StableHashingContextLike\n+    where CTX: crate::HashStableContext\n {\n     fn hash_stable(&self, hcx: &mut CTX, hasher: &mut StableHasher) {\n         hcx.hash_stable_tokenkind(self, hasher)"}, {"sha": "5ec99fa2f08e6334e22c77b8570c98d4f66f70a2", "filename": "src/libsyntax/tokenstream.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce301075c0de3b69914cc11744558dabd6d2e731/src%2Flibsyntax%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce301075c0de3b69914cc11744558dabd6d2e731/src%2Flibsyntax%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftokenstream.rs?ref=ce301075c0de3b69914cc11744558dabd6d2e731", "patch": "@@ -54,7 +54,7 @@ where\n {}\n \n impl<CTX> HashStable<CTX> for TokenTree\n-    where CTX: crate::StableHashingContextLike\n+    where CTX: crate::HashStableContext\n {\n     fn hash_stable(&self, hcx: &mut CTX, hasher: &mut StableHasher) {\n         mem::discriminant(self).hash_stable(hcx, hasher);\n@@ -138,7 +138,7 @@ impl TokenTree {\n }\n \n impl<CTX> HashStable<CTX> for TokenStream\n-    where CTX: crate::StableHashingContextLike\n+    where CTX: crate::HashStableContext\n {\n     fn hash_stable(&self, hcx: &mut CTX, hasher: &mut StableHasher) {\n         for sub_tt in self.trees() {"}, {"sha": "1c66858a915c66695e587828c06e3ebb8c420407", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce301075c0de3b69914cc11744558dabd6d2e731/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce301075c0de3b69914cc11744558dabd6d2e731/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=ce301075c0de3b69914cc11744558dabd6d2e731", "patch": "@@ -246,7 +246,7 @@ impl Ord for Span {\n }\n \n impl<CTX> HashStable<CTX> for Span\n-    where CTX: StableHashingContextLike\n+    where CTX: HashStableContext\n {\n     fn hash_stable(&self, ctx: &mut CTX, hasher: &mut StableHasher) {\n         ctx.hash_stable_span(self, hasher)\n@@ -1574,6 +1574,6 @@ fn lookup_line(lines: &[BytePos], pos: BytePos) -> isize {\n /// Requirements for a `StableHashingContext` to be used in this crate.\n /// This is a hack to allow using the `HashStable_Generic` derive macro\n /// instead of implementing everything in librustc.\n-pub trait StableHashingContextLike {\n+pub trait HashStableContext {\n     fn hash_stable_span(&mut self, span: &Span, hasher: &mut StableHasher);\n }"}]}