{"sha": "e0c97196724d82335ee0dbb07cb3f3166f91c009", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwYzk3MTk2NzI0ZDgyMzM1ZWUwZGJiMDdjYjNmMzE2NmY5MWMwMDk=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-05-24T10:41:13Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-05-24T10:41:13Z"}, "message": "Avoid a double drop in Vec::dedup if a destructor panics", "tree": {"sha": "dd208e250a1392ed2d56b5307f7d327fd1360d55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd208e250a1392ed2d56b5307f7d327fd1360d55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0c97196724d82335ee0dbb07cb3f3166f91c009", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0c97196724d82335ee0dbb07cb3f3166f91c009", "html_url": "https://github.com/rust-lang/rust/commit/e0c97196724d82335ee0dbb07cb3f3166f91c009", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0c97196724d82335ee0dbb07cb3f3166f91c009/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13bf0b2a3cc38ba9ed9a1542d8f2a7e98059a8aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/13bf0b2a3cc38ba9ed9a1542d8f2a7e98059a8aa", "html_url": "https://github.com/rust-lang/rust/commit/13bf0b2a3cc38ba9ed9a1542d8f2a7e98059a8aa"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "105c60e7bf0851c270b853db941db50806f43350", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e0c97196724d82335ee0dbb07cb3f3166f91c009/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0c97196724d82335ee0dbb07cb3f3166f91c009/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=e0c97196724d82335ee0dbb07cb3f3166f91c009", "patch": "@@ -1619,6 +1619,8 @@ impl<T, A: Allocator> Vec<T, A> {\n                 let prev_ptr = ptr.add(gap.write.wrapping_sub(1));\n \n                 if same_bucket(&mut *read_ptr, &mut *prev_ptr) {\n+                    // Increase `gap.read` now since the drop may panic.\n+                    gap.read += 1;\n                     /* We have found duplicate, drop it in-place */\n                     ptr::drop_in_place(read_ptr);\n                 } else {\n@@ -1631,9 +1633,8 @@ impl<T, A: Allocator> Vec<T, A> {\n \n                     /* We have filled that place, so go further */\n                     gap.write += 1;\n+                    gap.read += 1;\n                 }\n-\n-                gap.read += 1;\n             }\n \n             /* Technically we could let `gap` clean up with its Drop, but"}]}