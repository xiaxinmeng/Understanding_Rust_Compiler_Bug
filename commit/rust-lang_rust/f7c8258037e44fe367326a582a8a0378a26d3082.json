{"sha": "f7c8258037e44fe367326a582a8a0378a26d3082", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3YzgyNTgwMzdlNDRmZTM2NzMyNmE1ODJhOGEwMzc4YTI2ZDMwODI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-09-25T21:20:33Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-10-20T23:15:14Z"}, "message": "new version for bootstrap", "tree": {"sha": "6606b3b031f33ff9b82bd10360d2a0e54444fc71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6606b3b031f33ff9b82bd10360d2a0e54444fc71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7c8258037e44fe367326a582a8a0378a26d3082", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7c8258037e44fe367326a582a8a0378a26d3082", "html_url": "https://github.com/rust-lang/rust/commit/f7c8258037e44fe367326a582a8a0378a26d3082", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7c8258037e44fe367326a582a8a0378a26d3082/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb2813bcab3b031b92566daaf0c4debb22aa0f70", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb2813bcab3b031b92566daaf0c4debb22aa0f70", "html_url": "https://github.com/rust-lang/rust/commit/fb2813bcab3b031b92566daaf0c4debb22aa0f70"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "99185e4ca5b3ab0651a8521859a3cd094ee6739d", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f7c8258037e44fe367326a582a8a0378a26d3082/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7c8258037e44fe367326a582a8a0378a26d3082/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=f7c8258037e44fe367326a582a8a0378a26d3082", "patch": "@@ -405,7 +405,7 @@ impl Step for Standalone {\n             cmd.arg(\"--html-after-content\").arg(&footer)\n                .arg(\"--html-before-content\").arg(&version_info)\n                .arg(\"--html-in-header\").arg(&favicon)\n-               .arg(\"--index-page\").arg(\"src/doc/index.md\")\n+               .arg(\"--index-page\").arg(&builder.src.join(\"src/doc/index.md\"))\n                .arg(\"--markdown-playground-url\")\n                .arg(\"https://play.rust-lang.org/\")\n                .arg(\"-o\").arg(&out)\n@@ -482,22 +482,27 @@ impl Step for Std {\n         let my_out = builder.crate_doc_out(target);\n         t!(symlink_dir_force(&builder.config, &my_out, &out_dir));\n \n-        let mut cargo = builder.cargo(compiler, Mode::Std, target, \"doc\");\n-        compile::std_cargo(builder, &compiler, target, &mut cargo);\n+        let run_cargo_rustdoc_for = |package: &str| {\n+            let mut cargo = builder.cargo(compiler, Mode::Std, target, \"rustdoc\");\n+            compile::std_cargo(builder, &compiler, target, &mut cargo);\n \n-        // Keep a whitelist so we do not build internal stdlib crates, these will be\n-        // build by the rustc step later if enabled.\n-        cargo.arg(\"--no-deps\");\n-        for krate in &[\"alloc\", \"core\", \"std\"] {\n-            cargo.arg(\"-p\").arg(krate);\n+            // Keep a whitelist so we do not build internal stdlib crates, these will be\n+            // build by the rustc step later if enabled.\n+            cargo.arg(\"-Z\").arg(\"unstable-options\")\n+                 .arg(\"-p\").arg(package);\n             // Create all crate output directories first to make sure rustdoc uses\n             // relative links.\n             // FIXME: Cargo should probably do this itself.\n-            t!(fs::create_dir_all(out_dir.join(krate)));\n-        }\n+            t!(fs::create_dir_all(out_dir.join(package)));\n+            cargo.arg(\"--\")\n+                 .arg(\"index-page\").arg(&builder.src.join(\"src/doc/index.md\"));\n \n-        builder.run(&mut cargo);\n-        builder.cp_r(&my_out, &out);\n+            builder.run(&mut cargo);\n+            builder.cp_r(&my_out, &out);\n+        };\n+        for krate in &[\"alloc\", \"core\", \"std\"] {\n+            run_cargo_rustdoc_for(krate);\n+        }\n     }\n }\n "}]}