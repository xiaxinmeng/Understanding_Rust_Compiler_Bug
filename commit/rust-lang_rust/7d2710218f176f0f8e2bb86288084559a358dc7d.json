{"sha": "7d2710218f176f0f8e2bb86288084559a358dc7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkMjcxMDIxOGYxNzZmMGY4ZTJiYjg2Mjg4MDg0NTU5YTM1OGRjN2Q=", "commit": {"author": {"name": "Brandon", "email": "brandondong604@hotmail.com", "date": "2021-06-02T06:49:31Z"}, "committer": {"name": "Brandon", "email": "brandondong604@hotmail.com", "date": "2021-06-02T07:59:09Z"}, "message": "Don't show extract into variable assist for unit expressions", "tree": {"sha": "73c9eb261da5cae880a8b4037264ac57ffd4757f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73c9eb261da5cae880a8b4037264ac57ffd4757f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d2710218f176f0f8e2bb86288084559a358dc7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d2710218f176f0f8e2bb86288084559a358dc7d", "html_url": "https://github.com/rust-lang/rust/commit/7d2710218f176f0f8e2bb86288084559a358dc7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d2710218f176f0f8e2bb86288084559a358dc7d/comments", "author": {"login": "brandondong", "id": 13722457, "node_id": "MDQ6VXNlcjEzNzIyNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/13722457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandondong", "html_url": "https://github.com/brandondong", "followers_url": "https://api.github.com/users/brandondong/followers", "following_url": "https://api.github.com/users/brandondong/following{/other_user}", "gists_url": "https://api.github.com/users/brandondong/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandondong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandondong/subscriptions", "organizations_url": "https://api.github.com/users/brandondong/orgs", "repos_url": "https://api.github.com/users/brandondong/repos", "events_url": "https://api.github.com/users/brandondong/events{/privacy}", "received_events_url": "https://api.github.com/users/brandondong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandondong", "id": 13722457, "node_id": "MDQ6VXNlcjEzNzIyNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/13722457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandondong", "html_url": "https://github.com/brandondong", "followers_url": "https://api.github.com/users/brandondong/followers", "following_url": "https://api.github.com/users/brandondong/following{/other_user}", "gists_url": "https://api.github.com/users/brandondong/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandondong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandondong/subscriptions", "organizations_url": "https://api.github.com/users/brandondong/orgs", "repos_url": "https://api.github.com/users/brandondong/repos", "events_url": "https://api.github.com/users/brandondong/events{/privacy}", "received_events_url": "https://api.github.com/users/brandondong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71117e6812f87e014bc8e984e195a75e222ac227", "url": "https://api.github.com/repos/rust-lang/rust/commits/71117e6812f87e014bc8e984e195a75e222ac227", "html_url": "https://github.com/rust-lang/rust/commit/71117e6812f87e014bc8e984e195a75e222ac227"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "46b54a5f54073d937f212540719b987775e0dda2", "filename": "crates/ide_assists/src/handlers/extract_variable.rs", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/7d2710218f176f0f8e2bb86288084559a358dc7d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d2710218f176f0f8e2bb86288084559a358dc7d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs?ref=7d2710218f176f0f8e2bb86288084559a358dc7d", "patch": "@@ -36,6 +36,11 @@ pub(crate) fn extract_variable(acc: &mut Assists, ctx: &AssistContext) -> Option\n         return None;\n     }\n     let to_extract = node.ancestors().find_map(valid_target_expr)?;\n+    if let Some(ty) = ctx.sema.type_of_expr(&to_extract) {\n+        if ty.is_unit() {\n+            return None;\n+        }\n+    }\n     let anchor = Anchor::from(&to_extract)?;\n     let indent = anchor.syntax().prev_sibling_or_token()?.as_token()?.clone();\n     let target = to_extract.syntax().text_range();\n@@ -275,15 +280,23 @@ fn foo() {\n         check_assist(\n             extract_variable,\n             r#\"\n-fn foo() {\n+fn foo() -> i32 {\n     $0bar(1 + 1)$0\n }\n+\n+fn bar(i: i32) -> i32 {\n+    i\n+}\n \"#,\n             r#\"\n-fn foo() {\n+fn foo() -> i32 {\n     let $0bar = bar(1 + 1);\n     bar\n }\n+\n+fn bar(i: i32) -> i32 {\n+    i\n+}\n \"#,\n         )\n     }\n@@ -796,6 +809,22 @@ fn foo() {\n         check_assist_not_applicable(extract_variable, \"fn main() { loop { $0break$0; }; }\");\n     }\n \n+    #[test]\n+    fn test_extract_var_unit_expr_not_applicable() {\n+        check_assist_not_applicable(\n+            extract_variable,\n+            r#\"\n+fn foo() {\n+    let mut i = 3;\n+    $0if i >= 0 {\n+        i += 1;\n+    } else {\n+        i -= 1;\n+    }$0\n+}\"#,\n+        );\n+    }\n+\n     // FIXME: This is not quite correct, but good enough(tm) for the sorting heuristic\n     #[test]\n     fn extract_var_target() {"}]}