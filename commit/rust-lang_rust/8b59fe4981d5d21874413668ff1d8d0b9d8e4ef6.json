{"sha": "8b59fe4981d5d21874413668ff1d8d0b9d8e4ef6", "node_id": "C_kwDOAAsO6NoAKDhiNTlmZTQ5ODFkNWQyMTg3NDQxMzY2OGZmMWQ4ZDBiOWQ4ZTRlZjY", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-16T01:45:33Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-28T22:44:52Z"}, "message": "Shrink `hir::def::Res`.\n\n`Res::SelfTy` currently has two `Option`s. When the second one is `Some`\nthe first one is never consulted. So we can split it into two variants,\n`Res::SelfTyParam` and `Res::SelfTyAlias`, reducing the size of `Res`\nfrom 24 bytes to 12. This then shrinks `hir::Path` and\n`hir::PathSegment`, which are the HIR types that take up the most space.", "tree": {"sha": "9b11c754e82d75d1af32f5e059850b2bf9c6f5f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b11c754e82d75d1af32f5e059850b2bf9c6f5f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b59fe4981d5d21874413668ff1d8d0b9d8e4ef6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b59fe4981d5d21874413668ff1d8d0b9d8e4ef6", "html_url": "https://github.com/rust-lang/rust/commit/8b59fe4981d5d21874413668ff1d8d0b9d8e4ef6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b59fe4981d5d21874413668ff1d8d0b9d8e4ef6/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "html_url": "https://github.com/rust-lang/rust/commit/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "2be22884027e236287443172793398848923310b", "filename": "clippy_lints/src/trait_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b59fe4981d5d21874413668ff1d8d0b9d8e4ef6/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b59fe4981d5d21874413668ff1d8d0b9d8e4ef6/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrait_bounds.rs?ref=8b59fe4981d5d21874413668ff1d8d0b9d8e4ef6", "patch": "@@ -128,7 +128,7 @@ impl<'tcx> LateLintPass<'tcx> for TraitBounds {\n                 if !bound_predicate.span.from_expansion();\n                 if let TyKind::Path(QPath::Resolved(_, Path { segments, .. })) = bound_predicate.bounded_ty.kind;\n                 if let Some(PathSegment {\n-                    res: Res::SelfTy{ trait_: Some(def_id), alias_to: _ }, ..\n+                    res: Res::SelfTyParam { trait_: def_id }, ..\n                 }) = segments.first();\n                 if let Some(\n                     Node::Item("}, {"sha": "2c4f5075e9807bf4f20e6e877a3bbfd6a858369d", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8b59fe4981d5d21874413668ff1d8d0b9d8e4ef6/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b59fe4981d5d21874413668ff1d8d0b9d8e4ef6/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=8b59fe4981d5d21874413668ff1d8d0b9d8e4ef6", "patch": "@@ -206,7 +206,12 @@ impl<'tcx> LateLintPass<'tcx> for UseSelf {\n                 ref types_to_skip,\n             }) = self.stack.last();\n             if let TyKind::Path(QPath::Resolved(_, path)) = hir_ty.kind;\n-            if !matches!(path.res, Res::SelfTy { .. } | Res::Def(DefKind::TyParam, _));\n+            if !matches!(\n+                path.res,\n+                Res::SelfTyParam { .. }\n+                | Res::SelfTyAlias { .. }\n+                | Res::Def(DefKind::TyParam, _)\n+            );\n             if !types_to_skip.contains(&hir_ty.hir_id);\n             let ty = if in_body > 0 {\n                 cx.typeck_results().node_type(hir_ty.hir_id)\n@@ -230,7 +235,7 @@ impl<'tcx> LateLintPass<'tcx> for UseSelf {\n         }\n         match expr.kind {\n             ExprKind::Struct(QPath::Resolved(_, path), ..) => match path.res {\n-                Res::SelfTy { .. } => (),\n+                Res::SelfTyParam { .. } | Res::SelfTyAlias { .. } => (),\n                 Res::Def(DefKind::Variant, _) => lint_path_to_variant(cx, path),\n                 _ => span_lint(cx, path.span),\n             },"}, {"sha": "8f79c07c97724bad6e54a1813678976ce50a6463", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b59fe4981d5d21874413668ff1d8d0b9d8e4ef6/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b59fe4981d5d21874413668ff1d8d0b9d8e4ef6/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=8b59fe4981d5d21874413668ff1d8d0b9d8e4ef6", "patch": "@@ -1535,7 +1535,7 @@ pub fn is_self(slf: &Param<'_>) -> bool {\n \n pub fn is_self_ty(slf: &hir::Ty<'_>) -> bool {\n     if let TyKind::Path(QPath::Resolved(None, path)) = slf.kind {\n-        if let Res::SelfTy { .. } = path.res {\n+        if let Res::SelfTyParam { .. } | Res::SelfTyAlias { .. } = path.res {\n             return true;\n         }\n     }"}]}