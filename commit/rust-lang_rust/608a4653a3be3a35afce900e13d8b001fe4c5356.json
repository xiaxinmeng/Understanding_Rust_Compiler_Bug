{"sha": "608a4653a3be3a35afce900e13d8b001fe4c5356", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwOGE0NjUzYTNiZTNhMzVhZmNlOTAwZTEzZDhiMDAxZmU0YzUzNTY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-04-01T13:51:02Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-04-01T13:51:34Z"}, "message": "Check for and skip dummy macro files", "tree": {"sha": "a34d530935ac15c6e8659d1045bc92a3ed73e7ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a34d530935ac15c6e8659d1045bc92a3ed73e7ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/608a4653a3be3a35afce900e13d8b001fe4c5356", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/608a4653a3be3a35afce900e13d8b001fe4c5356", "html_url": "https://github.com/rust-lang/rust/commit/608a4653a3be3a35afce900e13d8b001fe4c5356", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/608a4653a3be3a35afce900e13d8b001fe4c5356/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "066330e95349f96a2481ec727bfe50f9dbca9951", "url": "https://api.github.com/repos/rust-lang/rust/commits/066330e95349f96a2481ec727bfe50f9dbca9951", "html_url": "https://github.com/rust-lang/rust/commit/066330e95349f96a2481ec727bfe50f9dbca9951"}], "stats": {"total": 136, "additions": 16, "deletions": 120}, "files": [{"sha": "e5f01fb33459020d5a313411e8c5dabffd094991", "filename": "crates/rust-analyzer/src/diagnostics/test_data/handles_macro_location.txt", "status": "modified", "additions": 1, "deletions": 117, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/608a4653a3be3a35afce900e13d8b001fe4c5356/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fhandles_macro_location.txt", "raw_url": "https://github.com/rust-lang/rust/raw/608a4653a3be3a35afce900e13d8b001fe4c5356/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fhandles_macro_location.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fhandles_macro_location.txt?ref=608a4653a3be3a35afce900e13d8b001fe4c5356", "patch": "@@ -21,94 +21,6 @@\n                     character: 26,\n                 },\n             },\n-            severity: Some(\n-                Hint,\n-            ),\n-            code: Some(\n-                String(\n-                    \"E0277\",\n-                ),\n-            ),\n-            code_description: Some(\n-                CodeDescription {\n-                    href: Url {\n-                        scheme: \"https\",\n-                        username: \"\",\n-                        password: None,\n-                        host: Some(\n-                            Domain(\n-                                \"doc.rust-lang.org\",\n-                            ),\n-                        ),\n-                        port: None,\n-                        path: \"/error-index.html\",\n-                        query: None,\n-                        fragment: Some(\n-                            \"E0277\",\n-                        ),\n-                    },\n-                },\n-            ),\n-            source: Some(\n-                \"rustc\",\n-            ),\n-            message: \"can\\'t compare `{integer}` with `&str`\\nthe trait `std::cmp::PartialEq<&str>` is not implemented for `{integer}`\",\n-            related_information: Some(\n-                [\n-                    DiagnosticRelatedInformation {\n-                        location: Location {\n-                            uri: Url {\n-                                scheme: \"file\",\n-                                username: \"\",\n-                                password: None,\n-                                host: None,\n-                                port: None,\n-                                path: \"/test/%3C::core::macros::assert_eq%20macros%3E\",\n-                                query: None,\n-                                fragment: None,\n-                            },\n-                            range: Range {\n-                                start: Position {\n-                                    line: 6,\n-                                    character: 30,\n-                                },\n-                                end: Position {\n-                                    line: 6,\n-                                    character: 32,\n-                                },\n-                            },\n-                        },\n-                        message: \"Exact error occurred here\",\n-                    },\n-                ],\n-            ),\n-            tags: None,\n-            data: None,\n-        },\n-        fixes: [],\n-    },\n-    MappedRustDiagnostic {\n-        url: Url {\n-            scheme: \"file\",\n-            username: \"\",\n-            password: None,\n-            host: None,\n-            port: None,\n-            path: \"/test/%3C::core::macros::assert_eq%20macros%3E\",\n-            query: None,\n-            fragment: None,\n-        },\n-        diagnostic: Diagnostic {\n-            range: Range {\n-                start: Position {\n-                    line: 6,\n-                    character: 30,\n-                },\n-                end: Position {\n-                    line: 6,\n-                    character: 32,\n-                },\n-            },\n             severity: Some(\n                 Error,\n             ),\n@@ -141,35 +53,7 @@\n                 \"rustc\",\n             ),\n             message: \"can\\'t compare `{integer}` with `&str`\\nthe trait `std::cmp::PartialEq<&str>` is not implemented for `{integer}`\",\n-            related_information: Some(\n-                [\n-                    DiagnosticRelatedInformation {\n-                        location: Location {\n-                            uri: Url {\n-                                scheme: \"file\",\n-                                username: \"\",\n-                                password: None,\n-                                host: None,\n-                                port: None,\n-                                path: \"/test/src/main.rs\",\n-                                query: None,\n-                                fragment: None,\n-                            },\n-                            range: Range {\n-                                start: Position {\n-                                    line: 1,\n-                                    character: 4,\n-                                },\n-                                end: Position {\n-                                    line: 1,\n-                                    character: 26,\n-                                },\n-                            },\n-                        },\n-                        message: \"Error originated from macro call here\",\n-                    },\n-                ],\n-            ),\n+            related_information: None,\n             tags: None,\n             data: None,\n         },"}, {"sha": "e2f319f6b0fd2941057b6fd0efea33f7ba176b6a", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/608a4653a3be3a35afce900e13d8b001fe4c5356/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/608a4653a3be3a35afce900e13d8b001fe4c5356/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=608a4653a3be3a35afce900e13d8b001fe4c5356", "patch": "@@ -34,6 +34,12 @@ fn diagnostic_severity(\n     Some(res)\n }\n \n+/// Checks whether a file name is from macro invocation and does not refer to an actual file.\n+fn is_dummy_macro_file(file_name: &str) -> bool {\n+    // FIXME: current rustc does not seem to emit `<macro file>` files anymore?\n+    file_name.starts_with('<') && file_name.ends_with('>')\n+}\n+\n /// Converts a Rust span to a LSP location\n fn location(workspace_root: &Path, span: &DiagnosticSpan) -> lsp_types::Location {\n     let file_name = workspace_root.join(&span.file_name);\n@@ -54,14 +60,16 @@ fn location(workspace_root: &Path, span: &DiagnosticSpan) -> lsp_types::Location\n /// workspace into account and tries to avoid those, in case macros are involved.\n fn primary_location(workspace_root: &Path, span: &DiagnosticSpan) -> lsp_types::Location {\n     let span_stack = std::iter::successors(Some(span), |span| Some(&span.expansion.as_ref()?.span));\n-    for span in span_stack {\n+    for span in span_stack.clone() {\n         let abs_path = workspace_root.join(&span.file_name);\n-        if abs_path.starts_with(workspace_root) {\n+        if !is_dummy_macro_file(&span.file_name) && abs_path.starts_with(workspace_root) {\n             return location(workspace_root, span);\n         }\n     }\n \n-    location(workspace_root, span)\n+    // Fall back to the outermost macro invocation if no suitable span comes up.\n+    let last_span = span_stack.last().unwrap();\n+    location(workspace_root, last_span)\n }\n \n /// Converts a secondary Rust span to a LSP related information\n@@ -255,6 +263,10 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n                 Some(&span.expansion.as_ref()?.span)\n             });\n             for (i, span) in span_stack.enumerate() {\n+                if is_dummy_macro_file(&span.file_name) {\n+                    continue;\n+                }\n+\n                 // First span is the original diagnostic, others are macro call locations that\n                 // generated that code.\n                 let is_in_macro_call = i != 0;"}]}