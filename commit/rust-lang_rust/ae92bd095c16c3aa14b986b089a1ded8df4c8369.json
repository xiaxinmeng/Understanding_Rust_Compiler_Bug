{"sha": "ae92bd095c16c3aa14b986b089a1ded8df4c8369", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlOTJiZDA5NWMxNmMzYWExNGI5ODZiMDg5YTFkZWQ4ZGY0YzgzNjk=", "commit": {"author": {"name": "gaurikholkar", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2017-06-15T20:53:49Z"}, "committer": {"name": "gaurikholkar", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2017-06-29T13:37:18Z"}, "message": "Interchange ^ and -", "tree": {"sha": "55699450d05190c624803df521a15681f8dadc01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55699450d05190c624803df521a15681f8dadc01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae92bd095c16c3aa14b986b089a1ded8df4c8369", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae92bd095c16c3aa14b986b089a1ded8df4c8369", "html_url": "https://github.com/rust-lang/rust/commit/ae92bd095c16c3aa14b986b089a1ded8df4c8369", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae92bd095c16c3aa14b986b089a1ded8df4c8369/comments", "author": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bed5f0094b632ec2a10d73074fcd02e289e20cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bed5f0094b632ec2a10d73074fcd02e289e20cc", "html_url": "https://github.com/rust-lang/rust/commit/4bed5f0094b632ec2a10d73074fcd02e289e20cc"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "77af22169102d7b9a07ee8c9879f52e75cf662b4", "filename": "src/librustc/infer/error_reporting/named_anon_conflict.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae92bd095c16c3aa14b986b089a1ded8df4c8369/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnamed_anon_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae92bd095c16c3aa14b986b089a1ded8df4c8369/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnamed_anon_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnamed_anon_conflict.rs?ref=ae92bd095c16c3aa14b986b089a1ded8df4c8369", "patch": "@@ -88,7 +88,7 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n \n         if let Some(simple_name) = var.pat.simple_name() {\n             struct_span_err!(self.tcx.sess,\n-                             var.pat.span,\n+                             span,\n                              E0611,\n                              \"explicit lifetime required in the type of `{}`\",\n                              simple_name)\n@@ -101,7 +101,7 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n \n         } else {\n             struct_span_err!(self.tcx.sess,\n-                             var.pat.span,\n+                             span,\n                              E0611,\n                              \"explicit lifetime required in parameter type\")\n                     .span_label(var.pat.span,"}, {"sha": "ada7af8c1e46f755784797dba2cbe58a6998f7e7", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae92bd095c16c3aa14b986b089a1ded8df4c8369/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae92bd095c16c3aa14b986b089a1ded8df4c8369/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-2.stderr?ref=ae92bd095c16c3aa14b986b089a1ded8df4c8369", "patch": "@@ -1,10 +1,10 @@\n error[E0611]: explicit lifetime required in the type of `x`\n-  --> $DIR/ex1-return-one-existing-name-if-else-2.rs:11:12\n+  --> $DIR/ex1-return-one-existing-name-if-else-2.rs:12:16\n    |\n 11 | fn foo<'a>(x: &i32, y: &'a i32) -> &'a i32 {\n-   |            ^ consider changing the type of `x` to `&'a i32`\n+   |            - consider changing the type of `x` to `&'a i32`\n 12 |     if x > y { x } else { y }\n-   |                - lifetime `'a` required\n+   |                ^ lifetime `'a` required\n \n error: aborting due to previous error(s)\n "}, {"sha": "58aab7113944057c05e01c06ed470a1610e6f752", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else-3.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae92bd095c16c3aa14b986b089a1ded8df4c8369/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae92bd095c16c3aa14b986b089a1ded8df4c8369/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-3.stderr?ref=ae92bd095c16c3aa14b986b089a1ded8df4c8369", "patch": "@@ -1,10 +1,10 @@\n error[E0611]: explicit lifetime required in parameter type\n-  --> $DIR/ex1-return-one-existing-name-if-else-3.rs:11:12\n+  --> $DIR/ex1-return-one-existing-name-if-else-3.rs:12:27\n    |\n 11 | fn foo<'a>((x, y): (&'a i32, &i32)) -> &'a i32 {\n-   |            ^^^^^^ consider changing type to `(&'a i32, &'a i32)`\n+   |            ------ consider changing type to `(&'a i32, &'a i32)`\n 12 |     if x > y { x } else { y }\n-   |                           - lifetime `'a` required\n+   |                           ^ lifetime `'a` required\n \n error: aborting due to previous error(s)\n "}, {"sha": "837fa141bf1c20bccb96f8c7d56043e1b911cb0a", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae92bd095c16c3aa14b986b089a1ded8df4c8369/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae92bd095c16c3aa14b986b089a1ded8df4c8369/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr?ref=ae92bd095c16c3aa14b986b089a1ded8df4c8369", "patch": "@@ -1,10 +1,10 @@\n error[E0611]: explicit lifetime required in the type of `y`\n-  --> $DIR/ex1-return-one-existing-name-if-else.rs:11:24\n+  --> $DIR/ex1-return-one-existing-name-if-else.rs:12:27\n    |\n 11 | fn foo<'a>(x: &'a i32, y: &i32) -> &'a i32 {\n-   |                        ^ consider changing the type of `y` to `&'a i32`\n+   |                        - consider changing the type of `y` to `&'a i32`\n 12 |     if x > y { x } else { y }\n-   |                           - lifetime `'a` required\n+   |                           ^ lifetime `'a` required\n \n error: aborting due to previous error(s)\n "}, {"sha": "a16dac672aeda15e9f4a313fea142d38acbf3ebb", "filename": "src/test/ui/lifetime-errors/ex2a-push-one-existing-name-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae92bd095c16c3aa14b986b089a1ded8df4c8369/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae92bd095c16c3aa14b986b089a1ded8df4c8369/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name-2.stderr?ref=ae92bd095c16c3aa14b986b089a1ded8df4c8369", "patch": "@@ -1,10 +1,10 @@\n error[E0611]: explicit lifetime required in the type of `x`\n-  --> $DIR/ex2a-push-one-existing-name-2.rs:15:12\n+  --> $DIR/ex2a-push-one-existing-name-2.rs:16:12\n    |\n 15 | fn foo<'a>(x: Ref<i32>, y: &mut Vec<Ref<'a, i32>>) {\n-   |            ^ consider changing the type of `x` to `Ref<'a, i32>`\n+   |            - consider changing the type of `x` to `Ref<'a, i32>`\n 16 |     y.push(x);\n-   |            - lifetime `'a` required\n+   |            ^ lifetime `'a` required\n \n error: aborting due to previous error(s)\n "}, {"sha": "537090aa67de7e736b4fca602e5cbff6cea0f93f", "filename": "src/test/ui/lifetime-errors/ex2a-push-one-existing-name.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae92bd095c16c3aa14b986b089a1ded8df4c8369/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae92bd095c16c3aa14b986b089a1ded8df4c8369/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr?ref=ae92bd095c16c3aa14b986b089a1ded8df4c8369", "patch": "@@ -1,10 +1,10 @@\n error[E0611]: explicit lifetime required in the type of `y`\n-  --> $DIR/ex2a-push-one-existing-name.rs:15:39\n+  --> $DIR/ex2a-push-one-existing-name.rs:16:12\n    |\n 15 | fn foo<'a>(x: &mut Vec<Ref<'a, i32>>, y: Ref<i32>) {\n-   |                                       ^ consider changing the type of `y` to `Ref<'a, i32>`\n+   |                                       - consider changing the type of `y` to `Ref<'a, i32>`\n 16 |     x.push(y);\n-   |            - lifetime `'a` required\n+   |            ^ lifetime `'a` required\n \n error: aborting due to previous error(s)\n "}]}