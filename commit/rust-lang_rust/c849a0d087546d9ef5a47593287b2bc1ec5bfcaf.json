{"sha": "c849a0d087546d9ef5a47593287b2bc1ec5bfcaf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4NDlhMGQwODc1NDZkOWVmNWE0NzU5MzI4N2IyYmMxZWM1YmZjYWY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-05-12T10:55:55Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-05-12T10:55:55Z"}, "message": "Add a repro example for not propagating constants of partially const initialized variables", "tree": {"sha": "cb050acb0c1f6cdb3d0c4aaf129c98724e72b130", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb050acb0c1f6cdb3d0c4aaf129c98724e72b130"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c849a0d087546d9ef5a47593287b2bc1ec5bfcaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c849a0d087546d9ef5a47593287b2bc1ec5bfcaf", "html_url": "https://github.com/rust-lang/rust/commit/c849a0d087546d9ef5a47593287b2bc1ec5bfcaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c849a0d087546d9ef5a47593287b2bc1ec5bfcaf/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09c817eeb29e764cfc12d0a8d94841e3ffe34023", "url": "https://api.github.com/repos/rust-lang/rust/commits/09c817eeb29e764cfc12d0a8d94841e3ffe34023", "html_url": "https://github.com/rust-lang/rust/commit/09c817eeb29e764cfc12d0a8d94841e3ffe34023"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "4f43ec8c9470ab60915ac743a0f37c6720f6919c", "filename": "src/test/mir-opt/const_prop/mutable_variable_aggregate_partial_read.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c849a0d087546d9ef5a47593287b2bc1ec5bfcaf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_partial_read.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c849a0d087546d9ef5a47593287b2bc1ec5bfcaf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_partial_read.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_partial_read.rs?ref=c849a0d087546d9ef5a47593287b2bc1ec5bfcaf", "patch": "@@ -0,0 +1,14 @@\n+// compile-flags: -O\n+\n+// EMIT_MIR rustc.main.ConstProp.diff\n+fn main() {\n+    let mut x: (i32, i32) = foo();\n+    x.1 = 99;\n+    x.0 = 42;\n+    let y = x.1;\n+}\n+\n+#[inline(never)]\n+fn foo() -> (i32, i32) {\n+    unimplemented!()\n+}"}, {"sha": "b88bb9b491564ca901591e9c0bc5944c54c2a68e", "filename": "src/test/mir-opt/const_prop/mutable_variable_aggregate_partial_read/rustc.main.ConstProp.diff", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/c849a0d087546d9ef5a47593287b2bc1ec5bfcaf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_partial_read%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/c849a0d087546d9ef5a47593287b2bc1ec5bfcaf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_partial_read%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_partial_read%2Frustc.main.ConstProp.diff?ref=c849a0d087546d9ef5a47593287b2bc1ec5bfcaf", "patch": "@@ -0,0 +1,55 @@\n+- // MIR for `main` before ConstProp\n++ // MIR for `main` after ConstProp\n+  \n+  fn main() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/mutable_variable_aggregate_partial_read.rs:4:11: 4:11\n+      let mut _1: (i32, i32) as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 0 at $DIR/mutable_variable_aggregate_partial_read.rs:5:9: 5:14\n+      scope 1 {\n+          debug x => _1;                   // in scope 1 at $DIR/mutable_variable_aggregate_partial_read.rs:5:9: 5:14\n+          let _2: i32;                     // in scope 1 at $DIR/mutable_variable_aggregate_partial_read.rs:8:9: 8:10\n+          scope 2 {\n+              debug y => _2;               // in scope 2 at $DIR/mutable_variable_aggregate_partial_read.rs:8:9: 8:10\n+          }\n+      }\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/mutable_variable_aggregate_partial_read.rs:5:9: 5:14\n+          _1 = const foo() -> bb1;         // scope 0 at $DIR/mutable_variable_aggregate_partial_read.rs:5:29: 5:34\n+                                           // ty::Const\n+                                           // + ty: fn() -> (i32, i32) {foo}\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/mutable_variable_aggregate_partial_read.rs:5:29: 5:32\n+                                           // + literal: Const { ty: fn() -> (i32, i32) {foo}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb1: {\n+          (_1.1: i32) = const 99i32;       // scope 1 at $DIR/mutable_variable_aggregate_partial_read.rs:6:5: 6:13\n+                                           // ty::Const\n+                                           // + ty: i32\n+                                           // + val: Value(Scalar(0x00000063))\n+                                           // mir::Constant\n+                                           // + span: $DIR/mutable_variable_aggregate_partial_read.rs:6:11: 6:13\n+                                           // + literal: Const { ty: i32, val: Value(Scalar(0x00000063)) }\n+          (_1.0: i32) = const 42i32;       // scope 1 at $DIR/mutable_variable_aggregate_partial_read.rs:7:5: 7:13\n+                                           // ty::Const\n+                                           // + ty: i32\n+                                           // + val: Value(Scalar(0x0000002a))\n+                                           // mir::Constant\n+                                           // + span: $DIR/mutable_variable_aggregate_partial_read.rs:7:11: 7:13\n+                                           // + literal: Const { ty: i32, val: Value(Scalar(0x0000002a)) }\n+          StorageLive(_2);                 // scope 1 at $DIR/mutable_variable_aggregate_partial_read.rs:8:9: 8:10\n+          _2 = (_1.1: i32);                // scope 1 at $DIR/mutable_variable_aggregate_partial_read.rs:8:13: 8:16\n+          _0 = const ();                   // scope 0 at $DIR/mutable_variable_aggregate_partial_read.rs:4:11: 9:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/mutable_variable_aggregate_partial_read.rs:4:11: 9:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n+          StorageDead(_2);                 // scope 1 at $DIR/mutable_variable_aggregate_partial_read.rs:9:1: 9:2\n+          StorageDead(_1);                 // scope 0 at $DIR/mutable_variable_aggregate_partial_read.rs:9:1: 9:2\n+          return;                          // scope 0 at $DIR/mutable_variable_aggregate_partial_read.rs:9:2: 9:2\n+      }\n+  }\n+  "}]}