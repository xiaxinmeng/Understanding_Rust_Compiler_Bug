{"sha": "b8df581ef855999fc409ed3c7e8f97d548ac05ad", "node_id": "C_kwDOAAsO6NoAKGI4ZGY1ODFlZjg1NTk5OWZjNDA5ZWQzYzdlOGY5N2Q1NDhhYzA1YWQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-20T22:37:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-20T22:37:42Z"}, "message": "Rollup merge of #93114 - lcnr:mk_array, r=RalfJung\n\nupdate comment for `ensure_monomorphic_enough`\n\nr? `@RalfJung`", "tree": {"sha": "7bf2435e6e883c878cdd627515095e0a7ea83f64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bf2435e6e883c878cdd627515095e0a7ea83f64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8df581ef855999fc409ed3c7e8f97d548ac05ad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh6eQ2CRBK7hj4Ov3rIwAADLsIALASm9PTagQRU7iRXUrwi7Ws\nXbZvshZI9jBHm/D7ogvVI2yei3ezyO0YO5ojExFsgdScNY5c4k9RyE8J4OGr3VPn\nbKxE9kIBPGH/EZeC0Ap5qseI+fgD92o2/wWwM34Wr/FficbYz3P3cAL4WLALIoo3\n0bH9wa9lEfk8bOjFJZi9c71vToyCgtlc8Z1RxpNRgi56uHIkRx3EGiKqF5xUJMdw\n43cJSR35RjF9v1daBgC/ce7pbgk8yyEgxj9MdqmiH+A0Nsd/QtDtbRwqDSv87+Gr\nBrGe+3kUDLjGVK4c2Jv/Pwi8DuwUimf7byeypa2GjzC16LisHTbH+fBnvHbOauI=\n=BQpl\n-----END PGP SIGNATURE-----\n", "payload": "tree 7bf2435e6e883c878cdd627515095e0a7ea83f64\nparent 5e46f7dceb86b3dabd566750f7903d00f601a9c6\nparent c29b637875e837f63d726901cd727199b08a5264\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642718262 +0100\ncommitter GitHub <noreply@github.com> 1642718262 +0100\n\nRollup merge of #93114 - lcnr:mk_array, r=RalfJung\n\nupdate comment for `ensure_monomorphic_enough`\n\nr? `@RalfJung`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8df581ef855999fc409ed3c7e8f97d548ac05ad", "html_url": "https://github.com/rust-lang/rust/commit/b8df581ef855999fc409ed3c7e8f97d548ac05ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8df581ef855999fc409ed3c7e8f97d548ac05ad/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e46f7dceb86b3dabd566750f7903d00f601a9c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e46f7dceb86b3dabd566750f7903d00f601a9c6", "html_url": "https://github.com/rust-lang/rust/commit/5e46f7dceb86b3dabd566750f7903d00f601a9c6"}, {"sha": "c29b637875e837f63d726901cd727199b08a5264", "url": "https://api.github.com/repos/rust-lang/rust/commits/c29b637875e837f63d726901cd727199b08a5264", "html_url": "https://github.com/rust-lang/rust/commit/c29b637875e837f63d726901cd727199b08a5264"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "6a3378a3896e3a0b58fdb74afed1dd6b486f5e53", "filename": "compiler/rustc_const_eval/src/interpret/util.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b8df581ef855999fc409ed3c7e8f97d548ac05ad/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8df581ef855999fc409ed3c7e8f97d548ac05ad/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Futil.rs?ref=b8df581ef855999fc409ed3c7e8f97d548ac05ad", "patch": "@@ -3,7 +3,11 @@ use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable, TypeVisitor};\n use std::convert::TryInto;\n use std::ops::ControlFlow;\n \n-/// Returns `true` if a used generic parameter requires substitution.\n+/// Checks whether a type contains generic parameters which require substitution.\n+///\n+/// In case it does, returns a `TooGeneric` const eval error. Note that due to polymorphization\n+/// types may be \"concrete enough\" even though they still contain generic parameters in\n+/// case these parameters are unused.\n crate fn ensure_monomorphic_enough<'tcx, T>(tcx: TyCtxt<'tcx>, ty: T) -> InterpResult<'tcx>\n where\n     T: TypeFoldable<'tcx>,"}, {"sha": "ec88bdf4a370f8a8508d9da6f24e7e827aebdbeb", "filename": "compiler/rustc_typeck/src/check/writeback.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8df581ef855999fc409ed3c7e8f97d548ac05ad/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8df581ef855999fc409ed3c7e8f97d548ac05ad/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs?ref=b8df581ef855999fc409ed3c7e8f97d548ac05ad", "patch": "@@ -43,7 +43,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let item_def_id = self.tcx.hir().local_def_id(item_id);\n \n         // This attribute causes us to dump some writeback information\n-        // in the form of errors, which is uSymbol for unit tests.\n+        // in the form of errors, which is used for unit tests.\n         let rustc_dump_user_substs =\n             self.tcx.has_attr(item_def_id.to_def_id(), sym::rustc_dump_user_substs);\n "}]}