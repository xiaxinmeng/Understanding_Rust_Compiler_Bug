{"sha": "86d5ce5cef29e388de04c667e8cfd205327629cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ZDVjZTVjZWYyOWUzODhkZTA0YzY2N2U4Y2ZkMjA1MzI3NjI5Y2M=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2013-04-03T00:29:02Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2013-04-03T00:29:02Z"}, "message": "remove trailing whitespace", "tree": {"sha": "e51e7407eedcbc1c503b42cc5a846b0b75231249", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e51e7407eedcbc1c503b42cc5a846b0b75231249"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86d5ce5cef29e388de04c667e8cfd205327629cc", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86d5ce5cef29e388de04c667e8cfd205327629cc", "html_url": "https://github.com/rust-lang/rust/commit/86d5ce5cef29e388de04c667e8cfd205327629cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86d5ce5cef29e388de04c667e8cfd205327629cc/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a20d1ad0cbcca13ee386fd819f33563b465f1185", "url": "https://api.github.com/repos/rust-lang/rust/commits/a20d1ad0cbcca13ee386fd819f33563b465f1185", "html_url": "https://github.com/rust-lang/rust/commit/a20d1ad0cbcca13ee386fd819f33563b465f1185"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "925079f4cf212a6a6efdbe39552140d463d5ceab", "filename": "src/libcore/io.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/86d5ce5cef29e388de04c667e8cfd205327629cc/src%2Flibcore%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86d5ce5cef29e388de04c667e8cfd205327629cc/src%2Flibcore%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fio.rs?ref=86d5ce5cef29e388de04c667e8cfd205327629cc", "patch": "@@ -55,14 +55,14 @@ pub mod rustrt {\n * to the `seek` method defined on the `Reader` trait.\n *\n * There are three seek styles:\n-* \n+*\n * 1. `SeekSet` means that the new position should become our position.\n * 2. `SeekCur` means that we should seek from the current position.\n * 3. `SeekEnd` means that we should seek from the end.\n *\n * # Examples\n-* \n-* None right now. \n+*\n+* None right now.\n */\n pub enum SeekStyle { SeekSet, SeekEnd, SeekCur, }\n \n@@ -71,8 +71,8 @@ pub enum SeekStyle { SeekSet, SeekEnd, SeekCur, }\n * The core Reader trait. All readers must implement this trait.\n *\n * # Examples\n-* \n-* None right now. \n+*\n+* None right now.\n */\n pub trait Reader {\n     // FIXME (#2004): Seekable really should be orthogonal.\n@@ -82,14 +82,14 @@ pub trait Reader {\n     * Reads bytes and puts them into `bytes`. Returns the number of\n     * bytes read.\n     *\n-    * The number of bytes to be read is `len` or the end of the file, \n+    * The number of bytes to be read is `len` or the end of the file,\n     * whichever comes first.\n     *\n     * The buffer must be at least `len` bytes long.\n     *\n     * # Examples\n-    * \n-    * None right now. \n+    *\n+    * None right now.\n     */\n     fn read(&self, bytes: &mut [u8], len: uint) -> uint;\n \n@@ -99,38 +99,38 @@ pub trait Reader {\n     * In the case of an EOF or an error, returns a negative value.\n     *\n     * # Examples\n-    * \n-    * None right now. \n+    *\n+    * None right now.\n     */\n     fn read_byte(&self) -> int;\n \n     /**\n     * Returns a boolean value: are we currently at EOF?\n     *\n     * # Examples\n-    * \n-    * None right now. \n+    *\n+    * None right now.\n     */\n     fn eof(&self) -> bool;\n \n     /**\n     * Seek to a given `position` in the stream.\n-    * \n+    *\n     * Takes an optional SeekStyle, which affects how we seek from the\n     * position. See `SeekStyle` docs for more details.\n     *\n     * # Examples\n-    * \n-    * None right now. \n+    *\n+    * None right now.\n     */\n     fn seek(&self, position: int, style: SeekStyle);\n \n     /**\n     * Returns the current position within the stream.\n     *\n     * # Examples\n-    * \n-    * None right now. \n+    *\n+    * None right now.\n     */\n     fn tell(&self) -> uint;\n }"}]}