{"sha": "4b8c78496815e22652fdf0da216659fe06936b50", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiOGM3ODQ5NjgxNWUyMjY1MmZkZjBkYTIxNjY1OWZlMDY5MzZiNTA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-15T10:00:14Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-15T10:00:14Z"}, "message": "add test for issue 69020", "tree": {"sha": "0eaf5ce5b2f25cce7730e2c15404f5378870e92d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0eaf5ce5b2f25cce7730e2c15404f5378870e92d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b8c78496815e22652fdf0da216659fe06936b50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b8c78496815e22652fdf0da216659fe06936b50", "html_url": "https://github.com/rust-lang/rust/commit/4b8c78496815e22652fdf0da216659fe06936b50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b8c78496815e22652fdf0da216659fe06936b50/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c7639492ff4b3f6b812f355d4b8fe08cc81571d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c7639492ff4b3f6b812f355d4b8fe08cc81571d", "html_url": "https://github.com/rust-lang/rust/commit/9c7639492ff4b3f6b812f355d4b8fe08cc81571d"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "0bf40ce4b319eb192ebc162451f673903f622f09", "filename": "src/test/ui/consts/issue-69020.default.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4b8c78496815e22652fdf0da216659fe06936b50/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4b8c78496815e22652fdf0da216659fe06936b50/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.default.stderr?ref=4b8c78496815e22652fdf0da216659fe06936b50", "patch": "@@ -0,0 +1,10 @@\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-69020.rs:15:20\n+   |\n+LL |     const N: i32 = -i32::MIN + T::N;\n+   |                    ^^^^^^^^^ attempt to negate with overflow\n+   |\n+   = note: `#[deny(overflow)]` on by default\n+\n+error: aborting due to previous error\n+"}, {"sha": "0bf40ce4b319eb192ebc162451f673903f622f09", "filename": "src/test/ui/consts/issue-69020.noopt.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4b8c78496815e22652fdf0da216659fe06936b50/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.noopt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4b8c78496815e22652fdf0da216659fe06936b50/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.noopt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.noopt.stderr?ref=4b8c78496815e22652fdf0da216659fe06936b50", "patch": "@@ -0,0 +1,10 @@\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-69020.rs:15:20\n+   |\n+LL |     const N: i32 = -i32::MIN + T::N;\n+   |                    ^^^^^^^^^ attempt to negate with overflow\n+   |\n+   = note: `#[deny(overflow)]` on by default\n+\n+error: aborting due to previous error\n+"}, {"sha": "0bf40ce4b319eb192ebc162451f673903f622f09", "filename": "src/test/ui/consts/issue-69020.opt.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4b8c78496815e22652fdf0da216659fe06936b50/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.opt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4b8c78496815e22652fdf0da216659fe06936b50/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.opt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.opt.stderr?ref=4b8c78496815e22652fdf0da216659fe06936b50", "patch": "@@ -0,0 +1,10 @@\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-69020.rs:15:20\n+   |\n+LL |     const N: i32 = -i32::MIN + T::N;\n+   |                    ^^^^^^^^^ attempt to negate with overflow\n+   |\n+   = note: `#[deny(overflow)]` on by default\n+\n+error: aborting due to previous error\n+"}, {"sha": "0bf40ce4b319eb192ebc162451f673903f622f09", "filename": "src/test/ui/consts/issue-69020.opt_with_overflow_checks.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4b8c78496815e22652fdf0da216659fe06936b50/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.opt_with_overflow_checks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4b8c78496815e22652fdf0da216659fe06936b50/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.opt_with_overflow_checks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.opt_with_overflow_checks.stderr?ref=4b8c78496815e22652fdf0da216659fe06936b50", "patch": "@@ -0,0 +1,10 @@\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-69020.rs:15:20\n+   |\n+LL |     const N: i32 = -i32::MIN + T::N;\n+   |                    ^^^^^^^^^ attempt to negate with overflow\n+   |\n+   = note: `#[deny(overflow)]` on by default\n+\n+error: aborting due to previous error\n+"}, {"sha": "9f1ed862c7b44b4355f3e3d8136709299267965b", "filename": "src/test/ui/consts/issue-69020.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4b8c78496815e22652fdf0da216659fe06936b50/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b8c78496815e22652fdf0da216659fe06936b50/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.rs?ref=4b8c78496815e22652fdf0da216659fe06936b50", "patch": "@@ -0,0 +1,17 @@\n+// revisions: default noopt opt opt_with_overflow_checks\n+//[noopt]compile-flags: -C opt-level=0\n+//[opt]compile-flags: -O\n+//[opt_with_overflow_checks]compile-flags: -C overflow-checks=on -O\n+\n+#![crate_type=\"lib\"]\n+\n+use std::i32;\n+\n+pub trait Foo {\n+    const N: i32;\n+}\n+\n+impl<T: Foo> Foo for Vec<T> {\n+    const N: i32 = -i32::MIN + T::N;\n+    //~^ ERROR arithmetic operation will overflow\n+}"}]}