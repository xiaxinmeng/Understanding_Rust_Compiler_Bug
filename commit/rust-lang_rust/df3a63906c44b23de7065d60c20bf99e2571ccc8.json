{"sha": "df3a63906c44b23de7065d60c20bf99e2571ccc8", "node_id": "C_kwDOAAsO6NoAKGRmM2E2MzkwNmM0NGIyM2RlNzA2NWQ2MGMyMGJmOTllMjU3MWNjYzg", "commit": {"author": {"name": "miguel raz", "email": "miguelraz@gmail.com", "date": "2021-06-04T19:24:47Z"}, "committer": {"name": "The Atelier", "email": "workingjubilee@gmail.com", "date": "2022-12-04T00:12:00Z"}, "message": "add dot_product example", "tree": {"sha": "bfbc94d1611ccc13064ae19aece139bcd48c00f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfbc94d1611ccc13064ae19aece139bcd48c00f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df3a63906c44b23de7065d60c20bf99e2571ccc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df3a63906c44b23de7065d60c20bf99e2571ccc8", "html_url": "https://github.com/rust-lang/rust/commit/df3a63906c44b23de7065d60c20bf99e2571ccc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df3a63906c44b23de7065d60c20bf99e2571ccc8/comments", "author": {"login": "miguelraz", "id": 13056181, "node_id": "MDQ6VXNlcjEzMDU2MTgx", "avatar_url": "https://avatars.githubusercontent.com/u/13056181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelraz", "html_url": "https://github.com/miguelraz", "followers_url": "https://api.github.com/users/miguelraz/followers", "following_url": "https://api.github.com/users/miguelraz/following{/other_user}", "gists_url": "https://api.github.com/users/miguelraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelraz/subscriptions", "organizations_url": "https://api.github.com/users/miguelraz/orgs", "repos_url": "https://api.github.com/users/miguelraz/repos", "events_url": "https://api.github.com/users/miguelraz/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelraz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1547dd66f9c3c2ba9e4998f8d4885e4f7bd62c52", "url": "https://api.github.com/repos/rust-lang/rust/commits/1547dd66f9c3c2ba9e4998f8d4885e4f7bd62c52", "html_url": "https://github.com/rust-lang/rust/commit/1547dd66f9c3c2ba9e4998f8d4885e4f7bd62c52"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "812b0b23eebffc76f6d08083e5baa0de8de475da", "filename": "crates/core_simd/examples/dot_product.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/df3a63906c44b23de7065d60c20bf99e2571ccc8/crates%2Fcore_simd%2Fexamples%2Fdot_product.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df3a63906c44b23de7065d60c20bf99e2571ccc8/crates%2Fcore_simd%2Fexamples%2Fdot_product.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fexamples%2Fdot_product.rs?ref=df3a63906c44b23de7065d60c20bf99e2571ccc8", "patch": "@@ -0,0 +1,31 @@\n+// Code taken from the `packed_simd` crate\n+// Run this code with `cargo test --example dot_product`\n+#![feature(array_chunks)]\n+use core_simd::*;\n+\n+pub fn dot_prod(a: &[f32], b: &[f32]) -> f32 {\n+    assert_eq!(a.len(), b.len());\n+\n+    // TODO handle remainder when a.len() % 4 != 0\n+    a.array_chunks::<4>()\n+        .map(|&a| f32x4::from_array(a))\n+        .zip(b.array_chunks::<4>().map(|&b| f32x4::from_array(b)))\n+        .map(|(a, b)| (a * b).horizontal_sum())\n+        .sum()\n+}\n+\n+fn main() {\n+    // Empty main to make cargo happy\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    #[test]\n+    fn test() {\n+        use super::*;\n+        let a: Vec<f32> = vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0];\n+        let b: Vec<f32> = vec![-8.0, -7.0, -6.0, -5.0, 4.0, 3.0, 2.0, 1.0];\n+\n+        assert_eq!(0.0, dot_prod(&a, &b));\n+    }\n+}"}]}