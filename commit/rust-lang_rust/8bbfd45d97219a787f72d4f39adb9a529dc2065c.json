{"sha": "8bbfd45d97219a787f72d4f39adb9a529dc2065c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiYmZkNDVkOTcyMTlhNzg3ZjcyZDRmMzlhZGI5YTUyOWRjMjA2NWM=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-09-01T09:25:42Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-09-01T09:25:42Z"}, "message": "Minor fixes", "tree": {"sha": "83936788b0124a0819b38bbb2397118c592ac4aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83936788b0124a0819b38bbb2397118c592ac4aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bbfd45d97219a787f72d4f39adb9a529dc2065c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bbfd45d97219a787f72d4f39adb9a529dc2065c", "html_url": "https://github.com/rust-lang/rust/commit/8bbfd45d97219a787f72d4f39adb9a529dc2065c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bbfd45d97219a787f72d4f39adb9a529dc2065c/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0d5290b7fe9c8d8ca4107900123a218835a9dff", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0d5290b7fe9c8d8ca4107900123a218835a9dff", "html_url": "https://github.com/rust-lang/rust/commit/a0d5290b7fe9c8d8ca4107900123a218835a9dff"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "8c22806b4d6fea3ceb1fc2624345851f3afbe73a", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8bbfd45d97219a787f72d4f39adb9a529dc2065c/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbfd45d97219a787f72d4f39adb9a529dc2065c/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=8bbfd45d97219a787f72d4f39adb9a529dc2065c", "patch": "@@ -292,6 +292,7 @@ fn hover_try_expr(\n         // special case for two options, there is no value in showing them\n         if let Some(option_enum) = famous_defs.core_option_Option() {\n             if inner == option_enum && body == option_enum {\n+                cov_mark::hit!(hover_try_expr_opt_opt);\n                 return None;\n             }\n         }\n@@ -326,10 +327,10 @@ fn hover_try_expr(\n     let body_ty = body_ty.display(sema.db).to_string();\n     let ty_len_max = inner_ty.len().max(body_ty.len());\n \n-    // \"Propagated as: \".len() - \" Type: \".len() = 8\n-    let static_test_len_diff = 8 - s.len() as isize;\n-    let tpad = static_test_len_diff.max(0) as usize;\n-    let ppad = static_test_len_diff.min(0).abs() as usize;\n+    let l = \"Propagated as: \".len() - \" Type: \".len();\n+    let static_text_len_diff = l as isize - s.len() as isize;\n+    let tpad = static_text_len_diff.max(0) as usize;\n+    let ppad = static_text_len_diff.min(0).abs() as usize;\n \n     res.markup = format!(\n         \"{bt_start}{} Type: {:>pad0$}\\nPropagated as: {:>pad1$}\\n{bt_end}\",\n@@ -368,12 +369,12 @@ fn hover_type_info(\n         walk_and_push_ty(sema.db, &adjusted_ty, &mut push_new_def);\n         let original = original.display(sema.db).to_string();\n         let adjusted = adjusted_ty.display(sema.db).to_string();\n+        let static_text_diff_len = \"Coerced to: \".len() - \"Type: \".len();\n         format!(\n             \"{bt_start}Type: {:>apad$}\\nCoerced to: {:>opad$}\\n{bt_end}\",\n             original,\n             adjusted,\n-            // 6 base padding for difference of length of the two text prefixes\n-            apad = 6 + adjusted.len().max(original.len()),\n+            apad = static_text_diff_len + adjusted.len().max(original.len()),\n             opad = original.len(),\n             bt_start = if config.markdown() { \"```text\\n\" } else { \"\" },\n             bt_end = if config.markdown() { \"```\\n\" } else { \"\" }\n@@ -4429,6 +4430,7 @@ fn foo() -> NotResult<(), Short> {\n \n     #[test]\n     fn hover_try_expr_option() {\n+        cov_mark::check!(hover_try_expr_opt_opt);\n         check_hover_range(\n             r#\"\n //- minicore: option, try"}]}