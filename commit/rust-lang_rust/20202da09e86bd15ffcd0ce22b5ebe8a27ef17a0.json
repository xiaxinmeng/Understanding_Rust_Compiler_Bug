{"sha": "20202da09e86bd15ffcd0ce22b5ebe8a27ef17a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwMjAyZGEwOWU4NmJkMTVmZmNkMGNlMjJiNWViZThhMjdlZjE3YTA=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2020-10-01T03:00:09Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2020-10-01T03:00:09Z"}, "message": "Improve the example for ptr::copy\n\nFixes #77220", "tree": {"sha": "8f6d268d0feae937c873d0ff82dc7b8101c4ee74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f6d268d0feae937c873d0ff82dc7b8101c4ee74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20202da09e86bd15ffcd0ce22b5ebe8a27ef17a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20202da09e86bd15ffcd0ce22b5ebe8a27ef17a0", "html_url": "https://github.com/rust-lang/rust/commit/20202da09e86bd15ffcd0ce22b5ebe8a27ef17a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20202da09e86bd15ffcd0ce22b5ebe8a27ef17a0/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bb55dc8642d811d66a7599812009cc063577e00", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bb55dc8642d811d66a7599812009cc063577e00", "html_url": "https://github.com/rust-lang/rust/commit/9bb55dc8642d811d66a7599812009cc063577e00"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "18b54c8ea3e89bf2bc02e06ecff40b409672285d", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/20202da09e86bd15ffcd0ce22b5ebe8a27ef17a0/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20202da09e86bd15ffcd0ce22b5ebe8a27ef17a0/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=20202da09e86bd15ffcd0ce22b5ebe8a27ef17a0", "patch": "@@ -1901,11 +1901,21 @@ pub unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {\n /// ```\n /// use std::ptr;\n ///\n+/// /// # Safety:\n+/// /// * `ptr` must be correctly aligned for its type and non-zero.\n+/// /// * `ptr` must be valid for reads of `elts` contiguous objects of type `T`.\n+/// /// * Those elements must not be used after calling this function.\n /// # #[allow(dead_code)]\n /// unsafe fn from_buf_raw<T>(ptr: *const T, elts: usize) -> Vec<T> {\n ///     let mut dst = Vec::with_capacity(elts);\n-///     dst.set_len(elts);\n+///\n+///     // SAFETY: Our precondition ensures the source is aligned and valid,\n+///     // and `Vec::with_capacity` ensures that we have usable space to write them.\n ///     ptr::copy(ptr, dst.as_mut_ptr(), elts);\n+///\n+///     // SAFETY: We created it with this much capacity earlier,\n+///     // and the previous `copy` has initialized these elements.\n+///     dst.set_len(elts);\n ///     dst\n /// }\n /// ```"}]}