{"sha": "e1613a69d4136559e8bb76bd191a21091c63efc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxNjEzYTY5ZDQxMzY1NTllOGJiNzZiZDE5MWEyMTA5MWM2M2VmYzQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-16T10:33:57Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-16T10:33:57Z"}, "message": "Rustup to rustc 1.41.0-nightly (a605441e0 2019-12-15)", "tree": {"sha": "86f65bc67361e81e2fa96c8e92e14cce7dd54830", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86f65bc67361e81e2fa96c8e92e14cce7dd54830"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1613a69d4136559e8bb76bd191a21091c63efc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1613a69d4136559e8bb76bd191a21091c63efc4", "html_url": "https://github.com/rust-lang/rust/commit/e1613a69d4136559e8bb76bd191a21091c63efc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1613a69d4136559e8bb76bd191a21091c63efc4/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88277f983afd1d5d71f0135ae27dd1faabf15202", "url": "https://api.github.com/repos/rust-lang/rust/commits/88277f983afd1d5d71f0135ae27dd1faabf15202", "html_url": "https://github.com/rust-lang/rust/commit/88277f983afd1d5d71f0135ae27dd1faabf15202"}], "stats": {"total": 61, "additions": 31, "deletions": 30}, "files": [{"sha": "5174e4d08e950612f24bbbb478c56a502b9e4287", "filename": "patches/0003-Disable-inline-assembly-in-libcore.patch", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e1613a69d4136559e8bb76bd191a21091c63efc4/patches%2F0003-Disable-inline-assembly-in-libcore.patch", "raw_url": "https://github.com/rust-lang/rust/raw/e1613a69d4136559e8bb76bd191a21091c63efc4/patches%2F0003-Disable-inline-assembly-in-libcore.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0003-Disable-inline-assembly-in-libcore.patch?ref=e1613a69d4136559e8bb76bd191a21091c63efc4", "patch": "@@ -16,9 +16,9 @@ index ad5a207..04712b8 100644\n  #[unstable(feature = \"renamed_spin_loop\", issue = \"55002\")]\n  pub fn spin_loop() {\n +    /*\n-     #[cfg(\n-         all(\n-             any(target_arch = \"x86\", target_arch = \"x86_64\"),\n+     #[cfg(all(any(target_arch = \"x86\", target_arch = \"x86_64\"), target_feature = \"sse2\"))]\n+     {\n+         #[cfg(target_arch = \"x86\")]\n @@ -71,4 +72,5 @@ pub fn spin_loop() {\n              unsafe { crate::arch::arm::__yield() };\n          }"}, {"sha": "e001ba766fcdb76e4b47380b309bfb4f420462d0", "filename": "patches/0022-core-Disable-not-compiling-tests.patch", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/e1613a69d4136559e8bb76bd191a21091c63efc4/patches%2F0022-core-Disable-not-compiling-tests.patch", "raw_url": "https://github.com/rust-lang/rust/raw/e1613a69d4136559e8bb76bd191a21091c63efc4/patches%2F0022-core-Disable-not-compiling-tests.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0022-core-Disable-not-compiling-tests.patch?ref=e1613a69d4136559e8bb76bd191a21091c63efc4", "patch": "@@ -44,41 +44,41 @@ index 0475aeb..9558198 100644\n --- a/src/libcore/tests/num/int_macros.rs\n +++ b/src/libcore/tests/num/int_macros.rs\n @@ -88,6 +88,7 @@ mod tests {\n-         assert_eq!(C.count_zeros(), bits as u32 - 5);\n-     }\n+                 assert_eq!(C.count_zeros(), bits as u32 - 5);\n+             }\n  \n-+    /*\n-     #[test]\n-     fn test_rotate() {\n-         assert_eq!(A.rotate_left(6).rotate_right(2).rotate_right(4), A);\n++            /*\n+             #[test]\n+             fn test_rotate() {\n+                 assert_eq!(A.rotate_left(6).rotate_right(2).rotate_right(4), A);\n @@ -112,6 +113,7 @@ mod tests {\n-         assert_eq!(B.rotate_left(64), B);\n-         assert_eq!(C.rotate_left(64), C);\n-     }\n-+    */\n+                 assert_eq!(B.rotate_left(64), B);\n+                 assert_eq!(C.rotate_left(64), C);\n+             }\n++            */\n  \n-     #[test]\n-     fn test_swap_bytes() {\n+             #[test]\n+             fn test_swap_bytes() {\n diff --git a/src/libcore/tests/num/uint_macros.rs b/src/libcore/tests/num/uint_macros.rs\n index 04ed14f..a6e372e 100644\n --- a/src/libcore/tests/num/uint_macros.rs\n +++ b/src/libcore/tests/num/uint_macros.rs\n @@ -52,6 +52,7 @@ mod tests {\n-         assert!(C.count_zeros() == bits as u32 - 5);\n-     }\n+                 assert!(C.count_zeros() == bits as u32 - 5);\n+             }\n  \n-+    /*\n-     #[test]\n-     fn test_rotate() {\n-         assert_eq!(A.rotate_left(6).rotate_right(2).rotate_right(4), A);\n++            /*\n+             #[test]\n+             fn test_rotate() {\n+                 assert_eq!(A.rotate_left(6).rotate_right(2).rotate_right(4), A);\n @@ -76,6 +77,7 @@ mod tests {\n-         assert_eq!(B.rotate_left(64), B);\n-         assert_eq!(C.rotate_left(64), C);\n-     }\n-+    */\n+                 assert_eq!(B.rotate_left(64), B);\n+                 assert_eq!(C.rotate_left(64), C);\n+             }\n++            */\n  \n-     #[test]\n-     fn test_swap_bytes() {\n+             #[test]\n+             fn test_swap_bytes() {\n diff --git a/src/libcore/tests/ptr.rs b/src/libcore/tests/ptr.rs\n index 1a6be3a..42dbd59 100644\n --- a/src/libcore/tests/ptr.rs\n@@ -98,7 +98,7 @@ index 1a6be3a..42dbd59 100644\n +*/\n  \n  #[test]\n- #[cfg(not(miri))] // Miri does not compute a maximal `mid` for `align_offset`\n+ #[cfg_attr(miri, ignore)] // Miri does not compute a maximal `mid` for `align_offset`\n diff --git a/src/libcore/tests/slice.rs b/src/libcore/tests/slice.rs\n index 6609bc3..241b497 100644\n --- a/src/libcore/tests/slice.rs"}, {"sha": "705629888aa7f4cc9a7a26ae908492ff7ce35954", "filename": "src/base.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e1613a69d4136559e8bb76bd191a21091c63efc4/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1613a69d4136559e8bb76bd191a21091c63efc4/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=e1613a69d4136559e8bb76bd191a21091c63efc4", "patch": "@@ -647,7 +647,7 @@ pub fn trans_place<'tcx>(\n                 };\n                 cplace = cplace.place_index(fx, index);\n             }\n-            PlaceElem::Subslice { from, to } => {\n+            PlaceElem::Subslice { from, to, from_end } => {\n                 // These indices are generated by slice patterns.\n                 // slice[from:-to] in Python terms.\n \n@@ -665,6 +665,7 @@ pub fn trans_place<'tcx>(\n                         );\n                     }\n                     ty::Slice(elem_ty) => {\n+                        assert!(from_end, \"slice subslices should be `from_end`\");\n                         let elem_layout = fx.layout_of(elem_ty);\n                         let (ptr, len) = cplace.to_addr_maybe_unsized(fx);\n                         let len = len.unwrap();"}, {"sha": "cc8216f0efae55f421099c883fed17093cda0993", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1613a69d4136559e8bb76bd191a21091c63efc4/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1613a69d4136559e8bb76bd191a21091c63efc4/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=e1613a69d4136559e8bb76bd191a21091c63efc4", "patch": "@@ -1,4 +1,4 @@\n-#![feature(rustc_private, decl_macro, type_alias_impl_trait, associated_type_bounds)]\n+#![feature(rustc_private, decl_macro, type_alias_impl_trait, associated_type_bounds, never_type)]\n #![allow(intra_doc_link_resolution_failure)]\n \n extern crate flate2;"}]}