{"sha": "565400d1f990399726498b66e87d6866533d1b1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2NTQwMGQxZjk5MDM5OTcyNjQ5OGI2NmU4N2Q2ODY2NTMzZDFiMWQ=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-03-17T14:31:20Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-03-17T14:31:20Z"}, "message": "Add clippy_utils::paths imports", "tree": {"sha": "6a971d2d678ca2b82425ca79fd490ed396751e37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a971d2d678ca2b82425ca79fd490ed396751e37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/565400d1f990399726498b66e87d6866533d1b1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/565400d1f990399726498b66e87d6866533d1b1d", "html_url": "https://github.com/rust-lang/rust/commit/565400d1f990399726498b66e87d6866533d1b1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/565400d1f990399726498b66e87d6866533d1b1d/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0743e841f07b7c41f65187fbf71f90bb5dc71982", "url": "https://api.github.com/repos/rust-lang/rust/commits/0743e841f07b7c41f65187fbf71f90bb5dc71982", "html_url": "https://github.com/rust-lang/rust/commit/0743e841f07b7c41f65187fbf71f90bb5dc71982"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "bc6eec0051a41d872c466b2a0a4f5becee8b5585", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/565400d1f990399726498b66e87d6866533d1b1d/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/565400d1f990399726498b66e87d6866533d1b1d/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=565400d1f990399726498b66e87d6866533d1b1d", "patch": "@@ -2,7 +2,7 @@ use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::source::snippet_opt;\n use clippy_utils::ty::implements_trait;\n use clippy_utils::{eq_expr_value, get_trait_def_id, trait_ref_of_method};\n-use clippy_utils::{higher, sugg};\n+use clippy_utils::{higher, paths, sugg};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n@@ -93,7 +93,7 @@ impl<'tcx> LateLintPass<'tcx> for AssignOps {\n                              $($trait_name:ident),+) => {\n                                 match $op {\n                                     $(hir::BinOpKind::$trait_name => {\n-                                        let [krate, module] = clippy_utils::paths::OPS_MODULE;\n+                                        let [krate, module] = paths::OPS_MODULE;\n                                         let path: [&str; 3] = [krate, module, concat!(stringify!($trait_name), \"Assign\")];\n                                         let trait_id = if let Some(trait_id) = get_trait_def_id($cx, &path) {\n                                             trait_id"}, {"sha": "f296d6a1a15f5f3af7f8b2ad688e14ec96fdee47", "filename": "clippy_lints/src/manual_unwrap_or.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/565400d1f990399726498b66e87d6866533d1b1d/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/565400d1f990399726498b66e87d6866533d1b1d/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs?ref=565400d1f990399726498b66e87d6866533d1b1d", "patch": "@@ -3,7 +3,7 @@ use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::{indent_of, reindent_multiline, snippet_opt};\n use clippy_utils::ty::is_type_diagnostic_item;\n use clippy_utils::usage::contains_return_break_continue_macro;\n-use clippy_utils::{in_constant, match_qpath, path_to_local_id, sugg};\n+use clippy_utils::{in_constant, match_qpath, path_to_local_id, paths, sugg};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Arm, Expr, ExprKind, Pat, PatKind};\n@@ -75,16 +75,16 @@ fn lint_manual_unwrap_or<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n             if let Some((idx, or_arm)) = arms.iter().enumerate().find(|(_, arm)|\n                 match arm.pat.kind {\n                     PatKind::Path(ref some_qpath) =>\n-                        match_qpath(some_qpath, &clippy_utils::paths::OPTION_NONE),\n+                        match_qpath(some_qpath, &paths::OPTION_NONE),\n                     PatKind::TupleStruct(ref err_qpath, &[Pat { kind: PatKind::Wild, .. }], _) =>\n-                        match_qpath(err_qpath, &clippy_utils::paths::RESULT_ERR),\n+                        match_qpath(err_qpath, &paths::RESULT_ERR),\n                     _ => false,\n                 }\n             );\n             let unwrap_arm = &arms[1 - idx];\n             if let PatKind::TupleStruct(ref unwrap_qpath, &[unwrap_pat], _) = unwrap_arm.pat.kind;\n-            if match_qpath(unwrap_qpath, &clippy_utils::paths::OPTION_SOME)\n-                || match_qpath(unwrap_qpath, &clippy_utils::paths::RESULT_OK);\n+            if match_qpath(unwrap_qpath, &paths::OPTION_SOME)\n+                || match_qpath(unwrap_qpath, &paths::RESULT_OK);\n             if let PatKind::Binding(_, binding_hir_id, ..) = unwrap_pat.kind;\n             if path_to_local_id(unwrap_arm.body, binding_hir_id);\n             if !contains_return_break_continue_macro(or_arm.body);"}, {"sha": "99e3d818b798b53ed3253fa1762f15c14f4ebdff", "filename": "clippy_lints/src/suspicious_trait_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/565400d1f990399726498b66e87d6866533d1b1d/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/565400d1f990399726498b66e87d6866533d1b1d/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs?ref=565400d1f990399726498b66e87d6866533d1b1d", "patch": "@@ -1,5 +1,5 @@\n use clippy_utils::diagnostics::span_lint;\n-use clippy_utils::{get_trait_def_id, trait_ref_of_method};\n+use clippy_utils::{get_trait_def_id, paths, trait_ref_of_method};\n use if_chain::if_chain;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n@@ -159,7 +159,7 @@ fn check_binop(\n     expected_ops: &[hir::BinOpKind],\n ) -> Option<&'static str> {\n     let mut trait_ids = vec![];\n-    let [krate, module] = clippy_utils::paths::OPS_MODULE;\n+    let [krate, module] = paths::OPS_MODULE;\n \n     for &t in traits {\n         let path = [krate, module, t];"}]}