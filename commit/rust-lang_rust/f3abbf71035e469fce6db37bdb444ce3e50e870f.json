{"sha": "f3abbf71035e469fce6db37bdb444ce3e50e870f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYWJiZjcxMDM1ZTQ2OWZjZTZkYjM3YmRiNDQ0Y2UzZTUwZTg3MGY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-21T10:59:51Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-21T10:59:51Z"}, "message": "tidy is being silly", "tree": {"sha": "c787e7be11c4019b2a581e3ad2cfac688d0a8221", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c787e7be11c4019b2a581e3ad2cfac688d0a8221"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3abbf71035e469fce6db37bdb444ce3e50e870f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3abbf71035e469fce6db37bdb444ce3e50e870f", "html_url": "https://github.com/rust-lang/rust/commit/f3abbf71035e469fce6db37bdb444ce3e50e870f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3abbf71035e469fce6db37bdb444ce3e50e870f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b47e78a16524ed4878bfffaaf60c32bb18d88ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b47e78a16524ed4878bfffaaf60c32bb18d88ae", "html_url": "https://github.com/rust-lang/rust/commit/4b47e78a16524ed4878bfffaaf60c32bb18d88ae"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "2e88db8df11634f3ea30c78340a2d12fb2722137", "filename": "src/libcore/mem/maybe_uninit.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f3abbf71035e469fce6db37bdb444ce3e50e870f/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3abbf71035e469fce6db37bdb444ce3e50e870f/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs?ref=f3abbf71035e469fce6db37bdb444ce3e50e870f", "patch": "@@ -253,11 +253,8 @@ impl<T> MaybeUninit<T> {\n     }\n \n     /// A promotable constant, equivalent to `uninit()`.\n-    #[unstable(\n-        feature = \"internal_uninit_const\",\n-        issue = \"0\",\n-        reason = \"hack to work around promotability\",\n-    )]\n+    #[unstable(feature = \"internal_uninit_const\", issue = \"0\",\n+        reason = \"hack to work around promotability\")]\n     pub const UNINIT: Self = Self::uninit();\n \n     /// Creates a new `MaybeUninit<T>` in an uninitialized state, with the memory being"}]}