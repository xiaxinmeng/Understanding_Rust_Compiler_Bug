{"sha": "dc377b21e892a335819e39312ae999c67b005324", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMzc3YjIxZTg5MmEzMzU4MTllMzkzMTJhZTk5OWM2N2IwMDUzMjQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-09-20T05:46:27Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-09-20T05:46:27Z"}, "message": "Rollup merge of #28507 - Manishearth:const-stable, r=alexcrichton\n\nFixes #28490\n\ncc #24111", "tree": {"sha": "b3eaf7923ffcd7edf1ea767fa50131021f84f3df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3eaf7923ffcd7edf1ea767fa50131021f84f3df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc377b21e892a335819e39312ae999c67b005324", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc377b21e892a335819e39312ae999c67b005324", "html_url": "https://github.com/rust-lang/rust/commit/dc377b21e892a335819e39312ae999c67b005324", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc377b21e892a335819e39312ae999c67b005324/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d007eb628a935472b0e2dc689ded992c65195ccd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d007eb628a935472b0e2dc689ded992c65195ccd", "html_url": "https://github.com/rust-lang/rust/commit/d007eb628a935472b0e2dc689ded992c65195ccd"}, {"sha": "dcf49b5f680a74b402a516e5bd1c855ac18259f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcf49b5f680a74b402a516e5bd1c855ac18259f5", "html_url": "https://github.com/rust-lang/rust/commit/dcf49b5f680a74b402a516e5bd1c855ac18259f5"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "93c8b2ab0f134ad91d9efbfa9f7833660ab1c081", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dc377b21e892a335819e39312ae999c67b005324/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc377b21e892a335819e39312ae999c67b005324/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=dc377b21e892a335819e39312ae999c67b005324", "patch": "@@ -298,10 +298,18 @@ const FOO: i32 = { 0 }; // but brackets are useless here\n ```\n \"##,\n \n+// FIXME(#24111) Change the language here when const fn stabilizes\n E0015: r##\"\n The only functions that can be called in static or constant expressions are\n-`const` functions. Rust currently does not support more general compile-time\n-function execution.\n+`const` functions, and struct/enum constructors. `const` functions are only\n+available on a nightly compiler. Rust currently does not support more general\n+compile-time function execution.\n+\n+```\n+const FOO: Option<u8> = Some(1); // enum constructor\n+struct Bar {x: u8}\n+const BAR: Bar = Bar {x: 1}; // struct constructor\n+```\n \n See [RFC 911] for more details on the design of `const fn`s.\n "}, {"sha": "f7bfb6e8a40187adde2bd5a3bc44b4f932c002c5", "filename": "src/librustc/middle/check_const.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/dc377b21e892a335819e39312ae999c67b005324/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc377b21e892a335819e39312ae999c67b005324/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs?ref=dc377b21e892a335819e39312ae999c67b005324", "patch": "@@ -39,6 +39,7 @@ use util::nodemap::NodeMap;\n use rustc_front::hir;\n use syntax::ast;\n use syntax::codemap::Span;\n+use syntax::feature_gate::UnstableFeatures;\n use rustc_front::visit::{self, FnKind, Visitor};\n \n use std::collections::hash_map::Entry;\n@@ -709,10 +710,21 @@ fn check_expr<'a, 'tcx>(v: &mut CheckCrateVisitor<'a, 'tcx>,\n             if !is_const {\n                 v.add_qualif(ConstQualif::NOT_CONST);\n                 if v.mode != Mode::Var {\n-                    span_err!(v.tcx.sess, e.span, E0015,\n-                              \"function calls in {}s are limited to \\\n-                               constant functions, \\\n-                               struct and enum constructors\", v.msg());\n+                    // FIXME(#24111) Remove this check when const fn stabilizes\n+                    if let UnstableFeatures::Disallow = v.tcx.sess.opts.unstable_features {\n+                        span_err!(v.tcx.sess, e.span, E0015,\n+                                  \"function calls in {}s are limited to \\\n+                                   struct and enum constructors\", v.msg());\n+                        v.tcx.sess.span_note(e.span,\n+                                             \"a limited form of compile-time function \\\n+                                              evaluation is available on a nightly \\\n+                                              compiler via `const fn`\");\n+                    } else {\n+                        span_err!(v.tcx.sess, e.span, E0015,\n+                                  \"function calls in {}s are limited to \\\n+                                   constant functions, \\\n+                                   struct and enum constructors\", v.msg());\n+                    }\n                 }\n             }\n         }"}]}