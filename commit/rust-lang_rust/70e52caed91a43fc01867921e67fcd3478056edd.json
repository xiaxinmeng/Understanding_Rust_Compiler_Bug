{"sha": "70e52caed91a43fc01867921e67fcd3478056edd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwZTUyY2FlZDkxYTQzZmMwMTg2NzkyMWU2N2ZjZDM0NzgwNTZlZGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-12T16:14:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-12T16:14:30Z"}, "message": "Auto merge of #85231 - GuillaumeGomez:rollup-hufe4gz, r=GuillaumeGomez\n\nRollup of 5 pull requests\n\nSuccessful merges:\n\n - #84793 (Recover from invalid `struct` item syntax)\n - #85117 (Move global click handlers to per-element ones.)\n - #85141 (Update documentation for SharedContext::maybe_collapsed_doc_value)\n - #85174 (Fix border radius for doc code blocks in rustdoc)\n - #85205 (Update books)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "b924c0c63062f41f1ae988dc64421ba8cfb63673", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b924c0c63062f41f1ae988dc64421ba8cfb63673"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70e52caed91a43fc01867921e67fcd3478056edd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70e52caed91a43fc01867921e67fcd3478056edd", "html_url": "https://github.com/rust-lang/rust/commit/70e52caed91a43fc01867921e67fcd3478056edd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70e52caed91a43fc01867921e67fcd3478056edd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28e2b29b8952485679367cc05699fb5154f4e5c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/28e2b29b8952485679367cc05699fb5154f4e5c3", "html_url": "https://github.com/rust-lang/rust/commit/28e2b29b8952485679367cc05699fb5154f4e5c3"}, {"sha": "7684247e14d190f0bd34e477192f7ec9424ff2e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7684247e14d190f0bd34e477192f7ec9424ff2e2", "html_url": "https://github.com/rust-lang/rust/commit/7684247e14d190f0bd34e477192f7ec9424ff2e2"}], "stats": {"total": 492, "additions": 354, "deletions": 138}, "files": [{"sha": "b2b578f1ed44a41a1c84df1e42d8da5fb15a425b", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/70e52caed91a43fc01867921e67fcd3478056edd/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70e52caed91a43fc01867921e67fcd3478056edd/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -1399,6 +1399,37 @@ impl<'a> Parser<'a> {\n         Ok(a_var)\n     }\n \n+    fn expect_field_ty_separator(&mut self) -> PResult<'a, ()> {\n+        if let Err(mut err) = self.expect(&token::Colon) {\n+            let sm = self.sess.source_map();\n+            let eq_typo = self.token.kind == token::Eq && self.look_ahead(1, |t| t.is_path_start());\n+            let semi_typo = self.token.kind == token::Semi\n+                && self.look_ahead(1, |t| {\n+                    t.is_path_start()\n+                    // We check that we are in a situation like `foo; bar` to avoid bad suggestions\n+                    // when there's no type and `;` was used instead of a comma.\n+                    && match (sm.lookup_line(self.token.span.hi()), sm.lookup_line(t.span.lo())) {\n+                        (Ok(l), Ok(r)) => l.line == r.line,\n+                        _ => true,\n+                    }\n+                });\n+            if eq_typo || semi_typo {\n+                self.bump();\n+                // Gracefully handle small typos.\n+                err.span_suggestion_short(\n+                    self.prev_token.span,\n+                    \"field names and their types are separated with `:`\",\n+                    \":\".to_string(),\n+                    Applicability::MachineApplicable,\n+                );\n+                err.emit();\n+            } else {\n+                return Err(err);\n+            }\n+        }\n+        Ok(())\n+    }\n+\n     /// Parses a structure field.\n     fn parse_name_and_ty(\n         &mut self,\n@@ -1408,8 +1439,21 @@ impl<'a> Parser<'a> {\n         attrs: Vec<Attribute>,\n     ) -> PResult<'a, FieldDef> {\n         let name = self.parse_field_ident(adt_ty, lo)?;\n-        self.expect(&token::Colon)?;\n+        self.expect_field_ty_separator()?;\n         let ty = self.parse_ty()?;\n+        if self.token.kind == token::Eq {\n+            self.bump();\n+            let const_expr = self.parse_anon_const_expr()?;\n+            let sp = ty.span.shrink_to_hi().to(const_expr.value.span);\n+            self.struct_span_err(sp, \"default values on `struct` fields aren't supported\")\n+                .span_suggestion(\n+                    sp,\n+                    \"remove this unsupported default value\",\n+                    String::new(),\n+                    Applicability::MachineApplicable,\n+                )\n+                .emit();\n+        }\n         Ok(FieldDef {\n             span: lo.to(self.prev_token.span),\n             ident: Some(name),"}, {"sha": "55a26488ddefc8433e73a2e8352d70f7a5c7fc2b", "filename": "src/doc/book", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -1 +1 @@\n-Subproject commit 50dd06cb71beb27fdc0eebade5509cdcc1f821ed\n+Subproject commit 55a26488ddefc8433e73a2e8352d70f7a5c7fc2b"}, {"sha": "55de6fa3c1f331774da19472c9ee57d2ae9eb039", "filename": "src/doc/nomicon", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnomicon?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -1 +1 @@\n-Subproject commit 8551afbb2ca6f5ea37fe58380318b209785e4e02\n+Subproject commit 55de6fa3c1f331774da19472c9ee57d2ae9eb039"}, {"sha": "5aa457bf1b54bd2cd5d4cf49797f29299bdf89a7", "filename": "src/doc/reference", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -1 +1 @@\n-Subproject commit d23f9da8469617e6c81121d9fd123443df70595d\n+Subproject commit 5aa457bf1b54bd2cd5d4cf49797f29299bdf89a7"}, {"sha": "5f8c6da200ada77760a2fe1096938ef58151c9a6", "filename": "src/doc/rust-by-example", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust-by-example?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -1 +1 @@\n-Subproject commit e0a721f5202e6d9bec0aff99f10e44480c0da9e7\n+Subproject commit 5f8c6da200ada77760a2fe1096938ef58151c9a6"}, {"sha": "1e6c7fbda4c45e85adf63ff3f82fa9c870b1447f", "filename": "src/doc/rustc-dev-guide", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc-dev-guide?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -1 +1 @@\n-Subproject commit e72b43a64925ce053dc7830e21c1a57ba00499bd\n+Subproject commit 1e6c7fbda4c45e85adf63ff3f82fa9c870b1447f"}, {"sha": "ec04c94dc11f9131c2b8c45dcb1dc9bfe3a97059", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -105,7 +105,7 @@ crate fn render<T: Print, S: Print>(\n                            placeholder=\\\"Click or press \u2018S\u2019 to search, \u2018?\u2019 for more options\u2026\\\" \\\n                            type=\\\"search\\\">\\\n                 </div>\\\n-                <button type=\\\"button\\\" class=\\\"help-button\\\">?</button>\n+                <button type=\\\"button\\\" id=\\\"help-button\\\">?</button>\n                 <a id=\\\"settings-menu\\\" href=\\\"{root_path}settings.html\\\">\\\n                     <img src=\\\"{static_root_path}wheel{suffix}.svg\\\" \\\n                          width=\\\"18\\\" height=\\\"18\\\" \\"}, {"sha": "00a91e07d65e3ff46d5e2d65da8697616a627854", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -1347,6 +1347,7 @@ fn init_id_map() -> FxHashMap<String, usize> {\n     map.insert(\"theme-picker\".to_owned(), 1);\n     map.insert(\"theme-choices\".to_owned(), 1);\n     map.insert(\"settings-menu\".to_owned(), 1);\n+    map.insert(\"help-button\".to_owned(), 1);\n     map.insert(\"main\".to_owned(), 1);\n     map.insert(\"search\".to_owned(), 1);\n     map.insert(\"crate-search\".to_owned(), 1);"}, {"sha": "8676efd9fa8b2549fb90ffba66e34fe0f149bbca", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -137,8 +137,8 @@ impl SharedContext<'_> {\n         Ok(())\n     }\n \n-    /// Based on whether the `collapse-docs` pass was run, return either the `doc_value` or the\n-    /// `collapsed_doc_value` of the given item.\n+    /// Returns the `collapsed_doc_value` of the given item if this is the main crate, otherwise\n+    /// returns the `doc_value`.\n     crate fn maybe_collapsed_doc_value<'a>(&self, item: &'a clean::Item) -> Option<String> {\n         if self.collapsed { item.collapsed_doc_value() } else { item.doc_value() }\n     }"}, {"sha": "8be08623b731a1b34fdf3d81e848be3e28a0d428", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 29, "deletions": 117, "changes": 146, "blob_url": "https://github.com/rust-lang/rust/blob/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -381,56 +381,9 @@ function hideThemeButtonState() {\n         }\n     }\n \n-    function highlightSourceLines(match, ev) {\n-        if (typeof match === \"undefined\") {\n-            // If we're in mobile mode, we should hide the sidebar in any case.\n-            hideSidebar();\n-            match = window.location.hash.match(/^#?(\\d+)(?:-(\\d+))?$/);\n-        }\n-        if (!match) {\n-            return;\n-        }\n-        var from = parseInt(match[1], 10);\n-        var to = from;\n-        if (typeof match[2] !== \"undefined\") {\n-            to = parseInt(match[2], 10);\n-        }\n-        if (to < from) {\n-            var tmp = to;\n-            to = from;\n-            from = tmp;\n-        }\n-        var elem = document.getElementById(from);\n-        if (!elem) {\n-            return;\n-        }\n-        if (!ev) {\n-            var x = document.getElementById(from);\n-            if (x) {\n-                x.scrollIntoView();\n-            }\n-        }\n-        onEachLazy(document.getElementsByClassName(\"line-numbers\"), function(e) {\n-            onEachLazy(e.getElementsByTagName(\"span\"), function(i_e) {\n-                removeClass(i_e, \"line-highlighted\");\n-            });\n-        });\n-        for (var i = from; i <= to; ++i) {\n-            elem = document.getElementById(i);\n-            if (!elem) {\n-                break;\n-            }\n-            addClass(elem, \"line-highlighted\");\n-        }\n-    }\n-\n     function onHashChange(ev) {\n         // If we're in mobile mode, we should hide the sidebar in any case.\n         hideSidebar();\n-        var match = window.location.hash.match(/^#?(\\d+)(?:-(\\d+))?$/);\n-        if (match) {\n-            return highlightSourceLines(match, ev);\n-        }\n         handleHashes(ev);\n     }\n \n@@ -585,78 +538,9 @@ function hideThemeButtonState() {\n         }\n     }\n \n-    function findParentElement(elem, tagName) {\n-        do {\n-            if (elem && elem.tagName === tagName) {\n-                return elem;\n-            }\n-            elem = elem.parentNode;\n-        } while (elem);\n-        return null;\n-    }\n-\n     document.addEventListener(\"keypress\", handleShortcut);\n     document.addEventListener(\"keydown\", handleShortcut);\n \n-    var handleSourceHighlight = (function() {\n-        var prev_line_id = 0;\n-\n-        var set_fragment = function(name) {\n-            var x = window.scrollX,\n-                y = window.scrollY;\n-            if (searchState.browserSupportsHistoryApi()) {\n-                history.replaceState(null, null, \"#\" + name);\n-                highlightSourceLines();\n-            } else {\n-                location.replace(\"#\" + name);\n-            }\n-            // Prevent jumps when selecting one or many lines\n-            window.scrollTo(x, y);\n-        };\n-\n-        return function(ev) {\n-            var cur_line_id = parseInt(ev.target.id, 10);\n-            ev.preventDefault();\n-\n-            if (ev.shiftKey && prev_line_id) {\n-                // Swap selection if needed\n-                if (prev_line_id > cur_line_id) {\n-                    var tmp = prev_line_id;\n-                    prev_line_id = cur_line_id;\n-                    cur_line_id = tmp;\n-                }\n-\n-                set_fragment(prev_line_id + \"-\" + cur_line_id);\n-            } else {\n-                prev_line_id = cur_line_id;\n-\n-                set_fragment(cur_line_id);\n-            }\n-        };\n-    }());\n-\n-    document.addEventListener(\"click\", function(ev) {\n-        var helpElem = getHelpElement(false);\n-        if (hasClass(ev.target, \"help-button\")) {\n-            displayHelp(true, ev);\n-        } else if (ev.target.tagName === \"SPAN\" && hasClass(ev.target.parentNode, \"line-numbers\")) {\n-            handleSourceHighlight(ev);\n-        } else if (helpElem && hasClass(helpElem, \"hidden\") === false) {\n-            var is_inside_help_popup = ev.target !== helpElem && helpElem.contains(ev.target);\n-            if (is_inside_help_popup === false) {\n-                addClass(helpElem, \"hidden\");\n-                removeClass(document.body, \"blur\");\n-            }\n-        } else {\n-            // Making a collapsed element visible on onhashchange seems\n-            // too late\n-            var a = findParentElement(ev.target, \"A\");\n-            if (a && a.hash) {\n-                expandSection(a.hash.replace(/^#/, \"\"));\n-            }\n-        }\n-    });\n-\n     (function() {\n         var x = document.getElementsByClassName(\"version-selector\");\n         if (x.length > 0) {\n@@ -1121,6 +1005,27 @@ function hideThemeButtonState() {\n         });\n     }());\n \n+    function handleClick(id, f) {\n+        var elem = document.getElementById(id);\n+        if (elem) {\n+            elem.addEventListener(\"click\", f);\n+        }\n+    }\n+    handleClick(\"help-button\", function(ev) {\n+        displayHelp(true, ev);\n+    });\n+\n+    onEachLazy(document.getElementsByTagName(\"a\"), function(el) {\n+        // For clicks on internal links (<A> tags with a hash property), we expand the section we're\n+        // jumping to *before* jumping there. We can't do this in onHashChange, because it changes\n+        // the height of the document so we wind up scrolled to the wrong place.\n+        if (el.hash) {\n+            el.addEventListener(\"click\", function() {\n+                expandSection(el.hash.slice(1));\n+            });\n+        }\n+    });\n+\n     onEachLazy(document.getElementsByClassName(\"notable-traits\"), function(e) {\n         e.onclick = function() {\n             this.getElementsByClassName('notable-traits-tooltiptext')[0]\n@@ -1165,6 +1070,13 @@ function hideThemeButtonState() {\n         addClass(popup, \"hidden\");\n         popup.id = \"help\";\n \n+        popup.addEventListener(\"click\", function(ev) {\n+            if (ev.target === popup) {\n+                // Clicked the blurred zone outside the help popup; dismiss help.\n+                displayHelp(false, ev);\n+            }\n+        });\n+\n         var book_info = document.createElement(\"span\");\n         book_info.innerHTML = \"You can find more information in \\\n             <a href=\\\"https://doc.rust-lang.org/rustdoc/\\\">the rustdoc book</a>.\";\n@@ -1223,7 +1135,7 @@ function hideThemeButtonState() {\n     }\n \n     onHashChange(null);\n-    window.onhashchange = onHashChange;\n+    window.addEventListener(\"hashchange\", onHashChange);\n     searchState.setup();\n }());\n "}, {"sha": "38afebc8d114b797f597acecb05c3d4f9ef50138", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -371,6 +371,8 @@ nav.sub {\n \tborder: 1px solid;\n \tpadding: 13px 8px;\n \ttext-align: right;\n+\tborder-top-left-radius: 5px;\n+\tborder-bottom-left-radius: 5px;\n }\n \n .rustdoc:not(.source) .example-wrap > pre.rust {\n@@ -398,8 +400,6 @@ nav.sub {\n \t-moz-user-select: none;\n \t-ms-user-select: none;\n \tuser-select: none;\n-\tborder-top-left-radius: 5px;\n-\tborder-bottom-left-radius: 5px;\n }\n .line-numbers span {\n \tcursor: pointer;\n@@ -1289,7 +1289,7 @@ h4 > .notable-traits {\n \toutline: none;\n }\n \n-#settings-menu, .help-button {\n+#settings-menu, #help-button {\n \tposition: absolute;\n \ttop: 10px;\n }\n@@ -1299,7 +1299,7 @@ h4 > .notable-traits {\n \toutline: none;\n }\n \n-#theme-picker, #settings-menu, .help-button, #copy-path {\n+#theme-picker, #settings-menu, #help-button, #copy-path {\n \tpadding: 4px;\n \twidth: 27px;\n \theight: 29px;\n@@ -1308,7 +1308,7 @@ h4 > .notable-traits {\n \tcursor: pointer;\n }\n \n-.help-button {\n+#help-button {\n \tright: 30px;\n \tfont-family: \"Fira Sans\", Arial, sans-serif;\n \ttext-align: center;\n@@ -1593,7 +1593,7 @@ h4 > .notable-traits {\n \t}\n \n \t/* We don't display the help button on mobile devices. */\n-\t.help-button {\n+\t#help-button {\n \t\tdisplay: none;\n \t}\n \t.search-container > div {"}, {"sha": "81cf437c7dbb0befa80f842f5c300a85375f68a3", "filename": "src/librustdoc/html/static/source-script.js", "status": "modified", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/rust-lang/rust/blob/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js", "raw_url": "https://github.com/rust-lang/rust/raw/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -3,6 +3,7 @@\n \n // Local js definitions:\n /* global addClass, getCurrentValue, hasClass, removeClass, updateLocalStorage */\n+(function() {\n \n function getCurrentFilePath() {\n     var parts = window.location.pathname.split(\"/\");\n@@ -149,3 +150,99 @@ function createSourceSidebar() {\n         selected_elem.focus();\n     }\n }\n+\n+var lineNumbersRegex = /^#?(\\d+)(?:-(\\d+))?$/;\n+\n+function highlightSourceLines(match, ev) {\n+    if (typeof match === \"undefined\") {\n+        match = window.location.hash.match(lineNumbersRegex);\n+    }\n+    if (!match) {\n+        return;\n+    }\n+    var from = parseInt(match[1], 10);\n+    var to = from;\n+    if (typeof match[2] !== \"undefined\") {\n+        to = parseInt(match[2], 10);\n+    }\n+    if (to < from) {\n+        var tmp = to;\n+        to = from;\n+        from = tmp;\n+    }\n+    var elem = document.getElementById(from);\n+    if (!elem) {\n+        return;\n+    }\n+    if (!ev) {\n+        var x = document.getElementById(from);\n+        if (x) {\n+            x.scrollIntoView();\n+        }\n+    }\n+    onEachLazy(document.getElementsByClassName(\"line-numbers\"), function(e) {\n+        onEachLazy(e.getElementsByTagName(\"span\"), function(i_e) {\n+            removeClass(i_e, \"line-highlighted\");\n+        });\n+    });\n+    for (var i = from; i <= to; ++i) {\n+        elem = document.getElementById(i);\n+        if (!elem) {\n+            break;\n+        }\n+        addClass(elem, \"line-highlighted\");\n+    }\n+}\n+\n+var handleSourceHighlight = (function() {\n+    var prev_line_id = 0;\n+\n+    var set_fragment = function(name) {\n+        var x = window.scrollX,\n+            y = window.scrollY;\n+        if (searchState.browserSupportsHistoryApi()) {\n+            history.replaceState(null, null, \"#\" + name);\n+            highlightSourceLines();\n+        } else {\n+            location.replace(\"#\" + name);\n+        }\n+        // Prevent jumps when selecting one or many lines\n+        window.scrollTo(x, y);\n+    };\n+\n+    return function(ev) {\n+        var cur_line_id = parseInt(ev.target.id, 10);\n+        ev.preventDefault();\n+\n+        if (ev.shiftKey && prev_line_id) {\n+            // Swap selection if needed\n+            if (prev_line_id > cur_line_id) {\n+                var tmp = prev_line_id;\n+                prev_line_id = cur_line_id;\n+                cur_line_id = tmp;\n+            }\n+\n+            set_fragment(prev_line_id + \"-\" + cur_line_id);\n+        } else {\n+            prev_line_id = cur_line_id;\n+\n+            set_fragment(cur_line_id);\n+        }\n+    };\n+}());\n+\n+window.addEventListener(\"hashchange\", function() {\n+    var match = window.location.hash.match(lineNumbersRegex);\n+    if (match) {\n+        return highlightSourceLines(match, ev);\n+    }\n+});\n+\n+onEachLazy(document.getElementsByClassName(\"line-numbers\"), function(el) {\n+    el.addEventListener(\"click\", handleSourceHighlight);\n+});\n+\n+highlightSourceLines();\n+\n+window.createSourceSidebar = createSourceSidebar;\n+})();"}, {"sha": "08148fdcf9597b9065a07c15f223a204688a4b4f", "filename": "src/librustdoc/html/static/themes/ayu.css", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -503,7 +503,7 @@ kbd {\n \tbox-shadow-color: #c6cbd1;\n }\n \n-#theme-picker, #settings-menu, .help-button, #copy-path {\n+#theme-picker, #settings-menu, #help-button, #copy-path {\n \tborder-color: #5c6773;\n \tbackground-color: #0f1419;\n \tcolor: #fff;\n@@ -515,7 +515,7 @@ kbd {\n \n #theme-picker:hover, #theme-picker:focus,\n #settings-menu:hover, #settings-menu:focus,\n-.help-button:hover, .help-button:focus,\n+#help-button:hover, #help-button:focus,\n #copy-path:hover, #copy-path:focus {\n \tborder-color: #e0e0e0;\n }"}, {"sha": "8ee51d39c9214cb3d73e191da62a86fb53a19fc0", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -393,15 +393,15 @@ kbd {\n \tbox-shadow-color: #c6cbd1;\n }\n \n-#theme-picker, #settings-menu, .help-button, #copy-path {\n+#theme-picker, #settings-menu, #help-button, #copy-path {\n \tborder-color: #e0e0e0;\n \tbackground: #f0f0f0;\n \tcolor: #000;\n }\n \n #theme-picker:hover, #theme-picker:focus,\n #settings-menu:hover, #settings-menu:focus,\n-.help-button:hover, .help-button:focus,\n+#help-button:hover, #help-button:focus,\n #copy-path:hover, #copy-path:focus {\n \tborder-color: #ffb900;\n }"}, {"sha": "e0efcfe2249af3bf0fc1d1dc86ff08349d197bc7", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/70e52caed91a43fc01867921e67fcd3478056edd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -385,14 +385,14 @@ kbd {\n \tbox-shadow-color: #c6cbd1;\n }\n \n-#theme-picker, #settings-menu, .help-button, #copy-path {\n+#theme-picker, #settings-menu, #help-button, #copy-path {\n \tborder-color: #e0e0e0;\n \tbackground-color: #fff;\n }\n \n #theme-picker:hover, #theme-picker:focus,\n #settings-menu:hover, #settings-menu:focus,\n-.help-button:hover, .help-button:focus,\n+#help-button:hover, #help-button:focus,\n #copy-path:hover, #copy-path:focus {\n \tborder-color: #717171;\n }"}, {"sha": "28191b82621fdc518dbaebb7fedffa30e480c28b", "filename": "src/test/ui/parser/struct-default-values-and-missing-field-separator.fixed", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/70e52caed91a43fc01867921e67fcd3478056edd/src%2Ftest%2Fui%2Fparser%2Fstruct-default-values-and-missing-field-separator.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/70e52caed91a43fc01867921e67fcd3478056edd/src%2Ftest%2Fui%2Fparser%2Fstruct-default-values-and-missing-field-separator.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fstruct-default-values-and-missing-field-separator.fixed?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -0,0 +1,35 @@\n+// run-rustfix\n+#![allow(dead_code)]\n+\n+enum E {\n+    A,\n+}\n+\n+struct S {\n+    field1: i32, //~ ERROR default values on `struct` fields aren't supported\n+    field2: E, //~ ERROR default values on `struct` fields aren't supported\n+    field3: i32, //~ ERROR default values on `struct` fields aren't supported\n+    field4: i32, //~ ERROR default values on `struct` fields aren't supported\n+    field5: E, //~ ERROR default values on `struct` fields aren't supported\n+    field6: E, //~ ERROR default values on `struct` fields aren't supported\n+}\n+\n+struct S1 {\n+    field1: i32, //~ ERROR expected `,`, or `}`, found `field2`\n+    field2: E, //~ ERROR expected `,`, or `}`, found `field3`\n+    field3: i32, //~ ERROR default values on `struct` fields aren't supported\n+    field4: i32, //~ ERROR default values on `struct` fields aren't supported\n+    field5: E, //~ ERROR default values on `struct` fields aren't supported\n+    field6: E, //~ ERROR default values on `struct` fields aren't supported\n+}\n+\n+struct S2 {\n+    field1 : i32, //~ ERROR expected `:`, found `=`\n+    field2: E, //~ ERROR expected `:`, found `;`\n+}\n+\n+const fn foo(_: i32) -> E {\n+    E::A\n+}\n+\n+fn main() {}"}, {"sha": "924cb08a990a56ea73d3a659b63a4736aca31861", "filename": "src/test/ui/parser/struct-default-values-and-missing-field-separator.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/70e52caed91a43fc01867921e67fcd3478056edd/src%2Ftest%2Fui%2Fparser%2Fstruct-default-values-and-missing-field-separator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70e52caed91a43fc01867921e67fcd3478056edd/src%2Ftest%2Fui%2Fparser%2Fstruct-default-values-and-missing-field-separator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fstruct-default-values-and-missing-field-separator.rs?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -0,0 +1,35 @@\n+// run-rustfix\n+#![allow(dead_code)]\n+\n+enum E {\n+    A,\n+}\n+\n+struct S {\n+    field1: i32 = 42, //~ ERROR default values on `struct` fields aren't supported\n+    field2: E = E::A, //~ ERROR default values on `struct` fields aren't supported\n+    field3: i32 = 1 + 2, //~ ERROR default values on `struct` fields aren't supported\n+    field4: i32 = { 1 + 2 }, //~ ERROR default values on `struct` fields aren't supported\n+    field5: E = foo(42), //~ ERROR default values on `struct` fields aren't supported\n+    field6: E = { foo(42) }, //~ ERROR default values on `struct` fields aren't supported\n+}\n+\n+struct S1 {\n+    field1: i32 //~ ERROR expected `,`, or `}`, found `field2`\n+    field2: E //~ ERROR expected `,`, or `}`, found `field3`\n+    field3: i32 = 1 + 2, //~ ERROR default values on `struct` fields aren't supported\n+    field4: i32 = { 1 + 2 }, //~ ERROR default values on `struct` fields aren't supported\n+    field5: E = foo(42), //~ ERROR default values on `struct` fields aren't supported\n+    field6: E = { foo(42) }, //~ ERROR default values on `struct` fields aren't supported\n+}\n+\n+struct S2 {\n+    field1 = i32, //~ ERROR expected `:`, found `=`\n+    field2; E, //~ ERROR expected `:`, found `;`\n+}\n+\n+const fn foo(_: i32) -> E {\n+    E::A\n+}\n+\n+fn main() {}"}, {"sha": "7f16ebcfc3ace26b8c82a3dd1eadb84c1635254d", "filename": "src/test/ui/parser/struct-default-values-and-missing-field-separator.stderr", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/70e52caed91a43fc01867921e67fcd3478056edd/src%2Ftest%2Fui%2Fparser%2Fstruct-default-values-and-missing-field-separator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/70e52caed91a43fc01867921e67fcd3478056edd/src%2Ftest%2Fui%2Fparser%2Fstruct-default-values-and-missing-field-separator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fstruct-default-values-and-missing-field-separator.stderr?ref=70e52caed91a43fc01867921e67fcd3478056edd", "patch": "@@ -0,0 +1,92 @@\n+error: default values on `struct` fields aren't supported\n+  --> $DIR/struct-default-values-and-missing-field-separator.rs:9:16\n+   |\n+LL |     field1: i32 = 42,\n+   |                ^^^^^ help: remove this unsupported default value\n+\n+error: default values on `struct` fields aren't supported\n+  --> $DIR/struct-default-values-and-missing-field-separator.rs:10:14\n+   |\n+LL |     field2: E = E::A,\n+   |              ^^^^^^^ help: remove this unsupported default value\n+\n+error: default values on `struct` fields aren't supported\n+  --> $DIR/struct-default-values-and-missing-field-separator.rs:11:16\n+   |\n+LL |     field3: i32 = 1 + 2,\n+   |                ^^^^^^^^ help: remove this unsupported default value\n+\n+error: default values on `struct` fields aren't supported\n+  --> $DIR/struct-default-values-and-missing-field-separator.rs:12:16\n+   |\n+LL |     field4: i32 = { 1 + 2 },\n+   |                ^^^^^^^^^^^^ help: remove this unsupported default value\n+\n+error: default values on `struct` fields aren't supported\n+  --> $DIR/struct-default-values-and-missing-field-separator.rs:13:14\n+   |\n+LL |     field5: E = foo(42),\n+   |              ^^^^^^^^^^ help: remove this unsupported default value\n+\n+error: default values on `struct` fields aren't supported\n+  --> $DIR/struct-default-values-and-missing-field-separator.rs:14:14\n+   |\n+LL |     field6: E = { foo(42) },\n+   |              ^^^^^^^^^^^^^^ help: remove this unsupported default value\n+\n+error: expected `,`, or `}`, found `field2`\n+  --> $DIR/struct-default-values-and-missing-field-separator.rs:18:16\n+   |\n+LL |     field1: i32\n+   |                ^ help: try adding a comma: `,`\n+\n+error: expected `,`, or `}`, found `field3`\n+  --> $DIR/struct-default-values-and-missing-field-separator.rs:19:14\n+   |\n+LL |     field2: E\n+   |              ^ help: try adding a comma: `,`\n+\n+error: default values on `struct` fields aren't supported\n+  --> $DIR/struct-default-values-and-missing-field-separator.rs:20:16\n+   |\n+LL |     field3: i32 = 1 + 2,\n+   |                ^^^^^^^^ help: remove this unsupported default value\n+\n+error: default values on `struct` fields aren't supported\n+  --> $DIR/struct-default-values-and-missing-field-separator.rs:21:16\n+   |\n+LL |     field4: i32 = { 1 + 2 },\n+   |                ^^^^^^^^^^^^ help: remove this unsupported default value\n+\n+error: default values on `struct` fields aren't supported\n+  --> $DIR/struct-default-values-and-missing-field-separator.rs:22:14\n+   |\n+LL |     field5: E = foo(42),\n+   |              ^^^^^^^^^^ help: remove this unsupported default value\n+\n+error: default values on `struct` fields aren't supported\n+  --> $DIR/struct-default-values-and-missing-field-separator.rs:23:14\n+   |\n+LL |     field6: E = { foo(42) },\n+   |              ^^^^^^^^^^^^^^ help: remove this unsupported default value\n+\n+error: expected `:`, found `=`\n+  --> $DIR/struct-default-values-and-missing-field-separator.rs:27:12\n+   |\n+LL |     field1 = i32,\n+   |            ^\n+   |            |\n+   |            expected `:`\n+   |            help: field names and their types are separated with `:`\n+\n+error: expected `:`, found `;`\n+  --> $DIR/struct-default-values-and-missing-field-separator.rs:28:11\n+   |\n+LL |     field2; E,\n+   |           ^\n+   |           |\n+   |           expected `:`\n+   |           help: field names and their types are separated with `:`\n+\n+error: aborting due to 14 previous errors\n+"}]}