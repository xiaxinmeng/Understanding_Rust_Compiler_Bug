{"sha": "eb669b3a83dc1c1195ade3bff7f237afdd569ba2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNjY5YjNhODNkYzFjMTE5NWFkZTNiZmY3ZjIzN2FmZGQ1NjliYTI=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-02-07T11:35:40Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-02-09T15:37:17Z"}, "message": "cleanup: remove hir_path_str", "tree": {"sha": "e6e9d9bc3549034dc21dd48f67239effe06a0227", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6e9d9bc3549034dc21dd48f67239effe06a0227"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb669b3a83dc1c1195ade3bff7f237afdd569ba2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb669b3a83dc1c1195ade3bff7f237afdd569ba2", "html_url": "https://github.com/rust-lang/rust/commit/eb669b3a83dc1c1195ade3bff7f237afdd569ba2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb669b3a83dc1c1195ade3bff7f237afdd569ba2/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a1a704903e5e671032811a2dc6fc958663bf4d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a1a704903e5e671032811a2dc6fc958663bf4d7", "html_url": "https://github.com/rust-lang/rust/commit/3a1a704903e5e671032811a2dc6fc958663bf4d7"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "388eafb826fb153a0a26cfb2eeefcdd3b6f17c4d", "filename": "src/librustc/ty/item_path.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb669b3a83dc1c1195ade3bff7f237afdd569ba2/src%2Flibrustc%2Fty%2Fitem_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb669b3a83dc1c1195ade3bff7f237afdd569ba2/src%2Flibrustc%2Fty%2Fitem_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fitem_path.rs?ref=eb669b3a83dc1c1195ade3bff7f237afdd569ba2", "patch": "@@ -76,11 +76,6 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         self.item_path_str(self.hir().local_def_id(id))\n     }\n \n-    // FIXME(@ljedrz): replace the NodeId variant\n-    pub fn hir_path_str(self, id: hir::HirId) -> String {\n-        self.item_path_str(self.hir().local_def_id_from_hir_id(id))\n-    }\n-\n     /// Returns a string identifying this def-id. This string is\n     /// suitable for user output. It always begins with a crate identifier.\n     pub fn absolute_item_path_str(self, def_id: DefId) -> String {"}]}