{"sha": "29d451ccb3adf8eecb42c68d532459e630e2096f", "node_id": "C_kwDOAAsO6NoAKDI5ZDQ1MWNjYjNhZGY4ZWVjYjQyYzY4ZDUzMjQ1OWU2MzBlMjA5NmY", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-07T14:24:49Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-07T14:24:49Z"}, "message": "fmt", "tree": {"sha": "b13860c13376d8ad3a20f23dc40e6d59e83a9318", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b13860c13376d8ad3a20f23dc40e6d59e83a9318"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29d451ccb3adf8eecb42c68d532459e630e2096f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29d451ccb3adf8eecb42c68d532459e630e2096f", "html_url": "https://github.com/rust-lang/rust/commit/29d451ccb3adf8eecb42c68d532459e630e2096f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29d451ccb3adf8eecb42c68d532459e630e2096f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "780952f922a52db435aff7b73cfdb6cb541083b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/780952f922a52db435aff7b73cfdb6cb541083b8", "html_url": "https://github.com/rust-lang/rust/commit/780952f922a52db435aff7b73cfdb6cb541083b8"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "6e0f83020f9574de20c56761a70ca4978941574a", "filename": "library/alloc/src/collections/vec_deque/tests.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/29d451ccb3adf8eecb42c68d532459e630e2096f/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29d451ccb3adf8eecb42c68d532459e630e2096f/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Ftests.rs?ref=29d451ccb3adf8eecb42c68d532459e630e2096f", "patch": "@@ -29,10 +29,10 @@ fn bench_push_front_100(b: &mut test::Bencher) {\n #[bench]\n fn bench_pop_back_100(b: &mut test::Bencher) {\n     let size = 100;\n-    let mut deq = VecDeque::<i32>::with_capacity(size+1);\n+    let mut deq = VecDeque::<i32>::with_capacity(size + 1);\n     // We'll mess with private state to pretend like `deq` is filled.\n     // Make sure the buffer is initialized so that we don't read uninit memory.\n-    unsafe { deq.ptr().write_bytes(0u8, size+1) };\n+    unsafe { deq.ptr().write_bytes(0u8, size + 1) };\n \n     b.iter(|| {\n         deq.head = size;\n@@ -72,17 +72,17 @@ fn bench_retain_half_10000(b: &mut test::Bencher) {\n \n     b.iter(|| {\n         let mut v = v.clone();\n-        v.retain(|x| *x > size/2)\n+        v.retain(|x| *x > size / 2)\n     })\n }\n \n #[bench]\n fn bench_pop_front_100(b: &mut test::Bencher) {\n     let size = 100;\n-    let mut deq = VecDeque::<i32>::with_capacity(size+1);\n+    let mut deq = VecDeque::<i32>::with_capacity(size + 1);\n     // We'll mess with private state to pretend like `deq` is filled.\n     // Make sure the buffer is initialized so that we don't read uninit memory.\n-    unsafe { deq.ptr().write_bytes(0u8, size+1) };\n+    unsafe { deq.ptr().write_bytes(0u8, size + 1) };\n \n     b.iter(|| {\n         deq.head = size;"}]}