{"sha": "51649665917366f605842e9261e77d49fc4e7549", "node_id": "C_kwDOAAsO6NoAKDUxNjQ5NjY1OTE3MzY2ZjYwNTg0MmU5MjYxZTc3ZDQ5ZmM0ZTc1NDk", "commit": {"author": {"name": "Jean CASPAR", "email": "55629512+JeanCASPAR@users.noreply.github.com", "date": "2022-08-18T16:08:39Z"}, "committer": {"name": "Jean CASPAR", "email": "55629512+JeanCASPAR@users.noreply.github.com", "date": "2022-08-22T17:21:41Z"}, "message": "Migrate ast_lowering::pat to SessionDiagnostic", "tree": {"sha": "8443ad6c974fc909e03f55b022e53bddfae39fe2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8443ad6c974fc909e03f55b022e53bddfae39fe2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51649665917366f605842e9261e77d49fc4e7549", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51649665917366f605842e9261e77d49fc4e7549", "html_url": "https://github.com/rust-lang/rust/commit/51649665917366f605842e9261e77d49fc4e7549", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51649665917366f605842e9261e77d49fc4e7549/comments", "author": {"login": "JeanCASPAR", "id": 55629512, "node_id": "MDQ6VXNlcjU1NjI5NTEy", "avatar_url": "https://avatars.githubusercontent.com/u/55629512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeanCASPAR", "html_url": "https://github.com/JeanCASPAR", "followers_url": "https://api.github.com/users/JeanCASPAR/followers", "following_url": "https://api.github.com/users/JeanCASPAR/following{/other_user}", "gists_url": "https://api.github.com/users/JeanCASPAR/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeanCASPAR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeanCASPAR/subscriptions", "organizations_url": "https://api.github.com/users/JeanCASPAR/orgs", "repos_url": "https://api.github.com/users/JeanCASPAR/repos", "events_url": "https://api.github.com/users/JeanCASPAR/events{/privacy}", "received_events_url": "https://api.github.com/users/JeanCASPAR/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeanCASPAR", "id": 55629512, "node_id": "MDQ6VXNlcjU1NjI5NTEy", "avatar_url": "https://avatars.githubusercontent.com/u/55629512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeanCASPAR", "html_url": "https://github.com/JeanCASPAR", "followers_url": "https://api.github.com/users/JeanCASPAR/followers", "following_url": "https://api.github.com/users/JeanCASPAR/following{/other_user}", "gists_url": "https://api.github.com/users/JeanCASPAR/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeanCASPAR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeanCASPAR/subscriptions", "organizations_url": "https://api.github.com/users/JeanCASPAR/orgs", "repos_url": "https://api.github.com/users/JeanCASPAR/repos", "events_url": "https://api.github.com/users/JeanCASPAR/events{/privacy}", "received_events_url": "https://api.github.com/users/JeanCASPAR/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d75fd91d502e220fce60c358dd5c52737f249169", "url": "https://api.github.com/repos/rust-lang/rust/commits/d75fd91d502e220fce60c358dd5c52737f249169", "html_url": "https://github.com/rust-lang/rust/commit/d75fd91d502e220fce60c358dd5c52737f249169"}], "stats": {"total": 88, "additions": 63, "deletions": 25}, "files": [{"sha": "3644e664cebf2cfc5bf4cf287f68635893030aee", "filename": "compiler/rustc_ast_lowering/src/errors.rs", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/51649665917366f605842e9261e77d49fc4e7549/compiler%2Frustc_ast_lowering%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51649665917366f605842e9261e77d49fc4e7549/compiler%2Frustc_ast_lowering%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Ferrors.rs?ref=51649665917366f605842e9261e77d49fc4e7549", "patch": "@@ -1,6 +1,6 @@\n use rustc_errors::{fluent, AddSubdiagnostic, Applicability, Diagnostic};\n use rustc_macros::{SessionDiagnostic, SessionSubdiagnostic};\n-use rustc_span::{Span, Symbol};\n+use rustc_span::{symbol::Ident, Span, Symbol};\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n #[diag(ast_lowering::generic_type_with_parentheses, code = \"E0214\")]\n@@ -270,3 +270,39 @@ pub struct RegisterConflict<'a> {\n     #[help]\n     pub in_out: Option<Span>,\n }\n+\n+#[derive(SessionDiagnostic, Clone, Copy)]\n+#[help]\n+#[error(ast_lowering::sub_tuple_binding)]\n+pub struct SubTupleBinding<'a> {\n+    #[primary_span]\n+    #[label]\n+    #[suggestion_verbose(\n+        ast_lowering::sub_tuple_binding_suggestion,\n+        code = \"..\",\n+        applicability = \"maybe-incorrect\"\n+    )]\n+    pub span: Span,\n+    pub ident: Ident,\n+    pub ident_name: Symbol,\n+    pub ctx: &'a str,\n+}\n+\n+#[derive(SessionDiagnostic, Clone, Copy)]\n+#[error(ast_lowering::extra_double_dot)]\n+pub struct ExtraDoubleDot<'a> {\n+    #[primary_span]\n+    #[label]\n+    pub span: Span,\n+    #[label(ast_lowering::previously_used_here)]\n+    pub prev_span: Span,\n+    pub ctx: &'a str,\n+}\n+\n+#[derive(SessionDiagnostic, Clone, Copy)]\n+#[note]\n+#[error(ast_lowering::misplaced_double_dot)]\n+pub struct MisplacedDoubleDot {\n+    #[primary_span]\n+    pub span: Span,\n+}"}, {"sha": "abe9b354252ac0492cba5df98fdfffadc6c8af3a", "filename": "compiler/rustc_ast_lowering/src/pat.rs", "status": "modified", "additions": 9, "deletions": 24, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/51649665917366f605842e9261e77d49fc4e7549/compiler%2Frustc_ast_lowering%2Fsrc%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51649665917366f605842e9261e77d49fc4e7549/compiler%2Frustc_ast_lowering%2Fsrc%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fpat.rs?ref=51649665917366f605842e9261e77d49fc4e7549", "patch": "@@ -1,11 +1,11 @@\n+use super::errors::{ExtraDoubleDot, MisplacedDoubleDot, SubTupleBinding};\n use super::ResolverAstLoweringExt;\n use super::{ImplTraitContext, LoweringContext, ParamMode};\n use crate::ImplTraitPosition;\n \n use rustc_ast::ptr::P;\n use rustc_ast::*;\n use rustc_data_structures::stack::ensure_sufficient_stack;\n-use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_span::symbol::Ident;\n@@ -134,20 +134,12 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                 // This is not allowed as a sub-tuple pattern\n                 PatKind::Ident(ref _bm, ident, Some(ref sub)) if sub.is_rest() => {\n                     let sp = pat.span;\n-                    self.diagnostic()\n-                        .struct_span_err(\n-                            sp,\n-                            &format!(\"`{} @` is not allowed in a {}\", ident.name, ctx),\n-                        )\n-                        .span_label(sp, \"this is only allowed in slice patterns\")\n-                        .help(\"remove this and bind each tuple field independently\")\n-                        .span_suggestion_verbose(\n-                            sp,\n-                            &format!(\"if you don't need to use the contents of {}, discard the tuple's remaining fields\", ident),\n-                            \"..\",\n-                            Applicability::MaybeIncorrect,\n-                        )\n-                        .emit();\n+                    self.tcx.sess.emit_err(SubTupleBinding {\n+                        span: sp,\n+                        ident_name: ident.name,\n+                        ident,\n+                        ctx,\n+                    });\n                 }\n                 _ => {}\n             }\n@@ -296,19 +288,12 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n \n     /// Emit a friendly error for extra `..` patterns in a tuple/tuple struct/slice pattern.\n     pub(crate) fn ban_extra_rest_pat(&self, sp: Span, prev_sp: Span, ctx: &str) {\n-        self.diagnostic()\n-            .struct_span_err(sp, &format!(\"`..` can only be used once per {} pattern\", ctx))\n-            .span_label(sp, &format!(\"can only be used once per {} pattern\", ctx))\n-            .span_label(prev_sp, \"previously used here\")\n-            .emit();\n+        self.tcx.sess.emit_err(ExtraDoubleDot { span: sp, prev_span: prev_sp, ctx });\n     }\n \n     /// Used to ban the `..` pattern in places it shouldn't be semantically.\n     fn ban_illegal_rest_pat(&self, sp: Span) -> hir::PatKind<'hir> {\n-        self.diagnostic()\n-            .struct_span_err(sp, \"`..` patterns are not allowed here\")\n-            .note(\"only allowed in tuple, tuple struct, and slice patterns\")\n-            .emit();\n+        self.tcx.sess.emit_err(MisplacedDoubleDot { span: sp });\n \n         // We're not in a list context so `..` can be reasonably treated\n         // as `_` because it should always be valid and roughly matches the"}, {"sha": "438fbd8e57ba0997ef22515b1062d2e86a629236", "filename": "compiler/rustc_error_messages/locales/en-US/ast_lowering.ftl", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/51649665917366f605842e9261e77d49fc4e7549/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_lowering.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/51649665917366f605842e9261e77d49fc4e7549/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_lowering.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_lowering.ftl?ref=51649665917366f605842e9261e77d49fc4e7549", "patch": "@@ -103,3 +103,20 @@ ast_lowering_register_conflict =\n ast_lowering_register1 = register `{$reg1_name}`\n \n ast_lowering_register2 = register `{$reg2_name}`\n+\n+ast_lowering_sub_tuple_binding =\n+    `{$ident_name} @` is not allowed in a {$ctx}\n+    .label = this is only allowed in slice patterns\n+    .help = remove this and bind each tuple field independently\n+\n+ast_lowering_sub_tuple_binding_suggestion = if you don't need to use the contents of {$ident}, discard the tuple's remaining fields\n+\n+ast_lowering_extra_double_dot =\n+    `..` can only be used once per {$ctx} pattern\n+    .label = can only be used once per {$ctx} pattern\n+\n+ast_lowering_previously_used_here = previously used here\n+\n+ast_lowering_misplaced_double_dot =\n+    `..` patterns are not allowed here\n+    .note = only allowed in tuple, tuple struct, and slice patterns"}]}