{"sha": "1d21dad1d29d57875ff47b38e5894668f5bec6f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkMjFkYWQxZDI5ZDU3ODc1ZmY0N2IzOGU1ODk0NjY4ZjViZWM2Zjk=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-31T03:48:22Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-01T03:50:27Z"}, "message": "rustc: replace `GetCrateDataCb` alias with an unboxed closure", "tree": {"sha": "d80d608b5f54ab2084ee03f6eba5a0115af232a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d80d608b5f54ab2084ee03f6eba5a0115af232a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d21dad1d29d57875ff47b38e5894668f5bec6f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d21dad1d29d57875ff47b38e5894668f5bec6f9", "html_url": "https://github.com/rust-lang/rust/commit/1d21dad1d29d57875ff47b38e5894668f5bec6f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d21dad1d29d57875ff47b38e5894668f5bec6f9/comments", "author": null, "committer": null, "parents": [{"sha": "63af3e6cd2a24a02ad38e47f37010fff30c19908", "url": "https://api.github.com/repos/rust-lang/rust/commits/63af3e6cd2a24a02ad38e47f37010fff30c19908", "html_url": "https://github.com/rust-lang/rust/commit/63af3e6cd2a24a02ad38e47f37010fff30c19908"}], "stats": {"total": 37, "additions": 19, "deletions": 18}, "files": [{"sha": "2b11b8517b0d87658b3ec8f416688e919470dcdf", "filename": "src/librustc/metadata/csearch.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1d21dad1d29d57875ff47b38e5894668f5bec6f9/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d21dad1d29d57875ff47b38e5894668f5bec6f9/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcsearch.rs?ref=1d21dad1d29d57875ff47b38e5894668f5bec6f9", "patch": "@@ -62,7 +62,7 @@ pub fn each_child_of_item<F>(cstore: &cstore::CStore,\n     F: FnMut(decoder::DefLike, ast::Name, ast::Visibility),\n {\n     let crate_data = cstore.get_crate_data(def_id.krate);\n-    let get_crate_data: decoder::GetCrateDataCb = |cnum| {\n+    let get_crate_data = |&mut: cnum| {\n         cstore.get_crate_data(cnum)\n     };\n     decoder::each_child_of_item(cstore.intr.clone(),\n@@ -79,7 +79,7 @@ pub fn each_top_level_item_of_crate<F>(cstore: &cstore::CStore,\n     F: FnMut(decoder::DefLike, ast::Name, ast::Visibility),\n {\n     let crate_data = cstore.get_crate_data(cnum);\n-    let get_crate_data: decoder::GetCrateDataCb = |cnum| {\n+    let get_crate_data = |&mut: cnum| {\n         cstore.get_crate_data(cnum)\n     };\n     decoder::each_top_level_item_of_crate(cstore.intr.clone(),"}, {"sha": "d079d0e52aafa523cfa2aa2bbb9af00914089de4", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/1d21dad1d29d57875ff47b38e5894668f5bec6f9/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d21dad1d29d57875ff47b38e5894668f5bec6f9/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=1d21dad1d29d57875ff47b38e5894668f5bec6f9", "patch": "@@ -487,14 +487,13 @@ pub fn each_lang_item<F>(cdata: Cmd, mut f: F) -> bool where\n     })\n }\n \n-pub type GetCrateDataCb<'a> = |ast::CrateNum|: 'a -> Rc<crate_metadata>;\n-\n-fn each_child_of_item_or_crate<F>(intr: Rc<IdentInterner>,\n-                                  cdata: Cmd,\n-                                  item_doc: rbml::Doc,\n-                                  get_crate_data: GetCrateDataCb,\n-                                  mut callback: F) where\n+fn each_child_of_item_or_crate<F, G>(intr: Rc<IdentInterner>,\n+                                     cdata: Cmd,\n+                                     item_doc: rbml::Doc,\n+                                     mut get_crate_data: G,\n+                                     mut callback: F) where\n     F: FnMut(DefLike, ast::Name, ast::Visibility),\n+    G: FnMut(ast::CrateNum) -> Rc<crate_metadata>,\n {\n     // Iterate over all children.\n     let _ = reader::tagged_docs(item_doc, tag_mod_child, |child_info_doc| {\n@@ -608,12 +607,13 @@ fn each_child_of_item_or_crate<F>(intr: Rc<IdentInterner>,\n }\n \n /// Iterates over each child of the given item.\n-pub fn each_child_of_item<F>(intr: Rc<IdentInterner>,\n-                             cdata: Cmd,\n-                             id: ast::NodeId,\n-                             get_crate_data: GetCrateDataCb,\n-                             callback: F) where\n+pub fn each_child_of_item<F, G>(intr: Rc<IdentInterner>,\n+                               cdata: Cmd,\n+                               id: ast::NodeId,\n+                               get_crate_data: G,\n+                               callback: F) where\n     F: FnMut(DefLike, ast::Name, ast::Visibility),\n+    G: FnMut(ast::CrateNum) -> Rc<crate_metadata>,\n {\n     // Find the item.\n     let root_doc = rbml::Doc::new(cdata.data());\n@@ -631,11 +631,12 @@ pub fn each_child_of_item<F>(intr: Rc<IdentInterner>,\n }\n \n /// Iterates over all the top-level crate items.\n-pub fn each_top_level_item_of_crate<F>(intr: Rc<IdentInterner>,\n-                                       cdata: Cmd,\n-                                       get_crate_data: GetCrateDataCb,\n-                                       callback: F) where\n+pub fn each_top_level_item_of_crate<F, G>(intr: Rc<IdentInterner>,\n+                                          cdata: Cmd,\n+                                          get_crate_data: G,\n+                                          callback: F) where\n     F: FnMut(DefLike, ast::Name, ast::Visibility),\n+    G: FnMut(ast::CrateNum) -> Rc<crate_metadata>,\n {\n     let root_doc = rbml::Doc::new(cdata.data());\n     let misc_info_doc = reader::get_doc(root_doc, tag_misc_info);"}]}