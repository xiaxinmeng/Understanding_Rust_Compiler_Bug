{"sha": "fc2d7d1e1f03faa4566dea8b60eca860bcf9eb04", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjMmQ3ZDFlMWYwM2ZhYTQ1NjZkZWE4YjYwZWNhODYwYmNmOWViMDQ=", "commit": {"author": {"name": "gfreezy", "email": "gfreezy@gmail.com", "date": "2019-01-01T13:55:27Z"}, "committer": {"name": "gfreezy", "email": "gfreezy@gmail.com", "date": "2019-01-01T13:55:27Z"}, "message": "complete crate in use stmt", "tree": {"sha": "16dab87abb9fb73e6f7fd96b7ac884c4e6b849e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16dab87abb9fb73e6f7fd96b7ac884c4e6b849e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc2d7d1e1f03faa4566dea8b60eca860bcf9eb04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc2d7d1e1f03faa4566dea8b60eca860bcf9eb04", "html_url": "https://github.com/rust-lang/rust/commit/fc2d7d1e1f03faa4566dea8b60eca860bcf9eb04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc2d7d1e1f03faa4566dea8b60eca860bcf9eb04/comments", "author": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f4c9303e41b5973830ae8d80b2b6d206f2e9a57", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f4c9303e41b5973830ae8d80b2b6d206f2e9a57", "html_url": "https://github.com/rust-lang/rust/commit/6f4c9303e41b5973830ae8d80b2b6d206f2e9a57"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "f51d77f27adc07e56fc876590526c1745e0138c0", "filename": "crates/ra_analysis/src/completion/complete_keyword.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/fc2d7d1e1f03faa4566dea8b60eca860bcf9eb04/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc2d7d1e1f03faa4566dea8b60eca860bcf9eb04/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=fc2d7d1e1f03faa4566dea8b60eca860bcf9eb04", "patch": "@@ -18,6 +18,16 @@ pub(super) fn complete_expr_keyword(acc: &mut Completions, ctx: &CompletionConte\n     if !ctx.is_trivial_path {\n         return;\n     }\n+\n+    // complete keyword \"crate\" in use stmt\n+    if let (Some(use_item), None) = (&ctx.use_item_syntax, &ctx.path_prefix) {\n+        if use_item.use_tree().is_none() {\n+            CompletionItem::new(CompletionKind::Keyword, \"crate\")\n+                .kind(CompletionItemKind::Keyword)\n+                .add_to(acc);\n+        }\n+    }\n+\n     let fn_def = match ctx.function_syntax {\n         Some(it) => it,\n         None => return,\n@@ -269,4 +279,23 @@ mod tests {\n             \"#,\n         )\n     }\n+\n+    fn completes_crate_in_use_stmt() {\n+        check_keyword_completion(\n+            r\"\n+            use <|>\n+            \",\n+            r#\"\n+            crate\n+            \"#,\n+        );\n+        // No completion: lambda isolates control flow\n+        check_keyword_completion(\n+            r\"\n+            use a<|>\n+            \",\n+            r#\"\n+            \"#,\n+        );\n+    }\n }"}]}