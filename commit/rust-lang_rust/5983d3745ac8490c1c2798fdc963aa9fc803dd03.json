{"sha": "5983d3745ac8490c1c2798fdc963aa9fc803dd03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5ODNkMzc0NWFjODQ5MGMxYzI3OThmZGM5NjNhYTlmYzgwM2RkMDM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-25T13:52:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-25T13:52:35Z"}, "message": "Merge #9691\n\n9691: fix: Keep catch-all arm in fill_match_arms if it has a non-empty expression r=Veykril a=Veykril\n\nFixes #4165\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "45d45a4d3b6bce909baa697cf159fa3dd5a629f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45d45a4d3b6bce909baa697cf159fa3dd5a629f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5983d3745ac8490c1c2798fdc963aa9fc803dd03", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg/WyjCRBK7hj4Ov3rIwAA3MwIAJ2EVUM33Mr1Xz+i3sOpqrmq\nUHxw3qUi3ttBZ3pevPQCyekF7/ESpZD0c/ELs1zUffe36LiN5V3eN5iExJpWie2/\nAJdgasKf97DuDV7NHA8Xq9Qu+9TTXc6YwGcFINCXbCXPKzJDDykvVthkdWktjnQR\nmm9kjOdJtUZIe/MF3vmo6LzFsMJge+kudWo3muRNzn5lX62LSRX8a166lu+ZZ9az\nWhkq7RM18MYbVlrMojXfplM0LpJ0UjG8v1AWv5TLtadpRw4UqTQLCliFewtim8ee\nmv9qr1AZFVn7pWRXZ08YNM1JsD62Lftqx32MCyWxhxufbeD1O3qCqpmoHLJp1KM=\n=c0jY\n-----END PGP SIGNATURE-----\n", "payload": "tree 45d45a4d3b6bce909baa697cf159fa3dd5a629f2\nparent 2fe586a8a781f22f4e5a82037ed459fe28e87f8f\nparent 0a13259fc6c7b54ea1bf86e2e722b19d9f9203c4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1627221155 +0000\ncommitter GitHub <noreply@github.com> 1627221155 +0000\n\nMerge #9691\n\n9691: fix: Keep catch-all arm in fill_match_arms if it has a non-empty expression r=Veykril a=Veykril\n\nFixes #4165\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5983d3745ac8490c1c2798fdc963aa9fc803dd03", "html_url": "https://github.com/rust-lang/rust/commit/5983d3745ac8490c1c2798fdc963aa9fc803dd03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5983d3745ac8490c1c2798fdc963aa9fc803dd03/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fe586a8a781f22f4e5a82037ed459fe28e87f8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fe586a8a781f22f4e5a82037ed459fe28e87f8f", "html_url": "https://github.com/rust-lang/rust/commit/2fe586a8a781f22f4e5a82037ed459fe28e87f8f"}, {"sha": "0a13259fc6c7b54ea1bf86e2e722b19d9f9203c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a13259fc6c7b54ea1bf86e2e722b19d9f9203c4", "html_url": "https://github.com/rust-lang/rust/commit/0a13259fc6c7b54ea1bf86e2e722b19d9f9203c4"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "7b117acb36cca3814d1a9e16338e10f34a302b4a", "filename": "crates/ide_assists/src/handlers/fill_match_arms.rs", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/5983d3745ac8490c1c2798fdc963aa9fc803dd03/crates%2Fide_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5983d3745ac8490c1c2798fdc963aa9fc803dd03/crates%2Fide_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs?ref=5983d3745ac8490c1c2798fdc963aa9fc803dd03", "patch": "@@ -136,7 +136,18 @@ pub(crate) fn fill_match_arms(acc: &mut Assists, ctx: &AssistContext) -> Option<\n                 .arms()\n                 .find(|arm| matches!(arm.pat(), Some(ast::Pat::WildcardPat(_))));\n             if let Some(arm) = catch_all_arm {\n-                arm.remove();\n+                let is_empty_expr = arm.expr().map_or(true, |e| match e {\n+                    ast::Expr::BlockExpr(b) => {\n+                        b.statements().next().is_none() && b.tail_expr().is_none()\n+                    }\n+                    ast::Expr::TupleExpr(t) => t.fields().next().is_none(),\n+                    _ => false,\n+                });\n+                if is_empty_expr {\n+                    arm.remove();\n+                } else {\n+                    cov_mark::hit!(fill_match_arms_empty_expr);\n+                }\n             }\n             let mut first_new_arm = None;\n             for arm in missing_arms {\n@@ -1093,6 +1104,28 @@ fn foo(t: bool) {\n         true => 1 + 2,\n         $0false => todo!(),\n     }\n+}\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn does_not_remove_catch_all_with_non_empty_expr() {\n+        cov_mark::check!(fill_match_arms_empty_expr);\n+        check_assist(\n+            fill_match_arms,\n+            r#\"\n+fn foo(t: bool) {\n+    match $0t {\n+        _ => 1 + 2,\n+    }\n+}\"#,\n+            r#\"\n+fn foo(t: bool) {\n+    match t {\n+        _ => 1 + 2,\n+        $0true => todo!(),\n+        false => todo!(),\n+    }\n }\"#,\n         );\n     }"}]}