{"sha": "98633b458b6dbde4afd1b468f35a1b8239b5c15c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4NjMzYjQ1OGI2ZGJkZTRhZmQxYjQ2OGYzNWExYjgyMzliNWMxNWM=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-10-04T19:48:50Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-10-09T10:31:51Z"}, "message": "Improve message for closure returning a closure.\n\nNow when a `FnMut` closure is returning a closure that contains a\nreference to a captured variable, we provide an error that makes it more\nclear what is happening.", "tree": {"sha": "951099c1983cda64fd99ab43055780a852b493bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/951099c1983cda64fd99ab43055780a852b493bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98633b458b6dbde4afd1b468f35a1b8239b5c15c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlu8g5cACgkQAXYLT59T\n8VTlOA/9FA7YRXcUX+ZZ7WeRIz20GF0XODiEYo+vWlhynQRPwB1N5PdEOW3JnU3A\n5/z6lDXP7qcc32xpd1qErT9BiusqRUAu0/QTjRUvoJMEb+tTt61phThD73NQEiUG\nwbrgmXFs+NcaCT0lNON8wmjzcgb64vXf09+lu1UoY6ouV6Zrf1GQln+y2Fts33ig\n/tEZj5XjfCCivreqe/UUp/cH/WFM0G4VLOf5Vbw3E7IHxO5PVU+/t6jRK7Zl11K7\n5KKwh9gsgOBFeN2aTyaSgRiK5leaOVkR+LbwjCC0XP7Chg/DTOtGNipbZ3/WdeET\nT3ecGCPDayb07amyP9OqY8PHtKlyQmpAnHAKh/YCanQF9lzLr5WmdmFgZi18y+JZ\nhFHOpadjbFimHzlaBQGmpBBbpJKX23tCJClKsOASz00GGbSEUCSnPn32VlHuUe4L\nbQVqtLc7me9VcqbTBVuuwxSXikqIllgyw5XyYLxRSxQ95RP2DTE94yztZR4/Yt+1\n2KJ3Vp9u+fhjyTpeDPBFHKmb5QQmpdFpScD3fiZwxncYFlrabNot2k3iK3jixRZH\nM2pz/K3BEJ4RQZ7dEOVrok8rhVBxOw8IosYu7Oh0aNOvZyMsp1jTRY5J1P4C+W6/\nV/5kBMvG1PFVrLiHDwhHK0X4GiiVYEVMqH4XbBbkb04MGRJ3L1A=\n=qCO6\n-----END PGP SIGNATURE-----", "payload": "tree 951099c1983cda64fd99ab43055780a852b493bb\nparent c65e11922908189bb13d67a490d49163c110b510\nauthor David Wood <david@davidtw.co> 1538682530 +0200\ncommitter David Wood <david@davidtw.co> 1539081111 +0200\n\nImprove message for closure returning a closure.\n\nNow when a `FnMut` closure is returning a closure that contains a\nreference to a captured variable, we provide an error that makes it more\nclear what is happening.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98633b458b6dbde4afd1b468f35a1b8239b5c15c", "html_url": "https://github.com/rust-lang/rust/commit/98633b458b6dbde4afd1b468f35a1b8239b5c15c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98633b458b6dbde4afd1b468f35a1b8239b5c15c/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c65e11922908189bb13d67a490d49163c110b510", "url": "https://api.github.com/repos/rust-lang/rust/commits/c65e11922908189bb13d67a490d49163c110b510", "html_url": "https://github.com/rust-lang/rust/commit/c65e11922908189bb13d67a490d49163c110b510"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "8191dd720e7b2db1a2abfa419c2940c723d0c15b", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/mod.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/98633b458b6dbde4afd1b468f35a1b8239b5c15c/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98633b458b6dbde4afd1b468f35a1b8239b5c15c/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs?ref=98633b458b6dbde4afd1b468f35a1b8239b5c15c", "patch": "@@ -310,9 +310,19 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n             \"captured variable cannot escape `FnMut` closure body\",\n         );\n \n+        // We should check if the return type of this closure is in fact a closure - in that\n+        // case, we can special case the error further.\n+        let return_type_is_closure = self.universal_regions.unnormalized_output_ty.is_closure();\n+        let message = if return_type_is_closure {\n+            \"returns a closure that contains a reference to a captured variable, which then \\\n+             escapes the closure body\"\n+        } else {\n+            \"returns a reference to a captured variable which escapes the closure body\"\n+        };\n+\n         diag.span_label(\n             span,\n-            \"creates a reference to a captured variable which escapes the closure body\",\n+            message,\n         );\n \n         match self.give_region_a_name(infcx, mir, mir_def_id, outlived_fr, &mut 1).source {"}, {"sha": "5721c52ba217287063d75333f8032ff8ae8567e0", "filename": "src/test/ui/borrowck/borrowck-describe-lvalue.ast.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98633b458b6dbde4afd1b468f35a1b8239b5c15c/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98633b458b6dbde4afd1b468f35a1b8239b5c15c/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.nll.stderr?ref=98633b458b6dbde4afd1b468f35a1b8239b5c15c", "patch": "@@ -32,7 +32,7 @@ LL | |                    //[mir]~^ ERROR cannot borrow `x` as mutable more than\n LL | |                    *y = 1;\n LL | |                    drop(y);\n LL | |                 }\n-   | |_________________^ creates a reference to a captured variable which escapes the closure body\n+   | |_________________^ returns a closure that contains a reference to a captured variable, which then escapes the closure body\n    |\n    = note: `FnMut` closures only have access to their captured variables while they are executing...\n    = note: ...therefore, they cannot allow references to captured variables to escape"}, {"sha": "5721c52ba217287063d75333f8032ff8ae8567e0", "filename": "src/test/ui/borrowck/borrowck-describe-lvalue.mir.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98633b458b6dbde4afd1b468f35a1b8239b5c15c/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98633b458b6dbde4afd1b468f35a1b8239b5c15c/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.mir.stderr?ref=98633b458b6dbde4afd1b468f35a1b8239b5c15c", "patch": "@@ -32,7 +32,7 @@ LL | |                    //[mir]~^ ERROR cannot borrow `x` as mutable more than\n LL | |                    *y = 1;\n LL | |                    drop(y);\n LL | |                 }\n-   | |_________________^ creates a reference to a captured variable which escapes the closure body\n+   | |_________________^ returns a closure that contains a reference to a captured variable, which then escapes the closure body\n    |\n    = note: `FnMut` closures only have access to their captured variables while they are executing...\n    = note: ...therefore, they cannot allow references to captured variables to escape"}, {"sha": "1aeb1a89ead94f3789bf472efd709b136d98bc3f", "filename": "src/test/ui/issues/issue-40510-1.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98633b458b6dbde4afd1b468f35a1b8239b5c15c/src%2Ftest%2Fui%2Fissues%2Fissue-40510-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98633b458b6dbde4afd1b468f35a1b8239b5c15c/src%2Ftest%2Fui%2Fissues%2Fissue-40510-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40510-1.nll.stderr?ref=98633b458b6dbde4afd1b468f35a1b8239b5c15c", "patch": "@@ -4,7 +4,7 @@ error: captured variable cannot escape `FnMut` closure body\n LL |     || {\n    |      - inferred to be a `FnMut` closure\n LL |         &mut x\n-   |         ^^^^^^ creates a reference to a captured variable which escapes the closure body\n+   |         ^^^^^^ returns a reference to a captured variable which escapes the closure body\n    |\n    = note: `FnMut` closures only have access to their captured variables while they are executing...\n    = note: ...therefore, they cannot allow references to captured variables to escape"}, {"sha": "c334e592fbc2bb0be5c0fb5ea0d77f364bbf1128", "filename": "src/test/ui/issues/issue-40510-3.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98633b458b6dbde4afd1b468f35a1b8239b5c15c/src%2Ftest%2Fui%2Fissues%2Fissue-40510-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98633b458b6dbde4afd1b468f35a1b8239b5c15c/src%2Ftest%2Fui%2Fissues%2Fissue-40510-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40510-3.nll.stderr?ref=98633b458b6dbde4afd1b468f35a1b8239b5c15c", "patch": "@@ -6,7 +6,7 @@ LL |       || {\n LL | /         || {\n LL | |             x.push(())\n LL | |         }\n-   | |_________^ creates a reference to a captured variable which escapes the closure body\n+   | |_________^ returns a closure that contains a reference to a captured variable, which then escapes the closure body\n    |\n    = note: `FnMut` closures only have access to their captured variables while they are executing...\n    = note: ...therefore, they cannot allow references to captured variables to escape"}, {"sha": "2e0463fdd1d860b7e2cf72952e6a681a4c43d357", "filename": "src/test/ui/issues/issue-49824.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98633b458b6dbde4afd1b468f35a1b8239b5c15c/src%2Ftest%2Fui%2Fissues%2Fissue-49824.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98633b458b6dbde4afd1b468f35a1b8239b5c15c/src%2Ftest%2Fui%2Fissues%2Fissue-49824.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-49824.nll.stderr?ref=98633b458b6dbde4afd1b468f35a1b8239b5c15c", "patch": "@@ -6,7 +6,7 @@ LL |       || {\n LL | /         || {\n LL | |             let _y = &mut x;\n LL | |         }\n-   | |_________^ creates a reference to a captured variable which escapes the closure body\n+   | |_________^ returns a closure that contains a reference to a captured variable, which then escapes the closure body\n    |\n    = note: `FnMut` closures only have access to their captured variables while they are executing...\n    = note: ...therefore, they cannot allow references to captured variables to escape"}, {"sha": "fac9969f1934a3684143126f82134fefcf3b6d9a", "filename": "src/test/ui/nll/issue-53040.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98633b458b6dbde4afd1b468f35a1b8239b5c15c/src%2Ftest%2Fui%2Fnll%2Fissue-53040.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98633b458b6dbde4afd1b468f35a1b8239b5c15c/src%2Ftest%2Fui%2Fnll%2Fissue-53040.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-53040.stderr?ref=98633b458b6dbde4afd1b468f35a1b8239b5c15c", "patch": "@@ -2,7 +2,7 @@ error: captured variable cannot escape `FnMut` closure body\n   --> $DIR/issue-53040.rs:15:8\n    |\n LL |     || &mut v;\n-   |      - ^^^^^^ creates a reference to a captured variable which escapes the closure body\n+   |      - ^^^^^^ returns a reference to a captured variable which escapes the closure body\n    |      |\n    |      inferred to be a `FnMut` closure\n    |"}, {"sha": "300a563982253df694561b4d814cb2078446799b", "filename": "src/test/ui/regions/regions-return-ref-to-upvar-issue-17403.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98633b458b6dbde4afd1b468f35a1b8239b5c15c/src%2Ftest%2Fui%2Fregions%2Fregions-return-ref-to-upvar-issue-17403.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98633b458b6dbde4afd1b468f35a1b8239b5c15c/src%2Ftest%2Fui%2Fregions%2Fregions-return-ref-to-upvar-issue-17403.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-return-ref-to-upvar-issue-17403.nll.stderr?ref=98633b458b6dbde4afd1b468f35a1b8239b5c15c", "patch": "@@ -2,7 +2,7 @@ error: captured variable cannot escape `FnMut` closure body\n   --> $DIR/regions-return-ref-to-upvar-issue-17403.rs:17:24\n    |\n LL |         let mut f = || &mut x; //~ ERROR cannot infer\n-   |                      - ^^^^^^ creates a reference to a captured variable which escapes the closure body\n+   |                      - ^^^^^^ returns a reference to a captured variable which escapes the closure body\n    |                      |\n    |                      inferred to be a `FnMut` closure\n    |"}]}