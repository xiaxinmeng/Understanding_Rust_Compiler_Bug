{"sha": "defd5088d616bb324c92069b2c1129b76bc0ff94", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlZmQ1MDg4ZDYxNmJiMzI0YzkyMDY5YjJjMTEyOWI3NmJjMGZmOTQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-25T22:36:41Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-27T17:48:07Z"}, "message": "cleanup check_match wrt. SignalledError.", "tree": {"sha": "c7a9c27ec5071b6de83c4fe8b9a60519c4a73a98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7a9c27ec5071b6de83c4fe8b9a60519c4a73a98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/defd5088d616bb324c92069b2c1129b76bc0ff94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/defd5088d616bb324c92069b2c1129b76bc0ff94", "html_url": "https://github.com/rust-lang/rust/commit/defd5088d616bb324c92069b2c1129b76bc0ff94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/defd5088d616bb324c92069b2c1129b76bc0ff94/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1eb280e2d8a74b72ac58dbb6939497b4f1dacb84", "url": "https://api.github.com/repos/rust-lang/rust/commits/1eb280e2d8a74b72ac58dbb6939497b4f1dacb84", "html_url": "https://github.com/rust-lang/rust/commit/1eb280e2d8a74b72ac58dbb6939497b4f1dacb84"}], "stats": {"total": 25, "additions": 7, "deletions": 18}, "files": [{"sha": "6de351fa13af4ae7ac58007fcd257094aeb68506", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/defd5088d616bb324c92069b2c1129b76bc0ff94/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/defd5088d616bb324c92069b2c1129b76bc0ff94/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=defd5088d616bb324c92069b2c1129b76bc0ff94", "patch": "@@ -469,7 +469,7 @@ rustc_queries! {\n     }\n \n     TypeChecking {\n-        query check_match(key: DefId) -> SignalledError {\n+        query check_match(key: DefId) {\n             cache_on_disk_if { key.is_local() }\n         }\n "}, {"sha": "f4b99ca3688747ee0c8cca34e2b34cc907db146f", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/defd5088d616bb324c92069b2c1129b76bc0ff94/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/defd5088d616bb324c92069b2c1129b76bc0ff94/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=defd5088d616bb324c92069b2c1129b76bc0ff94", "patch": "@@ -4,7 +4,7 @@ use crate::hir::def::{DefKind, Export};\n use crate::hir::{self, TraitCandidate, ItemLocalId, CodegenFnAttrs};\n use crate::infer::canonical::{self, Canonical};\n use crate::lint;\n-use crate::middle::borrowck::{BorrowCheckResult, SignalledError};\n+use crate::middle::borrowck::BorrowCheckResult;\n use crate::middle::cstore::{ExternCrate, LinkagePreference, NativeLibrary, ForeignModule};\n use crate::middle::cstore::{NativeLibraryKind, DepKind, CrateSource};\n use crate::middle::privacy::AccessLevels;"}, {"sha": "b57e57ba3ec952f142feda78803d057ccb2b0a6b", "filename": "src/librustc_mir/hair/pattern/check_match.rs", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/defd5088d616bb324c92069b2c1129b76bc0ff94/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/defd5088d616bb324c92069b2c1129b76bc0ff94/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs?ref=defd5088d616bb324c92069b2c1129b76bc0ff94", "patch": "@@ -4,7 +4,6 @@ use super::_match::WitnessPreference::*;\n \n use super::{PatCtxt, PatternError, PatKind};\n \n-use rustc::middle::borrowck::SignalledError;\n use rustc::session::Session;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::ty::subst::{InternalSubsts, SubstsRef};\n@@ -21,22 +20,19 @@ use std::slice;\n \n use syntax_pos::{Span, DUMMY_SP, MultiSpan};\n \n-crate fn check_match(tcx: TyCtxt<'_>, def_id: DefId) -> SignalledError {\n-    let body_id = if let Some(id) = tcx.hir().as_local_hir_id(def_id) {\n-        tcx.hir().body_owned_by(id)\n-    } else {\n-        return SignalledError::NoErrorsSeen;\n+crate fn check_match(tcx: TyCtxt<'_>, def_id: DefId) {\n+    let body_id = match tcx.hir().as_local_hir_id(def_id) {\n+        None => return,\n+        Some(id) => tcx.hir().body_owned_by(id),\n     };\n \n     let mut visitor = MatchVisitor {\n         tcx,\n         tables: tcx.body_tables(body_id),\n         param_env: tcx.param_env(def_id),\n         identity_substs: InternalSubsts::identity_for_item(tcx, def_id),\n-        signalled_error: SignalledError::NoErrorsSeen,\n     };\n     visitor.visit_body(tcx.hir().body(body_id));\n-    visitor.signalled_error\n }\n \n fn create_e0004(sess: &Session, sp: Span, error_message: String) -> DiagnosticBuilder<'_> {\n@@ -48,7 +44,6 @@ struct MatchVisitor<'a, 'tcx> {\n     tables: &'a ty::TypeckTables<'tcx>,\n     param_env: ty::ParamEnv<'tcx>,\n     identity_substs: SubstsRef<'tcx>,\n-    signalled_error: SignalledError,\n }\n \n impl<'tcx> Visitor<'tcx> for MatchVisitor<'_, 'tcx> {\n@@ -136,13 +131,7 @@ impl<'tcx> MatchVisitor<'_, 'tcx> {\n             // First, check legality of move bindings.\n             self.check_patterns(arm.guard.is_some(), &arm.pat);\n \n-            // Second, if there is a guard on each arm, make sure it isn't\n-            // assigning or borrowing anything mutably.\n-            if arm.guard.is_some() {\n-                self.signalled_error = SignalledError::SawSomeError;\n-            }\n-\n-            // Third, perform some lints.\n+            // Second, perform some lints.\n             check_for_bindings_named_same_as_variants(self, &arm.pat);\n         }\n "}]}