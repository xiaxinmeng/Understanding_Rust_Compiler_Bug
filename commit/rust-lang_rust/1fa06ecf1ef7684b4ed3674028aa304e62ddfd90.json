{"sha": "1fa06ecf1ef7684b4ed3674028aa304e62ddfd90", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmYTA2ZWNmMWVmNzY4NGI0ZWQzNjc0MDI4YWEzMDRlNjJkZGZkOTA=", "commit": {"author": {"name": "Stjepan Glavina", "email": "stjepang@gmail.com", "date": "2019-03-20T17:18:02Z"}, "committer": {"name": "Stjepan Glavina", "email": "stjepang@gmail.com", "date": "2019-03-20T17:18:02Z"}, "message": "Fix formatting of async blocks", "tree": {"sha": "89ada2afd13a30256e5dd3851f56149afca09c1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89ada2afd13a30256e5dd3851f56149afca09c1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fa06ecf1ef7684b4ed3674028aa304e62ddfd90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fa06ecf1ef7684b4ed3674028aa304e62ddfd90", "html_url": "https://github.com/rust-lang/rust/commit/1fa06ecf1ef7684b4ed3674028aa304e62ddfd90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fa06ecf1ef7684b4ed3674028aa304e62ddfd90/comments", "author": null, "committer": null, "parents": [{"sha": "393d7217ae990e05e036df4785ae5143da6aff2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/393d7217ae990e05e036df4785ae5143da6aff2e", "html_url": "https://github.com/rust-lang/rust/commit/393d7217ae990e05e036df4785ae5143da6aff2e"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "90cbba334f1a878a986c384fb5e5e5d02a16ac87", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fa06ecf1ef7684b4ed3674028aa304e62ddfd90/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fa06ecf1ef7684b4ed3674028aa304e62ddfd90/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=1fa06ecf1ef7684b4ed3674028aa304e62ddfd90", "patch": "@@ -1357,7 +1357,7 @@ pub fn can_be_overflowed_expr(\n         }\n \n         // Handle always block-like expressions\n-        ast::ExprKind::Block(..) | ast::ExprKind::Closure(..) => true,\n+        ast::ExprKind::Async(..) | ast::ExprKind::Block(..) | ast::ExprKind::Closure(..) => true,\n \n         // Handle `[]` and `{}`-like expressions\n         ast::ExprKind::Array(..) | ast::ExprKind::Struct(..) => {"}, {"sha": "3de51a084d260f39458ce22ee1fe72d39b8abe6b", "filename": "tests/source/async_block.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1fa06ecf1ef7684b4ed3674028aa304e62ddfd90/tests%2Fsource%2Fasync_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fa06ecf1ef7684b4ed3674028aa304e62ddfd90/tests%2Fsource%2Fasync_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fasync_block.rs?ref=1fa06ecf1ef7684b4ed3674028aa304e62ddfd90", "patch": "@@ -16,4 +16,20 @@ fn baz() {\n     let y = async {\n         Ok(())\n     }; // comment\n+\n+    spawn(\n+        a,\n+        async move {\n+            action();\n+            Ok(())\n+        },\n+    );\n+\n+    spawn(\n+        a,\n+        async move || {\n+            action();\n+            Ok(())\n+        },\n+    );\n }"}, {"sha": "258dd937a6f56f13bbdb2f3fdd4c58950a378868", "filename": "tests/target/async_block.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1fa06ecf1ef7684b4ed3674028aa304e62ddfd90/tests%2Ftarget%2Fasync_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fa06ecf1ef7684b4ed3674028aa304e62ddfd90/tests%2Ftarget%2Fasync_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fasync_block.rs?ref=1fa06ecf1ef7684b4ed3674028aa304e62ddfd90", "patch": "@@ -12,4 +12,14 @@ fn baz() {\n     };\n \n     let y = async { Ok(()) }; // comment\n+\n+    spawn(a, async move {\n+        action();\n+        Ok(())\n+    });\n+\n+    spawn(a, async move || {\n+        action();\n+        Ok(())\n+    });\n }"}]}