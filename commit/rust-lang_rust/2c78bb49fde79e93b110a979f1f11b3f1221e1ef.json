{"sha": "2c78bb49fde79e93b110a979f1f11b3f1221e1ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjNzhiYjQ5ZmRlNzllOTNiMTEwYTk3OWYxZjExYjNmMTIyMWUxZWY=", "commit": {"author": {"name": "Tommy Ip", "email": "hkmp7tommy@gmail.com", "date": "2017-09-20T17:14:19Z"}, "committer": {"name": "Tommy Ip", "email": "hkmp7tommy@gmail.com", "date": "2017-09-20T17:14:19Z"}, "message": "Add --all flag to ./x.py clean\n\nThis flag removes all build artifacts, including the LLVM build\ndirectory.", "tree": {"sha": "9d9f834f58df8d4262b051412942bc6f60c992e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d9f834f58df8d4262b051412942bc6f60c992e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c78bb49fde79e93b110a979f1f11b3f1221e1ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c78bb49fde79e93b110a979f1f11b3f1221e1ef", "html_url": "https://github.com/rust-lang/rust/commit/2c78bb49fde79e93b110a979f1f11b3f1221e1ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c78bb49fde79e93b110a979f1f11b3f1221e1ef/comments", "author": {"login": "tommyip", "id": 18504232, "node_id": "MDQ6VXNlcjE4NTA0MjMy", "avatar_url": "https://avatars.githubusercontent.com/u/18504232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommyip", "html_url": "https://github.com/tommyip", "followers_url": "https://api.github.com/users/tommyip/followers", "following_url": "https://api.github.com/users/tommyip/following{/other_user}", "gists_url": "https://api.github.com/users/tommyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommyip/subscriptions", "organizations_url": "https://api.github.com/users/tommyip/orgs", "repos_url": "https://api.github.com/users/tommyip/repos", "events_url": "https://api.github.com/users/tommyip/events{/privacy}", "received_events_url": "https://api.github.com/users/tommyip/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tommyip", "id": 18504232, "node_id": "MDQ6VXNlcjE4NTA0MjMy", "avatar_url": "https://avatars.githubusercontent.com/u/18504232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommyip", "html_url": "https://github.com/tommyip", "followers_url": "https://api.github.com/users/tommyip/followers", "following_url": "https://api.github.com/users/tommyip/following{/other_user}", "gists_url": "https://api.github.com/users/tommyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommyip/subscriptions", "organizations_url": "https://api.github.com/users/tommyip/orgs", "repos_url": "https://api.github.com/users/tommyip/repos", "events_url": "https://api.github.com/users/tommyip/events{/privacy}", "received_events_url": "https://api.github.com/users/tommyip/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cdb36262b93390c8733a1ce44665619d9348981", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cdb36262b93390c8733a1ce44665619d9348981", "html_url": "https://github.com/rust-lang/rust/commit/4cdb36262b93390c8733a1ce44665619d9348981"}], "stats": {"total": 51, "additions": 31, "deletions": 20}, "files": [{"sha": "935b690497b525eb456642608b47eecdb581b473", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c78bb49fde79e93b110a979f1f11b3f1221e1ef/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c78bb49fde79e93b110a979f1f11b3f1221e1ef/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=2c78bb49fde79e93b110a979f1f11b3f1221e1ef", "patch": "@@ -306,7 +306,7 @@ impl<'a> Builder<'a> {\n             Subcommand::Bench { ref paths, .. } => (Kind::Bench, &paths[..]),\n             Subcommand::Dist { ref paths } => (Kind::Dist, &paths[..]),\n             Subcommand::Install { ref paths } => (Kind::Install, &paths[..]),\n-            Subcommand::Clean => panic!(),\n+            Subcommand::Clean { .. } => panic!(),\n         };\n \n         let builder = Builder {"}, {"sha": "87f194fb7d2f85d4ae3eed1e32efd0390331975b", "filename": "src/bootstrap/clean.rs", "status": "modified", "additions": 20, "deletions": 15, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/2c78bb49fde79e93b110a979f1f11b3f1221e1ef/src%2Fbootstrap%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c78bb49fde79e93b110a979f1f11b3f1221e1ef/src%2Fbootstrap%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fclean.rs?ref=2c78bb49fde79e93b110a979f1f11b3f1221e1ef", "patch": "@@ -13,32 +13,37 @@\n //! Responsible for cleaning out a build directory of all old and stale\n //! artifacts to prepare for a fresh build. Currently doesn't remove the\n //! `build/cache` directory (download cache) or the `build/$target/llvm`\n-//! directory as we want that cached between builds.\n+//! directory unless the --all flag is present.\n \n use std::fs;\n use std::io::{self, ErrorKind};\n use std::path::Path;\n \n use Build;\n \n-pub fn clean(build: &Build) {\n+pub fn clean(build: &Build, all: bool) {\n     rm_rf(\"tmp\".as_ref());\n-    rm_rf(&build.out.join(\"tmp\"));\n-    rm_rf(&build.out.join(\"dist\"));\n \n-    for host in &build.hosts {\n-        let entries = match build.out.join(host).read_dir() {\n-            Ok(iter) => iter,\n-            Err(_) => continue,\n-        };\n+    if all {\n+        rm_rf(&build.out);\n+    } else {\n+        rm_rf(&build.out.join(\"tmp\"));\n+        rm_rf(&build.out.join(\"dist\"));\n \n-        for entry in entries {\n-            let entry = t!(entry);\n-            if entry.file_name().to_str() == Some(\"llvm\") {\n-                continue\n+        for host in &build.hosts {\n+            let entries = match build.out.join(host).read_dir() {\n+                Ok(iter) => iter,\n+                Err(_) => continue,\n+            };\n+\n+            for entry in entries {\n+                let entry = t!(entry);\n+                if entry.file_name().to_str() == Some(\"llvm\") {\n+                    continue\n+                }\n+                let path = t!(entry.path().canonicalize());\n+                rm_rf(&path);\n             }\n-            let path = t!(entry.path().canonicalize());\n-            rm_rf(&path);\n         }\n     }\n }"}, {"sha": "34b0ca627aad15cd16a3ba20c349454c2113cbac", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2c78bb49fde79e93b110a979f1f11b3f1221e1ef/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c78bb49fde79e93b110a979f1f11b3f1221e1ef/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=2c78bb49fde79e93b110a979f1f11b3f1221e1ef", "patch": "@@ -60,7 +60,9 @@ pub enum Subcommand {\n         paths: Vec<PathBuf>,\n         test_args: Vec<String>,\n     },\n-    Clean,\n+    Clean {\n+        all: bool,\n+    },\n     Dist {\n         paths: Vec<PathBuf>,\n     },\n@@ -147,6 +149,7 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\");\n                 opts.optmulti(\"\", \"test-args\", \"extra arguments\", \"ARGS\");\n             },\n             \"bench\" => { opts.optmulti(\"\", \"test-args\", \"extra arguments\", \"ARGS\"); },\n+            \"clean\" => { opts.optflag(\"\", \"all\", \"clean all build artifacts\"); },\n             _ => { },\n         };\n \n@@ -293,7 +296,10 @@ Arguments:\n                     println!(\"\\nclean takes no arguments\\n\");\n                     usage(1, &opts, &subcommand_help, &extra_help);\n                 }\n-                Subcommand::Clean\n+\n+                Subcommand::Clean {\n+                    all: matches.opt_present(\"all\"),\n+                }\n             }\n             \"dist\" => {\n                 Subcommand::Dist {"}, {"sha": "0876786f9a5442584b06f21214166a6c4cb1a133", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2c78bb49fde79e93b110a979f1f11b3f1221e1ef/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c78bb49fde79e93b110a979f1f11b3f1221e1ef/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=2c78bb49fde79e93b110a979f1f11b3f1221e1ef", "patch": "@@ -345,8 +345,8 @@ impl Build {\n             job::setup(self);\n         }\n \n-        if let Subcommand::Clean = self.config.cmd {\n-            return clean::clean(self);\n+        if let Subcommand::Clean { all } = self.config.cmd {\n+            return clean::clean(self, all);\n         }\n \n         self.verbose(\"finding compilers\");"}]}