{"sha": "cecffb63086407b06612b32667a52ba1e94b092c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlY2ZmYjYzMDg2NDA3YjA2NjEyYjMyNjY3YTUyYmExZTk0YjA5MmM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-24T22:45:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-24T22:45:13Z"}, "message": "Rollup merge of #68504 - tmiasko:check-pass, r=alexcrichton\n\nUse check-pass mode for lint tests and nll tests\n\nHelps with issue #62277.", "tree": {"sha": "ff4c7fbe89fc77d96b8f039e664117ac65d31b78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff4c7fbe89fc77d96b8f039e664117ac65d31b78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cecffb63086407b06612b32667a52ba1e94b092c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeK3N5CRBK7hj4Ov3rIwAAdHIIABZyYydOSDlNFqZIBxtUZ+iM\nOBEBSuIJaAoVhE37SbFYHExKFD+XWiGXNAt7pfSwhfCUcPiEBbhtSkPYf4STJrSd\n73uQeGFa/NVPpPDK4nHvAiNJFiLaRk7UMHAufFrwiw7vRLPy0sPUusml6hCQXgw3\nI1t5xPA/aO0Tt1vO/Tz+fPyxSN8k+wDF71Dk89k4pEUpzVOvhG54IVvekXp09iWn\nfEx6gsTyyIyXa6Do5Ff7THecDnlqxo/nyAzH66AsGHCbooOrZfkpHh0J9+mCCHiX\ng2OrsenlCY+jXQ80T3LJfXUF2ujFUE9xZJRYCTDt9wmeHKHgqSEg0vUEoRr1Esc=\n=+D1n\n-----END PGP SIGNATURE-----\n", "payload": "tree ff4c7fbe89fc77d96b8f039e664117ac65d31b78\nparent b9c29770cc1565b44932763d37f385734c6bc8a0\nparent d915c016c986d3060d6275f472b8a6e4c22b56ea\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1579905913 +0900\ncommitter GitHub <noreply@github.com> 1579905913 +0900\n\nRollup merge of #68504 - tmiasko:check-pass, r=alexcrichton\n\nUse check-pass mode for lint tests and nll tests\n\nHelps with issue #62277.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cecffb63086407b06612b32667a52ba1e94b092c", "html_url": "https://github.com/rust-lang/rust/commit/cecffb63086407b06612b32667a52ba1e94b092c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cecffb63086407b06612b32667a52ba1e94b092c/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9c29770cc1565b44932763d37f385734c6bc8a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9c29770cc1565b44932763d37f385734c6bc8a0", "html_url": "https://github.com/rust-lang/rust/commit/b9c29770cc1565b44932763d37f385734c6bc8a0"}, {"sha": "d915c016c986d3060d6275f472b8a6e4c22b56ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/d915c016c986d3060d6275f472b8a6e4c22b56ea", "html_url": "https://github.com/rust-lang/rust/commit/d915c016c986d3060d6275f472b8a6e4c22b56ea"}], "stats": {"total": 62, "additions": 31, "deletions": 31}, "files": [{"sha": "21c0df0288fa0020ed4c21d897fa7f5e3a6e268d", "filename": "src/test/ui/lint/command-line-lint-group-allow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-allow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-allow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-allow.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -A bad-style\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n fn main() {\n     let _InappropriateCamelCasing = true;"}, {"sha": "c8fd32c64d6db757c16ce36778c26bc56b41faec", "filename": "src/test/ui/lint/dead-code/tuple-struct-field.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Fdead-code%2Ftuple-struct-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Fdead-code%2Ftuple-struct-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Ftuple-struct-field.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,4 +1,4 @@\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![deny(dead_code)]\n "}, {"sha": "d6e5033a0c4c2451d887836958192a7351c78f31", "filename": "src/test/ui/lint/inclusive-range-pattern-syntax.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Finclusive-range-pattern-syntax.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Finclusive-range-pattern-syntax.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Finclusive-range-pattern-syntax.fixed?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,4 +1,4 @@\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n // run-rustfix\n \n #![warn(ellipsis_inclusive_range_patterns)]"}, {"sha": "773eea14fd790c8131d3f16400b764ed870250c1", "filename": "src/test/ui/lint/inclusive-range-pattern-syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Finclusive-range-pattern-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Finclusive-range-pattern-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Finclusive-range-pattern-syntax.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,4 +1,4 @@\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n // run-rustfix\n \n #![warn(ellipsis_inclusive_range_patterns)]"}, {"sha": "d085db43aa94a61f354808b2b017a2a29e0c46d0", "filename": "src/test/ui/lint/lint-lowercase-static-const-pattern-rename.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern-rename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern-rename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern-rename.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,4 +1,4 @@\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n // Issue #7526: lowercase static constants in patterns look like bindings\n \n // This is similar to lint-lowercase-static-const-pattern.rs, except it"}, {"sha": "2b1a52f25be87de2c36151a86e422defea3724cd", "filename": "src/test/ui/lint/lint-non-camel-case-variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Flint-non-camel-case-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Flint-non-camel-case-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-camel-case-variant.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,4 +1,4 @@\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![deny(non_camel_case_types)]\n "}, {"sha": "b832e4bcd62232a71091cc144bed378c470341a2", "filename": "src/test/ui/lint/lint-non-camel-case-with-trailing-underscores.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Flint-non-camel-case-with-trailing-underscores.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Flint-non-camel-case-with-trailing-underscores.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-camel-case-with-trailing-underscores.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,4 +1,4 @@\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![allow(dead_code)]\n // This is ok because we often use the trailing underscore to mean 'prime'"}, {"sha": "710eebe4b6525edca7d6c9d4abcd37bd5906639b", "filename": "src/test/ui/lint/lint-non-snake-case-no-lowercase-equivalent.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-no-lowercase-equivalent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-no-lowercase-equivalent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-no-lowercase-equivalent.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,4 +1,4 @@\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![allow(dead_code)]\n // pretty-expanded FIXME #23616"}, {"sha": "9f16cb20fb32cf029024a160814a53e7fd0ecd6e", "filename": "src/test/ui/lint/lint-nonstandard-style-unicode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Flint-nonstandard-style-unicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Flint-nonstandard-style-unicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-nonstandard-style-unicode.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,4 +1,4 @@\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![allow(dead_code)]\n "}, {"sha": "521472d99b17d9fe12901f70c528cbb5fe2c0a57", "filename": "src/test/ui/lint/lint-output-format-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Flint-output-format-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Flint-output-format-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-output-format-2.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,7 +1,7 @@\n // aux-build:lint_output_format.rs\n \n #![feature(unstable_test_feature)]\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n extern crate lint_output_format;\n use lint_output_format::{foo, bar};"}, {"sha": "4b407a29f64b385b5fc32448782adadd0212c1b0", "filename": "src/test/ui/lint/lint-stability-deprecated.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,4 +1,4 @@\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n // aux-build:lint_stability.rs\n // aux-build:inherited_stability.rs\n // aux-build:stability_cfg1.rs"}, {"sha": "c96b8f1a5cf4a3798e5cbca1cac776f268c18311", "filename": "src/test/ui/lint/lints-in-foreign-macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Flints-in-foreign-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Flints-in-foreign-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flints-in-foreign-macros.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,5 +1,5 @@\n // aux-build:lints-in-foreign-macros.rs\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![warn(unused_imports)] //~ missing documentation for crate [missing_docs]\n #![warn(missing_docs)]"}, {"sha": "4722e85673c2bb97846a3df9cf5cb810394085ff", "filename": "src/test/ui/lint/reasons.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Freasons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Freasons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Freasons.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,4 +1,4 @@\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![feature(lint_reasons)]\n "}, {"sha": "e40321e56bf150c7d0f7b8330ddc626be6264089", "filename": "src/test/ui/lint/type-overflow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Ftype-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Ftype-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ftype-overflow.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,4 +1,4 @@\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n #![warn(overflowing_literals)]\n \n fn main() {"}, {"sha": "8a3568f65f63e078c48aaecfba8ac3d633bd1036", "filename": "src/test/ui/lint/unused_labels.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Funused_labels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Funused_labels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_labels.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -2,7 +2,7 @@\n // should also deal with the edge cases where a label is shadowed,\n // within nested loops\n \n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![feature(label_break_value)]\n #![warn(unused_labels)]"}, {"sha": "53315dcf638aea6924f7a92ab9d2b6d33cad292c", "filename": "src/test/ui/lint/use-redundant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Fuse-redundant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Flint%2Fuse-redundant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fuse-redundant.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,4 +1,4 @@\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n #![warn(unused_imports)]\n \n use crate::foo::Bar;"}, {"sha": "ac182be15560785ebf68b81618176a00c9cb4393", "filename": "src/test/ui/nll/closure-requirements/propagate-despite-same-free-region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -4,7 +4,7 @@\n // regions is erased.\n \n // compile-flags:-Zborrowck=mir -Zverbose\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![feature(rustc_attrs)]\n "}, {"sha": "039b6aaaf0a70e09c60dc7667025e0864183aa98", "filename": "src/test/ui/nll/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fconstant.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -2,7 +2,7 @@\n // arbitrary types without ICEs.\n \n // compile-flags:-Zborrowck=mir\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n const HI: &str = \"hi\";\n "}, {"sha": "1897589bd588572c6a5b689d16c9d5d305e1c0e3", "filename": "src/test/ui/nll/drop-may-dangle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fdrop-may-dangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fdrop-may-dangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fdrop-may-dangle.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -3,7 +3,7 @@\n // including) the call to `use_x`. The `else` branch is not included.\n \n // compile-flags:-Zborrowck=mir\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![allow(warnings)]\n #![feature(dropck_eyepatch)]"}, {"sha": "db056a22855092a4da6341094f7278ba1e746366", "filename": "src/test/ui/nll/extra-unused-mut.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fextra-unused-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fextra-unused-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fextra-unused-mut.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,6 +1,6 @@\n // extra unused mut lint tests for #51918\n \n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![feature(generators, nll)]\n #![deny(unused_mut)]"}, {"sha": "3102562cd0ab2bd19908e3b0498ab20df6602a7e", "filename": "src/test/ui/nll/generator-distinct-lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fgenerator-distinct-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fgenerator-distinct-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fgenerator-distinct-lifetime.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -6,7 +6,7 @@\n // over a yield -- because the data that is borrowed (`*x`) is not\n // stored on the stack.\n \n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n fn foo(x: &mut u32) {\n     move || {"}, {"sha": "e81479495c4d7ec857aa09eae9a7772bf9042a04", "filename": "src/test/ui/nll/maybe-initialized-drop-uninitialized.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fmaybe-initialized-drop-uninitialized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fmaybe-initialized-drop-uninitialized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmaybe-initialized-drop-uninitialized.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -Zborrowck=mir\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![allow(warnings)]\n "}, {"sha": "017f53d1457d828e3f6de0ed04a03d578f7f05e8", "filename": "src/test/ui/nll/projection-return.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fprojection-return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fprojection-return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fprojection-return.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,5 +1,5 @@\n // compile-flags:-Zborrowck=mir\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![feature(rustc_attrs)]\n "}, {"sha": "527cca133956c39e09d31a02374c7e7c491bdc75", "filename": "src/test/ui/nll/relate_tys/hr-fn-aau-eq-abu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aau-eq-abu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aau-eq-abu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aau-eq-abu.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -6,7 +6,7 @@\n // another -- effectively, the single lifetime `'a` is just inferred\n // to be the intersection of the two distinct lifetimes.\n //\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n // compile-flags:-Zno-leak-check\n \n #![feature(nll)]"}, {"sha": "3a46188d119116e20837316000feedb32bc2b639", "filename": "src/test/ui/nll/relate_tys/hr-fn-aba-as-aaa.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aba-as-aaa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aba-as-aaa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aba-as-aaa.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -2,7 +2,7 @@\n // function returning always its first argument can be upcast to one\n // that returns either first or second argument.\n //\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n // compile-flags:-Zno-leak-check\n \n #![feature(nll)]"}, {"sha": "b03a539ebdbe9c562f35c2a4fe135d04f633697c", "filename": "src/test/ui/nll/ty-outlives/projection-body.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-body.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,7 +1,7 @@\n // Test that when we infer the lifetime to a subset of the fn body, it\n // works out.\n //\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n trait MyTrait<'a> {\n     type Output;"}, {"sha": "be1b653c384b78eff6a1d434787d461e3b87629e", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-trait-bound-static-closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-static-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-static-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-static-closure.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -3,7 +3,7 @@\n // we don't even propagate constraints from the closures to the callers.\n \n // compile-flags:-Zborrowck=mir -Zverbose\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![allow(warnings)]\n #![feature(rustc_attrs)]"}, {"sha": "a411162325dc4a8b9f6f6b9480bd06b791c58ab5", "filename": "src/test/ui/nll/ty-outlives/projection-where-clause-env.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-where-clause-env.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-where-clause-env.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-where-clause-env.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -4,7 +4,7 @@\n //\n // Regression test for #53121.\n //\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n trait MyTrait<'a> {\n     type Output;"}, {"sha": "8d0c10a639ee5d9a32d327efab6c16819dd4f47d", "filename": "src/test/ui/nll/ty-outlives/projection-where-clause-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-where-clause-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-where-clause-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-where-clause-trait.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -4,7 +4,7 @@\n // MyTrait<'a>>::Output: 'a` outlives `'a` (because the trait says\n // so).\n //\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n trait MyTrait<'a> {\n     type Output: 'a;"}, {"sha": "6547ae39817734f68789cc1c9a35acc4a604f15e", "filename": "src/test/ui/nll/ty-outlives/ty-param-implied-bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-implied-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-implied-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-implied-bounds.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,5 +1,5 @@\n // compile-flags:-Zborrowck=mir -Zverbose\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n // Test that we assume that universal types like `T` outlive the\n // function body."}, {"sha": "b27429f4d190f3fe2f63e1baff4110b27c5533da", "filename": "src/test/ui/nll/user-annotations/downcast-infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fdowncast-infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecffb63086407b06612b32667a52ba1e94b092c/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fdowncast-infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fdowncast-infer.rs?ref=cecffb63086407b06612b32667a52ba1e94b092c", "patch": "@@ -1,4 +1,4 @@\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n // Check that we don't try to downcast `_` when type-checking the annotation.\n fn main() {"}]}