{"sha": "5ce3d482e2313fe6795e6d688e62a092af424da8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZTNkNDgyZTIzMTNmZTY3OTVlNmQ2ODhlNjJhMDkyYWY0MjRkYTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-02T12:34:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-02T12:34:13Z"}, "message": "Auto merge of #45647 - nrc:rls-bugs, r=eddyb\n\nsave-analysis: support unions\n\nr? @eddyb", "tree": {"sha": "7e3956c51e647bd38351601f42cc71f5332aa8df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e3956c51e647bd38351601f42cc71f5332aa8df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ce3d482e2313fe6795e6d688e62a092af424da8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ce3d482e2313fe6795e6d688e62a092af424da8", "html_url": "https://github.com/rust-lang/rust/commit/5ce3d482e2313fe6795e6d688e62a092af424da8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ce3d482e2313fe6795e6d688e62a092af424da8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7d98c78377e5083d5add5d3ae8d26ffa938c005", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7d98c78377e5083d5add5d3ae8d26ffa938c005", "html_url": "https://github.com/rust-lang/rust/commit/a7d98c78377e5083d5add5d3ae8d26ffa938c005"}, {"sha": "a9bafe5c9ee8ce0d20634898e59aed4eb965f343", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9bafe5c9ee8ce0d20634898e59aed4eb965f343", "html_url": "https://github.com/rust-lang/rust/commit/a9bafe5c9ee8ce0d20634898e59aed4eb965f343"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "dcce714e5423d44f1efb8f9f888cb80038a96fc6", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5ce3d482e2313fe6795e6d688e62a092af424da8/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ce3d482e2313fe6795e6d688e62a092af424da8/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=5ce3d482e2313fe6795e6d688e62a092af424da8", "patch": "@@ -558,8 +558,13 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n \n         if !self.span.filter_generated(sub_span, item.span) {\n             let span = self.span_from_span(sub_span.expect(\"No span found for struct\"));\n+            let kind = match item.node {\n+                ast::ItemKind::Struct(_, _) => DefKind::Struct,\n+                ast::ItemKind::Union(_, _) => DefKind::Union,\n+                _ => unreachable!(),\n+            };\n             self.dumper.dump_def(item.vis == ast::Visibility::Public, Def {\n-                kind: DefKind::Struct,\n+                kind,\n                 id: ::id_from_node_id(item.id, &self.save_ctxt),\n                 span,\n                 name,\n@@ -1216,7 +1221,9 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> Visitor<'l> for DumpVisitor<'l, 'tc\n                 self.process_static_or_const_item(item, typ, expr),\n             Const(ref typ, ref expr) =>\n                 self.process_static_or_const_item(item, &typ, &expr),\n-            Struct(ref def, ref ty_params) => self.process_struct(item, def, ty_params),\n+            Struct(ref def, ref ty_params) | Union(ref def, ref ty_params) => {\n+                self.process_struct(item, def, ty_params)\n+            }\n             Enum(ref def, ref ty_params) => self.process_enum(item, def, ty_params),\n             Impl(..,\n                  ref ty_params,"}, {"sha": "834a7554a555d4a48a37327f686bc6f3f76e2672", "filename": "src/test/run-make/save-analysis/foo.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5ce3d482e2313fe6795e6d688e62a092af424da8/src%2Ftest%2Frun-make%2Fsave-analysis%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ce3d482e2313fe6795e6d688e62a092af424da8/src%2Ftest%2Frun-make%2Fsave-analysis%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsave-analysis%2Ffoo.rs?ref=5ce3d482e2313fe6795e6d688e62a092af424da8", "patch": "@@ -441,6 +441,11 @@ fn test_format_args() {\n     print!(\"x is {}, y is {1}, name is {n}\", x, y, n = name);\n }\n \n+\n+union TestUnion {\n+    f1: u32\n+}\n+\n struct FrameBuffer;\n \n struct SilenceGenerator;"}]}