{"sha": "88620c25f5a2b5e17f3bff1e70ed2fbee97c2217", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4NjIwYzI1ZjVhMmI1ZTE3ZjNiZmYxZTcwZWQyZmJlZTk3YzIyMTc=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-07-27T15:25:30Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-08-04T09:46:52Z"}, "message": "std: implement Total{Ord,Eq} for pointers.", "tree": {"sha": "13dd033bad90738962b25cce173cfdd0d2764c8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13dd033bad90738962b25cce173cfdd0d2764c8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88620c25f5a2b5e17f3bff1e70ed2fbee97c2217", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88620c25f5a2b5e17f3bff1e70ed2fbee97c2217", "html_url": "https://github.com/rust-lang/rust/commit/88620c25f5a2b5e17f3bff1e70ed2fbee97c2217", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88620c25f5a2b5e17f3bff1e70ed2fbee97c2217/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8407ec9fedccdd410dee2bca67651ce245ed5cd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8407ec9fedccdd410dee2bca67651ce245ed5cd3", "html_url": "https://github.com/rust-lang/rust/commit/8407ec9fedccdd410dee2bca67651ce245ed5cd3"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "6c3d4c5f1fbeab4d82dec81c1543d7e4eeb74939", "filename": "src/libstd/borrow.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/88620c25f5a2b5e17f3bff1e70ed2fbee97c2217/src%2Flibstd%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88620c25f5a2b5e17f3bff1e70ed2fbee97c2217/src%2Flibstd%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fborrow.rs?ref=88620c25f5a2b5e17f3bff1e70ed2fbee97c2217", "patch": "@@ -58,3 +58,15 @@ impl<'self, T: Ord> Ord for &'self T {\n         *(*self) > *(*other)\n     }\n }\n+\n+#[cfg(not(test))]\n+impl<'self, T: TotalOrd> TotalOrd for &'self T {\n+    #[inline]\n+    fn cmp(&self, other: & &'self T) -> Ordering { (**self).cmp(*other) }\n+}\n+\n+#[cfg(not(test))]\n+impl<'self, T: TotalEq> TotalEq for &'self T {\n+    #[inline]\n+    fn equals(&self, other: & &'self T) -> bool { (**self).equals(*other) }\n+}"}, {"sha": "57230b2fd247d4e86d9a844dc6bc39c798056378", "filename": "src/libstd/managed.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/88620c25f5a2b5e17f3bff1e70ed2fbee97c2217/src%2Flibstd%2Fmanaged.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88620c25f5a2b5e17f3bff1e70ed2fbee97c2217/src%2Flibstd%2Fmanaged.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmanaged.rs?ref=88620c25f5a2b5e17f3bff1e70ed2fbee97c2217", "patch": "@@ -12,7 +12,7 @@\n \n use ptr::to_unsafe_ptr;\n \n-#[cfg(not(test))] use cmp::{Eq, Ord};\n+#[cfg(not(test))] use cmp::*;\n \n pub static RC_MANAGED_UNIQUE : uint = (-2) as uint;\n pub static RC_IMMORTAL : uint = 0x77777777;\n@@ -71,6 +71,29 @@ impl<T:Ord> Ord for @mut T {\n     fn gt(&self, other: &@mut T) -> bool { *(*self) > *(*other) }\n }\n \n+#[cfg(not(test))]\n+impl<T: TotalOrd> TotalOrd for @T {\n+    #[inline]\n+    fn cmp(&self, other: &@T) -> Ordering { (**self).cmp(*other) }\n+}\n+\n+#[cfg(not(test))]\n+impl<T: TotalOrd> TotalOrd for @mut T {\n+    #[inline]\n+    fn cmp(&self, other: &@mut T) -> Ordering { (**self).cmp(*other) }\n+}\n+\n+#[cfg(not(test))]\n+impl<T: TotalEq> TotalEq for @T {\n+    #[inline]\n+    fn equals(&self, other: &@T) -> bool { (**self).equals(*other) }\n+}\n+\n+#[cfg(not(test))]\n+impl<T: TotalEq> TotalEq for @mut T {\n+    #[inline]\n+    fn equals(&self, other: &@mut T) -> bool { (**self).equals(*other) }\n+}\n #[test]\n fn test() {\n     let x = @3;"}, {"sha": "424c4fd6b2f44d0e4f4102e04e1827a62f667670", "filename": "src/libstd/owned.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/88620c25f5a2b5e17f3bff1e70ed2fbee97c2217/src%2Flibstd%2Fowned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88620c25f5a2b5e17f3bff1e70ed2fbee97c2217/src%2Flibstd%2Fowned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fowned.rs?ref=88620c25f5a2b5e17f3bff1e70ed2fbee97c2217", "patch": "@@ -10,7 +10,7 @@\n \n //! Operations on unique pointer types\n \n-#[cfg(not(test))] use cmp::{Eq, Ord};\n+#[cfg(not(test))] use cmp::*;\n \n #[cfg(not(test))]\n impl<T:Eq> Eq for ~T {\n@@ -31,3 +31,15 @@ impl<T:Ord> Ord for ~T {\n     #[inline]\n     fn gt(&self, other: &~T) -> bool { *(*self) > *(*other) }\n }\n+\n+#[cfg(not(test))]\n+impl<T: TotalOrd> TotalOrd for ~T {\n+    #[inline]\n+    fn cmp(&self, other: &~T) -> Ordering { (**self).cmp(*other) }\n+}\n+\n+#[cfg(not(test))]\n+impl<T: TotalEq> TotalEq for ~T {\n+    #[inline]\n+    fn equals(&self, other: &~T) -> bool { (**self).equals(*other) }\n+}"}]}