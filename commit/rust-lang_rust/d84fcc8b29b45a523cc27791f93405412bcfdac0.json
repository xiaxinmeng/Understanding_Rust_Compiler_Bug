{"sha": "d84fcc8b29b45a523cc27791f93405412bcfdac0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4NGZjYzhiMjliNDVhNTIzY2MyNzc5MWY5MzQwNTQxMmJjZmRhYzA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-05T15:52:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-05T15:52:19Z"}, "message": "Rollup merge of #84183 - rust-lang:relnotes-1.52.0, r=pietroalbini\n\nUpdate RELEASES.md for 1.52.0\n\n### [Rendered](https://github.com/rust-lang/rust/blob/relnotes-1.52.0/RELEASES.md)\n\nr? ````````@Mark-Simulacrum````````\ncc ````````@rust-lang/release````````", "tree": {"sha": "4572379bbc1894dd02d36d2f60f7d45f9daed225", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4572379bbc1894dd02d36d2f60f7d45f9daed225"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d84fcc8b29b45a523cc27791f93405412bcfdac0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgkr80CRBK7hj4Ov3rIwAAAqoIAGsYQBu385SxfGmBODhN+gIb\noIVcApCug3t+p2rC6nAtJqX+tfveyVk38mYEdQ3C3GpO7t/v6/Ab70l9EwkydlKX\ngCi4MouZH1331+Q1twEgUTBr1j6H7FIyyolfklc++MBtZRoW/msbApovMbTSPs9B\nGS5h50Jqtoa8kwXzVQ5QShQzKhOXFkP+TVPIPFyD1xcUbBNMVpeMdJ1uSC70RELR\nmAf104vVXM75b+Ic/QB+SbBx3FG1Pedw2dlUoO4e2DN/MSCc6lnlk89rIrmgmv6K\nVost4j2MujtD78vvEDnDjqQHno3u7mwTgrDptiBKMXC1+ai97eX7YFUlQwTDenQ=\n=rOsj\n-----END PGP SIGNATURE-----\n", "payload": "tree 4572379bbc1894dd02d36d2f60f7d45f9daed225\nparent 722bebf1635709453e507a257688f5e85d80528a\nparent b4bfb0e30ec496d80a5cb8569e979f69eb04b18e\nauthor Ralf Jung <post@ralfj.de> 1620229939 +0200\ncommitter GitHub <noreply@github.com> 1620229939 +0200\n\nRollup merge of #84183 - rust-lang:relnotes-1.52.0, r=pietroalbini\n\nUpdate RELEASES.md for 1.52.0\n\n### [Rendered](https://github.com/rust-lang/rust/blob/relnotes-1.52.0/RELEASES.md)\n\nr? ````````@Mark-Simulacrum````````\ncc ````````@rust-lang/release````````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d84fcc8b29b45a523cc27791f93405412bcfdac0", "html_url": "https://github.com/rust-lang/rust/commit/d84fcc8b29b45a523cc27791f93405412bcfdac0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d84fcc8b29b45a523cc27791f93405412bcfdac0/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "722bebf1635709453e507a257688f5e85d80528a", "url": "https://api.github.com/repos/rust-lang/rust/commits/722bebf1635709453e507a257688f5e85d80528a", "html_url": "https://github.com/rust-lang/rust/commit/722bebf1635709453e507a257688f5e85d80528a"}, {"sha": "b4bfb0e30ec496d80a5cb8569e979f69eb04b18e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4bfb0e30ec496d80a5cb8569e979f69eb04b18e", "html_url": "https://github.com/rust-lang/rust/commit/b4bfb0e30ec496d80a5cb8569e979f69eb04b18e"}], "stats": {"total": 148, "additions": 148, "deletions": 0}, "files": [{"sha": "1f940e6bc2d3b6d8be4ee23c37c38802139b259c", "filename": "RELEASES.md", "status": "modified", "additions": 148, "deletions": 0, "changes": 148, "blob_url": "https://github.com/rust-lang/rust/blob/d84fcc8b29b45a523cc27791f93405412bcfdac0/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/d84fcc8b29b45a523cc27791f93405412bcfdac0/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=d84fcc8b29b45a523cc27791f93405412bcfdac0", "patch": "@@ -1,3 +1,151 @@\n+Version 1.52.0 (2021-05-06)\n+============================\n+\n+Language\n+--------\n+- [Added the `unsafe_op_in_unsafe_fn` lint, which checks whether the unsafe code\n+  in an `unsafe fn` is wrapped in a `unsafe` block.][79208] This lint\n+  is allowed by default, and may become a warning or hard error in a\n+  future edition.\n+- [You can now cast mutable references to arrays to a pointer of the same type as\n+  the element.][81479]\n+\n+Compiler\n+--------\n+- [Upgraded the default LLVM to LLVM 12.][81451]\n+\n+Added tier 3\\* support for the following targets.\n+\n+- [`s390x-unknown-linux-musl`][82166]\n+- [`riscv32gc-unknown-linux-musl` & `riscv64gc-unknown-linux-musl`][82202]\n+- [`powerpc-unknown-openbsd`][82733]\n+\n+\\* Refer to Rust's [platform support page][platform-support-doc] for more\n+information on Rust's tiered platform support.\n+\n+Libraries\n+---------\n+- [`OsString` now implements `Extend` and `FromIterator`.][82121]\n+- [`cmp::Reverse` now has `#[repr(transparent)]` representation.][81879]\n+- [`Arc<impl Error>` now implements `error::Error`.][80553]\n+- [All integer division and remainder operations are now `const`.][80962]\n+\n+Stabilised APIs\n+-------------\n+- [`Arguments::as_str`]\n+- [`char::MAX`]\n+- [`char::REPLACEMENT_CHARACTER`]\n+- [`char::UNICODE_VERSION`]\n+- [`char::decode_utf16`]\n+- [`char::from_digit`]\n+- [`char::from_u32_unchecked`]\n+- [`char::from_u32`]\n+- [`slice::partition_point`]\n+- [`str::rsplit_once`]\n+- [`str::split_once`]\n+\n+The following previously stable APIs are now `const`.\n+\n+- [`char::len_utf8`]\n+- [`char::len_utf16`]\n+- [`char::to_ascii_uppercase`]\n+- [`char::to_ascii_lowercase`]\n+- [`char::eq_ignore_ascii_case`]\n+- [`u8::to_ascii_uppercase`]\n+- [`u8::to_ascii_lowercase`]\n+- [`u8::eq_ignore_ascii_case`]\n+\n+Rustdoc\n+-------\n+- [Rustdoc lints are now treated as a tool lint, meaning that\n+  lints are now prefixed with `rustdoc::` (e.g. `#[warn(rustdoc::non_autolinks)]`).][80527]\n+  Using the old style is still allowed, and will become a warning in\n+  a future release.\n+- [Rustdoc now supports argument files.][82261]\n+- [Rustdoc now generates smart punctuation for documentation.][79423]\n+- [You can now use \"task lists\" in Rustdoc Markdown.][81766] E.g.\n+  ```markdown\n+  - [x] Complete\n+  - [ ] Todo\n+  ```\n+\n+Misc\n+----\n+- [You can now pass multiple filters to tests.][81356] E.g.\n+  `cargo test -- foo bar` will run all tests that match `foo` and `bar`.\n+- [Rustup now distributes PDB symbols for the `std` library on Windows,\n+  allowing you to see `std` symbols when debugging.][82218]\n+\n+Internal Only\n+-------------\n+These changes provide no direct user facing benefits, but represent significant\n+improvements to the internals and overall performance of rustc and\n+related tools.\n+\n+- [Check the result cache before the DepGraph when ensuring queries][81855]\n+- [Try fast_reject::simplify_type in coherence before doing full check][81744]\n+- [Only store a LocalDefId in some HIR nodes][81611]\n+- [Store HIR attributes in a side table][79519]\n+\n+Compatibility Notes\n+-------------------\n+- [Cargo build scripts are now forbidden from setting `RUSTC_BOOTSTRAP`.][cargo/9181]\n+- [Removed support for the `x86_64-rumprun-netbsd` target.][82594]\n+- [Deprecated the `x86_64-sun-solaris` target in favor of `x86_64-pc-solaris`.][82216]\n+- [Rustdoc now only accepts `,`, ` `, and `\\t` as delimiters for specifying\n+  languages in code blocks.][78429]\n+- [Rustc now catches more cases of `pub_use_of_private_extern_crate`][80763]\n+- [Changes in how proc macros handle whitespace may lead to panics when used\n+  with older `proc-macro-hack` versions. A `cargo update` should be sufficient to fix this in all cases.][84136]\n+\n+[84136]: https://github.com/rust-lang/rust/issues/84136\n+[80763]: https://github.com/rust-lang/rust/pull/80763\n+[82166]: https://github.com/rust-lang/rust/pull/82166\n+[82121]: https://github.com/rust-lang/rust/pull/82121\n+[81879]: https://github.com/rust-lang/rust/pull/81879\n+[82261]: https://github.com/rust-lang/rust/pull/82261\n+[82218]: https://github.com/rust-lang/rust/pull/82218\n+[82216]: https://github.com/rust-lang/rust/pull/82216\n+[82202]: https://github.com/rust-lang/rust/pull/82202\n+[81855]: https://github.com/rust-lang/rust/pull/81855\n+[81766]: https://github.com/rust-lang/rust/pull/81766\n+[81744]: https://github.com/rust-lang/rust/pull/81744\n+[81611]: https://github.com/rust-lang/rust/pull/81611\n+[81479]: https://github.com/rust-lang/rust/pull/81479\n+[81451]: https://github.com/rust-lang/rust/pull/81451\n+[81356]: https://github.com/rust-lang/rust/pull/81356\n+[80962]: https://github.com/rust-lang/rust/pull/80962\n+[80553]: https://github.com/rust-lang/rust/pull/80553\n+[80527]: https://github.com/rust-lang/rust/pull/80527\n+[79519]: https://github.com/rust-lang/rust/pull/79519\n+[79423]: https://github.com/rust-lang/rust/pull/79423\n+[79208]: https://github.com/rust-lang/rust/pull/79208\n+[78429]: https://github.com/rust-lang/rust/pull/78429\n+[82733]: https://github.com/rust-lang/rust/pull/82733\n+[82594]: https://github.com/rust-lang/rust/pull/82594\n+[cargo/9181]: https://github.com/rust-lang/cargo/pull/9181\n+[`char::MAX`]: https://doc.rust-lang.org/std/primitive.char.html#associatedconstant.MAX\n+[`char::REPLACEMENT_CHARACTER`]: https://doc.rust-lang.org/std/primitive.char.html#associatedconstant.REPLACEMENT_CHARACTER\n+[`char::UNICODE_VERSION`]: https://doc.rust-lang.org/std/primitive.char.html#associatedconstant.UNICODE_VERSION\n+[`char::decode_utf16`]: https://doc.rust-lang.org/std/primitive.char.html#method.decode_utf16\n+[`char::from_u32`]: https://doc.rust-lang.org/std/primitive.char.html#method.from_u32\n+[`char::from_u32_unchecked`]: https://doc.rust-lang.org/std/primitive.char.html#method.from_u32_unchecked\n+[`char::from_digit`]: https://doc.rust-lang.org/std/primitive.char.html#method.from_digit\n+[`Peekable::next_if`]: https://doc.rust-lang.org/stable/std/iter/struct.Peekable.html#method.next_if\n+[`Peekable::next_if_eq`]: https://doc.rust-lang.org/stable/std/iter/struct.Peekable.html#method.next_if_eq\n+[`Arguments::as_str`]: https://doc.rust-lang.org/stable/std/fmt/struct.Arguments.html#method.as_str\n+[`str::split_once`]: https://doc.rust-lang.org/stable/std/primitive.str.html#method.split_once\n+[`str::rsplit_once`]: https://doc.rust-lang.org/stable/std/primitive.str.html#method.rsplit_once\n+[`slice::partition_point`]: https://doc.rust-lang.org/stable/std/primitive.slice.html#method.partition_point\n+[`char::len_utf8`]: https://doc.rust-lang.org/stable/std/primitive.char.html#method.len_utf8\n+[`char::len_utf16`]: https://doc.rust-lang.org/stable/std/primitive.char.html#method.len_utf16\n+[`char::to_ascii_uppercase`]: https://doc.rust-lang.org/stable/std/primitive.char.html#method.to_ascii_uppercase\n+[`char::to_ascii_lowercase`]: https://doc.rust-lang.org/stable/std/primitive.char.html#method.to_ascii_lowercase\n+[`char::eq_ignore_ascii_case`]: https://doc.rust-lang.org/stable/std/primitive.char.html#method.eq_ignore_ascii_case\n+[`u8::to_ascii_uppercase`]: https://doc.rust-lang.org/stable/std/primitive.u8.html#method.to_ascii_uppercase\n+[`u8::to_ascii_lowercase`]: https://doc.rust-lang.org/stable/std/primitive.u8.html#method.to_ascii_lowercase\n+[`u8::eq_ignore_ascii_case`]: https://doc.rust-lang.org/stable/std/primitive.u8.html#method.eq_ignore_ascii_case\n+\n Version 1.51.0 (2021-03-25)\n ============================\n "}]}