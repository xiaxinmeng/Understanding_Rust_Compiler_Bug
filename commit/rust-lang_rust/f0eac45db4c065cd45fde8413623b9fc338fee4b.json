{"sha": "f0eac45db4c065cd45fde8413623b9fc338fee4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZWFjNDVkYjRjMDY1Y2Q0NWZkZTg0MTM2MjNiOWZjMzM4ZmVlNGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-02T08:36:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-02T08:36:54Z"}, "message": "Auto merge of #6104 - mikerite:fix-6096, r=ebroto\n\nAllow exponent separator\n\nFixes #6096\n\nchangelog: Fixed bug in `clippy::inconsistent_digit_grouping` when floating point exponent is used", "tree": {"sha": "875de622e24df433d3ad106eb1b3ad56ebd3285d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/875de622e24df433d3ad106eb1b3ad56ebd3285d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0eac45db4c065cd45fde8413623b9fc338fee4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0eac45db4c065cd45fde8413623b9fc338fee4b", "html_url": "https://github.com/rust-lang/rust/commit/f0eac45db4c065cd45fde8413623b9fc338fee4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0eac45db4c065cd45fde8413623b9fc338fee4b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c9800a3a9026aa3cc1071276d0672585ba2175e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c9800a3a9026aa3cc1071276d0672585ba2175e", "html_url": "https://github.com/rust-lang/rust/commit/8c9800a3a9026aa3cc1071276d0672585ba2175e"}, {"sha": "e91202cf683b7265eec484ad311b5a9d3b56fc3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e91202cf683b7265eec484ad311b5a9d3b56fc3e", "html_url": "https://github.com/rust-lang/rust/commit/e91202cf683b7265eec484ad311b5a9d3b56fc3e"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "52d3c2c1daf0961dec0f4af9f5efb565a9d6b14b", "filename": "clippy_lints/src/utils/numeric_literal.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f0eac45db4c065cd45fde8413623b9fc338fee4b/clippy_lints%2Fsrc%2Futils%2Fnumeric_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0eac45db4c065cd45fde8413623b9fc338fee4b/clippy_lints%2Fsrc%2Futils%2Fnumeric_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fnumeric_literal.rs?ref=f0eac45db4c065cd45fde8413623b9fc338fee4b", "patch": "@@ -36,8 +36,9 @@ pub struct NumericLiteral<'a> {\n     pub integer: &'a str,\n     /// The fraction part of the number.\n     pub fraction: Option<&'a str>,\n-    /// The character used as exponent separator (b'e' or b'E') and the exponent part.\n-    pub exponent: Option<(char, &'a str)>,\n+    /// The exponent separator (b'e' or b'E') including preceding underscore if present\n+    /// and the exponent part.\n+    pub exponent: Option<(&'a str, &'a str)>,\n \n     /// The type suffix, including preceding underscore if present.\n     pub suffix: Option<&'a str>,\n@@ -100,7 +101,7 @@ impl<'a> NumericLiteral<'a> {\n         self.radix == Radix::Decimal\n     }\n \n-    pub fn split_digit_parts(digits: &str, float: bool) -> (&str, Option<&str>, Option<(char, &str)>) {\n+    pub fn split_digit_parts(digits: &str, float: bool) -> (&str, Option<&str>, Option<(&str, &str)>) {\n         let mut integer = digits;\n         let mut fraction = None;\n         let mut exponent = None;\n@@ -113,12 +114,14 @@ impl<'a> NumericLiteral<'a> {\n                         fraction = Some(&digits[i + 1..]);\n                     },\n                     'e' | 'E' => {\n-                        if integer.len() > i {\n-                            integer = &digits[..i];\n+                        let exp_start = if digits[..i].ends_with('_') { i - 1 } else { i };\n+\n+                        if integer.len() > exp_start {\n+                            integer = &digits[..exp_start];\n                         } else {\n-                            fraction = Some(&digits[integer.len() + 1..i]);\n+                            fraction = Some(&digits[integer.len() + 1..exp_start]);\n                         };\n-                        exponent = Some((c, &digits[i + 1..]));\n+                        exponent = Some((&digits[exp_start..=i], &digits[i + 1..]));\n                         break;\n                     },\n                     _ => {},\n@@ -153,7 +156,7 @@ impl<'a> NumericLiteral<'a> {\n         }\n \n         if let Some((separator, exponent)) = self.exponent {\n-            output.push(separator);\n+            output.push_str(separator);\n             Self::group_digits(&mut output, exponent, group_size, true, false);\n         }\n "}, {"sha": "dd683e7f746a48ec16bc0acb3a0bc775f4a4ac22", "filename": "tests/ui/inconsistent_digit_grouping.fixed", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f0eac45db4c065cd45fde8413623b9fc338fee4b/tests%2Fui%2Finconsistent_digit_grouping.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f0eac45db4c065cd45fde8413623b9fc338fee4b/tests%2Fui%2Finconsistent_digit_grouping.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_digit_grouping.fixed?ref=f0eac45db4c065cd45fde8413623b9fc338fee4b", "patch": "@@ -40,4 +40,8 @@ fn main() {\n     // Ignore literals in macros\n     let _ = mac1!();\n     let _ = mac2!();\n+\n+    // Issue #6096\n+    // Allow separating exponent with '_'\n+    let _ = 1.025_011_10_E0;\n }"}, {"sha": "d5d27c853c28d516667619eea792856394259ac3", "filename": "tests/ui/inconsistent_digit_grouping.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f0eac45db4c065cd45fde8413623b9fc338fee4b/tests%2Fui%2Finconsistent_digit_grouping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0eac45db4c065cd45fde8413623b9fc338fee4b/tests%2Fui%2Finconsistent_digit_grouping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_digit_grouping.rs?ref=f0eac45db4c065cd45fde8413623b9fc338fee4b", "patch": "@@ -40,4 +40,8 @@ fn main() {\n     // Ignore literals in macros\n     let _ = mac1!();\n     let _ = mac2!();\n+\n+    // Issue #6096\n+    // Allow separating exponent with '_'\n+    let _ = 1.025_011_10_E0;\n }"}]}