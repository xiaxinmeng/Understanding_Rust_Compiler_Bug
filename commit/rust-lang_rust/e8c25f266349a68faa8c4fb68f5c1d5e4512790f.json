{"sha": "e8c25f266349a68faa8c4fb68f5c1d5e4512790f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4YzI1ZjI2NjM0OWE2OGZhYThjNGZiNjhmNWMxZDVlNDUxMjc5MGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-08T10:23:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-08T10:23:17Z"}, "message": "Auto merge of #87836 - tsoutsman:master, r=petrochenkov\n\nChange proc_macro::Diagnostics docs\n\nWith Rust 1.54 attributes can invoke function-like macros. This allows functions generated by macros to have non-generic documentation. This pull request changes the documentation of `proc_macro::Diagnostics` to be more specific and include a link to the level.\n## Example\nBefore:\n```markdown\nAdds a new child diagnostic message to `self` with the level\nidentified by this method\u2019s name with the given `message`.\n```\nAfter:\n```markdown\nAdds a new child diagnostic message to self with the [`Level::Error`]\nlevel, and the given `message`.\n```", "tree": {"sha": "0953637c8083e73e869dcf44cead0f6395d16629", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0953637c8083e73e869dcf44cead0f6395d16629"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8c25f266349a68faa8c4fb68f5c1d5e4512790f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8c25f266349a68faa8c4fb68f5c1d5e4512790f", "html_url": "https://github.com/rust-lang/rust/commit/e8c25f266349a68faa8c4fb68f5c1d5e4512790f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8c25f266349a68faa8c4fb68f5c1d5e4512790f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4c2986c499ee9440b7ae23bf5a62c6168e1ce17", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4c2986c499ee9440b7ae23bf5a62c6168e1ce17", "html_url": "https://github.com/rust-lang/rust/commit/c4c2986c499ee9440b7ae23bf5a62c6168e1ce17"}, {"sha": "26bf0ef0b5a70a70a6e0f85533bb3ca1404e9650", "url": "https://api.github.com/repos/rust-lang/rust/commits/26bf0ef0b5a70a70a6e0f85533bb3ca1404e9650", "html_url": "https://github.com/rust-lang/rust/commit/26bf0ef0b5a70a70a6e0f85533bb3ca1404e9650"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "6e46dc0367d07b2dd8dadf6c6e238c81477228f3", "filename": "library/proc_macro/src/diagnostic.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e8c25f266349a68faa8c4fb68f5c1d5e4512790f/library%2Fproc_macro%2Fsrc%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8c25f266349a68faa8c4fb68f5c1d5e4512790f/library%2Fproc_macro%2Fsrc%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Fdiagnostic.rs?ref=e8c25f266349a68faa8c4fb68f5c1d5e4512790f", "patch": "@@ -56,10 +56,9 @@ pub struct Diagnostic {\n \n macro_rules! diagnostic_child_methods {\n     ($spanned:ident, $regular:ident, $level:expr) => {\n-        /// Adds a new child diagnostic message to `self` with the level\n-        /// identified by this method's name with the given `spans` and\n-        /// `message`.\n         #[unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")]\n+        #[doc = concat!(\"Adds a new child diagnostics message to `self` with the [`\",\n+                        stringify!($level), \"`] level, and the given `spans` and `message`.\")]\n         pub fn $spanned<S, T>(mut self, spans: S, message: T) -> Diagnostic\n         where\n             S: MultiSpan,\n@@ -69,9 +68,9 @@ macro_rules! diagnostic_child_methods {\n             self\n         }\n \n-        /// Adds a new child diagnostic message to `self` with the level\n-        /// identified by this method's name with the given `message`.\n         #[unstable(feature = \"proc_macro_diagnostic\", issue = \"54140\")]\n+        #[doc = concat!(\"Adds a new child diagnostic message to `self` with the [`\",\n+                        stringify!($level), \"`] level, and the given `message`.\")]\n         pub fn $regular<T: Into<String>>(mut self, message: T) -> Diagnostic {\n             self.children.push(Diagnostic::new($level, message));\n             self"}]}