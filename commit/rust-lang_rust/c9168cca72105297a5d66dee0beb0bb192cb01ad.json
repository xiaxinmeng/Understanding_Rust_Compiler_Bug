{"sha": "c9168cca72105297a5d66dee0beb0bb192cb01ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5MTY4Y2NhNzIxMDUyOTdhNWQ2NmRlZTBiZWIwYmIxOTJjYjAxYWQ=", "commit": {"author": {"name": "Julian Orth", "email": "ju.orth@gmail.com", "date": "2015-02-26T14:31:24Z"}, "committer": {"name": "Julian Orth", "email": "ju.orth@gmail.com", "date": "2015-02-27T01:36:40Z"}, "message": "libtest: flush output after every write\n\nUseful for debugging tests that hang forever.", "tree": {"sha": "29498a15bff2f0bf2fb0acf9d8f10d3d4079a9cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29498a15bff2f0bf2fb0acf9d8f10d3d4079a9cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9168cca72105297a5d66dee0beb0bb192cb01ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9168cca72105297a5d66dee0beb0bb192cb01ad", "html_url": "https://github.com/rust-lang/rust/commit/c9168cca72105297a5d66dee0beb0bb192cb01ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9168cca72105297a5d66dee0beb0bb192cb01ad/comments", "author": {"login": "mahkoh", "id": 1882250, "node_id": "MDQ6VXNlcjE4ODIyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1882250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahkoh", "html_url": "https://github.com/mahkoh", "followers_url": "https://api.github.com/users/mahkoh/followers", "following_url": "https://api.github.com/users/mahkoh/following{/other_user}", "gists_url": "https://api.github.com/users/mahkoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahkoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahkoh/subscriptions", "organizations_url": "https://api.github.com/users/mahkoh/orgs", "repos_url": "https://api.github.com/users/mahkoh/repos", "events_url": "https://api.github.com/users/mahkoh/events{/privacy}", "received_events_url": "https://api.github.com/users/mahkoh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mahkoh", "id": 1882250, "node_id": "MDQ6VXNlcjE4ODIyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1882250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahkoh", "html_url": "https://github.com/mahkoh", "followers_url": "https://api.github.com/users/mahkoh/followers", "following_url": "https://api.github.com/users/mahkoh/following{/other_user}", "gists_url": "https://api.github.com/users/mahkoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahkoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahkoh/subscriptions", "organizations_url": "https://api.github.com/users/mahkoh/orgs", "repos_url": "https://api.github.com/users/mahkoh/repos", "events_url": "https://api.github.com/users/mahkoh/events{/privacy}", "received_events_url": "https://api.github.com/users/mahkoh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41f8b1e89b5ca0c79d7bca782ca44085624d4564", "url": "https://api.github.com/repos/rust-lang/rust/commits/41f8b1e89b5ca0c79d7bca782ca44085624d4564", "html_url": "https://github.com/rust-lang/rust/commit/41f8b1e89b5ca0c79d7bca782ca44085624d4564"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "7c7f1fd478aa9e8b7016d8f6a1279fd38644a90f", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c9168cca72105297a5d66dee0beb0bb192cb01ad/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9168cca72105297a5d66dee0beb0bb192cb01ad/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=c9168cca72105297a5d66dee0beb0bb192cb01ad", "patch": "@@ -506,16 +506,25 @@ impl<T: Writer> ConsoleTestState<T> {\n                 if self.use_color {\n                     try!(term.reset());\n                 }\n-                Ok(())\n+                term.flush()\n+            }\n+            Raw(ref mut stdout) => {\n+                try!(stdout.write_all(word.as_bytes()));\n+                stdout.flush()\n             }\n-            Raw(ref mut stdout) => stdout.write_all(word.as_bytes())\n         }\n     }\n \n     pub fn write_plain(&mut self, s: &str) -> old_io::IoResult<()> {\n         match self.out {\n-            Pretty(ref mut term) => term.write_all(s.as_bytes()),\n-            Raw(ref mut stdout) => stdout.write_all(s.as_bytes())\n+            Pretty(ref mut term) => {\n+                try!(term.write_all(s.as_bytes()));\n+                term.flush()\n+            },\n+            Raw(ref mut stdout) => {\n+                try!(stdout.write_all(s.as_bytes()));\n+                stdout.flush()\n+            },\n         }\n     }\n "}]}