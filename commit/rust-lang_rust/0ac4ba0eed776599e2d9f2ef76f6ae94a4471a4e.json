{"sha": "0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhYzRiYTBlZWQ3NzY1OTllMmQ5ZjJlZjc2ZjZhZTk0YTQ0NzFhNGU=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-20T09:20:45Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-20T09:28:10Z"}, "message": "Parse `?const ?Trait`", "tree": {"sha": "e2bcafc66d84cf59670c6726d1714a64598ef306", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2bcafc66d84cf59670c6726d1714a64598ef306"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e", "html_url": "https://github.com/rust-lang/rust/commit/0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b1a9d35c8ee396d2c546603347b5dc65d619cdf", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b1a9d35c8ee396d2c546603347b5dc65d619cdf", "html_url": "https://github.com/rust-lang/rust/commit/3b1a9d35c8ee396d2c546603347b5dc65d619cdf"}], "stats": {"total": 54, "additions": 30, "deletions": 24}, "files": [{"sha": "bc922fa0f55a3f162ee19f9325126354de1e9463", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e", "patch": "@@ -1254,7 +1254,10 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                                 | GenericBound::Trait(ref ty, TraitBoundModifier::MaybeConst) => {\n                                     Some(this.lower_poly_trait_ref(ty, itctx.reborrow()))\n                                 }\n-                                GenericBound::Trait(_, TraitBoundModifier::Maybe) => None,\n+                                GenericBound::Trait(_, TraitBoundModifier::Maybe)\n+                                | GenericBound::Trait(_, TraitBoundModifier::MaybeConstMaybe) => {\n+                                    None\n+                                }\n                                 GenericBound::Outlives(ref lifetime) => {\n                                     if lifetime_bound.is_none() {\n                                         lifetime_bound = Some(this.lower_lifetime(lifetime));\n@@ -2297,8 +2300,10 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n     fn lower_trait_bound_modifier(&mut self, f: TraitBoundModifier) -> hir::TraitBoundModifier {\n         match f {\n             TraitBoundModifier::None => hir::TraitBoundModifier::None,\n-            TraitBoundModifier::Maybe => hir::TraitBoundModifier::Maybe,\n             TraitBoundModifier::MaybeConst => hir::TraitBoundModifier::MaybeConst,\n+            TraitBoundModifier::MaybeConstMaybe | TraitBoundModifier::Maybe => {\n+                hir::TraitBoundModifier::Maybe\n+            }\n         }\n     }\n "}, {"sha": "9b71704f52d438608539cd77c9422e636066e65d", "filename": "src/librustc_ast_passes/ast_validation.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e/src%2Flibrustc_ast_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e/src%2Flibrustc_ast_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fast_validation.rs?ref=0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e", "patch": "@@ -917,11 +917,20 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n     }\n \n     fn visit_param_bound(&mut self, bound: &'a GenericBound) {\n-        if let GenericBound::Trait(_, TraitBoundModifier::MaybeConst) = bound {\n-            if let Some(ctx) = self.bound_context {\n-                let msg = format!(\"`?const` is not permitted in {}\", ctx.description());\n-                self.err_handler().span_err(bound.span(), &msg);\n+        match bound {\n+            GenericBound::Trait(_, TraitBoundModifier::MaybeConst) => {\n+                if let Some(ctx) = self.bound_context {\n+                    let msg = format!(\"`?const` is not permitted in {}\", ctx.description());\n+                    self.err_handler().span_err(bound.span(), &msg);\n+                }\n+            }\n+\n+            GenericBound::Trait(_, TraitBoundModifier::MaybeConstMaybe) => {\n+                self.err_handler()\n+                    .span_err(bound.span(), \"`?const` and `?` are mutually exclusive\");\n             }\n+\n+            _ => {}\n         }\n \n         visit::walk_param_bound(self, bound)"}, {"sha": "efd8acc933aa833fb4a2b58b8e21f56df958ea02", "filename": "src/librustc_parse/parser/ty.rs", "status": "modified", "additions": 5, "deletions": 18, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e/src%2Flibrustc_parse%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e/src%2Flibrustc_parse%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fty.rs?ref=0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e", "patch": "@@ -27,17 +27,13 @@ struct BoundModifiers {\n }\n \n impl BoundModifiers {\n-    fn to_trait_bound_modifier(&self) -> Result<TraitBoundModifier, &'static str> {\n-        let modifier = match (self.maybe, self.maybe_const) {\n+    fn to_trait_bound_modifier(&self) -> TraitBoundModifier {\n+        match (self.maybe, self.maybe_const) {\n             (None, None) => TraitBoundModifier::None,\n             (Some(_), None) => TraitBoundModifier::Maybe,\n             (None, Some(_)) => TraitBoundModifier::MaybeConst,\n-            (Some(_), Some(_)) => {\n-                return Err(\"`?const` and `?` are mutually exclusive\");\n-            }\n-        };\n-\n-        Ok(modifier)\n+            (Some(_), Some(_)) => TraitBoundModifier::MaybeConstMaybe,\n+        }\n     }\n }\n \n@@ -563,16 +559,7 @@ impl<'a> Parser<'a> {\n             self.expect(&token::CloseDelim(token::Paren))?;\n         }\n \n-        let modifier = match modifiers.to_trait_bound_modifier() {\n-            Ok(m) => m,\n-            Err(msg) => {\n-                self.struct_span_err(lo.to(self.prev_span), msg).emit();\n-\n-                // Continue compilation as if the user had written `?Trait`.\n-                TraitBoundModifier::Maybe\n-            }\n-        };\n-\n+        let modifier = modifiers.to_trait_bound_modifier();\n         let poly_trait = PolyTraitRef::new(lifetime_defs, path, lo.to(self.prev_span));\n         Ok(GenericBound::Trait(poly_trait, modifier))\n     }"}, {"sha": "5f38ac4cc0f42ed27e7fc264317b09d8f517fc16", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=0ac4ba0eed776599e2d9f2ef76f6ae94a4471a4e", "patch": "@@ -279,6 +279,11 @@ pub enum TraitBoundModifier {\n \n     /// `?const Trait`\n     MaybeConst,\n+\n+    /// `?const ?Trait`\n+    //\n+    // This parses but will be rejected during AST validation.\n+    MaybeConstMaybe,\n }\n \n /// The AST represents all type param bounds as types."}]}