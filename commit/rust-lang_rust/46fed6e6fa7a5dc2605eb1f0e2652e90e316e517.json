{"sha": "46fed6e6fa7a5dc2605eb1f0e2652e90e316e517", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2ZmVkNmU2ZmE3YTVkYzI2MDVlYjFmMGUyNjUyZTkwZTMxNmU1MTc=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-02-25T12:13:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-25T12:13:15Z"}, "message": "Rollup merge of #39859 - GuillaumeGomez:rustdoc-test-relative-path, r=alexcrichton\n\nSet rustdoc --test files' path relative to the current directory\n\nr? @alexcrichton", "tree": {"sha": "75438178403a5c46fd38fd5dd2c7a1fb67e825a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75438178403a5c46fd38fd5dd2c7a1fb67e825a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46fed6e6fa7a5dc2605eb1f0e2652e90e316e517", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46fed6e6fa7a5dc2605eb1f0e2652e90e316e517", "html_url": "https://github.com/rust-lang/rust/commit/46fed6e6fa7a5dc2605eb1f0e2652e90e316e517", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46fed6e6fa7a5dc2605eb1f0e2652e90e316e517/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e78aa5d7546d5db493ec12328368ab0c249c2a94", "url": "https://api.github.com/repos/rust-lang/rust/commits/e78aa5d7546d5db493ec12328368ab0c249c2a94", "html_url": "https://github.com/rust-lang/rust/commit/e78aa5d7546d5db493ec12328368ab0c249c2a94"}, {"sha": "958fbc5d66ce3773cbeb81911e4c4d69486ad1a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/958fbc5d66ce3773cbeb81911e4c4d69486ad1a3", "html_url": "https://github.com/rust-lang/rust/commit/958fbc5d66ce3773cbeb81911e4c4d69486ad1a3"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "c7000ee1e40e764f5a79837cd2149cc24d891a71", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/46fed6e6fa7a5dc2605eb1f0e2652e90e316e517/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46fed6e6fa7a5dc2605eb1f0e2652e90e316e517/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=46fed6e6fa7a5dc2605eb1f0e2652e90e316e517", "patch": "@@ -12,7 +12,7 @@ use std::env;\n use std::ffi::OsString;\n use std::io::prelude::*;\n use std::io;\n-use std::path::PathBuf;\n+use std::path::{Path, PathBuf};\n use std::panic::{self, AssertUnwindSafe};\n use std::process::Command;\n use std::rc::Rc;\n@@ -485,7 +485,15 @@ impl Collector {\n \n     pub fn get_filename(&self) -> String {\n         if let Some(ref codemap) = self.codemap {\n-            codemap.span_to_filename(self.position)\n+            let filename = codemap.span_to_filename(self.position);\n+            if let Ok(cur_dir) = env::current_dir() {\n+                if let Ok(path) = Path::new(&filename).strip_prefix(&cur_dir) {\n+                    if let Some(path) = path.to_str() {\n+                        return path.to_owned();\n+                    }\n+                }\n+            }\n+            filename\n         } else if let Some(ref filename) = self.filename {\n             filename.clone()\n         } else {"}, {"sha": "1ec0838d45f7640a884a08e9cb6f2b021998cedc", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/46fed6e6fa7a5dc2605eb1f0e2652e90e316e517/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46fed6e6fa7a5dc2605eb1f0e2652e90e316e517/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=46fed6e6fa7a5dc2605eb1f0e2652e90e316e517", "patch": "@@ -1987,12 +1987,22 @@ actual:\\n\\\n     fn check_rustdoc_test_option(&self, res: ProcRes) {\n         let mut other_files = Vec::new();\n         let mut files: HashMap<String, Vec<usize>> = HashMap::new();\n-        files.insert(self.testpaths.file.to_str().unwrap().to_owned(),\n+        let cwd = env::current_dir().unwrap();\n+        files.insert(self.testpaths.file.strip_prefix(&cwd)\n+                                        .unwrap_or(&self.testpaths.file)\n+                                        .to_str()\n+                                        .unwrap()\n+                                        .replace('\\\\', \"/\"),\n                      self.get_lines(&self.testpaths.file, Some(&mut other_files)));\n         for other_file in other_files {\n             let mut path = self.testpaths.file.clone();\n             path.set_file_name(&format!(\"{}.rs\", other_file));\n-            files.insert(path.to_str().unwrap().to_owned(), self.get_lines(&path, None));\n+            files.insert(path.strip_prefix(&cwd)\n+                             .unwrap_or(&path)\n+                             .to_str()\n+                             .unwrap()\n+                             .replace('\\\\', \"/\"),\n+                         self.get_lines(&path, None));\n         }\n \n         let mut tested = 0;\n@@ -2002,7 +2012,8 @@ actual:\\n\\\n                                let tmp: Vec<&str> = s.split(\" - \").collect();\n                                if tmp.len() == 2 {\n                                    let path = tmp[0].rsplit(\"test \").next().unwrap();\n-                                   if let Some(ref mut v) = files.get_mut(path) {\n+                                   if let Some(ref mut v) = files.get_mut(\n+                                                                &path.replace('\\\\', \"/\")) {\n                                        tested += 1;\n                                        let mut iter = tmp[1].split(\"(line \");\n                                        iter.next();"}]}