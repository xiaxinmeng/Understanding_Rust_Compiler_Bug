{"sha": "3ece9fa92a186f2e8a1281505b6d1d15666564f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlY2U5ZmE5MmExODZmMmU4YTEyODE1MDViNmQxZDE1NjY2NTY0ZjA=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-09-26T09:48:26Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-09-26T09:48:26Z"}, "message": "Remove dead code", "tree": {"sha": "ba727bec062ec2ce2f0b59dd2c3180f961d12d94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba727bec062ec2ce2f0b59dd2c3180f961d12d94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ece9fa92a186f2e8a1281505b6d1d15666564f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ece9fa92a186f2e8a1281505b6d1d15666564f0", "html_url": "https://github.com/rust-lang/rust/commit/3ece9fa92a186f2e8a1281505b6d1d15666564f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ece9fa92a186f2e8a1281505b6d1d15666564f0/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d68b50efb306f102bb06f15c044facc3c287cd6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d68b50efb306f102bb06f15c044facc3c287cd6c", "html_url": "https://github.com/rust-lang/rust/commit/d68b50efb306f102bb06f15c044facc3c287cd6c"}], "stats": {"total": 17, "additions": 1, "deletions": 16}, "files": [{"sha": "8bd744dbc35412a370c6b75c5a6275c74adf372f", "filename": "src/intrinsics/llvm.rs", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3ece9fa92a186f2e8a1281505b6d1d15666564f0/src%2Fintrinsics%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ece9fa92a186f2e8a1281505b6d1d15666564f0/src%2Fintrinsics%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fllvm.rs?ref=3ece9fa92a186f2e8a1281505b6d1d15666564f0", "patch": "@@ -12,22 +12,7 @@ pub(crate) fn codegen_llvm_intrinsic_call<'tcx>(\n     args: &[mir::Operand<'tcx>],\n     destination: Option<(CPlace<'tcx>, BasicBlock)>,\n ) {\n-    let ret = match destination {\n-        Some((place, _)) => place,\n-        None => {\n-            // Insert non returning intrinsics here\n-            match intrinsic {\n-                \"abort\" => {\n-                    trap_panic(fx, \"Called intrinsic::abort.\");\n-                }\n-                \"unreachable\" => {\n-                    trap_unreachable(fx, \"[corruption] Called intrinsic::unreachable.\");\n-                }\n-                _ => unimplemented!(\"unsupported instrinsic {}\", intrinsic),\n-            }\n-            return;\n-        }\n-    };\n+    let ret = destination.unwrap().0;\n \n     intrinsic_match! {\n         fx, intrinsic, substs, args,"}]}