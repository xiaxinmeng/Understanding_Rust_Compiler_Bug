{"sha": "52fa8fe376de2bf9ad5ae39aba018f9b965e6194", "node_id": "C_kwDOAAsO6NoAKDUyZmE4ZmUzNzZkZTJiZjlhZDVhZTM5YWJhMDE4ZjliOTY1ZTYxOTQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-20T21:12:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-20T21:12:17Z"}, "message": "Rollup merge of #108241 - GuillaumeGomez:fix-reexported-macro-handling, r=notriddle\n\nFix handling of reexported macro in doc hidden items\n\nFixes https://github.com/rust-lang/rust/issues/108231.\nFixes #59368.\n\nr? `@notriddle`", "tree": {"sha": "a0e6a00b6c5c811874a95b0004d4da177dcfa675", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0e6a00b6c5c811874a95b0004d4da177dcfa675"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52fa8fe376de2bf9ad5ae39aba018f9b965e6194", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj8+IxCRBK7hj4Ov3rIwAAW6kIAEXgXaCChnsO6sO0AhMfenif\nCLSmx/JmYih13VVNS56nkzZkZtBTJ9OYScnXTUKrZUPF+watA41Nf0tqzy8Wgk0B\ncxT/86xoC89ukHy5W+7HWke+fiZgM9Fjm9rsACbhS8s/Km5xhbcP157tTO/mKEWz\nggwlVf9uyGBj4DPi116s79JvHR8PYQ+AbkrICyzfADO3hYjQBSlZfEp4ZqxCGny6\n0D/WDPlrOstnL0vVe5gPBpJEV4xHM3w7XqsTNs2IESsWzVg2Zg4Bcxu30h8BDMbr\nxWY9dKONA8cEj8736UKTcA2c/ZTWrPnkDo60ZQZxnE5j24DTEh7h3EJSbM/V1jQ=\n=r7Vp\n-----END PGP SIGNATURE-----\n", "payload": "tree a0e6a00b6c5c811874a95b0004d4da177dcfa675\nparent 897304954922a89f8af8bc4b1c40c2e78a3c62b0\nparent fc6a05c4639cd8d7ddae103f3d4795a70b2de199\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1676927537 +0100\ncommitter GitHub <noreply@github.com> 1676927537 +0100\n\nRollup merge of #108241 - GuillaumeGomez:fix-reexported-macro-handling, r=notriddle\n\nFix handling of reexported macro in doc hidden items\n\nFixes https://github.com/rust-lang/rust/issues/108231.\nFixes #59368.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52fa8fe376de2bf9ad5ae39aba018f9b965e6194", "html_url": "https://github.com/rust-lang/rust/commit/52fa8fe376de2bf9ad5ae39aba018f9b965e6194", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52fa8fe376de2bf9ad5ae39aba018f9b965e6194/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "897304954922a89f8af8bc4b1c40c2e78a3c62b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/897304954922a89f8af8bc4b1c40c2e78a3c62b0", "html_url": "https://github.com/rust-lang/rust/commit/897304954922a89f8af8bc4b1c40c2e78a3c62b0"}, {"sha": "fc6a05c4639cd8d7ddae103f3d4795a70b2de199", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc6a05c4639cd8d7ddae103f3d4795a70b2de199", "html_url": "https://github.com/rust-lang/rust/commit/fc6a05c4639cd8d7ddae103f3d4795a70b2de199"}], "stats": {"total": 63, "additions": 58, "deletions": 5}, "files": [{"sha": "890b3e8d67f7a9e7a8f9378adfb843aec9bb0823", "filename": "src/librustdoc/passes/strip_hidden.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/52fa8fe376de2bf9ad5ae39aba018f9b965e6194/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52fa8fe376de2bf9ad5ae39aba018f9b965e6194/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs?ref=52fa8fe376de2bf9ad5ae39aba018f9b965e6194", "patch": "@@ -62,7 +62,7 @@ impl<'a, 'tcx> Stripper<'a, 'tcx> {\n \n     /// In case `i` is a non-hidden impl block, then we special-case it by changing the value\n     /// of `is_in_hidden_item` to `true` because the impl children inherit its visibility.\n-    fn recurse_in_impl(&mut self, i: Item) -> Item {\n+    fn recurse_in_impl_or_exported_macro(&mut self, i: Item) -> Item {\n         let prev = mem::replace(&mut self.is_in_hidden_item, false);\n         let ret = self.fold_item_recur(i);\n         self.is_in_hidden_item = prev;\n@@ -73,9 +73,17 @@ impl<'a, 'tcx> Stripper<'a, 'tcx> {\n impl<'a, 'tcx> DocFolder for Stripper<'a, 'tcx> {\n     fn fold_item(&mut self, i: Item) -> Option<Item> {\n         let has_doc_hidden = i.attrs.lists(sym::doc).has_word(sym::hidden);\n-        let is_impl = matches!(*i.kind, clean::ImplItem(..));\n+        let is_impl_or_exported_macro = match *i.kind {\n+            clean::ImplItem(..) => true,\n+            // If the macro has the `#[macro_export]` attribute, it means it's accessible at the\n+            // crate level so it should be handled differently.\n+            clean::MacroItem(..) => {\n+                i.attrs.other_attrs.iter().any(|attr| attr.has_name(sym::macro_export))\n+            }\n+            _ => false,\n+        };\n         let mut is_hidden = has_doc_hidden;\n-        if !is_impl {\n+        if !is_impl_or_exported_macro {\n             is_hidden = self.is_in_hidden_item || has_doc_hidden;\n             if !is_hidden && i.inline_stmt_id.is_none() {\n                 // We don't need to check if it's coming from a reexport since the reexport itself was\n@@ -92,8 +100,8 @@ impl<'a, 'tcx> DocFolder for Stripper<'a, 'tcx> {\n             if self.update_retained {\n                 self.retained.insert(i.item_id);\n             }\n-            return Some(if is_impl {\n-                self.recurse_in_impl(i)\n+            return Some(if is_impl_or_exported_macro {\n+                self.recurse_in_impl_or_exported_macro(i)\n             } else {\n                 self.set_is_in_hidden_item_and_fold(false, i)\n             });"}, {"sha": "684f0494fd5e7cb5863789e4f4ee9d2974a1daf6", "filename": "tests/rustdoc/issue-108231.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/52fa8fe376de2bf9ad5ae39aba018f9b965e6194/tests%2Frustdoc%2Fissue-108231.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52fa8fe376de2bf9ad5ae39aba018f9b965e6194/tests%2Frustdoc%2Fissue-108231.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-108231.rs?ref=52fa8fe376de2bf9ad5ae39aba018f9b965e6194", "patch": "@@ -0,0 +1,23 @@\n+// Regression test for <https://github.com/rust-lang/rust/issues/108231>.\n+// Macros with `#[macro_export]` attribute should be visible at the top level\n+// even if they are inside a doc hidden item.\n+\n+#![crate_name = \"foo\"]\n+\n+// @has 'foo/index.html'\n+// @count - '//*[@id=\"main-content\"]//a[@class=\"macro\"]' 1\n+// @has - '//*[@id=\"main-content\"]//a[@class=\"macro\"]' 'foo'\n+\n+#[doc(hidden)]\n+pub mod __internal {\n+    /// This one should be visible.\n+    #[macro_export]\n+    macro_rules! foo {\n+        () => {};\n+    }\n+\n+    /// This one should be hidden.\n+    macro_rules! bar {\n+        () => {};\n+    }\n+}"}, {"sha": "afcfa979616ecba9fef8fee430fb30d175db9d33", "filename": "tests/rustdoc/reexport-hidden-macro.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/52fa8fe376de2bf9ad5ae39aba018f9b965e6194/tests%2Frustdoc%2Freexport-hidden-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52fa8fe376de2bf9ad5ae39aba018f9b965e6194/tests%2Frustdoc%2Freexport-hidden-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Freexport-hidden-macro.rs?ref=52fa8fe376de2bf9ad5ae39aba018f9b965e6194", "patch": "@@ -0,0 +1,22 @@\n+// Ensure that inlined reexport of hidden macros is working as expected.\n+// Part of <https://github.com/rust-lang/rust/issues/59368>.\n+\n+#![crate_name = \"foo\"]\n+\n+// @has 'foo/index.html'\n+// @has - '//*[@id=\"main-content\"]//a[@href=\"macro.Macro2.html\"]' 'Macro2'\n+\n+// @has 'foo/macro.Macro2.html'\n+// @has - '//*[@class=\"docblock\"]' 'Displayed'\n+\n+#[macro_export]\n+#[doc(hidden)]\n+macro_rules! foo {\n+    () => {};\n+}\n+\n+/// not displayed\n+pub use crate::foo as Macro;\n+/// Displayed\n+#[doc(inline)]\n+pub use crate::foo as Macro2;"}]}