{"sha": "1408715ab88cc51ba58bd344209f33e91bdb50d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0MDg3MTVhYjg4Y2M1MWJhNThiZDM0NDIwOWYzM2U5MWJkYjUwZDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-08T05:08:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-08T05:08:08Z"}, "message": "Auto merge of #83866 - jyn514:disambiguator-error, r=camelid\n\nrustdoc: Link to the docs on namespaces when an unknown disambiguator is found\n\ncc https://github.com/rust-lang/rust/issues/83859\n\n`@lopopolo` does this look about like what you expected?\n\nr? `@camelid`", "tree": {"sha": "0309fdd47919b112541515690c17129e8c325845", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0309fdd47919b112541515690c17129e8c325845"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1408715ab88cc51ba58bd344209f33e91bdb50d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1408715ab88cc51ba58bd344209f33e91bdb50d3", "html_url": "https://github.com/rust-lang/rust/commit/1408715ab88cc51ba58bd344209f33e91bdb50d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1408715ab88cc51ba58bd344209f33e91bdb50d3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bbf473151d99e28dd0eb13cdb97a1b0fa6d9a4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bbf473151d99e28dd0eb13cdb97a1b0fa6d9a4c", "html_url": "https://github.com/rust-lang/rust/commit/0bbf473151d99e28dd0eb13cdb97a1b0fa6d9a4c"}, {"sha": "3478f83c0adf65b05bd94310cd822ecefbaef105", "url": "https://api.github.com/repos/rust-lang/rust/commits/3478f83c0adf65b05bd94310cd822ecefbaef105", "html_url": "https://github.com/rust-lang/rust/commit/3478f83c0adf65b05bd94310cd822ecefbaef105"}], "stats": {"total": 60, "additions": 46, "deletions": 14}, "files": [{"sha": "f3c9b987eb02ab82bfdf618b8e6b89f2aa41823a", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1408715ab88cc51ba58bd344209f33e91bdb50d3/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1408715ab88cc51ba58bd344209f33e91bdb50d3/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=1408715ab88cc51ba58bd344209f33e91bdb50d3", "patch": "@@ -16,7 +16,6 @@ use rustc_ast::{self as ast, AttrStyle};\n use rustc_attr::{ConstStability, Deprecation, Stability, StabilityLevel};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::thin_vec::ThinVec;\n-use rustc_feature::UnstableFeatures;\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, DefIndex};\n@@ -228,14 +227,9 @@ impl Item {\n                                     \"../\".repeat(depth)\n                                 }\n                                 Some(&(_, _, ExternalLocation::Remote(ref s))) => s.to_string(),\n-                                Some(&(_, _, ExternalLocation::Unknown)) | None => String::from(\n-                                    // NOTE: intentionally doesn't pass crate name to avoid having\n-                                    // different primitive links between crates\n-                                    if UnstableFeatures::from_environment(None).is_nightly_build() {\n-                                        \"https://doc.rust-lang.org/nightly\"\n-                                    } else {\n-                                        \"https://doc.rust-lang.org\"\n-                                    },\n+                                Some(&(_, _, ExternalLocation::Unknown)) | None => format!(\n+                                    \"https://doc.rust-lang.org/{}\",\n+                                    crate::doc_rust_lang_org_channel(),\n                                 ),\n                             };\n                             // This is a primitive so the url is done \"by hand\"."}, {"sha": "1e79bd0912884d3b922f0dc1891552f503c5c01e", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1408715ab88cc51ba58bd344209f33e91bdb50d3/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1408715ab88cc51ba58bd344209f33e91bdb50d3/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=1408715ab88cc51ba58bd344209f33e91bdb50d3", "patch": "@@ -521,3 +521,14 @@ crate fn has_doc_flag(attrs: ty::Attributes<'_>, flag: Symbol) -> bool {\n             && attr.meta_item_list().map_or(false, |l| rustc_attr::list_contains_name(&l, flag))\n     })\n }\n+\n+/// Return a channel suitable for using in a `doc.rust-lang.org/{channel}` format string.\n+crate fn doc_rust_lang_org_channel() -> &'static str {\n+    match env!(\"CFG_RELEASE_CHANNEL\") {\n+        \"stable\" => env!(\"CFG_RELEASE_NUM\"),\n+        \"beta\" => \"beta\",\n+        \"nightly\" | \"dev\" => \"nightly\",\n+        // custom build of rustdoc maybe? link to the stable docs just in case\n+        _ => \"\",\n+    }\n+}"}, {"sha": "c9fdaa50534dda942198dedce211efa4e618d9f2", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1408715ab88cc51ba58bd344209f33e91bdb50d3/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1408715ab88cc51ba58bd344209f33e91bdb50d3/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=1408715ab88cc51ba58bd344209f33e91bdb50d3", "patch": "@@ -498,15 +498,18 @@ crate fn run_global_ctxt(\n     let mut krate = tcx.sess.time(\"clean_crate\", || clean::krate(&mut ctxt));\n \n     if krate.module.doc_value().map(|d| d.is_empty()).unwrap_or(true) {\n-        let help = \"The following guide may be of use:\\n\\\n-                https://doc.rust-lang.org/nightly/rustdoc/how-to-write-documentation.html\";\n+        let help = format!(\n+            \"The following guide may be of use:\\n\\\n+            https://doc.rust-lang.org/{}/rustdoc/how-to-write-documentation.html\",\n+            crate::doc_rust_lang_org_channel(),\n+        );\n         tcx.struct_lint_node(\n             crate::lint::MISSING_CRATE_LEVEL_DOCS,\n             DocContext::as_local_hir_id(tcx, krate.module.def_id).unwrap(),\n             |lint| {\n                 let mut diag =\n                     lint.build(\"no documentation found for this crate's top-level module\");\n-                diag.help(help);\n+                diag.help(&help);\n                 diag.emit();\n             },\n         );"}, {"sha": "b9c4bbdceb27643206086cda1a9f10d1188208e9", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1408715ab88cc51ba58bd344209f33e91bdb50d3/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1408715ab88cc51ba58bd344209f33e91bdb50d3/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=1408715ab88cc51ba58bd344209f33e91bdb50d3", "patch": "@@ -82,6 +82,8 @@ use rustc_session::config::{make_crate_type_option, ErrorOutputType, RustcOptGro\n use rustc_session::getopts;\n use rustc_session::{early_error, early_warn};\n \n+use crate::clean::utils::doc_rust_lang_org_channel;\n+\n /// A macro to create a FxHashMap.\n ///\n /// Example:\n@@ -597,7 +599,10 @@ fn usage(argv0: &str) {\n     }\n     println!(\"{}\", options.usage(&format!(\"{} [options] <input>\", argv0)));\n     println!(\"    @path               Read newline separated options from `path`\\n\");\n-    println!(\"More information available at https://doc.rust-lang.org/rustdoc/what-is-rustdoc.html\")\n+    println!(\n+        \"More information available at https://doc.rust-lang.org/{}/rustdoc/what-is-rustdoc.html\",\n+        doc_rust_lang_org_channel()\n+    );\n }\n \n /// A result type used by several functions under `main()`."}, {"sha": "4bc7544e33d1e98060d31a80fd28100740e18370", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1408715ab88cc51ba58bd344209f33e91bdb50d3/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1408715ab88cc51ba58bd344209f33e91bdb50d3/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=1408715ab88cc51ba58bd344209f33e91bdb50d3", "patch": "@@ -1924,7 +1924,14 @@ fn disambiguator_error(\n     msg: &str,\n ) {\n     diag_info.link_range = disambiguator_range;\n-    report_diagnostic(cx.tcx, BROKEN_INTRA_DOC_LINKS, msg, &diag_info, |_diag, _sp| {});\n+    report_diagnostic(cx.tcx, BROKEN_INTRA_DOC_LINKS, msg, &diag_info, |diag, _sp| {\n+        let msg = format!(\n+            \"see https://doc.rust-lang.org/{}/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators \\\n+             for more info about disambiguators\",\n+            crate::doc_rust_lang_org_channel(),\n+        );\n+        diag.note(&msg);\n+    });\n }\n \n /// Report an ambiguity error, where there were multiple possible resolutions."}, {"sha": "f287f87408c48f79787c705e4733fa403275392d", "filename": "src/test/rustdoc-ui/intra-doc/email-address-localhost.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1408715ab88cc51ba58bd344209f33e91bdb50d3/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Femail-address-localhost.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1408715ab88cc51ba58bd344209f33e91bdb50d3/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Femail-address-localhost.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Femail-address-localhost.stderr?ref=1408715ab88cc51ba58bd344209f33e91bdb50d3", "patch": "@@ -10,6 +10,7 @@ note: the lint level is defined here\n LL | #![deny(warnings)]\n    |         ^^^^^^^^\n    = note: `#[deny(rustdoc::broken_intra_doc_links)]` implied by `#[deny(warnings)]`\n+   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: aborting due to previous error\n "}, {"sha": "94d6d4616518ea7599ef5f7151a2025975a3e0fd", "filename": "src/test/rustdoc-ui/intra-doc/unknown-disambiguator.stderr", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1408715ab88cc51ba58bd344209f33e91bdb50d3/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funknown-disambiguator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1408715ab88cc51ba58bd344209f33e91bdb50d3/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funknown-disambiguator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funknown-disambiguator.stderr?ref=1408715ab88cc51ba58bd344209f33e91bdb50d3", "patch": "@@ -10,36 +10,47 @@ note: the lint level is defined here\n LL | #![deny(warnings)]\n    |         ^^^^^^^^\n    = note: `#[deny(rustdoc::broken_intra_doc_links)]` implied by `#[deny(warnings)]`\n+   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: unknown disambiguator `bar`\n   --> $DIR/unknown-disambiguator.rs:3:35\n    |\n LL | //! Linking to [foo@banana] and [`bar@banana!()`].\n    |                                   ^^^\n+   |\n+   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: unknown disambiguator `foo`\n   --> $DIR/unknown-disambiguator.rs:9:34\n    |\n LL | //! And with weird backticks: [``foo@hello``] [foo`@`hello].\n    |                                  ^^^\n+   |\n+   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: unknown disambiguator `foo`\n   --> $DIR/unknown-disambiguator.rs:9:48\n    |\n LL | //! And with weird backticks: [``foo@hello``] [foo`@`hello].\n    |                                                ^^^\n+   |\n+   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: unknown disambiguator ``\n   --> $DIR/unknown-disambiguator.rs:6:31\n    |\n LL | //! And to [no disambiguator](@nectarine) and [another](@apricot!()).\n    |                               ^\n+   |\n+   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: unknown disambiguator ``\n   --> $DIR/unknown-disambiguator.rs:6:57\n    |\n LL | //! And to [no disambiguator](@nectarine) and [another](@apricot!()).\n    |                                                         ^\n+   |\n+   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: aborting due to 6 previous errors\n "}]}