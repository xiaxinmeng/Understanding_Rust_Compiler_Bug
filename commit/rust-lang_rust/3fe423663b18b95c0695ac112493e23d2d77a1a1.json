{"sha": "3fe423663b18b95c0695ac112493e23d2d77a1a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZTQyMzY2M2IxOGI5NWMwNjk1YWMxMTI0OTNlMjNkMmQ3N2ExYTE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-12-30T09:15:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-30T09:15:03Z"}, "message": "Rollup merge of #79812 - Aaron1011:lint-item-trailing-semi, r=oli-obk\n\nLint on redundant trailing semicolon after item\n\nWe now lint on code like this:\n\n```rust\nfn main() {\n    fn foo() {};\n    struct Bar {};\n}\n```\n\nPreviously, this caused warnings in Cargo, so it was disabled.", "tree": {"sha": "87a5b8e9ab995bbf8fb4fdf2ef92d2980333fb61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87a5b8e9ab995bbf8fb4fdf2ef92d2980333fb61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fe423663b18b95c0695ac112493e23d2d77a1a1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf7EUXCRBK7hj4Ov3rIwAAdHIIAI87vAkkudHTdubhzLwA2N37\nGw8pRGJ50aaK55Y4BaHK3M8sGKnCjnYInlRHUVRflMKjHeDAd8h0SJDyt5w75h5w\n3TyCLy3KWChD/srcHNa/IvIB9ciHub8nNO36s8U7GwbyjOn6AhrKQSYYLNR88VCy\noyz7N8Y5a9SmQYyMwFPIdqYLMRTY+YWTeBZgZCT/rhuqkkRWS4pY7B8+CRIAXwuz\nFf122ErhayfSsbFjqhsZKdSEouXK6alUOgoLVE19EvHV+SxqO60QcJGXYz/M1ioY\nRYFLD6d8hGkexLSTHn9dwUZfSVOXyuhXiD67UJS8bJMDdaVhBmM7ijBw3dFPSMc=\n=E01Y\n-----END PGP SIGNATURE-----\n", "payload": "tree 87a5b8e9ab995bbf8fb4fdf2ef92d2980333fb61\nparent f3eead1c69d5ce9cb128a9068250581ad28103f0\nparent 6bef37c8417c0357cf6ea43aba55c7ab376b2d70\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1609319703 +0900\ncommitter GitHub <noreply@github.com> 1609319703 +0900\n\nRollup merge of #79812 - Aaron1011:lint-item-trailing-semi, r=oli-obk\n\nLint on redundant trailing semicolon after item\n\nWe now lint on code like this:\n\n```rust\nfn main() {\n    fn foo() {};\n    struct Bar {};\n}\n```\n\nPreviously, this caused warnings in Cargo, so it was disabled.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fe423663b18b95c0695ac112493e23d2d77a1a1", "html_url": "https://github.com/rust-lang/rust/commit/3fe423663b18b95c0695ac112493e23d2d77a1a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fe423663b18b95c0695ac112493e23d2d77a1a1/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3eead1c69d5ce9cb128a9068250581ad28103f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3eead1c69d5ce9cb128a9068250581ad28103f0", "html_url": "https://github.com/rust-lang/rust/commit/f3eead1c69d5ce9cb128a9068250581ad28103f0"}, {"sha": "6bef37c8417c0357cf6ea43aba55c7ab376b2d70", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bef37c8417c0357cf6ea43aba55c7ab376b2d70", "html_url": "https://github.com/rust-lang/rust/commit/6bef37c8417c0357cf6ea43aba55c7ab376b2d70"}], "stats": {"total": 62, "additions": 32, "deletions": 30}, "files": [{"sha": "0fe6564880f010b8e46de5a64a3c589753a39f34", "filename": "compiler/rustc_lint/src/redundant_semicolon.rs", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3fe423663b18b95c0695ac112493e23d2d77a1a1/compiler%2Frustc_lint%2Fsrc%2Fredundant_semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fe423663b18b95c0695ac112493e23d2d77a1a1/compiler%2Frustc_lint%2Fsrc%2Fredundant_semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fredundant_semicolon.rs?ref=3fe423663b18b95c0695ac112493e23d2d77a1a1", "patch": "@@ -28,40 +28,26 @@ declare_lint_pass!(RedundantSemicolons => [REDUNDANT_SEMICOLONS]);\n \n impl EarlyLintPass for RedundantSemicolons {\n     fn check_block(&mut self, cx: &EarlyContext<'_>, block: &Block) {\n-        let mut after_item_stmt = false;\n         let mut seq = None;\n         for stmt in block.stmts.iter() {\n             match (&stmt.kind, &mut seq) {\n                 (StmtKind::Empty, None) => seq = Some((stmt.span, false)),\n                 (StmtKind::Empty, Some(seq)) => *seq = (seq.0.to(stmt.span), true),\n-                (_, seq) => {\n-                    maybe_lint_redundant_semis(cx, seq, after_item_stmt);\n-                    after_item_stmt = matches!(stmt.kind, StmtKind::Item(_));\n-                }\n+                (_, seq) => maybe_lint_redundant_semis(cx, seq),\n             }\n         }\n-        maybe_lint_redundant_semis(cx, &mut seq, after_item_stmt);\n+        maybe_lint_redundant_semis(cx, &mut seq);\n     }\n }\n \n-fn maybe_lint_redundant_semis(\n-    cx: &EarlyContext<'_>,\n-    seq: &mut Option<(Span, bool)>,\n-    after_item_stmt: bool,\n-) {\n+fn maybe_lint_redundant_semis(cx: &EarlyContext<'_>, seq: &mut Option<(Span, bool)>) {\n     if let Some((span, multiple)) = seq.take() {\n         // FIXME: Find a better way of ignoring the trailing\n         // semicolon from macro expansion\n         if span == rustc_span::DUMMY_SP {\n             return;\n         }\n \n-        // FIXME: Lint on semicolons after item statements\n-        // once doing so doesn't break bootstrapping\n-        if after_item_stmt {\n-            return;\n-        }\n-\n         cx.struct_span_lint(REDUNDANT_SEMICOLONS, span, |lint| {\n             let (msg, rem) = if multiple {\n                 (\"unnecessary trailing semicolons\", \"remove these semicolons\")"}, {"sha": "02dd42ce0c14df4691250a86f74180be66dd6ae5", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3fe423663b18b95c0695ac112493e23d2d77a1a1/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fe423663b18b95c0695ac112493e23d2d77a1a1/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=3fe423663b18b95c0695ac112493e23d2d77a1a1", "patch": "@@ -558,12 +558,12 @@ crate fn make_test(\n                     \"fn main() {{ {}fn {}() -> Result<(), impl core::fmt::Debug> {{\\n\",\n                     inner_attr, inner_fn_name\n                 ),\n-                format!(\"\\n}}; {}().unwrap() }}\", inner_fn_name),\n+                format!(\"\\n}} {}().unwrap() }}\", inner_fn_name),\n             )\n         } else if test_id.is_some() {\n             (\n                 format!(\"fn main() {{ {}fn {}() {{\\n\", inner_attr, inner_fn_name),\n-                format!(\"\\n}}; {}() }}\", inner_fn_name),\n+                format!(\"\\n}} {}() }}\", inner_fn_name),\n             )\n         } else {\n             (\"fn main() {\\n\".into(), \"\\n}\".into())"}, {"sha": "465b2b1d69b34551d0b0945176c89afd36e924bc", "filename": "src/librustdoc/doctest/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3fe423663b18b95c0695ac112493e23d2d77a1a1/src%2Flibrustdoc%2Fdoctest%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fe423663b18b95c0695ac112493e23d2d77a1a1/src%2Flibrustdoc%2Fdoctest%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest%2Ftests.rs?ref=3fe423663b18b95c0695ac112493e23d2d77a1a1", "patch": "@@ -292,7 +292,7 @@ use std::io;\n let mut input = String::new();\n io::stdin().read_line(&mut input)?;\n Ok::<(), io:Error>(())\n-}; _inner().unwrap() }\"\n+} _inner().unwrap() }\"\n         .to_string();\n     let (output, len, _) = make_test(input, None, false, &opts, DEFAULT_EDITION, None);\n     assert_eq!((output, len), (expected, 2));\n@@ -306,7 +306,7 @@ fn make_test_named_wrapper() {\n     let expected = \"#![allow(unused)]\n fn main() { #[allow(non_snake_case)] fn _doctest_main__some_unique_name() {\n assert_eq!(2+2, 4);\n-}; _doctest_main__some_unique_name() }\"\n+} _doctest_main__some_unique_name() }\"\n         .to_string();\n     let (output, len, _) =\n         make_test(input, None, false, &opts, DEFAULT_EDITION, Some(\"_some_unique_name\"));"}, {"sha": "9c206dfce591219d6bca9f6ca7c48abf9a23f21e", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fe423663b18b95c0695ac112493e23d2d77a1a1/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fe423663b18b95c0695ac112493e23d2d77a1a1/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=3fe423663b18b95c0695ac112493e23d2d77a1a1", "patch": "@@ -1027,7 +1027,7 @@ fn markdown_summary_with_limit(md: &str, length_limit: usize) -> (String, bool)\n     fn push(s: &mut String, text_length: &mut usize, text: &str) {\n         s.push_str(text);\n         *text_length += text.len();\n-    };\n+    }\n \n     'outer: for event in Parser::new_ext(md, summary_opts()) {\n         match &event {"}, {"sha": "8c79630b7fd2cb5fb9776ae49f8be6843b63e894", "filename": "src/test/ui/lint/redundant-semicolon/item-stmt-semi.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3fe423663b18b95c0695ac112493e23d2d77a1a1/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fitem-stmt-semi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fe423663b18b95c0695ac112493e23d2d77a1a1/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fitem-stmt-semi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fitem-stmt-semi.rs?ref=3fe423663b18b95c0695ac112493e23d2d77a1a1", "patch": "@@ -1,10 +1,6 @@\n-// check-pass\n-// This test should stop compiling\n-// we decide to enable this lint for item statements.\n-\n #![deny(redundant_semicolons)]\n \n fn main() {\n-    fn inner() {};\n-    struct Bar {};\n+    fn inner() {}; //~ ERROR unnecessary\n+    struct Bar {}; //~ ERROR unnecessary\n }"}, {"sha": "451b152cbe5a05f4318e8f3508a7425dc3d9601f", "filename": "src/test/ui/lint/redundant-semicolon/item-stmt-semi.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3fe423663b18b95c0695ac112493e23d2d77a1a1/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fitem-stmt-semi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3fe423663b18b95c0695ac112493e23d2d77a1a1/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fitem-stmt-semi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fitem-stmt-semi.stderr?ref=3fe423663b18b95c0695ac112493e23d2d77a1a1", "patch": "@@ -0,0 +1,20 @@\n+error: unnecessary trailing semicolon\n+  --> $DIR/item-stmt-semi.rs:4:18\n+   |\n+LL |     fn inner() {};\n+   |                  ^ help: remove this semicolon\n+   |\n+note: the lint level is defined here\n+  --> $DIR/item-stmt-semi.rs:1:9\n+   |\n+LL | #![deny(redundant_semicolons)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: unnecessary trailing semicolon\n+  --> $DIR/item-stmt-semi.rs:5:18\n+   |\n+LL |     struct Bar {};\n+   |                  ^ help: remove this semicolon\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "84981a52597327992a772f61ceff6ea23dcd59be", "filename": "src/tools/clippy/tests/ui/match_expr_like_matches_macro.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fe423663b18b95c0695ac112493e23d2d77a1a1/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmatch_expr_like_matches_macro.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/3fe423663b18b95c0695ac112493e23d2d77a1a1/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmatch_expr_like_matches_macro.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmatch_expr_like_matches_macro.fixed?ref=3fe423663b18b95c0695ac112493e23d2d77a1a1", "patch": "@@ -39,7 +39,7 @@ fn main() {\n         B(i32),\n         C,\n         D,\n-    };\n+    }\n     let x = E::A(2);\n     {\n         // lint"}, {"sha": "94c7c3cadacf749799ba4a32510e28466e560001", "filename": "src/tools/clippy/tests/ui/match_expr_like_matches_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fe423663b18b95c0695ac112493e23d2d77a1a1/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmatch_expr_like_matches_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fe423663b18b95c0695ac112493e23d2d77a1a1/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmatch_expr_like_matches_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmatch_expr_like_matches_macro.rs?ref=3fe423663b18b95c0695ac112493e23d2d77a1a1", "patch": "@@ -51,7 +51,7 @@ fn main() {\n         B(i32),\n         C,\n         D,\n-    };\n+    }\n     let x = E::A(2);\n     {\n         // lint"}]}