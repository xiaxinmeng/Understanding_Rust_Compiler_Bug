{"sha": "ea7b20d8f279ea8c63b9a4b8e9129fce0e3c2b5d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhN2IyMGQ4ZjI3OWVhOGM2M2I5YTRiOGU5MTI5ZmNlMGUzYzJiNWQ=", "commit": {"author": {"name": "comex", "email": "comexk@gmail.com", "date": "2014-01-28T05:05:33Z"}, "committer": {"name": "comex", "email": "comexk@gmail.com", "date": "2014-01-28T05:05:33Z"}, "message": "Add appropriate LLVM module flags for debug info.\n\nSet \"Dwarf Version\" to 2 on OS X to avoid toolchain incompatibility, and\nset \"Debug Info Version\" to prevent debug info from being stripped from\nbitcode.\n\nFixes #11352.", "tree": {"sha": "4da18db71394fcd2a3e2092e8f8282594083e429", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4da18db71394fcd2a3e2092e8f8282594083e429"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea7b20d8f279ea8c63b9a4b8e9129fce0e3c2b5d", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea7b20d8f279ea8c63b9a4b8e9129fce0e3c2b5d", "html_url": "https://github.com/rust-lang/rust/commit/ea7b20d8f279ea8c63b9a4b8e9129fce0e3c2b5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea7b20d8f279ea8c63b9a4b8e9129fce0e3c2b5d/comments", "author": {"login": "comex", "id": 47517, "node_id": "MDQ6VXNlcjQ3NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/47517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comex", "html_url": "https://github.com/comex", "followers_url": "https://api.github.com/users/comex/followers", "following_url": "https://api.github.com/users/comex/following{/other_user}", "gists_url": "https://api.github.com/users/comex/gists{/gist_id}", "starred_url": "https://api.github.com/users/comex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comex/subscriptions", "organizations_url": "https://api.github.com/users/comex/orgs", "repos_url": "https://api.github.com/users/comex/repos", "events_url": "https://api.github.com/users/comex/events{/privacy}", "received_events_url": "https://api.github.com/users/comex/received_events", "type": "User", "site_admin": false}, "committer": {"login": "comex", "id": 47517, "node_id": "MDQ6VXNlcjQ3NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/47517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comex", "html_url": "https://github.com/comex", "followers_url": "https://api.github.com/users/comex/followers", "following_url": "https://api.github.com/users/comex/following{/other_user}", "gists_url": "https://api.github.com/users/comex/gists{/gist_id}", "starred_url": "https://api.github.com/users/comex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comex/subscriptions", "organizations_url": "https://api.github.com/users/comex/orgs", "repos_url": "https://api.github.com/users/comex/repos", "events_url": "https://api.github.com/users/comex/events{/privacy}", "received_events_url": "https://api.github.com/users/comex/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "760ddb3081acb038ff3c6bcc918bfa293dfc5acd", "url": "https://api.github.com/repos/rust-lang/rust/commits/760ddb3081acb038ff3c6bcc918bfa293dfc5acd", "html_url": "https://github.com/rust-lang/rust/commit/760ddb3081acb038ff3c6bcc918bfa293dfc5acd"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "a9c1df71d079c8d3acff09a64e4d8b295fcd7021", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ea7b20d8f279ea8c63b9a4b8e9129fce0e3c2b5d/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea7b20d8f279ea8c63b9a4b8e9129fce0e3c2b5d/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=ea7b20d8f279ea8c63b9a4b8e9129fce0e3c2b5d", "patch": "@@ -1493,6 +1493,11 @@ pub mod llvm {\n                              Dialect: c_uint)\n                              -> ValueRef;\n \n+        pub static LLVMRustDebugMetadataVersion: u32;\n+\n+        pub fn LLVMRustAddModuleFlag(M: ModuleRef,\n+                                     name: *c_char,\n+                                     value: u32);\n \n         pub fn LLVMDIBuilderCreate(M: ModuleRef) -> DIBuilderRef;\n "}, {"sha": "42f069e270530a4d1ec9d9b4e778d4b156fa2586", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ea7b20d8f279ea8c63b9a4b8e9129fce0e3c2b5d/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea7b20d8f279ea8c63b9a4b8e9129fce0e3c2b5d/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=ea7b20d8f279ea8c63b9a4b8e9129fce0e3c2b5d", "patch": "@@ -149,7 +149,7 @@ use std::ptr;\n use std::sync::atomics;\n use std::vec;\n use syntax::codemap::{Span, Pos};\n-use syntax::{ast, codemap, ast_util, ast_map, opt_vec};\n+use syntax::{abi, ast, codemap, ast_util, ast_map, opt_vec};\n use syntax::parse::token;\n use syntax::parse::token::special_idents;\n \n@@ -263,6 +263,20 @@ pub fn finalize(cx: @CrateContext) {\n     unsafe {\n         llvm::LLVMDIBuilderFinalize(DIB(cx));\n         llvm::LLVMDIBuilderDispose(DIB(cx));\n+        // Debuginfo generation in LLVM by default uses a higher\n+        // version of dwarf than OS X currently understands. We can\n+        // instruct LLVM to emit an older version of dwarf, however,\n+        // for OS X to understand. For more info see #11352\n+        // This can be overridden using --llvm-opts -dwarf-version,N.\n+        if cx.sess.targ_cfg.os == abi::OsMacos {\n+            \"Dwarf Version\".with_c_str(\n+                |s| llvm::LLVMRustAddModuleFlag(cx.llmod, s, 2));\n+        }\n+\n+        // Prevent bitcode readers from deleting the debug info.\n+        \"Debug Info Version\".with_c_str(\n+            |s| llvm::LLVMRustAddModuleFlag(cx.llmod, s,\n+                                            llvm::LLVMRustDebugMetadataVersion));\n     };\n }\n "}, {"sha": "2107f7c39a20d3fca843876e9de94a96ffa6f7e7", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ea7b20d8f279ea8c63b9a4b8e9129fce0e3c2b5d/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/ea7b20d8f279ea8c63b9a4b8e9129fce0e3c2b5d/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=ea7b20d8f279ea8c63b9a4b8e9129fce0e3c2b5d", "patch": "@@ -156,6 +156,14 @@ DIT unwrapDI(LLVMValueRef ref) {\n     return DIT(ref ? unwrap<MDNode>(ref) : NULL);\n }\n \n+extern \"C\" const uint32_t LLVMRustDebugMetadataVersion = DEBUG_METADATA_VERSION;\n+\n+extern \"C\" void LLVMRustAddModuleFlag(LLVMModuleRef M,\n+                                      const char *name,\n+                                      uint32_t value) {\n+    unwrap(M)->addModuleFlag(Module::Warning, name, value);\n+}\n+\n extern \"C\" DIBuilderRef LLVMDIBuilderCreate(LLVMModuleRef M) {\n     return new DIBuilder(*unwrap(M));\n }"}]}