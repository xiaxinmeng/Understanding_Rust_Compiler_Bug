{"sha": "8906040445a6700be2aaf40ec09937b84dea5d6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MDYwNDA0NDVhNjcwMGJlMmFhZjQwZWMwOTkzN2I4NGRlYTVkNmE=", "commit": {"author": {"name": "Piti the little Light", "email": "djhlinacz@gmail.com", "date": "2020-10-01T16:04:05Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2020-11-03T15:44:21Z"}, "message": "Improvements from PR feedback", "tree": {"sha": "ef4ed59c81c082bec47497f626bf15ae185dd3c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef4ed59c81c082bec47497f626bf15ae185dd3c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8906040445a6700be2aaf40ec09937b84dea5d6a", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE2r96VLqbr4DI+7ylr8A1RIkIeHcFAl+hetcACgkQr8A1RIkI\neHcdYA/+NDidxyZ0tq9Pak/uFAgG5tNmeSOx5swb7ya5DSlwsVZLmKZBN0rP2fkE\nTvlxUa/IcILn3YDn8NUYL13Gga7HU9mCgWHcY/nwOI2ZcjStfx3854VMqBwEnFwq\nxZzz6NT7KZwKN39ORTY1dMr6oYFqIRBjpNgezEESdv8t8smMXkc1MHDO289ULM3l\nX6xKxI0rpREp8u3Q3DsyGH7tGw34gl4rraO/ZBOWB+ZDjAKaWQZDmTWXJQFf1++s\nBr4/VqI1A+wJk54aHh7CB6qtHJ/ef7ySDbrkytaP7EKQtpDSXiw8Gg4kCpR8ImqM\n+Td/rowJykC8YPPMCzwKosYIKwRqGdpuigYD8bWkuZmxkY7ni1hPAv2FSvr5ZTRy\niVUU421/0Mif0RLY3aahDmMVq1aa32W3KAnQDB4QpMGpzTE0owuPVYwicSH/bZHo\nPvX+HA/4/6bJUXF+9U2FRVpCAymGv0CPeXGf1x5FY7SHTp3kY1GFbULPPo/LEIuV\nXYPDQqrHVkLSMT1JDPLR1BtRMKH0dc5Ak8LDd4db1QYKEhRapbcKG22UwcgNhcuS\nkVw/hScbvSNIvmQpMUq/5ItHZa9vtvJBYyK7g7zB7j9VGA97El/bCKGboXxfIzPU\nSsXX1t28Um8dwPOSzSXA38+VggA3A1XTrtoFDd3K4Pr+qNM1C04=\n=CSu9\n-----END PGP SIGNATURE-----", "payload": "tree ef4ed59c81c082bec47497f626bf15ae185dd3c0\nparent a85670652a37238db7328b5eaab7cb7794fa40c8\nauthor Piti the little Light <djhlinacz@gmail.com> 1601568245 +0200\ncommitter flip1995 <philipp.krones@embecosm.com> 1604418261 +0100\n\nImprovements from PR feedback\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8906040445a6700be2aaf40ec09937b84dea5d6a", "html_url": "https://github.com/rust-lang/rust/commit/8906040445a6700be2aaf40ec09937b84dea5d6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8906040445a6700be2aaf40ec09937b84dea5d6a/comments", "author": {"login": "pitiK3U", "id": 33703129, "node_id": "MDQ6VXNlcjMzNzAzMTI5", "avatar_url": "https://avatars.githubusercontent.com/u/33703129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitiK3U", "html_url": "https://github.com/pitiK3U", "followers_url": "https://api.github.com/users/pitiK3U/followers", "following_url": "https://api.github.com/users/pitiK3U/following{/other_user}", "gists_url": "https://api.github.com/users/pitiK3U/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitiK3U/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitiK3U/subscriptions", "organizations_url": "https://api.github.com/users/pitiK3U/orgs", "repos_url": "https://api.github.com/users/pitiK3U/repos", "events_url": "https://api.github.com/users/pitiK3U/events{/privacy}", "received_events_url": "https://api.github.com/users/pitiK3U/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a85670652a37238db7328b5eaab7cb7794fa40c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/a85670652a37238db7328b5eaab7cb7794fa40c8", "html_url": "https://github.com/rust-lang/rust/commit/a85670652a37238db7328b5eaab7cb7794fa40c8"}], "stats": {"total": 41, "additions": 18, "deletions": 23}, "files": [{"sha": "70be8909c439e641922a1003ad3f7f8a80984c0f", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8906040445a6700be2aaf40ec09937b84dea5d6a/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8906040445a6700be2aaf40ec09937b84dea5d6a/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=8906040445a6700be2aaf40ec09937b84dea5d6a", "patch": "@@ -1370,10 +1370,11 @@ declare_clippy_lint! {\n }\n \n declare_clippy_lint! {\n-    /// **What it does:** Checks for `from_iter()` function calls that implements `FromIterator`\n+    /// **What it does:** Checks for `from_iter()` function calls on types that implement the `FromIterator`\n     /// trait.\n     ///\n-    /// **Why is this bad?** Makes code less readable especially in method chaining.\n+    /// **Why is this bad?** It is recommended style to use collect. See\n+    /// [FromIterator documentation](https://doc.rust-lang.org/std/iter/trait.FromIterator.html)\n     ///\n     /// **Known problems:** None.\n     ///\n@@ -3873,18 +3874,19 @@ fn lint_filetype_is_file(cx: &LateContext<'_>, expr: &hir::Expr<'_>, args: &[hir\n \n fn lint_from_iter(cx: &LateContext<'_>, expr: &hir::Expr<'_>, args: &[hir::Expr<'_>]) {\n     let ty = cx.typeck_results().expr_ty(expr);\n-    let id = get_trait_def_id(cx, &paths::FROM_ITERATOR_TRAIT).unwrap();\n+    let id = get_trait_def_id(cx, &paths::FROM_ITERATOR).unwrap();\n \n     if implements_trait(cx, ty, id, &[]) {\n         // `expr` implements `FromIterator` trait\n         let iter_expr = snippet(cx, args[0].span, \"..\");\n-        span_lint_and_help(\n+        span_lint_and_sugg(\n             cx,\n             FROM_ITER_INSTEAD_OF_COLLECT,\n             expr.span,\n             \"use `.collect()` instead of `::from_iter()`\",\n-            None,\n-            &format!(\"consider using `{}.collect()`\", iter_expr),\n+            \"consider using\",\n+            format!(\"`{}.collect()`\", iter_expr),\n+            Applicability::MaybeIncorrect\n         );\n     }\n }"}, {"sha": "8afbd8930b639b44ed863b2f9471ee070791c96b", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8906040445a6700be2aaf40ec09937b84dea5d6a/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8906040445a6700be2aaf40ec09937b84dea5d6a/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=8906040445a6700be2aaf40ec09937b84dea5d6a", "patch": "@@ -44,7 +44,7 @@ pub const FN: [&str; 3] = [\"core\", \"ops\", \"Fn\"];\n pub const FN_MUT: [&str; 3] = [\"core\", \"ops\", \"FnMut\"];\n pub const FN_ONCE: [&str; 3] = [\"core\", \"ops\", \"FnOnce\"];\n pub const FROM_FROM: [&str; 4] = [\"core\", \"convert\", \"From\", \"from\"];\n-pub const FROM_ITERATOR_TRAIT: [&str; 3] = [\"std\", \"iter\", \"FromIterator\"];\n+pub const FROM_ITERATOR: [&str; 3] = [\"std\", \"iter\", \"FromIterator\"];\n pub const FROM_TRAIT: [&str; 3] = [\"core\", \"convert\", \"From\"];\n pub const FUTURE_FROM_GENERATOR: [&str; 3] = [\"core\", \"future\", \"from_generator\"];\n pub const HASH: [&str; 3] = [\"core\", \"hash\", \"Hash\"];"}, {"sha": "9071be33c647be2a6506d6827082b6244b9212d0", "filename": "tests/ui/from_iter_instead_of_collect.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8906040445a6700be2aaf40ec09937b84dea5d6a/tests%2Fui%2Ffrom_iter_instead_of_collect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8906040445a6700be2aaf40ec09937b84dea5d6a/tests%2Fui%2Ffrom_iter_instead_of_collect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffrom_iter_instead_of_collect.rs?ref=8906040445a6700be2aaf40ec09937b84dea5d6a", "patch": "@@ -4,12 +4,8 @@ use std::collections::HashMap;\n use std::iter::FromIterator;\n \n fn main() {\n-    {\n-        let iter_expr = std::iter::repeat(5).take(5);\n+    let iter_expr = std::iter::repeat(5).take(5);\n \n-        Vec::from_iter(iter_expr);\n-        HashMap::<usize, &i8>::from_iter(vec![5, 5, 5, 5].iter().enumerate());\n-        //let v: Vec<i32> = iter_expr.collect();\n-        let a: Vec<i32> = Vec::new();\n-    }\n+    Vec::from_iter(iter_expr);\n+    HashMap::<usize, &i8>::from_iter(vec![5, 5, 5, 5].iter().enumerate());\n }"}, {"sha": "1bc787aa795af606323519f988a5c25f1dd3ce71", "filename": "tests/ui/from_iter_instead_of_collect.stderr", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8906040445a6700be2aaf40ec09937b84dea5d6a/tests%2Fui%2Ffrom_iter_instead_of_collect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8906040445a6700be2aaf40ec09937b84dea5d6a/tests%2Fui%2Ffrom_iter_instead_of_collect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffrom_iter_instead_of_collect.stderr?ref=8906040445a6700be2aaf40ec09937b84dea5d6a", "patch": "@@ -1,19 +1,16 @@\n error: use `.collect()` instead of `::from_iter()`\n-  --> $DIR/from_iter_instead_of_collect.rs:10:9\n+  --> $DIR/from_iter_instead_of_collect.rs:9:5\n    |\n-LL |         Vec::from_iter(iter_expr);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     Vec::from_iter(iter_expr);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: ``iter_expr.collect()``\n    |\n    = note: `-D clippy::from-iter-instead-of-collect` implied by `-D warnings`\n-   = help: consider using `iter_expr.collect()`\n \n error: use `.collect()` instead of `::from_iter()`\n-  --> $DIR/from_iter_instead_of_collect.rs:11:9\n+  --> $DIR/from_iter_instead_of_collect.rs:10:5\n    |\n-LL |         HashMap::<usize, &i8>::from_iter(vec![5, 5, 5, 5].iter().enumerate());\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using `vec![5, 5, 5, 5].iter().enumerate().collect()`\n+LL |     HashMap::<usize, &i8>::from_iter(vec![5, 5, 5, 5].iter().enumerate());\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: ``vec![5, 5, 5, 5].iter().enumerate().collect()``\n \n error: aborting due to 2 previous errors\n "}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/from_iter_instead_of_collect.stdout", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a85670652a37238db7328b5eaab7cb7794fa40c8/tests%2Fui%2Ffrom_iter_instead_of_collect.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a85670652a37238db7328b5eaab7cb7794fa40c8/tests%2Fui%2Ffrom_iter_instead_of_collect.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffrom_iter_instead_of_collect.stdout?ref=a85670652a37238db7328b5eaab7cb7794fa40c8"}]}