{"sha": "c52fb52fbcb57ef8eb9f2e5782339b9e72cc81f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1MmZiNTJmYmNiNTdlZjhlYjlmMmU1NzgyMzM5YjllNzJjYzgxZjg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-29T17:23:07Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-29T17:23:53Z"}, "message": "rustc: Remove the wrong-compiler warning; we're self-hosting now.", "tree": {"sha": "f6e4950febadcca84c5a33606ad5f6cbdf785651", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6e4950febadcca84c5a33606ad5f6cbdf785651"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c52fb52fbcb57ef8eb9f2e5782339b9e72cc81f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c52fb52fbcb57ef8eb9f2e5782339b9e72cc81f8", "html_url": "https://github.com/rust-lang/rust/commit/c52fb52fbcb57ef8eb9f2e5782339b9e72cc81f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c52fb52fbcb57ef8eb9f2e5782339b9e72cc81f8/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2f68b2d585f0b467f0911d162f3cb9bc7d1ad14", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2f68b2d585f0b467f0911d162f3cb9bc7d1ad14", "html_url": "https://github.com/rust-lang/rust/commit/a2f68b2d585f0b467f0911d162f3cb9bc7d1ad14"}], "stats": {"total": 17, "additions": 3, "deletions": 14}, "files": [{"sha": "2c6e4521219bbaa6c5bf3930584a622f4ff0d673", "filename": "Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c52fb52fbcb57ef8eb9f2e5782339b9e72cc81f8/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/c52fb52fbcb57ef8eb9f2e5782339b9e72cc81f8/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=c52fb52fbcb57ef8eb9f2e5782339b9e72cc81f8", "patch": "@@ -16,9 +16,9 @@ CFG_GCC_LINK_FLAGS :=\n CFG_BOOT_FLAGS := $(BOOT_FLAGS)\n ifdef CFG_DISABLE_OPTIMIZE\n   $(info cfg: disabling rustc optimization (CFG_DISABLE_OPTIMIZE))\n-  CFG_RUSTC_FLAGS := --nowarn\n+  CFG_RUSTC_FLAGS :=\n else\n-  CFG_RUSTC_FLAGS := --nowarn -O\n+  CFG_RUSTC_FLAGS := -O\n endif\n \n ifdef SAVE_TEMPS"}, {"sha": "db385c8e04db44bb9dd05b39cd988b8371650d0b", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c52fb52fbcb57ef8eb9f2e5782339b9e72cc81f8/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c52fb52fbcb57ef8eb9f2e5782339b9e72cc81f8/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=c52fb52fbcb57ef8eb9f2e5782339b9e72cc81f8", "patch": "@@ -98,19 +98,11 @@ fn pretty_print_input(session.session sess,\n     pretty.pprust.print_file(crate.node.module, input, std.io.stdout());\n }\n \n-fn warn_wrong_compiler() {\n-    io.stdout().write_str(\"This is the rust 'self-hosted' compiler.\n-The one written in rust.\n-It is currently incomplete.\n-You may want rustboot instead, the compiler next door.\\n\");\n-}\n-\n fn usage(session.session sess, str argv0) {\n     io.stdout().write_str(#fmt(\"usage: %s [options] <input>\\n\", argv0) + \"\n options:\n \n     -o <filename>      write output to <filename>\n-    --nowarn           suppress wrong-compiler warning\n     --glue             generate glue.bc file\n     --shared           compile a shared-library crate\n     --pretty           pretty-print the input instead of compiling\n@@ -147,7 +139,7 @@ fn main(vec[str] args) {\n     auto sess = session.session(target_crate_num, target_cfg, crate_cache,\n                                 md, front.codemap.new_codemap());\n \n-    auto opts = vec(optflag(\"nowarn\"), optflag(\"h\"), optflag(\"glue\"),\n+    auto opts = vec(optflag(\"h\"), optflag(\"glue\"),\n                     optflag(\"pretty\"), optflag(\"ls\"), optflag(\"parse-only\"),\n                     optflag(\"O\"), optflag(\"shared\"), optmulti(\"L\"),\n                     optflag(\"S\"), optflag(\"c\"), optopt(\"o\"),\n@@ -158,9 +150,6 @@ fn main(vec[str] args) {\n         case (GetOpts.failure(?f)) { sess.err(GetOpts.fail_str(f)); fail; }\n         case (GetOpts.success(?m)) { match = m; }\n     }\n-    if (!opt_present(match, \"nowarn\")) {\n-        warn_wrong_compiler();\n-    }\n     if (opt_present(match, \"h\")) {\n         usage(sess, binary);\n         ret;"}]}