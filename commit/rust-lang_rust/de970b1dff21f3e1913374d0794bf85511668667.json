{"sha": "de970b1dff21f3e1913374d0794bf85511668667", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlOTcwYjFkZmYyMWYzZTE5MTMzNzRkMDc5NGJmODU1MTE2Njg2Njc=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-09T04:51:33Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-25T22:22:15Z"}, "message": "Refactor away `NameResolution::result`", "tree": {"sha": "6f341fb7fe0ea59e5284a666e5c10242c49f4165", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f341fb7fe0ea59e5284a666e5c10242c49f4165"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de970b1dff21f3e1913374d0794bf85511668667", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de970b1dff21f3e1913374d0794bf85511668667", "html_url": "https://github.com/rust-lang/rust/commit/de970b1dff21f3e1913374d0794bf85511668667", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de970b1dff21f3e1913374d0794bf85511668667/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a8845e40b6c973f9834dc6462bde7b8d3c03829", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a8845e40b6c973f9834dc6462bde7b8d3c03829", "html_url": "https://github.com/rust-lang/rust/commit/5a8845e40b6c973f9834dc6462bde7b8d3c03829"}], "stats": {"total": 26, "additions": 10, "deletions": 16}, "files": [{"sha": "3e7a709345c1da2b5ffeed723c89b7c67107ef04", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/de970b1dff21f3e1913374d0794bf85511668667/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de970b1dff21f3e1913374d0794bf85511668667/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=de970b1dff21f3e1913374d0794bf85511668667", "patch": "@@ -141,26 +141,20 @@ impl<'a> NameResolution<'a> {\n         Ok(())\n     }\n \n-    // Returns the resolution of the name assuming no more globs will define it.\n-    fn result(&self, allow_private_imports: bool) -> ResolveResult<&'a NameBinding<'a>> {\n-        match self.binding {\n-            Some(binding) if !binding.defined_with(DefModifiers::GLOB_IMPORTED) => Success(binding),\n-            // If we don't allow private imports and no public imports can define the name, fail.\n-            _ if !allow_private_imports && self.pub_outstanding_references == 0 &&\n-                 !self.binding.map(NameBinding::is_public).unwrap_or(false) => Failed(None),\n-            _ if self.outstanding_references > 0 => Indeterminate,\n-            Some(binding) => Success(binding),\n-            None => Failed(None),\n-        }\n-    }\n-\n     // Returns Some(the resolution of the name), or None if the resolution depends\n     // on whether more globs can define the name.\n     fn try_result(&self, allow_private_imports: bool)\n                   -> Option<ResolveResult<&'a NameBinding<'a>>> {\n-        match self.result(allow_private_imports) {\n-            Failed(_) => None,\n-            result @ _ => Some(result),\n+        match self.binding {\n+            Some(binding) if !binding.defined_with(DefModifiers::GLOB_IMPORTED) =>\n+                Some(Success(binding)),\n+            // If (1) we don't allow private imports, (2) no public single import can define the\n+            // name, and (3) no public glob has defined the name, the resolution depends on globs.\n+            _ if !allow_private_imports && self.pub_outstanding_references == 0 &&\n+                 !self.binding.map(NameBinding::is_public).unwrap_or(false) => None,\n+            _ if self.outstanding_references > 0 => Some(Indeterminate),\n+            Some(binding) => Some(Success(binding)),\n+            None => None,\n         }\n     }\n "}]}