{"sha": "94df4f8cca133c638ddd7f51eec7b349b0a12c5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ZGY0ZjhjY2ExMzNjNjM4ZGRkN2Y1MWVlYzdiMzQ5YjBhMTJjNWE=", "commit": {"author": {"name": "Caleb Jones", "email": "code@calebjones.net", "date": "2017-08-07T03:04:33Z"}, "committer": {"name": "Caleb Jones", "email": "code@calebjones.net", "date": "2017-08-07T03:04:33Z"}, "message": "Move the empty path_list handling into rewrite_use_list()", "tree": {"sha": "b0422c811cea940d14be796810a35d2cf0e60176", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0422c811cea940d14be796810a35d2cf0e60176"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94df4f8cca133c638ddd7f51eec7b349b0a12c5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94df4f8cca133c638ddd7f51eec7b349b0a12c5a", "html_url": "https://github.com/rust-lang/rust/commit/94df4f8cca133c638ddd7f51eec7b349b0a12c5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94df4f8cca133c638ddd7f51eec7b349b0a12c5a/comments", "author": {"login": "porglezomp", "id": 1690225, "node_id": "MDQ6VXNlcjE2OTAyMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1690225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/porglezomp", "html_url": "https://github.com/porglezomp", "followers_url": "https://api.github.com/users/porglezomp/followers", "following_url": "https://api.github.com/users/porglezomp/following{/other_user}", "gists_url": "https://api.github.com/users/porglezomp/gists{/gist_id}", "starred_url": "https://api.github.com/users/porglezomp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/porglezomp/subscriptions", "organizations_url": "https://api.github.com/users/porglezomp/orgs", "repos_url": "https://api.github.com/users/porglezomp/repos", "events_url": "https://api.github.com/users/porglezomp/events{/privacy}", "received_events_url": "https://api.github.com/users/porglezomp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "porglezomp", "id": 1690225, "node_id": "MDQ6VXNlcjE2OTAyMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1690225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/porglezomp", "html_url": "https://github.com/porglezomp", "followers_url": "https://api.github.com/users/porglezomp/followers", "following_url": "https://api.github.com/users/porglezomp/following{/other_user}", "gists_url": "https://api.github.com/users/porglezomp/gists{/gist_id}", "starred_url": "https://api.github.com/users/porglezomp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/porglezomp/subscriptions", "organizations_url": "https://api.github.com/users/porglezomp/orgs", "repos_url": "https://api.github.com/users/porglezomp/repos", "events_url": "https://api.github.com/users/porglezomp/events{/privacy}", "received_events_url": "https://api.github.com/users/porglezomp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa242a5cd607f19531c73e4526f57a4a44b7b07f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa242a5cd607f19531c73e4526f57a4a44b7b07f", "html_url": "https://github.com/rust-lang/rust/commit/fa242a5cd607f19531c73e4526f57a4a44b7b07f"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "a65d8bb066a85b8596179db9f2b37535ccc93464", "filename": "src/imports.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/94df4f8cca133c638ddd7f51eec7b349b0a12c5a/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94df4f8cca133c638ddd7f51eec7b349b0a12c5a/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=94df4f8cca133c638ddd7f51eec7b349b0a12c5a", "patch": "@@ -157,12 +157,8 @@ fn rewrite_view_path_prefix(\n }\n \n impl Rewrite for ast::ViewPath {\n-    // Returns an empty string when the ViewPath is empty (like foo::bar::{})\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n         match self.node {\n-            ast::ViewPath_::ViewPathList(_, ref path_list) if path_list.is_empty() => {\n-                Some(String::new())\n-            }\n             ast::ViewPath_::ViewPathList(ref path, ref path_list) => {\n                 rewrite_use_list(shape, path, path_list, self.span, context)\n             }\n@@ -263,12 +259,11 @@ impl<'a> FmtVisitor<'a> {\n             .offset_left(vis.len() + 4)\n             .and_then(|shape| shape.sub_width(1))\n             .and_then(|shape| match vp.node {\n-                // If we have an empty path with attributes attached, we want to skip erasing it\n-                ast::ViewPath_::ViewPathList(ref path, ref path_list)\n-                    if path_list.is_empty() && !attrs.is_empty() =>\n+                // If we have an empty path list with no attributes, we erase it\n+                ast::ViewPath_::ViewPathList(_, ref path_list)\n+                    if path_list.is_empty() && attrs.is_empty() =>\n                 {\n-                    rewrite_path(&self.get_context(), PathContext::Import, None, path, shape)\n-                        .map(|path_str| format!(\"{}::{{}}\", path_str))\n+                    Some(\"\".into())\n                 }\n                 _ => vp.rewrite(&self.get_context(), shape),\n             });\n@@ -400,7 +395,7 @@ impl<'a> Ord for ImportItem<'a> {\n }\n \n // Pretty prints a multi-item import.\n-// Assumes that path_list.len() > 0.\n+// If the path list is empty, it leaves the braces empty.\n fn rewrite_use_list(\n     shape: Shape,\n     path: &ast::Path,\n@@ -418,7 +413,10 @@ fn rewrite_use_list(\n     ));\n \n     match path_list.len() {\n-        0 => unreachable!(),\n+        0 => {\n+            return rewrite_path(context, PathContext::Import, None, path, shape)\n+                .map(|path_str| format!(\"{}::{{}}\", path_str));\n+        }\n         1 => return Some(rewrite_single_use_list(path_str, &path_list[0])),\n         _ => (),\n     }"}]}