{"sha": "3d43be3ad397b68d4fcf1c5d3d3f4eb3b75ca184", "node_id": "C_kwDOAAsO6NoAKDNkNDNiZTNhZDM5N2I2OGQ0ZmNmMWM1ZDNkM2Y0ZWIzYjc1Y2ExODQ", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-04-16T23:55:32Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-05-04T00:40:49Z"}, "message": "Add unused_macro_rules lint definition\n\nNot fired yet.", "tree": {"sha": "43d79e61706f973b05fd47ed0cc6f6a53006277a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43d79e61706f973b05fd47ed0cc6f6a53006277a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d43be3ad397b68d4fcf1c5d3d3f4eb3b75ca184", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d43be3ad397b68d4fcf1c5d3d3f4eb3b75ca184", "html_url": "https://github.com/rust-lang/rust/commit/3d43be3ad397b68d4fcf1c5d3d3f4eb3b75ca184", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d43be3ad397b68d4fcf1c5d3d3f4eb3b75ca184/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1b71feb592ba64805689e2b15b9fa570182c442", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b71feb592ba64805689e2b15b9fa570182c442", "html_url": "https://github.com/rust-lang/rust/commit/e1b71feb592ba64805689e2b15b9fa570182c442"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "1886debde9b4d146cb8ebca6a155d3789487f577", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3d43be3ad397b68d4fcf1c5d3d3f4eb3b75ca184/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d43be3ad397b68d4fcf1c5d3d3f4eb3b75ca184/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=3d43be3ad397b68d4fcf1c5d3d3f4eb3b75ca184", "patch": "@@ -303,6 +303,7 @@ fn register_builtins(store: &mut LintStore, no_interleave_lints: bool) {\n         PATH_STATEMENTS,\n         UNUSED_ATTRIBUTES,\n         UNUSED_MACROS,\n+        UNUSED_MACRO_RULES,\n         UNUSED_ALLOCATION,\n         UNUSED_DOC_COMMENTS,\n         UNUSED_EXTERN_CRATES,"}, {"sha": "d13e60e2ebc03152de3c09f3d618949d9eec2e0a", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/3d43be3ad397b68d4fcf1c5d3d3f4eb3b75ca184/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d43be3ad397b68d4fcf1c5d3d3f4eb3b75ca184/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=3d43be3ad397b68d4fcf1c5d3d3f4eb3b75ca184", "patch": "@@ -749,6 +749,10 @@ declare_lint! {\n declare_lint! {\n     /// The `unused_macros` lint detects macros that were not used.\n     ///\n+    /// Note that this lint is distinct from the `unused_macro_rules` lint,\n+    /// which checks for single rules that never match of an otherwise used\n+    /// macro, and thus never expand.\n+    ///\n     /// ### Example\n     ///\n     /// ```rust\n@@ -775,6 +779,45 @@ declare_lint! {\n     \"detects macros that were not used\"\n }\n \n+declare_lint! {\n+    /// The `unused_macro_rules` lint detects macro rules that were not used.\n+    ///\n+    /// Note that the lint is distinct from the `unused_macros` lint, which\n+    /// fires if the entire macro is never called, while this lint fires for\n+    /// single unused rules of the macro that is otherwise used.\n+    /// `unused_macro_rules` fires only if `unused_macros` wouldn't fire.\n+    ///\n+    /// ### Example\n+    ///\n+    /// ```rust\n+    /// macro_rules! unused_empty {\n+    ///     (hello) => { println!(\"Hello, world!\") }; // This rule is unused\n+    ///     () => { println!(\"empty\") }; // This rule is used\n+    /// }\n+    ///\n+    /// fn main() {\n+    ///     unused_empty!(hello);\n+    /// }\n+    /// ```\n+    ///\n+    /// {{produces}}\n+    ///\n+    /// ### Explanation\n+    ///\n+    /// Unused macro rules may signal a mistake or unfinished code. Furthermore,\n+    /// they slow down compilation. Right now, silencing the warning is not\n+    /// supported on a single rule level, so you have to add an allow to the\n+    /// entire macro definition.\n+    ///\n+    /// If you intended to export the macro to make it\n+    /// available outside of the crate, use the [`macro_export` attribute].\n+    ///\n+    /// [`macro_export` attribute]: https://doc.rust-lang.org/reference/macros-by-example.html#path-based-scope\n+    pub UNUSED_MACRO_RULES,\n+    Warn,\n+    \"detects macro rules that were not used\"\n+}\n+\n declare_lint! {\n     /// The `warnings` lint allows you to change the level of other\n     /// lints which produce warnings.\n@@ -3138,6 +3181,7 @@ declare_lint_pass! {\n         OVERLAPPING_RANGE_ENDPOINTS,\n         BINDINGS_WITH_VARIANT_NAME,\n         UNUSED_MACROS,\n+        UNUSED_MACRO_RULES,\n         WARNINGS,\n         UNUSED_FEATURES,\n         STABLE_FEATURES,"}]}