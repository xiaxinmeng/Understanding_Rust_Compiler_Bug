{"sha": "5fd540b8fe1a131b1e00b5b147c52d5ba15a7210", "node_id": "C_kwDOAAsO6NoAKDVmZDU0MGI4ZmUxYTEzMWIxZTAwYjViMTQ3YzUyZDViYTE1YTcyMTA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-09T06:25:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-09T06:25:44Z"}, "message": "Rollup merge of #105387 - willcrichton:scrape-examples-ui-improvements, r=notriddle\n\nImprove Rustdoc scrape-examples UI\n\nThis PR combines a few different improvements to the scrape-examples UI. See a live demo here: https://willcrichton.net/misc/scrape-examples/small-first-example/clap/struct.Arg.html\n\n### 1. The first scraped example now takes up significantly less screen height.\nInserting the first scraped example takes up a lot of vertical screen space. I don't want this addition to overwhelm users, so I decided to reduce the height of the initial example in two ways: (A) the default un-expanded height is reduced from 240px (10 LOC) to 120px (5 LOC), and (B) the link to the example is now positioned *over* the example instead of *atop* the example (only on desktop though, not mobile). The changes to `scrape-examples.js` and `rustdoc.css` implement this fix.\n\nHere is what an example docblock now looks like:\n\n![Screen Shot 2022-12-06 at 10 02 21 AM](https://user-images.githubusercontent.com/663326/205987450-3940063c-5973-4a34-8579-baff6a43aa9b.png)\n\n### 2. Expanding all docblocks will not expand \"More examples\".\nThe \"More examples blocks\" are huge, so fully expanding everything on the page would take up too much vertical space. The changes to `main.js` implement this fix. This is tested in `scrape-examples-toggle.goml`.\n\n### 3. Examples from binary crates are sorted higher than examples from library crates.\nCode that is written as an example of an API is probably better for learning than code that happens to use an API, but isn't intended for pedagogic purposes. Unfortunately Rustc doesn't know whether a particular crate comes from an example target (only Cargo knows this). But we can at least create a proxy that prefers examples from binary crates over library crates, which we know from `--crate-type`.\n\nThis change is implemented by adding a new field `bin_crate` in `Options` (see `config.rs`). An `is_bin` field has been added to the scraped examples metadata (see `scrape_examples.rs`). Then the example sorting metric uses `is_bin` as the first entry of a lexicographic sort on `(is_bin, example_size, display_name)` (see `render/mod.rs`).\n\nNote that in the future we can consider adding another flag like `--scrape-examples-cargo-target` that would pass target information from Cargo into the example metadata. But I'm proposing a less intrusive change for now.\n\n### 4. The scrape-examples help page has been updated to reflect the latest Cargo interface.\n\nSee `scrape-examples-help.md`.\n\nr? `@notriddle`\n\nP.S. once this PR and rust-lang/cargo#11450 are merged, then I think the scrape-examples feature is officially ready for deployment on docs.rs!", "tree": {"sha": "5f04f5a85066fca14feb314bf1979c2ec885a519", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f04f5a85066fca14feb314bf1979c2ec885a519"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjktToCRBK7hj4Ov3rIwAAhLoIADodTNzmhjR71sz/GvlO9fR0\nJ1LjGnDtacT3Wqfud41cnnsjrzOdvb/J0q5i8D17MS6EhcPKJXu/YpH4nHqJRDpo\n5G2xInoDylAhl7BiDYlM/qRFOxpcK5Zd7zRMc5p7qoGrFL8RqItyG8A7Nb8NZ01E\nOkcyGMpINfmBOjCrqYLG9LklFrl/KaasBIj1kWHASb2gEPzTum5zVmwhuwz3Fmsc\nm6JZBAXddxNL2KqQRtsFVNM6THQ/PTQfwkP3OXNQdYsKroQGIzngojx2xGJETJzX\nQdeqv9bOXCwuWwaM5AZl9bixE2ywRVtGvaowxFg0vGUGvecvN+3OsqCV5KkJ6dk=\n=0j4k\n-----END PGP SIGNATURE-----\n", "payload": "tree 5f04f5a85066fca14feb314bf1979c2ec885a519\nparent 0b4d57be531ad1f13be533f51b611558991c27dd\nparent 9499d2cce3bebef96d8ae64442602f87726a875a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670567144 +0100\ncommitter GitHub <noreply@github.com> 1670567144 +0100\n\nRollup merge of #105387 - willcrichton:scrape-examples-ui-improvements, r=notriddle\n\nImprove Rustdoc scrape-examples UI\n\nThis PR combines a few different improvements to the scrape-examples UI. See a live demo here: https://willcrichton.net/misc/scrape-examples/small-first-example/clap/struct.Arg.html\n\n### 1. The first scraped example now takes up significantly less screen height.\nInserting the first scraped example takes up a lot of vertical screen space. I don't want this addition to overwhelm users, so I decided to reduce the height of the initial example in two ways: (A) the default un-expanded height is reduced from 240px (10 LOC) to 120px (5 LOC), and (B) the link to the example is now positioned *over* the example instead of *atop* the example (only on desktop though, not mobile). The changes to `scrape-examples.js` and `rustdoc.css` implement this fix.\n\nHere is what an example docblock now looks like:\n\n![Screen Shot 2022-12-06 at 10 02 21 AM](https://user-images.githubusercontent.com/663326/205987450-3940063c-5973-4a34-8579-baff6a43aa9b.png)\n\n### 2. Expanding all docblocks will not expand \"More examples\".\nThe \"More examples blocks\" are huge, so fully expanding everything on the page would take up too much vertical space. The changes to `main.js` implement this fix. This is tested in `scrape-examples-toggle.goml`.\n\n### 3. Examples from binary crates are sorted higher than examples from library crates.\nCode that is written as an example of an API is probably better for learning than code that happens to use an API, but isn't intended for pedagogic purposes. Unfortunately Rustc doesn't know whether a particular crate comes from an example target (only Cargo knows this). But we can at least create a proxy that prefers examples from binary crates over library crates, which we know from `--crate-type`.\n\nThis change is implemented by adding a new field `bin_crate` in `Options` (see `config.rs`). An `is_bin` field has been added to the scraped examples metadata (see `scrape_examples.rs`). Then the example sorting metric uses `is_bin` as the first entry of a lexicographic sort on `(is_bin, example_size, display_name)` (see `render/mod.rs`).\n\nNote that in the future we can consider adding another flag like `--scrape-examples-cargo-target` that would pass target information from Cargo into the example metadata. But I'm proposing a less intrusive change for now.\n\n### 4. The scrape-examples help page has been updated to reflect the latest Cargo interface.\n\nSee `scrape-examples-help.md`.\n\nr? `@notriddle`\n\nP.S. once this PR and rust-lang/cargo#11450 are merged, then I think the scrape-examples feature is officially ready for deployment on docs.rs!\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210", "html_url": "https://github.com/rust-lang/rust/commit/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b4d57be531ad1f13be533f51b611558991c27dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b4d57be531ad1f13be533f51b611558991c27dd", "html_url": "https://github.com/rust-lang/rust/commit/0b4d57be531ad1f13be533f51b611558991c27dd"}, {"sha": "9499d2cce3bebef96d8ae64442602f87726a875a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9499d2cce3bebef96d8ae64442602f87726a875a", "html_url": "https://github.com/rust-lang/rust/commit/9499d2cce3bebef96d8ae64442602f87726a875a"}], "stats": {"total": 136, "additions": 111, "deletions": 25}, "files": [{"sha": "56b40d8c66baffa627ab03e1a9b83788b73d276d", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=5fd540b8fe1a131b1e00b5b147c52d5ba15a7210", "patch": "@@ -69,6 +69,8 @@ pub(crate) struct Options {\n     pub(crate) input: PathBuf,\n     /// The name of the crate being documented.\n     pub(crate) crate_name: Option<String>,\n+    /// Whether or not this is a bin crate\n+    pub(crate) bin_crate: bool,\n     /// Whether or not this is a proc-macro crate\n     pub(crate) proc_macro_crate: bool,\n     /// How to format errors and warnings.\n@@ -176,6 +178,7 @@ impl fmt::Debug for Options {\n         f.debug_struct(\"Options\")\n             .field(\"input\", &self.input)\n             .field(\"crate_name\", &self.crate_name)\n+            .field(\"bin_crate\", &self.bin_crate)\n             .field(\"proc_macro_crate\", &self.proc_macro_crate)\n             .field(\"error_format\", &self.error_format)\n             .field(\"libs\", &self.libs)\n@@ -667,6 +670,7 @@ impl Options {\n             None => OutputFormat::default(),\n         };\n         let crate_name = matches.opt_str(\"crate-name\");\n+        let bin_crate = crate_types.contains(&CrateType::Executable);\n         let proc_macro_crate = crate_types.contains(&CrateType::ProcMacro);\n         let playground_url = matches.opt_str(\"playground-url\");\n         let maybe_sysroot = matches.opt_str(\"sysroot\").map(PathBuf::from);\n@@ -718,6 +722,7 @@ impl Options {\n             rustc_feature::UnstableFeatures::from_environment(crate_name.as_deref());\n         let options = Options {\n             input,\n+            bin_crate,\n             proc_macro_crate,\n             error_format,\n             diagnostic_width,"}, {"sha": "36d15ec3b8640cde9642b080ffe1db218dc848a7", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=5fd540b8fe1a131b1e00b5b147c52d5ba15a7210", "patch": "@@ -2957,14 +2957,23 @@ fn render_call_locations(w: &mut Buffer, cx: &mut Context<'_>, item: &clean::Ite\n \n     // The call locations are output in sequence, so that sequence needs to be determined.\n     // Ideally the most \"relevant\" examples would be shown first, but there's no general algorithm\n-    // for determining relevance. Instead, we prefer the smallest examples being likely the easiest to\n-    // understand at a glance.\n+    // for determining relevance. We instead proxy relevance with the following heuristics:\n+    //   1. Code written to be an example is better than code not written to be an example, e.g.\n+    //      a snippet from examples/foo.rs is better than src/lib.rs. We don't know the Cargo\n+    //      directory structure in Rustdoc, so we proxy this by prioritizing code that comes from\n+    //      a --crate-type bin.\n+    //   2. Smaller examples are better than large examples. So we prioritize snippets that have\n+    //      the smallest number of lines in their enclosing item.\n+    //   3. Finally we sort by the displayed file name, which is arbitrary but prevents the\n+    //      ordering of examples from randomly changing between Rustdoc invocations.\n     let ordered_locations = {\n-        let sort_criterion = |(_, call_data): &(_, &CallData)| {\n+        fn sort_criterion<'a>(\n+            (_, call_data): &(&PathBuf, &'a CallData),\n+        ) -> (bool, u32, &'a String) {\n             // Use the first location because that's what the user will see initially\n             let (lo, hi) = call_data.locations[0].enclosing_item.byte_span;\n-            hi - lo\n-        };\n+            (!call_data.is_bin, hi - lo, &call_data.display_name)\n+        }\n \n         let mut locs = call_locations.iter().collect::<Vec<_>>();\n         locs.sort_by_key(sort_criterion);"}, {"sha": "7b41892427c13c4bab7ea64155a166028c02b74f", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=5fd540b8fe1a131b1e00b5b147c52d5ba15a7210", "patch": "@@ -1813,6 +1813,22 @@ in storage.js\n \t}\n }\n \n+/* Should have min-width: (N + 1)px where N is the mobile breakpoint above. */\n+@media (min-width: 701px) {\n+\t/* Places file-link for a scraped example on top of the example to save space.\n+\t   We only do this on large screens so the file-link doesn't overlap too much\n+\t\t with the example's content. */\n+\t.scraped-example-title {\n+\t\tposition: absolute;\n+\t\tz-index: 10;\n+\t\tbackground: var(--main-background-color);\n+\t\tbottom: 8px;\n+\t\tright: 5px;\n+\t\tpadding: 2px 4px;\n+\t\tbox-shadow: 0 0 4px var(--main-background-color);\n+\t}\n+}\n+\n @media print {\n \tnav.sidebar, nav.sub, .out-of-band, a.srclink, #copy-path,\n \tdetails.rustdoc-toggle[open] > summary::before, details.rustdoc-toggle > summary::before,\n@@ -1899,6 +1915,11 @@ in storage.js\n \tborder-radius: 50px;\n }\n \n+.scraped-example {\n+\t/* So .scraped-example-title can be positioned absolutely */\n+\tposition: relative;\n+}\n+\n .scraped-example .code-wrapper {\n \tposition: relative;\n \tdisplay: flex;\n@@ -1908,18 +1929,30 @@ in storage.js\n }\n \n .scraped-example:not(.expanded) .code-wrapper {\n-\tmax-height: 240px;\n+\t/* scrape-examples.js has a constant DEFAULT_MAX_LINES (call it N) for the number\n+\t * of lines shown in the un-expanded example code viewer. This pre needs to have\n+\t * a max-height equal to line-height * N. The line-height is currently 1.5em,\n+\t * and we include additional 10px for padding. */\n+\t max-height: calc(1.5em * 5 + 10px);\n }\n \n .scraped-example:not(.expanded) .code-wrapper pre {\n \toverflow-y: hidden;\n-\tmax-height: 240px;\n \tpadding-bottom: 0;\n+\t/* See above comment, should be the same max-height. */\n+\tmax-height: calc(1.5em * 5 + 10px);\n+}\n+\n+.more-scraped-examples .scraped-example:not(.expanded) .code-wrapper,\n+.more-scraped-examples .scraped-example:not(.expanded) .code-wrapper pre {\n+\t/* See above comment, except this height is based on HIDDEN_MAX_LINES. */\n+\tmax-height: calc(1.5em * 10 + 10px);\n }\n \n .scraped-example .code-wrapper .next,\n .scraped-example .code-wrapper .prev,\n .scraped-example .code-wrapper .expand {\n+\tcolor: var(--main-color);\n \tposition: absolute;\n \ttop: 0.25em;\n \tz-index: 1;"}, {"sha": "152116089c7fc2c6f1c400f7f353fb16d879e66d", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=5fd540b8fe1a131b1e00b5b147c52d5ba15a7210", "patch": "@@ -622,7 +622,7 @@ function loadCss(cssUrl) {\n         const innerToggle = document.getElementById(toggleAllDocsId);\n         removeClass(innerToggle, \"will-expand\");\n         onEachLazy(document.getElementsByClassName(\"rustdoc-toggle\"), e => {\n-            if (!hasClass(e, \"type-contents-toggle\")) {\n+            if (!hasClass(e, \"type-contents-toggle\") && !hasClass(e, \"more-examples-toggle\")) {\n                 e.open = true;\n             }\n         });"}, {"sha": "7a3a9c5f3400190fb62ec8ea3ee904171a06d048", "filename": "src/librustdoc/html/static/js/scrape-examples.js", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js", "raw_url": "https://github.com/rust-lang/rust/raw/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js?ref=5fd540b8fe1a131b1e00b5b147c52d5ba15a7210", "patch": "@@ -3,33 +3,41 @@\n \"use strict\";\n \n (function() {\n-    // Number of lines shown when code viewer is not expanded\n-    const MAX_LINES = 10;\n+    // Number of lines shown when code viewer is not expanded.\n+    // DEFAULT is the first example shown by default, while HIDDEN is\n+    // the examples hidden beneath the \"More examples\" toggle.\n+    //\n+    // NOTE: these values MUST be synchronized with certain rules in rustdoc.css!\n+    const DEFAULT_MAX_LINES = 5;\n+    const HIDDEN_MAX_LINES = 10;\n \n     // Scroll code block to the given code location\n-    function scrollToLoc(elt, loc) {\n+    function scrollToLoc(elt, loc, isHidden) {\n         const lines = elt.querySelector(\".src-line-numbers\");\n         let scrollOffset;\n \n         // If the block is greater than the size of the viewer,\n         // then scroll to the top of the block. Otherwise scroll\n         // to the middle of the block.\n-        if (loc[1] - loc[0] > MAX_LINES) {\n+        const maxLines = isHidden ? HIDDEN_MAX_LINES : DEFAULT_MAX_LINES;\n+        if (loc[1] - loc[0] > maxLines) {\n             const line = Math.max(0, loc[0] - 1);\n             scrollOffset = lines.children[line].offsetTop;\n         } else {\n             const wrapper = elt.querySelector(\".code-wrapper\");\n             const halfHeight = wrapper.offsetHeight / 2;\n-            const offsetMid = (lines.children[loc[0]].offsetTop\n-                             + lines.children[loc[1]].offsetTop) / 2;\n+            const offsetTop = lines.children[loc[0]].offsetTop;\n+            const lastLine = lines.children[loc[1]];\n+            const offsetBot = lastLine.offsetTop + lastLine.offsetHeight;\n+            const offsetMid = (offsetTop + offsetBot) / 2;\n             scrollOffset = offsetMid - halfHeight;\n         }\n \n         lines.scrollTo(0, scrollOffset);\n         elt.querySelector(\".rust\").scrollTo(0, scrollOffset);\n     }\n \n-    function updateScrapedExample(example) {\n+    function updateScrapedExample(example, isHidden) {\n         const locs = JSON.parse(example.attributes.getNamedItem(\"data-locs\").textContent);\n         let locIndex = 0;\n         const highlights = Array.prototype.slice.call(example.querySelectorAll(\".highlight\"));\n@@ -40,7 +48,7 @@\n             const onChangeLoc = changeIndex => {\n                 removeClass(highlights[locIndex], \"focus\");\n                 changeIndex();\n-                scrollToLoc(example, locs[locIndex][0]);\n+                scrollToLoc(example, locs[locIndex][0], isHidden);\n                 addClass(highlights[locIndex], \"focus\");\n \n                 const url = locs[locIndex][1];\n@@ -70,19 +78,19 @@\n             expandButton.addEventListener(\"click\", () => {\n                 if (hasClass(example, \"expanded\")) {\n                     removeClass(example, \"expanded\");\n-                    scrollToLoc(example, locs[0][0]);\n+                    scrollToLoc(example, locs[0][0], isHidden);\n                 } else {\n                     addClass(example, \"expanded\");\n                 }\n             });\n         }\n \n         // Start with the first example in view\n-        scrollToLoc(example, locs[0][0]);\n+        scrollToLoc(example, locs[0][0], isHidden);\n     }\n \n     const firstExamples = document.querySelectorAll(\".scraped-example-list > .scraped-example\");\n-    onEachLazy(firstExamples, updateScrapedExample);\n+    onEachLazy(firstExamples, el => updateScrapedExample(el, false));\n     onEachLazy(document.querySelectorAll(\".more-examples-toggle\"), toggle => {\n         // Allow users to click the left border of the <details> section to close it,\n         // since the section can be large and finding the [+] button is annoying.\n@@ -99,7 +107,7 @@\n             // depends on offsetHeight, a property that requires an element to be visible to\n             // compute correctly.\n             setTimeout(() => {\n-                onEachLazy(moreExamples, updateScrapedExample);\n+                onEachLazy(moreExamples, el => updateScrapedExample(el, true));\n             });\n         }, {once: true});\n     });"}, {"sha": "002d19ec9b67dae6c0b3724e6b46aac4213f9766", "filename": "src/librustdoc/html/static/scrape-examples-help.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fscrape-examples-help.md", "raw_url": "https://github.com/rust-lang/rust/raw/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fscrape-examples-help.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fscrape-examples-help.md?ref=5fd540b8fe1a131b1e00b5b147c52d5ba15a7210", "patch": "@@ -1,4 +1,4 @@\n-Rustdoc will automatically scrape examples of documented items from the `examples/` directory of a project. These examples will be included within the generated documentation for that item. For example, if your library contains a public function:\n+Rustdoc will automatically scrape examples of documented items from a project's source code. These examples will be included within the generated documentation for that item. For example, if your library contains a public function:\n \n ```rust\n // src/lib.rs\n@@ -16,6 +16,7 @@ fn main() {\n \n Then this code snippet will be included in the documentation for `a_func`.\n \n+\n ## How to read scraped examples\n \n Scraped examples are shown as blocks of code from a given file. The relevant item will be highlighted. If the file is larger than a couple lines, only a small window will be shown which you can expand by clicking &varr; in the top-right. If a file contains multiple instances of an item, you can use the &pr; and &sc; buttons to toggle through each instance.\n@@ -25,7 +26,7 @@ If there is more than one file that contains examples, then you should click \"Mo\n \n ## How Rustdoc scrapes examples\n \n-When you run `cargo doc`, Rustdoc will analyze all the crates that match Cargo's `--examples` filter for instances of items that occur in the crates being documented. Then Rustdoc will include the source code of these instances in the generated documentation.\n+When you run `cargo doc -Zunstable-options -Zrustdoc-scrape-examples`, Rustdoc will analyze all the documented crates for uses of documented items. Then Rustdoc will include the source code of these instances in the generated documentation.\n \n Rustdoc has a few techniques to ensure this doesn't overwhelm documentation readers, and that it doesn't blow up the page size:\n "}, {"sha": "3f84eb0b4c6550444a73cb28342f9fb6fe090fc9", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=5fd540b8fe1a131b1e00b5b147c52d5ba15a7210", "patch": "@@ -774,6 +774,7 @@ fn main_args(at_args: &[String]) -> MainResult {\n     let output_format = options.output_format;\n     let externs = options.externs.clone();\n     let scrape_examples_options = options.scrape_examples_options.clone();\n+    let bin_crate = options.bin_crate;\n \n     let config = core::create_config(options);\n \n@@ -832,7 +833,14 @@ fn main_args(at_args: &[String]) -> MainResult {\n                 info!(\"finished with rustc\");\n \n                 if let Some(options) = scrape_examples_options {\n-                    return scrape_examples::run(krate, render_opts, cache, tcx, options);\n+                    return scrape_examples::run(\n+                        krate,\n+                        render_opts,\n+                        cache,\n+                        tcx,\n+                        options,\n+                        bin_crate,\n+                    );\n                 }\n \n                 cache.crate_version = crate_version;"}, {"sha": "f2ee99cd9d4943e1e1a576d1c26a52d1f8881541", "filename": "src/librustdoc/scrape_examples.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Flibrustdoc%2Fscrape_examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Flibrustdoc%2Fscrape_examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fscrape_examples.rs?ref=5fd540b8fe1a131b1e00b5b147c52d5ba15a7210", "patch": "@@ -110,6 +110,7 @@ pub(crate) struct CallData {\n     pub(crate) url: String,\n     pub(crate) display_name: String,\n     pub(crate) edition: Edition,\n+    pub(crate) is_bin: bool,\n }\n \n pub(crate) type FnCallLocations = FxHashMap<PathBuf, CallData>;\n@@ -122,6 +123,7 @@ struct FindCalls<'a, 'tcx> {\n     cx: Context<'tcx>,\n     target_crates: Vec<CrateNum>,\n     calls: &'a mut AllCallLocations,\n+    bin_crate: bool,\n }\n \n impl<'a, 'tcx> Visitor<'tcx> for FindCalls<'a, 'tcx>\n@@ -245,7 +247,9 @@ where\n                 let mk_call_data = || {\n                     let display_name = file_path.display().to_string();\n                     let edition = call_span.edition();\n-                    CallData { locations: Vec::new(), url, display_name, edition }\n+                    let is_bin = self.bin_crate;\n+\n+                    CallData { locations: Vec::new(), url, display_name, edition, is_bin }\n                 };\n \n                 let fn_key = tcx.def_path_hash(*def_id);\n@@ -274,6 +278,7 @@ pub(crate) fn run(\n     cache: formats::cache::Cache,\n     tcx: TyCtxt<'_>,\n     options: ScrapeExamplesOptions,\n+    bin_crate: bool,\n ) -> interface::Result<()> {\n     let inner = move || -> Result<(), String> {\n         // Generates source files for examples\n@@ -300,7 +305,8 @@ pub(crate) fn run(\n \n         // Run call-finder on all items\n         let mut calls = FxHashMap::default();\n-        let mut finder = FindCalls { calls: &mut calls, tcx, map: tcx.hir(), cx, target_crates };\n+        let mut finder =\n+            FindCalls { calls: &mut calls, tcx, map: tcx.hir(), cx, target_crates, bin_crate };\n         tcx.hir().visit_all_item_likes_in_crate(&mut finder);\n \n         // The visitor might have found a type error, which we need to"}, {"sha": "bba518db099a49693956915158ffb3e224478716", "filename": "src/test/rustdoc-gui/scrape-examples-button-focus.goml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Ftest%2Frustdoc-gui%2Fscrape-examples-button-focus.goml", "raw_url": "https://github.com/rust-lang/rust/raw/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Ftest%2Frustdoc-gui%2Fscrape-examples-button-focus.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fscrape-examples-button-focus.goml?ref=5fd540b8fe1a131b1e00b5b147c52d5ba15a7210", "patch": "@@ -1,5 +1,6 @@\n goto: \"file://\" + |DOC_PATH| + \"/scrape_examples/fn.test.html\"\n \n+// The next/prev buttons vertically scroll the code viewport between examples\n store-property: (initialScrollTop, \".scraped-example-list > .scraped-example pre\", \"scrollTop\")\n focus: \".scraped-example-list > .scraped-example .next\"\n press-key: \"Enter\"\n@@ -12,6 +13,7 @@ assert-property: (\".scraped-example-list > .scraped-example pre\", {\n \t\"scrollTop\": |initialScrollTop|\n })\n \n+// The expand button increases the scrollHeight of the minimized code viewport\n store-property: (smallOffsetHeight, \".scraped-example-list > .scraped-example pre\", \"offsetHeight\")\n assert-property-false: (\".scraped-example-list > .scraped-example pre\", {\n \t\"scrollHeight\": |smallOffsetHeight|"}, {"sha": "ee720afb788fe03ff01af8a69c262c45e97c3cbf", "filename": "src/test/rustdoc-gui/scrape-examples-toggle.goml", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Ftest%2Frustdoc-gui%2Fscrape-examples-toggle.goml", "raw_url": "https://github.com/rust-lang/rust/raw/5fd540b8fe1a131b1e00b5b147c52d5ba15a7210/src%2Ftest%2Frustdoc-gui%2Fscrape-examples-toggle.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fscrape-examples-toggle.goml?ref=5fd540b8fe1a131b1e00b5b147c52d5ba15a7210", "patch": "@@ -0,0 +1,14 @@\n+goto: \"file://\" + |DOC_PATH| + \"/scrape_examples/fn.test_many.html\"\n+\n+// Clicking \"More examples...\" will open additional examples\n+assert-attribute-false: (\".more-examples-toggle\", {\"open\": \"\"})\n+click: \".more-examples-toggle\"\n+assert-attribute: (\".more-examples-toggle\", {\"open\": \"\"})\n+\n+// Toggling all docs will close additional examples\n+click: \"#toggle-all-docs\"\n+assert-attribute-false: (\".more-examples-toggle\", {\"open\": \"\"})\n+\n+// After re-opening the docs, the additional examples should stay closed\n+click: \"#toggle-all-docs\"\n+assert-attribute-false: (\".more-examples-toggle\", {\"open\": \"\"})"}]}