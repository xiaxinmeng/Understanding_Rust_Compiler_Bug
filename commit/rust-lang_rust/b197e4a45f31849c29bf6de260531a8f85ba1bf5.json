{"sha": "b197e4a45f31849c29bf6de260531a8f85ba1bf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxOTdlNGE0NWYzMTg0OWMyOWJmNmRlMjYwNTMxYThmODViYTFiZjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-14T17:36:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-14T17:36:01Z"}, "message": "Auto merge of #38295 - dylanmckay:llvm-4.0-di-globalvar, r=michaelwoerister\n\n[LLVM 4.0] Update LLVM global variable debug info API for 4.0\n\nThis teaches Rust about an LLVM 4.0 API change for creating debug info\nfor global variables.\n\nThis change was made in upstream LLVM patch https://reviews.llvm.org/D20147\n\nThis is almost a 1:1 copy of how clang did it in http://reviews.llvm.org/D20415", "tree": {"sha": "446509f7297930df003eaab666ef43c731c7cc67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/446509f7297930df003eaab666ef43c731c7cc67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b197e4a45f31849c29bf6de260531a8f85ba1bf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b197e4a45f31849c29bf6de260531a8f85ba1bf5", "html_url": "https://github.com/rust-lang/rust/commit/b197e4a45f31849c29bf6de260531a8f85ba1bf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b197e4a45f31849c29bf6de260531a8f85ba1bf5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cda3b6a653bcbdc820d135a9e80c4bcba1dbc04", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cda3b6a653bcbdc820d135a9e80c4bcba1dbc04", "html_url": "https://github.com/rust-lang/rust/commit/4cda3b6a653bcbdc820d135a9e80c4bcba1dbc04"}, {"sha": "e080804f72fe937ed36cd6656f5f119959529945", "url": "https://api.github.com/repos/rust-lang/rust/commits/e080804f72fe937ed36cd6656f5f119959529945", "html_url": "https://github.com/rust-lang/rust/commit/e080804f72fe937ed36cd6656f5f119959529945"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "f5fa66f1b0e5ae79ed948db604cca268696355a6", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b197e4a45f31849c29bf6de260531a8f85ba1bf5/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b197e4a45f31849c29bf6de260531a8f85ba1bf5/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=b197e4a45f31849c29bf6de260531a8f85ba1bf5", "patch": "@@ -651,17 +651,32 @@ extern \"C\" LLVMRustMetadataRef LLVMRustDIBuilderCreateStaticVariable(\n     bool isLocalToUnit,\n     LLVMValueRef Val,\n     LLVMRustMetadataRef Decl = NULL,\n-    uint64_t AlignInBits = 0)\n-{\n-    return wrap(Builder->createGlobalVariable(\n-        unwrapDI<DIDescriptor>(Context),\n+    uint64_t AlignInBits = 0) {\n+    Constant *InitVal = cast<Constant>(unwrap(Val));\n+\n+#if LLVM_VERSION_GE(4, 0)\n+    llvm::DIExpression *InitExpr = nullptr;\n+    if (llvm::ConstantInt *IntVal = llvm::dyn_cast<llvm::ConstantInt>(InitVal)) {\n+      InitExpr = Builder->createConstantValueExpression(\n+          IntVal->getValue().getSExtValue());\n+    } else if (llvm::ConstantFP *FPVal = llvm::dyn_cast<llvm::ConstantFP>(InitVal)) {\n+        InitExpr = Builder->createConstantValueExpression(\n+                FPVal->getValueAPF().bitcastToAPInt().getZExtValue());\n+    }\n+#endif\n+\n+    return wrap(Builder->createGlobalVariable(unwrapDI<DIDescriptor>(Context),\n         Name,\n         LinkageName,\n         unwrapDI<DIFile>(File),\n         LineNo,\n         unwrapDI<DIType>(Ty),\n         isLocalToUnit,\n-        cast<Constant>(unwrap(Val)),\n+#if LLVM_VERSION_GE(4, 0)\n+        InitExpr,\n+#else\n+        InitVal,\n+#endif\n         unwrapDIptr<MDNode>(Decl)\n #if LLVM_VERSION_GE(4, 0)\n         , AlignInBits"}]}