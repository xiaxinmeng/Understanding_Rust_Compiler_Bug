{"sha": "7ae12c9385230d6589fd0dae267f694338af8b45", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhZTEyYzkzODUyMzBkNjU4OWZkMGRhZTI2N2Y2OTQzMzhhZjhiNDU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-07T01:01:58Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-23T12:47:44Z"}, "message": "extract parse_dot_base_expr", "tree": {"sha": "db7ec8072b0b2ffd184bbd7ef6b26480479f0451", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db7ec8072b0b2ffd184bbd7ef6b26480479f0451"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ae12c9385230d6589fd0dae267f694338af8b45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ae12c9385230d6589fd0dae267f694338af8b45", "html_url": "https://github.com/rust-lang/rust/commit/7ae12c9385230d6589fd0dae267f694338af8b45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ae12c9385230d6589fd0dae267f694338af8b45/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc95228f1b01619e4faecf4694c1cd1f0938815d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc95228f1b01619e4faecf4694c1cd1f0938815d", "html_url": "https://github.com/rust-lang/rust/commit/bc95228f1b01619e4faecf4694c1cd1f0938815d"}], "stats": {"total": 23, "additions": 10, "deletions": 13}, "files": [{"sha": "c18cf3565da567af6540d62a4fb4f26e817e1b31", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/7ae12c9385230d6589fd0dae267f694338af8b45/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ae12c9385230d6589fd0dae267f694338af8b45/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=7ae12c9385230d6589fd0dae267f694338af8b45", "patch": "@@ -692,30 +692,27 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n-    fn parse_dot_or_call_expr_with_(&mut self, e0: P<Expr>, lo: Span) -> PResult<'a, P<Expr>> {\n-        let mut e = e0;\n+    fn parse_dot_or_call_expr_with_(&mut self, mut e: P<Expr>, lo: Span) -> PResult<'a, P<Expr>> {\n         loop {\n-            // expr?\n-            while self.eat(&token::Question) {\n-                let hi = self.prev_span;\n-                e = self.mk_expr(lo.to(hi), ExprKind::Try(e), AttrVec::new());\n+            if self.eat(&token::Question) {\n+                // `expr?`\n+                e = self.mk_expr(lo.to(self.prev_span), ExprKind::Try(e), AttrVec::new());\n+                continue;\n             }\n-\n-            // expr.f\n             if self.eat(&token::Dot) {\n+                // expr.f\n                 e = self.parse_dot_suffix_expr(lo, e)?;\n                 continue;\n             }\n             if self.expr_is_complete(&e) {\n-                break;\n+                return Ok(e);\n             }\n-            match self.token.kind {\n-                token::OpenDelim(token::Paren) => e = self.parse_fn_call_expr(lo, e),\n-                token::OpenDelim(token::Bracket) => e = self.parse_index_expr(lo, e)?,\n+            e = match self.token.kind {\n+                token::OpenDelim(token::Paren) => self.parse_fn_call_expr(lo, e),\n+                token::OpenDelim(token::Bracket) => self.parse_index_expr(lo, e)?,\n                 _ => return Ok(e),\n             }\n         }\n-        return Ok(e);\n     }\n \n     fn parse_dot_suffix_expr(&mut self, lo: Span, base: P<Expr>) -> PResult<'a, P<Expr>> {"}]}