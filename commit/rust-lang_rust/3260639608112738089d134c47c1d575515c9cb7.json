{"sha": "3260639608112738089d134c47c1d575515c9cb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNjA2Mzk2MDgxMTI3MzgwODlkMTM0YzQ3YzFkNTc1NTE1YzljYjc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-29T13:08:06Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-29T13:08:06Z"}, "message": "reduce visibility", "tree": {"sha": "7d5569b9f3551abffc5f715c99b1ee5fc10aee18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d5569b9f3551abffc5f715c99b1ee5fc10aee18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3260639608112738089d134c47c1d575515c9cb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3260639608112738089d134c47c1d575515c9cb7", "html_url": "https://github.com/rust-lang/rust/commit/3260639608112738089d134c47c1d575515c9cb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3260639608112738089d134c47c1d575515c9cb7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ec418c3b8af987e1531c5cfd5bc1e817f237036", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ec418c3b8af987e1531c5cfd5bc1e817f237036", "html_url": "https://github.com/rust-lang/rust/commit/1ec418c3b8af987e1531c5cfd5bc1e817f237036"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "cb464c3ff17d294cbe07add19f587a82e480ac31", "filename": "crates/ra_hir_expand/src/ast_id_map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3260639608112738089d134c47c1d575515c9cb7/crates%2Fra_hir_expand%2Fsrc%2Fast_id_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3260639608112738089d134c47c1d575515c9cb7/crates%2Fra_hir_expand%2Fsrc%2Fast_id_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fast_id_map.rs?ref=3260639608112738089d134c47c1d575515c9cb7", "patch": "@@ -50,7 +50,7 @@ pub struct AstIdMap {\n }\n \n impl AstIdMap {\n-    pub fn from_source(node: &SyntaxNode) -> AstIdMap {\n+    pub(crate) fn from_source(node: &SyntaxNode) -> AstIdMap {\n         assert!(node.parent().is_none());\n         let mut res = AstIdMap { arena: Arena::default() };\n         // By walking the tree in bread-first order we make sure that parents\n@@ -83,7 +83,7 @@ impl AstIdMap {\n         }\n     }\n \n-    pub fn get<N: AstNode>(&self, id: FileAstId<N>) -> AstPtr<N> {\n+    pub(crate) fn get<N: AstNode>(&self, id: FileAstId<N>) -> AstPtr<N> {\n         self.arena[id.raw].cast::<N>().unwrap()\n     }\n "}]}