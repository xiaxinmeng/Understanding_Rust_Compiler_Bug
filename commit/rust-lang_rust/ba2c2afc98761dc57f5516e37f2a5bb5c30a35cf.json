{"sha": "ba2c2afc98761dc57f5516e37f2a5bb5c30a35cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMmMyYWZjOTg3NjFkYzU3ZjU1MTZlMzdmMmE1YmI1YzMwYTM1Y2Y=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-17T23:55:30Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-18T00:00:39Z"}, "message": "rustdoc: Simplify desc_to_brief pass", "tree": {"sha": "d3624c8813bd9e763c261d1132154537ec38db84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3624c8813bd9e763c261d1132154537ec38db84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba2c2afc98761dc57f5516e37f2a5bb5c30a35cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba2c2afc98761dc57f5516e37f2a5bb5c30a35cf", "html_url": "https://github.com/rust-lang/rust/commit/ba2c2afc98761dc57f5516e37f2a5bb5c30a35cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba2c2afc98761dc57f5516e37f2a5bb5c30a35cf/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37601684c90587abe2cc29fecc71e6cb252632d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/37601684c90587abe2cc29fecc71e6cb252632d8", "html_url": "https://github.com/rust-lang/rust/commit/37601684c90587abe2cc29fecc71e6cb252632d8"}], "stats": {"total": 104, "additions": 7, "deletions": 97}, "files": [{"sha": "f45e3f9c543b71fff6209e0a4e1079fc18659cbc", "filename": "src/rustdoc/desc_to_brief_pass.rs", "status": "modified", "additions": 7, "deletions": 97, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/ba2c2afc98761dc57f5516e37f2a5bb5c30a35cf/src%2Frustdoc%2Fdesc_to_brief_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba2c2afc98761dc57f5516e37f2a5bb5c30a35cf/src%2Frustdoc%2Fdesc_to_brief_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fdesc_to_brief_pass.rs?ref=ba2c2afc98761dc57f5516e37f2a5bb5c30a35cf", "patch": "@@ -18,99 +18,29 @@ fn run(\n     doc: doc::cratedoc\n ) -> doc::cratedoc {\n     let fold = fold::fold({\n-        fold_mod: fold_mod,\n-        fold_const: fold_const,\n-        fold_fn: fold_fn,\n-        fold_enum: fold_enum,\n-        fold_res: fold_res,\n+        fold_item: fold_item,\n         fold_iface: fold_iface,\n-        fold_impl: fold_impl,\n-        fold_type: fold_type\n+        fold_impl: fold_impl\n         with *fold::default_seq_fold(())\n     });\n     fold.fold_crate(fold, doc)\n }\n \n-fn fold_mod(fold: fold::fold<()>, doc: doc::moddoc) -> doc::moddoc {\n-    let doc = fold::default_seq_fold_mod(fold, doc);\n-    let (brief, desc) = modify(doc.brief(), doc.desc());\n+fn fold_item(fold: fold::fold<()>, doc: doc::itemdoc) -> doc::itemdoc {\n+    let doc = fold::default_seq_fold_item(fold, doc);\n+    let (brief, desc) = modify(doc.brief, doc.desc);\n \n     {\n-        item: {\n-            brief: brief,\n-            desc: desc\n-            with doc.item\n-        }    \n-        with doc\n-    }\n-}\n-\n-fn fold_const(fold: fold::fold<()>, doc: doc::constdoc) -> doc::constdoc {\n-    let doc = fold::default_seq_fold_const(fold, doc);\n-    let (brief, desc) = modify(doc.brief(), doc.desc());\n-\n-    {\n-        item: {\n-            brief: brief,\n-            desc: desc\n-            with doc.item\n-        }\n-        with doc\n-    }\n-}\n-\n-fn fold_fn(fold: fold::fold<()>, doc: doc::fndoc) -> doc::fndoc {\n-    let doc = fold::default_seq_fold_fn(fold, doc);\n-    let (brief, desc) = modify(doc.brief(), doc.desc());\n-\n-    {\n-        item: {\n-            brief: brief,\n-            desc: desc\n-            with doc.item\n-        }\n-        with doc\n-    }\n-}\n-\n-fn fold_enum(fold: fold::fold<()>, doc: doc::enumdoc) -> doc::enumdoc {\n-    let doc = fold::default_seq_fold_enum(fold, doc);\n-    let (brief, desc) = modify(doc.brief(), doc.desc());\n-\n-    {\n-        item: {\n-            brief: brief,\n-            desc: desc\n-            with doc.item\n-        }\n-        with doc\n-    }\n-}\n-\n-fn fold_res(fold: fold::fold<()>, doc: doc::resdoc) -> doc::resdoc {\n-    let doc = fold::default_seq_fold_res(fold, doc);\n-    let (brief, desc) = modify(doc.brief(), doc.desc());\n-\n-    {\n-        item: {\n-            brief: brief,\n-            desc: desc\n-            with doc.item\n-        }\n+        brief: brief,\n+        desc: desc\n         with doc\n     }\n }\n \n fn fold_iface(fold: fold::fold<()>, doc: doc::ifacedoc) -> doc::ifacedoc {\n     let doc =fold::default_seq_fold_iface(fold, doc);\n-    let (brief, desc) = modify(doc.brief(), doc.desc());\n \n     {\n-        item: {\n-            brief: brief,\n-            desc: desc\n-            with doc.item\n-        },\n         methods: vec::map(doc.methods) {|doc|\n             let (brief, desc) = modify(doc.brief, doc.desc);\n \n@@ -126,14 +56,8 @@ fn fold_iface(fold: fold::fold<()>, doc: doc::ifacedoc) -> doc::ifacedoc {\n \n fn fold_impl(fold: fold::fold<()>, doc: doc::impldoc) -> doc::impldoc {\n     let doc =fold::default_seq_fold_impl(fold, doc);\n-    let (brief, desc) = modify(doc.brief(), doc.desc());\n \n     {\n-        item: {\n-            brief: brief,\n-            desc: desc\n-            with doc.item\n-        },\n         methods: vec::map(doc.methods) {|doc|\n             let (brief, desc) = modify(doc.brief, doc.desc);\n \n@@ -147,20 +71,6 @@ fn fold_impl(fold: fold::fold<()>, doc: doc::impldoc) -> doc::impldoc {\n     }\n }\n \n-fn fold_type(fold: fold::fold<()>, doc: doc::tydoc) -> doc::tydoc {\n-    let doc = fold::default_seq_fold_type(fold, doc);\n-    let (brief, desc) = modify(doc.brief(), doc.desc());\n-\n-    {\n-        item: {\n-            brief: brief,\n-            desc: desc\n-            with doc.item\n-        }\n-        with doc\n-    }\n-}\n-\n #[test]\n fn should_promote_mod_desc() {\n     let doc = test::mk_doc(\"#[doc(desc = \\\"desc\\\")] mod m { }\");"}]}