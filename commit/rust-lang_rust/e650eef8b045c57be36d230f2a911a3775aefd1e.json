{"sha": "e650eef8b045c57be36d230f2a911a3775aefd1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NTBlZWY4YjA0NWM1N2JlMzZkMjMwZjJhOTExYTM3NzVhZWZkMWU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-02-23T21:07:51Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-02-26T17:24:41Z"}, "message": "Implement opt-out from UI testing normalization", "tree": {"sha": "fb60559a6fd26eeabbfe29f012913443571cdf93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb60559a6fd26eeabbfe29f012913443571cdf93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e650eef8b045c57be36d230f2a911a3775aefd1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e650eef8b045c57be36d230f2a911a3775aefd1e", "html_url": "https://github.com/rust-lang/rust/commit/e650eef8b045c57be36d230f2a911a3775aefd1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e650eef8b045c57be36d230f2a911a3775aefd1e/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa2d9fc4b9e578d95fbf65613d1bf732fbdfb0d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa2d9fc4b9e578d95fbf65613d1bf732fbdfb0d4", "html_url": "https://github.com/rust-lang/rust/commit/fa2d9fc4b9e578d95fbf65613d1bf732fbdfb0d4"}], "stats": {"total": 143, "additions": 140, "deletions": 3}, "files": [{"sha": "3072bd64a2c7e249fd187d2e86f4c5068e76ecf4", "filename": "src/test/ui/ui-testing-optout.rs", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/e650eef8b045c57be36d230f2a911a3775aefd1e/src%2Ftest%2Fui%2Fui-testing-optout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e650eef8b045c57be36d230f2a911a3775aefd1e/src%2Ftest%2Fui%2Fui-testing-optout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fui-testing-optout.rs?ref=e650eef8b045c57be36d230f2a911a3775aefd1e", "patch": "@@ -0,0 +1,104 @@\n+// disable-ui-testing-normalization\n+\n+// Line number < 10\n+type A = B; //~ ERROR\n+\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Line number >=10, <100\n+type C = D; //~ ERROR\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+// Line num >=100\n+type E = F; //~ ERROR\n+\n+fn main() {}"}, {"sha": "c9960f999b3c23989e7c788c8c6923f466d2c32a", "filename": "src/test/ui/ui-testing-optout.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e650eef8b045c57be36d230f2a911a3775aefd1e/src%2Ftest%2Fui%2Fui-testing-optout.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e650eef8b045c57be36d230f2a911a3775aefd1e/src%2Ftest%2Fui%2Fui-testing-optout.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fui-testing-optout.stderr?ref=e650eef8b045c57be36d230f2a911a3775aefd1e", "patch": "@@ -0,0 +1,20 @@\n+error[E0412]: cannot find type `B` in this scope\n+ --> $DIR/ui-testing-optout.rs:4:10\n+  |\n+4 | type A = B; //~ ERROR\n+  |          ^ did you mean `A`?\n+\n+error[E0412]: cannot find type `D` in this scope\n+  --> $DIR/ui-testing-optout.rs:17:10\n+   |\n+17 | type C = D; //~ ERROR\n+   |          ^ did you mean `A`?\n+\n+error[E0412]: cannot find type `F` in this scope\n+   --> $DIR/ui-testing-optout.rs:102:10\n+    |\n+102 | type E = F; //~ ERROR\n+    |          ^ did you mean `A`?\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "e48f42705f16ad180dd2681214ae68171c7ec92e", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e650eef8b045c57be36d230f2a911a3775aefd1e/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e650eef8b045c57be36d230f2a911a3775aefd1e/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=e650eef8b045c57be36d230f2a911a3775aefd1e", "patch": "@@ -226,9 +226,10 @@ pub struct TestProps {\n     pub must_compile_successfully: bool,\n     // rustdoc will test the output of the `--test` option\n     pub check_test_line_numbers_match: bool,\n-    // The test must be compiled and run successfully. Only used in UI tests for\n-    // now.\n+    // The test must be compiled and run successfully. Only used in UI tests for now.\n     pub run_pass: bool,\n+    // Do not pass `-Z ui-testing` to UI tests\n+    pub disable_ui_testing_normalization: bool,\n     // customized normalization rules\n     pub normalize_stdout: Vec<(String, String)>,\n     pub normalize_stderr: Vec<(String, String)>,\n@@ -259,6 +260,7 @@ impl TestProps {\n             must_compile_successfully: false,\n             check_test_line_numbers_match: false,\n             run_pass: false,\n+            disable_ui_testing_normalization: false,\n             normalize_stdout: vec![],\n             normalize_stderr: vec![],\n             failure_status: 101,\n@@ -379,6 +381,11 @@ impl TestProps {\n                     config.parse_must_compile_successfully(ln) || self.run_pass;\n             }\n \n+            if !self.disable_ui_testing_normalization {\n+                self.disable_ui_testing_normalization =\n+                    config.parse_disable_ui_testing_normalization(ln);\n+            }\n+\n             if let Some(rule) = config.parse_custom_normalization(ln, \"normalize-stdout\") {\n                 self.normalize_stdout.push(rule);\n             }\n@@ -505,6 +512,10 @@ impl Config {\n         self.parse_name_directive(line, \"must-compile-successfully\")\n     }\n \n+    fn parse_disable_ui_testing_normalization(&self, line: &str) -> bool {\n+        self.parse_name_directive(line, \"disable-ui-testing-normalization\")\n+    }\n+\n     fn parse_check_test_line_numbers_match(&self, line: &str) -> bool {\n         self.parse_name_directive(line, \"check-test-line-numbers-match\")\n     }"}, {"sha": "d3f571dd8aeb46d1e892013cbd7715597973617c", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e650eef8b045c57be36d230f2a911a3775aefd1e/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e650eef8b045c57be36d230f2a911a3775aefd1e/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=e650eef8b045c57be36d230f2a911a3775aefd1e", "patch": "@@ -1632,7 +1632,9 @@ impl<'test> TestCx<'test> {\n                 // a first time to get the compiler's output then compile with\n                 // \"--error-format json\" to check if all expected errors are actually there\n                 // and that no new one appeared.\n-                rustc.arg(\"-Zui-testing\");\n+                if !self.props.disable_ui_testing_normalization {\n+                    rustc.arg(\"-Zui-testing\");\n+                }\n             }\n             MirOpt => {\n                 rustc.args(&["}]}