{"sha": "9e5def9616aba274a6c3138d9f66e778d50c35e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllNWRlZjk2MTZhYmEyNzRhNmMzMTM4ZDlmNjZlNzc4ZDUwYzM1ZTA=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-02-22T01:21:50Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-03-06T17:28:38Z"}, "message": "rust-lldb: fix crash when printing empty string", "tree": {"sha": "ea75e44389d8de50225c940509d7b4f592013d14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea75e44389d8de50225c940509d7b4f592013d14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e5def9616aba274a6c3138d9f66e778d50c35e0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlyAA0wWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdASuCACUBGytXejkPqrQyBij3LQC1gQs\n2fjR0eUzx4bE7Fdo7Uk5rvsgsaIwTF0PrUqbR1iYmbD0mVpvm9692wKG+lGkgGWK\nthY5cIFO1zL6myZoGOCwqCBa1L7nzSQzcUihuCKRcqRaTdC5Wqj2ru9JiiveJLdw\nLjvvU/398HvopJDtawb0n78/Ufcid0Vh5n0J6t7hrXPLB/s2PzpjHEo9AC7swSNd\nh5Q2oeYb4faJqrxY8/v91bkBh9lyAGVR4lJi3/Mt2xLkbyD8cCywglqzNhWKm0Ir\nvt6dbk5yspKbJGLlFjQoXJrFirfQh1rxzNV1ob3qFLsLuMWrvoieVkpSwXvA\n=vpLk\n-----END PGP SIGNATURE-----", "payload": "tree ea75e44389d8de50225c940509d7b4f592013d14\nparent 7f19f161f24c9a02ff8c3f73122d0b015039221f\nauthor Andy Russell <arussell123@gmail.com> 1550798510 -0500\ncommitter Andy Russell <arussell123@gmail.com> 1551893318 -0500\n\nrust-lldb: fix crash when printing empty string\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e5def9616aba274a6c3138d9f66e778d50c35e0", "html_url": "https://github.com/rust-lang/rust/commit/9e5def9616aba274a6c3138d9f66e778d50c35e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e5def9616aba274a6c3138d9f66e778d50c35e0/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f19f161f24c9a02ff8c3f73122d0b015039221f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f19f161f24c9a02ff8c3f73122d0b015039221f", "html_url": "https://github.com/rust-lang/rust/commit/7f19f161f24c9a02ff8c3f73122d0b015039221f"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "fdc1c4fa0cc38d95d0f74e324b596dbcec729347", "filename": "src/etc/lldb_rust_formatters.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e5def9616aba274a6c3138d9f66e778d50c35e0/src%2Fetc%2Flldb_rust_formatters.py", "raw_url": "https://github.com/rust-lang/rust/raw/9e5def9616aba274a6c3138d9f66e778d50c35e0/src%2Fetc%2Flldb_rust_formatters.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_rust_formatters.py?ref=9e5def9616aba274a6c3138d9f66e778d50c35e0", "patch": "@@ -290,6 +290,8 @@ def render_element(i):\n \n \n def read_utf8_string(ptr_val, byte_count):\n+    if byte_count == 0:\n+        return '\"\"'\n     error = lldb.SBError()\n     process = ptr_val.get_wrapped_value().GetProcess()\n     data = process.ReadMemory(ptr_val.as_integer(), byte_count, error)"}, {"sha": "8c5f67a66043e39fa454a3deda30176e908b9e36", "filename": "src/test/debuginfo/empty-string.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/9e5def9616aba274a6c3138d9f66e778d50c35e0/src%2Ftest%2Fdebuginfo%2Fempty-string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e5def9616aba274a6c3138d9f66e778d50c35e0/src%2Ftest%2Fdebuginfo%2Fempty-string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fempty-string.rs?ref=9e5def9616aba274a6c3138d9f66e778d50c35e0", "patch": "@@ -0,0 +1,35 @@\n+// ignore-windows failing on win32 bot\n+// ignore-android: FIXME(#10381)\n+// compile-flags:-g\n+// min-gdb-version: 7.7\n+// min-lldb-version: 310\n+\n+// === GDB TESTS ===================================================================================\n+\n+// gdb-command: run\n+\n+// gdb-command: print empty_string\n+// gdb-check:$1 = \"\"\n+\n+// gdb-command: print empty_str\n+// gdb-check:$2 = \"\"\n+\n+// === LLDB TESTS ==================================================================================\n+\n+// lldb-command: run\n+\n+// lldb-command: fr v empty_string\n+// lldb-check:[...]empty_string = \"\"\n+\n+// lldb-command: fr v empty_str\n+// lldb-check:[...]empty_str = \"\"\n+\n+fn main() {\n+    let empty_string = String::new();\n+\n+    let empty_str = \"\";\n+\n+    zzz(); // #break\n+}\n+\n+fn zzz() {}"}]}