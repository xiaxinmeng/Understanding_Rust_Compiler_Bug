{"sha": "48811048f853128ad87bc62bb611ecb73522be41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4ODExMDQ4Zjg1MzEyOGFkODdiYzYyYmI2MTFlY2I3MzUyMmJlNDE=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-10-28T17:24:29Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-11-15T18:33:32Z"}, "message": "Allow `Validator` to get qualifs for the return place", "tree": {"sha": "f3d79cea34b692f9b14db0dd6064e22f303a962d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3d79cea34b692f9b14db0dd6064e22f303a962d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48811048f853128ad87bc62bb611ecb73522be41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48811048f853128ad87bc62bb611ecb73522be41", "html_url": "https://github.com/rust-lang/rust/commit/48811048f853128ad87bc62bb611ecb73522be41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48811048f853128ad87bc62bb611ecb73522be41/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbae15a41b11624b26cf25f1fa414e3280d9f47f", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbae15a41b11624b26cf25f1fa414e3280d9f47f", "html_url": "https://github.com/rust-lang/rust/commit/dbae15a41b11624b26cf25f1fa414e3280d9f47f"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "53fb0bab80f83425dda94733906d145cb46cf50d", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/48811048f853128ad87bc62bb611ecb73522be41/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48811048f853128ad87bc62bb611ecb73522be41/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=48811048f853128ad87bc62bb611ecb73522be41", "patch": "@@ -17,7 +17,7 @@ use self::old_dataflow::IndirectlyMutableLocals;\n use super::ops::{self, NonConstOp};\n use super::qualifs::{HasMutInterior, NeedsDrop};\n use super::resolver::FlowSensitiveAnalysis;\n-use super::{ConstKind, Item, Qualif, is_lang_panic_fn};\n+use super::{ConstKind, Item, Qualif, QualifSet, is_lang_panic_fn};\n \n #[derive(Copy, Clone, Debug, PartialEq, Eq)]\n pub enum CheckOpResult {\n@@ -85,6 +85,19 @@ impl Qualifs<'a, 'mir, 'tcx> {\n             || self.indirectly_mutable(local, location)\n     }\n \n+    /// Returns `true` if `local` is `HasMutInterior` at the given `Location`.\n+    ///\n+    /// Only updates the cursor if absolutely necessary.\n+    fn has_mut_interior_lazy_seek(&mut self, local: Local, location: Location) -> bool {\n+        if !self.has_mut_interior.in_any_value_of_ty.contains(local) {\n+            return false;\n+        }\n+\n+        self.has_mut_interior.cursor.seek_before(location);\n+        self.has_mut_interior.cursor.get().contains(local)\n+            || self.indirectly_mutable(local, location)\n+    }\n+\n     /// Returns `true` if `local` is `HasMutInterior`, but requires the `has_mut_interior` and\n     /// `indirectly_mutable` cursors to be updated beforehand.\n     fn has_mut_interior_eager_seek(&self, local: Local) -> bool {\n@@ -95,6 +108,37 @@ impl Qualifs<'a, 'mir, 'tcx> {\n         self.has_mut_interior.cursor.get().contains(local)\n             || self.indirectly_mutable.get().contains(local)\n     }\n+\n+    fn in_return_place(&mut self, item: &Item<'_, 'tcx>) -> QualifSet {\n+        // Find the `Return` terminator if one exists.\n+        //\n+        // If no `Return` terminator exists, this MIR is divergent. Just return the conservative\n+        // qualifs for the return type.\n+        let return_block = item.body\n+            .basic_blocks()\n+            .iter_enumerated()\n+            .find(|(_, block)| {\n+                match block.terminator().kind {\n+                    TerminatorKind::Return => true,\n+                    _ => false,\n+                }\n+            })\n+            .map(|(bb, _)| bb);\n+\n+        let return_block = match return_block {\n+            None => return QualifSet::in_any_value_of_ty(item, item.body.return_ty()),\n+            Some(bb) => bb,\n+        };\n+\n+        let return_loc = item.body.terminator_loc(return_block);\n+\n+        let mut qualifs = QualifSet::default();\n+\n+        qualifs.set::<NeedsDrop>(self.needs_drop_lazy_seek(RETURN_PLACE, return_loc));\n+        qualifs.set::<HasMutInterior>(self.has_mut_interior_lazy_seek(RETURN_PLACE, return_loc));\n+\n+        qualifs\n+    }\n }\n \n pub struct Validator<'a, 'mir, 'tcx> {"}]}