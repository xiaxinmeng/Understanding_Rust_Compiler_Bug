{"sha": "943ea7fae53ac71cd8ddf5c215a750c9ab616eee", "node_id": "C_kwDOAAsO6NoAKDk0M2VhN2ZhZTUzYWM3MWNkOGRkZjVjMjE1YTc1MGM5YWI2MTZlZWU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-03-30T22:26:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-30T22:26:28Z"}, "message": "Rollup merge of #94806 - jyn514:cargo-run-tidy, r=Mark-Simulacrum\n\nFix `cargo run tidy`\n\nWhen I implemented rust-only bootstrapping in https://github.com/rust-lang/rust/pull/92260,\nI neglected to test stage0 tools - it turns out they were broken because\nthey couldn't find the sysroot of the initial bootstrap compiler.\n\nThis fixes stage0 tools by using `rustc --print sysroot` instead of assuming rustc is already in a\nsysroot and hard-coding the relative directory.\n\nFixes https://github.com/rust-lang/rust/issues/94797 (properly, without having to change rustup).", "tree": {"sha": "dc090162ec93e02f703b4c55bcab3dd7f3fe2751", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc090162ec93e02f703b4c55bcab3dd7f3fe2751"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/943ea7fae53ac71cd8ddf5c215a750c9ab616eee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiRNkVCRBK7hj4Ov3rIwAAEMgIAJZPMyhglsNvbNRUGeKvvz8A\nQc0qV7eNT0etW2z61GQPajcvLp6lNg90rbakduP5raZE8Js9JNaWTdNNHWtWht39\ni3uwSBi5ap/vn/QW5TDcxdBFqTnCq5PiBxXVSQA+h2b6gfPk6uLuqG0mXUBAuTk9\nJYqPb/CiScBEZpqtdAUDcbV7dSL1Pa942cEWbFk2cTrBmzVN5VMsyEk/3BGGFbwD\nEGdKQcLOtAmOuGUGXWHx9efhTCkSP6N/W6I4gDeeBMGIIyLkXQ/nygCL/gHzHkFU\nPBf0WGTY8cCPjZRp8O921/0aj0WnxcZHT//QG7nnBElB5IQ3w7DOu/A16/JHsM8=\n=IYEh\n-----END PGP SIGNATURE-----\n", "payload": "tree dc090162ec93e02f703b4c55bcab3dd7f3fe2751\nparent b75f384d0b0227000eff393e5d4e11bda56b293f\nparent 25a7d2d540656e0499a43bfd01243250f2a25d7a\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1648679188 +0200\ncommitter GitHub <noreply@github.com> 1648679188 +0200\n\nRollup merge of #94806 - jyn514:cargo-run-tidy, r=Mark-Simulacrum\n\nFix `cargo run tidy`\n\nWhen I implemented rust-only bootstrapping in https://github.com/rust-lang/rust/pull/92260,\nI neglected to test stage0 tools - it turns out they were broken because\nthey couldn't find the sysroot of the initial bootstrap compiler.\n\nThis fixes stage0 tools by using `rustc --print sysroot` instead of assuming rustc is already in a\nsysroot and hard-coding the relative directory.\n\nFixes https://github.com/rust-lang/rust/issues/94797 (properly, without having to change rustup).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/943ea7fae53ac71cd8ddf5c215a750c9ab616eee", "html_url": "https://github.com/rust-lang/rust/commit/943ea7fae53ac71cd8ddf5c215a750c9ab616eee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/943ea7fae53ac71cd8ddf5c215a750c9ab616eee/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b75f384d0b0227000eff393e5d4e11bda56b293f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b75f384d0b0227000eff393e5d4e11bda56b293f", "html_url": "https://github.com/rust-lang/rust/commit/b75f384d0b0227000eff393e5d4e11bda56b293f"}, {"sha": "25a7d2d540656e0499a43bfd01243250f2a25d7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/25a7d2d540656e0499a43bfd01243250f2a25d7a", "html_url": "https://github.com/rust-lang/rust/commit/25a7d2d540656e0499a43bfd01243250f2a25d7a"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "570a61742bcf3deea8220abf009d02b420f8188f", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/943ea7fae53ac71cd8ddf5c215a750c9ab616eee/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/943ea7fae53ac71cd8ddf5c215a750c9ab616eee/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=943ea7fae53ac71cd8ddf5c215a750c9ab616eee", "patch": "@@ -117,6 +117,7 @@ use std::os::unix::fs::symlink as symlink_file;\n use std::os::windows::fs::symlink_file;\n \n use filetime::FileTime;\n+use once_cell::sync::OnceCell;\n \n use crate::builder::Kind;\n use crate::config::{LlvmLibunwind, TargetSelection};\n@@ -904,7 +905,12 @@ impl Build {\n \n     /// Returns the sysroot of the snapshot compiler.\n     fn rustc_snapshot_sysroot(&self) -> &Path {\n-        self.initial_rustc.parent().unwrap().parent().unwrap()\n+        static SYSROOT_CACHE: OnceCell<PathBuf> = once_cell::sync::OnceCell::new();\n+        SYSROOT_CACHE.get_or_init(|| {\n+            let mut rustc = Command::new(&self.initial_rustc);\n+            rustc.args(&[\"--print\", \"sysroot\"]);\n+            output(&mut rustc).trim().into()\n+        })\n     }\n \n     /// Runs a command, printing out nice contextual information if it fails."}]}