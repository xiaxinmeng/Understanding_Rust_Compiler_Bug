{"sha": "f242e295e46b5b45e4e55e1d983dc3b8d11c746a", "node_id": "C_kwDOAAsO6NoAKGYyNDJlMjk1ZTQ2YjViNDVlNGU1NWUxZDk4M2RjM2I4ZDExYzc0NmE", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-07-07T12:36:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-07T12:36:54Z"}, "message": "Rollup merge of #98973 - GuillaumeGomez:inherent-impl-anchors, r=notriddle\n\nRemove (unused) inherent impl anchors\n\nThis is something `@notriddle` realized a few days ago: we have unused anchors in the DOM.\n\nThis PR removes them.\n\nYou can test it [here](https://rustdoc.crud.net/imperio/inherent-impl-anchors/foo/index.html).\n\nr? `@notriddle`", "tree": {"sha": "1c6b7fa196a892d960d11d724ca1514ff61ac3c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c6b7fa196a892d960d11d724ca1514ff61ac3c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f242e295e46b5b45e4e55e1d983dc3b8d11c746a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJixtNmCRBK7hj4Ov3rIwAAl7MIAAmQjOXFwFNEt/eSy7JoCR2e\nmx0LtFemcBBMC+Bqdn6h2ik6NLwh5FR938Px7vBFVaV5nOdcC/8sdIIk42EvC9x9\nSWWo5Hhx6zWBafBYiRXxyAJLcteK9RhP+dJhEBy7u/vjt2StHqH836iuLySGq3F+\n70RLn6AUIMHYShhHXZ7H51im5Zd0olduWDBNft9gENTOn9grzbxj0F4XejKMaFu1\n8BhZ0H1Nd0k2arz1KKDDx+DJsU7oL4Qpbwkdt8Ec2oiUA5XwCY7Oub5y/OhYVDDm\nuyFf1tv9n54WEnhtfsGW8D4LfgMOA1h5O0XfQmGxV+PYMqaqG7p0x+4zmIx4F8g=\n=vxwE\n-----END PGP SIGNATURE-----\n", "payload": "tree 1c6b7fa196a892d960d11d724ca1514ff61ac3c1\nparent 71b3fbdb47d940ccdb2aef06cf3f989057e30824\nparent 7967152eeeffbf86f20186d08f6faff1c859a211\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1657197414 +0530\ncommitter GitHub <noreply@github.com> 1657197414 +0530\n\nRollup merge of #98973 - GuillaumeGomez:inherent-impl-anchors, r=notriddle\n\nRemove (unused) inherent impl anchors\n\nThis is something `@notriddle` realized a few days ago: we have unused anchors in the DOM.\n\nThis PR removes them.\n\nYou can test it [here](https://rustdoc.crud.net/imperio/inherent-impl-anchors/foo/index.html).\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f242e295e46b5b45e4e55e1d983dc3b8d11c746a", "html_url": "https://github.com/rust-lang/rust/commit/f242e295e46b5b45e4e55e1d983dc3b8d11c746a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71b3fbdb47d940ccdb2aef06cf3f989057e30824", "url": "https://api.github.com/repos/rust-lang/rust/commits/71b3fbdb47d940ccdb2aef06cf3f989057e30824", "html_url": "https://github.com/rust-lang/rust/commit/71b3fbdb47d940ccdb2aef06cf3f989057e30824"}, {"sha": "7967152eeeffbf86f20186d08f6faff1c859a211", "url": "https://api.github.com/repos/rust-lang/rust/commits/7967152eeeffbf86f20186d08f6faff1c859a211", "html_url": "https://github.com/rust-lang/rust/commit/7967152eeeffbf86f20186d08f6faff1c859a211"}], "stats": {"total": 76, "additions": 72, "deletions": 4}, "files": [{"sha": "796bd7715180cf1675c5c6d7b0f320f052024fa6", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=f242e295e46b5b45e4e55e1d983dc3b8d11c746a", "patch": "@@ -1412,7 +1412,10 @@ fn render_impl(\n                         id, item_type, in_trait_class,\n                     );\n                     render_rightside(w, cx, item, containing_item, render_mode);\n-                    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                    if trait_.is_some() {\n+                        // Anchors are only used on trait impls.\n+                        write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                    }\n                     w.write_str(\"<h4 class=\\\"code-header\\\">\");\n                     render_assoc_item(\n                         w,\n@@ -1435,7 +1438,10 @@ fn render_impl(\n                     id, item_type, in_trait_class\n                 );\n                 render_rightside(w, cx, item, containing_item, render_mode);\n-                write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                if trait_.is_some() {\n+                    // Anchors are only used on trait impls.\n+                    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                }\n                 w.write_str(\"<h4 class=\\\"code-header\\\">\");\n                 assoc_const(\n                     w,\n@@ -1457,7 +1463,10 @@ fn render_impl(\n                 let source_id = format!(\"{}.{}\", item_type, name);\n                 let id = cx.derive_id(source_id.clone());\n                 write!(w, \"<section id=\\\"{}\\\" class=\\\"{}{}\\\">\", id, item_type, in_trait_class);\n-                write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                if trait_.is_some() {\n+                    // Anchors are only used on trait impls.\n+                    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                }\n                 w.write_str(\"<h4 class=\\\"code-header\\\">\");\n                 assoc_type(\n                     w,\n@@ -1480,7 +1489,10 @@ fn render_impl(\n                     \"<section id=\\\"{}\\\" class=\\\"{}{} has-srclink\\\">\",\n                     id, item_type, in_trait_class\n                 );\n-                write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                if trait_.is_some() {\n+                    // Anchors are only used on trait impls.\n+                    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                }\n                 w.write_str(\"<h4 class=\\\"code-header\\\">\");\n                 assoc_type(\n                     w,"}, {"sha": "98f47e53038a99a0918f1b3b6ee2199930ea0c52", "filename": "src/test/rustdoc/anchors.no_const_anchor.html", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Ftest%2Frustdoc%2Fanchors.no_const_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Ftest%2Frustdoc%2Fanchors.no_const_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.no_const_anchor.html?ref=f242e295e46b5b45e4e55e1d983dc3b8d11c746a", "patch": "@@ -0,0 +1 @@\n+<div id=\"associatedconstant.YOLO\" class=\"method has-srclink\"><div class=\"rightside\"><a class=\"srclink\" href=\"../src/foo/anchors.rs.html#16\">source</a></div><h4 class=\"code-header\">const <a href=\"#associatedconstant.YOLO\" class=\"constant\">YOLO</a>: <a class=\"primitive\" href=\"{{channel}}/std/primitive.u32.html\">u32</a></h4></div>"}, {"sha": "6d37e8e5eee5e1cd0b79a2f15728b3b3dce724d0", "filename": "src/test/rustdoc/anchors.no_const_anchor2.html", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Ftest%2Frustdoc%2Fanchors.no_const_anchor2.html", "raw_url": "https://github.com/rust-lang/rust/raw/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Ftest%2Frustdoc%2Fanchors.no_const_anchor2.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.no_const_anchor2.html?ref=f242e295e46b5b45e4e55e1d983dc3b8d11c746a", "patch": "@@ -0,0 +1 @@\n+<section id=\"associatedconstant.X\" class=\"associatedconstant has-srclink\"><span class=\"rightside\"><a class=\"srclink\" href=\"../src/foo/anchors.rs.html#42\">source</a></span><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.X\" class=\"constant\">X</a>: <a class=\"primitive\" href=\"{{channel}}/std/primitive.i32.html\">i32</a> = 0i32</h4></section>"}, {"sha": "f46d3090ed37054ec5bbd86c69d510747f28f22d", "filename": "src/test/rustdoc/anchors.no_method_anchor.html", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Ftest%2Frustdoc%2Fanchors.no_method_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Ftest%2Frustdoc%2Fanchors.no_method_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.no_method_anchor.html?ref=f242e295e46b5b45e4e55e1d983dc3b8d11c746a", "patch": "@@ -0,0 +1 @@\n+<section id=\"method.new\" class=\"method has-srclink\"><span class=\"rightside\"><a class=\"srclink\" href=\"../src/foo/anchors.rs.html#48\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"#method.new\" class=\"fnname\">new</a>() -&gt; Self</h4></section>\n\\ No newline at end of file"}, {"sha": "445a7bb560acaf4baeb3a66a59603dc9bb1973d8", "filename": "src/test/rustdoc/anchors.no_trait_method_anchor.html", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Ftest%2Frustdoc%2Fanchors.no_trait_method_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Ftest%2Frustdoc%2Fanchors.no_trait_method_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.no_trait_method_anchor.html?ref=f242e295e46b5b45e4e55e1d983dc3b8d11c746a", "patch": "@@ -0,0 +1 @@\n+<div id=\"method.bar\" class=\"method has-srclink\"><div class=\"rightside\"><a class=\"srclink\" href=\"../src/foo/anchors.rs.html#23\">source</a></div><h4 class=\"code-header\">fn <a href=\"#method.bar\" class=\"fnname\">bar</a>()</h4></div>\n\\ No newline at end of file"}, {"sha": "bb0771b10035dfe3867003cf49b5223f179ce690", "filename": "src/test/rustdoc/anchors.no_tymethod_anchor.html", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Ftest%2Frustdoc%2Fanchors.no_tymethod_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Ftest%2Frustdoc%2Fanchors.no_tymethod_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.no_tymethod_anchor.html?ref=f242e295e46b5b45e4e55e1d983dc3b8d11c746a", "patch": "@@ -0,0 +1 @@\n+<div id=\"tymethod.foo\" class=\"method has-srclink\"><div class=\"rightside\"><a class=\"srclink\" href=\"../src/foo/anchors.rs.html#20\">source</a></div><h4 class=\"code-header\">fn <a href=\"#tymethod.foo\" class=\"fnname\">foo</a>()</h4></div>\n\\ No newline at end of file"}, {"sha": "d317eb5005017cb26f81b556d01236a02c83e8d4", "filename": "src/test/rustdoc/anchors.no_type_anchor.html", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Ftest%2Frustdoc%2Fanchors.no_type_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Ftest%2Frustdoc%2Fanchors.no_type_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.no_type_anchor.html?ref=f242e295e46b5b45e4e55e1d983dc3b8d11c746a", "patch": "@@ -0,0 +1 @@\n+<div id=\"associatedtype.T\" class=\"method has-srclink\"><div class=\"rightside\"><a class=\"srclink\" href=\"../src/foo/anchors.rs.html#13\">source</a></div><h4 class=\"code-header\">type <a href=\"#associatedtype.T\" class=\"associatedtype\">T</a></h4></div>\n\\ No newline at end of file"}, {"sha": "72a1186bf7e301853072bcc0ec84267971911fba", "filename": "src/test/rustdoc/anchors.no_type_anchor2.html", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Ftest%2Frustdoc%2Fanchors.no_type_anchor2.html", "raw_url": "https://github.com/rust-lang/rust/raw/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Ftest%2Frustdoc%2Fanchors.no_type_anchor2.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.no_type_anchor2.html?ref=f242e295e46b5b45e4e55e1d983dc3b8d11c746a", "patch": "@@ -0,0 +1 @@\n+<section id=\"associatedtype.Y\" class=\"associatedtype has-srclink\"><h4 class=\"code-header\">type <a href=\"#associatedtype.Y\" class=\"associatedtype\">Y</a> = <a class=\"primitive\" href=\"{{channel}}/std/primitive.u32.html\">u32</a></h4></section>"}, {"sha": "034cf8eaf4ff7a5e34948cb552b2f5531587d531", "filename": "src/test/rustdoc/anchors.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Ftest%2Frustdoc%2Fanchors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f242e295e46b5b45e4e55e1d983dc3b8d11c746a/src%2Ftest%2Frustdoc%2Fanchors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.rs?ref=f242e295e46b5b45e4e55e1d983dc3b8d11c746a", "patch": "@@ -0,0 +1,49 @@\n+// This test ensures that anchors are generated in the right places.\n+\n+#![feature(inherent_associated_types)]\n+#![allow(incomplete_features)]\n+#![crate_name = \"foo\"]\n+\n+pub struct Foo;\n+\n+// @has 'foo/trait.Bar.html'\n+pub trait Bar {\n+    // There should be no anchors here.\n+    // @snapshot no_type_anchor - '//*[@id=\"associatedtype.T\"]'\n+    type T;\n+    // There should be no anchors here.\n+    // @snapshot no_const_anchor - '//*[@id=\"associatedconstant.YOLO\"]'\n+    const YOLO: u32;\n+\n+    // There should be no anchors here.\n+    // @snapshot no_tymethod_anchor - '//*[@id=\"tymethod.foo\"]'\n+    fn foo();\n+    // There should be no anchors here.\n+    // @snapshot no_trait_method_anchor - '//*[@id=\"method.bar\"]'\n+    fn bar() {}\n+}\n+\n+// @has 'foo/struct.Foo.html'\n+impl Bar for Foo {\n+    // @has - '//*[@id=\"associatedtype.T\"]/a[@class=\"anchor\"]' ''\n+    type T = u32;\n+    // @has - '//*[@id=\"associatedconstant.YOLO\"]/a[@class=\"anchor\"]' ''\n+    const YOLO: u32 = 0;\n+\n+    // @has - '//*[@id=\"method.foo\"]/a[@class=\"anchor\"]' ''\n+    fn foo() {}\n+    // Same check for provided \"bar\" method.\n+    // @has - '//*[@id=\"method.bar\"]/a[@class=\"anchor\"]' ''\n+}\n+\n+impl Foo {\n+    // @snapshot no_const_anchor2 - '//*[@id=\"associatedconstant.X\"]'\n+    // There should be no anchors here.\n+    pub const X: i32 = 0;\n+    // @snapshot no_type_anchor2 - '//*[@id=\"associatedtype.Y\"]'\n+    // There should be no anchors here.\n+    pub type Y = u32;\n+    // @snapshot no_method_anchor - '//*[@id=\"method.new\"]'\n+    // There should be no anchors here.\n+    pub fn new() -> Self { Self }\n+}"}]}