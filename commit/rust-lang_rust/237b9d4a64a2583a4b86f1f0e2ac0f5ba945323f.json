{"sha": "237b9d4a64a2583a4b86f1f0e2ac0f5ba945323f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzN2I5ZDRhNjRhMjU4M2E0Yjg2ZjFmMGUyYWMwZjViYTk0NTMyM2Y=", "commit": {"author": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-07-28T23:34:22Z"}, "committer": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-07-28T23:34:22Z"}, "message": "Test the deque more and fix uncovered off-by-one bug.", "tree": {"sha": "a4e4fde9754634718277ed8743a14eeb4a6e3434", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4e4fde9754634718277ed8743a14eeb4a6e3434"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/237b9d4a64a2583a4b86f1f0e2ac0f5ba945323f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/237b9d4a64a2583a4b86f1f0e2ac0f5ba945323f", "html_url": "https://github.com/rust-lang/rust/commit/237b9d4a64a2583a4b86f1f0e2ac0f5ba945323f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/237b9d4a64a2583a4b86f1f0e2ac0f5ba945323f/comments", "author": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f282c5ccc001ba377dfeee6f347ef56b73c86f4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f282c5ccc001ba377dfeee6f347ef56b73c86f4e", "html_url": "https://github.com/rust-lang/rust/commit/f282c5ccc001ba377dfeee6f347ef56b73c86f4e"}], "stats": {"total": 61, "additions": 43, "deletions": 18}, "files": [{"sha": "bd42d7cb2dc0d8f6a26b12be4cac21c14bb0be08", "filename": "src/lib/deque.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/237b9d4a64a2583a4b86f1f0e2ac0f5ba945323f/src%2Flib%2Fdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/237b9d4a64a2583a4b86f1f0e2ac0f5ba945323f/src%2Flib%2Fdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fdeque.rs?ref=237b9d4a64a2583a4b86f1f0e2ac0f5ba945323f", "patch": "@@ -79,23 +79,22 @@ fn create[T]() -> t[T] {\n       if (lo == hi) {\n         elts = grow[T](nelts, oldlo, elts);\n         lo = _vec.len[cell[T]](elts) - 1u;\n-        hi = nelts - 1u;\n+        hi = nelts;\n       }\n \n       elts.(lo as int) = util.some[T](t);\n       nelts += 1u;\n     }\n \n     fn add_back(&T t) {\n-      hi = (hi + 1u) % _vec.len[cell[T]](elts);\n-\n-      if (lo == hi) {\n+      if (lo == hi && nelts != 0u) {\n         elts = grow[T](nelts, lo, elts);\n         lo = 0u;\n         hi = nelts;\n       }\n \n       elts.(hi as int) = util.some[T](t);\n+      hi = (hi + 1u) % _vec.len[cell[T]](elts);\n       nelts += 1u;\n     }\n \n@@ -111,15 +110,14 @@ fn create[T]() -> t[T] {\n     }\n \n     fn pop_back() -> T {\n-      let T t = get[T](elts, hi);\n-      elts.(hi as int) = util.none[T]();\n-\n       if (hi == 0u) {\n         hi = _vec.len[cell[T]](elts) - 1u;\n       } else {\n         hi -= 1u;\n       }\n \n+      let T t = get[T](elts, hi);\n+      elts.(hi as int) = util.none[T]();\n       ret t;\n     }\n \n@@ -128,7 +126,7 @@ fn create[T]() -> t[T] {\n     }\n \n     fn peek_back() -> T {\n-      ret get[T](elts, hi);\n+      ret get[T](elts, hi - 1u);\n     }\n \n     fn get(int i) -> T {"}, {"sha": "003fb9a27b1e3a0bbb13fec451648bcd3f876a5c", "filename": "src/test/run-pass/lib-deque.rs", "status": "modified", "additions": 37, "deletions": 10, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/237b9d4a64a2583a4b86f1f0e2ac0f5ba945323f/src%2Ftest%2Frun-pass%2Flib-deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/237b9d4a64a2583a4b86f1f0e2ac0f5ba945323f/src%2Ftest%2Frun-pass%2Flib-deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-deque.rs?ref=237b9d4a64a2583a4b86f1f0e2ac0f5ba945323f", "patch": "@@ -3,15 +3,42 @@\n use std;\n import std.deque;\n \n+fn test_simple() {\n+  let deque.t[int] d = deque.create[int]();\n+  check (d.size() == 0u);\n+  d.add_front(17);\n+  d.add_front(42);\n+  d.add_back(137);\n+  check (d.size() == 3u);\n+  d.add_back(137);\n+  check (d.size() == 4u);\n+\n+  log d.peek_front();\n+  check (d.peek_front() == 42);\n+\n+  log d.peek_back();\n+  check (d.peek_back() == 137);\n+\n+  let int i = d.pop_front();\n+  log i;\n+  check (i == 42);\n+\n+  i = d.pop_back();\n+  log i;\n+  check (i == 137);\n+\n+  i = d.pop_back();\n+  log i;\n+  check (i == 137);\n+\n+  i = d.pop_back();\n+  log i;\n+  check (i == 17);\n+\n+  /* FIXME (issue #138):  Test d.get() once it no longer causes\n+   * segfault. */\n+}\n+\n fn main() {\n-  let deque.t[int] d1 = deque.create[int]();\n-  check (d1.size() == 0u);\n-  d1.add_front(17);\n-  d1.add_front(42);\n-  d1.add_back(137);\n-  check (d1.size() == 3u);\n-  d1.add_back(137);\n-  check (d1.size() == 4u);\n-  /* FIXME (issue #133):  We should check that the numbers come back\n-   * to us correctly once the deque stops zeroing them out. */\n+  test_simple();\n }"}]}