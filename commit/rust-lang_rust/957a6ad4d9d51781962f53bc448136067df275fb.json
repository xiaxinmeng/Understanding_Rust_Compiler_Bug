{"sha": "957a6ad4d9d51781962f53bc448136067df275fb", "node_id": "C_kwDOAAsO6NoAKDk1N2E2YWQ0ZDlkNTE3ODE5NjJmNTNiYzQ0ODEzNjA2N2RmMjc1ZmI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-29T13:51:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-29T13:51:15Z"}, "message": "Rollup merge of #110644 - pietroalbini:pa-json-formatting-tests, r=Mark-Simulacrum\n\nUpdate tests for libtest `--format json`\n\nThis PR makes the test work on beta and stable, and adds a test ensuring the option is not available on beta and stable. Backported these commits from https://github.com/rust-lang/rust/pull/110414.", "tree": {"sha": "bfc080aa4adb66e21782bd1dd78888b772603fff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfc080aa4adb66e21782bd1dd78888b772603fff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/957a6ad4d9d51781962f53bc448136067df275fb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkTSDTCRBK7hj4Ov3rIwAASUgIAAk8sBkLrR1Pj3d+dMat8G5r\nT8sDKX4VSUsBXQhoL6Dwf3PVzgu8KF0a6EMARMYu2ExkNw4a47o/aX440DUSOvMV\nFabov8sCvDMX/YHGoGGvVOTqoyVwnMM1BmhITRvvKck036lsFr3ahWmt383hH6nN\n5t/AP1jwq7ZNHyWnIZ6AX16EDWqtS/3OfVehylOrdiLcubwDNoBU+gGzANceAmRD\nYbDyEd3aCT0ZwHK3iDLy1zSy5rbAhLTA3qGG+S7QT9rlJPmWK8m2pffS7LNeSQ91\nQt1+KN31NC7IEfxs4zEFeWb7iEgiGrH//59Iw/1c0l4IBOXKLPQYwtx/una5f/o=\n=rbxH\n-----END PGP SIGNATURE-----\n", "payload": "tree bfc080aa4adb66e21782bd1dd78888b772603fff\nparent 825bc606f5d27e66c573db96d85eec907755f1ed\nparent dc9452207246594ef0d4221b332d218f86750d10\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1682776275 +0200\ncommitter GitHub <noreply@github.com> 1682776275 +0200\n\nRollup merge of #110644 - pietroalbini:pa-json-formatting-tests, r=Mark-Simulacrum\n\nUpdate tests for libtest `--format json`\n\nThis PR makes the test work on beta and stable, and adds a test ensuring the option is not available on beta and stable. Backported these commits from https://github.com/rust-lang/rust/pull/110414.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/957a6ad4d9d51781962f53bc448136067df275fb", "html_url": "https://github.com/rust-lang/rust/commit/957a6ad4d9d51781962f53bc448136067df275fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/957a6ad4d9d51781962f53bc448136067df275fb/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "825bc606f5d27e66c573db96d85eec907755f1ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/825bc606f5d27e66c573db96d85eec907755f1ed", "html_url": "https://github.com/rust-lang/rust/commit/825bc606f5d27e66c573db96d85eec907755f1ed"}, {"sha": "dc9452207246594ef0d4221b332d218f86750d10", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc9452207246594ef0d4221b332d218f86750d10", "html_url": "https://github.com/rust-lang/rust/commit/dc9452207246594ef0d4221b332d218f86750d10"}], "stats": {"total": 68, "additions": 60, "deletions": 8}, "files": [{"sha": "8cc935e54d117c76beac2cb680b7e119d50c257a", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957a6ad4d9d51781962f53bc448136067df275fb/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957a6ad4d9d51781962f53bc448136067df275fb/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=957a6ad4d9d51781962f53bc448136067df275fb", "patch": "@@ -90,6 +90,9 @@ pub struct TestProps {\n     pub unset_rustc_env: Vec<String>,\n     // Environment settings to use during execution\n     pub exec_env: Vec<(String, String)>,\n+    // Environment variables to unset prior to execution.\n+    // Variables are unset before applying 'exec_env'\n+    pub unset_exec_env: Vec<String>,\n     // Build documentation for all specified aux-builds as well\n     pub build_aux_docs: bool,\n     // Flag to force a crate to be built with the host architecture\n@@ -198,6 +201,7 @@ mod directives {\n     pub const AUX_CRATE: &'static str = \"aux-crate\";\n     pub const EXEC_ENV: &'static str = \"exec-env\";\n     pub const RUSTC_ENV: &'static str = \"rustc-env\";\n+    pub const UNSET_EXEC_ENV: &'static str = \"unset-exec-env\";\n     pub const UNSET_RUSTC_ENV: &'static str = \"unset-rustc-env\";\n     pub const FORBID_OUTPUT: &'static str = \"forbid-output\";\n     pub const CHECK_TEST_LINE_NUMBERS_MATCH: &'static str = \"check-test-line-numbers-match\";\n@@ -231,6 +235,7 @@ impl TestProps {\n             rustc_env: vec![],\n             unset_rustc_env: vec![],\n             exec_env: vec![],\n+            unset_exec_env: vec![],\n             build_aux_docs: false,\n             force_host: false,\n             check_stdout: false,\n@@ -382,6 +387,12 @@ impl TestProps {\n                     &mut self.exec_env,\n                     Config::parse_env,\n                 );\n+                config.push_name_value_directive(\n+                    ln,\n+                    UNSET_EXEC_ENV,\n+                    &mut self.unset_exec_env,\n+                    |r| r,\n+                );\n                 config.push_name_value_directive(\n                     ln,\n                     RUSTC_ENV,"}, {"sha": "86a749b935d828a7eef35fd425be65d08fb070c9", "filename": "src/tools/compiletest/src/header/cfg.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/957a6ad4d9d51781962f53bc448136067df275fb/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957a6ad4d9d51781962f53bc448136067df275fb/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Fcfg.rs?ref=957a6ad4d9d51781962f53bc448136067df275fb", "patch": "@@ -165,11 +165,15 @@ pub(super) fn parse_cfg_name_directive<'a>(\n         message: \"when the architecture is part of the Thumb family\"\n     }\n \n+    // Technically the locally built compiler uses the \"dev\" channel rather than the \"nightly\"\n+    // channel, even though most people don't know or won't care about it. To avoid confusion, we\n+    // treat the \"dev\" channel as the \"nightly\" channel when processing the directive.\n     condition! {\n-        name: &config.channel,\n+        name: if config.channel == \"dev\" { \"nightly\" } else { &config.channel },\n         allowed_names: &[\"stable\", \"beta\", \"nightly\"],\n         message: \"when the release channel is {name}\",\n     }\n+\n     condition! {\n         name: \"cross-compile\",\n         condition: config.target != config.host,"}, {"sha": "0fd9f3ae3f4069b8ba6fcd68262362649d30badd", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/957a6ad4d9d51781962f53bc448136067df275fb/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957a6ad4d9d51781962f53bc448136067df275fb/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=957a6ad4d9d51781962f53bc448136067df275fb", "patch": "@@ -1614,8 +1614,13 @@ impl<'test> TestCx<'test> {\n                 test_client\n                     .args(&[\"run\", &support_libs.len().to_string(), &prog])\n                     .args(support_libs)\n-                    .args(args)\n-                    .envs(env.clone());\n+                    .args(args);\n+\n+                for key in &self.props.unset_exec_env {\n+                    test_client.env_remove(key);\n+                }\n+                test_client.envs(env.clone());\n+\n                 self.compose_and_run(\n                     test_client,\n                     self.config.run_lib_path.to_str().unwrap(),\n@@ -1627,7 +1632,13 @@ impl<'test> TestCx<'test> {\n                 let aux_dir = self.aux_output_dir_name();\n                 let ProcArgs { prog, args } = self.make_run_args();\n                 let mut wr_run = Command::new(\"wr-run\");\n-                wr_run.args(&[&prog]).args(args).envs(env.clone());\n+                wr_run.args(&[&prog]).args(args);\n+\n+                for key in &self.props.unset_exec_env {\n+                    wr_run.env_remove(key);\n+                }\n+                wr_run.envs(env.clone());\n+\n                 self.compose_and_run(\n                     wr_run,\n                     self.config.run_lib_path.to_str().unwrap(),\n@@ -1639,7 +1650,13 @@ impl<'test> TestCx<'test> {\n                 let aux_dir = self.aux_output_dir_name();\n                 let ProcArgs { prog, args } = self.make_run_args();\n                 let mut program = Command::new(&prog);\n-                program.args(args).current_dir(&self.output_base_dir()).envs(env.clone());\n+                program.args(args).current_dir(&self.output_base_dir());\n+\n+                for key in &self.props.unset_exec_env {\n+                    program.env_remove(key);\n+                }\n+                program.envs(env.clone());\n+\n                 self.compose_and_run(\n                     program,\n                     self.config.run_lib_path.to_str().unwrap(),"}, {"sha": "2dd0e10b5216f6728c2bfe2d10c3234339933e2f", "filename": "tests/ui/feature-gates/test-listing-format-json.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/957a6ad4d9d51781962f53bc448136067df275fb/tests%2Fui%2Ffeature-gates%2Ftest-listing-format-json.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957a6ad4d9d51781962f53bc448136067df275fb/tests%2Fui%2Ffeature-gates%2Ftest-listing-format-json.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffeature-gates%2Ftest-listing-format-json.rs?ref=957a6ad4d9d51781962f53bc448136067df275fb", "patch": "@@ -0,0 +1,18 @@\n+// no-prefer-dynamic\n+// compile-flags: --test\n+// run-flags: --list --format json -Zunstable-options\n+// run-fail\n+// check-run-results\n+// ignore-nightly\n+// unset-exec-env:RUSTC_BOOTSTRAP\n+\n+#![cfg(test)]\n+#[test]\n+fn m_test() {}\n+\n+#[test]\n+#[ignore = \"not yet implemented\"]\n+fn z_test() {}\n+\n+#[test]\n+fn a_test() {}"}, {"sha": "e81cb81f32c3f0be39cf97f2b1c9b62f784a25e2", "filename": "tests/ui/feature-gates/test-listing-format-json.run.stderr", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/957a6ad4d9d51781962f53bc448136067df275fb/tests%2Fui%2Ffeature-gates%2Ftest-listing-format-json.run.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/957a6ad4d9d51781962f53bc448136067df275fb/tests%2Fui%2Ffeature-gates%2Ftest-listing-format-json.run.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffeature-gates%2Ftest-listing-format-json.run.stderr?ref=957a6ad4d9d51781962f53bc448136067df275fb", "patch": "@@ -0,0 +1 @@\n+error: the option `Z` is only accepted on the nightly compiler"}, {"sha": "5afc2746fe4e0b03cfa7f493ea274c60742c8fb0", "filename": "tests/ui/test-attrs/tests-listing-format-json.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/957a6ad4d9d51781962f53bc448136067df275fb/tests%2Fui%2Ftest-attrs%2Ftests-listing-format-json.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957a6ad4d9d51781962f53bc448136067df275fb/tests%2Fui%2Ftest-attrs%2Ftests-listing-format-json.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftest-attrs%2Ftests-listing-format-json.rs?ref=957a6ad4d9d51781962f53bc448136067df275fb", "patch": "@@ -3,6 +3,7 @@\n // run-flags: --list --format json -Zunstable-options\n // run-pass\n // check-run-results\n+// only-nightly\n // normalize-stdout-test: \"fake-test-src-base/test-attrs/\" -> \"$$DIR/\"\n // normalize-stdout-test: \"fake-test-src-base\\\\test-attrs\\\\\" -> \"$$DIR/\"\n "}, {"sha": "33cc939b59f5df23d2ddf047ba9af1fff2a7baaf", "filename": "tests/ui/test-attrs/tests-listing-format-json.run.stdout", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/957a6ad4d9d51781962f53bc448136067df275fb/tests%2Fui%2Ftest-attrs%2Ftests-listing-format-json.run.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/957a6ad4d9d51781962f53bc448136067df275fb/tests%2Fui%2Ftest-attrs%2Ftests-listing-format-json.run.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftest-attrs%2Ftests-listing-format-json.run.stdout?ref=957a6ad4d9d51781962f53bc448136067df275fb", "patch": "@@ -1,5 +1,5 @@\n { \"type\": \"suite\", \"event\": \"discovery\" }\n-{ \"type\": \"test\", \"event\": \"discovered\", \"name\": \"a_test\", \"ignore\": false, \"ignore_message\": \"\", \"source_path\": \"$DIR/tests-listing-format-json.rs\", \"start_line\": 20, \"start_col\": 4, \"end_line\": 20, \"end_col\": 10 }\n-{ \"type\": \"test\", \"event\": \"discovered\", \"name\": \"m_test\", \"ignore\": false, \"ignore_message\": \"\", \"source_path\": \"$DIR/tests-listing-format-json.rs\", \"start_line\": 13, \"start_col\": 4, \"end_line\": 13, \"end_col\": 10 }\n-{ \"type\": \"test\", \"event\": \"discovered\", \"name\": \"z_test\", \"ignore\": true, \"ignore_message\": \"not yet implemented\", \"source_path\": \"$DIR/tests-listing-format-json.rs\", \"start_line\": 17, \"start_col\": 4, \"end_line\": 17, \"end_col\": 10 }\n+{ \"type\": \"test\", \"event\": \"discovered\", \"name\": \"a_test\", \"ignore\": false, \"ignore_message\": \"\", \"source_path\": \"$DIR/tests-listing-format-json.rs\", \"start_line\": 21, \"start_col\": 4, \"end_line\": 21, \"end_col\": 10 }\n+{ \"type\": \"test\", \"event\": \"discovered\", \"name\": \"m_test\", \"ignore\": false, \"ignore_message\": \"\", \"source_path\": \"$DIR/tests-listing-format-json.rs\", \"start_line\": 14, \"start_col\": 4, \"end_line\": 14, \"end_col\": 10 }\n+{ \"type\": \"test\", \"event\": \"discovered\", \"name\": \"z_test\", \"ignore\": true, \"ignore_message\": \"not yet implemented\", \"source_path\": \"$DIR/tests-listing-format-json.rs\", \"start_line\": 18, \"start_col\": 4, \"end_line\": 18, \"end_col\": 10 }\n { \"type\": \"suite\", \"event\": \"completed\", \"tests\": 3, \"benchmarks\": 0, \"total\": 3, \"ignored\": 1 }"}]}