{"sha": "75aec4703dea7ef8e13924ccfa3a3d2e8c5c7cff", "node_id": "C_kwDOAAsO6NoAKDc1YWVjNDcwM2RlYTdlZjhlMTM5MjRjY2ZhM2EzZDJlOGM1YzdjZmY", "commit": {"author": {"name": "Krasimir Georgiev", "email": "krasimir@google.com", "date": "2022-12-05T12:04:25Z"}, "committer": {"name": "Krasimir Georgiev", "email": "krasimir@google.com", "date": "2022-12-06T18:25:33Z"}, "message": "llvm-wrapper: adapt for and LLVM API change", "tree": {"sha": "b6009609c24160b955b009272eab71f17a9e12f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6009609c24160b955b009272eab71f17a9e12f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75aec4703dea7ef8e13924ccfa3a3d2e8c5c7cff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75aec4703dea7ef8e13924ccfa3a3d2e8c5c7cff", "html_url": "https://github.com/rust-lang/rust/commit/75aec4703dea7ef8e13924ccfa3a3d2e8c5c7cff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75aec4703dea7ef8e13924ccfa3a3d2e8c5c7cff/comments", "author": {"login": "krasimirgg", "id": 29306214, "node_id": "MDQ6VXNlcjI5MzA2MjE0", "avatar_url": "https://avatars.githubusercontent.com/u/29306214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krasimirgg", "html_url": "https://github.com/krasimirgg", "followers_url": "https://api.github.com/users/krasimirgg/followers", "following_url": "https://api.github.com/users/krasimirgg/following{/other_user}", "gists_url": "https://api.github.com/users/krasimirgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/krasimirgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krasimirgg/subscriptions", "organizations_url": "https://api.github.com/users/krasimirgg/orgs", "repos_url": "https://api.github.com/users/krasimirgg/repos", "events_url": "https://api.github.com/users/krasimirgg/events{/privacy}", "received_events_url": "https://api.github.com/users/krasimirgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "krasimirgg", "id": 29306214, "node_id": "MDQ6VXNlcjI5MzA2MjE0", "avatar_url": "https://avatars.githubusercontent.com/u/29306214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krasimirgg", "html_url": "https://github.com/krasimirgg", "followers_url": "https://api.github.com/users/krasimirgg/followers", "following_url": "https://api.github.com/users/krasimirgg/following{/other_user}", "gists_url": "https://api.github.com/users/krasimirgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/krasimirgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krasimirgg/subscriptions", "organizations_url": "https://api.github.com/users/krasimirgg/orgs", "repos_url": "https://api.github.com/users/krasimirgg/repos", "events_url": "https://api.github.com/users/krasimirgg/events{/privacy}", "received_events_url": "https://api.github.com/users/krasimirgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c372b1470109547e37dcc29ffd4723ac9f66f15d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c372b1470109547e37dcc29ffd4723ac9f66f15d", "html_url": "https://github.com/rust-lang/rust/commit/c372b1470109547e37dcc29ffd4723ac9f66f15d"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "1a3d458c30067cfce22e11625a5c9e5fa9ccaf53", "filename": "compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/75aec4703dea7ef8e13924ccfa3a3d2e8c5c7cff/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/75aec4703dea7ef8e13924ccfa3a3d2e8c5c7cff/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp?ref=75aec4703dea7ef8e13924ccfa3a3d2e8c5c7cff", "patch": "@@ -205,7 +205,12 @@ enum class LLVMRustCodeModel {\n   None,\n };\n \n-static Optional<CodeModel::Model> fromRust(LLVMRustCodeModel Model) {\n+#if LLVM_VERSION_LT(16, 0)\n+static Optional<CodeModel::Model>\n+#else\n+static std::optional<CodeModel::Model>\n+#endif\n+fromRust(LLVMRustCodeModel Model) {\n   switch (Model) {\n   case LLVMRustCodeModel::Tiny:\n     return CodeModel::Tiny;\n@@ -638,7 +643,11 @@ LLVMRustOptimize(\n     LLVMSelfProfileInitializeCallbacks(PIC,LlvmSelfProfiler,BeforePassCallback,AfterPassCallback);\n   }\n \n+#if LLVM_VERSION_LT(16, 0)\n   Optional<PGOOptions> PGOOpt;\n+#else\n+  std::optional<PGOOptions> PGOOpt;\n+#endif\n   if (PGOGenPath) {\n     assert(!PGOUsePath && !PGOSampleUsePath);\n     PGOOpt = PGOOptions(PGOGenPath, \"\", \"\", PGOOptions::IRInstr,"}, {"sha": "c717479a6a6d427c7121336c7fcb10280b9b5c8d", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/75aec4703dea7ef8e13924ccfa3a3d2e8c5c7cff/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/75aec4703dea7ef8e13924ccfa3a3d2e8c5c7cff/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=75aec4703dea7ef8e13924ccfa3a3d2e8c5c7cff", "patch": "@@ -17,7 +17,9 @@\n #include \"llvm/Pass.h\"\n #include \"llvm/Bitcode/BitcodeWriter.h\"\n #include \"llvm/Support/Signals.h\"\n+#if LLVM_VERSION_LT(16, 0)\n #include \"llvm/ADT/Optional.h\"\n+#endif\n \n #include <iostream>\n \n@@ -708,7 +710,11 @@ enum class LLVMRustChecksumKind {\n   SHA256,\n };\n \n+#if LLVM_VERSION_LT(16, 0)\n static Optional<DIFile::ChecksumKind> fromRust(LLVMRustChecksumKind Kind) {\n+#else\n+static std::optional<DIFile::ChecksumKind> fromRust(LLVMRustChecksumKind Kind) {\n+#endif\n   switch (Kind) {\n   case LLVMRustChecksumKind::None:\n     return None;\n@@ -787,8 +793,18 @@ extern \"C\" LLVMMetadataRef LLVMRustDIBuilderCreateFile(\n     const char *Filename, size_t FilenameLen,\n     const char *Directory, size_t DirectoryLen, LLVMRustChecksumKind CSKind,\n     const char *Checksum, size_t ChecksumLen) {\n+\n+#if LLVM_VERSION_LT(16, 0)\n   Optional<DIFile::ChecksumKind> llvmCSKind = fromRust(CSKind);\n+#else\n+  std::optional<DIFile::ChecksumKind> llvmCSKind = fromRust(CSKind);\n+#endif\n+\n+#if LLVM_VERSION_LT(16, 0)\n   Optional<DIFile::ChecksumInfo<StringRef>> CSInfo{};\n+#else\n+  std::optional<DIFile::ChecksumInfo<StringRef>> CSInfo{};\n+#endif\n   if (llvmCSKind)\n     CSInfo.emplace(*llvmCSKind, StringRef{Checksum, ChecksumLen});\n   return wrap(Builder->createFile(StringRef(Filename, FilenameLen),"}]}