{"sha": "5c7008540d9e7939d51f7582e13c4d3fefdcd170", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNzAwODU0MGQ5ZTc5MzlkNTFmNzU4MmUxM2M0ZDNmZWZkY2QxNzA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-28T01:01:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-28T01:01:53Z"}, "message": "Rollup merge of #63038 - eupn:outer-attribute-diag, r=estebank\n\nMake more informative error on outer attribute after inner\n\nFixes #61218.\n\n?r @estebank", "tree": {"sha": "2bef6741c7fcd73ffff8e7764365744d1f87ddb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bef6741c7fcd73ffff8e7764365744d1f87ddb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c7008540d9e7939d51f7582e13c4d3fefdcd170", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdPPQBCRBK7hj4Ov3rIwAAdHIIAGzhVI7Mya2OjlE7hLfL0jta\n+FPVps63Ulr2YaxpiCynr991qZrCK6/bb3ZF2DJ5SI76fWDuCxjRRpyMq86EXMMe\nOJC3VZCNP8gltTwGDQhZ4PB4ARI7lyk/MiJN7JVjIT67nhYgO+Lo+250dHylPRrv\n8lDd2i9CEYm6UzdhOHuVQJ8wV0WdL4GV5AajSQkwmNTzm96PhTcirVpdprPUV9xy\nSeLs4SJIJWoCsBr2scBUMqlVLrfpw1yJ5faX8BFMHLPMp9wmL7W5BLGk7iRtDpgF\nq2FHUOWTMZA7p1qFW3BSMSuelO9FgLLc/n3Z/cB/W7eYK2OfjsmjFMQO/qXK3KI=\n=xpGX\n-----END PGP SIGNATURE-----\n", "payload": "tree 2bef6741c7fcd73ffff8e7764365744d1f87ddb1\nparent c3c03098d8fc1679762810fa2d18926baca47148\nparent 693be441f4c2d74805b855612556c54438c3022c\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1564275713 +0200\ncommitter GitHub <noreply@github.com> 1564275713 +0200\n\nRollup merge of #63038 - eupn:outer-attribute-diag, r=estebank\n\nMake more informative error on outer attribute after inner\n\nFixes #61218.\n\n?r @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c7008540d9e7939d51f7582e13c4d3fefdcd170", "html_url": "https://github.com/rust-lang/rust/commit/5c7008540d9e7939d51f7582e13c4d3fefdcd170", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c7008540d9e7939d51f7582e13c4d3fefdcd170/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3c03098d8fc1679762810fa2d18926baca47148", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3c03098d8fc1679762810fa2d18926baca47148", "html_url": "https://github.com/rust-lang/rust/commit/c3c03098d8fc1679762810fa2d18926baca47148"}, {"sha": "693be441f4c2d74805b855612556c54438c3022c", "url": "https://api.github.com/repos/rust-lang/rust/commits/693be441f4c2d74805b855612556c54438c3022c", "html_url": "https://github.com/rust-lang/rust/commit/693be441f4c2d74805b855612556c54438c3022c"}], "stats": {"total": 87, "additions": 62, "deletions": 25}, "files": [{"sha": "af484c886ab35b7d796995d6eea834fd2938251d", "filename": "src/libsyntax/parse/attr.rs", "status": "modified", "additions": 45, "deletions": 16, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/5c7008540d9e7939d51f7582e13c4d3fefdcd170/src%2Flibsyntax%2Fparse%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7008540d9e7939d51f7582e13c4d3fefdcd170/src%2Flibsyntax%2Fparse%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fattr.rs?ref=5c7008540d9e7939d51f7582e13c4d3fefdcd170", "patch": "@@ -4,14 +4,15 @@ use crate::parse::{SeqSep, PResult};\n use crate::parse::token::{self, Nonterminal, DelimToken};\n use crate::parse::parser::{Parser, TokenType, PathStyle};\n use crate::tokenstream::{TokenStream, TokenTree};\n+use crate::source_map::Span;\n \n use log::debug;\n use smallvec::smallvec;\n \n #[derive(Debug)]\n enum InnerAttributeParsePolicy<'a> {\n     Permitted,\n-    NotPermitted { reason: &'a str },\n+    NotPermitted { reason: &'a str, saw_doc_comment: bool, prev_attr_sp: Option<Span> },\n }\n \n const DEFAULT_UNEXPECTED_INNER_ATTR_ERR_MSG: &str = \"an inner attribute is not \\\n@@ -42,7 +43,11 @@ impl<'a> Parser<'a> {\n                         DEFAULT_UNEXPECTED_INNER_ATTR_ERR_MSG\n                     };\n                     let inner_parse_policy =\n-                        InnerAttributeParsePolicy::NotPermitted { reason: inner_error_reason };\n+                        InnerAttributeParsePolicy::NotPermitted {\n+                            reason: inner_error_reason,\n+                            saw_doc_comment: just_parsed_doc_comment,\n+                            prev_attr_sp: attrs.last().and_then(|a| Some(a.span))\n+                        };\n                     let attr = self.parse_attribute_with_inner_parse_policy(inner_parse_policy)?;\n                     attrs.push(attr);\n                     just_parsed_doc_comment = false;\n@@ -76,8 +81,11 @@ impl<'a> Parser<'a> {\n         let inner_parse_policy = if permit_inner {\n             InnerAttributeParsePolicy::Permitted\n         } else {\n-            InnerAttributeParsePolicy::NotPermitted\n-                { reason: DEFAULT_UNEXPECTED_INNER_ATTR_ERR_MSG }\n+            InnerAttributeParsePolicy::NotPermitted {\n+                reason: DEFAULT_UNEXPECTED_INNER_ATTR_ERR_MSG,\n+                saw_doc_comment: false,\n+                prev_attr_sp: None\n+            }\n         };\n         self.parse_attribute_with_inner_parse_policy(inner_parse_policy)\n     }\n@@ -98,19 +106,9 @@ impl<'a> Parser<'a> {\n                 if let InnerAttributeParsePolicy::Permitted = inner_parse_policy {\n                     self.expected_tokens.push(TokenType::Token(token::Not));\n                 }\n+\n                 let style = if self.token == token::Not {\n                     self.bump();\n-                    if let InnerAttributeParsePolicy::NotPermitted { reason } = inner_parse_policy\n-                    {\n-                        let span = self.token.span;\n-                        self.diagnostic()\n-                            .struct_span_err(span, reason)\n-                            .note(\"inner attributes, like `#![no_std]`, annotate the item \\\n-                                   enclosing them, and are usually found at the beginning of \\\n-                                   source files. Outer attributes, like `#[test]`, annotate the \\\n-                                   item following them.\")\n-                            .emit()\n-                    }\n                     ast::AttrStyle::Inner\n                 } else {\n                     ast::AttrStyle::Outer\n@@ -121,7 +119,38 @@ impl<'a> Parser<'a> {\n                 self.expect(&token::CloseDelim(token::Bracket))?;\n                 let hi = self.prev_span;\n \n-                (lo.to(hi), path, tokens, style)\n+                let attr_sp = lo.to(hi);\n+\n+                // Emit error if inner attribute is encountered and not permitted\n+                if style == ast::AttrStyle::Inner {\n+                    if let InnerAttributeParsePolicy::NotPermitted { reason,\n+                        saw_doc_comment, prev_attr_sp } = inner_parse_policy {\n+                        let prev_attr_note = if saw_doc_comment {\n+                            \"previous doc comment\"\n+                        } else {\n+                            \"previous outer attribute\"\n+                        };\n+\n+                        let mut diagnostic = self\n+                            .diagnostic()\n+                            .struct_span_err(attr_sp, reason);\n+\n+                        if let Some(prev_attr_sp) = prev_attr_sp {\n+                            diagnostic\n+                                .span_label(attr_sp, \"not permitted following an outer attibute\")\n+                                .span_label(prev_attr_sp, prev_attr_note);\n+                        }\n+\n+                        diagnostic\n+                            .note(\"inner attributes, like `#![no_std]`, annotate the item \\\n+                                   enclosing them, and are usually found at the beginning of \\\n+                                   source files. Outer attributes, like `#[test]`, annotate the \\\n+                                   item following them.\")\n+                            .emit()\n+                    }\n+                }\n+\n+                (attr_sp, path, tokens, style)\n             }\n             _ => {\n                 let token_str = self.this_token_to_string();"}, {"sha": "c0d4ce1243e015f0dee62a0a8ab701602600286a", "filename": "src/test/ui/issues/issue-45296.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c7008540d9e7939d51f7582e13c4d3fefdcd170/src%2Ftest%2Fui%2Fissues%2Fissue-45296.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c7008540d9e7939d51f7582e13c4d3fefdcd170/src%2Ftest%2Fui%2Fissues%2Fissue-45296.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45296.stderr?ref=5c7008540d9e7939d51f7582e13c4d3fefdcd170", "patch": "@@ -1,8 +1,8 @@\n error: an inner attribute is not permitted in this context\n-  --> $DIR/issue-45296.rs:4:7\n+  --> $DIR/issue-45296.rs:4:5\n    |\n LL |     #![allow(unused_variables)]\n-   |       ^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: inner attributes, like `#![no_std]`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes, like `#[test]`, annotate the item following them.\n "}, {"sha": "400a0276b3b608f8719535175c3ad846dd52b2c4", "filename": "src/test/ui/parser/attr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c7008540d9e7939d51f7582e13c4d3fefdcd170/src%2Ftest%2Fui%2Fparser%2Fattr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c7008540d9e7939d51f7582e13c4d3fefdcd170/src%2Ftest%2Fui%2Fparser%2Fattr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr.stderr?ref=5c7008540d9e7939d51f7582e13c4d3fefdcd170", "patch": "@@ -1,8 +1,8 @@\n error: an inner attribute is not permitted in this context\n-  --> $DIR/attr.rs:5:3\n+  --> $DIR/attr.rs:5:1\n    |\n LL | #![lang = \"foo\"]\n-   |   ^\n+   | ^^^^^^^^^^^^^^^^\n    |\n    = note: inner attributes, like `#![no_std]`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes, like `#[test]`, annotate the item following them.\n "}, {"sha": "b012abc25e7f3bd2b7755ce28798495da3be813a", "filename": "src/test/ui/parser/inner-attr-after-doc-comment.stderr", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5c7008540d9e7939d51f7582e13c4d3fefdcd170/src%2Ftest%2Fui%2Fparser%2Finner-attr-after-doc-comment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c7008540d9e7939d51f7582e13c4d3fefdcd170/src%2Ftest%2Fui%2Fparser%2Finner-attr-after-doc-comment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Finner-attr-after-doc-comment.stderr?ref=5c7008540d9e7939d51f7582e13c4d3fefdcd170", "patch": "@@ -1,8 +1,13 @@\n error: an inner attribute is not permitted following an outer doc comment\n-  --> $DIR/inner-attr-after-doc-comment.rs:6:3\n+  --> $DIR/inner-attr-after-doc-comment.rs:6:1\n    |\n-LL | #![recursion_limit=\"100\"]\n-   |   ^\n+LL | / /**\n+LL | |  * My module\n+LL | |  */\n+   | |___- previous doc comment\n+LL | \n+LL |   #![recursion_limit=\"100\"]\n+   |   ^^^^^^^^^^^^^^^^^^^^^^^^^ not permitted following an outer attibute\n    |\n    = note: inner attributes, like `#![no_std]`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes, like `#[test]`, annotate the item following them.\n "}, {"sha": "070d9f47d96f925e04bcc7abb412ebb1e06d193f", "filename": "src/test/ui/parser/inner-attr.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5c7008540d9e7939d51f7582e13c4d3fefdcd170/src%2Ftest%2Fui%2Fparser%2Finner-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c7008540d9e7939d51f7582e13c4d3fefdcd170/src%2Ftest%2Fui%2Fparser%2Finner-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Finner-attr.stderr?ref=5c7008540d9e7939d51f7582e13c4d3fefdcd170", "patch": "@@ -1,8 +1,11 @@\n error: an inner attribute is not permitted following an outer attribute\n-  --> $DIR/inner-attr.rs:3:3\n+  --> $DIR/inner-attr.rs:3:1\n    |\n+LL | #[feature(lang_items)]\n+   | ---------------------- previous outer attribute\n+LL | \n LL | #![recursion_limit=\"100\"]\n-   |   ^\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^ not permitted following an outer attibute\n    |\n    = note: inner attributes, like `#![no_std]`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes, like `#[test]`, annotate the item following them.\n "}]}