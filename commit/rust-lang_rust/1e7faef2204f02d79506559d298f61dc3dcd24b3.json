{"sha": "1e7faef2204f02d79506559d298f61dc3dcd24b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlN2ZhZWYyMjA0ZjAyZDc5NTA2NTU5ZDI5OGY2MWRjM2RjZDI0YjM=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-09-10T10:43:54Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-09-10T10:43:54Z"}, "message": "rustc_mir: buffer -Zdump-mir output instead of pestering the kernel constantly.", "tree": {"sha": "529d3cac2ea5bccccc47edcb4f39508e6bd6bc71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/529d3cac2ea5bccccc47edcb4f39508e6bd6bc71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e7faef2204f02d79506559d298f61dc3dcd24b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e7faef2204f02d79506559d298f61dc3dcd24b3", "html_url": "https://github.com/rust-lang/rust/commit/1e7faef2204f02d79506559d298f61dc3dcd24b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e7faef2204f02d79506559d298f61dc3dcd24b3/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61dced18277a8cd55c963502db5a4cdf837858f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/61dced18277a8cd55c963502db5a4cdf837858f3", "html_url": "https://github.com/rust-lang/rust/commit/61dced18277a8cd55c963502db5a4cdf837858f3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c35c9e4da9f4846be217a9cabc0ed3205f56d0c9", "filename": "src/librustc_mir/util/pretty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e7faef2204f02d79506559d298f61dc3dcd24b3/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e7faef2204f02d79506559d298f61dc3dcd24b3/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fpretty.rs?ref=1e7faef2204f02d79506559d298f61dc3dcd24b3", "patch": "@@ -227,12 +227,12 @@ pub(crate) fn create_dump_file(\n     pass_name: &str,\n     disambiguator: &dyn Display,\n     source: MirSource<'tcx>,\n-) -> io::Result<fs::File> {\n+) -> io::Result<io::BufWriter<fs::File>> {\n     let file_path = dump_path(tcx, extension, pass_num, pass_name, disambiguator, source);\n     if let Some(parent) = file_path.parent() {\n         fs::create_dir_all(parent)?;\n     }\n-    fs::File::create(&file_path)\n+    Ok(io::BufWriter::new(fs::File::create(&file_path)?))\n }\n \n /// Write out a human-readable textual representation for the given MIR."}]}