{"sha": "16cdd126b61086513c1b6049a80a7d64fc1d0f60", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2Y2RkMTI2YjYxMDg2NTEzYzFiNjA0OWE4MGE3ZDY0ZmMxZDBmNjA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-27T10:58:42Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-27T12:01:52Z"}, "message": "add file items query", "tree": {"sha": "14adba610376ff72a76f515f3ccb95c42b0d7174", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14adba610376ff72a76f515f3ccb95c42b0d7174"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16cdd126b61086513c1b6049a80a7d64fc1d0f60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16cdd126b61086513c1b6049a80a7d64fc1d0f60", "html_url": "https://github.com/rust-lang/rust/commit/16cdd126b61086513c1b6049a80a7d64fc1d0f60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16cdd126b61086513c1b6049a80a7d64fc1d0f60/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e37208040a456d4e481472f69b3b584655ee90f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e37208040a456d4e481472f69b3b584655ee90f", "html_url": "https://github.com/rust-lang/rust/commit/8e37208040a456d4e481472f69b3b584655ee90f"}], "stats": {"total": 55, "additions": 41, "deletions": 14}, "files": [{"sha": "4187113006ffc61f81ff43a09df6e86a0d58154f", "filename": "crates/ra_analysis/src/db.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/16cdd126b61086513c1b6049a80a7d64fc1d0f60/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16cdd126b61086513c1b6049a80a7d64fc1d0f60/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb.rs?ref=16cdd126b61086513c1b6049a80a7d64fc1d0f60", "patch": "@@ -7,10 +7,7 @@ use salsa::{self, Database};\n \n use crate::{\n     db,\n-    descriptors::{\n-        DescriptorDatabase, FnScopesQuery, FnSyntaxQuery, ModuleTreeQuery,\n-        SubmodulesQuery, ItemMapQuery, InputModuleItemsQuery,\n-    },\n+    descriptors,\n     symbol_index::SymbolIndex,\n     syntax_ptr::SyntaxPtr,\n     loc2id::{IdMaps, IdDatabase},\n@@ -125,13 +122,15 @@ salsa::database_storage! {\n             fn file_symbols() for FileSymbolsQuery;\n             fn resolve_syntax_ptr() for ResolveSyntaxPtrQuery;\n         }\n-        impl DescriptorDatabase {\n-            fn module_tree() for ModuleTreeQuery;\n-            fn fn_scopes() for FnScopesQuery;\n-            fn _input_module_items() for InputModuleItemsQuery;\n-            fn _item_map() for ItemMapQuery;\n-            fn _fn_syntax() for FnSyntaxQuery;\n-            fn _submodules() for SubmodulesQuery;\n+        impl descriptors::DescriptorDatabase {\n+            fn module_tree() for descriptors::ModuleTreeQuery;\n+            fn fn_scopes() for descriptors::FnScopesQuery;\n+            fn _file_items() for descriptors::FileItemsQuery;\n+            fn _file_item() for descriptors::FileItemQuery;\n+            fn _input_module_items() for descriptors::InputModuleItemsQuery;\n+            fn _item_map() for descriptors::ItemMapQuery;\n+            fn _fn_syntax() for descriptors::FnSyntaxQuery;\n+            fn _submodules() for descriptors::SubmodulesQuery;\n         }\n     }\n }"}, {"sha": "f6b9102e7e2992323cdef2cd054cc8394694c60a", "filename": "crates/ra_analysis/src/descriptors/mod.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/16cdd126b61086513c1b6049a80a7d64fc1d0f60/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16cdd126b61086513c1b6049a80a7d64fc1d0f60/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmod.rs?ref=16cdd126b61086513c1b6049a80a7d64fc1d0f60", "patch": "@@ -6,13 +6,14 @@ use std::sync::Arc;\n \n use ra_syntax::{\n     ast::{self, FnDefNode, AstNode},\n-    TextRange,\n+    TextRange, SyntaxNode,\n };\n \n use crate::{\n+    FileId,\n     db::SyntaxDatabase,\n     descriptors::function::{resolve_local_name, FnId, FnScopes},\n-    descriptors::module::{ModuleId, ModuleTree, ModuleSource, nameres::{ItemMap, InputModuleItems}},\n+    descriptors::module::{ModuleId, ModuleTree, ModuleSource, nameres::{ItemMap, InputModuleItems, FileItemId}},\n     input::SourceRootId,\n     loc2id::IdDatabase,\n     syntax_ptr::LocalSyntaxPtr,\n@@ -28,6 +29,18 @@ salsa::query_group! {\n             use fn function::imp::fn_scopes;\n         }\n \n+        fn _file_items(file_id: FileId) -> Arc<Vec<SyntaxNode>> {\n+            type FileItemsQuery;\n+            storage volatile;\n+            use fn module::nameres::file_items;\n+        }\n+\n+        fn _file_item(file_id: FileId, file_item_id: FileItemId) -> SyntaxNode {\n+            type FileItemQuery;\n+            storage volatile;\n+            use fn module::nameres::file_item;\n+        }\n+\n         fn _input_module_items(source_root_id: SourceRootId, module_id: ModuleId) -> Cancelable<Arc<InputModuleItems>> {\n             type InputModuleItemsQuery;\n             use fn module::nameres::input_module_items;"}, {"sha": "6251f5b8699f1e59d63ba49e5b4dd228c78d89e9", "filename": "crates/ra_analysis/src/descriptors/module/nameres.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/16cdd126b61086513c1b6049a80a7d64fc1d0f60/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16cdd126b61086513c1b6049a80a7d64fc1d0f60/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fnameres.rs?ref=16cdd126b61086513c1b6049a80a7d64fc1d0f60", "patch": "@@ -22,12 +22,13 @@ use std::{\n use rustc_hash::FxHashMap;\n \n use ra_syntax::{\n+    SyntaxNode,\n     SmolStr, SyntaxKind::{self, *},\n     ast::{self, ModuleItemOwner}\n };\n \n use crate::{\n-    Cancelable,\n+    Cancelable, FileId,\n     loc2id::{DefId, DefLoc},\n     descriptors::{\n         Path, PathKind,\n@@ -38,6 +39,20 @@ use crate::{\n     input::SourceRootId,\n };\n \n+\n+#[derive(Clone, Copy, Hash, PartialEq, Eq, Debug)]\n+pub(crate) struct FileItemId(u32);\n+\n+pub(crate) fn file_items(db: &impl DescriptorDatabase, file_id: FileId) -> Arc<Vec<SyntaxNode>> {\n+    unimplemented!()\n+}\n+\n+pub(crate) fn file_item(db: &impl DescriptorDatabase, file_id: FileId, file_item_id: FileItemId) -> SyntaxNode {\n+    let items = db._file_items(file_id);\n+    let idx = file_item_id.0 as usize;\n+    items[idx].clone()\n+}\n+\n /// Item map is the result of the name resolution. Item map contains, for each\n /// module, the set of visible items.\n #[derive(Default, Debug, PartialEq, Eq)]"}]}