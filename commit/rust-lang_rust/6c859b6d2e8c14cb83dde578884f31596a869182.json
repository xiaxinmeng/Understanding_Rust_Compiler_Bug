{"sha": "6c859b6d2e8c14cb83dde578884f31596a869182", "node_id": "C_kwDOAAsO6NoAKDZjODU5YjZkMmU4YzE0Y2I4M2RkZTU3ODg4NGYzMTU5NmE4NjkxODI", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2023-04-24T07:47:54Z"}, "committer": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2023-04-24T07:47:54Z"}, "message": "Clippy book: hotfix for broken link", "tree": {"sha": "3e5df22a9c7b8c5b9967760f06c5769e6aa4b2fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e5df22a9c7b8c5b9967760f06c5769e6aa4b2fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c859b6d2e8c14cb83dde578884f31596a869182", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c859b6d2e8c14cb83dde578884f31596a869182", "html_url": "https://github.com/rust-lang/rust/commit/6c859b6d2e8c14cb83dde578884f31596a869182", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c859b6d2e8c14cb83dde578884f31596a869182/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1b75c5108514504c8382ac70d56f9a2a9aee7c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1b75c5108514504c8382ac70d56f9a2a9aee7c4", "html_url": "https://github.com/rust-lang/rust/commit/a1b75c5108514504c8382ac70d56f9a2a9aee7c4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "131f6455fdeae13917c34f4ee8a5fbf0a27c1f15", "filename": "book/src/development/lint_passes.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c859b6d2e8c14cb83dde578884f31596a869182/book%2Fsrc%2Fdevelopment%2Flint_passes.md", "raw_url": "https://github.com/rust-lang/rust/raw/6c859b6d2e8c14cb83dde578884f31596a869182/book%2Fsrc%2Fdevelopment%2Flint_passes.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/book%2Fsrc%2Fdevelopment%2Flint_passes.md?ref=6c859b6d2e8c14cb83dde578884f31596a869182", "patch": "@@ -50,7 +50,7 @@ questions already, but the parser is okay with it. This is what we\n mean when we say `EarlyLintPass` deals with only syntax on the AST level.\n \n Alternatively, think of the `foo_functions` lint we mentioned in\n-[define new lints](define_lints.md#name-the-lint) chapter.\n+define new lints chapter.\n \n We want the `foo_functions` lint to detect functions with `foo` as their name.\n Writing a lint that only checks for the name of a function means that we only"}]}