{"sha": "fb148a50b2766d1baf2a7e75474939d0f02e27ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiMTQ4YTUwYjI3NjZkMWJhZjJhN2U3NTQ3NDkzOWQwZjAyZTI3YWM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-09-04T10:57:53Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-09-04T10:57:53Z"}, "message": "Add false positive checks to unicode test", "tree": {"sha": "99a6f5957a3228e6c8445d178c6b06aec6fa4d6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99a6f5957a3228e6c8445d178c6b06aec6fa4d6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb148a50b2766d1baf2a7e75474939d0f02e27ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb148a50b2766d1baf2a7e75474939d0f02e27ac", "html_url": "https://github.com/rust-lang/rust/commit/fb148a50b2766d1baf2a7e75474939d0f02e27ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb148a50b2766d1baf2a7e75474939d0f02e27ac/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e11fd49b1cc333a4fedbe1f948e6203208edd17b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e11fd49b1cc333a4fedbe1f948e6203208edd17b", "html_url": "https://github.com/rust-lang/rust/commit/e11fd49b1cc333a4fedbe1f948e6203208edd17b"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "44bc9f1b1999fd591f7ab54b5ba6ed7f95e9f24a", "filename": "tests/compile-fail/unicode.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fb148a50b2766d1baf2a7e75474939d0f02e27ac/tests%2Fcompile-fail%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb148a50b2766d1baf2a7e75474939d0f02e27ac/tests%2Fcompile-fail%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Funicode.rs?ref=fb148a50b2766d1baf2a7e75474939d0f02e27ac", "patch": "@@ -5,16 +5,19 @@\n fn zero() {\n     print!(\"Here >\u200b< is a ZWS, and \u200banother\");\n                //~^ ERROR zero-width space detected\n+    print!(\"This\\u{200B}is\\u{200B}fine\");\n }\n \n #[deny(unicode_not_nfc)]\n fn canon() {\n     print!(\"\u0300a\u0300h?\"); //~ERROR non-nfc unicode sequence detected\n+    print!(\"a\\u{0300}h?\"); // also okay\n }\n \n #[deny(non_ascii_literal)]\n fn uni() {\n     print!(\"\u00dcben!\"); //~ERROR literal non-ASCII character detected\n+    print!(\"\\u{DC}ben!\"); // this is okay \n }\n \n fn main() {"}]}