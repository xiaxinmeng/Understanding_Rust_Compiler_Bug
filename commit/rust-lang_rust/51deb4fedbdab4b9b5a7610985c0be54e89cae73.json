{"sha": "51deb4fedbdab4b9b5a7610985c0be54e89cae73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxZGViNGZlZGJkYWI0YjliNWE3NjEwOTg1YzBiZTU0ZTg5Y2FlNzM=", "commit": {"author": {"name": "Jonathan Turner", "email": "jturner@mozilla.com", "date": "2016-06-22T16:50:19Z"}, "committer": {"name": "Jonathan Turner", "email": "jturner@mozilla.com", "date": "2016-06-23T12:07:35Z"}, "message": "Address more travis errors", "tree": {"sha": "035dca4977677a80b26843d50cd4aaaadc962573", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/035dca4977677a80b26843d50cd4aaaadc962573"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51deb4fedbdab4b9b5a7610985c0be54e89cae73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51deb4fedbdab4b9b5a7610985c0be54e89cae73", "html_url": "https://github.com/rust-lang/rust/commit/51deb4fedbdab4b9b5a7610985c0be54e89cae73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51deb4fedbdab4b9b5a7610985c0be54e89cae73/comments", "author": null, "committer": null, "parents": [{"sha": "2829fbc63814d02359e3d93d16f7ea7ef748162e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2829fbc63814d02359e3d93d16f7ea7ef748162e", "html_url": "https://github.com/rust-lang/rust/commit/2829fbc63814d02359e3d93d16f7ea7ef748162e"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "2188dc36ec84a8266dad90b7ce6ceaa70900a502", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/51deb4fedbdab4b9b5a7610985c0be54e89cae73/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51deb4fedbdab4b9b5a7610985c0be54e89cae73/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=51deb4fedbdab4b9b5a7610985c0be54e89cae73", "patch": "@@ -827,6 +827,7 @@ impl CodeMapper for CodeMap {\n #[cfg(test)]\n mod tests {\n     use super::*;\n+    use syntax_pos::*;\n \n     #[test]\n     fn t1 () {"}, {"sha": "aa5fe4fe2fa18fbf23904387131c0af5e2bd61f2", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51deb4fedbdab4b9b5a7610985c0be54e89cae73/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51deb4fedbdab4b9b5a7610985c0be54e89cae73/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=51deb4fedbdab4b9b5a7610985c0be54e89cae73", "patch": "@@ -1229,7 +1229,7 @@ mod tests {\n     use super::{PatIdentFinder, IdentRenamer, PatIdentRenamer, ExpansionConfig};\n     use ast;\n     use ast::Name;\n-    use codemap;\n+    use syntax_pos;\n     use ext::base::{ExtCtxt, DummyMacroLoader};\n     use ext::mtwt;\n     use fold::Folder;"}, {"sha": "d9d4bb504a77dfb06fa7a9a693bb6599346cb7de", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51deb4fedbdab4b9b5a7610985c0be54e89cae73/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51deb4fedbdab4b9b5a7610985c0be54e89cae73/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=51deb4fedbdab4b9b5a7610985c0be54e89cae73", "patch": "@@ -1677,7 +1677,7 @@ fn ident_continue(c: Option<char>) -> bool {\n mod tests {\n     use super::*;\n \n-    use codemap::{BytePos, Span, NO_EXPANSION};\n+    use syntax_pos::{BytePos, Span, NO_EXPANSION};\n     use codemap::CodeMap;\n     use errors;\n     use parse::token;"}, {"sha": "0796f298be1a13a3e056d90d8ba021b954622c6a", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/51deb4fedbdab4b9b5a7610985c0be54e89cae73/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51deb4fedbdab4b9b5a7610985c0be54e89cae73/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=51deb4fedbdab4b9b5a7610985c0be54e89cae73", "patch": "@@ -662,7 +662,8 @@ pub fn integer_lit(s: &str,\n mod tests {\n     use super::*;\n     use std::rc::Rc;\n-    use syntax_pos::{Span, BytePos, Pos, Spanned, NO_EXPANSION};\n+    use syntax_pos::{Span, BytePos, Pos, NO_EXPANSION};\n+    use codemap::Spanned;\n     use ast::{self, TokenTree, PatKind};\n     use abi::Abi;\n     use attr::{first_attr_value_str_by_name, AttrMetaMethods};"}, {"sha": "d254d3a71cf7915efb151dfdc00cb8334f0ae4a0", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/51deb4fedbdab4b9b5a7610985c0be54e89cae73/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51deb4fedbdab4b9b5a7610985c0be54e89cae73/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=51deb4fedbdab4b9b5a7610985c0be54e89cae73", "patch": "@@ -3105,6 +3105,7 @@ mod tests {\n     use ast;\n     use codemap;\n     use parse::token;\n+    use syntax_pos;\n \n     #[test]\n     fn test_fun_to_string() {\n@@ -3126,7 +3127,7 @@ mod tests {\n     fn test_variant_to_string() {\n         let ident = token::str_to_ident(\"principal_skinner\");\n \n-        let var = syntax_pos::respan(syntax_pos::DUMMY_SP, ast::Variant_ {\n+        let var = codemap::respan(syntax_pos::DUMMY_SP, ast::Variant_ {\n             name: ident,\n             attrs: Vec::new(),\n             // making this up as I go.... ?"}, {"sha": "5ac1a6a0373a1dfac5ba25de01c0e026349c814c", "filename": "src/test/compile-fail/bad-format-args.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51deb4fedbdab4b9b5a7610985c0be54e89cae73/src%2Ftest%2Fcompile-fail%2Fbad-format-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51deb4fedbdab4b9b5a7610985c0be54e89cae73/src%2Ftest%2Fcompile-fail%2Fbad-format-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-format-args.rs?ref=51deb4fedbdab4b9b5a7610985c0be54e89cae73", "patch": "@@ -9,11 +9,11 @@\n // except according to those terms.\n \n // error-pattern: requires at least a format string argument\n-// error-pattern: bad-format-args.rs:19:5: 19:15 note: in this expansion\n+// error-pattern: bad-format-args.rs:19:5: 19:15: note: in this expansion\n \n // error-pattern: expected token: `,`\n-// error-pattern: bad-format-args.rs:20:5: 20:19 note: in this expansion\n-// error-pattern: bad-format-args.rs:21:5: 21:22 note: in this expansion\n+// error-pattern: bad-format-args.rs:20:5: 20:19: note: in this expansion\n+// error-pattern: bad-format-args.rs:21:5: 21:22: note: in this expansion\n \n fn main() {\n     format!();"}, {"sha": "a94b2a85c7754046716f305773b3f514a7df9aa0", "filename": "src/test/run-make/execution-engine/test.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51deb4fedbdab4b9b5a7610985c0be54e89cae73/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51deb4fedbdab4b9b5a7610985c0be54e89cae73/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs?ref=51deb4fedbdab4b9b5a7610985c0be54e89cae73", "patch": "@@ -18,6 +18,8 @@ extern crate rustc_lint;\n extern crate rustc_llvm as llvm;\n extern crate rustc_metadata;\n extern crate rustc_resolve;\n+extern crate rustc_errors;\n+extern crate rustc_errors as errors;\n #[macro_use] extern crate syntax;\n \n use std::ffi::{CStr, CString};\n@@ -38,7 +40,7 @@ use rustc_metadata::creader::read_local_crates;\n use rustc_metadata::cstore::CStore;\n use libc::c_void;\n \n-use syntax::diagnostics::registry::Registry;\n+use rustc_errors::registry::Registry;\n use syntax::parse::token;\n \n fn main() {"}, {"sha": "aa3495ec5eebb56869e1476cbf3674752af59855", "filename": "src/test/run-make/issue-19371/foo.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/51deb4fedbdab4b9b5a7610985c0be54e89cae73/src%2Ftest%2Frun-make%2Fissue-19371%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51deb4fedbdab4b9b5a7610985c0be54e89cae73/src%2Ftest%2Frun-make%2Fissue-19371%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-19371%2Ffoo.rs?ref=51deb4fedbdab4b9b5a7610985c0be54e89cae73", "patch": "@@ -14,14 +14,15 @@ extern crate rustc;\n extern crate rustc_driver;\n extern crate rustc_lint;\n extern crate rustc_metadata;\n+extern crate rustc_errors;\n extern crate syntax;\n \n use rustc::dep_graph::DepGraph;\n use rustc::session::{build_session, Session};\n use rustc::session::config::{basic_options, build_configuration, Input, OutputType};\n use rustc_driver::driver::{compile_input, CompileController, anon_src};\n use rustc_metadata::cstore::CStore;\n-use syntax::diagnostics::registry::Registry;\n+use rustc_errors::registry::Registry;\n use syntax::parse::token;\n \n use std::path::PathBuf;"}]}