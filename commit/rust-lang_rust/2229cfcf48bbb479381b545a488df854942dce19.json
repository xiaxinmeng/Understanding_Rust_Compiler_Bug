{"sha": "2229cfcf48bbb479381b545a488df854942dce19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMjljZmNmNDhiYmI0NzkzODFiNTQ1YTQ4OGRmODU0OTQyZGNlMTk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-07-30T16:50:39Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-07-30T16:50:39Z"}, "message": "internal: cleanup lsp-extensions docs", "tree": {"sha": "c85428b1caac61b84a2e35c0c8b3eaccd87bb233", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c85428b1caac61b84a2e35c0c8b3eaccd87bb233"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2229cfcf48bbb479381b545a488df854942dce19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2229cfcf48bbb479381b545a488df854942dce19", "html_url": "https://github.com/rust-lang/rust/commit/2229cfcf48bbb479381b545a488df854942dce19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2229cfcf48bbb479381b545a488df854942dce19/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33f12a3608c5ffede3ae51ca6883f5502ffcc8c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/33f12a3608c5ffede3ae51ca6883f5502ffcc8c6", "html_url": "https://github.com/rust-lang/rust/commit/33f12a3608c5ffede3ae51ca6883f5502ffcc8c6"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "a6a1c73111bca92b4559f311578a3bc645bf912c", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/2229cfcf48bbb479381b545a488df854942dce19/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/2229cfcf48bbb479381b545a488df854942dce19/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=2229cfcf48bbb479381b545a488df854942dce19", "patch": "@@ -27,7 +27,7 @@ https://clangd.llvm.org/extensions.html#utf-8-offsets\n \n ## Configuration in `initializationOptions`\n \n-**Issue:** https://github.com/microsoft/language-server-protocol/issues/567\n+**Upstream Issue:** https://github.com/microsoft/language-server-protocol/issues/567\n \n The `initializationOptions` field of the `InitializeParams` of the initialization request should contain the `\"rust-analyzer\"` section of the configuration.\n \n@@ -43,7 +43,7 @@ If a language client does not know about `rust-analyzer`'s configuration options\n \n ## Snippet `TextEdit`\n \n-**Issue:** https://github.com/microsoft/language-server-protocol/issues/724\n+**Upstream Issue:** https://github.com/microsoft/language-server-protocol/issues/724\n \n **Experimental Client Capability:** `{ \"snippetTextEdit\": boolean }`\n \n@@ -77,7 +77,7 @@ At the moment, rust-analyzer guarantees that only a single edit will have `Inser\n \n ## `CodeAction` Groups\n \n-**Issue:** https://github.com/microsoft/language-server-protocol/issues/994\n+**Upstream Issue:** https://github.com/microsoft/language-server-protocol/issues/994\n \n **Experimental Client Capability:** `{ \"codeActionGroup\": boolean }`\n \n@@ -124,7 +124,7 @@ Invoking code action at this position will yield two code actions for importing\n \n ## Parent Module\n \n-**Issue:** https://github.com/microsoft/language-server-protocol/issues/1002\n+**Upstream Issue:** https://github.com/microsoft/language-server-protocol/issues/1002\n \n **Experimental Server Capability:** `{ \"parentModule\": boolean }`\n \n@@ -158,7 +158,7 @@ mod foo;\n \n ## Join Lines\n \n-**Issue:** https://github.com/microsoft/language-server-protocol/issues/992\n+**Upstream Issue:** https://github.com/microsoft/language-server-protocol/issues/992\n \n **Experimental Server Capability:** `{ \"joinLines\": boolean }`\n \n@@ -205,7 +205,7 @@ fn main() {\n \n ## On Enter\n \n-**Issue:** https://github.com/microsoft/language-server-protocol/issues/1001\n+**Upstream Issue:** https://github.com/microsoft/language-server-protocol/issues/1001\n \n **Experimental Server Capability:** `{ \"onEnter\": boolean }`\n \n@@ -298,7 +298,7 @@ SSR with query `foo($a, $b) ==>> ($a).foo($b)` will transform, eg `foo(y + 5, z)\n \n ## Matching Brace\n \n-**Issue:** https://github.com/microsoft/language-server-protocol/issues/999\n+**Upstream Issue:** https://github.com/microsoft/language-server-protocol/issues/999\n \n **Experimental Server Capability:** `{ \"matchingBrace\": boolean }`\n \n@@ -343,7 +343,7 @@ Moreover, it would be cool if editors didn't need to implement even basic langua\n \n ## Runnables\n \n-**Issue:** https://github.com/microsoft/language-server-protocol/issues/944\n+**Upstream Issue:** https://github.com/microsoft/language-server-protocol/issues/944\n \n **Experimental Server Capability:** `{ \"runnables\": { \"kinds\": string[] } }`\n \n@@ -617,7 +617,7 @@ Such actions on the client side are appended to a hover bottom as command links:\n \n ## Open Cargo.toml\n \n-**Issue:** https://github.com/rust-analyzer/rust-analyzer/issues/6462\n+**Upstream Issue:** https://github.com/rust-analyzer/rust-analyzer/issues/6462\n \n **Experimental Server Capability:** `{ \"openCargoToml\": boolean }`\n \n@@ -660,7 +660,7 @@ interface TestInfo {\n \n ## Hover Range\n \n-**Issue:** https://github.com/microsoft/language-server-protocol/issues/377\n+**Upstream Issue:** https://github.com/microsoft/language-server-protocol/issues/377\n \n **Experimental Server Capability:** { \"hoverRange\": boolean }\n \n@@ -687,7 +687,7 @@ Triggering a hover inside the selection above will show a result of `i32`.\n \n ## Move Item\n \n-**Issue:** https://github.com/rust-analyzer/rust-analyzer/issues/6823\n+**Upstream Issue:** https://github.com/rust-analyzer/rust-analyzer/issues/6823\n \n This request is sent from client to server to move item under cursor or selection in some direction.\n \n@@ -712,7 +712,7 @@ export const enum Direction {\n \n ## Workspace Symbols Filtering\n \n-**Issue:** https://github.com/rust-analyzer/rust-analyzer/pull/7698\n+**Upstream Issue:** https://github.com/microsoft/language-server-protocol/issues/941\n \n **Experimental Server Capability:** `{ \"workspaceSymbolScopeKindFiltering\": boolean }`\n \n@@ -746,6 +746,8 @@ const enum WorkspaceSymbolSearchKind {\n \n ## Client Commands\n \n+**Upstream Issue:** https://github.com/microsoft/language-server-protocol/issues/642\n+\n **Experimental Client Capability:** `{ \"commands?\": ClientCommandOptions }`\n \n Certain LSP types originating on the server, notably code lenses, embed commands.\n@@ -757,9 +759,9 @@ This extensions allows the client to communicate this info.\n \n ```typescript\n export interface ClientCommandOptions {\n-\t/**\n-\t * The commands to be executed on the client\n-\t */\n-\tcommands: string[];\n+    /**\n+     * The commands to be executed on the client\n+     */\n+    commands: string[];\n }\n ```"}]}