{"sha": "ce23a9992542f0c82e0f32c427b572caae790754", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlMjNhOTk5MjU0MmYwYzgyZTBmMzJjNDI3YjU3MmNhYWU3OTA3NTQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-10-25T17:21:34Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-10-25T17:23:37Z"}, "message": "libcore: Make a few more dvec functions inline. Improves profile of Servo. rs=me", "tree": {"sha": "8e33387e5dedd11098358295b55153258482d6ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e33387e5dedd11098358295b55153258482d6ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce23a9992542f0c82e0f32c427b572caae790754", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce23a9992542f0c82e0f32c427b572caae790754", "html_url": "https://github.com/rust-lang/rust/commit/ce23a9992542f0c82e0f32c427b572caae790754", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce23a9992542f0c82e0f32c427b572caae790754/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2d5acd6bcf34da3c7a16e554f9249c4cb1cc846", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2d5acd6bcf34da3c7a16e554f9249c4cb1cc846", "html_url": "https://github.com/rust-lang/rust/commit/b2d5acd6bcf34da3c7a16e554f9249c4cb1cc846"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "647f2f052cacc6442fd96990d1545ca8c8903fff", "filename": "src/libcore/dvec.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ce23a9992542f0c82e0f32c427b572caae790754/src%2Flibcore%2Fdvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce23a9992542f0c82e0f32c427b572caae790754/src%2Flibcore%2Fdvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fdvec.rs?ref=ce23a9992542f0c82e0f32c427b572caae790754", "patch": "@@ -77,6 +77,7 @@ pub fn unwrap<A>(d: DVec<A>) -> ~[A] {\n }\n \n priv impl<A> DVec<A> {\n+    #[inline(always)]\n     pure fn check_not_borrowed() {\n         unsafe {\n             let data: *() = cast::reinterpret_cast(&self.data);\n@@ -137,17 +138,14 @@ impl<A> DVec<A> {\n     }\n \n     /// Returns the number of elements currently in the dvec\n+    #[inline(always)]\n     pure fn len() -> uint {\n-        unsafe {\n-            do self.check_out |v| {\n-                let l = v.len();\n-                self.give_back(move v);\n-                l\n-            }\n-        }\n+        self.check_not_borrowed();\n+        return self.data.len();\n     }\n \n     /// Overwrite the current contents\n+    #[inline(always)]\n     fn set(w: ~[A]) {\n         self.check_not_borrowed();\n         self.data = move w;\n@@ -178,6 +176,7 @@ impl<A> DVec<A> {\n     }\n \n     /// Append a single item to the end of the list\n+    #[inline(always)]\n     fn push(t: A) {\n         self.check_not_borrowed();\n         self.data.push(move t);\n@@ -354,6 +353,7 @@ impl<A: Copy> DVec<A> {\n }\n \n impl<A:Copy> DVec<A>: Index<uint,A> {\n+    #[inline(always)]\n     pure fn index(idx: uint) -> A {\n         self.get_elt(idx)\n     }"}]}