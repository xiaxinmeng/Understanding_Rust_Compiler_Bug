{"sha": "bd9d375c6b935bb536502d2c47410db319d5e0a8", "node_id": "C_kwDOAAsO6NoAKGJkOWQzNzVjNmI5MzViYjUzNjUwMmQyYzQ3NDEwZGIzMTlkNWUwYTg", "commit": {"author": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2022-09-12T11:34:09Z"}, "committer": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2022-09-12T11:39:54Z"}, "message": "Fix FormatArgsExpn parsing of FormatSpec positions", "tree": {"sha": "12d63a2d8659bed19debf89980ce74e56c97e995", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12d63a2d8659bed19debf89980ce74e56c97e995"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd9d375c6b935bb536502d2c47410db319d5e0a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd9d375c6b935bb536502d2c47410db319d5e0a8", "html_url": "https://github.com/rust-lang/rust/commit/bd9d375c6b935bb536502d2c47410db319d5e0a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd9d375c6b935bb536502d2c47410db319d5e0a8/comments", "author": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b245e7e0e83d387ab9d2cc7a157b081ba5d0ef2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b245e7e0e83d387ab9d2cc7a157b081ba5d0ef2", "html_url": "https://github.com/rust-lang/rust/commit/1b245e7e0e83d387ab9d2cc7a157b081ba5d0ef2"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "2f371fe19b9c5a0f995325bb2405f4a2a788b8ba", "filename": "clippy_utils/src/macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd9d375c6b935bb536502d2c47410db319d5e0a8/clippy_utils%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd9d375c6b935bb536502d2c47410db319d5e0a8/clippy_utils%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fmacros.rs?ref=bd9d375c6b935bb536502d2c47410db319d5e0a8", "patch": "@@ -7,7 +7,7 @@ use crate::visitors::expr_visitor_no_bodies;\n use arrayvec::ArrayVec;\n use itertools::{izip, Either, Itertools};\n use rustc_ast::ast::LitKind;\n-use rustc_hir::intravisit::Visitor;\n+use rustc_hir::intravisit::{walk_expr, Visitor};\n use rustc_hir::{self as hir, Expr, ExprField, ExprKind, HirId, Node, QPath};\n use rustc_lexer::unescape::unescape_literal;\n use rustc_lexer::{tokenize, unescape, LiteralKind, TokenKind};\n@@ -515,7 +515,7 @@ impl<'tcx> Visitor<'tcx> for ParamPosition {\n             sym::width => {\n                 self.width = parse_count(field.expr);\n             },\n-            _ => {},\n+            _ => walk_expr(self, field.expr),\n         }\n     }\n }"}, {"sha": "35283725619ae8bcb5651e80310af5a80d4f2b92", "filename": "tests/ui/explicit_write.fixed", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd9d375c6b935bb536502d2c47410db319d5e0a8/tests%2Fui%2Fexplicit_write.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/bd9d375c6b935bb536502d2c47410db319d5e0a8/tests%2Fui%2Fexplicit_write.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_write.fixed?ref=bd9d375c6b935bb536502d2c47410db319d5e0a8", "patch": "@@ -36,6 +36,8 @@ fn main() {\n         eprintln!(\"with {} {}\", 2, value);\n         eprintln!(\"with {value}\");\n         eprintln!(\"macro arg {}\", one!());\n+        let width = 2;\n+        eprintln!(\"{:w$}\", value, w = width);\n     }\n     // these should not warn, different destination\n     {"}, {"sha": "be864a55b663ffc9092c2b3083b3e1bc06e82063", "filename": "tests/ui/explicit_write.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd9d375c6b935bb536502d2c47410db319d5e0a8/tests%2Fui%2Fexplicit_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd9d375c6b935bb536502d2c47410db319d5e0a8/tests%2Fui%2Fexplicit_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_write.rs?ref=bd9d375c6b935bb536502d2c47410db319d5e0a8", "patch": "@@ -36,6 +36,8 @@ fn main() {\n         writeln!(std::io::stderr(), \"with {} {}\", 2, value).unwrap();\n         writeln!(std::io::stderr(), \"with {value}\").unwrap();\n         writeln!(std::io::stderr(), \"macro arg {}\", one!()).unwrap();\n+        let width = 2;\n+        writeln!(std::io::stderr(), \"{:w$}\", value, w = width).unwrap();\n     }\n     // these should not warn, different destination\n     {"}, {"sha": "ff05f4343d77d8c600b5c7660d8f585acf8a3430", "filename": "tests/ui/explicit_write.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bd9d375c6b935bb536502d2c47410db319d5e0a8/tests%2Fui%2Fexplicit_write.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd9d375c6b935bb536502d2c47410db319d5e0a8/tests%2Fui%2Fexplicit_write.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_write.stderr?ref=bd9d375c6b935bb536502d2c47410db319d5e0a8", "patch": "@@ -72,5 +72,11 @@ error: use of `writeln!(stderr(), ...).unwrap()`\n LL |         writeln!(std::io::stderr(), \"macro arg {}\", one!()).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"macro arg {}\", one!())`\n \n-error: aborting due to 12 previous errors\n+error: use of `writeln!(stderr(), ...).unwrap()`\n+  --> $DIR/explicit_write.rs:40:9\n+   |\n+LL |         writeln!(std::io::stderr(), \"{:w$}\", value, w = width).unwrap();\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"{:w$}\", value, w = width)`\n+\n+error: aborting due to 13 previous errors\n "}]}