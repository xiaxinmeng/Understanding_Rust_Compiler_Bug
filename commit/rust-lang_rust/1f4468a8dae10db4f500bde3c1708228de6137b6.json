{"sha": "1f4468a8dae10db4f500bde3c1708228de6137b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNDQ2OGE4ZGFlMTBkYjRmNTAwYmRlM2MxNzA4MjI4ZGU2MTM3YjY=", "commit": {"author": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-03-04T17:10:14Z"}, "committer": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-03-04T17:10:14Z"}, "message": "Add support for parsing multiple if and while-let patterns", "tree": {"sha": "5d2201db2a770053f0527d82df453e3478c940c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d2201db2a770053f0527d82df453e3478c940c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f4468a8dae10db4f500bde3c1708228de6137b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f4468a8dae10db4f500bde3c1708228de6137b6", "html_url": "https://github.com/rust-lang/rust/commit/1f4468a8dae10db4f500bde3c1708228de6137b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f4468a8dae10db4f500bde3c1708228de6137b6/comments", "author": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbaf750b10810c21d42710a5d12181ca73099525", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbaf750b10810c21d42710a5d12181ca73099525", "html_url": "https://github.com/rust-lang/rust/commit/bbaf750b10810c21d42710a5d12181ca73099525"}], "stats": {"total": 175, "additions": 174, "deletions": 1}, "files": [{"sha": "dfa3916323e1c6c035230769447ebb993b0479d2", "filename": "crates/ra_parser/src/grammar/expressions/atom.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1f4468a8dae10db4f500bde3c1708228de6137b6/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f4468a8dae10db4f500bde3c1708228de6137b6/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=1f4468a8dae10db4f500bde3c1708228de6137b6", "patch": "@@ -281,10 +281,20 @@ fn for_expr(p: &mut Parser, m: Option<Marker>) -> CompletedMarker {\n \n // test cond\n // fn foo() { if let Some(_) = None {} }\n+// fn bar() {\n+//     if let Some(_) | Some(_) = None {}\n+//     if let | Some(_) = None {}\n+//     while let Some(_) | Some(_) = None {}\n+//     while let | Some(_) = None {}\n+// }\n fn cond(p: &mut Parser) {\n     let m = p.start();\n     if p.eat(LET_KW) {\n+        p.eat(PIPE);\n         patterns::pattern(p);\n+        while p.eat(PIPE) {\n+            patterns::pattern(p);\n+        }\n         p.expect(EQ);\n     }\n     expr_no_struct(p);"}, {"sha": "2552a2621f9e4fb3dd4179f21f533d104a589834", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0030_cond.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f4468a8dae10db4f500bde3c1708228de6137b6/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0030_cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f4468a8dae10db4f500bde3c1708228de6137b6/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0030_cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0030_cond.rs?ref=1f4468a8dae10db4f500bde3c1708228de6137b6", "patch": "@@ -1 +1,7 @@\n fn foo() { if let Some(_) = None {} }\n+fn bar() {\n+    if let Some(_) | Some(_) = None {}\n+    if let | Some(_) = None {}\n+    while let Some(_) | Some(_) = None {}\n+    while let | Some(_) = None {}\n+}"}, {"sha": "6dea1848b428adb7cde00afd116b5326f13a1b8b", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0030_cond.txt", "status": "modified", "additions": 158, "deletions": 1, "changes": 159, "blob_url": "https://github.com/rust-lang/rust/blob/1f4468a8dae10db4f500bde3c1708228de6137b6/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0030_cond.txt", "raw_url": "https://github.com/rust-lang/rust/raw/1f4468a8dae10db4f500bde3c1708228de6137b6/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0030_cond.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0030_cond.txt?ref=1f4468a8dae10db4f500bde3c1708228de6137b6", "patch": "@@ -1,4 +1,4 @@\n-SOURCE_FILE@[0; 38)\n+SOURCE_FILE@[0; 197)\n   FN_DEF@[0; 37)\n     FN_KW@[0; 2)\n     WHITESPACE@[2; 3)\n@@ -41,3 +41,160 @@ SOURCE_FILE@[0; 38)\n       WHITESPACE@[35; 36)\n       R_CURLY@[36; 37)\n   WHITESPACE@[37; 38)\n+  FN_DEF@[38; 196)\n+    FN_KW@[38; 40)\n+    WHITESPACE@[40; 41)\n+    NAME@[41; 44)\n+      IDENT@[41; 44) \"bar\"\n+    PARAM_LIST@[44; 46)\n+      L_PAREN@[44; 45)\n+      R_PAREN@[45; 46)\n+    WHITESPACE@[46; 47)\n+    BLOCK@[47; 196)\n+      L_CURLY@[47; 48)\n+      WHITESPACE@[48; 53)\n+      EXPR_STMT@[53; 87)\n+        IF_EXPR@[53; 87)\n+          IF_KW@[53; 55)\n+          WHITESPACE@[55; 56)\n+          CONDITION@[56; 84)\n+            LET_KW@[56; 59)\n+            WHITESPACE@[59; 60)\n+            TUPLE_STRUCT_PAT@[60; 67)\n+              PATH@[60; 64)\n+                PATH_SEGMENT@[60; 64)\n+                  NAME_REF@[60; 64)\n+                    IDENT@[60; 64) \"Some\"\n+              L_PAREN@[64; 65)\n+              PLACEHOLDER_PAT@[65; 66)\n+                UNDERSCORE@[65; 66)\n+              R_PAREN@[66; 67)\n+            WHITESPACE@[67; 68)\n+            PIPE@[68; 69)\n+            WHITESPACE@[69; 70)\n+            TUPLE_STRUCT_PAT@[70; 77)\n+              PATH@[70; 74)\n+                PATH_SEGMENT@[70; 74)\n+                  NAME_REF@[70; 74)\n+                    IDENT@[70; 74) \"Some\"\n+              L_PAREN@[74; 75)\n+              PLACEHOLDER_PAT@[75; 76)\n+                UNDERSCORE@[75; 76)\n+              R_PAREN@[76; 77)\n+            WHITESPACE@[77; 78)\n+            EQ@[78; 79)\n+            WHITESPACE@[79; 80)\n+            PATH_EXPR@[80; 84)\n+              PATH@[80; 84)\n+                PATH_SEGMENT@[80; 84)\n+                  NAME_REF@[80; 84)\n+                    IDENT@[80; 84) \"None\"\n+          WHITESPACE@[84; 85)\n+          BLOCK@[85; 87)\n+            L_CURLY@[85; 86)\n+            R_CURLY@[86; 87)\n+      WHITESPACE@[87; 92)\n+      EXPR_STMT@[92; 118)\n+        IF_EXPR@[92; 118)\n+          IF_KW@[92; 94)\n+          WHITESPACE@[94; 95)\n+          CONDITION@[95; 115)\n+            LET_KW@[95; 98)\n+            WHITESPACE@[98; 99)\n+            PIPE@[99; 100)\n+            WHITESPACE@[100; 101)\n+            TUPLE_STRUCT_PAT@[101; 108)\n+              PATH@[101; 105)\n+                PATH_SEGMENT@[101; 105)\n+                  NAME_REF@[101; 105)\n+                    IDENT@[101; 105) \"Some\"\n+              L_PAREN@[105; 106)\n+              PLACEHOLDER_PAT@[106; 107)\n+                UNDERSCORE@[106; 107)\n+              R_PAREN@[107; 108)\n+            WHITESPACE@[108; 109)\n+            EQ@[109; 110)\n+            WHITESPACE@[110; 111)\n+            PATH_EXPR@[111; 115)\n+              PATH@[111; 115)\n+                PATH_SEGMENT@[111; 115)\n+                  NAME_REF@[111; 115)\n+                    IDENT@[111; 115) \"None\"\n+          WHITESPACE@[115; 116)\n+          BLOCK@[116; 118)\n+            L_CURLY@[116; 117)\n+            R_CURLY@[117; 118)\n+      WHITESPACE@[118; 123)\n+      EXPR_STMT@[123; 160)\n+        WHILE_EXPR@[123; 160)\n+          WHILE_KW@[123; 128)\n+          WHITESPACE@[128; 129)\n+          CONDITION@[129; 157)\n+            LET_KW@[129; 132)\n+            WHITESPACE@[132; 133)\n+            TUPLE_STRUCT_PAT@[133; 140)\n+              PATH@[133; 137)\n+                PATH_SEGMENT@[133; 137)\n+                  NAME_REF@[133; 137)\n+                    IDENT@[133; 137) \"Some\"\n+              L_PAREN@[137; 138)\n+              PLACEHOLDER_PAT@[138; 139)\n+                UNDERSCORE@[138; 139)\n+              R_PAREN@[139; 140)\n+            WHITESPACE@[140; 141)\n+            PIPE@[141; 142)\n+            WHITESPACE@[142; 143)\n+            TUPLE_STRUCT_PAT@[143; 150)\n+              PATH@[143; 147)\n+                PATH_SEGMENT@[143; 147)\n+                  NAME_REF@[143; 147)\n+                    IDENT@[143; 147) \"Some\"\n+              L_PAREN@[147; 148)\n+              PLACEHOLDER_PAT@[148; 149)\n+                UNDERSCORE@[148; 149)\n+              R_PAREN@[149; 150)\n+            WHITESPACE@[150; 151)\n+            EQ@[151; 152)\n+            WHITESPACE@[152; 153)\n+            PATH_EXPR@[153; 157)\n+              PATH@[153; 157)\n+                PATH_SEGMENT@[153; 157)\n+                  NAME_REF@[153; 157)\n+                    IDENT@[153; 157) \"None\"\n+          WHITESPACE@[157; 158)\n+          BLOCK@[158; 160)\n+            L_CURLY@[158; 159)\n+            R_CURLY@[159; 160)\n+      WHITESPACE@[160; 165)\n+      WHILE_EXPR@[165; 194)\n+        WHILE_KW@[165; 170)\n+        WHITESPACE@[170; 171)\n+        CONDITION@[171; 191)\n+          LET_KW@[171; 174)\n+          WHITESPACE@[174; 175)\n+          PIPE@[175; 176)\n+          WHITESPACE@[176; 177)\n+          TUPLE_STRUCT_PAT@[177; 184)\n+            PATH@[177; 181)\n+              PATH_SEGMENT@[177; 181)\n+                NAME_REF@[177; 181)\n+                  IDENT@[177; 181) \"Some\"\n+            L_PAREN@[181; 182)\n+            PLACEHOLDER_PAT@[182; 183)\n+              UNDERSCORE@[182; 183)\n+            R_PAREN@[183; 184)\n+          WHITESPACE@[184; 185)\n+          EQ@[185; 186)\n+          WHITESPACE@[186; 187)\n+          PATH_EXPR@[187; 191)\n+            PATH@[187; 191)\n+              PATH_SEGMENT@[187; 191)\n+                NAME_REF@[187; 191)\n+                  IDENT@[187; 191) \"None\"\n+        WHITESPACE@[191; 192)\n+        BLOCK@[192; 194)\n+          L_CURLY@[192; 193)\n+          R_CURLY@[193; 194)\n+      WHITESPACE@[194; 195)\n+      R_CURLY@[195; 196)\n+  WHITESPACE@[196; 197)"}]}