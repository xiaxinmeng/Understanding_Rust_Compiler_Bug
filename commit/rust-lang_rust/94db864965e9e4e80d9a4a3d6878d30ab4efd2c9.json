{"sha": "94db864965e9e4e80d9a4a3d6878d30ab4efd2c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ZGI4NjQ5NjVlOWU0ZTgwZDlhNGEzZDY4NzhkMzBhYjRlZmQyYzk=", "commit": {"author": {"name": "Paul Dicker", "email": "pitdicker@gmail.com", "date": "2016-02-21T17:15:41Z"}, "committer": {"name": "Paul Dicker", "email": "pitdicker@gmail.com", "date": "2016-02-21T17:15:41Z"}, "message": "Fixes for 32-bit", "tree": {"sha": "62b0f66c372a598ea7f6168a7763cc00d159967d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62b0f66c372a598ea7f6168a7763cc00d159967d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94db864965e9e4e80d9a4a3d6878d30ab4efd2c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94db864965e9e4e80d9a4a3d6878d30ab4efd2c9", "html_url": "https://github.com/rust-lang/rust/commit/94db864965e9e4e80d9a4a3d6878d30ab4efd2c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94db864965e9e4e80d9a4a3d6878d30ab4efd2c9/comments", "author": {"login": "pitdicker", "id": 6255050, "node_id": "MDQ6VXNlcjYyNTUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6255050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitdicker", "html_url": "https://github.com/pitdicker", "followers_url": "https://api.github.com/users/pitdicker/followers", "following_url": "https://api.github.com/users/pitdicker/following{/other_user}", "gists_url": "https://api.github.com/users/pitdicker/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitdicker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitdicker/subscriptions", "organizations_url": "https://api.github.com/users/pitdicker/orgs", "repos_url": "https://api.github.com/users/pitdicker/repos", "events_url": "https://api.github.com/users/pitdicker/events{/privacy}", "received_events_url": "https://api.github.com/users/pitdicker/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pitdicker", "id": 6255050, "node_id": "MDQ6VXNlcjYyNTUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6255050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitdicker", "html_url": "https://github.com/pitdicker", "followers_url": "https://api.github.com/users/pitdicker/followers", "following_url": "https://api.github.com/users/pitdicker/following{/other_user}", "gists_url": "https://api.github.com/users/pitdicker/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitdicker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitdicker/subscriptions", "organizations_url": "https://api.github.com/users/pitdicker/orgs", "repos_url": "https://api.github.com/users/pitdicker/repos", "events_url": "https://api.github.com/users/pitdicker/events{/privacy}", "received_events_url": "https://api.github.com/users/pitdicker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a6f35b31725ea7d7ec88030dd38600a9412c3cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a6f35b31725ea7d7ec88030dd38600a9412c3cf", "html_url": "https://github.com/rust-lang/rust/commit/0a6f35b31725ea7d7ec88030dd38600a9412c3cf"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "71d8f7df3590b827d429e42945e623fc37c37b9d", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/94db864965e9e4e80d9a4a3d6878d30ab4efd2c9/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94db864965e9e4e80d9a4a3d6878d30ab4efd2c9/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=94db864965e9e4e80d9a4a3d6878d30ab4efd2c9", "patch": "@@ -20,6 +20,7 @@ use ptr;\n \n #[repr(simd)]\n #[repr(C)]\n+#[cfg(target_arch = \"x86_64\")]\n struct u64x2(u64, u64);\n \n pub use self::FILE_INFO_BY_HANDLE_CLASS::*;\n@@ -246,17 +247,17 @@ pub const CRYPT_VERIFYCONTEXT: DWORD = 0xF0000000;\n pub const EXCEPTION_CONTINUE_SEARCH: LONG = 0;\n pub const EXCEPTION_STACK_OVERFLOW: DWORD = 0xc00000fd;\n pub const EXCEPTION_MAXIMUM_PARAMETERS: usize = 15;\n-#[cfg(target_env = \"gnu\")]\n+#[cfg(all(target_arch = \"x86_64\", target_env = \"gnu\"))]\n pub const EXCEPTION_NONCONTINUABLE: DWORD = 0x1;   // Noncontinuable exception\n-#[cfg(target_env = \"gnu\")]\n+#[cfg(all(target_arch = \"x86_64\", target_env = \"gnu\"))]\n pub const EXCEPTION_UNWINDING: DWORD = 0x2;        // Unwind is in progress\n-#[cfg(target_env = \"gnu\")]\n+#[cfg(all(target_arch = \"x86_64\", target_env = \"gnu\"))]\n pub const EXCEPTION_EXIT_UNWIND: DWORD = 0x4;      // Exit unwind is in progress\n-#[cfg(target_env = \"gnu\")]\n+#[cfg(all(target_arch = \"x86_64\", target_env = \"gnu\"))]\n pub const EXCEPTION_TARGET_UNWIND: DWORD = 0x20;   // Target unwind in progress\n-#[cfg(target_env = \"gnu\")]\n+#[cfg(all(target_arch = \"x86_64\", target_env = \"gnu\"))]\n pub const EXCEPTION_COLLIDED_UNWIND: DWORD = 0x40; // Collided exception handler call\n-#[cfg(target_env = \"gnu\")]\n+#[cfg(all(target_arch = \"x86_64\", target_env = \"gnu\"))]\n pub const EXCEPTION_UNWIND: DWORD = EXCEPTION_UNWINDING |\n                                     EXCEPTION_EXIT_UNWIND |\n                                     EXCEPTION_TARGET_UNWIND |\n@@ -774,19 +775,19 @@ pub struct in6_addr {\n     pub s6_addr: [u8; 16],\n }\n \n-#[cfg(target_env = \"gnu\")]\n+#[cfg(all(target_arch = \"x86_64\", target_env = \"gnu\"))]\n pub enum UNWIND_HISTORY_TABLE {}\n \n #[repr(C)]\n-#[cfg(target_env = \"gnu\")]\n+#[cfg(all(target_arch = \"x86_64\", target_env = \"gnu\"))]\n pub struct RUNTIME_FUNCTION {\n     pub BeginAddress: DWORD,\n     pub EndAddress: DWORD,\n     pub UnwindData: DWORD,\n }\n \n #[repr(C)]\n-#[cfg(target_env = \"gnu\")]\n+#[cfg(all(target_arch = \"x86_64\", target_env = \"gnu\"))]\n pub struct DISPATCHER_CONTEXT {\n     pub ControlPc: LPVOID,\n     pub ImageBase: LPVOID,\n@@ -1089,7 +1090,7 @@ extern \"system\" {\n                           dwExceptionFlags: DWORD,\n                           nNumberOfArguments: DWORD,\n                           lpArguments: *const ULONG_PTR);\n-    #[cfg(target_env = \"gnu\")]\n+    #[cfg(all(target_arch = \"x86_64\", target_env = \"gnu\"))]\n     pub fn RtlUnwindEx(TargetFrame: LPVOID,\n                        TargetIp: LPVOID,\n                        ExceptionRecord: *const EXCEPTION_RECORD,"}]}