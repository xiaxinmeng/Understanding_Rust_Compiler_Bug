{"sha": "a29c770c68591f4defe355c6db0a8478b9ef053f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyOWM3NzBjNjg1OTFmNGRlZmUzNTVjNmRiMGE4NDc4YjllZjA1M2Y=", "commit": {"author": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2017-09-30T02:21:35Z"}, "committer": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2017-09-30T02:34:51Z"}, "message": "make match exaustive", "tree": {"sha": "fab0017945f48c71bbc53bfa51058b56bdd13f13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fab0017945f48c71bbc53bfa51058b56bdd13f13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a29c770c68591f4defe355c6db0a8478b9ef053f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a29c770c68591f4defe355c6db0a8478b9ef053f", "html_url": "https://github.com/rust-lang/rust/commit/a29c770c68591f4defe355c6db0a8478b9ef053f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a29c770c68591f4defe355c6db0a8478b9ef053f/comments", "author": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59e778e5e1932eaa97cd46bca8f58a8233c579d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/59e778e5e1932eaa97cd46bca8f58a8233c579d1", "html_url": "https://github.com/rust-lang/rust/commit/59e778e5e1932eaa97cd46bca8f58a8233c579d1"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "35ab1cec4cf9ebe459406021de9df6007d1c8e92", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a29c770c68591f4defe355c6db0a8478b9ef053f/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a29c770c68591f4defe355c6db0a8478b9ef053f/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=a29c770c68591f4defe355c6db0a8478b9ef053f", "patch": "@@ -247,15 +247,17 @@ fn resolve_associated_item<'a, 'tcx>(\n                 substs: rcvr_substs\n             })\n         }\n-        traits::VtableBuiltin(..) if Some(trait_id) == tcx.lang_items().clone_trait() => {\n-            Some(Instance {\n-                def: ty::InstanceDef::CloneShim(def_id, trait_ref.self_ty()),\n-                substs: rcvr_substs\n-            })\n-        }\n-        _ => {\n-            None\n+        traits::VtableBuiltin(..) => {\n+            if let Some(_) = tcx.lang_items().clone_trait() {\n+                Some(Instance {\n+                    def: ty::InstanceDef::CloneShim(def_id, trait_ref.self_ty()),\n+                    substs: rcvr_substs\n+                })\n+            } else {\n+                None\n+            }\n         }\n+        traits::VtableDefaultImpl(..) | traits::VtableParam(..) => None\n     }\n }\n \n@@ -287,8 +289,9 @@ fn needs_fn_once_adapter_shim<'a, 'tcx>(actual_closure_kind: ty::ClosureKind,\n                 //\n                 // These are both the same at trans time.\n                 Ok(true)\n-            }\n-        _ => Err(()),\n+        }\n+        (ty::ClosureKind::FnMut, _) |\n+        (ty::ClosureKind::FnOnce, _) => Err(())\n     }\n }\n "}]}