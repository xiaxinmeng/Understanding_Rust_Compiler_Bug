{"sha": "1ca07b9a44a6de9c769a66ed98a5b165a42aee15", "node_id": "C_kwDOAAsO6NoAKDFjYTA3YjlhNDRhNmRlOWM3NjlhNjZlZDk4YTViMTY1YTQyYWVlMTU", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-15T14:16:39Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-15T17:28:48Z"}, "message": "Fix running simple-raytracer benchmark on Windows", "tree": {"sha": "59851b397a3e9dc54cdadbbcc049cac6f4a33f90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59851b397a3e9dc54cdadbbcc049cac6f4a33f90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ca07b9a44a6de9c769a66ed98a5b165a42aee15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ca07b9a44a6de9c769a66ed98a5b165a42aee15", "html_url": "https://github.com/rust-lang/rust/commit/1ca07b9a44a6de9c769a66ed98a5b165a42aee15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ca07b9a44a6de9c769a66ed98a5b165a42aee15/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c88b08adcda8761e91c17d3b3bee9b7b36c9a8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c88b08adcda8761e91c17d3b3bee9b7b36c9a8c", "html_url": "https://github.com/rust-lang/rust/commit/6c88b08adcda8761e91c17d3b3bee9b7b36c9a8c"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "d181bd1604e0248f54063b496f23352c19aff062", "filename": ".github/workflows/main.yml", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ca07b9a44a6de9c769a66ed98a5b165a42aee15/.github%2Fworkflows%2Fmain.yml", "raw_url": "https://github.com/rust-lang/rust/raw/1ca07b9a44a6de9c769a66ed98a5b165a42aee15/.github%2Fworkflows%2Fmain.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fmain.yml?ref=1ca07b9a44a6de9c769a66ed98a5b165a42aee15", "patch": "@@ -186,10 +186,6 @@ jobs:\n       run: |\n         # WIP Disable some tests\n \n-        # This fails due to some weird argument handling by hyperfine, not an actual regression\n-        # more of a build system issue\n-        (Get-Content config.txt) -replace '(bench.simple-raytracer)', '# $1' |  Out-File config.txt\n-\n         # This fails with a different output than expected\n         (Get-Content config.txt) -replace '(test.regex-shootout-regex-dna)', '# $1' |  Out-File config.txt\n "}, {"sha": "37c35106af6d39488dffbbaa6c9f92033b9f22f9", "filename": "build_system/tests.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1ca07b9a44a6de9c769a66ed98a5b165a42aee15/build_system%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ca07b9a44a6de9c769a66ed98a5b165a42aee15/build_system%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Ftests.rs?ref=1ca07b9a44a6de9c769a66ed98a5b165a42aee15", "patch": "@@ -2,7 +2,7 @@ use super::build_sysroot;\n use super::config;\n use super::path::{Dirs, RelPath};\n use super::prepare::GitRepo;\n-use super::rustc_info::get_wrapper_file_name;\n+use super::rustc_info::{get_file_name, get_wrapper_file_name};\n use super::utils::{\n     hyperfine_command, is_ci, spawn_and_wait, spawn_and_wait_with_input, CargoProject, Compiler,\n };\n@@ -318,13 +318,20 @@ const EXTENDED_SYSROOT_SUITE: &[TestCase] = &[\n \n             eprintln!(\"[BENCH RUN] ebobby/simple-raytracer\");\n             fs::copy(\n-                target_dir.join(\"debug\").join(\"main\"),\n-                RelPath::BUILD.to_path(&runner.dirs).join(\"raytracer_cg_clif\"),\n+                target_dir.join(\"debug\").join(get_file_name(\"main\", \"bin\")),\n+                RelPath::BUILD\n+                    .to_path(&runner.dirs)\n+                    .join(get_file_name(\"raytracer_cg_clif\", \"bin\")),\n             )\n             .unwrap();\n \n-            let mut bench_run =\n-                hyperfine_command(0, run_runs, None, \"./raytracer_cg_llvm\", \"./raytracer_cg_clif\");\n+            let mut bench_run = hyperfine_command(\n+                0,\n+                run_runs,\n+                None,\n+                Path::new(\".\").join(get_file_name(\"raytracer_cg_llvm\", \"bin\")).to_str().unwrap(),\n+                Path::new(\".\").join(get_file_name(\"raytracer_cg_clif\", \"bin\")).to_str().unwrap(),\n+            );\n             bench_run.current_dir(RelPath::BUILD.to_path(&runner.dirs));\n             spawn_and_wait(bench_run);\n         } else {"}]}