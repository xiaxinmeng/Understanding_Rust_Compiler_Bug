{"sha": "b5b44659a42cf982590519317ede9ead354f9c4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1YjQ0NjU5YTQyY2Y5ODI1OTA1MTkzMTdlZGU5ZWFkMzU0ZjljNGU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T09:18:14Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T09:18:14Z"}, "message": "edits use source-root API", "tree": {"sha": "460d82184faa07256e77cf8b353e135f2b935d1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/460d82184faa07256e77cf8b353e135f2b935d1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5b44659a42cf982590519317ede9ead354f9c4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5b44659a42cf982590519317ede9ead354f9c4e", "html_url": "https://github.com/rust-lang/rust/commit/b5b44659a42cf982590519317ede9ead354f9c4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5b44659a42cf982590519317ede9ead354f9c4e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0063f03e86f4222a5027720142eb20db4adc485d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0063f03e86f4222a5027720142eb20db4adc485d", "html_url": "https://github.com/rust-lang/rust/commit/0063f03e86f4222a5027720142eb20db4adc485d"}], "stats": {"total": 44, "additions": 28, "deletions": 16}, "files": [{"sha": "5701e1ae233aa35b13d6b19520bbefd53caff12c", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b5b44659a42cf982590519317ede9ead354f9c4e/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5b44659a42cf982590519317ede9ead354f9c4e/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=b5b44659a42cf982590519317ede9ead354f9c4e", "patch": "@@ -368,10 +368,11 @@ impl AnalysisImpl {\n             .collect::<Vec<_>>();\n         if let Some(m) = source_binder::module_from_file_id(&*self.db, file_id)? {\n             for (name_node, problem) in m.problems(&*self.db) {\n+                let source_root = self.db.file_source_root(file_id);\n                 let diag = match problem {\n                     Problem::UnresolvedModule { candidate } => {\n                         let create_file = FileSystemEdit::CreateFile {\n-                            anchor: file_id,\n+                            source_root,\n                             path: candidate.clone(),\n                         };\n                         let fix = SourceChange {\n@@ -388,11 +389,12 @@ impl AnalysisImpl {\n                     }\n                     Problem::NotDirOwner { move_to, candidate } => {\n                         let move_file = FileSystemEdit::MoveFile {\n-                            file: file_id,\n-                            path: move_to.clone(),\n+                            src: file_id,\n+                            dst_source_root: source_root,\n+                            dst_path: move_to.clone(),\n                         };\n                         let create_file = FileSystemEdit::CreateFile {\n-                            anchor: file_id,\n+                            source_root,\n                             path: move_to.join(candidate),\n                         };\n                         let fix = SourceChange {"}, {"sha": "c7e7dc1c030acca359c990da30e5d0ac000e8b1f", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b5b44659a42cf982590519317ede9ead354f9c4e/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5b44659a42cf982590519317ede9ead354f9c4e/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=b5b44659a42cf982590519317ede9ead354f9c4e", "patch": "@@ -173,12 +173,13 @@ pub struct SourceFileEdit {\n #[derive(Debug)]\n pub enum FileSystemEdit {\n     CreateFile {\n-        anchor: FileId,\n+        source_root: SourceRootId,\n         path: RelativePathBuf,\n     },\n     MoveFile {\n-        file: FileId,\n-        path: RelativePathBuf,\n+        src: FileId,\n+        dst_source_root: SourceRootId,\n+        dst_path: RelativePathBuf,\n     },\n }\n "}, {"sha": "218ded4eecf9138a77ed2be435ea0292e3b65b76", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b5b44659a42cf982590519317ede9ead354f9c4e/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5b44659a42cf982590519317ede9ead354f9c4e/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=b5b44659a42cf982590519317ede9ead354f9c4e", "patch": "@@ -283,16 +283,17 @@ impl TryConvWith for FileSystemEdit {\n     type Output = req::FileSystemEdit;\n     fn try_conv_with(self, world: &ServerWorld) -> Result<req::FileSystemEdit> {\n         let res = match self {\n-            FileSystemEdit::CreateFile { anchor, path } => {\n-                let uri = world.file_id_to_uri(anchor)?;\n-                let path = &path.as_str()[3..]; // strip `../` b/c url is weird\n-                let uri = uri.join(path)?;\n+            FileSystemEdit::CreateFile { source_root, path } => {\n+                let uri = world.path_to_uri(source_root, &path)?;\n                 req::FileSystemEdit::CreateFile { uri }\n             }\n-            FileSystemEdit::MoveFile { file, path } => {\n-                let src = world.file_id_to_uri(file)?;\n-                let path = &path.as_str()[3..]; // strip `../` b/c url is weird\n-                let dst = src.join(path)?;\n+            FileSystemEdit::MoveFile {\n+                src,\n+                dst_source_root,\n+                dst_path,\n+            } => {\n+                let src = world.file_id_to_uri(src)?;\n+                let dst = world.path_to_uri(dst_source_root, &dst_path)?;\n                 req::FileSystemEdit::MoveFile { src, dst }\n             }\n         };"}, {"sha": "73cccc9dd901650155360791937620aba2a8dddf", "filename": "crates/ra_lsp_server/src/server_world.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b5b44659a42cf982590519317ede9ead354f9c4e/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5b44659a42cf982590519317ede9ead354f9c4e/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs?ref=b5b44659a42cf982590519317ede9ead354f9c4e", "patch": "@@ -8,7 +8,7 @@ use ra_analysis::{\n     Analysis, AnalysisChange, AnalysisHost, CrateGraph, FileId, LibraryData,\n     SourceRootId\n };\n-use ra_vfs::{Vfs, VfsChange, VfsFile};\n+use ra_vfs::{Vfs, VfsChange, VfsFile, VfsRoot};\n use rustc_hash::FxHashMap;\n use relative_path::RelativePathBuf;\n use parking_lot::RwLock;\n@@ -183,4 +183,12 @@ impl ServerWorld {\n             .map_err(|_| format_err!(\"can't convert path to url: {}\", path.display()))?;\n         Ok(url)\n     }\n+\n+    pub fn path_to_uri(&self, root: SourceRootId, path: &RelativePathBuf) -> Result<Url> {\n+        let base = self.vfs.read().root2path(VfsRoot(root.0));\n+        let path = path.to_path(base);\n+        let url = Url::from_file_path(&path)\n+            .map_err(|_| format_err!(\"can't convert path to url: {}\", path.display()))?;\n+        Ok(url)\n+    }\n }"}]}