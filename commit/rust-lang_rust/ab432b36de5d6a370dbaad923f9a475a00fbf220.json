{"sha": "ab432b36de5d6a370dbaad923f9a475a00fbf220", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiNDMyYjM2ZGU1ZDZhMzcwZGJhYWQ5MjNmOWE0NzVhMDBmYmYyMjA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-09-12T19:29:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-12T19:29:51Z"}, "message": "Merge #5990\n\n5990: Implement box patterns r=jonas-schievink a=jonas-schievink\n\n\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "ad9f3491f4a80bfff853b4ce89023cd40f62bbf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad9f3491f4a80bfff853b4ce89023cd40f62bbf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab432b36de5d6a370dbaad923f9a475a00fbf220", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfXSGvCRBK7hj4Ov3rIwAAdHIIACkUT33Ptv6K9J14OOeCgpyb\nbWVRPTLEUYEl45GsSwwdxAbtSLaWTey896+iQMKoKP5X1fUfWFSfJzzquuQlm1F+\nlMVFimMTdomQXeuaR3AHVTi7zX8+Kg2HMYV4b2buXfSGVxSRoKYJZ3ymnKAMQuHb\n6id0K0XyahJO2OPaYUXz/2a5BxeE0aiHA4yW2OFbmBJZachifepGSlO759dkG5Up\nCKHiwGUHa0PpHzqdBrPFnqJBtEf4CqoDUnUOlOtkMfPXSOA4zfcrNSATUm1Trh26\nCJwBlixVb+aikfSWPIF10czMVHE1VwEeuvJLhw7cGbx3ldjIt7jI7KOazjTlO+8=\n=ID2B\n-----END PGP SIGNATURE-----\n", "payload": "tree ad9f3491f4a80bfff853b4ce89023cd40f62bbf7\nparent c8623461a57e7882ac47b5da13a1a03efa58f603\nparent 07a704e31cf74deb28a15859b5adfe65ed709bf4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1599938991 +0000\ncommitter GitHub <noreply@github.com> 1599938991 +0000\n\nMerge #5990\n\n5990: Implement box patterns r=jonas-schievink a=jonas-schievink\n\n\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab432b36de5d6a370dbaad923f9a475a00fbf220", "html_url": "https://github.com/rust-lang/rust/commit/ab432b36de5d6a370dbaad923f9a475a00fbf220", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab432b36de5d6a370dbaad923f9a475a00fbf220/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8623461a57e7882ac47b5da13a1a03efa58f603", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8623461a57e7882ac47b5da13a1a03efa58f603", "html_url": "https://github.com/rust-lang/rust/commit/c8623461a57e7882ac47b5da13a1a03efa58f603"}, {"sha": "07a704e31cf74deb28a15859b5adfe65ed709bf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/07a704e31cf74deb28a15859b5adfe65ed709bf4", "html_url": "https://github.com/rust-lang/rust/commit/07a704e31cf74deb28a15859b5adfe65ed709bf4"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "9ea3d529153b2df0046e4590441747fc846f3690", "filename": "crates/hir_def/src/body/lower.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab432b36de5d6a370dbaad923f9a475a00fbf220/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab432b36de5d6a370dbaad923f9a475a00fbf220/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs?ref=ab432b36de5d6a370dbaad923f9a475a00fbf220", "patch": "@@ -835,8 +835,12 @@ impl ExprCollector<'_> {\n \n                 Pat::Missing\n             }\n+            ast::Pat::BoxPat(boxpat) => {\n+                let inner = self.collect_pat_opt(boxpat.pat());\n+                Pat::Box { inner }\n+            }\n             // FIXME: implement\n-            ast::Pat::BoxPat(_) | ast::Pat::RangePat(_) | ast::Pat::MacroPat(_) => Pat::Missing,\n+            ast::Pat::RangePat(_) | ast::Pat::MacroPat(_) => Pat::Missing,\n         };\n         let ptr = AstPtr::new(&pat);\n         self.alloc_pat(pattern, Either::Left(ptr))"}, {"sha": "dc975d42f825ddcb26aaadd249964f8eb7ebfe8d", "filename": "crates/hir_def/src/expr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab432b36de5d6a370dbaad923f9a475a00fbf220/crates%2Fhir_def%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab432b36de5d6a370dbaad923f9a475a00fbf220/crates%2Fhir_def%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fexpr.rs?ref=ab432b36de5d6a370dbaad923f9a475a00fbf220", "patch": "@@ -395,6 +395,7 @@ pub enum Pat {\n     Bind { mode: BindingAnnotation, name: Name, subpat: Option<PatId> },\n     TupleStruct { path: Option<Path>, args: Vec<PatId>, ellipsis: Option<usize> },\n     Ref { pat: PatId, mutability: Mutability },\n+    Box { inner: PatId },\n }\n \n impl Pat {\n@@ -415,6 +416,7 @@ impl Pat {\n             Pat::Record { args, .. } => {\n                 args.iter().map(|f| f.pat).for_each(f);\n             }\n+            Pat::Box { inner } => f(*inner),\n         }\n     }\n }"}, {"sha": "cde2ab82b6516068e55d534c6d580b0942ea5f72", "filename": "crates/hir_ty/src/infer/pat.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ab432b36de5d6a370dbaad923f9a475a00fbf220/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab432b36de5d6a370dbaad923f9a475a00fbf220/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs?ref=ab432b36de5d6a370dbaad923f9a475a00fbf220", "patch": "@@ -209,6 +209,18 @@ impl<'a> InferenceContext<'a> {\n                 end_ty\n             }\n             Pat::Lit(expr) => self.infer_expr(*expr, &Expectation::has_type(expected.clone())),\n+            Pat::Box { inner } => match self.resolve_boxed_box() {\n+                Some(box_adt) => {\n+                    let inner_expected = match expected.as_adt() {\n+                        Some((adt, substs)) if adt == box_adt => substs.as_single(),\n+                        _ => &Ty::Unknown,\n+                    };\n+\n+                    let inner_ty = self.infer_pat(*inner, inner_expected, default_bm);\n+                    Ty::apply_one(TypeCtor::Adt(box_adt), inner_ty)\n+                }\n+                None => Ty::Unknown,\n+            },\n             Pat::Missing => Ty::Unknown,\n         };\n         // use a new type variable if we got Ty::Unknown here\n@@ -236,6 +248,6 @@ fn is_non_ref_pat(body: &hir_def::body::Body, pat: PatId) -> bool {\n             Expr::Literal(Literal::String(..)) => false,\n             _ => true,\n         },\n-        Pat::Wild | Pat::Bind { .. } | Pat::Ref { .. } | Pat::Missing => false,\n+        Pat::Wild | Pat::Bind { .. } | Pat::Ref { .. } | Pat::Box { .. } | Pat::Missing => false,\n     }\n }"}, {"sha": "6a965ac4fa90a070e5729444a69f33a503f009dc", "filename": "crates/hir_ty/src/tests/patterns.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ab432b36de5d6a370dbaad923f9a475a00fbf220/crates%2Fhir_ty%2Fsrc%2Ftests%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab432b36de5d6a370dbaad923f9a475a00fbf220/crates%2Fhir_ty%2Fsrc%2Ftests%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fpatterns.rs?ref=ab432b36de5d6a370dbaad923f9a475a00fbf220", "patch": "@@ -654,3 +654,28 @@ fn slice_tail_pattern() {\n         \"#]],\n     );\n }\n+\n+#[test]\n+fn box_pattern() {\n+    check_infer(\n+        r#\"\n+        #[lang = \"owned_box\"]\n+        pub struct Box<T>(T);\n+\n+        fn foo(params: Box<i32>) {\n+            match params {\n+                box integer => {}\n+            }\n+        }\n+        \"#,\n+        expect![[r#\"\n+            52..58 'params': Box<i32>\n+            70..124 '{     ...   } }': ()\n+            76..122 'match ...     }': ()\n+            82..88 'params': Box<i32>\n+            99..110 'box integer': Box<i32>\n+            103..110 'integer': i32\n+            114..116 '{}': ()\n+        \"#]],\n+    );\n+}"}]}