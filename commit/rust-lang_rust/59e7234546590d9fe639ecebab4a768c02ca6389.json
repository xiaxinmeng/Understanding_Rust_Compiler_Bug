{"sha": "59e7234546590d9fe639ecebab4a768c02ca6389", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5ZTcyMzQ1NDY1OTBkOWZlNjM5ZWNlYmFiNGE3NjhjMDJjYTYzODk=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-21T18:34:49Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-21T18:38:14Z"}, "message": "Add to_macro_file_kind", "tree": {"sha": "0904c931ca4d136cd41f8b36abea906c6d79bcf4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0904c931ca4d136cd41f8b36abea906c6d79bcf4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59e7234546590d9fe639ecebab4a768c02ca6389", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59e7234546590d9fe639ecebab4a768c02ca6389", "html_url": "https://github.com/rust-lang/rust/commit/59e7234546590d9fe639ecebab4a768c02ca6389", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59e7234546590d9fe639ecebab4a768c02ca6389/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ff400833f860fb5db8adb1b999343b1fb4e3ccb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ff400833f860fb5db8adb1b999343b1fb4e3ccb", "html_url": "https://github.com/rust-lang/rust/commit/4ff400833f860fb5db8adb1b999343b1fb4e3ccb"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "797f90d501b5c3f2c4786b695962a11eae0952f7", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/59e7234546590d9fe639ecebab4a768c02ca6389/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59e7234546590d9fe639ecebab4a768c02ca6389/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=59e7234546590d9fe639ecebab4a768c02ca6389", "patch": "@@ -131,6 +131,7 @@ pub struct ReferenceDescriptor {\n }\n \n pub struct Expansion {\n+    macro_file_kind: MacroFileKind,\n     macro_call_id: MacroCallId,\n }\n \n@@ -145,7 +146,7 @@ impl Expansion {\n     }\n \n     pub fn file_id(&self) -> HirFileId {\n-        self.macro_call_id.as_file(MacroFileKind::Items)\n+        self.macro_call_id.as_file(self.macro_file_kind)\n     }\n }\n \n@@ -439,7 +440,10 @@ impl SourceAnalyzer {\n             db.ast_id_map(macro_call.file_id).ast_id(macro_call.value),\n         );\n         let macro_call_loc = MacroCallLoc { def, ast_id };\n-        Some(Expansion { macro_call_id: db.intern_macro(macro_call_loc) })\n+        Some(Expansion {\n+            macro_call_id: db.intern_macro(macro_call_loc),\n+            macro_file_kind: to_macro_file_kind(macro_call.value),\n+        })\n     }\n \n     #[cfg(test)]\n@@ -538,3 +542,35 @@ fn adjust(\n         })\n         .map(|(_ptr, scope)| *scope)\n }\n+\n+/// Given a `ast::MacroCall`, return what `MacroKindFile` it belongs to.\n+/// FIXME: Not completed  \n+fn to_macro_file_kind(macro_call: &ast::MacroCall) -> MacroFileKind {\n+    let syn = macro_call.syntax();\n+    let parent = match syn.parent() {\n+        Some(it) => it,\n+        None => {\n+            // FIXME:\n+            // If it is root, which means the parent HirFile\n+            // MacroKindFile must be non-items\n+            // return expr now.\n+            return MacroFileKind::Expr;\n+        }\n+    };\n+\n+    match parent.kind() {\n+        MACRO_ITEMS | SOURCE_FILE => MacroFileKind::Items,\n+        LET_STMT => {\n+            // FIXME: Handle Pattern\n+            MacroFileKind::Expr\n+        }\n+        EXPR_STMT => MacroFileKind::Statements,\n+        BLOCK => MacroFileKind::Statements,\n+        ARG_LIST => MacroFileKind::Expr,\n+        TRY_EXPR => MacroFileKind::Expr,\n+        _ => {\n+            // Unknown , Just guess it is `Items`\n+            MacroFileKind::Items\n+        }\n+    }\n+}"}]}