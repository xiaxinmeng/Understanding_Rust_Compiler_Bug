{"sha": "31789a658bb6b6c78da1f2b99a5f169e4e8b983b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxNzg5YTY1OGJiNmI2Yzc4ZGExZjJiOTlhNWYxNjllNGU4Yjk4M2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-25T15:20:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-25T15:20:10Z"}, "message": "Auto merge of #54411 - cramertj:await-keyword-error, r=nikomatsakis\n\nMake \"await\" a pseudo-edition keyword\n\nThis change makes \"await\" ident an error in 2018 edition without async_await\nfeature and adds \"await\" to the 2018 edition keyword lint group that\nsuggest migration on the 2015 edition.\n\ncc https://github.com/rust-lang/rust/issues/53834\n\nr? @nikomatsakis", "tree": {"sha": "4cf36212dc830154f9c581e3b196652bd82b62c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cf36212dc830154f9c581e3b196652bd82b62c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31789a658bb6b6c78da1f2b99a5f169e4e8b983b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31789a658bb6b6c78da1f2b99a5f169e4e8b983b", "html_url": "https://github.com/rust-lang/rust/commit/31789a658bb6b6c78da1f2b99a5f169e4e8b983b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae366637fedf6f34185e54fc7b2d725b1a458ff6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae366637fedf6f34185e54fc7b2d725b1a458ff6", "html_url": "https://github.com/rust-lang/rust/commit/ae366637fedf6f34185e54fc7b2d725b1a458ff6"}, {"sha": "fb14662e74d6fb2e99d73525bf46931a05ce974a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb14662e74d6fb2e99d73525bf46931a05ce974a", "html_url": "https://github.com/rust-lang/rust/commit/fb14662e74d6fb2e99d73525bf46931a05ce974a"}], "stats": {"total": 248, "additions": 244, "deletions": 4}, "files": [{"sha": "adf23a5cf2c855564e43d1f7a7fb40f67e15a9a7", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 36, "deletions": 4, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=31789a658bb6b6c78da1f2b99a5f169e4e8b983b", "patch": "@@ -1934,20 +1934,52 @@ impl EarlyLintPass for KeywordIdents {\n         self.check_tokens(cx, mac.node.tts.clone().into());\n     }\n     fn check_ident(&mut self, cx: &EarlyContext, ident: ast::Ident) {\n-        let next_edition = match cx.sess.edition() {\n+        let ident_str = &ident.as_str()[..];\n+        let cur_edition = cx.sess.edition();\n+        let is_raw_ident = |ident: ast::Ident| {\n+            cx.sess.parse_sess.raw_identifier_spans.borrow().contains(&ident.span)\n+        };\n+        let next_edition = match cur_edition {\n             Edition::Edition2015 => {\n-                match &ident.as_str()[..] {\n+                match ident_str {\n                     \"async\" | \"try\" | \"dyn\" => Edition::Edition2018,\n+                    // Only issue warnings for `await` if the `async_await`\n+                    // feature isn't being used. Otherwise, users need\n+                    // to keep using `await` for the macro exposed by std.\n+                    \"await\" if !cx.sess.features_untracked().async_await => Edition::Edition2018,\n                     _ => return,\n                 }\n             }\n \n             // no new keywords yet for 2018 edition and beyond\n-            _ => return,\n+            // However, `await` is a \"false\" keyword in the 2018 edition,\n+            // and can only be used if the `async_await` feature is enabled.\n+            // Otherwise, we emit an error.\n+            _ => {\n+                if \"await\" == ident_str\n+                    && !cx.sess.features_untracked().async_await\n+                    && !is_raw_ident(ident)\n+                {\n+                    let mut err = struct_span_err!(\n+                        cx.sess,\n+                        ident.span,\n+                        E0721,\n+                        \"`await` is a keyword in the {} edition\", cur_edition,\n+                    );\n+                    err.span_suggestion_with_applicability(\n+                        ident.span,\n+                        \"you can use a raw identifier to stay compatible\",\n+                        \"r#await\".to_string(),\n+                        Applicability::MachineApplicable,\n+                    );\n+                    err.emit();\n+                }\n+                return\n+            },\n         };\n \n         // don't lint `r#foo`\n-        if cx.sess.parse_sess.raw_identifier_spans.borrow().contains(&ident.span) {\n+        if is_raw_ident(ident) {\n             return;\n         }\n "}, {"sha": "59f005a5de8da4044e75cc970f777fe1e2e317ec", "filename": "src/librustc_lint/diagnostics.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Flibrustc_lint%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Flibrustc_lint%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fdiagnostics.rs?ref=31789a658bb6b6c78da1f2b99a5f169e4e8b983b", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+register_diagnostics! {\n+    E0721, // `await` keyword\n+}"}, {"sha": "9e2e3435bd9b5215f9928ce4cd178fbe51d9faa9", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=31789a658bb6b6c78da1f2b99a5f169e4e8b983b", "patch": "@@ -32,6 +32,7 @@\n #![feature(rustc_diagnostic_macros)]\n #![feature(macro_at_most_once_rep)]\n \n+#[macro_use]\n extern crate syntax;\n #[macro_use]\n extern crate rustc;\n@@ -61,6 +62,7 @@ use syntax::edition::Edition;\n use lint::LintId;\n use lint::FutureIncompatibleInfo;\n \n+mod diagnostics;\n mod nonstandard_style;\n pub mod builtin;\n mod types;"}, {"sha": "92c60e7d6eed01a35f9b4a2567e3d42b81ebbaed", "filename": "src/test/ui/await-keyword/2015-edition-no-warnings-with-feature-gate.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2F2015-edition-no-warnings-with-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2F2015-edition-no-warnings-with-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fawait-keyword%2F2015-edition-no-warnings-with-feature-gate.rs?ref=31789a658bb6b6c78da1f2b99a5f169e4e8b983b", "patch": "@@ -0,0 +1,16 @@\n+// compile-pass\n+\n+#![feature(async_await)]\n+#![allow(non_camel_case_types)]\n+#![deny(keyword_idents)]\n+\n+mod outer_mod {\n+    pub mod await {\n+        pub struct await;\n+    }\n+}\n+use outer_mod::await::await;\n+\n+fn main() {\n+    match await { await => {} }\n+}"}, {"sha": "c2c40cd11a63b8a4115146b290508503ac7816b7", "filename": "src/test/ui/await-keyword/2015-edition-warning.fixed", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2F2015-edition-warning.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2F2015-edition-warning.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fawait-keyword%2F2015-edition-warning.fixed?ref=31789a658bb6b6c78da1f2b99a5f169e4e8b983b", "patch": "@@ -0,0 +1,15 @@\n+// run-rustfix\n+\n+#![allow(non_camel_case_types)]\n+#![deny(keyword_idents)]\n+\n+mod outer_mod {\n+    pub mod r#await {\n+        pub struct r#await;\n+    }\n+}\n+use outer_mod::r#await::r#await;\n+\n+fn main() {\n+    match r#await { r#await => {} }\n+}"}, {"sha": "95539ab29dc506a226fc6cdb37861fb6d97c7701", "filename": "src/test/ui/await-keyword/2015-edition-warning.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2F2015-edition-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2F2015-edition-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fawait-keyword%2F2015-edition-warning.rs?ref=31789a658bb6b6c78da1f2b99a5f169e4e8b983b", "patch": "@@ -0,0 +1,15 @@\n+// run-rustfix\n+\n+#![allow(non_camel_case_types)]\n+#![deny(keyword_idents)]\n+\n+mod outer_mod {\n+    pub mod await {\n+        pub struct await;\n+    }\n+}\n+use outer_mod::await::await;\n+\n+fn main() {\n+    match await { await => {} }\n+}"}, {"sha": "073e9d7e6d0095b175b397f2f0b614eaf4a1bac7", "filename": "src/test/ui/await-keyword/2015-edition-warning.stderr", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2F2015-edition-warning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2F2015-edition-warning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fawait-keyword%2F2015-edition-warning.stderr?ref=31789a658bb6b6c78da1f2b99a5f169e4e8b983b", "patch": "@@ -0,0 +1,61 @@\n+error: `await` is a keyword in the 2018 edition\n+  --> $DIR/2015-edition-warning.rs:7:13\n+   |\n+LL |     pub mod await {\n+   |             ^^^^^ help: you can use a raw identifier to stay compatible: `r#await`\n+   |\n+note: lint level defined here\n+  --> $DIR/2015-edition-warning.rs:4:9\n+   |\n+LL | #![deny(keyword_idents)]\n+   |         ^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n+   = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n+\n+error: `await` is a keyword in the 2018 edition\n+  --> $DIR/2015-edition-warning.rs:8:20\n+   |\n+LL |         pub struct await;\n+   |                    ^^^^^ help: you can use a raw identifier to stay compatible: `r#await`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n+   = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n+\n+error: `await` is a keyword in the 2018 edition\n+  --> $DIR/2015-edition-warning.rs:11:16\n+   |\n+LL | use outer_mod::await::await;\n+   |                ^^^^^ help: you can use a raw identifier to stay compatible: `r#await`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n+   = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n+\n+error: `await` is a keyword in the 2018 edition\n+  --> $DIR/2015-edition-warning.rs:11:23\n+   |\n+LL | use outer_mod::await::await;\n+   |                       ^^^^^ help: you can use a raw identifier to stay compatible: `r#await`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n+   = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n+\n+error: `await` is a keyword in the 2018 edition\n+  --> $DIR/2015-edition-warning.rs:14:11\n+   |\n+LL |     match await { await => {} }\n+   |           ^^^^^ help: you can use a raw identifier to stay compatible: `r#await`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n+   = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n+\n+error: `await` is a keyword in the 2018 edition\n+  --> $DIR/2015-edition-warning.rs:14:19\n+   |\n+LL |     match await { await => {} }\n+   |                   ^^^^^ help: you can use a raw identifier to stay compatible: `r#await`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n+   = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n+\n+error: aborting due to 6 previous errors\n+"}, {"sha": "a9e2e3f79ee767a561b88bf4b386adbd528bbbd8", "filename": "src/test/ui/await-keyword/2018-edition-error.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2F2018-edition-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2F2018-edition-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fawait-keyword%2F2018-edition-error.rs?ref=31789a658bb6b6c78da1f2b99a5f169e4e8b983b", "patch": "@@ -0,0 +1,13 @@\n+// edition:2018\n+#![allow(non_camel_case_types)]\n+\n+mod outer_mod {\n+    pub mod await {\n+        pub struct await;\n+    }\n+}\n+use self::outer_mod::await::await;\n+\n+fn main() {\n+    match await { await => () }\n+}"}, {"sha": "d5727b8db37906211f81f5c1a0d521609a10425c", "filename": "src/test/ui/await-keyword/2018-edition-error.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2F2018-edition-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2F2018-edition-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fawait-keyword%2F2018-edition-error.stderr?ref=31789a658bb6b6c78da1f2b99a5f169e4e8b983b", "patch": "@@ -0,0 +1,39 @@\n+error[E0721]: `await` is a keyword in the 2018 edition\n+  --> $DIR/2018-edition-error.rs:5:13\n+   |\n+LL |     pub mod await {\n+   |             ^^^^^ help: you can use a raw identifier to stay compatible: `r#await`\n+\n+error[E0721]: `await` is a keyword in the 2018 edition\n+  --> $DIR/2018-edition-error.rs:6:20\n+   |\n+LL |         pub struct await;\n+   |                    ^^^^^ help: you can use a raw identifier to stay compatible: `r#await`\n+\n+error[E0721]: `await` is a keyword in the 2018 edition\n+  --> $DIR/2018-edition-error.rs:9:22\n+   |\n+LL | use self::outer_mod::await::await;\n+   |                      ^^^^^ help: you can use a raw identifier to stay compatible: `r#await`\n+\n+error[E0721]: `await` is a keyword in the 2018 edition\n+  --> $DIR/2018-edition-error.rs:9:29\n+   |\n+LL | use self::outer_mod::await::await;\n+   |                             ^^^^^ help: you can use a raw identifier to stay compatible: `r#await`\n+\n+error[E0721]: `await` is a keyword in the 2018 edition\n+  --> $DIR/2018-edition-error.rs:12:11\n+   |\n+LL |     match await { await => () }\n+   |           ^^^^^ help: you can use a raw identifier to stay compatible: `r#await`\n+\n+error[E0721]: `await` is a keyword in the 2018 edition\n+  --> $DIR/2018-edition-error.rs:12:19\n+   |\n+LL |     match await { await => () }\n+   |                   ^^^^^ help: you can use a raw identifier to stay compatible: `r#await`\n+\n+error: aborting due to 6 previous errors\n+\n+For more information about this error, try `rustc --explain E0721`."}, {"sha": "52d32c8351080a4a3328f65f5abaa6fd6e411a12", "filename": "src/test/ui/await-keyword/2018-edition-no-error-with-feature-gate.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2F2018-edition-no-error-with-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2F2018-edition-no-error-with-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fawait-keyword%2F2018-edition-no-error-with-feature-gate.rs?ref=31789a658bb6b6c78da1f2b99a5f169e4e8b983b", "patch": "@@ -0,0 +1,16 @@\n+// compile-pass\n+// edition:2018\n+\n+#![allow(non_camel_case_types)]\n+#![feature(async_await)]\n+\n+mod outer_mod {\n+    pub mod await {\n+        pub struct await;\n+    }\n+}\n+use self::outer_mod::await::await;\n+\n+fn main() {\n+    match await { await => () }\n+}"}, {"sha": "580ca3b3a4f6c4f618852a6f0b332e2c2c33bed7", "filename": "src/test/ui/await-keyword/post_expansion_error.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2Fpost_expansion_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2Fpost_expansion_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fawait-keyword%2Fpost_expansion_error.rs?ref=31789a658bb6b6c78da1f2b99a5f169e4e8b983b", "patch": "@@ -0,0 +1,9 @@\n+// edition:2018\n+\n+macro_rules! r#await {\n+    () => { println!(\"Hello, world!\") }\n+}\n+\n+fn main() {\n+    await!()\n+}"}, {"sha": "76ae35b7517e39c16b1849a45e990a34a2860166", "filename": "src/test/ui/await-keyword/post_expansion_error.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2Fpost_expansion_error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/31789a658bb6b6c78da1f2b99a5f169e4e8b983b/src%2Ftest%2Fui%2Fawait-keyword%2Fpost_expansion_error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fawait-keyword%2Fpost_expansion_error.stderr?ref=31789a658bb6b6c78da1f2b99a5f169e4e8b983b", "patch": "@@ -0,0 +1,9 @@\n+error[E0721]: `await` is a keyword in the 2018 edition\n+  --> $DIR/post_expansion_error.rs:8:5\n+   |\n+LL |     await!()\n+   |     ^^^^^ help: you can use a raw identifier to stay compatible: `r#await`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0721`."}]}