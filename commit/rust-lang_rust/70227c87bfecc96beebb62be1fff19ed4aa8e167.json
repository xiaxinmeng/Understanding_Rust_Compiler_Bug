{"sha": "70227c87bfecc96beebb62be1fff19ed4aa8e167", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMjI3Yzg3YmZlY2M5NmJlZWJiNjJiZTFmZmYxOWVkNGFhOGUxNjc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-05T01:18:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-05T21:23:35Z"}, "message": "fix arith_offset not taking the size of the type into account; test for offset", "tree": {"sha": "aa45b0f622c02e8da5783d56cd4ae625d14d81c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa45b0f622c02e8da5783d56cd4ae625d14d81c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70227c87bfecc96beebb62be1fff19ed4aa8e167", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70227c87bfecc96beebb62be1fff19ed4aa8e167", "html_url": "https://github.com/rust-lang/rust/commit/70227c87bfecc96beebb62be1fff19ed4aa8e167", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70227c87bfecc96beebb62be1fff19ed4aa8e167/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d0e622a81fff95d47de6ec9e4c0f28b9f54e285", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d0e622a81fff95d47de6ec9e4c0f28b9f54e285", "html_url": "https://github.com/rust-lang/rust/commit/1d0e622a81fff95d47de6ec9e4c0f28b9f54e285"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "770cde777096ad5c14f31f9eceec87d3311f5792", "filename": "src/terminator/intrinsic.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/70227c87bfecc96beebb62be1fff19ed4aa8e167/src%2Fterminator%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70227c87bfecc96beebb62be1fff19ed4aa8e167/src%2Fterminator%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fintrinsic.rs?ref=70227c87bfecc96beebb62be1fff19ed4aa8e167", "patch": "@@ -43,10 +43,11 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n \n \n             \"arith_offset\" => {\n+                // FIXME: Switch to non-checked, wrapped version of pointer_offset\n+                let offset = self.value_to_primval(arg_vals[1], isize)?.to_i128()? as i64;\n                 let ptr = arg_vals[0].read_ptr(&self.memory)?;\n-                let offset = self.value_to_primval(arg_vals[1], isize)?.to_i128()?;\n-                let new_ptr = ptr.signed_offset(offset as i64);\n-                self.write_primval(dest, PrimVal::Ptr(new_ptr), dest_ty)?;\n+                let result_ptr = self.pointer_offset(ptr, substs.type_at(0), offset)?;\n+                self.write_primval(dest, PrimVal::Ptr(result_ptr), dest_ty)?;\n             }\n \n             \"assume\" => {"}, {"sha": "7912da9fd437ce45e8479b74bc13dedf78773af9", "filename": "tests/run-pass/ptr_arith_offset.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/70227c87bfecc96beebb62be1fff19ed4aa8e167/tests%2Frun-pass%2Fptr_arith_offset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70227c87bfecc96beebb62be1fff19ed4aa8e167/tests%2Frun-pass%2Fptr_arith_offset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fptr_arith_offset.rs?ref=70227c87bfecc96beebb62be1fff19ed4aa8e167", "patch": "@@ -0,0 +1,6 @@\n+fn main() {\n+    let v = [1i16, 2];\n+    let x = &v as *const i16;\n+    let x = x.wrapping_offset(1);\n+    assert_eq!(unsafe { *x }, 2);\n+}"}, {"sha": "6add5212db9f6eef59c54f8fca1c20bb63863e18", "filename": "tests/run-pass/ptr_offset.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/70227c87bfecc96beebb62be1fff19ed4aa8e167/tests%2Frun-pass%2Fptr_offset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70227c87bfecc96beebb62be1fff19ed4aa8e167/tests%2Frun-pass%2Fptr_offset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fptr_offset.rs?ref=70227c87bfecc96beebb62be1fff19ed4aa8e167", "patch": "@@ -0,0 +1,6 @@\n+fn main() {\n+    let v = [1i16, 2];\n+    let x = &v as *const i16;\n+    let x = unsafe { x.offset(1) };\n+    assert_eq!(unsafe { *x }, 2);\n+}"}]}