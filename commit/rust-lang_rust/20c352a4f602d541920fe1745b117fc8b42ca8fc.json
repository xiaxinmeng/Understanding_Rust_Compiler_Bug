{"sha": "20c352a4f602d541920fe1745b117fc8b42ca8fc", "node_id": "C_kwDOAAsO6NoAKDIwYzM1MmE0ZjYwMmQ1NDE5MjBmZTE3NDViMTE3ZmM4YjQyY2E4ZmM", "commit": {"author": {"name": "Max Baumann", "email": "max@bmn.dev", "date": "2022-03-19T17:17:43Z"}, "committer": {"name": "Max Baumann", "email": "max@bmn.dev", "date": "2022-03-19T17:17:43Z"}, "message": "test: add method chain test", "tree": {"sha": "806f495909c8a46b75ca9a4256a09c29b2102ed0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/806f495909c8a46b75ca9a4256a09c29b2102ed0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20c352a4f602d541920fe1745b117fc8b42ca8fc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEhJzmO046LuvaNO3WIPoWCbA7HW0FAmI2EDcACgkQIPoWCbA7\nHW2IrRAAsh90+CVSZjakBykkpKeoZ5FYrsne3gPEtD4oZz4o+ojElgQomZXaVEAC\nQi2aXColYLJqnLG+V5w85tnPNVd0DmICKd85NykjpZK4TLXLEr5GPpJQpjQh1ssV\neGU4/FoY33PiXmq3i1pABFPz43ZZ+PzR4dPSSHHXBi9jskwhK08sCSlU/qR64zVq\njvmLBRTTV19QNqMH7WfSUysMoL9eDeEU+htGZ//PTRkOELiYT7up1FPxnw+cBcIL\nfIGvDeuDutX1mC0+ybb1MR/Sy5URKFuC6PPHMElSPN/oEyVDNeX9u+/1hE8rUtXF\nI/eVwdngU3Bkj4GtGfOIqdwB/DxFD+QQgQrAO6eHiTeaOEcWcgrNSpKXUbzZ6rvr\nQEIV8eZSDNIg9PZPFIpKYz8HALE4r/0IruVPbns+Nw22y4Uk9qUPrYoHoJKwPL+A\npvC0/fjQ9sWqcPUjI8ARtAVYb/dHOUFaj4VDn2CzYKWg28tVCeSEuQArBDFukhC8\ngmf1K6AUgszwUNtW25Jr6fMaiIxoyfcteMxSaLzj/WLeHs0nAZhCDF83r5Yratia\nDi/ZmQ4e1BacNUjMJqEpSDEjfATCWJR+POlLQPkAiFMud2FKiMTIHwCXYmjhBdQq\nXaRQ/1q+1mU9/OQVQWFXmfmT6k7YJAeKuQP8kqPgLLkxeIZ7nSM=\n=0wgj\n-----END PGP SIGNATURE-----", "payload": "tree 806f495909c8a46b75ca9a4256a09c29b2102ed0\nparent 895de1f13e78de456d5ecbdca3c87526c4dbbef2\nauthor Max Baumann <max@bmn.dev> 1647710263 +0100\ncommitter Max Baumann <max@bmn.dev> 1647710263 +0100\n\ntest: add method chain test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20c352a4f602d541920fe1745b117fc8b42ca8fc", "html_url": "https://github.com/rust-lang/rust/commit/20c352a4f602d541920fe1745b117fc8b42ca8fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20c352a4f602d541920fe1745b117fc8b42ca8fc/comments", "author": {"login": "FoseFx", "id": 22842759, "node_id": "MDQ6VXNlcjIyODQyNzU5", "avatar_url": "https://avatars.githubusercontent.com/u/22842759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FoseFx", "html_url": "https://github.com/FoseFx", "followers_url": "https://api.github.com/users/FoseFx/followers", "following_url": "https://api.github.com/users/FoseFx/following{/other_user}", "gists_url": "https://api.github.com/users/FoseFx/gists{/gist_id}", "starred_url": "https://api.github.com/users/FoseFx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FoseFx/subscriptions", "organizations_url": "https://api.github.com/users/FoseFx/orgs", "repos_url": "https://api.github.com/users/FoseFx/repos", "events_url": "https://api.github.com/users/FoseFx/events{/privacy}", "received_events_url": "https://api.github.com/users/FoseFx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FoseFx", "id": 22842759, "node_id": "MDQ6VXNlcjIyODQyNzU5", "avatar_url": "https://avatars.githubusercontent.com/u/22842759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FoseFx", "html_url": "https://github.com/FoseFx", "followers_url": "https://api.github.com/users/FoseFx/followers", "following_url": "https://api.github.com/users/FoseFx/following{/other_user}", "gists_url": "https://api.github.com/users/FoseFx/gists{/gist_id}", "starred_url": "https://api.github.com/users/FoseFx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FoseFx/subscriptions", "organizations_url": "https://api.github.com/users/FoseFx/orgs", "repos_url": "https://api.github.com/users/FoseFx/repos", "events_url": "https://api.github.com/users/FoseFx/events{/privacy}", "received_events_url": "https://api.github.com/users/FoseFx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "895de1f13e78de456d5ecbdca3c87526c4dbbef2", "url": "https://api.github.com/repos/rust-lang/rust/commits/895de1f13e78de456d5ecbdca3c87526c4dbbef2", "html_url": "https://github.com/rust-lang/rust/commit/895de1f13e78de456d5ecbdca3c87526c4dbbef2"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "27d4b795a5eeb8fd31307b952f03006c23068784", "filename": "tests/ui/or_then_unwrap.fixed", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/20c352a4f602d541920fe1745b117fc8b42ca8fc/tests%2Fui%2For_then_unwrap.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/20c352a4f602d541920fe1745b117fc8b42ca8fc/tests%2Fui%2For_then_unwrap.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_then_unwrap.fixed?ref=20c352a4f602d541920fe1745b117fc8b42ca8fc", "patch": "@@ -26,6 +26,10 @@ fn main() {\n     let result: Result<&str, &str> = Err(\"Error\");\n     let _ = result.unwrap_or(\"fallback\"); // should trigger lint\n \n+    // as part of a method chain\n+    let option: Option<&str> = None;\n+    let _ = option.map(|v| v).unwrap_or(\"fallback\").to_string().chars(); // should trigger lint\n+\n     // Not Option/Result\n     let instance = SomeStruct {};\n     let _ = instance.or(Some(SomeStruct {})).unwrap(); // should not trigger lint"}, {"sha": "0dab5ae2f1c04167c996b5e82e9975a27efe615c", "filename": "tests/ui/or_then_unwrap.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/20c352a4f602d541920fe1745b117fc8b42ca8fc/tests%2Fui%2For_then_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20c352a4f602d541920fe1745b117fc8b42ca8fc/tests%2Fui%2For_then_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_then_unwrap.rs?ref=20c352a4f602d541920fe1745b117fc8b42ca8fc", "patch": "@@ -26,6 +26,10 @@ fn main() {\n     let result: Result<&str, &str> = Err(\"Error\");\n     let _ = result.or::<&str>(Ok(\"fallback\")).unwrap(); // should trigger lint\n \n+    // as part of a method chain\n+    let option: Option<&str> = None;\n+    let _ = option.map(|v| v).or(Some(\"fallback\")).unwrap().to_string().chars(); // should trigger lint\n+\n     // Not Option/Result\n     let instance = SomeStruct {};\n     let _ = instance.or(Some(SomeStruct {})).unwrap(); // should not trigger lint"}, {"sha": "6b32634defda1025ce0e76e93728b13e724190dd", "filename": "tests/ui/or_then_unwrap.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/20c352a4f602d541920fe1745b117fc8b42ca8fc/tests%2Fui%2For_then_unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20c352a4f602d541920fe1745b117fc8b42ca8fc/tests%2Fui%2For_then_unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_then_unwrap.stderr?ref=20c352a4f602d541920fe1745b117fc8b42ca8fc", "patch": "@@ -12,5 +12,11 @@ error: .or(Ok(\u2026)).unwrap() found\n LL |     let _ = result.or::<&str>(Ok(\"fallback\")).unwrap(); // should trigger lint\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or(\"fallback\")`\n \n-error: aborting due to 2 previous errors\n+error: .or(Some(\u2026)).unwrap() found\n+  --> $DIR/or_then_unwrap.rs:31:31\n+   |\n+LL |     let _ = option.map(|v| v).or(Some(\"fallback\")).unwrap().to_string().chars(); // should trigger lint\n+   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or(\"fallback\")`\n+\n+error: aborting due to 3 previous errors\n "}]}