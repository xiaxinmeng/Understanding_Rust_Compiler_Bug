{"sha": "a739fc81539e22591bc43b189c5d6e8c0b1d1a03", "node_id": "C_kwDOAAsO6NoAKGE3MzlmYzgxNTM5ZTIyNTkxYmM0M2IxODljNWQ2ZThjMGIxZDFhMDM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-03T16:37:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-03T16:37:43Z"}, "message": "Rollup merge of #105164 - compiler-errors:revert-import-filter, r=estebank\n\nRestore `use` suggestion for `dyn` method call requiring `Sized`\n\nAdd the suggestion back that I accidentally removed in 88f2140d8736329610a4c0bd8000e164c9170537 because I didn't understand that suggestion was actually useful...\n\nFixes #105159", "tree": {"sha": "786c0262dae4c8778c581a33ba8a7793f3abbb9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/786c0262dae4c8778c581a33ba8a7793f3abbb9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a739fc81539e22591bc43b189c5d6e8c0b1d1a03", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJji3tXCRBK7hj4Ov3rIwAAtLsIAAXdRmEYMHrOeafFJMVq6Oyn\n0DazTNEDBN95QnQ6t845Dozi38ZVFYDPbUuaYu8sdaasMtMO1efnPOI4TTU9Eo0e\nyp9aYVI7egGp6ESfM6v/XK+wcZrbJEDp6C1EybzjxGvoJNSqk3SoSCz3q2RVWd/C\n0an9Pi6KPDzjsh/lgT8wTajF8GQSWqeMarRMfF/yzFxCwF+Vj402aszlBEYk9XlZ\nCPAsduJBal//7PdVXFOOHc+dAChuWmWz2tU0P9AB3lhwgH0/H3NTM0hdwjoK5ffp\nLS6gt/Qj+VXM2b1DqCMvfJHUJbXK4fs3VkndBIFfoIAvyVFltNi+ryCk6VnvRv4=\n=t3qc\n-----END PGP SIGNATURE-----\n", "payload": "tree 786c0262dae4c8778c581a33ba8a7793f3abbb9a\nparent 6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b\nparent dc45eb93f7541b3033487abaee653cb5bf6602d5\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670085463 +0100\ncommitter GitHub <noreply@github.com> 1670085463 +0100\n\nRollup merge of #105164 - compiler-errors:revert-import-filter, r=estebank\n\nRestore `use` suggestion for `dyn` method call requiring `Sized`\n\nAdd the suggestion back that I accidentally removed in 88f2140d8736329610a4c0bd8000e164c9170537 because I didn't understand that suggestion was actually useful...\n\nFixes #105159\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a739fc81539e22591bc43b189c5d6e8c0b1d1a03", "html_url": "https://github.com/rust-lang/rust/commit/a739fc81539e22591bc43b189c5d6e8c0b1d1a03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a739fc81539e22591bc43b189c5d6e8c0b1d1a03/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b", "html_url": "https://github.com/rust-lang/rust/commit/6f0a2adf6ef971eaf0990a8eaf0ae611aff9897b"}, {"sha": "dc45eb93f7541b3033487abaee653cb5bf6602d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc45eb93f7541b3033487abaee653cb5bf6602d5", "html_url": "https://github.com/rust-lang/rust/commit/dc45eb93f7541b3033487abaee653cb5bf6602d5"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "a2ca5c3b7b7493a9d0330b772fd87e9bdbced645", "filename": "compiler/rustc_hir_typeck/src/method/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a739fc81539e22591bc43b189c5d6e8c0b1d1a03/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a739fc81539e22591bc43b189c5d6e8c0b1d1a03/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fmod.rs?ref=a739fc81539e22591bc43b189c5d6e8c0b1d1a03", "patch": "@@ -20,7 +20,7 @@ use rustc_hir::def_id::DefId;\n use rustc_infer::infer::{self, InferOk};\n use rustc_middle::traits::ObligationCause;\n use rustc_middle::ty::subst::{InternalSubsts, SubstsRef};\n-use rustc_middle::ty::{self, DefIdTree, GenericParamDefKind, Ty, TypeVisitable};\n+use rustc_middle::ty::{self, GenericParamDefKind, Ty, TypeVisitable};\n use rustc_span::symbol::Ident;\n use rustc_span::Span;\n use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;\n@@ -217,7 +217,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n \n             // We probe again, taking all traits into account (not only those in scope).\n-            let mut candidates =\n+            let candidates =\n                 match self.lookup_probe(segment.ident, self_ty, call_expr, ProbeScope::AllTraits) {\n                     // If we find a different result the caller probably forgot to import a trait.\n                     Ok(ref new_pick) if pick.differs_from(new_pick) => {\n@@ -236,7 +236,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         .collect(),\n                     _ => Vec::new(),\n                 };\n-            candidates.retain(|candidate| *candidate != self.tcx.parent(result.callee.def_id));\n \n             return Err(IllegalSizedBound(candidates, needs_mut, span));\n         }"}, {"sha": "aa6f74cb5d45ae0ffd98fd5d231cd79d67198f91", "filename": "src/test/ui/issues/issue-35976.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a739fc81539e22591bc43b189c5d6e8c0b1d1a03/src%2Ftest%2Fui%2Fissues%2Fissue-35976.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a739fc81539e22591bc43b189c5d6e8c0b1d1a03/src%2Ftest%2Fui%2Fissues%2Fissue-35976.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-35976.rs?ref=a739fc81539e22591bc43b189c5d6e8c0b1d1a03", "patch": "@@ -1,5 +1,9 @@\n+// revisions: imported unimported\n+//[imported] check-pass\n+\n mod private {\n     pub trait Future {\n+        //[unimported]~^^ HELP perhaps add a `use` for it\n         fn wait(&self) where Self: Sized;\n     }\n \n@@ -8,13 +12,13 @@ mod private {\n     }\n }\n \n-//use private::Future;\n+#[cfg(imported)]\n+use private::Future;\n \n fn bar(arg: Box<dyn private::Future>) {\n+    // Importing the trait means that we don't autoderef `Box<dyn Future>`\n     arg.wait();\n-    //~^ ERROR the `wait` method cannot be invoked on a trait object\n+    //[unimported]~^ ERROR the `wait` method cannot be invoked on a trait object\n }\n \n-fn main() {\n-\n-}\n+fn main() {}"}, {"sha": "5d61bb8ea379992abb59771028d5f1c466bc94f8", "filename": "src/test/ui/issues/issue-35976.unimported.stderr", "status": "renamed", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a739fc81539e22591bc43b189c5d6e8c0b1d1a03/src%2Ftest%2Fui%2Fissues%2Fissue-35976.unimported.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a739fc81539e22591bc43b189c5d6e8c0b1d1a03/src%2Ftest%2Fui%2Fissues%2Fissue-35976.unimported.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-35976.unimported.stderr?ref=a739fc81539e22591bc43b189c5d6e8c0b1d1a03", "patch": "@@ -1,11 +1,16 @@\n error: the `wait` method cannot be invoked on a trait object\n-  --> $DIR/issue-35976.rs:14:9\n+  --> $DIR/issue-35976.rs:20:9\n    |\n LL |         fn wait(&self) where Self: Sized;\n    |                                    ----- this has a `Sized` requirement\n ...\n LL |     arg.wait();\n    |         ^^^^\n+   |\n+help: another candidate was found in the following trait, perhaps add a `use` for it:\n+   |\n+LL | use private::Future;\n+   |\n \n error: aborting due to previous error\n ", "previous_filename": "src/test/ui/issues/issue-35976.stderr"}]}