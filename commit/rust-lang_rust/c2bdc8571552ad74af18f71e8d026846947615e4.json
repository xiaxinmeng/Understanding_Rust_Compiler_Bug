{"sha": "c2bdc8571552ad74af18f71e8d026846947615e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyYmRjODU3MTU1MmFkNzRhZjE4ZjcxZThkMDI2ODQ2OTQ3NjE1ZTQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-08-13T14:29:14Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-08-13T16:15:41Z"}, "message": "oh the irony", "tree": {"sha": "391f681c2619c742412181026c34cf5a68c47f18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/391f681c2619c742412181026c34cf5a68c47f18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2bdc8571552ad74af18f71e8d026846947615e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2bdc8571552ad74af18f71e8d026846947615e4", "html_url": "https://github.com/rust-lang/rust/commit/c2bdc8571552ad74af18f71e8d026846947615e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2bdc8571552ad74af18f71e8d026846947615e4/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5eab397e7c9840bd01f9ca165428e8eb4156cdc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5eab397e7c9840bd01f9ca165428e8eb4156cdc4", "html_url": "https://github.com/rust-lang/rust/commit/5eab397e7c9840bd01f9ca165428e8eb4156cdc4"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "03b4de6c948ed7b18496ced7f2441f64177bd5a2", "filename": "src/lifetimes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c2bdc8571552ad74af18f71e8d026846947615e4/src%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2bdc8571552ad74af18f71e8d026846947615e4/src%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flifetimes.rs?ref=c2bdc8571552ad74af18f71e8d026846947615e4", "patch": "@@ -130,15 +130,15 @@ impl RefVisitor {\n \n impl<'v> Visitor<'v> for RefVisitor {\n     // for lifetimes of references\n-    fn visit_opt_lifetime_ref(&mut self, _: Span, lifetime: &'v Option<Lifetime>) {\n+    fn visit_opt_lifetime_ref(&mut self, _: Span, lifetime: &Option<Lifetime>) {\n         self.record(lifetime);\n     }\n \n     // for lifetimes as parameters of generics\n-    fn visit_lifetime_ref(&mut self, lifetime: &'v Lifetime) {\n+    fn visit_lifetime_ref(&mut self, lifetime: &Lifetime) {\n         self.record(&Some(*lifetime));\n     }\n \n     // for lifetime bounds; the default impl calls visit_lifetime_ref\n-    fn visit_lifetime_bound(&mut self, _: &'v Lifetime) { }\n+    fn visit_lifetime_bound(&mut self, _: &Lifetime) { }\n }"}]}