{"sha": "51336711d357e9f93d0b3074658c2d8da6d960c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxMzM2NzExZDM1N2U5ZjkzZDBiMzA3NDY1OGMyZDhkYTZkOTYwYzM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-04-05T00:56:44Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-04-05T00:56:44Z"}, "message": "Remove uses of ExprKind::Inplace", "tree": {"sha": "9bef443aa137c527cfafce587d7f87c07230579c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bef443aa137c527cfafce587d7f87c07230579c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51336711d357e9f93d0b3074658c2d8da6d960c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51336711d357e9f93d0b3074658c2d8da6d960c3", "html_url": "https://github.com/rust-lang/rust/commit/51336711d357e9f93d0b3074658c2d8da6d960c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51336711d357e9f93d0b3074658c2d8da6d960c3/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "386897b44ac3bd688428edd11d25c51d50f39af5", "url": "https://api.github.com/repos/rust-lang/rust/commits/386897b44ac3bd688428edd11d25c51d50f39af5", "html_url": "https://github.com/rust-lang/rust/commit/386897b44ac3bd688428edd11d25c51d50f39af5"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "c12c5be2d006c00871021b2ee9e6e9ee907a6be0", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51336711d357e9f93d0b3074658c2d8da6d960c3/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51336711d357e9f93d0b3074658c2d8da6d960c3/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=51336711d357e9f93d0b3074658c2d8da6d960c3", "patch": "@@ -98,7 +98,6 @@ impl<'a> Sugg<'a> {\n             ast::ExprKind::Closure(..) |\n             ast::ExprKind::If(..) |\n             ast::ExprKind::IfLet(..) |\n-            ast::ExprKind::InPlace(..) |\n             ast::ExprKind::Unary(..) |\n             ast::ExprKind::Match(..) => Sugg::MaybeParen(snippet),\n             ast::ExprKind::Block(..) |\n@@ -308,7 +307,6 @@ pub fn make_assoc(op: AssocOp, lhs: &Sugg, rhs: &Sugg) -> Sugg<'static> {\n         AssocOp::ShiftLeft |\n         AssocOp::ShiftRight |\n         AssocOp::Subtract => format!(\"{} {} {}\", lhs, op.to_ast_binop().expect(\"Those are AST ops\").to_string(), rhs),\n-        AssocOp::Inplace => format!(\"in ({}) {}\", lhs, rhs),\n         AssocOp::Assign => format!(\"{} = {}\", lhs, rhs),\n         AssocOp::AssignOp(op) => format!(\"{} {}= {}\", lhs, token_to_string(&token::BinOp(op)), rhs),\n         AssocOp::As => format!(\"{} as {}\", lhs, rhs),\n@@ -350,7 +348,7 @@ fn associativity(op: &AssocOp) -> Associativity {\n     use syntax::util::parser::AssocOp::*;\n \n     match *op {\n-        Inplace | Assign | AssignOp(_) => Associativity::Right,\n+        Assign | AssignOp(_) => Associativity::Right,\n         Add | BitAnd | BitOr | BitXor | LAnd | LOr | Multiply | As | Colon => Associativity::Both,\n         Divide |\n         Equal |"}]}