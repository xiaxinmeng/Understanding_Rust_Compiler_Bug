{"sha": "7ecd064bbe32419eb473b28cdc8e41dd34f20aa9", "node_id": "C_kwDOAAsO6NoAKDdlY2QwNjRiYmUzMjQxOWViNDczYjI4Y2RjOGU0MWRkMzRmMjBhYTk", "commit": {"author": {"name": "Nikita Tomashevich", "email": "quant3234@gmail.com", "date": "2022-11-03T17:45:14Z"}, "committer": {"name": "Nikita Tomashevich", "email": "quant3234@gmail.com", "date": "2022-12-28T11:53:48Z"}, "message": "Split infer_explicit_lifetime_required into several diags", "tree": {"sha": "17a935d316a9b032737a564c59537cb8f900b7e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17a935d316a9b032737a564c59537cb8f900b7e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ecd064bbe32419eb473b28cdc8e41dd34f20aa9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEAWou4Gq79HasRseDspeR1Nh440UFAmOsLkwACgkQspeR1Nh4\n40WcnA/9F/LVnA5DsdpOnAqDoT9T61B7shcrlk6zbyqYEzSd6aY3MlNEOOEZLNE8\nePJYq7sPSI3gCFKzP5eW0pixQChNpHQeIRh3mQTsZD4jZxz1UYfnUp/lgpXDVXVq\nQLljtY9pSGWl6s8C8/4DlFdyeIvCPAoZkyL5AwZNVkLTTv79ccoKr+0lgPvrPGfE\nTBjbx4l9OO6x4mGkF186O+u96qcoB8x/DufjE/1HRrzFoizkZSZxFyZTRA88mJSJ\nDVpdkOPqGJ9V+bf5FkSsnvo6yuTIzs9Db6Ha5A9Dg2ko6g29/dZeaWkLADkvuivM\n09zu08t8NHef8TEy82o/ANX/PjOwjojz8chQtXykVAcTMs//r9BRlQ3Gbg5uVuFK\n8X3iurE7kXqQd/qxQvjLNgvBwbM62HW6Jf7PDTG6STd/OXEhvKeSG1jtbQLUZasx\nHrZJo1L0R4ll3JNvPd4AZ8C7us4KyvkvrEaoDiwl3vF4m6WZsQXM6keDR+6qL4k7\nyzRegTN7Wpol5gNsLxKCcvkxfRDya+BivYUxTmTxvwaM9iWCkmN2I+ydQeoR+PI2\nBUzJpxAorPY64dp7HKmOK1Tc17nm0s0SxTeEOXIOI8O4YPs1G52h3h8jWBNuz5Vo\nVev9r3ucf4sJDRA+GRvfvKvlKjQsazYbxmKrmzmDku3esW+dNvg=\n=fxt2\n-----END PGP SIGNATURE-----", "payload": "tree 17a935d316a9b032737a564c59537cb8f900b7e0\nparent 19b8579803979dd3b1e83f7aa9655920eef14b98\nauthor Nikita Tomashevich <quant3234@gmail.com> 1667497514 +0300\ncommitter Nikita Tomashevich <quant3234@gmail.com> 1672228428 +0300\n\nSplit infer_explicit_lifetime_required into several diags\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ecd064bbe32419eb473b28cdc8e41dd34f20aa9", "html_url": "https://github.com/rust-lang/rust/commit/7ecd064bbe32419eb473b28cdc8e41dd34f20aa9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ecd064bbe32419eb473b28cdc8e41dd34f20aa9/comments", "author": {"login": "IntQuant", "id": 25219447, "node_id": "MDQ6VXNlcjI1MjE5NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/25219447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IntQuant", "html_url": "https://github.com/IntQuant", "followers_url": "https://api.github.com/users/IntQuant/followers", "following_url": "https://api.github.com/users/IntQuant/following{/other_user}", "gists_url": "https://api.github.com/users/IntQuant/gists{/gist_id}", "starred_url": "https://api.github.com/users/IntQuant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IntQuant/subscriptions", "organizations_url": "https://api.github.com/users/IntQuant/orgs", "repos_url": "https://api.github.com/users/IntQuant/repos", "events_url": "https://api.github.com/users/IntQuant/events{/privacy}", "received_events_url": "https://api.github.com/users/IntQuant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "IntQuant", "id": 25219447, "node_id": "MDQ6VXNlcjI1MjE5NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/25219447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IntQuant", "html_url": "https://github.com/IntQuant", "followers_url": "https://api.github.com/users/IntQuant/followers", "following_url": "https://api.github.com/users/IntQuant/following{/other_user}", "gists_url": "https://api.github.com/users/IntQuant/gists{/gist_id}", "starred_url": "https://api.github.com/users/IntQuant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IntQuant/subscriptions", "organizations_url": "https://api.github.com/users/IntQuant/orgs", "repos_url": "https://api.github.com/users/IntQuant/repos", "events_url": "https://api.github.com/users/IntQuant/events{/privacy}", "received_events_url": "https://api.github.com/users/IntQuant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19b8579803979dd3b1e83f7aa9655920eef14b98", "url": "https://api.github.com/repos/rust-lang/rust/commits/19b8579803979dd3b1e83f7aa9655920eef14b98", "html_url": "https://github.com/rust-lang/rust/commit/19b8579803979dd3b1e83f7aa9655920eef14b98"}], "stats": {"total": 87, "additions": 50, "deletions": 37}, "files": [{"sha": "52babec4f9ea74b730646cd28f79771f66ac7c5b", "filename": "compiler/rustc_error_messages/locales/en-US/infer.ftl", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7ecd064bbe32419eb473b28cdc8e41dd34f20aa9/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Finfer.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/7ecd064bbe32419eb473b28cdc8e41dd34f20aa9/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Finfer.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Finfer.ftl?ref=7ecd064bbe32419eb473b28cdc8e41dd34f20aa9", "patch": "@@ -173,16 +173,15 @@ infer_msl_trait_note = this has an implicit `'static` lifetime requirement\n infer_msl_trait_sugg = consider relaxing the implicit `'static` requirement\n infer_suggest_add_let_for_letchains = consider adding `let`\n \n-infer_explicit_lifetime_required = explicit lifetime required in {$ident_kind ->\n-    [ident] the type of `{$simple_ident}`\n-    *[param_type] parameter type\n-}\n+infer_explicit_lifetime_required_with_ident = explicit lifetime required in the type of `{$simple_ident}`\n     .label = lifetime `{$named}` required\n \n-infer_explicit_lifetime_required_sugg = add explicit lifetime `{$named}` to {$ident_kind ->\n-    [ident] the type of `{$simple_ident}`\n-    *[param_type] type\n-}\n+infer_explicit_lifetime_required_with_param_type = explicit lifetime required in parameter type\n+    .label = lifetime `{$named}` required\n+\n+infer_explicit_lifetime_required_sugg_with_ident = add explicit lifetime `{$named}` to the type of `{$simple_ident}`\n+\n+infer_explicit_lifetime_required_sugg_with_param_type = add explicit lifetime `{$named}` to type\n \n infer_actual_impl_expl_expected_signature_two = {$leading_ellipsis ->\n     [true] ..."}, {"sha": "9e3def93a6d3df8b5642eb2a01b0d3fd0661b5e5", "filename": "compiler/rustc_infer/src/errors/mod.rs", "status": "modified", "additions": 32, "deletions": 17, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/7ecd064bbe32419eb473b28cdc8e41dd34f20aa9/compiler%2Frustc_infer%2Fsrc%2Ferrors%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ecd064bbe32419eb473b28cdc8e41dd34f20aa9/compiler%2Frustc_infer%2Fsrc%2Ferrors%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Ferrors%2Fmod.rs?ref=7ecd064bbe32419eb473b28cdc8e41dd34f20aa9", "patch": "@@ -523,23 +523,38 @@ pub struct MismatchedStaticLifetime<'a> {\n }\n \n #[derive(Diagnostic)]\n-#[diag(infer_explicit_lifetime_required, code = \"E0621\")]\n-pub struct ExplicitLifetimeRequired<'a> {\n-    #[primary_span]\n-    #[label]\n-    pub span: Span,\n-    pub ident_kind: &'static str,\n-    pub simple_ident: String,\n-    pub named: String,\n-\n-    #[suggestion(\n-        infer_explicit_lifetime_required_sugg,\n-        code = \"{new_ty}\",\n-        applicability = \"unspecified\"\n-    )]\n-    pub new_ty_span: Span,\n-    #[skip_arg]\n-    pub new_ty: Ty<'a>,\n+pub enum ExplicitLifetimeRequired<'a> {\n+    #[diag(infer_explicit_lifetime_required_with_ident, code = \"E0621\")]\n+    WithIdent {\n+        #[primary_span]\n+        #[label]\n+        span: Span,\n+        simple_ident: Ident,\n+        named: String,\n+        #[suggestion(\n+            infer_explicit_lifetime_required_sugg_with_ident,\n+            code = \"{new_ty}\",\n+            applicability = \"unspecified\"\n+        )]\n+        new_ty_span: Span,\n+        #[skip_arg]\n+        new_ty: Ty<'a>,\n+    },\n+    #[diag(infer_explicit_lifetime_required_with_param_type, code = \"E0621\")]\n+    WithParamType {\n+        #[primary_span]\n+        #[label]\n+        span: Span,\n+        named: String,\n+        #[suggestion(\n+            infer_explicit_lifetime_required_sugg_with_param_type,\n+            code = \"{new_ty}\",\n+            applicability = \"unspecified\"\n+        )]\n+        new_ty_span: Span,\n+        #[skip_arg]\n+        new_ty: Ty<'a>,\n+    },\n }\n \n #[derive(Subdiagnostic)]"}, {"sha": "4e13ec90228d66c8b451cb885b17ed794094e258", "filename": "compiler/rustc_infer/src/infer/error_reporting/nice_region_error/named_anon_conflict.rs", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/7ecd064bbe32419eb473b28cdc8e41dd34f20aa9/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ecd064bbe32419eb473b28cdc8e41dd34f20aa9/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs?ref=7ecd064bbe32419eb473b28cdc8e41dd34f20aa9", "patch": "@@ -89,18 +89,17 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n         {\n             return None;\n         }\n-\n-        let simple_ident = param.pat.simple_ident();\n-        let (ident_kind, simple_ident) = match simple_ident {\n-            Some(ident) => (\"ident\", ident.to_string()),\n-            None => (\"param_type\", String::new()),\n-        };\n-\n         let named = named.to_string();\n-\n-        let err =\n-            ExplicitLifetimeRequired { span, ident_kind, simple_ident, named, new_ty_span, new_ty };\n-        let err = self.tcx().sess.parse_sess.create_err(err);\n-        Some(err)\n+        let err = match param.pat.simple_ident() {\n+            Some(simple_ident) => ExplicitLifetimeRequired::WithIdent {\n+                span,\n+                simple_ident,\n+                named,\n+                new_ty_span,\n+                new_ty,\n+            },\n+            None => ExplicitLifetimeRequired::WithParamType { span, named, new_ty_span, new_ty },\n+        };\n+        Some(self.tcx().sess.parse_sess.create_err(err))\n     }\n }"}]}