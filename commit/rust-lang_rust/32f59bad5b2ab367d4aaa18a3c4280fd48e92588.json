{"sha": "32f59bad5b2ab367d4aaa18a3c4280fd48e92588", "node_id": "C_kwDOAAsO6NoAKDMyZjU5YmFkNWIyYWIzNjdkNGFhYTE4YTNjNDI4MGZkNDhlOTI1ODg", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-03-26T13:40:28Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-03-26T13:40:28Z"}, "message": "Add fixme", "tree": {"sha": "fda2676ea65c65f900ca9e19fe940db1214e8750", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fda2676ea65c65f900ca9e19fe940db1214e8750"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32f59bad5b2ab367d4aaa18a3c4280fd48e92588", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32f59bad5b2ab367d4aaa18a3c4280fd48e92588", "html_url": "https://github.com/rust-lang/rust/commit/32f59bad5b2ab367d4aaa18a3c4280fd48e92588", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32f59bad5b2ab367d4aaa18a3c4280fd48e92588/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "257d9005b4e86078a6cea46e1e0958f0d10b537d", "url": "https://api.github.com/repos/rust-lang/rust/commits/257d9005b4e86078a6cea46e1e0958f0d10b537d", "html_url": "https://github.com/rust-lang/rust/commit/257d9005b4e86078a6cea46e1e0958f0d10b537d"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "b23fef6af2dcc5227b5f6712d99413c0848bf1bc", "filename": "src/constant.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32f59bad5b2ab367d4aaa18a3c4280fd48e92588/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32f59bad5b2ab367d4aaa18a3c4280fd48e92588/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=32f59bad5b2ab367d4aaa18a3c4280fd48e92588", "patch": "@@ -149,6 +149,8 @@ pub(crate) fn codegen_const_value<'tcx>(\n                         _ => unreachable!(),\n                     };\n \n+                    // FIXME avoid this extra copy to the stack and directly write to the final\n+                    // destination\n                     let place = CPlace::new_stack_slot(fx, layout);\n                     place.to_ptr().store(fx, val, MemFlags::trusted());\n                     place.to_cvalue(fx)"}]}