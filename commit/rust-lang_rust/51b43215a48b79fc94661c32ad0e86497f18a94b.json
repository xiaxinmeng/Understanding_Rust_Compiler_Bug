{"sha": "51b43215a48b79fc94661c32ad0e86497f18a94b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxYjQzMjE1YTQ4Yjc5ZmM5NDY2MWMzMmFkMGU4NjQ5N2YxOGE5NGI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-28T18:37:15Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-28T18:37:15Z"}, "message": "cast -> transmute", "tree": {"sha": "50f1399e9e4e5c34e3399152f3364a0443c17f84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50f1399e9e4e5c34e3399152f3364a0443c17f84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51b43215a48b79fc94661c32ad0e86497f18a94b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51b43215a48b79fc94661c32ad0e86497f18a94b", "html_url": "https://github.com/rust-lang/rust/commit/51b43215a48b79fc94661c32ad0e86497f18a94b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51b43215a48b79fc94661c32ad0e86497f18a94b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42d3edada782e4fe0da15b614c4b809d00718ce6", "url": "https://api.github.com/repos/rust-lang/rust/commits/42d3edada782e4fe0da15b614c4b809d00718ce6", "html_url": "https://github.com/rust-lang/rust/commit/42d3edada782e4fe0da15b614c4b809d00718ce6"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "0dc373f35e30261158d082c59913707cb2703219", "filename": "src/eval_context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51b43215a48b79fc94661c32ad0e86497f18a94b/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51b43215a48b79fc94661c32ad0e86497f18a94b/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=51b43215a48b79fc94661c32ad0e86497f18a94b", "patch": "@@ -1347,7 +1347,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                     I128 => 16,\n                     Is => self.memory.pointer_size(),\n                 };\n-                // if we cast a ptr to an isize, reading it back into a primval shouldn't panic\n+                // if we transmute a ptr to an isize, reading it back into a primval shouldn't panic\n                 // Due to read_ptr ignoring the sign, we need to jump around some hoops\n                 match self.memory.read_int(ptr, size) {\n                     Err(EvalError::ReadPointerAsBytes) if size == self.memory.pointer_size() => self.memory.read_ptr(ptr)?,\n@@ -1366,7 +1366,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                     Us => self.memory.pointer_size(),\n                 };\n                 if size == self.memory.pointer_size() {\n-                    // if we cast a ptr to an usize, reading it back into a primval shouldn't panic\n+                    // if we transmute a ptr to an usize, reading it back into a primval shouldn't panic\n                     self.memory.read_ptr(ptr)?\n                 } else {\n                     PrimVal::from_u128(self.memory.read_uint(ptr, size)?)"}]}