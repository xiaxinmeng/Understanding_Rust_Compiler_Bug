{"sha": "e953e4621e9c0bfa3a10a4a7dd1da1512a28332d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5NTNlNDYyMWU5YzBiZmEzYTEwYTRhN2RkMWRhMTUxMmEyODMzMmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-01T04:23:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-01T04:23:29Z"}, "message": "Auto merge of #51869 - nnethercote:rm-clone_from, r=nikomatsakis\n\nAvoid needless allocations in `liveness_of_locals`.\n\nWe don't need to replace the heap-allocated bitset, we can just\noverwrite its contents.\n\nThis speeds up most NLL benchmarks, the best by 1.5%.\n\nr? @nikomatsakis", "tree": {"sha": "d55f27c62fd8cb52733fc158c4c54104de02aecc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d55f27c62fd8cb52733fc158c4c54104de02aecc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e953e4621e9c0bfa3a10a4a7dd1da1512a28332d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e953e4621e9c0bfa3a10a4a7dd1da1512a28332d", "html_url": "https://github.com/rust-lang/rust/commit/e953e4621e9c0bfa3a10a4a7dd1da1512a28332d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e953e4621e9c0bfa3a10a4a7dd1da1512a28332d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33b40f56792f0ed198b79818891634275cb8168e", "url": "https://api.github.com/repos/rust-lang/rust/commits/33b40f56792f0ed198b79818891634275cb8168e", "html_url": "https://github.com/rust-lang/rust/commit/33b40f56792f0ed198b79818891634275cb8168e"}, {"sha": "08683f003cab472efc0481c349cb69dfb137c4c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/08683f003cab472efc0481c349cb69dfb137c4c1", "html_url": "https://github.com/rust-lang/rust/commit/08683f003cab472efc0481c349cb69dfb137c4c1"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "30b87c0390a7ed3032914e135266e74de0a36d57", "filename": "src/librustc_data_structures/indexed_set.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e953e4621e9c0bfa3a10a4a7dd1da1512a28332d/src%2Flibrustc_data_structures%2Findexed_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e953e4621e9c0bfa3a10a4a7dd1da1512a28332d/src%2Flibrustc_data_structures%2Findexed_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Findexed_set.rs?ref=e953e4621e9c0bfa3a10a4a7dd1da1512a28332d", "patch": "@@ -233,7 +233,9 @@ impl<T: Idx> IdxSet<T> {\n         &mut self.bits\n     }\n \n-    pub fn clone_from(&mut self, other: &IdxSet<T>) {\n+    /// Efficiently overwrite `self` with `other`. Panics if `self` and `other`\n+    /// don't have the same length.\n+    pub fn overwrite(&mut self, other: &IdxSet<T>) {\n         self.words_mut().clone_from_slice(other.words());\n     }\n "}, {"sha": "05453bd58c43d9015ccacbf024d47def18252d7e", "filename": "src/librustc_mir/dataflow/at_location.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e953e4621e9c0bfa3a10a4a7dd1da1512a28332d/src%2Flibrustc_mir%2Fdataflow%2Fat_location.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e953e4621e9c0bfa3a10a4a7dd1da1512a28332d/src%2Flibrustc_mir%2Fdataflow%2Fat_location.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fat_location.rs?ref=e953e4621e9c0bfa3a10a4a7dd1da1512a28332d", "patch": "@@ -139,7 +139,7 @@ impl<BD> FlowsAtLocation for FlowAtLocation<BD>\n     where BD: BitDenotation\n {\n     fn reset_to_entry_of(&mut self, bb: BasicBlock) {\n-        (*self.curr_state).clone_from(self.base_results.sets().on_entry_set_for(bb.index()));\n+        self.curr_state.overwrite(self.base_results.sets().on_entry_set_for(bb.index()));\n     }\n \n     fn reconstruct_statement_effect(&mut self, loc: Location) {"}, {"sha": "98cd9c35d8809ec9e66a11c9f7c91023ef27381e", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e953e4621e9c0bfa3a10a4a7dd1da1512a28332d/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e953e4621e9c0bfa3a10a4a7dd1da1512a28332d/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=e953e4621e9c0bfa3a10a4a7dd1da1512a28332d", "patch": "@@ -242,7 +242,7 @@ impl<'b, 'a: 'b, 'tcx: 'a, BD> PropagationContext<'b, 'a, 'tcx, BD> where BD: Bi\n             {\n                 let sets = builder.flow_state.sets.for_block(bb_idx);\n                 debug_assert!(in_out.words().len() == sets.on_entry.words().len());\n-                in_out.clone_from(sets.on_entry);\n+                in_out.overwrite(sets.on_entry);\n                 in_out.union(sets.gen_set);\n                 in_out.subtract(sets.kill_set);\n             }"}, {"sha": "34f8141141d26180740b99793f62f1150cb38d91", "filename": "src/librustc_mir/util/liveness.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e953e4621e9c0bfa3a10a4a7dd1da1512a28332d/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e953e4621e9c0bfa3a10a4a7dd1da1512a28332d/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fliveness.rs?ref=e953e4621e9c0bfa3a10a4a7dd1da1512a28332d", "patch": "@@ -141,14 +141,14 @@ pub fn liveness_of_locals<'tcx>(mir: &Mir<'tcx>, mode: LivenessMode) -> Liveness\n             for &successor in mir.basic_blocks()[b].terminator().successors() {\n                 bits.union(&ins[successor]);\n             }\n-            outs[b].clone_from(&bits);\n+            outs[b].overwrite(&bits);\n \n             // bits = use \u222a (bits - def)\n             def_use[b].apply(&mut bits);\n \n             // update bits on entry and flag if they have changed\n             if ins[b] != bits {\n-                ins[b].clone_from(&bits);\n+                ins[b].overwrite(&bits);\n                 changed = true;\n             }\n         }"}]}