{"sha": "f359aa276216aa74868b4ead5fea9a83a8397b27", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNTlhYTI3NjIxNmFhNzQ4NjhiNGVhZDVmZWE5YTgzYTgzOTdiMjc=", "commit": {"author": {"name": "jonathandturner", "email": "probata@hotmail.com", "date": "2016-04-30T16:06:01Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-05-02T15:49:26Z"}, "message": "Fix unicode test to use original error format", "tree": {"sha": "98cccf0e5586b10a6324c8992ee0b1e65f4d11b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98cccf0e5586b10a6324c8992ee0b1e65f4d11b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f359aa276216aa74868b4ead5fea9a83a8397b27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f359aa276216aa74868b4ead5fea9a83a8397b27", "html_url": "https://github.com/rust-lang/rust/commit/f359aa276216aa74868b4ead5fea9a83a8397b27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f359aa276216aa74868b4ead5fea9a83a8397b27/comments", "author": {"login": "jntrnr", "id": 547158, "node_id": "MDQ6VXNlcjU0NzE1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/547158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jntrnr", "html_url": "https://github.com/jntrnr", "followers_url": "https://api.github.com/users/jntrnr/followers", "following_url": "https://api.github.com/users/jntrnr/following{/other_user}", "gists_url": "https://api.github.com/users/jntrnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jntrnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jntrnr/subscriptions", "organizations_url": "https://api.github.com/users/jntrnr/orgs", "repos_url": "https://api.github.com/users/jntrnr/repos", "events_url": "https://api.github.com/users/jntrnr/events{/privacy}", "received_events_url": "https://api.github.com/users/jntrnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64e0819fc2681be7d3f0e61f8b0f61eca67ad3fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/64e0819fc2681be7d3f0e61f8b0f61eca67ad3fb", "html_url": "https://github.com/rust-lang/rust/commit/64e0819fc2681be7d3f0e61f8b0f61eca67ad3fb"}], "stats": {"total": 32, "additions": 15, "deletions": 17}, "files": [{"sha": "3963d20df8873dcc405a79e19654c84f126e09a5", "filename": "src/test/run-make/unicode-input/span_length.rs", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f359aa276216aa74868b4ead5fea9a83a8397b27/src%2Ftest%2Frun-make%2Funicode-input%2Fspan_length.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f359aa276216aa74868b4ead5fea9a83a8397b27/src%2Ftest%2Frun-make%2Funicode-input%2Fspan_length.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Funicode-input%2Fspan_length.rs?ref=f359aa276216aa74868b4ead5fea9a83a8397b27", "patch": "@@ -65,8 +65,8 @@ fn main() {\n \n         let err = String::from_utf8_lossy(&result.stderr);\n \n-        // the span should end the line (e.g no extra ^'s)\n-        let expected_span = format!(\"^{}\\n\", repeat(\"^\").take(n - 1)\n+        // the span should end the line (e.g no extra ~'s)\n+        let expected_span = format!(\"^{}\\n\", repeat(\"~\").take(n - 1)\n                                                         .collect::<String>());\n         assert!(err.contains(&expected_span));\n     }\n@@ -91,19 +91,17 @@ fn main() {\n \n     // Test both the length of the snake and the leading spaces up to it\n \n-    // First snake is 9 ^s long.\n-    let expected_1 = r#\"\n-1 |> extern \"\uf937\uf922\uf92ba\u0301\u0301\u0301\" fn foo() {} extern \"\uf937\uf922\uf92ba\u0301\u0301\" fn bar() {}\n-  |>        ^^^^^^^^^\n-\"#;\n-    assert!(err.contains(&expected_1));\n-\n-    // Second snake is only 8 ^s long, because rustc counts chars()\n-    // now rather than width(). This is because width() functions are\n-    // to be removed from librustc_unicode\n-    let expected_2 = r#\"\n-1 |> extern \"\uf937\uf922\uf92ba\u0301\u0301\u0301\" fn foo() {} extern \"\uf937\uf922\uf92ba\u0301\u0301\" fn bar() {}\n-  |>                                     ^^^^^^^^\n-\"#;\n-    assert!(err.contains(&expected_2));\n+    // First snake is 8 ~s long, with 7 preceding spaces (excluding file name/line offset)\n+    let expected_span = format!(\"\\n{}^{}\\n\",\n+                                repeat(\" \").take(offset + 7).collect::<String>(),\n+                                repeat(\"~\").take(8).collect::<String>());\n+    assert!(err.contains(&expected_span));\n+    // Second snake is only 7 ~s long, with 36 preceding spaces,\n+    // because rustc counts chars() now rather than width(). This\n+    // is because width() functions are to be removed from\n+    // librustc_unicode\n+    let expected_span = format!(\"\\n{}^{}\\n\",\n+                                repeat(\" \").take(offset + 36).collect::<String>(),\n+                                repeat(\"~\").take(7).collect::<String>());\n+    assert!(err.contains(&expected_span));\n }"}]}