{"sha": "a190a2c68eb0606b4617bea999796ea9a9ae06a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExOTBhMmM2OGViMDYwNmI0NjE3YmVhOTk5Nzk2ZWE5YTlhZTA2YTY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-12T22:36:36Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-12T22:39:48Z"}, "message": "rustc: Remove exterior vectors from front::attr", "tree": {"sha": "3bfde6c6f3317a55cd67aaf9d18b7b790dabda4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bfde6c6f3317a55cd67aaf9d18b7b790dabda4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a190a2c68eb0606b4617bea999796ea9a9ae06a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a190a2c68eb0606b4617bea999796ea9a9ae06a6", "html_url": "https://github.com/rust-lang/rust/commit/a190a2c68eb0606b4617bea999796ea9a9ae06a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a190a2c68eb0606b4617bea999796ea9a9ae06a6/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12d553216663b80a6c10921ab52558253ba56920", "url": "https://api.github.com/repos/rust-lang/rust/commits/12d553216663b80a6c10921ab52558253ba56920", "html_url": "https://github.com/rust-lang/rust/commit/12d553216663b80a6c10921ab52558253ba56920"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "44de4cd0a90b309eaa07dee64d0b48c24707229c", "filename": "src/comp/back/link.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a190a2c68eb0606b4617bea999796ea9a9ae06a6/src%2Fcomp%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a190a2c68eb0606b4617bea999796ea9a9ae06a6/src%2Fcomp%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Flink.rs?ref=a190a2c68eb0606b4617bea999796ea9a9ae06a6", "patch": "@@ -286,28 +286,28 @@ fn build_link_meta(&session::session sess, &ast::crate c,\n \n     type provided_metas = rec(option::t[str] name,\n                               option::t[str] vers,\n-                              vec[@ast::meta_item] cmh_items);\n+                              (@ast::meta_item)[] cmh_items);\n \n     fn provided_link_metas(&session::session sess,\n                            &ast::crate c) -> provided_metas {\n         let option::t[str] name = none;\n         let option::t[str] vers = none;\n-        let vec[@ast::meta_item] cmh_items = [];\n+        let (@ast::meta_item)[] cmh_items = ~[];\n         auto linkage_metas = attr::find_linkage_metas(c.node.attrs);\n         attr::require_unique_names(sess, linkage_metas);\n         for (@ast::meta_item meta in linkage_metas) {\n             if (attr::get_meta_item_name(meta) == \"name\") {\n                 alt (attr::get_meta_item_value_str(meta)) {\n                     case (some(?v)) { name = some(v); }\n-                    case (none) { cmh_items += [meta]; }\n+                    case (none) { cmh_items += ~[meta]; }\n                 }\n             } else if (attr::get_meta_item_name(meta) == \"vers\") {\n                 alt (attr::get_meta_item_value_str(meta)) {\n                     case (some(?v)) { vers = some(v); }\n-                    case (none) { cmh_items += [meta]; }\n+                    case (none) { cmh_items += ~[meta]; }\n                 }\n             } else {\n-                cmh_items += [meta];\n+                cmh_items += ~[meta];\n             }\n         }\n         ret rec(name = name,"}, {"sha": "af4da3f24db503e2e0cbff03f464ec08bf65ca6d", "filename": "src/comp/front/attr.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a190a2c68eb0606b4617bea999796ea9a9ae06a6/src%2Fcomp%2Ffront%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a190a2c68eb0606b4617bea999796ea9a9ae06a6/src%2Fcomp%2Ffront%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fattr.rs?ref=a190a2c68eb0606b4617bea999796ea9a9ae06a6", "patch": "@@ -1,7 +1,6 @@\n // Functions dealing with attributes and meta_items\n \n import std::ivec;\n-import std::vec;\n import std::str;\n import std::map;\n import std::option;\n@@ -147,7 +146,7 @@ fn contains(&(@ast::meta_item)[] haystack, @ast::meta_item needle) -> bool {\n }\n \n // FIXME: This needs to sort by meta_item variant in addition to the item name\n-fn sort_meta_items(&vec[@ast::meta_item] items) -> vec[@ast::meta_item] {\n+fn sort_meta_items(&(@ast::meta_item)[] items) -> (@ast::meta_item)[] {\n     fn lteq(&@ast::meta_item ma, &@ast::meta_item mb) -> bool {\n         fn key(&@ast::meta_item m) -> ast::ident {\n             alt (m.node) {\n@@ -166,16 +165,16 @@ fn sort_meta_items(&vec[@ast::meta_item] items) -> vec[@ast::meta_item] {\n     }\n \n     // This is sort of stupid here, converting to a vec of mutables and back\n-    let vec[mutable @ast::meta_item] v = [mutable ];\n+    let (@ast::meta_item)[mutable] v = ~[mutable];\n     for (@ast::meta_item mi in items) {\n-        v += [mutable mi];\n+        v += ~[mutable mi];\n     }\n \n-    std::sort::quick_sort(lteq, v);\n+    std::sort::ivector::quick_sort(lteq, v);\n \n-    let vec[@ast::meta_item] v2 = [];\n+    let (@ast::meta_item)[] v2 = ~[];\n     for (@ast::meta_item mi in v) {\n-        v2 += [mi]\n+        v2 += ~[mi];\n     }\n     ret v2;\n }"}]}