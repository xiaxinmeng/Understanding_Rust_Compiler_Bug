{"sha": "649af71f9e516dd1f316111b3eaccb824f5a4981", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0OWFmNzFmOWU1MTZkZDFmMzE2MTExYjNlYWNjYjgyNGY1YTQ5ODE=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2019-12-27T01:03:16Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-01-07T17:48:16Z"}, "message": "Change group and use only func call", "tree": {"sha": "5f8e71bfb8799e252cc325a2d6bc799695e52624", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f8e71bfb8799e252cc325a2d6bc799695e52624"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/649af71f9e516dd1f316111b3eaccb824f5a4981", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/649af71f9e516dd1f316111b3eaccb824f5a4981", "html_url": "https://github.com/rust-lang/rust/commit/649af71f9e516dd1f316111b3eaccb824f5a4981", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/649af71f9e516dd1f316111b3eaccb824f5a4981/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ec32175fa8825b8cc547038776fe7b36b8ad90d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ec32175fa8825b8cc547038776fe7b36b8ad90d", "html_url": "https://github.com/rust-lang/rust/commit/8ec32175fa8825b8cc547038776fe7b36b8ad90d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e7d9b9413f1e511d56625d65f089f33d75e82eeb", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/649af71f9e516dd1f316111b3eaccb824f5a4981/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649af71f9e516dd1f316111b3eaccb824f5a4981/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=649af71f9e516dd1f316111b3eaccb824f5a4981", "patch": "@@ -239,7 +239,7 @@ declare_clippy_lint! {\n     /// }\n     /// ```\n     pub PATS_WITH_WILD_MATCH_ARM,\n-    restriction,\n+    complexity,\n     \"a wildcard pattern used with others patterns in same match arm\"\n }\n \n@@ -690,7 +690,7 @@ fn check_pats_wild_match(cx: &LateContext<'_, '_>, arms: &[Arm]) {\n     for arm in arms {\n         if let PatKind::Or(ref fields) = arm.pat.kind {\n             // look for multiple fields where one at least matches Wild pattern\n-            if fields.len() > 1 && fields.into_iter().any(|pat| is_wild(pat)) {\n+            if fields.len() > 1 && fields.into_iter().any(is_wild) {\n                 span_lint_and_sugg(\n                     cx,\n                     PATS_WITH_WILD_MATCH_ARM,"}]}