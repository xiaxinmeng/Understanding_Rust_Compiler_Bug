{"sha": "14ec32e20a1e6cf075898c0baa02d9cf7fa60975", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZWMzMmUyMGExZTZjZjA3NTg5OGMwYmFhMDJkOWNmN2ZhNjA5NzU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-09T12:07:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-09T12:07:34Z"}, "message": "Rollup merge of #63404 - RalfJung:flt2dec, r=Centril\n\nenable flt2dec tests in Miri\n\nWith ldexp implemented (thanks to @christianpoveda), we can finally enable these tests in Miri. Well, most of them -- some are just too slow.", "tree": {"sha": "7a364c7e2c88749af9b3e796ee8b8044db494c40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a364c7e2c88749af9b3e796ee8b8044db494c40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14ec32e20a1e6cf075898c0baa02d9cf7fa60975", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdTWIGCRBK7hj4Ov3rIwAAdHIIADoiOH2zqqEA+OJ+mQyXrR7g\ntpOCfiVDwrj6WXcJFVTzdJu2NKx2Wq3YEiRFDXapa4M8TpoYAbmgDdlZRPeC0tqC\nA2NPGYCg9Pc12thz8HTboW/Lx2CfXQqB63he2f+ruoak0Q0sSQfM5B4sNbzQaCHD\nxMKw7xg1o2kU7J5iTMslWROQpNo2fs8CDxkFXyqucY9MaFM2CHredIe277RzvqfE\n1DXy93OGJjqS0sIntnzADutmf1RDw3alrfoI3xLpPgP7ZkFrRaIbCgzm02nFWdfh\nQIDyPdXCUhf0OydcRQ5SJ/0i5BS7M9C7+NP/VVpIq5OuI9YmfqIECbjHYYZp3Zg=\n=chwh\n-----END PGP SIGNATURE-----\n", "payload": "tree 7a364c7e2c88749af9b3e796ee8b8044db494c40\nparent 171e8457d07863428e0467cc756c0c68d8c66847\nparent 29ca428ffa753a300b880ee11e132ead54f4dbb7\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565352454 +0200\ncommitter GitHub <noreply@github.com> 1565352454 +0200\n\nRollup merge of #63404 - RalfJung:flt2dec, r=Centril\n\nenable flt2dec tests in Miri\n\nWith ldexp implemented (thanks to @christianpoveda), we can finally enable these tests in Miri. Well, most of them -- some are just too slow.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14ec32e20a1e6cf075898c0baa02d9cf7fa60975", "html_url": "https://github.com/rust-lang/rust/commit/14ec32e20a1e6cf075898c0baa02d9cf7fa60975", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14ec32e20a1e6cf075898c0baa02d9cf7fa60975/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "171e8457d07863428e0467cc756c0c68d8c66847", "url": "https://api.github.com/repos/rust-lang/rust/commits/171e8457d07863428e0467cc756c0c68d8c66847", "html_url": "https://github.com/rust-lang/rust/commit/171e8457d07863428e0467cc756c0c68d8c66847"}, {"sha": "29ca428ffa753a300b880ee11e132ead54f4dbb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/29ca428ffa753a300b880ee11e132ead54f4dbb7", "html_url": "https://github.com/rust-lang/rust/commit/29ca428ffa753a300b880ee11e132ead54f4dbb7"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "46eacb4200acc154609d3a6f0aaa945d9d7c2d1a", "filename": "src/libcore/tests/num/dec2flt/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/14ec32e20a1e6cf075898c0baa02d9cf7fa60975/src%2Flibcore%2Ftests%2Fnum%2Fdec2flt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ec32e20a1e6cf075898c0baa02d9cf7fa60975/src%2Flibcore%2Ftests%2Fnum%2Fdec2flt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fdec2flt%2Fmod.rs?ref=14ec32e20a1e6cf075898c0baa02d9cf7fa60975", "patch": "@@ -77,6 +77,7 @@ fn infinity() {\n fn zero() {\n     test_literal!(0.0);\n     test_literal!(1e-325);\n+    #[cfg(not(miri))] // Miri is too slow\n     test_literal!(1e-326);\n     #[cfg(not(miri))] // Miri is too slow\n     test_literal!(1e-500);"}, {"sha": "c51451708f3ce132d5e5600b83c7d2da85548f42", "filename": "src/libcore/tests/num/flt2dec/estimator.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/14ec32e20a1e6cf075898c0baa02d9cf7fa60975/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Festimator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ec32e20a1e6cf075898c0baa02d9cf7fa60975/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Festimator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Festimator.rs?ref=14ec32e20a1e6cf075898c0baa02d9cf7fa60975", "patch": "@@ -42,7 +42,12 @@ fn test_estimate_scaling_factor() {\n     assert_almost_eq!(estimate_scaling_factor(1, -1074), -323);\n     assert_almost_eq!(estimate_scaling_factor(0x1fffffffffffff, 971), 309);\n \n-    for i in -1074..972 {\n+    #[cfg(not(miri))] // Miri is too slow\n+    let iter = -1074..972;\n+    #[cfg(miri)]\n+    let iter = (-1074..972).step_by(37);\n+\n+    for i in iter {\n         let expected = super::ldexp_f64(1.0, i).log10().ceil();\n         assert_almost_eq!(estimate_scaling_factor(1, i as i16), expected as i16);\n     }"}, {"sha": "c41d35efced6c908d9b3d8fc2057c948f06638e9", "filename": "src/libcore/tests/num/flt2dec/mod.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/14ec32e20a1e6cf075898c0baa02d9cf7fa60975/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ec32e20a1e6cf075898c0baa02d9cf7fa60975/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fmod.rs?ref=14ec32e20a1e6cf075898c0baa02d9cf7fa60975", "patch": "@@ -1,5 +1,3 @@\n-#![cfg(not(miri))] // Miri does not implement ldexp, which most tests here need\n-\n use std::prelude::v1::*;\n use std::{str, i16, f32, f64, fmt};\n \n@@ -257,6 +255,7 @@ pub fn f32_shortest_sanity_test<F>(mut f: F) where F: FnMut(&Decoded, &mut [u8])\n     check_shortest!(f(minf32) => b\"1\", -44);\n }\n \n+#[cfg(not(miri))] // Miri is too slow\n pub fn f32_exact_sanity_test<F>(mut f: F)\n         where F: FnMut(&Decoded, &mut [u8], i16) -> (usize, i16) {\n     let minf32 = ldexp_f32(1.0, -149);\n@@ -362,6 +361,7 @@ pub fn f64_shortest_sanity_test<F>(mut f: F) where F: FnMut(&Decoded, &mut [u8])\n     check_shortest!(f(minf64) => b\"5\", -323);\n }\n \n+#[cfg(not(miri))] // Miri is too slow\n pub fn f64_exact_sanity_test<F>(mut f: F)\n         where F: FnMut(&Decoded, &mut [u8], i16) -> (usize, i16) {\n     let minf64 = ldexp_f64(1.0, -1074);\n@@ -553,6 +553,10 @@ pub fn to_shortest_str_test<F>(mut f_: F)\n     assert_eq!(to_string(f, minf64, Minus, 324, false), format!(\"0.{:0>323}5\", \"\"));\n     assert_eq!(to_string(f, minf64, Minus, 325, false), format!(\"0.{:0>323}50\", \"\"));\n \n+    if cfg!(miri) { // Miri is too slow\n+        return;\n+    }\n+\n     // very large output\n     assert_eq!(to_string(f, 1.1, Minus, 80000, false), format!(\"1.1{:0>79999}\", \"\"));\n }\n@@ -807,6 +811,10 @@ pub fn to_exact_exp_str_test<F>(mut f_: F)\n                \"1.401298464324817070923729583289916131280261941876515771757068283\\\n                  8897910826858606014866381883621215820312500000000000000000000000e-45\");\n \n+    if cfg!(miri) { // Miri is too slow\n+        return;\n+    }\n+\n     assert_eq!(to_string(f, f64::MAX, Minus,   1, false), \"2e308\");\n     assert_eq!(to_string(f, f64::MAX, Minus,   2, false), \"1.8e308\");\n     assert_eq!(to_string(f, f64::MAX, Minus,   4, false), \"1.798e308\");\n@@ -1040,6 +1048,10 @@ pub fn to_exact_fixed_str_test<F>(mut f_: F)\n     assert_eq!(to_string(f, f32::MAX, Minus, 2, false),\n                \"340282346638528859811704183484516925440.00\");\n \n+    if cfg!(miri) { // Miri is too slow\n+        return;\n+    }\n+\n     let minf32 = ldexp_f32(1.0, -149);\n     assert_eq!(to_string(f, minf32, Minus,   0, false), \"0\");\n     assert_eq!(to_string(f, minf32, Minus,   1, false), \"0.0\");"}, {"sha": "d9543793397bfbef336e12b9b0f7a485cd9d4d99", "filename": "src/libcore/tests/num/flt2dec/random.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/14ec32e20a1e6cf075898c0baa02d9cf7fa60975/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Frandom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ec32e20a1e6cf075898c0baa02d9cf7fa60975/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Frandom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Frandom.rs?ref=14ec32e20a1e6cf075898c0baa02d9cf7fa60975", "patch": "@@ -109,8 +109,13 @@ pub fn f32_exhaustive_equivalence_test<F, G>(f: F, g: G, k: usize)\n #[test]\n fn shortest_random_equivalence_test() {\n     use core::num::flt2dec::strategy::dragon::format_shortest as fallback;\n-    f64_random_equivalence_test(format_shortest_opt, fallback, MAX_SIG_DIGITS, 10_000);\n-    f32_random_equivalence_test(format_shortest_opt, fallback, MAX_SIG_DIGITS, 10_000);\n+    #[cfg(not(miri))] // Miri is too slow\n+    const N: usize = 10_000;\n+    #[cfg(miri)]\n+    const N: usize = 10;\n+\n+    f64_random_equivalence_test(format_shortest_opt, fallback, MAX_SIG_DIGITS, N);\n+    f32_random_equivalence_test(format_shortest_opt, fallback, MAX_SIG_DIGITS, N);\n }\n \n #[test] #[ignore] // it is too expensive\n@@ -138,17 +143,27 @@ fn shortest_f64_hard_random_equivalence_test() {\n #[test]\n fn exact_f32_random_equivalence_test() {\n     use core::num::flt2dec::strategy::dragon::format_exact as fallback;\n+    #[cfg(not(miri))] // Miri is too slow\n+    const N: usize = 1_000;\n+    #[cfg(miri)]\n+    const N: usize = 3;\n+\n     for k in 1..21 {\n         f32_random_equivalence_test(|d, buf| format_exact_opt(d, buf, i16::MIN),\n-                                             |d, buf| fallback(d, buf, i16::MIN), k, 1_000);\n+                                             |d, buf| fallback(d, buf, i16::MIN), k, N);\n     }\n }\n \n #[test]\n fn exact_f64_random_equivalence_test() {\n     use core::num::flt2dec::strategy::dragon::format_exact as fallback;\n+    #[cfg(not(miri))] // Miri is too slow\n+    const N: usize = 1_000;\n+    #[cfg(miri)]\n+    const N: usize = 3;\n+\n     for k in 1..21 {\n         f64_random_equivalence_test(|d, buf| format_exact_opt(d, buf, i16::MIN),\n-                                             |d, buf| fallback(d, buf, i16::MIN), k, 1_000);\n+                                             |d, buf| fallback(d, buf, i16::MIN), k, N);\n     }\n }"}, {"sha": "dc4d78bfae1096fac4de4641dda8e01c1576112f", "filename": "src/libcore/tests/num/flt2dec/strategy/dragon.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/14ec32e20a1e6cf075898c0baa02d9cf7fa60975/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fstrategy%2Fdragon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ec32e20a1e6cf075898c0baa02d9cf7fa60975/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fstrategy%2Fdragon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fstrategy%2Fdragon.rs?ref=14ec32e20a1e6cf075898c0baa02d9cf7fa60975", "patch": "@@ -23,6 +23,7 @@ fn shortest_sanity_test() {\n }\n \n #[test]\n+#[cfg(not(miri))] // Miri is too slow\n fn exact_sanity_test() {\n     // This test ends up running what I can only assume is some corner-ish case\n     // of the `exp2` library function, defined in whatever C runtime we're"}, {"sha": "f8bdddfe2e4103e346ad6d5df9f75c044007d87d", "filename": "src/libcore/tests/num/flt2dec/strategy/grisu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/14ec32e20a1e6cf075898c0baa02d9cf7fa60975/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fstrategy%2Fgrisu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ec32e20a1e6cf075898c0baa02d9cf7fa60975/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fstrategy%2Fgrisu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fstrategy%2Fgrisu.rs?ref=14ec32e20a1e6cf075898c0baa02d9cf7fa60975", "patch": "@@ -36,6 +36,7 @@ fn shortest_sanity_test() {\n }\n \n #[test]\n+#[cfg(not(miri))] // Miri is too slow\n fn exact_sanity_test() {\n     // See comments in dragon.rs's exact_sanity_test for why this test is\n     // ignored on MSVC"}]}