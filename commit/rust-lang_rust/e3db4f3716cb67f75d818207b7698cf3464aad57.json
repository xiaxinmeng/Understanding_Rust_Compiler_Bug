{"sha": "e3db4f3716cb67f75d818207b7698cf3464aad57", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzZGI0ZjM3MTZjYjY3Zjc1ZDgxODIwN2I3Njk4Y2YzNDY0YWFkNTc=", "commit": {"author": {"name": "Steffen Lyngbaek", "email": "steffenlyngbaek@gmail.com", "date": "2020-03-16T03:48:39Z"}, "committer": {"name": "Steffen Lyngbaek", "email": "steffenlyngbaek@gmail.com", "date": "2020-03-16T03:48:39Z"}, "message": "Rely on the safer workspace_loaded check", "tree": {"sha": "2c8a57f0bc37d625329c49b722056021e9142eaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c8a57f0bc37d625329c49b722056021e9142eaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3db4f3716cb67f75d818207b7698cf3464aad57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3db4f3716cb67f75d818207b7698cf3464aad57", "html_url": "https://github.com/rust-lang/rust/commit/e3db4f3716cb67f75d818207b7698cf3464aad57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3db4f3716cb67f75d818207b7698cf3464aad57/comments", "author": {"login": "slyngbaek", "id": 1216902, "node_id": "MDQ6VXNlcjEyMTY5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1216902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slyngbaek", "html_url": "https://github.com/slyngbaek", "followers_url": "https://api.github.com/users/slyngbaek/followers", "following_url": "https://api.github.com/users/slyngbaek/following{/other_user}", "gists_url": "https://api.github.com/users/slyngbaek/gists{/gist_id}", "starred_url": "https://api.github.com/users/slyngbaek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slyngbaek/subscriptions", "organizations_url": "https://api.github.com/users/slyngbaek/orgs", "repos_url": "https://api.github.com/users/slyngbaek/repos", "events_url": "https://api.github.com/users/slyngbaek/events{/privacy}", "received_events_url": "https://api.github.com/users/slyngbaek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "slyngbaek", "id": 1216902, "node_id": "MDQ6VXNlcjEyMTY5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1216902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slyngbaek", "html_url": "https://github.com/slyngbaek", "followers_url": "https://api.github.com/users/slyngbaek/followers", "following_url": "https://api.github.com/users/slyngbaek/following{/other_user}", "gists_url": "https://api.github.com/users/slyngbaek/gists{/gist_id}", "starred_url": "https://api.github.com/users/slyngbaek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slyngbaek/subscriptions", "organizations_url": "https://api.github.com/users/slyngbaek/orgs", "repos_url": "https://api.github.com/users/slyngbaek/repos", "events_url": "https://api.github.com/users/slyngbaek/events{/privacy}", "received_events_url": "https://api.github.com/users/slyngbaek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a1e531176bf6dab75e6c33cc30be6c5bb3ff345", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a1e531176bf6dab75e6c33cc30be6c5bb3ff345", "html_url": "https://github.com/rust-lang/rust/commit/5a1e531176bf6dab75e6c33cc30be6c5bb3ff345"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "7e00d58ec352bfcc3a9aeee74b33792b126acad8", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e3db4f3716cb67f75d818207b7698cf3464aad57/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3db4f3716cb67f75d818207b7698cf3464aad57/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=e3db4f3716cb67f75d818207b7698cf3464aad57", "patch": "@@ -426,6 +426,12 @@ fn loop_turn(\n         });\n     }\n \n+    if !loop_state.workspace_loaded\n+        && world_state.feature_flags.get(\"notifications.workspace-loaded\")\n+    {\n+        send_startup_progress(&connection.sender, loop_state, world_state);\n+    }\n+\n     if !loop_state.workspace_loaded\n         && world_state.roots_to_scan == 0\n         && loop_state.pending_libraries.is_empty()\n@@ -439,7 +445,6 @@ fn loop_turn(\n             move || snap.analysis().prime_caches(subs).unwrap_or_else(|_: Canceled| ())\n         });\n     }\n-    send_startup_progress(&connection.sender, loop_state, world_state);\n \n     if state_changed {\n         update_file_notifications_on_threadpool(\n@@ -708,18 +713,15 @@ fn send_startup_progress(\n     loop_state: &mut LoopState,\n     world_state: &WorldState,\n ) {\n-    if !world_state.feature_flags.get(\"notifications.workspace-loaded\") {\n-        return;\n-    }\n     let total: usize = world_state.workspaces.iter().map(|it| it.n_packages()).sum();\n     let progress = total - world_state.roots_to_scan;\n     if loop_state.roots_scanned_progress == Some(progress) {\n         return;\n     }\n     loop_state.roots_scanned_progress = Some(progress);\n \n-    match (progress, loop_state.workspace_loaded) {\n-        (0, false) => {\n+    match progress {\n+        0 => {\n             let work_done_progress_create = request_new::<req::WorkDoneProgressCreate>(\n                 loop_state.next_request_id(),\n                 WorkDoneProgressCreateParams {\n@@ -737,20 +739,20 @@ fn send_startup_progress(\n                 }),\n             );\n         }\n-        (_, false) => send_startup_progress_notif(\n+        progress if progress == total => send_startup_progress_notif(\n+            sender,\n+            WorkDoneProgress::End(WorkDoneProgressEnd {\n+                message: Some(format!(\"rust-analyzer loaded, {} packages\", progress)),\n+            }),\n+        ),\n+        progress => send_startup_progress_notif(\n             sender,\n             WorkDoneProgress::Report(WorkDoneProgressReport {\n                 cancellable: None,\n                 message: Some(format!(\"{}/{} packages\", progress, total)),\n                 percentage: Some(100.0 * progress as f64 / total as f64),\n             }),\n         ),\n-        (_, true) => send_startup_progress_notif(\n-            sender,\n-            WorkDoneProgress::End(WorkDoneProgressEnd {\n-                message: Some(format!(\"rust-analyzer loaded, {} packages\", progress)),\n-            }),\n-        ),\n     }\n }\n "}]}