{"sha": "fcd39b1191f92d1f1851fa71098471ad60ab22c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjZDM5YjExOTFmOTJkMWYxODUxZmE3MTA5ODQ3MWFkNjBhYjIyYzI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-07T23:29:05Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-07T23:29:05Z"}, "message": "Remove native \"llvm\" ABI", "tree": {"sha": "0f8685e2850411d536d40a15188dbbed8e3d766d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f8685e2850411d536d40a15188dbbed8e3d766d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcd39b1191f92d1f1851fa71098471ad60ab22c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcd39b1191f92d1f1851fa71098471ad60ab22c2", "html_url": "https://github.com/rust-lang/rust/commit/fcd39b1191f92d1f1851fa71098471ad60ab22c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcd39b1191f92d1f1851fa71098471ad60ab22c2/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2", "html_url": "https://github.com/rust-lang/rust/commit/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2"}], "stats": {"total": 60, "additions": 16, "deletions": 44}, "files": [{"sha": "5ee4fd88cc0cd44e9e92d449a421aee754000735", "filename": "src/comp/metadata/tydecode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fcd39b1191f92d1f1851fa71098471ad60ab22c2/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcd39b1191f92d1f1851fa71098471ad60ab22c2/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftydecode.rs?ref=fcd39b1191f92d1f1851fa71098471ad60ab22c2", "patch": "@@ -261,7 +261,6 @@ fn parse_ty(st: @pstate, sd: str_def) -> ty::t {\n         alt next(st) as char {\n           'i' { abi = ast::native_abi_rust_intrinsic; }\n           'c' { abi = ast::native_abi_cdecl; }\n-          'l' { abi = ast::native_abi_llvm; }\n           's' { abi = ast::native_abi_x86stdcall; }\n           'C' { abi = ast::native_abi_c_stack_cdecl; }\n           'S' { abi = ast::native_abi_c_stack_stdcall; }"}, {"sha": "26bce6f802bd43eb289b224e8c14ea021a791abf", "filename": "src/comp/metadata/tyencode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fcd39b1191f92d1f1851fa71098471ad60ab22c2/src%2Fcomp%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcd39b1191f92d1f1851fa71098471ad60ab22c2/src%2Fcomp%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftyencode.rs?ref=fcd39b1191f92d1f1851fa71098471ad60ab22c2", "patch": "@@ -144,7 +144,6 @@ fn enc_sty(w: io::writer, cx: @ctxt, st: ty::sty) {\n         alt abi {\n           native_abi_rust_intrinsic. { w.write_char('i'); }\n           native_abi_cdecl. { w.write_char('c'); }\n-          native_abi_llvm. { w.write_char('l'); }\n           native_abi_x86stdcall. { w.write_char('s'); }\n           native_abi_c_stack_cdecl. { w.write_char('C'); }\n           native_abi_c_stack_stdcall. { w.write_char('S'); }"}, {"sha": "ff67fb37257f712860daf2aafb31f9f6aaa30284", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fcd39b1191f92d1f1851fa71098471ad60ab22c2/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcd39b1191f92d1f1851fa71098471ad60ab22c2/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=fcd39b1191f92d1f1851fa71098471ad60ab22c2", "patch": "@@ -5532,7 +5532,7 @@ fn native_fn_ty_param_count(cx: @crate_ctxt, id: ast::node_id) -> uint {\n pure fn native_abi_requires_pair(abi: ast::native_abi) -> bool {\n     alt abi {\n         ast::native_abi_cdecl. |\n-        ast::native_abi_llvm. | ast::native_abi_rust_intrinsic. |\n+        ast::native_abi_rust_intrinsic. |\n         ast::native_abi_x86stdcall. { ret true; }\n         ast::native_abi_c_stack_cdecl. |\n         ast::native_abi_c_stack_stdcall. { ret false; }\n@@ -5581,11 +5581,6 @@ fn register_native_fn(ccx: @crate_ctxt, sp: span, path: [str], name: str,\n         uses_retptr = false;\n         cast_to_i32 = true;\n       }\n-      ast::native_abi_llvm. {\n-        pass_task = false;\n-        uses_retptr = false;\n-        cast_to_i32 = false;\n-      }\n       ast::native_abi_x86stdcall. {\n         pass_task = false;\n         uses_retptr = false;\n@@ -5713,13 +5708,6 @@ fn register_native_fn(ccx: @crate_ctxt, sp: span, path: [str], name: str,\n     let r;\n     let rptr;\n     alt abi {\n-      ast::native_abi_llvm. {\n-        let result =\n-            trans_simple_native_abi(bcx, name, call_args, fn_type,\n-                                    uses_retptr, lib::llvm::LLVMCCallConv);\n-        r = result.val;\n-        rptr = result.rptr;\n-      }\n       ast::native_abi_rust_intrinsic. {\n         let external_name = \"rust_intrinsic_\" + name;\n         let result ="}, {"sha": "f1b1d16dd6fc4930920c2560175e1a4e1ba688f9", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fcd39b1191f92d1f1851fa71098471ad60ab22c2/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcd39b1191f92d1f1851fa71098471ad60ab22c2/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=fcd39b1191f92d1f1851fa71098471ad60ab22c2", "patch": "@@ -427,7 +427,6 @@ type _mod = {view_items: [@view_item], items: [@item]};\n \n tag native_abi {\n     native_abi_cdecl;\n-    native_abi_llvm;\n     native_abi_rust_intrinsic;\n     native_abi_x86stdcall;\n     native_abi_c_stack_cdecl;"}, {"sha": "9db7c8ae5f0a4e0e0805c249d0d4b7aad5f485fa", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fcd39b1191f92d1f1851fa71098471ad60ab22c2/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcd39b1191f92d1f1851fa71098471ad60ab22c2/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=fcd39b1191f92d1f1851fa71098471ad60ab22c2", "patch": "@@ -2007,8 +2007,6 @@ fn parse_item_native_mod(p: parser, attrs: [ast::attribute]) -> @ast::item {\n     if !is_word(p, \"mod\") {\n         let t = parse_str(p);\n         if str::eq(t, \"cdecl\") {\n-        } else if str::eq(t, \"llvm\") {\n-            abi = ast::native_abi_llvm;\n         } else if str::eq(t, \"rust-intrinsic\") {\n             abi = ast::native_abi_rust_intrinsic;\n         } else if str::eq(t, \"x86stdcall\") {"}, {"sha": "b52c6dfe450dfbab079796b6cc44da1ea0116fa0", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fcd39b1191f92d1f1851fa71098471ad60ab22c2/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcd39b1191f92d1f1851fa71098471ad60ab22c2/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=fcd39b1191f92d1f1851fa71098471ad60ab22c2", "patch": "@@ -401,7 +401,6 @@ fn print_item(s: ps, &&item: @ast::item) {\n       ast::item_native_mod(nmod) {\n         head(s, \"native\");\n         alt nmod.abi {\n-          ast::native_abi_llvm. { word_nbsp(s, \"\\\"llvm\\\"\"); }\n           ast::native_abi_cdecl. { word_nbsp(s, \"\\\"cdecl\\\"\"); }\n           ast::native_abi_rust_intrinsic. {\n             word_nbsp(s, \"\\\"rust-intrinsic\\\"\");"}, {"sha": "cc2d14ef1f21d2509e532d05159956aa8813a72e", "filename": "src/lib/math.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/fcd39b1191f92d1f1851fa71098471ad60ab22c2/src%2Flib%2Fmath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcd39b1191f92d1f1851fa71098471ad60ab22c2/src%2Flib%2Fmath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fmath.rs?ref=fcd39b1191f92d1f1851fa71098471ad60ab22c2", "patch": "@@ -1,63 +1,63 @@\n /* Module: math */\n \n-native \"llvm\" mod llvm {\n-    fn sqrt(n: float) -> float = \"sqrt.f64\";\n-    fn sin(n: float) -> float = \"sin.f64\";\n-    fn asin(n: float) -> float = \"asin.f64\";\n-    fn cos(n: float) -> float = \"cos.f64\";\n-    fn acos(n: float) -> float = \"acos.f64\";\n-    fn tan(n: float) -> float = \"tan.f64\";\n-    fn atan(n: float) -> float = \"atan.f64\";\n+native \"c-stack-cdecl\" mod libc = \"\" {\n+    fn sqrt(n: float) -> float;\n+    fn sin(n: float) -> float;\n+    fn asin(n: float) -> float;\n+    fn cos(n: float) -> float;\n+    fn acos(n: float) -> float;\n+    fn tan(n: float) -> float;\n+    fn atan(n: float) -> float;\n }\n \n /*\n Function: sqrt\n \n Returns the square root\n */\n-fn sqrt(x: float) -> float { llvm::sqrt(x) }\n+fn sqrt(x: float) -> float { libc::sqrt(x) }\n \n /*\n Function: sin\n \n Returns the sine of an angle\n */\n-fn sin(x: float) -> float { llvm::sin(x) }\n+fn sin(x: float) -> float { libc::sin(x) }\n \n /*\n Function: cos\n \n Returns the cosine of an angle\n */\n-fn cos(x: float) -> float { llvm::cos(x) }\n+fn cos(x: float) -> float { libc::cos(x) }\n \n /*\n Function: tan\n \n Returns the tangent of an angle\n */\n-fn tan(x: float) -> float { llvm::tan(x) }\n+fn tan(x: float) -> float { libc::tan(x) }\n \n /*\n Function: asin\n \n Returns the arcsine of an angle\n */\n-fn asin(x: float) -> float { llvm::asin(x) }\n+fn asin(x: float) -> float { libc::asin(x) }\n \n /*\n Function: acos\n \n Returns the arccosine of an angle\n */\n-fn acos(x: float) -> float { llvm::acos(x) }\n+fn acos(x: float) -> float { libc::acos(x) }\n \n /*\n Function: atan\n \n Returns the arctangent of an angle\n */\n-fn atan(x: float) -> float { llvm::atan(x) }\n+fn atan(x: float) -> float { libc::atan(x) }\n \n /*\n Const: pi"}, {"sha": "450f052bc6265a653eb3a34b0b7212a235d2b2d3", "filename": "src/test/run-pass/native-llvm.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/src%2Ftest%2Frun-pass%2Fnative-llvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/src%2Ftest%2Frun-pass%2Fnative-llvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative-llvm.rs?ref=1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2", "patch": "@@ -1,10 +0,0 @@\n-// xfail-test\n-\n-native \"llvm\" mod llvm {\n-    fn thesqrt(n: float) -> float = \"sqrt.f64\";\n-}\n-\n-fn main() {\n-    let s = llvm::thesqrt(4.0);\n-    assert 1.9 < s && s < 2.1;\n-}\n\\ No newline at end of file"}]}