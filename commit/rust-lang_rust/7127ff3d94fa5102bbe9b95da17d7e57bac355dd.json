{"sha": "7127ff3d94fa5102bbe9b95da17d7e57bac355dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMjdmZjNkOTRmYTUxMDJiYmU5Yjk1ZGExN2Q3ZTU3YmFjMzU1ZGQ=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-03-25T02:25:40Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-04-14T01:48:55Z"}, "message": "Don't annotate type when type is opaque", "tree": {"sha": "c3ab39e83ede888a04e490c6287207d38a86e7bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3ab39e83ede888a04e490c6287207d38a86e7bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7127ff3d94fa5102bbe9b95da17d7e57bac355dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7127ff3d94fa5102bbe9b95da17d7e57bac355dd", "html_url": "https://github.com/rust-lang/rust/commit/7127ff3d94fa5102bbe9b95da17d7e57bac355dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7127ff3d94fa5102bbe9b95da17d7e57bac355dd/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db0a5a105666ee4dffd0ab7cda9e0550836beb4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/db0a5a105666ee4dffd0ab7cda9e0550836beb4c", "html_url": "https://github.com/rust-lang/rust/commit/db0a5a105666ee4dffd0ab7cda9e0550836beb4c"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "7c29315352349c6733db8465884e668a0a15162b", "filename": "src/librustc_trait_selection/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7127ff3d94fa5102bbe9b95da17d7e57bac355dd/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7127ff3d94fa5102bbe9b95da17d7e57bac355dd/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=7127ff3d94fa5102bbe9b95da17d7e57bac355dd", "patch": "@@ -1353,7 +1353,12 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n             format!(\"{} occurs here, with `{}` maybe used later\", await_or_yield, snippet),\n         );\n \n-        span.push_span_label(target_span, format!(\"has type `{}`\", target_ty));\n+        if target_ty.is_impl_trait() {\n+            // It's not very useful to tell the user the type if it's opaque.\n+            span.push_span_label(target_span, \"created here\".to_string());\n+        } else {\n+            span.push_span_label(target_span, format!(\"has type `{}`\", target_ty));\n+        }\n \n         // If available, use the scope span to annotate the drop location.\n         if let Some(scope_span) = scope_span {"}, {"sha": "176c62fcd7d92ae4d632411707ba45eb22ba9643", "filename": "src/test/ui/async-await/async-fn-nonsend.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7127ff3d94fa5102bbe9b95da17d7e57bac355dd/src%2Ftest%2Fui%2Fasync-await%2Fasync-fn-nonsend.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7127ff3d94fa5102bbe9b95da17d7e57bac355dd/src%2Ftest%2Fui%2Fasync-await%2Fasync-fn-nonsend.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-fn-nonsend.stderr?ref=7127ff3d94fa5102bbe9b95da17d7e57bac355dd", "patch": "@@ -12,7 +12,7 @@ note: future is not `Send` as this value is used across an await\n   --> $DIR/async-fn-nonsend.rs:24:5\n    |\n LL |     let x = non_send();\n-   |         - has type `impl std::fmt::Debug`\n+   |         - created here\n LL |     drop(x);\n LL |     fut().await;\n    |     ^^^^^^^^^^^ await occurs here, with `x` maybe used later\n@@ -33,7 +33,7 @@ note: future is not `Send` as this value is used across an await\n   --> $DIR/async-fn-nonsend.rs:33:20\n    |\n LL |     match Some(non_send()) {\n-   |                ---------- has type `impl std::fmt::Debug`\n+   |                ---------- created here\n LL |         Some(_) => fut().await,\n    |                    ^^^^^^^^^^^ await occurs here, with `non_send()` maybe used later\n ..."}, {"sha": "eec2171024ac4b21a71a583879bd9f54439a27b7", "filename": "src/test/ui/async-await/issue-68112.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7127ff3d94fa5102bbe9b95da17d7e57bac355dd/src%2Ftest%2Fui%2Fasync-await%2Fissue-68112.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7127ff3d94fa5102bbe9b95da17d7e57bac355dd/src%2Ftest%2Fui%2Fasync-await%2Fissue-68112.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-68112.stderr?ref=7127ff3d94fa5102bbe9b95da17d7e57bac355dd", "patch": "@@ -12,7 +12,7 @@ note: future is not `Send` as this value is used across an await\n   --> $DIR/issue-68112.rs:32:9\n    |\n LL |         let non_send_fut = make_non_send_future1();\n-   |             ------------ has type `impl std::future::Future`\n+   |             ------------ created here\n LL |         let _ = non_send_fut.await;\n LL |         ready(0).await;\n    |         ^^^^^^^^ await occurs here, with `non_send_fut` maybe used later"}, {"sha": "273fec082cf8d0dfbb415a7974d92ab12c93b58c", "filename": "src/test/ui/generator/issue-68112.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7127ff3d94fa5102bbe9b95da17d7e57bac355dd/src%2Ftest%2Fui%2Fgenerator%2Fissue-68112.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7127ff3d94fa5102bbe9b95da17d7e57bac355dd/src%2Ftest%2Fui%2Fgenerator%2Fissue-68112.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fissue-68112.stderr?ref=7127ff3d94fa5102bbe9b95da17d7e57bac355dd", "patch": "@@ -12,7 +12,7 @@ note: future is not `Send` as this value is used across an yield\n   --> $DIR/issue-68112.rs:31:9\n    |\n LL |         let _non_send_gen = make_non_send_generator();\n-   |             ------------- has type `impl std::ops::Generator`\n+   |             ------------- created here\n LL |         yield;\n    |         ^^^^^ yield occurs here, with `_non_send_gen` maybe used later\n LL |     };"}]}