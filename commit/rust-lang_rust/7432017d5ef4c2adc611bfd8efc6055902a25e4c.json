{"sha": "7432017d5ef4c2adc611bfd8efc6055902a25e4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0MzIwMTdkNWVmNGMyYWRjNjExYmZkOGVmYzYwNTU5MDJhMjVlNGM=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-06-25T10:22:50Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-06-25T19:15:11Z"}, "message": "Primitive support for non-copyable values", "tree": {"sha": "91a4010574e9bcd0e0f6c3fcc4737e072dac4fcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91a4010574e9bcd0e0f6c3fcc4737e072dac4fcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7432017d5ef4c2adc611bfd8efc6055902a25e4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7432017d5ef4c2adc611bfd8efc6055902a25e4c", "html_url": "https://github.com/rust-lang/rust/commit/7432017d5ef4c2adc611bfd8efc6055902a25e4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7432017d5ef4c2adc611bfd8efc6055902a25e4c/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6753be655770cc6fd02db9e5c63131a4536f95e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6753be655770cc6fd02db9e5c63131a4536f95e", "html_url": "https://github.com/rust-lang/rust/commit/f6753be655770cc6fd02db9e5c63131a4536f95e"}], "stats": {"total": 35, "additions": 25, "deletions": 10}, "files": [{"sha": "26daf479e42e233913212e50dd7382662802eeec", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/7432017d5ef4c2adc611bfd8efc6055902a25e4c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7432017d5ef4c2adc611bfd8efc6055902a25e4c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=7432017d5ef4c2adc611bfd8efc6055902a25e4c", "patch": "@@ -3064,30 +3064,37 @@ tag copy_action { INIT; DROP_EXISTING; }\n \n fn copy_val(&@block_ctxt cx, copy_action action, ValueRef dst, ValueRef src,\n             &ty::t t) -> result {\n-    if (ty::type_is_scalar(cx.fcx.lcx.ccx.tcx, t) ||\n-            ty::type_is_native(cx.fcx.lcx.ccx.tcx, t)) {\n+    auto ccx = cx.fcx.lcx.ccx;\n+    // FIXME this is just a clunky stopgap. we should do proper checking in an\n+    // earlier pass.\n+    if (!ty::type_is_copyable(ccx.tcx, t)) {\n+        ccx.sess.span_err(cx.sp, \"Copying a non-copyable type.\");\n+    }\n+\n+    if (ty::type_is_scalar(ccx.tcx, t) ||\n+            ty::type_is_native(ccx.tcx, t)) {\n         ret rslt(cx, cx.build.Store(src, dst));\n-    } else if (ty::type_is_nil(cx.fcx.lcx.ccx.tcx, t) ||\n-                   ty::type_is_bot(cx.fcx.lcx.ccx.tcx, t)) {\n+    } else if (ty::type_is_nil(ccx.tcx, t) ||\n+                   ty::type_is_bot(ccx.tcx, t)) {\n         ret rslt(cx, C_nil());\n-    } else if (ty::type_is_boxed(cx.fcx.lcx.ccx.tcx, t)) {\n+    } else if (ty::type_is_boxed(ccx.tcx, t)) {\n         auto r = take_ty(cx, src, t);\n         if (action == DROP_EXISTING) {\n             r = drop_ty(r.bcx, r.bcx.build.Load(dst), t);\n         }\n         ret rslt(r.bcx, r.bcx.build.Store(src, dst));\n-    } else if (ty::type_is_structural(cx.fcx.lcx.ccx.tcx, t) ||\n-                   ty::type_has_dynamic_size(cx.fcx.lcx.ccx.tcx, t)) {\n+    } else if (ty::type_is_structural(ccx.tcx, t) ||\n+                   ty::type_has_dynamic_size(ccx.tcx, t)) {\n         auto r = take_ty(cx, src, t);\n         if (action == DROP_EXISTING) { r = drop_ty(r.bcx, dst, t); }\n         r = memmove_ty(r.bcx, dst, src, t);\n-        if (ty::type_owns_heap_mem(cx.fcx.lcx.ccx.tcx, t)) {\n+        if (ty::type_owns_heap_mem(ccx.tcx, t)) {\n             r = duplicate_heap_parts(cx, dst, t);\n         }\n         ret r;\n     }\n-    cx.fcx.lcx.ccx.sess.bug(\"unexpected type in trans::copy_val: \" +\n-                                ty_to_str(cx.fcx.lcx.ccx.tcx, t));\n+    ccx.sess.bug(\"unexpected type in trans::copy_val: \" +\n+                 ty_to_str(ccx.tcx, t));\n }\n \n "}, {"sha": "e8b31aa3a63fa2776072d98f6a8405c4a7d95570", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7432017d5ef4c2adc611bfd8efc6055902a25e4c/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7432017d5ef4c2adc611bfd8efc6055902a25e4c/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=7432017d5ef4c2adc611bfd8efc6055902a25e4c", "patch": "@@ -170,6 +170,7 @@ export type_is_scalar;\n export type_is_sequence;\n export type_is_signed;\n export type_is_structural;\n+export type_is_copyable;\n export type_is_tup_like;\n export type_is_str;\n export type_owns_heap_mem;\n@@ -896,6 +897,13 @@ fn type_is_structural(&ctxt cx, &t ty) -> bool {\n     }\n }\n \n+fn type_is_copyable(&ctxt cx, &t ty) -> bool {\n+    ret alt (struct(cx, ty)) {\n+        case (ty_res(_, _)) { false }\n+        case (_) { true }\n+    };\n+}\n+\n fn type_is_sequence(&ctxt cx, &t ty) -> bool {\n     alt (struct(cx, ty)) {\n         case (ty_str) { ret true; }"}]}