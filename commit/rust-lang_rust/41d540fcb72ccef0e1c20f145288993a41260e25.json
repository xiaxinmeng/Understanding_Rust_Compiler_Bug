{"sha": "41d540fcb72ccef0e1c20f145288993a41260e25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZDU0MGZjYjcyY2NlZjBlMWMyMGYxNDUyODg5OTNhNDEyNjBlMjU=", "commit": {"author": {"name": "Dennis Duda", "email": "git@seri.tools", "date": "2020-05-28T08:04:43Z"}, "committer": {"name": "Dennis Duda", "email": "git@seri.tools", "date": "2020-05-31T15:23:46Z"}, "message": "Unify temp path generation for non-android", "tree": {"sha": "87ec5b584a229a1bafba454b2a761730accd3ad3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87ec5b584a229a1bafba454b2a761730accd3ad3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41d540fcb72ccef0e1c20f145288993a41260e25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41d540fcb72ccef0e1c20f145288993a41260e25", "html_url": "https://github.com/rust-lang/rust/commit/41d540fcb72ccef0e1c20f145288993a41260e25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41d540fcb72ccef0e1c20f145288993a41260e25/comments", "author": {"login": "seritools", "id": 5844066, "node_id": "MDQ6VXNlcjU4NDQwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5844066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seritools", "html_url": "https://github.com/seritools", "followers_url": "https://api.github.com/users/seritools/followers", "following_url": "https://api.github.com/users/seritools/following{/other_user}", "gists_url": "https://api.github.com/users/seritools/gists{/gist_id}", "starred_url": "https://api.github.com/users/seritools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seritools/subscriptions", "organizations_url": "https://api.github.com/users/seritools/orgs", "repos_url": "https://api.github.com/users/seritools/repos", "events_url": "https://api.github.com/users/seritools/events{/privacy}", "received_events_url": "https://api.github.com/users/seritools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "seritools", "id": 5844066, "node_id": "MDQ6VXNlcjU4NDQwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5844066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seritools", "html_url": "https://github.com/seritools", "followers_url": "https://api.github.com/users/seritools/followers", "following_url": "https://api.github.com/users/seritools/following{/other_user}", "gists_url": "https://api.github.com/users/seritools/gists{/gist_id}", "starred_url": "https://api.github.com/users/seritools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seritools/subscriptions", "organizations_url": "https://api.github.com/users/seritools/orgs", "repos_url": "https://api.github.com/users/seritools/repos", "events_url": "https://api.github.com/users/seritools/events{/privacy}", "received_events_url": "https://api.github.com/users/seritools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a367956100e1a008906c0a9e251187f1d4203dde", "url": "https://api.github.com/repos/rust-lang/rust/commits/a367956100e1a008906c0a9e251187f1d4203dde", "html_url": "https://github.com/rust-lang/rust/commit/a367956100e1a008906c0a9e251187f1d4203dde"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "9112985e140a73b4fa7c8f36f646e198c47c435d", "filename": "src/tools/remote-test-server/src/main.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41d540fcb72ccef0e1c20f145288993a41260e25/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41d540fcb72ccef0e1c20f145288993a41260e25/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs?ref=41d540fcb72ccef0e1c20f145288993a41260e25", "patch": "@@ -83,12 +83,12 @@ fn main() {\n     };\n \n     let listener = t!(TcpListener::bind(bind_addr));\n-    let work: PathBuf = if cfg!(windows) {\n-        env::var_os(\"RUST_TEMP\").expect(\"Set RUST_TEMP to your preferred temp folder\").into()\n-    } else if cfg!(target_os = \"android\") {\n+    let work: PathBuf = if cfg!(target_os = \"android\") {\n         \"/data/tmp/work\".into()\n     } else {\n-        \"/tmp/work\".into()\n+        let mut temp_dir = env::temp_dir();\n+        temp_dir.push(\"work\");\n+        temp_dir\n     };\n     println!(\"listening!\");\n "}]}