{"sha": "5c4040e9bb9610990266e29059d129827c224059", "node_id": "C_kwDOAAsO6NoAKDVjNDA0MGU5YmI5NjEwOTkwMjY2ZTI5MDU5ZDEyOTgyN2MyMjQwNTk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-17T00:03:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-17T00:03:45Z"}, "message": "Auto merge of #10502 - blyxyas:fix-almost_swapped, r=giraffate\n\nfix `almost_swapped`: Ignore external macros\n\nFixes #10421 ; Related to #10499 (Fixing points *1* and *3* from #10421)\nchangelog: [`almost_swapped`]: Add a check to ignore external macros", "tree": {"sha": "13328dc38705adee92446ea5809905bcf009db29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13328dc38705adee92446ea5809905bcf009db29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c4040e9bb9610990266e29059d129827c224059", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c4040e9bb9610990266e29059d129827c224059", "html_url": "https://github.com/rust-lang/rust/commit/5c4040e9bb9610990266e29059d129827c224059", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c4040e9bb9610990266e29059d129827c224059/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5afa93bd8ea57faa67f8ea75103971831066f283", "url": "https://api.github.com/repos/rust-lang/rust/commits/5afa93bd8ea57faa67f8ea75103971831066f283", "html_url": "https://github.com/rust-lang/rust/commit/5afa93bd8ea57faa67f8ea75103971831066f283"}, {"sha": "9546517a842f31be2258a70ae940dd9071e2913a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9546517a842f31be2258a70ae940dd9071e2913a", "html_url": "https://github.com/rust-lang/rust/commit/9546517a842f31be2258a70ae940dd9071e2913a"}], "stats": {"total": 66, "additions": 44, "deletions": 22}, "files": [{"sha": "50298898d034612cdbec1b87af55fb579a249c31", "filename": "clippy_lints/src/swap.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c4040e9bb9610990266e29059d129827c224059/clippy_lints%2Fsrc%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4040e9bb9610990266e29059d129827c224059/clippy_lints%2Fsrc%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fswap.rs?ref=5c4040e9bb9610990266e29059d129827c224059", "patch": "@@ -6,7 +6,8 @@ use clippy_utils::{can_mut_borrow_both, eq_expr_value, in_constant, std_or_core}\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Block, Expr, ExprKind, PatKind, QPath, Stmt, StmtKind};\n-use rustc_lint::{LateContext, LateLintPass};\n+use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n@@ -188,6 +189,7 @@ fn check_suspicious_swap(cx: &LateContext<'_>, block: &Block<'_>) {\n         if let Some((lhs0, rhs0)) = parse(first)\n             && let Some((lhs1, rhs1)) = parse(second)\n             && first.span.eq_ctxt(second.span)\n+\t\t\t&& !in_external_macro(&cx.sess(), first.span)\n             && is_same(cx, lhs0, rhs1)\n             && is_same(cx, lhs1, rhs0)\n \t\t\t&& !is_same(cx, lhs1, rhs1) // Ignore a = b; a = a (#10421)"}, {"sha": "a9bb61451dca68d086e839197b360174da39c4b8", "filename": "tests/ui/auxiliary/macro_rules.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5c4040e9bb9610990266e29059d129827c224059/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4040e9bb9610990266e29059d129827c224059/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs?ref=5c4040e9bb9610990266e29059d129827c224059", "patch": "@@ -27,3 +27,13 @@ macro_rules! mut_mut {\n         let mut_mut_ty: &mut &mut u32 = &mut &mut 1u32;\n     };\n }\n+\n+#[macro_export]\n+macro_rules! issue_10421 {\n+    () => {\n+        let mut a = 1;\n+        let mut b = 2;\n+        a = b;\n+        b = a;\n+    };\n+}"}, {"sha": "9703674d1a4ed35ff2a28b356ac1a517b8182e4a", "filename": "tests/ui/swap.fixed", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5c4040e9bb9610990266e29059d129827c224059/tests%2Fui%2Fswap.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5c4040e9bb9610990266e29059d129827c224059/tests%2Fui%2Fswap.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fswap.fixed?ref=5c4040e9bb9610990266e29059d129827c224059", "patch": "@@ -1,4 +1,5 @@\n // run-rustfix\n+// aux-build: macro_rules.rs\n \n #![warn(clippy::all)]\n #![allow(\n@@ -8,7 +9,8 @@\n     redundant_semicolons,\n     dead_code,\n     unused_assignments,\n-    unused_variables\n+    unused_variables,\n+    clippy::let_and_return\n )]\n \n struct Foo(u32);\n@@ -187,8 +189,11 @@ const fn issue_9864(mut u: u32) -> u32 {\n     u + v\n }\n \n-#[allow(clippy::let_and_return)]\n+#[macro_use]\n+extern crate macro_rules;\n+\n const fn issue_10421(x: u32) -> u32 {\n+    issue_10421!();\n     let a = x;\n     let a = a;\n     let a = a;"}, {"sha": "a0228065e46b5984bae752a93fe07b35a420b7bc", "filename": "tests/ui/swap.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5c4040e9bb9610990266e29059d129827c224059/tests%2Fui%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4040e9bb9610990266e29059d129827c224059/tests%2Fui%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fswap.rs?ref=5c4040e9bb9610990266e29059d129827c224059", "patch": "@@ -1,4 +1,5 @@\n // run-rustfix\n+// aux-build: macro_rules.rs\n \n #![warn(clippy::all)]\n #![allow(\n@@ -8,7 +9,8 @@\n     redundant_semicolons,\n     dead_code,\n     unused_assignments,\n-    unused_variables\n+    unused_variables,\n+    clippy::let_and_return\n )]\n \n struct Foo(u32);\n@@ -216,8 +218,11 @@ const fn issue_9864(mut u: u32) -> u32 {\n     u + v\n }\n \n-#[allow(clippy::let_and_return)]\n+#[macro_use]\n+extern crate macro_rules;\n+\n const fn issue_10421(x: u32) -> u32 {\n+    issue_10421!();\n     let a = x;\n     let a = a;\n     let a = a;"}, {"sha": "0c246268499d9cb6f5f4a0321cffbab1a4e7a1d1", "filename": "tests/ui/swap.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/5c4040e9bb9610990266e29059d129827c224059/tests%2Fui%2Fswap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c4040e9bb9610990266e29059d129827c224059/tests%2Fui%2Fswap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fswap.stderr?ref=5c4040e9bb9610990266e29059d129827c224059", "patch": "@@ -1,5 +1,5 @@\n error: this looks like you are swapping `bar.a` and `bar.b` manually\n-  --> $DIR/swap.rs:25:5\n+  --> $DIR/swap.rs:27:5\n    |\n LL | /     let temp = bar.a;\n LL | |     bar.a = bar.b;\n@@ -10,55 +10,55 @@ LL | |     bar.b = temp;\n    = note: `-D clippy::manual-swap` implied by `-D warnings`\n \n error: this looks like you are swapping elements of `foo` manually\n-  --> $DIR/swap.rs:37:5\n+  --> $DIR/swap.rs:39:5\n    |\n LL | /     let temp = foo[0];\n LL | |     foo[0] = foo[1];\n LL | |     foo[1] = temp;\n    | |__________________^ help: try: `foo.swap(0, 1);`\n \n error: this looks like you are swapping elements of `foo` manually\n-  --> $DIR/swap.rs:46:5\n+  --> $DIR/swap.rs:48:5\n    |\n LL | /     let temp = foo[0];\n LL | |     foo[0] = foo[1];\n LL | |     foo[1] = temp;\n    | |__________________^ help: try: `foo.swap(0, 1);`\n \n error: this looks like you are swapping elements of `foo` manually\n-  --> $DIR/swap.rs:65:5\n+  --> $DIR/swap.rs:67:5\n    |\n LL | /     let temp = foo[0];\n LL | |     foo[0] = foo[1];\n LL | |     foo[1] = temp;\n    | |__________________^ help: try: `foo.swap(0, 1);`\n \n error: this looks like you are swapping `a` and `b` manually\n-  --> $DIR/swap.rs:76:5\n+  --> $DIR/swap.rs:78:5\n    |\n LL | /     a ^= b;\n LL | |     b ^= a;\n LL | |     a ^= b;\n    | |___________^ help: try: `std::mem::swap(&mut a, &mut b);`\n \n error: this looks like you are swapping `bar.a` and `bar.b` manually\n-  --> $DIR/swap.rs:84:5\n+  --> $DIR/swap.rs:86:5\n    |\n LL | /     bar.a ^= bar.b;\n LL | |     bar.b ^= bar.a;\n LL | |     bar.a ^= bar.b;\n    | |___________________^ help: try: `std::mem::swap(&mut bar.a, &mut bar.b);`\n \n error: this looks like you are swapping elements of `foo` manually\n-  --> $DIR/swap.rs:92:5\n+  --> $DIR/swap.rs:94:5\n    |\n LL | /     foo[0] ^= foo[1];\n LL | |     foo[1] ^= foo[0];\n LL | |     foo[0] ^= foo[1];\n    | |_____________________^ help: try: `foo.swap(0, 1);`\n \n error: this looks like you are swapping `foo[0][1]` and `bar[1][0]` manually\n-  --> $DIR/swap.rs:121:5\n+  --> $DIR/swap.rs:123:5\n    |\n LL | /     let temp = foo[0][1];\n LL | |     foo[0][1] = bar[1][0];\n@@ -68,7 +68,7 @@ LL | |     bar[1][0] = temp;\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are swapping `a` and `b` manually\n-  --> $DIR/swap.rs:135:7\n+  --> $DIR/swap.rs:137:7\n    |\n LL |       ; let t = a;\n    |  _______^\n@@ -79,7 +79,7 @@ LL | |     b = t;\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are swapping `c.0` and `a` manually\n-  --> $DIR/swap.rs:144:7\n+  --> $DIR/swap.rs:146:7\n    |\n LL |       ; let t = c.0;\n    |  _______^\n@@ -90,7 +90,7 @@ LL | |     a = t;\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are swapping `b` and `a` manually\n-  --> $DIR/swap.rs:170:5\n+  --> $DIR/swap.rs:172:5\n    |\n LL | /     let t = b;\n LL | |     b = a;\n@@ -100,7 +100,7 @@ LL | |     a = t;\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are trying to swap `a` and `b`\n-  --> $DIR/swap.rs:132:5\n+  --> $DIR/swap.rs:134:5\n    |\n LL | /     a = b;\n LL | |     b = a;\n@@ -110,7 +110,7 @@ LL | |     b = a;\n    = note: `-D clippy::almost-swapped` implied by `-D warnings`\n \n error: this looks like you are trying to swap `c.0` and `a`\n-  --> $DIR/swap.rs:141:5\n+  --> $DIR/swap.rs:143:5\n    |\n LL | /     c.0 = a;\n LL | |     a = c.0;\n@@ -119,7 +119,7 @@ LL | |     a = c.0;\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are trying to swap `a` and `b`\n-  --> $DIR/swap.rs:148:5\n+  --> $DIR/swap.rs:150:5\n    |\n LL | /     let a = b;\n LL | |     let b = a;\n@@ -128,7 +128,7 @@ LL | |     let b = a;\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are trying to swap `d` and `c`\n-  --> $DIR/swap.rs:153:5\n+  --> $DIR/swap.rs:155:5\n    |\n LL | /     d = c;\n LL | |     c = d;\n@@ -137,7 +137,7 @@ LL | |     c = d;\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are trying to swap `a` and `b`\n-  --> $DIR/swap.rs:157:5\n+  --> $DIR/swap.rs:159:5\n    |\n LL | /     let a = b;\n LL | |     b = a;\n@@ -146,7 +146,7 @@ LL | |     b = a;\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are swapping `s.0.x` and `s.0.y` manually\n-  --> $DIR/swap.rs:205:5\n+  --> $DIR/swap.rs:207:5\n    |\n LL | /     let t = s.0.x;\n LL | |     s.0.x = s.0.y;"}]}