{"sha": "4c9c70af3891e63d2192b77211837507e0a6ddb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjOWM3MGFmMzg5MWU2M2QyMTkyYjc3MjExODM3NTA3ZTBhNmRkYjU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-12-02T19:27:37Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-12-09T16:56:30Z"}, "message": "Move former compile-fail-fulldeps tests to ui", "tree": {"sha": "072cb12ee5c42f5067066b5c44b2d83297de2161", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/072cb12ee5c42f5067066b5c44b2d83297de2161"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c9c70af3891e63d2192b77211837507e0a6ddb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c9c70af3891e63d2192b77211837507e0a6ddb5", "html_url": "https://github.com/rust-lang/rust/commit/4c9c70af3891e63d2192b77211837507e0a6ddb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c9c70af3891e63d2192b77211837507e0a6ddb5/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea007c6b10e728de9dfc1fe78b8e0aed4f08f1ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea007c6b10e728de9dfc1fe78b8e0aed4f08f1ab", "html_url": "https://github.com/rust-lang/rust/commit/ea007c6b10e728de9dfc1fe78b8e0aed4f08f1ab"}], "stats": {"total": 708, "additions": 662, "deletions": 46}, "files": [{"sha": "719fbdb15ef2a7f852a2f9056d7661ea12ade038", "filename": "src/test/compile-fail/proc-macro/auxiliary/derive-clona.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ea007c6b10e728de9dfc1fe78b8e0aed4f08f1ab/src%2Ftest%2Fcompile-fail%2Fproc-macro%2Fauxiliary%2Fderive-clona.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea007c6b10e728de9dfc1fe78b8e0aed4f08f1ab/src%2Ftest%2Fcompile-fail%2Fproc-macro%2Fauxiliary%2Fderive-clona.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fproc-macro%2Fauxiliary%2Fderive-clona.rs?ref=ea007c6b10e728de9dfc1fe78b8e0aed4f08f1ab", "patch": "@@ -1,23 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// force-host\n-// no-prefer-dynamic\n-\n-#![crate_type = \"proc-macro\"]\n-\n-extern crate proc_macro;\n-\n-use proc_macro::TokenStream;\n-\n-#[proc_macro_derive(Clona)]\n-pub fn derive_clonea(input: TokenStream) -> TokenStream {\n-    \"\".parse().unwrap()\n-}"}, {"sha": "64dcf72ba2029b5165dbf06c32f669c2783ba024", "filename": "src/test/compile-fail/proc-macro/auxiliary/derive-foo.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ea007c6b10e728de9dfc1fe78b8e0aed4f08f1ab/src%2Ftest%2Fcompile-fail%2Fproc-macro%2Fauxiliary%2Fderive-foo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea007c6b10e728de9dfc1fe78b8e0aed4f08f1ab/src%2Ftest%2Fcompile-fail%2Fproc-macro%2Fauxiliary%2Fderive-foo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fproc-macro%2Fauxiliary%2Fderive-foo.rs?ref=ea007c6b10e728de9dfc1fe78b8e0aed4f08f1ab", "patch": "@@ -1,23 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// force-host\n-// no-prefer-dynamic\n-\n-#![crate_type = \"proc-macro\"]\n-\n-extern crate proc_macro;\n-\n-use proc_macro::TokenStream;\n-\n-#[proc_macro_derive(FooWithLongName)]\n-pub fn derive_foo(input: TokenStream) -> TokenStream {\n-    \"\".parse().unwrap()\n-}"}, {"sha": "798cd1406ac81664c64663fdcce91e14a0c79992", "filename": "src/test/ui/proc-macro/attr-invalid-exprs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattr-invalid-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattr-invalid-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattr-invalid-exprs.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/attr-invalid-exprs.rs"}, {"sha": "c28def63e3e24445d09a4f6fdc2cc59cdf975284", "filename": "src/test/ui/proc-macro/attr-invalid-exprs.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattr-invalid-exprs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattr-invalid-exprs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattr-invalid-exprs.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,28 @@\n+error: expected expression, found `<eof>`\n+  --> $DIR/attr-invalid-exprs.rs:21:13\n+   |\n+LL |     let _ = #[no_output] \"Hello, world!\";\n+   |             ^^^^^^^^^^^^\n+\n+error: macro expansion ignores token `,` and any following\n+  --> $DIR/attr-invalid-exprs.rs:24:13\n+   |\n+LL |     let _ = #[duplicate] \"Hello, world!\";\n+   |             ^^^^^^^^^^^^- help: you might be missing a semicolon here: `;`\n+   |             |\n+   |             caused by the macro expansion here\n+   |\n+   = note: the usage of `duplicate!` is likely invalid in expression context\n+\n+error: macro expansion ignores token `,` and any following\n+  --> $DIR/attr-invalid-exprs.rs:33:9\n+   |\n+LL |         #[duplicate]\n+   |         ^^^^^^^^^^^^- help: you might be missing a semicolon here: `;`\n+   |         |\n+   |         caused by the macro expansion here\n+   |\n+   = note: the usage of `duplicate!` is likely invalid in expression context\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "6d1d5dfe8ccdb43ea95fd4731bded618190a4c15", "filename": "src/test/ui/proc-macro/attr-stmt-expr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/attr-stmt-expr.rs"}, {"sha": "ee9bc77178217f517d781f83920b2263ce18ce0d", "filename": "src/test/ui/proc-macro/attr-stmt-expr.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,19 @@\n+error[E0658]: attributes on expressions are experimental. (see issue #15701)\n+  --> $DIR/attr-stmt-expr.rs:20:5\n+   |\n+LL |     #[expect_print_expr]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n+\n+error[E0658]: attributes on expressions are experimental. (see issue #15701)\n+  --> $DIR/attr-stmt-expr.rs:33:5\n+   |\n+LL |     #[expect_expr]\n+   |     ^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "ed2e8ec00a9f2ebf2178bef59620abc34711a997", "filename": "src/test/ui/proc-macro/attribute-with-error.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-with-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-with-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-with-error.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/attribute-with-error.rs"}, {"sha": "d2b4ac639929a0db83948b561937978610985886", "filename": "src/test/ui/proc-macro/attribute-with-error.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-with-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-with-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-with-error.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,39 @@\n+error[E0308]: mismatched types\n+  --> $DIR/attribute-with-error.rs:21:18\n+   |\n+LL |     let a: i32 = \"foo\";\n+   |                  ^^^^^ expected i32, found reference\n+   |\n+   = note: expected type `i32`\n+              found type `&'static str`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/attribute-with-error.rs:23:18\n+   |\n+LL |     let b: i32 = \"f'oo\";\n+   |                  ^^^^^^ expected i32, found reference\n+   |\n+   = note: expected type `i32`\n+              found type `&'static str`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/attribute-with-error.rs:36:22\n+   |\n+LL |         let a: i32 = \"foo\";\n+   |                      ^^^^^ expected i32, found reference\n+   |\n+   = note: expected type `i32`\n+              found type `&'static str`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/attribute-with-error.rs:46:22\n+   |\n+LL |         let a: i32 = \"foo\";\n+   |                      ^^^^^ expected i32, found reference\n+   |\n+   = note: expected type `i32`\n+              found type `&'static str`\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "f89d74de50f4195e53174b8556f29a85a80729a5", "filename": "src/test/ui/proc-macro/attribute.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/attribute.rs"}, {"sha": "c752c5364f49923a7251e6e422697a13b886bd3f", "filename": "src/test/ui/proc-macro/attribute.stderr", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,50 @@\n+error: attribute must be of form: #[proc_macro_derive(TraitName)]\n+  --> $DIR/attribute.rs:18:1\n+   |\n+LL | #[proc_macro_derive]\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: attribute must be of form: #[proc_macro_derive(TraitName)]\n+  --> $DIR/attribute.rs:24:1\n+   |\n+LL | #[proc_macro_derive = \"foo\"]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: must only be one word\n+  --> $DIR/attribute.rs:31:5\n+   |\n+LL |     a = \"b\"\n+   |     ^^^^^^^\n+\n+error: attribute must have either one or two arguments\n+  --> $DIR/attribute.rs:38:1\n+   |\n+LL | #[proc_macro_derive(b, c, d)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: must only be one word\n+  --> $DIR/attribute.rs:44:21\n+   |\n+LL | #[proc_macro_derive(d(e))]\n+   |                     ^^^^\n+\n+error: must only be one word\n+  --> $DIR/attribute.rs:50:35\n+   |\n+LL | #[proc_macro_derive(f, attributes(g = \"h\"))]\n+   |                                   ^^^^^^^\n+\n+error: must only be one word\n+  --> $DIR/attribute.rs:56:35\n+   |\n+LL | #[proc_macro_derive(i, attributes(j(k)))]\n+   |                                   ^^^^\n+\n+error: attribute must have either one or two arguments\n+  --> $DIR/attribute.rs:62:1\n+   |\n+LL | #[proc_macro_derive(l, attributes(m), n)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 8 previous errors\n+"}, {"sha": "e129711129a20fa8e369d6beaa0ee24030e7216a", "filename": "src/test/ui/proc-macro/attributes-included.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-included.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-included.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-included.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/attributes-included.rs"}, {"sha": "e7eeccc01f245948f36a0f8d9cbda1089fc1a66c", "filename": "src/test/ui/proc-macro/attributes-included.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-included.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-included.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattributes-included.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,13 @@\n+warning: unused variable: `a`\n+  --> $DIR/attributes-included.rs:27:9\n+   |\n+LL |     let a: i32 = \"foo\"; //~ WARN: unused variable\n+   |         ^ help: consider using `_a` instead\n+   |\n+note: lint level defined here\n+  --> $DIR/attributes-included.rs:14:9\n+   |\n+LL | #![warn(unused)]\n+   |         ^^^^^^\n+   = note: #[warn(unused_variables)] implied by #[warn(unused)]\n+"}, {"sha": "4cfeec2f8a665e48188e3630a5e99bf59fcc29f6", "filename": "src/test/ui/proc-macro/auxiliary/attr-stmt-expr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fattr-stmt-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fattr-stmt-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fattr-stmt-expr.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/auxiliary/attr-stmt-expr.rs"}, {"sha": "142840926694416cf168585356242933777d2abb", "filename": "src/test/ui/proc-macro/auxiliary/attribute-with-error.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fattribute-with-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fattribute-with-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fattribute-with-error.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/auxiliary/attribute-with-error.rs"}, {"sha": "a1f4209662d86b396528ec03de286323f26365e7", "filename": "src/test/ui/proc-macro/auxiliary/attributes-included.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fattributes-included.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fattributes-included.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fattributes-included.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/auxiliary/attributes-included.rs"}, {"sha": "3f0a45743671c3f25dce469868d4758c9cc12d4f", "filename": "src/test/ui/proc-macro/auxiliary/bang_proc_macro2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fbang_proc_macro2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fbang_proc_macro2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fbang_proc_macro2.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/auxiliary/bang_proc_macro2.rs"}, {"sha": "cd8750bc89c42c8022ab2c50bfe834193540b0a4", "filename": "src/test/ui/proc-macro/auxiliary/derive-a-b.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-a-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-a-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-a-b.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/auxiliary/derive-a-b.rs"}, {"sha": "53b2c23e5d7df2d8b4a70d4dc79dc8cb0a0e5928", "filename": "src/test/ui/proc-macro/auxiliary/derive-a.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-a.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/auxiliary/derive-a.rs"}, {"sha": "5787546fb1e5a92dbdfea507a352fb9b55e1fd56", "filename": "src/test/ui/proc-macro/auxiliary/derive-b.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-b.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/auxiliary/derive-b.rs"}, {"sha": "b2ded05eb51fb1c049e27013159f2a60bb4d8ab4", "filename": "src/test/ui/proc-macro/auxiliary/derive-bad.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-bad.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/auxiliary/derive-bad.rs"}, {"sha": "2d492d341ebbaa2aea3098537fdc9277dee5aa9f", "filename": "src/test/ui/proc-macro/auxiliary/derive-unstable-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-unstable-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-unstable-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-unstable-2.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/auxiliary/derive-unstable-2.rs"}, {"sha": "a7b5d1e3e54cf94e65eb0ce618a56d226577fd25", "filename": "src/test/ui/proc-macro/auxiliary/derive-unstable.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-unstable.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/auxiliary/derive-unstable.rs"}, {"sha": "5365e8238e99f5793a2ef58d13779b5909b2ffc6", "filename": "src/test/ui/proc-macro/auxiliary/issue-41211.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue-41211.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue-41211.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue-41211.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/auxiliary/issue-41211.rs"}, {"sha": "e1a7ffaa26cb7851a3b31117fc7a299b78806661", "filename": "src/test/ui/proc-macro/auxiliary/issue_38586.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue_38586.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue_38586.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue_38586.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/auxiliary/issue_38586.rs"}, {"sha": "e71b792a48a1434740c2164c4f7a977c501f7736", "filename": "src/test/ui/proc-macro/auxiliary/issue_50493.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue_50493.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue_50493.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue_50493.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/auxiliary/issue_50493.rs"}, {"sha": "cc9420e15372b8eb5708742e37756da161bdb07e", "filename": "src/test/ui/proc-macro/auxiliary/more-gates.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fmore-gates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fmore-gates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fmore-gates.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/auxiliary/more-gates.rs"}, {"sha": "7e4b7fe263d8c9382b8ea000b454c57f7cb911fb", "filename": "src/test/ui/proc-macro/auxiliary/proc-macro-gates.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fproc-macro-gates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fproc-macro-gates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fproc-macro-gates.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/auxiliary/proc-macro-gates.rs"}, {"sha": "0e4343a90d64522b1c8c9834aba934ebd30f7d4c", "filename": "src/test/ui/proc-macro/auxiliary/test-macros.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Ftest-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Ftest-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Ftest-macros.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/auxiliary/test-macros.rs"}, {"sha": "f8c287b6b72b234a45f6af8718d5a23544c4c071", "filename": "src/test/ui/proc-macro/define-two.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fdefine-two.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fdefine-two.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdefine-two.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/define-two.rs"}, {"sha": "1ca2e0a3e3cf7fddbdf021076ff34e5b71744f44", "filename": "src/test/ui/proc-macro/define-two.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fdefine-two.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fdefine-two.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdefine-two.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,14 @@\n+error[E0428]: the name `A` is defined multiple times\n+  --> $DIR/define-two.rs:25:21\n+   |\n+LL | #[proc_macro_derive(A)]\n+   |                     - previous definition of the macro `A` here\n+...\n+LL | #[proc_macro_derive(A)] //~ ERROR the name `A` is defined multiple times\n+   |                     ^ `A` redefined here\n+   |\n+   = note: `A` must be defined only once in the macro namespace of this module\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0428`."}, {"sha": "ac27e87ace10515f862cd5ed1cbd26fa16d9dd0e", "filename": "src/test/ui/proc-macro/derive-bad.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fderive-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fderive-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-bad.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/derive-bad.rs"}, {"sha": "57e72a07ee19529f2091f8bd76f3114f94b1a113", "filename": "src/test/ui/proc-macro/derive-bad.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fderive-bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fderive-bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-bad.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,14 @@\n+error: expected `:`, found `}`\n+  --> $DIR/derive-bad.rs:17:5\n+   |\n+LL |     A\n+   |     ^ expected `:`\n+\n+error: proc-macro derive produced unparseable tokens\n+  --> $DIR/derive-bad.rs:17:5\n+   |\n+LL |     A\n+   |     ^\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "edf5cc7e9ae0085184c1cc88a568e36b0f9bd00f", "filename": "src/test/ui/proc-macro/derive-still-gated.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fderive-still-gated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fderive-still-gated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-still-gated.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/derive-still-gated.rs"}, {"sha": "f2e92b992ed6e48c68b104579e1c7d265ad6d065", "filename": "src/test/ui/proc-macro/derive-still-gated.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fderive-still-gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fderive-still-gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-still-gated.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,11 @@\n+error[E0658]: attributes of the form `#[derive_*]` are reserved for the compiler (see issue #29644)\n+  --> $DIR/derive-still-gated.rs:18:3\n+   |\n+LL | #[derive_A] //~ ERROR: attributes of the form `#[derive_*]` are reserved for the compiler\n+   |   ^^^^^^^^\n+   |\n+   = help: add #![feature(custom_derive)] to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "e4fcbb117a5057c0dd55eb757713496102a08bad", "filename": "src/test/ui/proc-macro/expand-to-unstable-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/expand-to-unstable-2.rs"}, {"sha": "855e9051974b2e3a6eefb5a956a9ff8157e6df8c", "filename": "src/test/ui/proc-macro/expand-to-unstable-2.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,11 @@\n+error[E0658]: unless otherwise specified, attributes with the prefix `rustc_` are reserved for internal compiler diagnostics (see issue #29642)\n+  --> $DIR/expand-to-unstable-2.rs:18:10\n+   |\n+LL | #[derive(Unstable)]\n+   |          ^^^^^^^^\n+   |\n+   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "836e336fc22f013e86983a5c0530a0ebac944719", "filename": "src/test/ui/proc-macro/expand-to-unstable.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/expand-to-unstable.rs"}, {"sha": "e851b0e2bc3f1d6b2e1bf35c4440f0f73272f9c9", "filename": "src/test/ui/proc-macro/expand-to-unstable.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,11 @@\n+error[E0658]: use of unstable library feature 'core_intrinsics': intrinsics are unlikely to ever be stabilized, instead they should be used through stabilized interfaces in the rest of the standard library\n+  --> $DIR/expand-to-unstable.rs:18:10\n+   |\n+LL | #[derive(Unstable)]\n+   |          ^^^^^^^^\n+   |\n+   = help: add #![feature(core_intrinsics)] to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "d8bb3571c080b749c2f85e5c2a6cc256f0bd0dcc", "filename": "src/test/ui/proc-macro/export-macro.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fexport-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fexport-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexport-macro.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/export-macro.rs"}, {"sha": "f82d5ab5f1c6b04b6016a7c69ac2cfaa3cbbd78f", "filename": "src/test/ui/proc-macro/export-macro.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fexport-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fexport-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexport-macro.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,10 @@\n+error: cannot export macro_rules! macros from a `proc-macro` crate type currently\n+  --> $DIR/export-macro.rs:19:1\n+   |\n+LL | / macro_rules! foo {\n+LL | |     ($e:expr) => ($e)\n+LL | | }\n+   | |_^\n+\n+error: aborting due to previous error\n+"}, {"sha": "07e5723c1c18eaeb2939216494d5bdca10f9820f", "filename": "src/test/ui/proc-macro/exports.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fexports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fexports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexports.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/exports.rs"}, {"sha": "3637d0fbd837e06c4f1e469bbc7c9f29cba0eb0c", "filename": "src/test/ui/proc-macro/exports.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fexports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fexports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexports.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,26 @@\n+error: `proc-macro` crate types cannot export any items other than functions tagged with `#[proc_macro_derive]` currently\n+  --> $DIR/exports.rs:17:1\n+   |\n+LL | pub fn a() {} //~ ERROR: cannot export any items\n+   | ^^^^^^^^^^^^^\n+\n+error: `proc-macro` crate types cannot export any items other than functions tagged with `#[proc_macro_derive]` currently\n+  --> $DIR/exports.rs:18:1\n+   |\n+LL | pub struct B; //~ ERROR: cannot export any items\n+   | ^^^^^^^^^^^^^\n+\n+error: `proc-macro` crate types cannot export any items other than functions tagged with `#[proc_macro_derive]` currently\n+  --> $DIR/exports.rs:19:1\n+   |\n+LL | pub enum C {} //~ ERROR: cannot export any items\n+   | ^^^^^^^^^^^^^\n+\n+error: `proc-macro` crate types cannot export any items other than functions tagged with `#[proc_macro_derive]` currently\n+  --> $DIR/exports.rs:20:1\n+   |\n+LL | pub mod d {} //~ ERROR: cannot export any items\n+   | ^^^^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n+"}, {"sha": "f37980c5e0f5428d8d0e4404f296aa88b38ef143", "filename": "src/test/ui/proc-macro/illegal-proc-macro-derive-use.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fillegal-proc-macro-derive-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fillegal-proc-macro-derive-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fillegal-proc-macro-derive-use.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/illegal-proc-macro-derive-use.rs"}, {"sha": "715ff0e20a9b0c503980f0330ee527ad2e6dc15b", "filename": "src/test/ui/proc-macro/illegal-proc-macro-derive-use.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fillegal-proc-macro-derive-use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fillegal-proc-macro-derive-use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fillegal-proc-macro-derive-use.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,14 @@\n+error: the `#[proc_macro_derive]` attribute is only usable with crates of the `proc-macro` crate type\n+  --> $DIR/illegal-proc-macro-derive-use.rs:13:1\n+   |\n+LL | #[proc_macro_derive(Foo)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: the `#[proc_macro_derive]` attribute may only be used on bare functions\n+  --> $DIR/illegal-proc-macro-derive-use.rs:20:1\n+   |\n+LL | #[proc_macro_derive(Foo)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "fae2439344fb08ab6b94b9278a9c1c5f17dca235", "filename": "src/test/ui/proc-macro/import.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fimport.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/import.rs"}, {"sha": "f3633b2158383beb8302c491da0e1a2cd2ed9430", "filename": "src/test/ui/proc-macro/import.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fimport.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fimport.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fimport.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,9 @@\n+error[E0432]: unresolved import `derive_a::derive_a`\n+  --> $DIR/import.rs:18:5\n+   |\n+LL | use derive_a::derive_a;\n+   |     ^^^^^^^^^^^^^^^^^^ no `derive_a` in the root\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0432`."}, {"sha": "691c28058012215ee21aabe8ca48cf06e726e769", "filename": "src/test/ui/proc-macro/issue-37788.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fissue-37788.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fissue-37788.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-37788.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/issue-37788.rs"}, {"sha": "f5ddf9ba6b88ba7f2bc1de0a4c8a16cdc646288d", "filename": "src/test/ui/proc-macro/issue-37788.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fissue-37788.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fissue-37788.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-37788.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,17 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-37788.rs:18:5\n+   |\n+LL | fn main() {\n+   |           - expected `()` because of default return type\n+LL |     // Test that constructing the `visible_parent_map` (in `cstore_impl.rs`) does not ICE.\n+LL |     std::cell::Cell::new(0) //~ ERROR mismatched types\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^- help: try adding a semicolon: `;`\n+   |     |\n+   |     expected (), found struct `std::cell::Cell`\n+   |\n+   = note: expected type `()`\n+              found type `std::cell::Cell<{integer}>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "649220ac401f0d4043ebe70446e5cb544b5cd6c5", "filename": "src/test/ui/proc-macro/issue-38586.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fissue-38586.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fissue-38586.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-38586.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/issue-38586.rs"}, {"sha": "6ba2c0b269fe60c7774ec3ef28aefe4b6d530fbc", "filename": "src/test/ui/proc-macro/issue-38586.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fissue-38586.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fissue-38586.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-38586.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,9 @@\n+error[E0425]: cannot find value `foo` in this scope\n+  --> $DIR/issue-38586.rs:16:10\n+   |\n+LL | #[derive(A)] //~ ERROR `foo`\n+   |          ^ not found in this scope\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0425`."}, {"sha": "e0922c452b5fb0afd8e23a3fb38a58d7fb72fe45", "filename": "src/test/ui/proc-macro/issue-41211.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/issue-41211.rs"}, {"sha": "ba5fad432b7ab0323a5c295f3b87c3d57a8f2459", "filename": "src/test/ui/proc-macro/issue-41211.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,11 @@\n+error[E0658]: The attribute `emit_unchanged` is currently unknown to the compiler and may have meaning added to it in the future (see issue #29642)\n+  --> $DIR/issue-41211.rs:18:4\n+   |\n+LL | #![emit_unchanged]\n+   |    ^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "635da57049714c3475a06e60f30dfecc97cd9ca1", "filename": "src/test/ui/proc-macro/issue-50493.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fissue-50493.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fissue-50493.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-50493.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/issue-50493.rs"}, {"sha": "3dcb526553565b4142bf4ed8e42b737c58851e53", "filename": "src/test/ui/proc-macro/issue-50493.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fissue-50493.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fissue-50493.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-50493.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,15 @@\n+error: visibilities can only be restricted to ancestor modules\n+  --> $DIR/issue-50493.rs:18:12\n+   |\n+LL |     pub(in restricted) field: usize, //~ visibilities can only be restricted to ancestor modules\n+   |            ^^^^^^^^^^\n+\n+error[E0616]: field `field` of struct `Restricted` is private\n+  --> $DIR/issue-50493.rs:16:10\n+   |\n+LL | #[derive(Derive)] //~ ERROR field `field` of struct `Restricted` is private\n+   |          ^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0616`."}, {"sha": "4133e75e3a62d8f33ca7d1c80a1db23e020b544a", "filename": "src/test/ui/proc-macro/item-error.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fitem-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fitem-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fitem-error.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/item-error.rs"}, {"sha": "d19328687979b97b3700ae4d13d8eeec1d593548", "filename": "src/test/ui/proc-macro/item-error.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fitem-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fitem-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fitem-error.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,9 @@\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/item-error.rs:20:8\n+   |\n+LL |     a: &u64\n+   |        ^ expected lifetime parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0106`."}, {"sha": "d49c61202713b1e4d47ce2d780e64e9abf5225ab", "filename": "src/test/ui/proc-macro/lints_in_proc_macros.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Flints_in_proc_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Flints_in_proc_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Flints_in_proc_macros.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/lints_in_proc_macros.rs"}, {"sha": "42d9a3072265427ec448826335df484a53813e56", "filename": "src/test/ui/proc-macro/lints_in_proc_macros.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Flints_in_proc_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Flints_in_proc_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Flints_in_proc_macros.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,9 @@\n+error[E0425]: cannot find value `foobar2` in this scope\n+  --> $DIR/lints_in_proc_macros.rs:22:5\n+   |\n+LL |     bang_proc_macro2!();\n+   |     ^^^^^^^^^^^^^^^^^^^^ did you mean `foobar`?\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0425`."}, {"sha": "43d7077d02210448ca0c16c755398dd6ac45f607", "filename": "src/test/ui/proc-macro/macros-in-extern.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fmacros-in-extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fmacros-in-extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmacros-in-extern.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/macros-in-extern.rs"}, {"sha": "5c51de45801657fab3d104ff0556a3d76f24d892", "filename": "src/test/ui/proc-macro/macros-in-extern.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fmacros-in-extern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fmacros-in-extern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmacros-in-extern.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,27 @@\n+error[E0658]: macro invocations in `extern {}` blocks are experimental (see issue #49476)\n+  --> $DIR/macros-in-extern.rs:25:5\n+   |\n+LL |     #[no_output]\n+   |     ^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n+\n+error[E0658]: macro invocations in `extern {}` blocks are experimental (see issue #49476)\n+  --> $DIR/macros-in-extern.rs:29:5\n+   |\n+LL |     #[nop_attr]\n+   |     ^^^^^^^^^^^\n+   |\n+   = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n+\n+error[E0658]: macro invocations in `extern {}` blocks are experimental (see issue #49476)\n+  --> $DIR/macros-in-extern.rs:33:5\n+   |\n+LL |     emit_input!(fn rust_dbg_extern_identity_u32(arg: u32) -> u32;);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "4c038179544ffff75f9ca952fbcf82ff8ee43a64", "filename": "src/test/ui/proc-macro/more-gates.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fmore-gates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fmore-gates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmore-gates.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/more-gates.rs"}, {"sha": "d5f30d5817c93734466c474e3798ba54719ce5f9", "filename": "src/test/ui/proc-macro/more-gates.stderr", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fmore-gates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fmore-gates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmore-gates.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,43 @@\n+error[E0658]: procedural macros cannot expand to macro definitions (see issue #54727)\n+  --> $DIR/more-gates.rs:17:1\n+   |\n+LL | #[attr2mac1]\n+   | ^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error[E0658]: procedural macros cannot expand to macro definitions (see issue #54727)\n+  --> $DIR/more-gates.rs:20:1\n+   |\n+LL | #[attr2mac2]\n+   | ^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error[E0658]: procedural macros cannot expand to macro definitions (see issue #54727)\n+  --> $DIR/more-gates.rs:24:1\n+   |\n+LL | mac2mac1!(); //~ ERROR: cannot expand to macro definitions\n+   | ^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error[E0658]: procedural macros cannot expand to macro definitions (see issue #54727)\n+  --> $DIR/more-gates.rs:25:1\n+   |\n+LL | mac2mac2!(); //~ ERROR: cannot expand to macro definitions\n+   | ^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error[E0658]: procedural macros cannot expand to macro definitions (see issue #54727)\n+  --> $DIR/more-gates.rs:27:1\n+   |\n+LL | tricky!();\n+   | ^^^^^^^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error: aborting due to 5 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "ab05ca28386ab0f094db1a05e55c0b4701274b1b", "filename": "src/test/ui/proc-macro/no-macro-use-attr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fno-macro-use-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fno-macro-use-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fno-macro-use-attr.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/no-macro-use-attr.rs"}, {"sha": "447cb26f056d4a787fe297b38a74ed60ffbcce5d", "filename": "src/test/ui/proc-macro/no-macro-use-attr.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fno-macro-use-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fno-macro-use-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fno-macro-use-attr.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,20 @@\n+warning: unused extern crate\n+  --> $DIR/no-macro-use-attr.rs:16:1\n+   |\n+LL | extern crate derive_a;\n+   | ^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n+   |\n+note: lint level defined here\n+  --> $DIR/no-macro-use-attr.rs:14:9\n+   |\n+LL | #![warn(unused_extern_crates)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: compilation successful\n+  --> $DIR/no-macro-use-attr.rs:20:1\n+   |\n+LL | fn main() {} //~ ERROR compilation successful\n+   | ^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "6e52411500e22fda25ff28e267d9d76af696c866", "filename": "src/test/ui/proc-macro/proc-macro-attributes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/proc-macro-attributes.rs"}, {"sha": "a1289c6356ae63d4aa884595b77db09b1fdd7a09", "filename": "src/test/ui/proc-macro/proc-macro-attributes.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,11 @@\n+error[E0658]: The attribute `C` is currently unknown to the compiler and may have meaning added to it in the future (see issue #29642)\n+  --> $DIR/proc-macro-attributes.rs:17:3\n+   |\n+LL | #[C] //~ ERROR attribute `C` is currently unknown to the compiler\n+   |   ^\n+   |\n+   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "5049a474dd215064a695fb7885d6734f9372e847", "filename": "src/test/ui/proc-macro/proc-macro-gates.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/proc-macro-gates.rs"}, {"sha": "d5c85d97b54640827be01c6920438240c08d5ff5", "filename": "src/test/ui/proc-macro/proc-macro-gates.stderr", "status": "added", "additions": 137, "deletions": 0, "changes": 137, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,137 @@\n+error[E0658]: non-builtin inner attributes are unstable (see issue #54726)\n+  --> $DIR/proc-macro-gates.rs:21:5\n+   |\n+LL |     #![a] //~ ERROR: non-builtin inner attributes are unstable\n+   |     ^^^^^\n+   |\n+   = help: add #![feature(custom_inner_attributes)] to the crate attributes to enable\n+\n+error[E0658]: non-builtin inner attributes are unstable (see issue #54726)\n+  --> $DIR/proc-macro-gates.rs:28:5\n+   |\n+LL |     #![a] //~ ERROR: custom attributes cannot be applied to modules\n+   |     ^^^^^\n+   |\n+   = help: add #![feature(custom_inner_attributes)] to the crate attributes to enable\n+\n+error[E0658]: custom attributes cannot be applied to modules (see issue #54727)\n+  --> $DIR/proc-macro-gates.rs:24:1\n+   |\n+LL | #[a] //~ ERROR: custom attributes cannot be applied to modules\n+   | ^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error[E0658]: custom attributes cannot be applied to modules (see issue #54727)\n+  --> $DIR/proc-macro-gates.rs:28:5\n+   |\n+LL |     #![a] //~ ERROR: custom attributes cannot be applied to modules\n+   |     ^^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error: custom attribute invocations must be of the form #[foo] or #[foo(..)], the macro name must only be followed by a delimiter token\n+  --> $DIR/proc-macro-gates.rs:32:1\n+   |\n+LL | #[a = y] //~ ERROR: must only be followed by a delimiter token\n+   | ^^^^^^^^\n+\n+error[E0658]: custom attributes cannot be applied to statements (see issue #54727)\n+  --> $DIR/proc-macro-gates.rs:41:5\n+   |\n+LL |     #[a] //~ ERROR: custom attributes cannot be applied to statements\n+   |     ^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error[E0658]: custom attributes cannot be applied to statements (see issue #54727)\n+  --> $DIR/proc-macro-gates.rs:45:5\n+   |\n+LL |     #[a] //~ ERROR: custom attributes cannot be applied to statements\n+   |     ^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error[E0658]: custom attributes cannot be applied to statements (see issue #54727)\n+  --> $DIR/proc-macro-gates.rs:49:5\n+   |\n+LL |     #[a] //~ ERROR: custom attributes cannot be applied to statements\n+   |     ^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error[E0658]: custom attributes cannot be applied to expressions (see issue #54727)\n+  --> $DIR/proc-macro-gates.rs:53:14\n+   |\n+LL |     let _x = #[a] 2; //~ ERROR: custom attributes cannot be applied to expressions\n+   |              ^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error[E0658]: custom attributes cannot be applied to expressions (see issue #54727)\n+  --> $DIR/proc-macro-gates.rs:56:15\n+   |\n+LL |     let _x = [#[a] 2]; //~ ERROR: custom attributes cannot be applied to expressions\n+   |               ^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error[E0658]: custom attributes cannot be applied to expressions (see issue #54727)\n+  --> $DIR/proc-macro-gates.rs:59:14\n+   |\n+LL |     let _x = #[a] println!(); //~ ERROR: custom attributes cannot be applied to expressions\n+   |              ^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error[E0658]: procedural macros cannot be expanded to types (see issue #54727)\n+  --> $DIR/proc-macro-gates.rs:63:13\n+   |\n+LL |     let _x: m!(u32) = 3; //~ ERROR: procedural macros cannot be expanded to types\n+   |             ^^^^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error[E0658]: procedural macros cannot be expanded to patterns (see issue #54727)\n+  --> $DIR/proc-macro-gates.rs:64:12\n+   |\n+LL |     if let m!(Some(_x)) = Some(3) {} //~ ERROR: procedural macros cannot be expanded to patterns\n+   |            ^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error[E0658]: procedural macros cannot be expanded to statements (see issue #54727)\n+  --> $DIR/proc-macro-gates.rs:66:5\n+   |\n+LL |     m!(struct S;); //~ ERROR: procedural macros cannot be expanded to statements\n+   |     ^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error[E0658]: procedural macros cannot be expanded to statements (see issue #54727)\n+  --> $DIR/proc-macro-gates.rs:67:5\n+   |\n+LL |     m!(let _x = 3;); //~ ERROR: procedural macros cannot be expanded to statements\n+   |     ^^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error[E0658]: procedural macros cannot be expanded to expressions (see issue #54727)\n+  --> $DIR/proc-macro-gates.rs:69:14\n+   |\n+LL |     let _x = m!(3); //~ ERROR: procedural macros cannot be expanded to expressions\n+   |              ^^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error[E0658]: procedural macros cannot be expanded to expressions (see issue #54727)\n+  --> $DIR/proc-macro-gates.rs:70:15\n+   |\n+LL |     let _x = [m!(3)]; //~ ERROR: procedural macros cannot be expanded to expressions\n+   |               ^^^^^\n+   |\n+   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+\n+error: aborting due to 17 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "dc182414a1ddcc196a6500d5d299f193c5d8c760", "filename": "src/test/ui/proc-macro/proc-macro-gates2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates2.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/proc-macro-gates2.rs"}, {"sha": "2c0f2b09f066b693429a0efd76e1fd2c26799c38", "filename": "src/test/ui/proc-macro/proc-macro-gates2.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates2.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,19 @@\n+error[E0658]: The attribute `a` is currently unknown to the compiler and may have meaning added to it in the future (see issue #29642)\n+  --> $DIR/proc-macro-gates2.rs:23:11\n+   |\n+LL | fn _test6<#[a] T>() {}\n+   |           ^^^^\n+   |\n+   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+\n+error[E0658]: The attribute `a` is currently unknown to the compiler and may have meaning added to it in the future (see issue #29642)\n+  --> $DIR/proc-macro-gates2.rs:28:9\n+   |\n+LL |         #[a] //~ ERROR: unknown to the compiler\n+   |         ^^^^\n+   |\n+   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "e995eb549fae97f9627202ac35344f2469ff3814", "filename": "src/test/ui/proc-macro/pub-at-crate-root.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fpub-at-crate-root.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fpub-at-crate-root.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpub-at-crate-root.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/pub-at-crate-root.rs"}, {"sha": "ba9a8605f1fd3feb1d9e38d201a4314ce5f180e8", "filename": "src/test/ui/proc-macro/pub-at-crate-root.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fpub-at-crate-root.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fpub-at-crate-root.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpub-at-crate-root.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,32 @@\n+error: `proc-macro` crate types cannot export any items other than functions tagged with `#[proc_macro_derive]` currently\n+  --> $DIR/pub-at-crate-root.rs:18:1\n+   |\n+LL | / pub mod a { //~ `proc-macro` crate types cannot export any items\n+LL | |     use proc_macro::TokenStream;\n+LL | |\n+LL | |     #[proc_macro_derive(B)]\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n+\n+error: functions tagged with `#[proc_macro_derive]` must currently reside in the root of the crate\n+  --> $DIR/pub-at-crate-root.rs:22:5\n+   |\n+LL | /     pub fn bar(a: TokenStream) -> TokenStream {\n+LL | |     //~^ ERROR: must currently reside in the root of the crate\n+LL | |         a\n+LL | |     }\n+   | |_____^\n+\n+error: functions tagged with `#[proc_macro_derive]` must be `pub`\n+  --> $DIR/pub-at-crate-root.rs:29:1\n+   |\n+LL | / fn bar(a: proc_macro::TokenStream) -> proc_macro::TokenStream {\n+LL | | //~^ ERROR: functions tagged with `#[proc_macro_derive]` must be `pub`\n+LL | |     a\n+LL | | }\n+   | |_^\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "a5fcfde1dda1eb2d1932e3ad3409b4c361b27f03", "filename": "src/test/ui/proc-macro/shadow-builtin.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fshadow-builtin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fshadow-builtin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fshadow-builtin.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/shadow-builtin.rs"}, {"sha": "6d04c90738694acb3912d269c7e2228d96b80130", "filename": "src/test/ui/proc-macro/shadow-builtin.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fshadow-builtin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fshadow-builtin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fshadow-builtin.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,8 @@\n+error: cannot override a built-in #[derive] mode\n+  --> $DIR/shadow-builtin.rs:20:21\n+   |\n+LL | #[proc_macro_derive(PartialEq)]\n+   |                     ^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "9bff1c57ae4e0d63ffd3ff965d7c2b3e6ae642a9", "filename": "src/test/ui/proc-macro/shadow.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fshadow.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/shadow.rs"}, {"sha": "847fc73f9e0199868ae13ad6c2394b30b1269149", "filename": "src/test/ui/proc-macro/shadow.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fshadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Fshadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fshadow.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,18 @@\n+error[E0259]: the name `derive_a` is defined multiple times\n+  --> $DIR/shadow.rs:16:1\n+   |\n+LL | extern crate derive_a;\n+   | ---------------------- previous import of the extern crate `derive_a` here\n+LL | #[macro_use]\n+LL | extern crate derive_a; //~ ERROR the name `derive_a` is defined multiple times\n+   | ^^^^^^^^^^^^^^^^^^^^^^ `derive_a` reimported here\n+   |\n+   = note: `derive_a` must be defined only once in the type namespace of this module\n+help: you can use `as` to change the binding name of the import\n+   |\n+LL | extern crate derive_a as other_derive_a; //~ ERROR the name `derive_a` is defined multiple times\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0259`."}, {"sha": "06bd3f9dd6a2d29ace49399e578e7b586e857770", "filename": "src/test/ui/proc-macro/two-crate-types-1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Ftwo-crate-types-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Ftwo-crate-types-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Ftwo-crate-types-1.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/two-crate-types-1.rs"}, {"sha": "deaba1cf272fdec868b6717ab87f94e7195e26f4", "filename": "src/test/ui/proc-macro/two-crate-types-1.stderr", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Ftwo-crate-types-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Ftwo-crate-types-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Ftwo-crate-types-1.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,4 @@\n+error: cannot mix `proc-macro` crate type with others\n+\n+error: aborting due to previous error\n+"}, {"sha": "dd5e5acbec868b4a3ed6c0b992035158724689dc", "filename": "src/test/ui/proc-macro/two-crate-types-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Ftwo-crate-types-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Ftwo-crate-types-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Ftwo-crate-types-2.rs?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "previous_filename": "src/test/compile-fail/proc-macro/two-crate-types-2.rs"}, {"sha": "deaba1cf272fdec868b6717ab87f94e7195e26f4", "filename": "src/test/ui/proc-macro/two-crate-types-2.stderr", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Ftwo-crate-types-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c70af3891e63d2192b77211837507e0a6ddb5/src%2Ftest%2Fui%2Fproc-macro%2Ftwo-crate-types-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Ftwo-crate-types-2.stderr?ref=4c9c70af3891e63d2192b77211837507e0a6ddb5", "patch": "@@ -0,0 +1,4 @@\n+error: cannot mix `proc-macro` crate type with others\n+\n+error: aborting due to previous error\n+"}]}