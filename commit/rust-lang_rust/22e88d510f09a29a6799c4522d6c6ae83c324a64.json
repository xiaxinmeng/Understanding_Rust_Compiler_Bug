{"sha": "22e88d510f09a29a6799c4522d6c6ae83c324a64", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyZTg4ZDUxMGYwOWEyOWE2Nzk5YzQ1MjJkNmM2YWU4M2MzMjRhNjQ=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-02-14T20:59:15Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-02-14T20:59:15Z"}, "message": "stop zeroing all exchange allocations", "tree": {"sha": "de420b800080fec0380f038836f9e2abab795d20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de420b800080fec0380f038836f9e2abab795d20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22e88d510f09a29a6799c4522d6c6ae83c324a64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22e88d510f09a29a6799c4522d6c6ae83c324a64", "html_url": "https://github.com/rust-lang/rust/commit/22e88d510f09a29a6799c4522d6c6ae83c324a64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22e88d510f09a29a6799c4522d6c6ae83c324a64/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8f039a085c7d7622899b7a4d1bebfe2d7621165", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8f039a085c7d7622899b7a4d1bebfe2d7621165", "html_url": "https://github.com/rust-lang/rust/commit/a8f039a085c7d7622899b7a4d1bebfe2d7621165"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "f7fcf3bdd5ebc7fa3c76aafc4934026505b2b6cd", "filename": "src/libcore/private/exchange_alloc.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/22e88d510f09a29a6799c4522d6c6ae83c324a64/src%2Flibcore%2Fprivate%2Fexchange_alloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22e88d510f09a29a6799c4522d6c6ae83c324a64/src%2Flibcore%2Fprivate%2Fexchange_alloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprivate%2Fexchange_alloc.rs?ref=22e88d510f09a29a6799c4522d6c6ae83c324a64", "patch": "@@ -14,7 +14,7 @@ use c_malloc = libc::malloc;\n use c_free = libc::free;\n use managed::raw::{BoxHeaderRepr, BoxRepr};\n use cast::transmute;\n-use ptr::{set_memory, null};\n+use ptr::null;\n use intrinsic::TyDesc;\n \n pub unsafe fn malloc(td: *TypeDesc, size: uint) -> *c_void {\n@@ -25,10 +25,6 @@ pub unsafe fn malloc(td: *TypeDesc, size: uint) -> *c_void {\n         let p = c_malloc(total_size as size_t);\n         assert p.is_not_null();\n \n-        // FIXME #4761: Would be very nice to not memset all allocations\n-        let p: *mut u8 = transmute(p);\n-        set_memory(p, 0, total_size);\n-\n         // FIXME #3475: Converting between our two different tydesc types\n         let td: *TyDesc = transmute(td);\n "}]}