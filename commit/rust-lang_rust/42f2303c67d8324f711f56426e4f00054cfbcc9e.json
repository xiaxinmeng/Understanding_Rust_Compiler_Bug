{"sha": "42f2303c67d8324f711f56426e4f00054cfbcc9e", "node_id": "C_kwDOAAsO6NoAKDQyZjIzMDNjNjdkODMyNGY3MTFmNTY0MjZlNGYwMDA1NGNmYmNjOWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-16T23:19:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-16T23:19:35Z"}, "message": "Rollup merge of #107905 - clubby789:x-free-args, r=albertlarsan68\n\nPass arguments to `x` subcommands with `--`\n\nFixes #107375\n\nAny arguments passed to `x` following `--` are removed and not parsed, instead passed down to subcommands (just the ones listed in the issue, not sure if more are needed). This does not remove the existing `--args` and `--test-args` behaviour, just extends it. It's also not documented in the help, not sure of the best way to format it.\n\nr? `@jyn514`", "tree": {"sha": "50074b335f3e5cf284c2f930e65c0734cdd96537", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50074b335f3e5cf284c2f930e65c0734cdd96537"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42f2303c67d8324f711f56426e4f00054cfbcc9e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj7roHCRBK7hj4Ov3rIwAAnPcIAK/MC4bu3qhJF5JHdHrHEtWa\nCvV3eEm7aJ+WRRsDKYGArGGTtKhZw3EsYuimcy7yzWObkCf5XVsIi+38RxQl2jA0\n70MkRUJ/lZv3emL342tVPqzVeIzmingpCEmHV9NLx6MmU5rJ+8ULIn9+W/6+gwfq\nDcXY2/m+JZEvqmxxaaKNVzs4os7eImINAaePMg/+dKjCuO0PmfD+WXhzKx3cd49m\nkaWtqJGtTsyWjbob3915fdKoH04VQj1NFUTEUwJ8jrGZSEzXT5YCCnZRkA/Eg5Kv\ni0wZzxaN6MQAboMoowbGdomGRqETwzsg3sGKwGJBOJrsdaLcouegs7F+POh94aE=\n=1dD4\n-----END PGP SIGNATURE-----\n", "payload": "tree 50074b335f3e5cf284c2f930e65c0734cdd96537\nparent 089e8c03bcd69e559c6c1d03051ca3b7a81ac688\nparent 8bd79fda87af6aa16b08b67c61a6db58f1e519ad\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1676589575 +0100\ncommitter GitHub <noreply@github.com> 1676589575 +0100\n\nRollup merge of #107905 - clubby789:x-free-args, r=albertlarsan68\n\nPass arguments to `x` subcommands with `--`\n\nFixes #107375\n\nAny arguments passed to `x` following `--` are removed and not parsed, instead passed down to subcommands (just the ones listed in the issue, not sure if more are needed). This does not remove the existing `--args` and `--test-args` behaviour, just extends it. It's also not documented in the help, not sure of the best way to format it.\n\nr? `@jyn514`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42f2303c67d8324f711f56426e4f00054cfbcc9e", "html_url": "https://github.com/rust-lang/rust/commit/42f2303c67d8324f711f56426e4f00054cfbcc9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42f2303c67d8324f711f56426e4f00054cfbcc9e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "089e8c03bcd69e559c6c1d03051ca3b7a81ac688", "url": "https://api.github.com/repos/rust-lang/rust/commits/089e8c03bcd69e559c6c1d03051ca3b7a81ac688", "html_url": "https://github.com/rust-lang/rust/commit/089e8c03bcd69e559c6c1d03051ca3b7a81ac688"}, {"sha": "8bd79fda87af6aa16b08b67c61a6db58f1e519ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bd79fda87af6aa16b08b67c61a6db58f1e519ad", "html_url": "https://github.com/rust-lang/rust/commit/8bd79fda87af6aa16b08b67c61a6db58f1e519ad"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "ff7821fb9ff0851c19690a53f3ee1f052ecf4d77", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/42f2303c67d8324f711f56426e4f00054cfbcc9e/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42f2303c67d8324f711f56426e4f00054cfbcc9e/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=42f2303c67d8324f711f56426e4f00054cfbcc9e", "patch": "@@ -58,9 +58,10 @@ fn args(builder: &Builder<'_>) -> Vec<String> {\n         clippy_lint_warn.iter().for_each(|v| clippy_lint_levels.push(format!(\"-W{}\", v)));\n         clippy_lint_forbid.iter().for_each(|v| clippy_lint_levels.push(format!(\"-F{}\", v)));\n         args.extend(clippy_lint_levels);\n+        args.extend(builder.config.free_args.clone());\n         args\n     } else {\n-        vec![]\n+        builder.config.free_args.clone()\n     }\n }\n "}, {"sha": "cd027a4abb7faec04f2628af9474c53e814e265e", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/42f2303c67d8324f711f56426e4f00054cfbcc9e/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42f2303c67d8324f711f56426e4f00054cfbcc9e/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=42f2303c67d8324f711f56426e4f00054cfbcc9e", "patch": "@@ -97,6 +97,10 @@ pub struct Config {\n     pub cmd: Subcommand,\n     pub incremental: bool,\n     pub dry_run: DryRun,\n+    /// Arguments appearing after `--` to be forwarded to tools,\n+    /// e.g. `--fix-broken` or test arguments.\n+    pub free_args: Vec<String>,\n+\n     /// `None` if we shouldn't download CI compiler artifacts, or the commit to download if we should.\n     #[cfg(not(test))]\n     download_rustc_commit: Option<String>,\n@@ -866,6 +870,7 @@ impl Config {\n         config.keep_stage = flags.keep_stage;\n         config.keep_stage_std = flags.keep_stage_std;\n         config.color = flags.color;\n+        config.free_args = flags.free_args.clone().unwrap_or_default();\n         if let Some(value) = flags.deny_warnings {\n             config.deny_warnings = value;\n         }"}, {"sha": "f07e710a9e6b76fe8bcd6563ecccb74bf60fe3dd", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/42f2303c67d8324f711f56426e4f00054cfbcc9e/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42f2303c67d8324f711f56426e4f00054cfbcc9e/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=42f2303c67d8324f711f56426e4f00054cfbcc9e", "patch": "@@ -80,6 +80,10 @@ pub struct Flags {\n     pub llvm_profile_generate: bool,\n     pub llvm_bolt_profile_generate: bool,\n     pub llvm_bolt_profile_use: Option<String>,\n+\n+    /// Arguments appearing after `--` to be forwarded to tools,\n+    /// e.g. `--fix-broken` or test arguments.\n+    pub free_args: Option<Vec<String>>,\n }\n \n #[derive(Debug)]\n@@ -157,6 +161,12 @@ impl Default for Subcommand {\n \n impl Flags {\n     pub fn parse(args: &[String]) -> Flags {\n+        let (args, free_args) = if let Some(pos) = args.iter().position(|s| s == \"--\") {\n+            let (args, free) = args.split_at(pos);\n+            (args, Some(free[1..].to_vec()))\n+        } else {\n+            (args, None)\n+        };\n         let mut subcommand_help = String::from(\n             \"\\\n Usage: x.py <subcommand> [options] [<paths>...]\n@@ -709,6 +719,7 @@ Arguments:\n             llvm_profile_generate: matches.opt_present(\"llvm-profile-generate\"),\n             llvm_bolt_profile_generate: matches.opt_present(\"llvm-bolt-profile-generate\"),\n             llvm_bolt_profile_use: matches.opt_str(\"llvm-bolt-profile-use\"),\n+            free_args,\n         }\n     }\n }"}, {"sha": "e14440f57a8a6a3fa531d36f406e264529a7b8a7", "filename": "src/bootstrap/run.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42f2303c67d8324f711f56426e4f00054cfbcc9e/src%2Fbootstrap%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42f2303c67d8324f711f56426e4f00054cfbcc9e/src%2Fbootstrap%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Frun.rs?ref=42f2303c67d8324f711f56426e4f00054cfbcc9e", "patch": "@@ -183,6 +183,7 @@ impl Step for Miri {\n         // Forward arguments.\n         miri.arg(\"--\").arg(\"--target\").arg(target.rustc_target_arg());\n         miri.args(builder.config.cmd.args());\n+        miri.args(&builder.config.free_args);\n \n         // miri tests need to know about the stage sysroot\n         miri.env(\"MIRI_SYSROOT\", &miri_sysroot);"}, {"sha": "9cd6107b43ac3a67aede2e05be0259e9943aed12", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42f2303c67d8324f711f56426e4f00054cfbcc9e/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42f2303c67d8324f711f56426e4f00054cfbcc9e/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=42f2303c67d8324f711f56426e4f00054cfbcc9e", "patch": "@@ -1588,6 +1588,7 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n             .collect();\n \n         test_args.append(&mut builder.config.cmd.test_args());\n+        test_args.extend(builder.config.free_args.iter().map(|s| s.as_str()));\n \n         // On Windows, replace forward slashes in test-args by backslashes\n         // so the correct filters are passed to libtest"}]}