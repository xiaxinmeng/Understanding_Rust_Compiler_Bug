{"sha": "e1549786ff6105af4f3e9be30496c812b7ca71b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxNTQ5Nzg2ZmY2MTA1YWY0ZjNlOWJlMzA0OTZjODEyYjdjYTcxYjM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-06-18T22:20:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-18T22:20:47Z"}, "message": "Rollup merge of #72836 - poliorcetics:std-time-os-specificities, r=shepmaster\n\nComplete the std::time documentation to warn about the inconsistencies between OS\n\nFixes #48980.\n\nI put the new documentation in `src/libstd/time.rs` at the module-level because it affects all types, even the one that are not directly system dependents if they are used with affected types, but there may be a better place for it.", "tree": {"sha": "44b16f8b8c7fdc44aa149fb0598311953da05941", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44b16f8b8c7fdc44aa149fb0598311953da05941"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1549786ff6105af4f3e9be30496c812b7ca71b3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe6+i/CRBK7hj4Ov3rIwAAdHIIAJ3ZFsfgwvAVs7nveD7fQ07b\ntXIOvuBtAkcynfamQhjQ1gZdO+qE9PB/xX4EPSWESS48dsPPxG+zI7BaOXIoAk9D\nWmMRORVcjctjPW2s1Q+9YbtlbuUXICVQmbRL0HSzUav2JqWy4fqOa1kLIqu2daoq\n0LYgix+Qzx158F6olyGDhCLODdSDQSYk+zV7Oocw9BhMHCGQBv/hHInh17X82ZjP\nTz7NjDO1S7wV+09DWvVP7dZv4JO+1uT682Vw8jZF0R15fxNeU6LnS1b5PqgaTSK8\nv5E+ibIO2YMKeo0QIofWPiS0h0fyys2R4asn9aoCFIm5N5PajXL56zL3bZeI2hs=\n=3Lp2\n-----END PGP SIGNATURE-----\n", "payload": "tree 44b16f8b8c7fdc44aa149fb0598311953da05941\nparent e0b59b2c07adec376b7c57fb3d81726b6bc2822d\nparent 9e510085ecaedaee86b44410a4b3e4c85d97d6e0\nauthor Manish Goregaokar <manishsmail@gmail.com> 1592518847 -0700\ncommitter GitHub <noreply@github.com> 1592518847 -0700\n\nRollup merge of #72836 - poliorcetics:std-time-os-specificities, r=shepmaster\n\nComplete the std::time documentation to warn about the inconsistencies between OS\n\nFixes #48980.\n\nI put the new documentation in `src/libstd/time.rs` at the module-level because it affects all types, even the one that are not directly system dependents if they are used with affected types, but there may be a better place for it.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1549786ff6105af4f3e9be30496c812b7ca71b3", "html_url": "https://github.com/rust-lang/rust/commit/e1549786ff6105af4f3e9be30496c812b7ca71b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1549786ff6105af4f3e9be30496c812b7ca71b3/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0b59b2c07adec376b7c57fb3d81726b6bc2822d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0b59b2c07adec376b7c57fb3d81726b6bc2822d", "html_url": "https://github.com/rust-lang/rust/commit/e0b59b2c07adec376b7c57fb3d81726b6bc2822d"}, {"sha": "9e510085ecaedaee86b44410a4b3e4c85d97d6e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e510085ecaedaee86b44410a4b3e4c85d97d6e0", "html_url": "https://github.com/rust-lang/rust/commit/9e510085ecaedaee86b44410a4b3e4c85d97d6e0"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "295ebcbb7293970ecea26835a407a13a64eeb217", "filename": "src/libstd/time.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e1549786ff6105af4f3e9be30496c812b7ca71b3/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1549786ff6105af4f3e9be30496c812b7ca71b3/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=e1549786ff6105af4f3e9be30496c812b7ca71b3", "patch": "@@ -60,6 +60,21 @@ pub use core::time::Duration;\n /// }\n /// ```\n ///\n+/// # OS-specific behaviors\n+///\n+/// An `Instant` is a wrapper around system-specific types and it may behave\n+/// differently depending on the underlying operating system. For example,\n+/// the following snippet is fine on Linux but panics on macOS:\n+///\n+/// ```no_run\n+/// use std::time::{Instant, Duration};\n+///\n+/// let now = Instant::now();\n+/// let max_nanoseconds = u64::MAX / 1_000_000_000;\n+/// let duration = Duration::new(max_nanoseconds, 0);\n+/// println!(\"{:?}\", now + duration);\n+/// ```\n+///\n /// # Underlying System calls\n /// Currently, the following system calls are being used to get the current time using `now()`:\n ///"}]}