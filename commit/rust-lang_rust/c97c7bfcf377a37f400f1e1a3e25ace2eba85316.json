{"sha": "c97c7bfcf377a37f400f1e1a3e25ace2eba85316", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5N2M3YmZjZjM3N2EzN2Y0MDBmMWUxYTNlMjVhY2UyZWJhODUzMTY=", "commit": {"author": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-03-06T05:01:30Z"}, "committer": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-03-06T05:01:30Z"}, "message": "Add info message for -Wall command\n\nUsers coming from other languages (namely C and C++) often expect\nto use a -Wall flag. Rustc doesn't support that, and previously it\nsimply printed that it didn't recognize the \"all\" lint.\n\nThis change makes rustc print out a help message, explaining:\n- Why there is no -Wall flag\n- How to view all the available warnings\n- Point out that the most commonly used warning is -Wunused\n- Instead of using a command-line flag, the user should consider\n  a !#[warn(unused)] directive in the root of their crate.", "tree": {"sha": "4906706133df5070af545a8a1bf443a6f7102790", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4906706133df5070af545a8a1bf443a6f7102790"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c97c7bfcf377a37f400f1e1a3e25ace2eba85316", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c97c7bfcf377a37f400f1e1a3e25ace2eba85316", "html_url": "https://github.com/rust-lang/rust/commit/c97c7bfcf377a37f400f1e1a3e25ace2eba85316", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c97c7bfcf377a37f400f1e1a3e25ace2eba85316/comments", "author": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9334404f06a188854af33835a0efe1e834e4ac4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9334404f06a188854af33835a0efe1e834e4ac4", "html_url": "https://github.com/rust-lang/rust/commit/c9334404f06a188854af33835a0efe1e834e4ac4"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "b9b36616e69f677dbf7c01aabd510492eaf3ccfd", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c97c7bfcf377a37f400f1e1a3e25ace2eba85316/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c97c7bfcf377a37f400f1e1a3e25ace2eba85316/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=c97c7bfcf377a37f400f1e1a3e25ace2eba85316", "patch": "@@ -1136,6 +1136,16 @@ fn usage(verbose: bool, include_unstable_options: bool) {\n              verbose_help);\n }\n \n+fn print_wall_help() {\n+    println!(\"\n+The flag -Wall does not exist in rustc. Most useful lints are enabled by default.\n+Use `rustc -W help` to see all available lints. The most used lints that are not\n+enabled by default covered by -Wunused; however, the best practice is to put\n+warning settings in the crate root using `#![warn(unused)]` instead of using\n+the command line flag directly.\n+\");\n+}\n+\n fn describe_lints(sess: &Session, lint_store: &lint::LintStore, loaded_plugins: bool) {\n     println!(\"\n Available lint options:\n@@ -1379,6 +1389,13 @@ pub fn handle_options(args: &[String]) -> Option<getopts::Matches> {\n               nightly_options::is_unstable_enabled(&matches));\n         return None;\n     }\n+    \n+    // Handle the special case of -Wall.\n+    let wall = matches.opt_strs(\"W\");\n+    if wall.iter().any(|x| *x == \"all\") {\n+        print_wall_help();\n+        return None;\n+    }\n \n     // Don't handle -W help here, because we might first load plugins.\n     let r = matches.opt_strs(\"Z\");"}]}