{"sha": "bbdeafc13c2387c62c14c6b8214709331e61dca9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZGVhZmMxM2MyMzg3YzYyYzE0YzZiODIxNDcwOTMzMWU2MWRjYTk=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-04-01T20:22:12Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-04-10T16:55:21Z"}, "message": "clarify what the item is in \"not a module\" error", "tree": {"sha": "1d19c3ba8a6567a2c3ffeadf75f89940c37481b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d19c3ba8a6567a2c3ffeadf75f89940c37481b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbdeafc13c2387c62c14c6b8214709331e61dca9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlyuIA4WHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdIfhB/0T3rjlVe350BJwAP5AuoJ/RSS/\nc37ljvne+x3s/Ec9J5GcTv8n3crZsLKEzbNMk55xAVEyVtgdolAOZhMXuADb/TmK\n76fs/QneWHde6dY6qBmk0l2tTTVD5xu2GIQknE1mn2+cO90iFj29AvjQGb1R+BZF\nZcnx3Ut7gHOwNFESQWRsrSf+Pd2dj94WjCIUqW3ANnRF3QTquvPd5HwszwUraw2O\nCDMCA1RW+xGIfJ8F3qekAfe8YSA2JG+k2h0N4mtGK9fSw2agXnL+Cn+PbniWTJEg\nsCi+9qE/BcjtdmoorCqso42XLhqQCks1jvbF1ZAAcZ8SYfCisaJtbcmTdRZh\n=xayA\n-----END PGP SIGNATURE-----", "payload": "tree 1d19c3ba8a6567a2c3ffeadf75f89940c37481b0\nparent 3750348daff89741e3153e0e120aa70a45ff5b68\nauthor Andy Russell <arussell123@gmail.com> 1554150132 -0400\ncommitter Andy Russell <arussell123@gmail.com> 1554915321 -0400\n\nclarify what the item is in \"not a module\" error\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbdeafc13c2387c62c14c6b8214709331e61dca9", "html_url": "https://github.com/rust-lang/rust/commit/bbdeafc13c2387c62c14c6b8214709331e61dca9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbdeafc13c2387c62c14c6b8214709331e61dca9/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3750348daff89741e3153e0e120aa70a45ff5b68", "url": "https://api.github.com/repos/rust-lang/rust/commits/3750348daff89741e3153e0e120aa70a45ff5b68", "html_url": "https://github.com/rust-lang/rust/commit/3750348daff89741e3153e0e120aa70a45ff5b68"}], "stats": {"total": 121, "additions": 70, "deletions": 51}, "files": [{"sha": "ffc783ae9f235dd56eee44cadce2cbb94b4e5362", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=bbdeafc13c2387c62c14c6b8214709331e61dca9", "patch": "@@ -3731,9 +3731,16 @@ impl<'a> Resolver<'a> {\n                             def, path.len() - i - 1\n                         ));\n                     } else {\n+                        let label = format!(\n+                            \"`{}` is {} {}, not a module\",\n+                            ident,\n+                            def.article(),\n+                            def.kind_name(),\n+                        );\n+\n                         return PathResult::Failed {\n                             span: ident.span,\n-                            label: format!(\"not a module `{}`\", ident),\n+                            label,\n                             suggestion: None,\n                             is_error_from_last_segment: is_last,\n                         };"}, {"sha": "d8d4ca608f1c07f1d8b869f78f629168c7367bda", "filename": "src/test/ui/issues/issue-30560.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fissues%2Fissue-30560.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fissues%2Fissue-30560.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30560.rs?ref=bbdeafc13c2387c62c14c6b8214709331e61dca9", "patch": "@@ -1,10 +1,7 @@\n type Alias = ();\n-use Alias::*;\n-//~^ ERROR unresolved import `Alias` [E0432]\n-//~| not a module `Alias`\n-use std::io::Result::*;\n-//~^ ERROR unresolved import `std::io::Result` [E0432]\n-//~| not a module `Result`\n+use Alias::*; //~ ERROR unresolved import `Alias` [E0432]\n+\n+use std::io::Result::*; //~ ERROR unresolved import `std::io::Result` [E0432]\n \n trait T {}\n use T::*; //~ ERROR items in traits are not importable"}, {"sha": "b74134aaccc0d8fa13873d5c40cb2e30ff76e4bd", "filename": "src/test/ui/issues/issue-30560.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fissues%2Fissue-30560.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fissues%2Fissue-30560.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30560.stderr?ref=bbdeafc13c2387c62c14c6b8214709331e61dca9", "patch": "@@ -1,5 +1,5 @@\n error: items in traits are not importable.\n-  --> $DIR/issue-30560.rs:10:5\n+  --> $DIR/issue-30560.rs:7:5\n    |\n LL | use T::*;\n    |     ^^^^\n@@ -8,13 +8,13 @@ error[E0432]: unresolved import `Alias`\n   --> $DIR/issue-30560.rs:2:5\n    |\n LL | use Alias::*;\n-   |     ^^^^^ not a module `Alias`\n+   |     ^^^^^ `Alias` is a type alias, not a module\n \n error[E0432]: unresolved import `std::io::Result`\n-  --> $DIR/issue-30560.rs:5:14\n+  --> $DIR/issue-30560.rs:4:14\n    |\n LL | use std::io::Result::*;\n-   |              ^^^^^^ not a module `Result`\n+   |              ^^^^^^ `Result` is a type alias, not a module\n \n error: aborting due to 3 previous errors\n "}, {"sha": "cd695ca916ea9aac354b35a6533fab14d6afe31c", "filename": "src/test/ui/macros/macro-path-prelude-fail-1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-1.rs?ref=bbdeafc13c2387c62c14c6b8214709331e61dca9", "patch": "@@ -2,8 +2,8 @@\n \n mod m {\n     fn check() {\n-        Vec::clone!(); //~ ERROR failed to resolve: not a module `Vec`\n-        u8::clone!(); //~ ERROR failed to resolve: not a module `u8`\n+        Vec::clone!(); //~ ERROR failed to resolve: `Vec` is a struct, not a module\n+        u8::clone!(); //~ ERROR failed to resolve: `u8` is a builtin type, not a module\n     }\n }\n "}, {"sha": "b68e89f07f67600c91c5fadd0f74ff15379277ef", "filename": "src/test/ui/macros/macro-path-prelude-fail-1.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-1.stderr?ref=bbdeafc13c2387c62c14c6b8214709331e61dca9", "patch": "@@ -1,14 +1,14 @@\n-error[E0433]: failed to resolve: not a module `Vec`\n+error[E0433]: failed to resolve: `Vec` is a struct, not a module\n   --> $DIR/macro-path-prelude-fail-1.rs:5:9\n    |\n LL |         Vec::clone!();\n-   |         ^^^ not a module `Vec`\n+   |         ^^^ `Vec` is a struct, not a module\n \n-error[E0433]: failed to resolve: not a module `u8`\n+error[E0433]: failed to resolve: `u8` is a builtin type, not a module\n   --> $DIR/macro-path-prelude-fail-1.rs:6:9\n    |\n LL |         u8::clone!();\n-   |         ^^ not a module `u8`\n+   |         ^^ `u8` is a builtin type, not a module\n \n error: aborting due to 2 previous errors\n "}, {"sha": "db4fedfb0bdf866b643c8c3897878ebfb8eae7a1", "filename": "src/test/ui/resolve/resolve-variant-assoc-item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fresolve%2Fresolve-variant-assoc-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fresolve%2Fresolve-variant-assoc-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-variant-assoc-item.rs?ref=bbdeafc13c2387c62c14c6b8214709331e61dca9", "patch": "@@ -2,6 +2,6 @@ enum E { V }\n use E::V;\n \n fn main() {\n-    E::V::associated_item; //~ ERROR failed to resolve: not a module `V`\n-    V::associated_item; //~ ERROR failed to resolve: not a module `V`\n+    E::V::associated_item; //~ ERROR failed to resolve: `V` is a variant, not a module\n+    V::associated_item; //~ ERROR failed to resolve: `V` is a variant, not a module\n }"}, {"sha": "4be1019968bcc7c7b20192bfe24a6e3ec231bc34", "filename": "src/test/ui/resolve/resolve-variant-assoc-item.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fresolve%2Fresolve-variant-assoc-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fresolve%2Fresolve-variant-assoc-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-variant-assoc-item.stderr?ref=bbdeafc13c2387c62c14c6b8214709331e61dca9", "patch": "@@ -1,14 +1,14 @@\n-error[E0433]: failed to resolve: not a module `V`\n+error[E0433]: failed to resolve: `V` is a variant, not a module\n   --> $DIR/resolve-variant-assoc-item.rs:5:8\n    |\n LL |     E::V::associated_item;\n-   |        ^ not a module `V`\n+   |        ^ `V` is a variant, not a module\n \n-error[E0433]: failed to resolve: not a module `V`\n+error[E0433]: failed to resolve: `V` is a variant, not a module\n   --> $DIR/resolve-variant-assoc-item.rs:6:5\n    |\n LL |     V::associated_item;\n-   |     ^ not a module `V`\n+   |     ^ `V` is a variant, not a module\n \n error: aborting due to 2 previous errors\n "}, {"sha": "42daf7c6fb12ffae7a22c38b77fc6c6abb5afbeb", "filename": "src/test/ui/rust-2018/uniform-paths/prelude-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fprelude-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fprelude-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fprelude-fail.stderr?ref=bbdeafc13c2387c62c14c6b8214709331e61dca9", "patch": "@@ -8,7 +8,7 @@ error[E0432]: unresolved import `rustfmt`\n   --> $DIR/prelude-fail.rs:7:5\n    |\n LL | use rustfmt::skip as imported_rustfmt_skip;\n-   |     ^^^^^^^ not a module `rustfmt`\n+   |     ^^^^^^^ `rustfmt` is a tool module, not a module\n \n error: aborting due to 2 previous errors\n "}, {"sha": "82a593ff16cfa165f87018dcf7dc2174b72a8eb4", "filename": "src/test/ui/ufcs/ufcs-partially-resolved.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fufcs%2Fufcs-partially-resolved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fufcs%2Fufcs-partially-resolved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fufcs%2Fufcs-partially-resolved.rs?ref=bbdeafc13c2387c62c14c6b8214709331e61dca9", "patch": "@@ -45,9 +45,9 @@ fn main() {\n     <u8 as E::N>::NN; //~ ERROR cannot find method or associated constant `NN` in `E::N`\n     <u8 as A::N>::NN; //~ ERROR cannot find method or associated constant `NN` in `A::N`\n     let _: <u8 as Tr::Y>::NN; //~ ERROR cannot find associated type `NN` in `Tr::Y`\n-    let _: <u8 as E::Y>::NN; //~ ERROR failed to resolve: not a module `Y`\n+    let _: <u8 as E::Y>::NN; //~ ERROR failed to resolve: `Y` is a variant, not a module\n     <u8 as Tr::Y>::NN; //~ ERROR cannot find method or associated constant `NN` in `Tr::Y`\n-    <u8 as E::Y>::NN; //~ ERROR failed to resolve: not a module `Y`\n+    <u8 as E::Y>::NN; //~ ERROR failed to resolve: `Y` is a variant, not a module\n \n     let _: <u8 as Dr>::Z; //~ ERROR expected associated type, found method `Dr::Z`\n     <u8 as Dr>::X; //~ ERROR expected method or associated constant, found associated type `Dr::X`"}, {"sha": "c399a32bc56b86d5235076b14ce0bbe4119c4666", "filename": "src/test/ui/ufcs/ufcs-partially-resolved.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fufcs%2Fufcs-partially-resolved.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fufcs%2Fufcs-partially-resolved.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fufcs%2Fufcs-partially-resolved.stderr?ref=bbdeafc13c2387c62c14c6b8214709331e61dca9", "patch": "@@ -1,14 +1,14 @@\n-error[E0433]: failed to resolve: not a module `Y`\n+error[E0433]: failed to resolve: `Y` is a variant, not a module\n   --> $DIR/ufcs-partially-resolved.rs:48:22\n    |\n LL |     let _: <u8 as E::Y>::NN;\n-   |                      ^ not a module `Y`\n+   |                      ^ `Y` is a variant, not a module\n \n-error[E0433]: failed to resolve: not a module `Y`\n+error[E0433]: failed to resolve: `Y` is a variant, not a module\n   --> $DIR/ufcs-partially-resolved.rs:50:15\n    |\n LL |     <u8 as E::Y>::NN;\n-   |               ^ not a module `Y`\n+   |               ^ `Y` is a variant, not a module\n \n error[E0576]: cannot find associated type `N` in trait `Tr`\n   --> $DIR/ufcs-partially-resolved.rs:19:24"}, {"sha": "714fbdabb81ce00cbb4c23c8d1852995e101dd62", "filename": "src/test/ui/use/use-associated-const.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fuse%2Fuse-associated-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fuse%2Fuse-associated-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-associated-const.rs?ref=bbdeafc13c2387c62c14c6b8214709331e61dca9", "patch": "@@ -0,0 +1,13 @@\n+#![allow(unused_imports)]\n+\n+pub mod foo {\n+    pub struct Foo;\n+\n+    impl Foo {\n+        pub const BAR: i32 = 0;\n+    }\n+}\n+\n+use foo::Foo::BAR; //~ ERROR unresolved import `foo::Foo`\n+\n+fn main() {}"}, {"sha": "4bc0d7e61cb2c3d4bc2013e644621fe0a727e7be", "filename": "src/test/ui/use/use-associated-const.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fuse%2Fuse-associated-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fuse%2Fuse-associated-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-associated-const.stderr?ref=bbdeafc13c2387c62c14c6b8214709331e61dca9", "patch": "@@ -0,0 +1,9 @@\n+error[E0432]: unresolved import `foo::Foo`\n+  --> $DIR/use-associated-const.rs:11:10\n+   |\n+LL | use foo::Foo::BAR;\n+   |          ^^^ `Foo` is a struct, not a module\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0432`."}, {"sha": "faa4829bfdd6238ac6e28b63d5bc404b5502e706", "filename": "src/test/ui/use/use-from-trait-xc.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait-xc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait-xc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait-xc.stderr?ref=bbdeafc13c2387c62c14c6b8214709331e61dca9", "patch": "@@ -20,19 +20,19 @@ error[E0432]: unresolved import `use_from_trait_xc::Foo`\n   --> $DIR/use-from-trait-xc.rs:14:24\n    |\n LL | use use_from_trait_xc::Foo::new;\n-   |                        ^^^ not a module `Foo`\n+   |                        ^^^ `Foo` is a struct, not a module\n \n error[E0432]: unresolved import `use_from_trait_xc::Foo`\n   --> $DIR/use-from-trait-xc.rs:17:24\n    |\n LL | use use_from_trait_xc::Foo::C;\n-   |                        ^^^ not a module `Foo`\n+   |                        ^^^ `Foo` is a struct, not a module\n \n error[E0432]: unresolved import `use_from_trait_xc::Bar`\n   --> $DIR/use-from-trait-xc.rs:20:24\n    |\n LL | use use_from_trait_xc::Bar::new as bnew;\n-   |                        ^^^ not a module `Bar`\n+   |                        ^^^ `Bar` is a struct, not a module\n \n error[E0432]: unresolved import `use_from_trait_xc::Baz::new`\n   --> $DIR/use-from-trait-xc.rs:23:5"}, {"sha": "eab4bb6e3b5bee6b57066c213a1589cc593ca6aa", "filename": "src/test/ui/use/use-from-trait.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait.rs?ref=bbdeafc13c2387c62c14c6b8214709331e61dca9", "patch": "@@ -1,17 +1,10 @@\n-use Trait::foo;\n-//~^ ERROR `foo` is not directly importable\n-use Trait::Assoc;\n-//~^ ERROR `Assoc` is not directly importable\n-use Trait::C;\n-//~^ ERROR `C` is not directly importable\n+use Trait::foo; //~ ERROR `foo` is not directly importable\n+use Trait::Assoc; //~ ERROR `Assoc` is not directly importable\n+use Trait::C; //~ ERROR `C` is not directly importable\n \n-use Foo::new;\n-//~^ ERROR unresolved import `Foo` [E0432]\n-//~| not a module `Foo`\n+use Foo::new; //~ ERROR unresolved import `Foo` [E0432]\n \n-use Foo::C2;\n-//~^ ERROR unresolved import `Foo` [E0432]\n-//~| not a module `Foo`\n+use Foo::C2; //~ ERROR unresolved import `Foo` [E0432]\n \n pub trait Trait {\n     fn foo();"}, {"sha": "af4b3b0c455e152977e8e9979d3e328628c8db66", "filename": "src/test/ui/use/use-from-trait.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbdeafc13c2387c62c14c6b8214709331e61dca9/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait.stderr?ref=bbdeafc13c2387c62c14c6b8214709331e61dca9", "patch": "@@ -5,28 +5,28 @@ LL | use Trait::foo;\n    |     ^^^^^^^^^^ cannot be imported directly\n \n error[E0253]: `Assoc` is not directly importable\n-  --> $DIR/use-from-trait.rs:3:5\n+  --> $DIR/use-from-trait.rs:2:5\n    |\n LL | use Trait::Assoc;\n    |     ^^^^^^^^^^^^ cannot be imported directly\n \n error[E0253]: `C` is not directly importable\n-  --> $DIR/use-from-trait.rs:5:5\n+  --> $DIR/use-from-trait.rs:3:5\n    |\n LL | use Trait::C;\n    |     ^^^^^^^^ cannot be imported directly\n \n error[E0432]: unresolved import `Foo`\n-  --> $DIR/use-from-trait.rs:8:5\n+  --> $DIR/use-from-trait.rs:5:5\n    |\n LL | use Foo::new;\n-   |     ^^^ not a module `Foo`\n+   |     ^^^ `Foo` is a struct, not a module\n \n error[E0432]: unresolved import `Foo`\n-  --> $DIR/use-from-trait.rs:12:5\n+  --> $DIR/use-from-trait.rs:7:5\n    |\n LL | use Foo::C2;\n-   |     ^^^ not a module `Foo`\n+   |     ^^^ `Foo` is a struct, not a module\n \n error: aborting due to 5 previous errors\n "}]}