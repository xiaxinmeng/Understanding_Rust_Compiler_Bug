{"sha": "3e0995a440e66c01383d78c6adcb1cd9c1ae3a46", "node_id": "C_kwDOAAsO6NoAKDNlMDk5NWE0NDBlNjZjMDEzODNkNzhjNmFkY2IxY2Q5YzFhZTNhNDY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-02T16:14:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-02T16:14:07Z"}, "message": "Rollup merge of #107532 - compiler-errors:erase-regions-in-uninhabited, r=jackh726\n\nErase regions before doing uninhabited check in borrowck\n\n~Also, fingerprint query keys/values when debug assertions are enabled. This should make it easier to check for issues like this without `-Cincremental`, and make UI tests a bit cleaner.~ edit: moving that to a separate PR\n\nFixes #107505", "tree": {"sha": "5047eb3f0025e666f973dc0224a139c17770c15d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5047eb3f0025e666f973dc0224a139c17770c15d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e0995a440e66c01383d78c6adcb1cd9c1ae3a46", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj2+FPCRBK7hj4Ov3rIwAAfdwIAHWucfDi1/O/kjw9rEHa09KQ\nXernBkdmO5xaXeuNRR3GM4/KuzQkATyRr1MdbYc1IM7MPJOr8LdFEhtGpL7MnHIm\nZMf2DWGdc8jbpQN+Kg+PW1XPWGrsRAmiC1rt7JHrsxHQHez2IAyygZ3K2M5WpdnE\nTC/SODqEvPW8LXy+uG6aQwHjfuMXY0uo3xvtS1C/P3YVYbZS5szjtWYX++aSXf92\nlntc0z8KbnB68EM6JfBfMVhSPRZ9pBO2I+CD/EETbB8yJXClridw8P83Rid0hERT\nR/kwKD7zHQHGFZMiBJS4LExcWhKqBy+gDrEhAIb9huC/JK0xAZYwswCV+ruVF1w=\n=GH23\n-----END PGP SIGNATURE-----\n", "payload": "tree 5047eb3f0025e666f973dc0224a139c17770c15d\nparent 6917040cf095f6d116b82184aa005f3eb02c482c\nparent 2c23c7f0cd7a665bbd7b173ebfc26cae223304e3\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1675354447 +0100\ncommitter GitHub <noreply@github.com> 1675354447 +0100\n\nRollup merge of #107532 - compiler-errors:erase-regions-in-uninhabited, r=jackh726\n\nErase regions before doing uninhabited check in borrowck\n\n~Also, fingerprint query keys/values when debug assertions are enabled. This should make it easier to check for issues like this without `-Cincremental`, and make UI tests a bit cleaner.~ edit: moving that to a separate PR\n\nFixes #107505\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e0995a440e66c01383d78c6adcb1cd9c1ae3a46", "html_url": "https://github.com/rust-lang/rust/commit/3e0995a440e66c01383d78c6adcb1cd9c1ae3a46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e0995a440e66c01383d78c6adcb1cd9c1ae3a46/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6917040cf095f6d116b82184aa005f3eb02c482c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6917040cf095f6d116b82184aa005f3eb02c482c", "html_url": "https://github.com/rust-lang/rust/commit/6917040cf095f6d116b82184aa005f3eb02c482c"}, {"sha": "2c23c7f0cd7a665bbd7b173ebfc26cae223304e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c23c7f0cd7a665bbd7b173ebfc26cae223304e3", "html_url": "https://github.com/rust-lang/rust/commit/2c23c7f0cd7a665bbd7b173ebfc26cae223304e3"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "6c67e1a00c35c38a8b119cb6c9ceec5715b3bae6", "filename": "compiler/rustc_borrowck/src/type_check/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3e0995a440e66c01383d78c6adcb1cd9c1ae3a46/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e0995a440e66c01383d78c6adcb1cd9c1ae3a46/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs?ref=3e0995a440e66c01383d78c6adcb1cd9c1ae3a46", "patch": "@@ -1484,7 +1484,10 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n                 }\n             }\n             None => {\n-                if !sig.output().is_privately_uninhabited(self.tcx(), self.param_env) {\n+                // The signature in this call can reference region variables,\n+                // so erase them before calling a query.\n+                let output_ty = self.tcx().erase_regions(sig.output());\n+                if !output_ty.is_privately_uninhabited(self.tcx(), self.param_env) {\n                     span_mirbug!(self, term, \"call to converging function {:?} w/o dest\", sig);\n                 }\n             }"}, {"sha": "61598541ddf0d51108368bd5a55972e194eb55d3", "filename": "tests/ui/uninhabited/issue-107505.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3e0995a440e66c01383d78c6adcb1cd9c1ae3a46/tests%2Fui%2Funinhabited%2Fissue-107505.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e0995a440e66c01383d78c6adcb1cd9c1ae3a46/tests%2Fui%2Funinhabited%2Fissue-107505.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinhabited%2Fissue-107505.rs?ref=3e0995a440e66c01383d78c6adcb1cd9c1ae3a46", "patch": "@@ -0,0 +1,18 @@\n+// compile-flags: --crate-type=lib\n+// check-pass\n+\n+// Make sure we don't pass inference variables to uninhabitedness checks in borrowck\n+\n+struct Command<'s> {\n+    session: &'s (),\n+    imp: std::convert::Infallible,\n+}\n+\n+fn command(_: &()) -> Command<'_> {\n+    unreachable!()\n+}\n+\n+fn with_session<'s>(a: &std::process::Command, b: &'s ()) -> Command<'s> {\n+    a.get_program();\n+    command(b)\n+}"}]}