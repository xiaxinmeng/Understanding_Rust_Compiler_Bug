{"sha": "593d6d1cb15c55c88319470dabb40126c7b7f1e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5M2Q2ZDFjYjE1YzU1Yzg4MzE5NDcwZGFiYjQwMTI2YzdiN2YxZTI=", "commit": {"author": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-06-08T18:04:53Z"}, "committer": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-06-17T05:20:25Z"}, "message": "Make portability part of the summary.\n\nThat means it will be visible under \"Implementors\" on trait pages, and\nunder \"Implementations\" on struct/enum pages, even when all methods are\ncollapsed.\n\nSwitch to a float layout for rightside elements.", "tree": {"sha": "880f941112df0f2a46e1cad4fac5e8b45d0d3365", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/880f941112df0f2a46e1cad4fac5e8b45d0d3365"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/593d6d1cb15c55c88319470dabb40126c7b7f1e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/593d6d1cb15c55c88319470dabb40126c7b7f1e2", "html_url": "https://github.com/rust-lang/rust/commit/593d6d1cb15c55c88319470dabb40126c7b7f1e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/593d6d1cb15c55c88319470dabb40126c7b7f1e2/comments", "author": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "910c7fa7673b80ead337c5d37259c9ff4dcf355c", "url": "https://api.github.com/repos/rust-lang/rust/commits/910c7fa7673b80ead337c5d37259c9ff4dcf355c", "html_url": "https://github.com/rust-lang/rust/commit/910c7fa7673b80ead337c5d37259c9ff4dcf355c"}], "stats": {"total": 48, "additions": 27, "deletions": 21}, "files": [{"sha": "df8cc94d3ee13cff7ebc005f7f12e97c823252b1", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/593d6d1cb15c55c88319470dabb40126c7b7f1e2/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/593d6d1cb15c55c88319470dabb40126c7b7f1e2/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=593d6d1cb15c55c88319470dabb40126c7b7f1e2", "patch": "@@ -1552,6 +1552,7 @@ fn render_impl(\n             w,\n             cx,\n             i,\n+            parent,\n             outer_version,\n             outer_const_version,\n             show_def_docs,\n@@ -1562,11 +1563,6 @@ fn render_impl(\n         if toggled {\n             write!(w, \"</summary>\")\n         }\n-        if trait_.is_some() {\n-            if let Some(portability) = portability(&i.impl_item, Some(parent)) {\n-                write!(w, \"<div class=\\\"item-info\\\">{}</div>\", portability);\n-            }\n-        }\n \n         if let Some(ref dox) = cx.shared.maybe_collapsed_doc_value(&i.impl_item) {\n             let mut ids = cx.id_map.borrow_mut();\n@@ -1598,6 +1594,7 @@ pub(crate) fn render_impl_summary(\n     w: &mut Buffer,\n     cx: &Context<'_>,\n     i: &Impl,\n+    parent: &clean::Item,\n     outer_version: Option<&str>,\n     outer_const_version: Option<&str>,\n     show_def_docs: bool,\n@@ -1652,6 +1649,7 @@ pub(crate) fn render_impl_summary(\n         );\n     }\n     write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+    write!(w, \"<div class=\\\"rightside\\\">\");\n     render_stability_since_raw(\n         w,\n         i.impl_item.stable_since(tcx).as_deref(),\n@@ -1660,6 +1658,15 @@ pub(crate) fn render_impl_summary(\n         outer_const_version,\n     );\n     write_srclink(cx, &i.impl_item, w);\n+    w.write_str(\"</div>\"); // end of \"rightside\"\n+\n+    let is_trait = i.inner_impl().trait_.is_some();\n+    if is_trait {\n+        if let Some(portability) = portability(&i.impl_item, Some(parent)) {\n+            write!(w, \"<div class=\\\"item-info\\\">{}</div>\", portability);\n+        }\n+    }\n+\n     w.write_str(\"</div>\");\n }\n "}, {"sha": "8ad0a8034417633d6ddbf9db37d2d6ca1bdfbd3f", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/593d6d1cb15c55c88319470dabb40126c7b7f1e2/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/593d6d1cb15c55c88319470dabb40126c7b7f1e2/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=593d6d1cb15c55c88319470dabb40126c7b7f1e2", "patch": "@@ -585,11 +585,14 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n         if toggled {\n             write!(w, \"<details class=\\\"rustdoc-toggle\\\" open><summary>\");\n         }\n-        write!(w, \"<div id=\\\"{}\\\" class=\\\"method has-srclink\\\"><code>\", id);\n-        render_assoc_item(w, m, AssocItemLink::Anchor(Some(&id)), ItemType::Impl, cx);\n-        w.write_str(\"</code>\");\n+        write!(w, \"<div id=\\\"{}\\\" class=\\\"method has-srclink\\\">\", id);\n+        write!(w, \"<div class=\\\"rightside\\\">\");\n         render_stability_since(w, m, t, cx.tcx());\n         write_srclink(cx, m, w);\n+        write!(w, \"</div>\");\n+        write!(w, \"<code>\");\n+        render_assoc_item(w, m, AssocItemLink::Anchor(Some(&id)), ItemType::Impl, cx);\n+        w.write_str(\"</code>\");\n         w.write_str(\"</div>\");\n         if toggled {\n             write!(w, \"</summary>\");\n@@ -697,6 +700,7 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n                     w,\n                     cx,\n                     &implementor,\n+                    it,\n                     outer_version.as_deref(),\n                     outer_const_version.as_deref(),\n                     false,\n@@ -1305,7 +1309,7 @@ fn render_implementor(\n     implementor_dups: &FxHashMap<Symbol, (DefId, bool)>,\n     aliases: &[String],\n ) {\n-    // If there's already another implementor that has the same abbridged name, use the\n+    // If there's already another implementor that has the same abridged name, use the\n     // full path, for example in `std::iter::ExactSizeIterator`\n     let use_absolute = match implementor.inner_impl().for_ {\n         clean::ResolvedPath { ref path, is_generic: false, .. }\n@@ -1321,6 +1325,7 @@ fn render_implementor(\n         w,\n         cx,\n         implementor,\n+        trait_,\n         outer_version.as_deref(),\n         outer_const_version.as_deref(),\n         false,"}, {"sha": "e084ee9ca7e34f88ad78a8f18a54f06929732417", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/593d6d1cb15c55c88319470dabb40126c7b7f1e2/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/593d6d1cb15c55c88319470dabb40126c7b7f1e2/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=593d6d1cb15c55c88319470dabb40126c7b7f1e2", "patch": "@@ -581,7 +581,6 @@ nav.sub {\n .content .item-info {\n \tposition: relative;\n \tmargin-left: 33px;\n-\tmargin-top: -13px;\n }\n \n .sub-variant > div > .item-info {\n@@ -852,12 +851,12 @@ body.blur > :not(#help) {\n }\n \n .stab {\n-\tdisplay: table;\n \tborder-width: 1px;\n \tborder-style: solid;\n \tpadding: 3px;\n \tmargin-bottom: 5px;\n \tfont-size: 90%;\n+\tfont-weight: normal;\n }\n .stab p {\n \tdisplay: inline;\n@@ -906,26 +905,22 @@ body.blur > :not(#help) {\n }\n \n .impl-items .since, .impl .since, .methods .since {\n-\tflex-grow: 0;\n \tpadding-left: 12px;\n \tpadding-right: 2px;\n \tposition: initial;\n }\n \n .impl-items .srclink, .impl .srclink, .methods .srclink {\n-\tflex-grow: 0;\n \t/* Override header settings otherwise it's too bold */\n \tfont-size: 17px;\n \tfont-weight: normal;\n }\n \n-.impl-items code, .impl code, .methods code {\n-\tflex-grow: 1;\n+.rightside {\n+\tfloat: right;\n }\n \n .has-srclink {\n-\tdisplay: flex;\n-\tflex-basis: 100%;\n \tfont-size: 16px;\n \tmargin-bottom: 12px;\n \t/* Push the src link out to the right edge consistently */\n@@ -986,7 +981,6 @@ a.test-arrow:hover{\n }\n \n .since + .srclink {\n-\tdisplay: table-cell;\n \tpadding-left: 10px;\n }\n "}, {"sha": "1952f723465d66c709f88ac903aa77d28346c822", "filename": "src/test/rustdoc/src-links-auto-impls.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/593d6d1cb15c55c88319470dabb40126c7b7f1e2/src%2Ftest%2Frustdoc%2Fsrc-links-auto-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/593d6d1cb15c55c88319470dabb40126c7b7f1e2/src%2Ftest%2Frustdoc%2Fsrc-links-auto-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsrc-links-auto-impls.rs?ref=593d6d1cb15c55c88319470dabb40126c7b7f1e2", "patch": "@@ -2,11 +2,11 @@\n \n // @has foo/struct.Unsized.html\n // @has - '//div[@id=\"impl-Sized\"]/code' 'impl !Sized for Unsized'\n-// @!has - '//div[@id=\"impl-Sized\"]/a[@class=\"srclink\"]' '[src]'\n+// @!has - '//div[@id=\"impl-Sized\"]//a[@class=\"srclink\"]' '[src]'\n // @has - '//div[@id=\"impl-Sync\"]/code' 'impl Sync for Unsized'\n-// @!has - '//div[@id=\"impl-Sync\"]/a[@class=\"srclink\"]' '[src]'\n+// @!has - '//div[@id=\"impl-Sync\"]//a[@class=\"srclink\"]' '[src]'\n // @has - '//div[@id=\"impl-Any\"]/code' 'impl<T> Any for T'\n-// @has - '//div[@id=\"impl-Any\"]/a[@class=\"srclink\"]' '[src]'\n+// @has - '//div[@id=\"impl-Any\"]//a[@class=\"srclink\"]' '[src]'\n pub struct Unsized {\n     data: [u8],\n }"}]}