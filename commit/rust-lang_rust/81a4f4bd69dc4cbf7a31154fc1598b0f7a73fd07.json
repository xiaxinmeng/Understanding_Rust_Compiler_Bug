{"sha": "81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07", "node_id": "C_kwDOAAsO6NoAKDgxYTRmNGJkNjlkYzRjYmY3YTMxMTU0ZmMxNTk4YjBmN2E3M2ZkMDc", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-05-04T00:12:50Z"}, "committer": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-05-04T00:17:47Z"}, "message": "Add some TAIT-related tests", "tree": {"sha": "7c324d75d6b90975242458f625d3658e32339cfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c324d75d6b90975242458f625d3658e32339cfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEClCZYSKPPkQPouAvN5zu/dY+XdcFAmJxxisACgkQN5zu/dY+\nXdcM5w//bneEGipaxTNvEwtqO2jr/3UlWfF7igK6kGjYm3/Sop8LoqZcQqbySobw\nQdDFSZapZ+T1f61AZEq8I+wdwwFh76dPaM9Y99yDTY1QAJMxRu6LD2RFT0Kxr8Xm\njKT1ejZJntKjlIFCwRAZnvEuZKuzX4hcYRpXVlCDCy33+K8uqp64EX3KafJKzvl8\nRc60MVVMelurWQMTZTHXwttBJlj4PAhmLbkxYcHrCdfPFCm8qJj2vZ3zdoNgFezD\nw23uVYg6bcNe4fFSLmwtanhk5HfioQ0bsxf820vhTkuSdSRlGiX2pa1ibszFFu0l\n9c1kQNUZBgmU2iBwL5NOe+5yzuAJeovYClkCZQelKCmRXzATqqPeEU0cYKIT47T8\ni92HD/fHbSGkOmPw3/xL+TJZ2oxqsLGk+1YTUpr8c2hYN25JK5N/IvrXsFekq9Gq\nM00TJUfpL+oX0kHT1XFOoeEX74cb7rXfmaMfMZC//yiA0dKI24P8lDhW7asi1lef\nTe/5jpepUIC0m3o4Md8V7zPRV433u8Wi55gGiwD0P07HY/21vb+hNtIi7CMCn6EK\nm/hlYBeEjlVqEF0LDgS4CAZDxqC81HjfMUZ19YU86AkTGFJwVgR5+Udw+xX7dXNl\nROitz6OmI5+x/GNbUGlQNCTGT5SyJl4aF5+I8NxfDqPGxQwld7Y=\n=03TV\n-----END PGP SIGNATURE-----", "payload": "tree 7c324d75d6b90975242458f625d3658e32339cfe\nparent e1b71feb592ba64805689e2b15b9fa570182c442\nauthor Yuki Okushi <jtitor@2k36.org> 1651623170 +0900\ncommitter Yuki Okushi <jtitor@2k36.org> 1651623467 +0900\n\nAdd some TAIT-related tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07", "html_url": "https://github.com/rust-lang/rust/commit/81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1b71feb592ba64805689e2b15b9fa570182c442", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b71feb592ba64805689e2b15b9fa570182c442", "html_url": "https://github.com/rust-lang/rust/commit/e1b71feb592ba64805689e2b15b9fa570182c442"}], "stats": {"total": 123, "additions": 123, "deletions": 0}, "files": [{"sha": "6c838f410036ab33db6ef0405a437e4173acdc84", "filename": "src/test/ui/type-alias-impl-trait/issue-53398-cyclic-types.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-53398-cyclic-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-53398-cyclic-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-53398-cyclic-types.rs?ref=81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07", "patch": "@@ -0,0 +1,9 @@\n+#![feature(type_alias_impl_trait)]\n+\n+type Foo = impl Fn() -> Foo;\n+\n+fn foo() -> Foo {\n+    foo //~ ERROR: overflow evaluating the requirement `fn() -> Foo {foo}: Sized`\n+}\n+\n+fn main() {}"}, {"sha": "a9c2c18630c01cd478517d80c381b9df68bddf4e", "filename": "src/test/ui/type-alias-impl-trait/issue-53398-cyclic-types.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-53398-cyclic-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-53398-cyclic-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-53398-cyclic-types.stderr?ref=81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07", "patch": "@@ -0,0 +1,11 @@\n+error[E0275]: overflow evaluating the requirement `fn() -> Foo {foo}: Sized`\n+  --> $DIR/issue-53398-cyclic-types.rs:6:5\n+   |\n+LL |     foo\n+   |     ^^^\n+   |\n+   = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`issue_53398_cyclic_types`)\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0275`."}, {"sha": "f20ddf020718ed80d168566f9191081e7d6d7eea", "filename": "src/test/ui/type-alias-impl-trait/issue-58662-generator-with-lifetime.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-58662-generator-with-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-58662-generator-with-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-58662-generator-with-lifetime.rs?ref=81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07", "patch": "@@ -0,0 +1,39 @@\n+// check-pass\n+\n+#![feature(generators, generator_trait)]\n+#![feature(type_alias_impl_trait)]\n+\n+use std::ops::{Generator, GeneratorState};\n+use std::pin::Pin;\n+\n+type RandGenerator<'a> = impl Generator<Return = (), Yield = u64> + 'a;\n+fn rand_generator<'a>(rng: &'a ()) -> RandGenerator<'a> {\n+    move || {\n+        let _rng = rng;\n+        loop {\n+            yield 0;\n+        }\n+    }\n+}\n+\n+pub type RandGeneratorWithIndirection<'a> = impl Generator<Return = (), Yield = u64> + 'a;\n+pub fn rand_generator_with_indirection<'a>(rng: &'a ()) -> RandGeneratorWithIndirection<'a> {\n+    fn helper<'b>(rng: &'b ()) -> impl 'b + Generator<Return = (), Yield = u64> {\n+        move || {\n+            let _rng = rng;\n+            loop {\n+                yield 0;\n+            }\n+        }\n+    }\n+\n+    helper(rng)\n+}\n+\n+fn main() {\n+    let mut gen = rand_generator(&());\n+    match unsafe { Pin::new_unchecked(&mut gen) }.resume(()) {\n+        GeneratorState::Yielded(_) => {}\n+        GeneratorState::Complete(_) => {}\n+    };\n+}"}, {"sha": "dc0f19c042af781dcd0a05c1b0f4ec92be16168c", "filename": "src/test/ui/type-alias-impl-trait/issue-89952.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-89952.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-89952.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-89952.rs?ref=81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07", "patch": "@@ -0,0 +1,31 @@\n+// check-pass\n+\n+#![feature(type_alias_impl_trait)]\n+\n+trait SomeTrait {}\n+impl SomeTrait for () {}\n+\n+trait MyFuture {\n+    type Output;\n+}\n+impl<T> MyFuture for T {\n+    type Output = T;\n+}\n+\n+trait ReturnsFuture {\n+    type Output: SomeTrait;\n+    type Future: MyFuture<Output = Result<Self::Output, ()>>;\n+    fn func() -> Self::Future;\n+}\n+\n+struct Foo;\n+\n+impl ReturnsFuture for Foo {\n+    type Output = impl SomeTrait;\n+    type Future = impl MyFuture<Output = Result<Self::Output, ()>>;\n+    fn func() -> Self::Future {\n+        Result::<(), ()>::Err(())\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "51d69c1271e0283dc8ec3d0431a5e8c5ddab47d1", "filename": "src/test/ui/type-alias-impl-trait/issue-94429.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-94429.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-94429.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-94429.rs?ref=81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07", "patch": "@@ -0,0 +1,22 @@\n+#![feature(type_alias_impl_trait, generator_trait, generators)]\n+use std::ops::Generator;\n+\n+trait Runnable {\n+    type Gen: Generator<Yield = (), Return = ()>;\n+\n+    fn run(&mut self) -> Self::Gen;\n+}\n+\n+struct Implementor {}\n+\n+impl Runnable for Implementor {\n+    type Gen = impl Generator<Yield = (), Return = ()>;\n+\n+    fn run(&mut self) -> Self::Gen {\n+        move || { //~ ERROR: type mismatch resolving\n+            yield 1;\n+        }\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "4546f82b83b854f7c3c4a1e9311a30edad5eb6b7", "filename": "src/test/ui/type-alias-impl-trait/issue-94429.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-94429.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-94429.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-94429.stderr?ref=81a4f4bd69dc4cbf7a31154fc1598b0f7a73fd07", "patch": "@@ -0,0 +1,11 @@\n+error[E0271]: type mismatch resolving `<[generator@$DIR/issue-94429.rs:16:9: 18:10] as Generator>::Yield == ()`\n+  --> $DIR/issue-94429.rs:16:9\n+   |\n+LL | /         move || {\n+LL | |             yield 1;\n+LL | |         }\n+   | |_________^ expected integer, found `()`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0271`."}]}