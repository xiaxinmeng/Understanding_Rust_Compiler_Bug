{"sha": "440d9372a2b8dfd01a98ba16a68f750792ab43fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MGQ5MzcyYTJiOGRmZDAxYTk4YmExNmE2OGY3NTA3OTJhYjQzZmE=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-09-18T22:04:40Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-09-20T12:45:39Z"}, "message": "Workaround ICE with if-let and RFC 2229", "tree": {"sha": "af667449b3ce047046f8ee89e34370b1199e6e99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af667449b3ce047046f8ee89e34370b1199e6e99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/440d9372a2b8dfd01a98ba16a68f750792ab43fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/440d9372a2b8dfd01a98ba16a68f750792ab43fa", "html_url": "https://github.com/rust-lang/rust/commit/440d9372a2b8dfd01a98ba16a68f750792ab43fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/440d9372a2b8dfd01a98ba16a68f750792ab43fa/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db1fb85cff63ad5fffe435e17128f99f9e1d970c", "url": "https://api.github.com/repos/rust-lang/rust/commits/db1fb85cff63ad5fffe435e17128f99f9e1d970c", "html_url": "https://github.com/rust-lang/rust/commit/db1fb85cff63ad5fffe435e17128f99f9e1d970c"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "03e8534ef289f6c6c6b303c9283ddaed8bdde120", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/440d9372a2b8dfd01a98ba16a68f750792ab43fa/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/440d9372a2b8dfd01a98ba16a68f750792ab43fa/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=440d9372a2b8dfd01a98ba16a68f750792ab43fa", "patch": "@@ -1028,15 +1028,13 @@ impl HandlerInner {\n             let mut error_codes = self\n                 .emitted_diagnostic_codes\n                 .iter()\n-                .filter_map(|x| {\n-                    match &x {\n+                .filter_map(|x| match &x {\n                     DiagnosticId::Error(s)\n-                        if let Ok(Some(_explanation)) = registry.try_find_description(s) =>\n+                        if registry.try_find_description(s).map_or(false, |o| o.is_some()) =>\n                     {\n                         Some(s.clone())\n                     }\n                     _ => None,\n-                }\n                 })\n                 .collect::<Vec<_>>();\n             if !error_codes.is_empty() {"}, {"sha": "33df541eb2ba88ccb19303722bf0193f7e04edca", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/440d9372a2b8dfd01a98ba16a68f750792ab43fa/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/440d9372a2b8dfd01a98ba16a68f750792ab43fa/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=440d9372a2b8dfd01a98ba16a68f750792ab43fa", "patch": "@@ -2417,13 +2417,14 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         let substs = InternalSubsts::for_item(tcx, def_id, |param, _| {\n             if let Some(i) = (param.index as usize).checked_sub(generics.parent_count) {\n                 // Our own parameters are the resolved lifetimes.\n-                match param.kind {\n-                    GenericParamDefKind::Lifetime\n-                        if let hir::GenericArg::Lifetime(lifetime) = &lifetimes[i] =>\n-                    {\n+                if let GenericParamDefKind::Lifetime = param.kind {\n+                    if let hir::GenericArg::Lifetime(lifetime) = &lifetimes[i] {\n                         self.ast_region_to_region(lifetime, None).into()\n+                    } else {\n+                        bug!()\n                     }\n-                    _ => bug!(),\n+                } else {\n+                    bug!()\n                 }\n             } else {\n                 match param.kind {"}]}