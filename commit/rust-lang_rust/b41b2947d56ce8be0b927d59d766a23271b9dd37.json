{"sha": "b41b2947d56ce8be0b927d59d766a23271b9dd37", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MWIyOTQ3ZDU2Y2U4YmUwYjkyN2Q1OWQ3NjZhMjMyNzFiOWRkMzc=", "commit": {"author": {"name": "Havvy", "email": "ryan.havvy@gmail.com", "date": "2017-05-23T06:49:35Z"}, "committer": {"name": "Havvy", "email": "ryan.havvy@gmail.com", "date": "2017-05-23T06:49:35Z"}, "message": "Suggested changes by birkenfeld", "tree": {"sha": "858669e054826fb509468525f4ad201a8fc7eb8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/858669e054826fb509468525f4ad201a8fc7eb8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b41b2947d56ce8be0b927d59d766a23271b9dd37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b41b2947d56ce8be0b927d59d766a23271b9dd37", "html_url": "https://github.com/rust-lang/rust/commit/b41b2947d56ce8be0b927d59d766a23271b9dd37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b41b2947d56ce8be0b927d59d766a23271b9dd37/comments", "author": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f4b0ffe59c1c0358ea3e5b9c1ad5fdb7b135b96", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f4b0ffe59c1c0358ea3e5b9c1ad5fdb7b135b96", "html_url": "https://github.com/rust-lang/rust/commit/5f4b0ffe59c1c0358ea3e5b9c1ad5fdb7b135b96"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "4fb1f1757bbf70f142d0dfe87bcdb5588c73a5b6", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b41b2947d56ce8be0b927d59d766a23271b9dd37/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b41b2947d56ce8be0b927d59d766a23271b9dd37/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=b41b2947d56ce8be0b927d59d766a23271b9dd37", "patch": "@@ -157,9 +157,8 @@ use marker::Unsize;\n /// its `drop` method called. Then any fields the value contains will also\n /// be dropped recursively.\n ///\n-/// Because of the recursive dropping, even for types that do not implement\n-/// this trait, you do not need to implement this trait unless your type\n-/// needs its own destructor logic.\n+/// Because of the recursive dropping, you do not need to implement this trait\n+/// unless your type needs its own destructor logic.\n ///\n /// # Examples\n ///\n@@ -181,9 +180,8 @@ use marker::Unsize;\n /// ```\n ///\n /// Showing the recursive nature of `Drop`. When `outer` goes out of scope, the\n-/// `drop` method will be called for `Outer` and then the `drop` method for\n-/// `Inner` will be called. Therefore `main` prints `Dropping Outer!` and then\n-/// `Dropping Inner!`.\n+/// `drop` method will be called first for `Outer`, then for `Inner`. Therefore\n+/// `main` prints `Dropping Outer!` and then `Dropping Inner!`.\n ///\n /// ```\n /// struct Inner;"}]}