{"sha": "bef1828d427a3eb9f57d865efc4b615b08714b46", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlZjE4MjhkNDI3YTNlYjlmNTdkODY1ZWZjNGI2MTViMDg3MTRiNDY=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-08-06T23:03:41Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-08-17T21:41:39Z"}, "message": "Rename `simd_basics` feature gate to `repr_simd`.", "tree": {"sha": "35427aaadbff5d57d3b094a6a67e83b698454745", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35427aaadbff5d57d3b094a6a67e83b698454745"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bef1828d427a3eb9f57d865efc4b615b08714b46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bef1828d427a3eb9f57d865efc4b615b08714b46", "html_url": "https://github.com/rust-lang/rust/commit/bef1828d427a3eb9f57d865efc4b615b08714b46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bef1828d427a3eb9f57d865efc4b615b08714b46/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48f3507763c646e2353e84f6b0e7269784588d17", "url": "https://api.github.com/repos/rust-lang/rust/commits/48f3507763c646e2353e84f6b0e7269784588d17", "html_url": "https://github.com/rust-lang/rust/commit/48f3507763c646e2353e84f6b0e7269784588d17"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "d21cfbcdfce9b0ca76a70944cb4b6de70b93ed19", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bef1828d427a3eb9f57d865efc4b615b08714b46/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bef1828d427a3eb9f57d865efc4b615b08714b46/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=bef1828d427a3eb9f57d865efc4b615b08714b46", "patch": "@@ -79,7 +79,7 @@\n #![feature(reflect)]\n #![feature(rustc_attrs)]\n #![cfg_attr(stage0, feature(simd))]\n-#![cfg_attr(not(stage0), feature(simd_basics))]\n+#![cfg_attr(not(stage0), feature(repr_simd))]\n #![feature(staged_api)]\n #![feature(unboxed_closures)]\n "}, {"sha": "f5a0a2f4718b9d6d38ca3b60cb8c3cf6c43edb8e", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bef1828d427a3eb9f57d865efc4b615b08714b46/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bef1828d427a3eb9f57d865efc4b615b08714b46/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=bef1828d427a3eb9f57d865efc4b615b08714b46", "patch": "@@ -180,10 +180,10 @@ const KNOWN_FEATURES: &'static [(&'static str, &'static str, Status)] = &[\n     (\"type_macros\", \"1.3.0\", Active),\n \n     // allow `repr(simd)`, and importing the various simd intrinsics\n-    (\"simd_basics\", \"1.3.0\", Active),\n+    (\"repr_simd\", \"1.4.0\", Active),\n \n     // Allows cfg(target_feature = \"...\").\n-    (\"cfg_target_feature\", \"1.3.0\", Active),\n+    (\"cfg_target_feature\", \"1.4.0\", Active),\n \n     // allow `extern \"platform-intrinsic\" { ... }`\n     (\"platform_intrinsics\", \"1.4.0\", Active),\n@@ -422,7 +422,6 @@ pub struct Features {\n     pub allow_box: bool,\n     pub allow_pushpop_unsafe: bool,\n     pub simd_ffi: bool,\n-    pub simd_basics: bool,\n     pub unmarked_api: bool,\n     pub negate_unsigned: bool,\n     /// spans of #![feature] attrs for stable language features. for error reporting\n@@ -453,7 +452,6 @@ impl Features {\n             allow_box: false,\n             allow_pushpop_unsafe: false,\n             simd_ffi: false,\n-            simd_basics: false,\n             unmarked_api: false,\n             negate_unsigned: false,\n             declared_stable_lang_features: Vec::new(),\n@@ -741,7 +739,7 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n                     if attr.name() == \"repr\" {\n                         for item in attr.meta_item_list().unwrap_or(&[]) {\n                             if item.name() == \"simd\" {\n-                                self.gate_feature(\"simd_basics\", i.span,\n+                                self.gate_feature(\"repr_simd\", i.span,\n                                                   \"SIMD types are experimental and possibly buggy\");\n \n                             }\n@@ -979,7 +977,6 @@ fn check_crate_inner<F>(cm: &CodeMap, span_handler: &SpanHandler,\n         allow_box: cx.has_feature(\"box_syntax\"),\n         allow_pushpop_unsafe: cx.has_feature(\"pushpop_unsafe\"),\n         simd_ffi: cx.has_feature(\"simd_ffi\"),\n-        simd_basics: cx.has_feature(\"simd_basics\"),\n         unmarked_api: cx.has_feature(\"unmarked_api\"),\n         negate_unsigned: cx.has_feature(\"negate_unsigned\"),\n         declared_stable_lang_features: accepted_features,"}]}