{"sha": "f6481ed1c31d2a3c43fab73e58901f7c25360fcb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NDgxZWQxYzMxZDJhM2M0M2ZhYjczZTU4OTAxZjdjMjUzNjBmY2I=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-09-06T18:21:20Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-09-06T18:21:20Z"}, "message": "Correct pluralisation of various diagnostic messages", "tree": {"sha": "734024c70db95eceafedd99b2011bb05b777bee7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/734024c70db95eceafedd99b2011bb05b777bee7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6481ed1c31d2a3c43fab73e58901f7c25360fcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6481ed1c31d2a3c43fab73e58901f7c25360fcb", "html_url": "https://github.com/rust-lang/rust/commit/f6481ed1c31d2a3c43fab73e58901f7c25360fcb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6481ed1c31d2a3c43fab73e58901f7c25360fcb/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4894123d21ed4b153a2e5c32c0870cb2d97f9b46", "url": "https://api.github.com/repos/rust-lang/rust/commits/4894123d21ed4b153a2e5c32c0870cb2d97f9b46", "html_url": "https://github.com/rust-lang/rust/commit/4894123d21ed4b153a2e5c32c0870cb2d97f9b46"}], "stats": {"total": 48, "additions": 34, "deletions": 14}, "files": [{"sha": "f67526ea4a1d9a27e35dd20aec8b6607bdfa9499", "filename": "src/librustc/ty/error.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6481ed1c31d2a3c43fab73e58901f7c25360fcb/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6481ed1c31d2a3c43fab73e58901f7c25360fcb/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=f6481ed1c31d2a3c43fab73e58901f7c25360fcb", "patch": "@@ -200,7 +200,9 @@ impl<'tcx> ty::TyS<'tcx> {\n             ty::Array(_, n) => {\n                 let n = tcx.lift_to_global(&n).unwrap();\n                 match n.try_eval_usize(tcx, ty::ParamEnv::empty()) {\n-                    Some(n) => format!(\"array of {} elements\", n).into(),\n+                    Some(n) => {\n+                        format!(\"array of {} element{}\", n, if n != 1 { \"s\" } else { \"\" }).into()\n+                    }\n                     None => \"array\".into(),\n                 }\n             }"}, {"sha": "8502b89de1469b78c718075d4a5025f513e20274", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/f6481ed1c31d2a3c43fab73e58901f7c25360fcb/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6481ed1c31d2a3c43fab73e58901f7c25360fcb/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=f6481ed1c31d2a3c43fab73e58901f7c25360fcb", "patch": "@@ -1098,22 +1098,35 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n     fn error_scrutinee_inconsistent_length(&self, span: Span, min_len: u64, size: u64) {\n         struct_span_err!(\n-            self.tcx.sess, span, E0527,\n-            \"pattern requires {} elements but array has {}\",\n-            min_len, size\n+            self.tcx.sess,\n+            span,\n+            E0527,\n+            \"pattern requires {} element{} but array has {}\",\n+            min_len,\n+            if min_len != 1 { \"s\" } else { \"\" },\n+            size,\n         )\n-        .span_label(span, format!(\"expected {} elements\", size))\n+        .span_label(span, format!(\"expected {} element{}\", size, if size != 1 { \"s\" } else { \"\" }))\n         .emit();\n     }\n \n     fn error_scrutinee_with_rest_inconsistent_length(&self, span: Span, min_len: u64, size: u64) {\n         struct_span_err!(\n-            self.tcx.sess, span, E0528,\n-            \"pattern requires at least {} elements but array has {}\",\n-            min_len, size\n-        )\n-        .span_label(span, format!(\"pattern cannot match array of {} elements\", size))\n-        .emit();\n+            self.tcx.sess,\n+            span,\n+            E0528,\n+            \"pattern requires at least {} element{} but array has {}\",\n+            min_len,\n+            if min_len != 1 { \"s\" } else { \"\" },\n+            size,\n+        ).span_label(\n+            span,\n+            format!(\n+                \"pattern cannot match array of {} element{}\",\n+                size,\n+                if size != 1 { \"s\" } else { \"\" },\n+            ),\n+        ).emit();\n     }\n \n     fn error_scrutinee_unfixed_length(&self, span: Span) {"}, {"sha": "23735727fe8cfbc1c700cf83f64fca94dea1fc8f", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f6481ed1c31d2a3c43fab73e58901f7c25360fcb/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6481ed1c31d2a3c43fab73e58901f7c25360fcb/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=f6481ed1c31d2a3c43fab73e58901f7c25360fcb", "patch": "@@ -345,8 +345,13 @@ impl LockstepIterSize {\n                 LockstepIterSize::Constraint(r_len, _) if l_len == r_len => self,\n                 LockstepIterSize::Constraint(r_len, r_id) => {\n                     let msg = format!(\n-                        \"meta-variable `{}` repeats {} times, but `{}` repeats {} times\",\n-                        l_id, l_len, r_id, r_len\n+                        \"meta-variable `{}` repeats {} time{}, but `{}` repeats {} time{}\",\n+                        l_id,\n+                        l_len,\n+                        if l_len != 1 { \"s\" } else { \"\" },\n+                        r_id,\n+                        r_len,\n+                        if r_len != 1 { \"s\" } else { \"\" },\n                     );\n                     LockstepIterSize::Contradiction(msg)\n                 }"}, {"sha": "dec84c8286292bb03c2ee7287e42ada09dcbab6b", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6481ed1c31d2a3c43fab73e58901f7c25360fcb/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6481ed1c31d2a3c43fab73e58901f7c25360fcb/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=f6481ed1c31d2a3c43fab73e58901f7c25360fcb", "patch": "@@ -291,7 +291,7 @@ impl<'a, 'b> Context<'a, 'b> {\n                 &format!(\n                     \"{} positional argument{} in format string, but {}\",\n                     count,\n-                    if count > 1 { \"s\" } else { \"\" },\n+                    if count != 1 { \"s\" } else { \"\" },\n                     self.describe_num_args(),\n                 ),\n             );"}]}