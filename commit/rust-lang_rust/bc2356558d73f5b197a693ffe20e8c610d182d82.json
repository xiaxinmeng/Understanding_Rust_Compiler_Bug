{"sha": "bc2356558d73f5b197a693ffe20e8c610d182d82", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMjM1NjU1OGQ3M2Y1YjE5N2E2OTNmZmUyMGU4YzYxMGQxODJkODI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-21T00:44:49Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-26T16:42:06Z"}, "message": "Fix rustdoc", "tree": {"sha": "0510facbc04eba6f5fd6d1ff2d630270fdf66703", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0510facbc04eba6f5fd6d1ff2d630270fdf66703"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc2356558d73f5b197a693ffe20e8c610d182d82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc2356558d73f5b197a693ffe20e8c610d182d82", "html_url": "https://github.com/rust-lang/rust/commit/bc2356558d73f5b197a693ffe20e8c610d182d82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc2356558d73f5b197a693ffe20e8c610d182d82/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4a3be6bd1b9b468478c925c8eaa0e54df56a8fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4a3be6bd1b9b468478c925c8eaa0e54df56a8fe", "html_url": "https://github.com/rust-lang/rust/commit/c4a3be6bd1b9b468478c925c8eaa0e54df56a8fe"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "6c04707b5ec1df0918e85bce0cd2fe707ffae55c", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/bc2356558d73f5b197a693ffe20e8c610d182d82/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc2356558d73f5b197a693ffe20e8c610d182d82/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=bc2356558d73f5b197a693ffe20e8c610d182d82", "patch": "@@ -972,7 +972,7 @@ impl Clean<Item> for doctree::Trait {\n \n impl Clean<Type> for ast::TraitRef {\n     fn clean(&self, cx: &DocContext) -> Type {\n-        resolve_type(cx, self.path.clean(cx), None, self.ref_id)\n+        resolve_type(cx, self.path.clean(cx), self.ref_id)\n     }\n }\n \n@@ -1258,8 +1258,19 @@ impl Clean<Type> for ast::Ty {\n             TyFixedLengthVec(ref ty, ref e) => FixedVector(box ty.clean(cx),\n                                                            e.span.to_src(cx)),\n             TyTup(ref tys) => Tuple(tys.clean(cx)),\n-            TyPath(ref p, ref tpbs, id) => {\n-                resolve_type(cx, p.clean(cx), tpbs.clean(cx), id)\n+            TyPath(ref p, id) => {\n+                resolve_type(cx, p.clean(cx), id)\n+            }\n+            TyObjectSum(ref lhs, ref bounds) => {\n+                let lhs_ty = lhs.clean(cx);\n+                match lhs_ty {\n+                    ResolvedPath { path, typarams: None, did } => {\n+                        ResolvedPath { path: path, typarams: Some(bounds.clean(cx)), did: did}\n+                    }\n+                    _ => {\n+                        lhs_ty // shouldn't happen\n+                    }\n+                }\n             }\n             TyClosure(ref c) => Closure(box c.clean(cx)),\n             TyProc(ref c) => Proc(box c.clean(cx)),\n@@ -2110,8 +2121,8 @@ fn name_from_pat(p: &ast::Pat) -> String {\n }\n \n /// Given a Type, resolve it using the def_map\n-fn resolve_type(cx: &DocContext, path: Path,\n-                tpbs: Option<Vec<TyParamBound>>,\n+fn resolve_type(cx: &DocContext,\n+                path: Path,\n                 id: ast::NodeId) -> Type {\n     let tcx = match cx.tcx_opt() {\n         Some(tcx) => tcx,\n@@ -2148,7 +2159,7 @@ fn resolve_type(cx: &DocContext, path: Path,\n         _ => {}\n     };\n     let did = register_def(&*cx, def);\n-    ResolvedPath { path: path, typarams: tpbs, did: did }\n+    ResolvedPath { path: path, typarams: None, did: did }\n }\n \n fn register_def(cx: &DocContext, def: def::Def) -> ast::DefId {"}]}