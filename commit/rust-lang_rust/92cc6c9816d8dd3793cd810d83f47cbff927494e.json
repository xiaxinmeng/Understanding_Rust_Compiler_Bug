{"sha": "92cc6c9816d8dd3793cd810d83f47cbff927494e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyY2M2Yzk4MTZkOGRkMzc5M2NkODEwZDgzZjQ3Y2JmZjkyNzQ5NGU=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-21T15:55:20Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-21T15:58:47Z"}, "message": "Add recursive limit in expression macro expansion", "tree": {"sha": "bba212a0237334f3788d2644a8d961758e00ae52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bba212a0237334f3788d2644a8d961758e00ae52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92cc6c9816d8dd3793cd810d83f47cbff927494e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92cc6c9816d8dd3793cd810d83f47cbff927494e", "html_url": "https://github.com/rust-lang/rust/commit/92cc6c9816d8dd3793cd810d83f47cbff927494e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92cc6c9816d8dd3793cd810d83f47cbff927494e/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92b561b5c7da8303473792ba2bacb430614da2d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/92b561b5c7da8303473792ba2bacb430614da2d1", "html_url": "https://github.com/rust-lang/rust/commit/92b561b5c7da8303473792ba2bacb430614da2d1"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "5f9d53ecb2605933fce5fbd6ec49e7096f1104a0", "filename": "crates/ra_hir_def/src/body.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/92cc6c9816d8dd3793cd810d83f47cbff927494e/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92cc6c9816d8dd3793cd810d83f47cbff927494e/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody.rs?ref=92cc6c9816d8dd3793cd810d83f47cbff927494e", "patch": "@@ -30,6 +30,7 @@ pub(crate) struct Expander {\n     hygiene: Hygiene,\n     ast_id_map: Arc<AstIdMap>,\n     module: ModuleId,\n+    recursive_limit: usize,\n }\n \n impl Expander {\n@@ -41,7 +42,7 @@ impl Expander {\n         let crate_def_map = db.crate_def_map(module.krate);\n         let hygiene = Hygiene::new(db.upcast(), current_file_id);\n         let ast_id_map = db.ast_id_map(current_file_id);\n-        Expander { crate_def_map, current_file_id, hygiene, ast_id_map, module }\n+        Expander { crate_def_map, current_file_id, hygiene, ast_id_map, module, recursive_limit: 0 }\n     }\n \n     pub(crate) fn enter_expand<T: ast::AstNode>(\n@@ -50,6 +51,10 @@ impl Expander {\n         local_scope: Option<&ItemScope>,\n         macro_call: ast::MacroCall,\n     ) -> Option<(Mark, T)> {\n+        if self.recursive_limit > 1024 {\n+            return None;\n+        }\n+\n         let macro_call = InFile::new(self.current_file_id, &macro_call);\n \n         if let Some(call_id) = macro_call.as_call_id(db, |path| {\n@@ -73,6 +78,7 @@ impl Expander {\n                     self.hygiene = Hygiene::new(db.upcast(), file_id);\n                     self.current_file_id = file_id;\n                     self.ast_id_map = db.ast_id_map(file_id);\n+                    self.recursive_limit += 1;\n \n                     return Some((mark, expr));\n                 }\n@@ -88,6 +94,7 @@ impl Expander {\n         self.hygiene = Hygiene::new(db.upcast(), mark.file_id);\n         self.current_file_id = mark.file_id;\n         self.ast_id_map = mem::take(&mut mark.ast_id_map);\n+        self.recursive_limit -= 1;\n         mark.bomb.defuse();\n     }\n "}]}