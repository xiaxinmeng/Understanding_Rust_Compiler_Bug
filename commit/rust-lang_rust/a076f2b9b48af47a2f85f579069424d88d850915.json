{"sha": "a076f2b9b48af47a2f85f579069424d88d850915", "node_id": "C_kwDOAAsO6NoAKGEwNzZmMmI5YjQ4YWY0N2EyZjg1ZjU3OTA2OTQyNGQ4OGQ4NTA5MTU", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2021-10-23T12:34:33Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2021-10-23T13:51:22Z"}, "message": "Repace use of `static_nobundle` with `native_link_modifiers`\n\nThis fixes warning when building Rust and running tests:\n```\nwarning: library kind `static-nobundle` has been superseded by specifying `-bundle` on library kind `static`. Try `static:-bundle`\nwarning: `rustc_llvm` (lib) generated 2 warnings (1 duplicate)\n```", "tree": {"sha": "403d7127e697d4f0a5bbffcbf14c43fa3f41b7fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/403d7127e697d4f0a5bbffcbf14c43fa3f41b7fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a076f2b9b48af47a2f85f579069424d88d850915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a076f2b9b48af47a2f85f579069424d88d850915", "html_url": "https://github.com/rust-lang/rust/commit/a076f2b9b48af47a2f85f579069424d88d850915", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a076f2b9b48af47a2f85f579069424d88d850915/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf708558b758f4473c4f35986d9492ace7bf906d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf708558b758f4473c4f35986d9492ace7bf906d", "html_url": "https://github.com/rust-lang/rust/commit/cf708558b758f4473c4f35986d9492ace7bf906d"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "943ce589c4f36ea41a19888cbe61af07159d0c40", "filename": "compiler/rustc_llvm/build.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a076f2b9b48af47a2f85f579069424d88d850915/compiler%2Frustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076f2b9b48af47a2f85f579069424d88d850915/compiler%2Frustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fbuild.rs?ref=a076f2b9b48af47a2f85f579069424d88d850915", "patch": "@@ -288,7 +288,7 @@ fn main() {\n             let path = PathBuf::from(s);\n             println!(\"cargo:rustc-link-search=native={}\", path.parent().unwrap().display());\n             if target.contains(\"windows\") {\n-                println!(\"cargo:rustc-link-lib=static-nobundle={}\", stdcppname);\n+                println!(\"cargo:rustc-link-lib=static:-bundle={}\", stdcppname);\n             } else {\n                 println!(\"cargo:rustc-link-lib=static={}\", stdcppname);\n             }\n@@ -302,6 +302,6 @@ fn main() {\n     // Libstdc++ depends on pthread which Rust doesn't link on MinGW\n     // since nothing else requires it.\n     if target.contains(\"windows-gnu\") {\n-        println!(\"cargo:rustc-link-lib=static-nobundle=pthread\");\n+        println!(\"cargo:rustc-link-lib=static:-bundle=pthread\");\n     }\n }"}, {"sha": "8476c2bfcc431ca7c8fe0a2e26323b4b6a9e918b", "filename": "compiler/rustc_llvm/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a076f2b9b48af47a2f85f579069424d88d850915/compiler%2Frustc_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076f2b9b48af47a2f85f579069424d88d850915/compiler%2Frustc_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fsrc%2Flib.rs?ref=a076f2b9b48af47a2f85f579069424d88d850915", "patch": "@@ -1,5 +1,5 @@\n #![feature(nll)]\n-#![feature(static_nobundle)]\n+#![feature(native_link_modifiers)]\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n \n // NOTE: This crate only exists to allow linking on mingw targets."}, {"sha": "079626f0fea54c38755fbc1a7be8af9918890643", "filename": "library/unwind/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a076f2b9b48af47a2f85f579069424d88d850915/library%2Funwind%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076f2b9b48af47a2f85f579069424d88d850915/library%2Funwind%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Funwind%2Fsrc%2Flib.rs?ref=a076f2b9b48af47a2f85f579069424d88d850915", "patch": "@@ -5,7 +5,6 @@\n #![feature(native_link_modifiers_bundle)]\n #![feature(nll)]\n #![feature(staged_api)]\n-#![feature(static_nobundle)]\n #![feature(c_unwind)]\n #![cfg_attr(not(target_env = \"msvc\"), feature(libc))]\n "}, {"sha": "0919def5b9abc084e64e5b35dcdcbb2773550109", "filename": "src/test/run-make-fulldeps/foreign-exceptions/foo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a076f2b9b48af47a2f85f579069424d88d850915/src%2Ftest%2Frun-make-fulldeps%2Fforeign-exceptions%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076f2b9b48af47a2f85f579069424d88d850915/src%2Ftest%2Frun-make-fulldeps%2Fforeign-exceptions%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fforeign-exceptions%2Ffoo.rs?ref=a076f2b9b48af47a2f85f579069424d88d850915", "patch": "@@ -3,7 +3,7 @@\n // C++ code.\n \n // For linking libstdc++ on MinGW\n-#![cfg_attr(all(windows, target_env = \"gnu\"), feature(static_nobundle))]\n+#![cfg_attr(all(windows, target_env = \"gnu\"), feature(native_link_modifiers))]\n #![feature(c_unwind)]\n \n use std::panic::{catch_unwind, AssertUnwindSafe};"}, {"sha": "bc647e138ad6e610d862696af7f2b7790dee642c", "filename": "src/test/run-make-fulldeps/tools.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a076f2b9b48af47a2f85f579069424d88d850915/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/a076f2b9b48af47a2f85f579069424d88d850915/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk?ref=a076f2b9b48af47a2f85f579069424d88d850915", "patch": "@@ -120,7 +120,7 @@ else\n \t# So we end up with the following hack: we link use static-nobundle to only\n \t# link the parts of libstdc++ that we actually use, which doesn't include\n \t# the dependency on the pthreads DLL.\n-\tEXTRARSCXXFLAGS := -l static-nobundle=stdc++\n+\tEXTRARSCXXFLAGS := -l static:-bundle=stdc++\n endif\n else\n ifeq ($(UNAME),Darwin)"}, {"sha": "a78e8294881c356d9a8a31c7678473798958aa4f", "filename": "src/test/run-make/issue-36710/foo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a076f2b9b48af47a2f85f579069424d88d850915/src%2Ftest%2Frun-make%2Fissue-36710%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076f2b9b48af47a2f85f579069424d88d850915/src%2Ftest%2Frun-make%2Fissue-36710%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-36710%2Ffoo.rs?ref=a076f2b9b48af47a2f85f579069424d88d850915", "patch": "@@ -1,7 +1,7 @@\n // Tests that linking to C++ code with global destructors works.\n \n // For linking libstdc++ on MinGW\n-#![cfg_attr(all(windows, target_env = \"gnu\"), feature(static_nobundle))]\n+#![cfg_attr(all(windows, target_env = \"gnu\"), feature(native_link_modifiers))]\n \n extern \"C\" {\n     fn get() -> u32;"}]}