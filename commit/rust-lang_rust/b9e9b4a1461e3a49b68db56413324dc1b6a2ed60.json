{"sha": "b9e9b4a1461e3a49b68db56413324dc1b6a2ed60", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5ZTliNGExNDYxZTNhNDliNjhkYjU2NDEzMzI0ZGMxYjZhMmVkNjA=", "commit": {"author": {"name": "Tobias Stolzmann", "email": "tobias.stolzmann@gmail.com", "date": "2018-02-28T14:29:16Z"}, "committer": {"name": "Tobias Stolzmann", "email": "tobias.stolzmann@gmail.com", "date": "2018-02-28T14:29:16Z"}, "message": "Add std::path::Path::ancestors\n\nSquashed commit of the following:\n\ncommit 1b5d55e26f667b1a25c83c5db0cbb072013a5122\nAuthor: Tobias Stolzmann <tobias.stolzmann@gmail.com>\nDate:   Wed Feb 28 00:06:15 2018 +0100\n\n    Bugfix\n\ncommit 4265c2db0b0aaa66fdeace5d329665fd2d13903a\nAuthor: Tobias Stolzmann <tobias.stolzmann@gmail.com>\nDate:   Tue Feb 27 22:59:12 2018 +0100\n\n    Rename std::path::Path::parents into std::path::Path::ancestors\n\ncommit 2548e4b14d377d20adad0f08304a0dd6f8e48e23\nAuthor: Tobias Stolzmann <tobias.stolzmann@gmail.com>\nDate:   Tue Feb 27 12:50:37 2018 +0100\n\n    Add tracking issue\n\ncommit 3e2ce51a6eea0e39af05849f76dd2cefd5035e86\nAuthor: Tobias Stolzmann <tobias.stolzmann@gmail.com>\nDate:   Mon Feb 26 15:05:15 2018 +0100\n\n    impl FusedIterator for Parents\n\ncommit a7e096420809740311e19d963d4aba6df77be2f9\nAuthor: Tobias Stolzmann <tobias.stolzmann@gmail.com>\nDate:   Mon Feb 26 14:38:41 2018 +0100\n\n    Clarify that the iterator returned will yield at least one value\n\ncommit 796a36ea203cd197cc4c810eebd21c7e3433e6f1\nAuthor: Tobias Stolzmann <tobias.stolzmann@gmail.com>\nDate:   Thu Feb 22 14:01:21 2018 +0100\n\n    Fix examples\n\ncommit e279383b21f11c97269cb355a5b2a0ecdb65bb0c\nAuthor: Tobias Stolzmann <tobias.stolzmann@gmail.com>\nDate:   Thu Feb 22 04:47:24 2018 +0100\n\n    Add std::path::Path::parents", "tree": {"sha": "be7b689c3ee5ac48728245d02e7244c778342597", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be7b689c3ee5ac48728245d02e7244c778342597"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9e9b4a1461e3a49b68db56413324dc1b6a2ed60", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE81kFa8bQP59p0MGlRS/A4273RDkFAlqWvaQACgkQRS/A4273\nRDl8rBAAq+Mf43yr0vb6JFCfqmqMXljxHm9cS2UI5ZUKskprWupya1ZIg/BZHIUy\nrRy7BrCwc4+xZHhlcD+fVPtKeEJ+uKC0sB8TkaLGSR/6Tnnep9lQ8uzCXxQ5lJ9T\nhnk8Tj4yO6dAwNtrbszi6s2fonCU4h8mXGKQTQlCMF0MlOlQVlm2eYE/RvU1uwtL\nPsBiDweM1QH2W5gfB40JGWxp93T4/72IE7XkgxJVbV9Py1KoYynqn6mAbKjSx9wH\n0FiGsDJvRMmlZz0jadZH+MJ3OIU1rQHTRBmKpVgwXf+9+znQ10uR5zX+ALLy/bSm\nd+28GgjKxBPo47DeEdc9E5EDyYruwUhIHCfm3Aau7hjWHJx+LRhkMItFTLlaBOhy\n0RQwd4+BbFIVVaxW2BuUznRGHhJgBKscYVufxfV2ttMS61SWn4F7n0dD4TNwiFE+\nIx/TDcTANNzJoFpibpwAFj13BvJTZ9JsI7mZxALyxJuDG08FcEF6pIJu4tK0RZzR\nqPhO9ghT4VY1G+A3B2CIblUL/F0tWajzSdXrzzTDYQeTYKa56uHc7VsYuNQ+9xTT\nkylI+VhqtsXNF/XLNPT5PirRs1a5iLpATVth/nEgKkWu36Kqz/WeywZGbtL23Crg\nAOv0lxgtsRk+cfqHKTqwo1l/huY9CBagpR9dxERXx18l8zGjxFw=\n=9tON\n-----END PGP SIGNATURE-----", "payload": "tree be7b689c3ee5ac48728245d02e7244c778342597\nparent 0ff9872b2280009f094af0df3dcdc542cc46a5fd\nauthor Tobias Stolzmann <tobias.stolzmann@gmail.com> 1519828156 +0100\ncommitter Tobias Stolzmann <tobias.stolzmann@gmail.com> 1519828156 +0100\n\nAdd std::path::Path::ancestors\n\nSquashed commit of the following:\n\ncommit 1b5d55e26f667b1a25c83c5db0cbb072013a5122\nAuthor: Tobias Stolzmann <tobias.stolzmann@gmail.com>\nDate:   Wed Feb 28 00:06:15 2018 +0100\n\n    Bugfix\n\ncommit 4265c2db0b0aaa66fdeace5d329665fd2d13903a\nAuthor: Tobias Stolzmann <tobias.stolzmann@gmail.com>\nDate:   Tue Feb 27 22:59:12 2018 +0100\n\n    Rename std::path::Path::parents into std::path::Path::ancestors\n\ncommit 2548e4b14d377d20adad0f08304a0dd6f8e48e23\nAuthor: Tobias Stolzmann <tobias.stolzmann@gmail.com>\nDate:   Tue Feb 27 12:50:37 2018 +0100\n\n    Add tracking issue\n\ncommit 3e2ce51a6eea0e39af05849f76dd2cefd5035e86\nAuthor: Tobias Stolzmann <tobias.stolzmann@gmail.com>\nDate:   Mon Feb 26 15:05:15 2018 +0100\n\n    impl FusedIterator for Parents\n\ncommit a7e096420809740311e19d963d4aba6df77be2f9\nAuthor: Tobias Stolzmann <tobias.stolzmann@gmail.com>\nDate:   Mon Feb 26 14:38:41 2018 +0100\n\n    Clarify that the iterator returned will yield at least one value\n\ncommit 796a36ea203cd197cc4c810eebd21c7e3433e6f1\nAuthor: Tobias Stolzmann <tobias.stolzmann@gmail.com>\nDate:   Thu Feb 22 14:01:21 2018 +0100\n\n    Fix examples\n\ncommit e279383b21f11c97269cb355a5b2a0ecdb65bb0c\nAuthor: Tobias Stolzmann <tobias.stolzmann@gmail.com>\nDate:   Thu Feb 22 04:47:24 2018 +0100\n\n    Add std::path::Path::parents\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9e9b4a1461e3a49b68db56413324dc1b6a2ed60", "html_url": "https://github.com/rust-lang/rust/commit/b9e9b4a1461e3a49b68db56413324dc1b6a2ed60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9e9b4a1461e3a49b68db56413324dc1b6a2ed60/comments", "author": {"login": "teiesti", "id": 4253772, "node_id": "MDQ6VXNlcjQyNTM3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/4253772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teiesti", "html_url": "https://github.com/teiesti", "followers_url": "https://api.github.com/users/teiesti/followers", "following_url": "https://api.github.com/users/teiesti/following{/other_user}", "gists_url": "https://api.github.com/users/teiesti/gists{/gist_id}", "starred_url": "https://api.github.com/users/teiesti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teiesti/subscriptions", "organizations_url": "https://api.github.com/users/teiesti/orgs", "repos_url": "https://api.github.com/users/teiesti/repos", "events_url": "https://api.github.com/users/teiesti/events{/privacy}", "received_events_url": "https://api.github.com/users/teiesti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "teiesti", "id": 4253772, "node_id": "MDQ6VXNlcjQyNTM3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/4253772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teiesti", "html_url": "https://github.com/teiesti", "followers_url": "https://api.github.com/users/teiesti/followers", "following_url": "https://api.github.com/users/teiesti/following{/other_user}", "gists_url": "https://api.github.com/users/teiesti/gists{/gist_id}", "starred_url": "https://api.github.com/users/teiesti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teiesti/subscriptions", "organizations_url": "https://api.github.com/users/teiesti/orgs", "repos_url": "https://api.github.com/users/teiesti/repos", "events_url": "https://api.github.com/users/teiesti/events{/privacy}", "received_events_url": "https://api.github.com/users/teiesti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ff9872b2280009f094af0df3dcdc542cc46a5fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ff9872b2280009f094af0df3dcdc542cc46a5fd", "html_url": "https://github.com/rust-lang/rust/commit/0ff9872b2280009f094af0df3dcdc542cc46a5fd"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "1608a752a463fdac287f7d309d9068fd10a659d8", "filename": "src/libstd/path.rs", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/b9e9b4a1461e3a49b68db56413324dc1b6a2ed60/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9e9b4a1461e3a49b68db56413324dc1b6a2ed60/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=b9e9b4a1461e3a49b68db56413324dc1b6a2ed60", "patch": "@@ -1035,6 +1035,50 @@ impl<'a> cmp::Ord for Components<'a> {\n     }\n }\n \n+/// An iterator over [`Path`] and its ancestors.\n+///\n+/// This `struct` is created by the [`ancestors`] method on [`Path`].\n+/// See its documentation for more.\n+///\n+/// # Examples\n+///\n+/// ```\n+/// #![feature(path_ancestors)]\n+///\n+/// use std::path::Path;\n+///\n+/// let path = Path::new(\"/foo/bar\");\n+///\n+/// for ancestor in path.ancestors() {\n+///     println!(\"{}\", ancestor.display());\n+/// }\n+/// ```\n+///\n+/// [`ancestors`]: struct.Path.html#method.ancestors\n+/// [`Path`]: struct.Path.html\n+#[derive(Copy, Clone, Debug)]\n+#[unstable(feature = \"path_ancestors\", issue = \"48581\")]\n+pub struct Ancestors<'a> {\n+    next: Option<&'a Path>,\n+}\n+\n+#[unstable(feature = \"path_ancestors\", issue = \"48581\")]\n+impl<'a> Iterator for Ancestors<'a> {\n+    type Item = &'a Path;\n+\n+    fn next(&mut self) -> Option<Self::Item> {\n+        let next = self.next;\n+        self.next = match next {\n+            Some(path) => path.parent(),\n+            None => None,\n+        };\n+        next\n+    }\n+}\n+\n+#[unstable(feature = \"fused\", issue = \"35602\")]\n+impl<'a> FusedIterator for Ancestors<'a> {}\n+\n ////////////////////////////////////////////////////////////////////////////////\n // Basic types and traits\n ////////////////////////////////////////////////////////////////////////////////\n@@ -1820,6 +1864,37 @@ impl Path {\n         })\n     }\n \n+    /// Produces an iterator over `Path` and its ancestors.\n+    ///\n+    /// The iterator will yield the `Path` that is returned if the [`parent`] method is used zero\n+    /// or more times. That means, the iterator will yield `&self`, `&self.parent().unwrap()`,\n+    /// `&self.parent().unwrap().parent().unwrap()` and so on. If the [`parent`] method returns\n+    /// [`None`], the iterator will do likewise. The iterator will always yield at least one value,\n+    /// namely `&self`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(path_ancestors)]\n+    ///\n+    /// use std::path::Path;\n+    ///\n+    /// let mut ancestors = Path::new(\"/foo/bar\").ancestors();\n+    /// assert_eq!(ancestors.next(), Some(Path::new(\"/foo/bar\")));\n+    /// assert_eq!(ancestors.next(), Some(Path::new(\"/foo\")));\n+    /// assert_eq!(ancestors.next(), Some(Path::new(\"/\")));\n+    /// assert_eq!(ancestors.next(), None);\n+    /// ```\n+    ///\n+    /// [`None`]: ../../std/option/enum.Option.html#variant.None\n+    /// [`parent`]: struct.Path.html#method.parent\n+    #[unstable(feature = \"path_ancestors\", issue = \"48581\")]\n+    pub fn ancestors(&self) -> Ancestors {\n+        Ancestors {\n+            next: Some(&self),\n+        }\n+    }\n+\n     /// Returns the final component of the `Path`, if there is one.\n     ///\n     /// If the path is a normal file, this is the file name. If it's the path of a directory, this"}]}