{"sha": "225ac9efc10bfd4149fd6de3d09e70d6c2387a8b", "node_id": "C_kwDOAAsO6NoAKDIyNWFjOWVmYzEwYmZkNDE0OWZkNmRlM2QwOWU3MGQ2YzIzODdhOGI", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-07-25T23:35:12Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-07-25T23:35:12Z"}, "message": "rustdoc: avoid inlining modules with duplicate names\n\nFixes rust-lang/rust#99734", "tree": {"sha": "034895846a2b8e62690e2e4a17097aa10103b0ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/034895846a2b8e62690e2e4a17097aa10103b0ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/225ac9efc10bfd4149fd6de3d09e70d6c2387a8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/225ac9efc10bfd4149fd6de3d09e70d6c2387a8b", "html_url": "https://github.com/rust-lang/rust/commit/225ac9efc10bfd4149fd6de3d09e70d6c2387a8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/225ac9efc10bfd4149fd6de3d09e70d6c2387a8b/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdf520fd419cd4dea184332f57206f1cf5ca3e8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdf520fd419cd4dea184332f57206f1cf5ca3e8f", "html_url": "https://github.com/rust-lang/rust/commit/bdf520fd419cd4dea184332f57206f1cf5ca3e8f"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "cf03979a934fbb816721ae0ed580a46b563fa444", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/225ac9efc10bfd4149fd6de3d09e70d6c2387a8b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/225ac9efc10bfd4149fd6de3d09e70d6c2387a8b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=225ac9efc10bfd4149fd6de3d09e70d6c2387a8b", "patch": "@@ -51,19 +51,22 @@ pub(crate) trait Clean<'tcx, T> {\n impl<'tcx> Clean<'tcx, Item> for DocModule<'tcx> {\n     fn clean(&self, cx: &mut DocContext<'tcx>) -> Item {\n         let mut items: Vec<Item> = vec![];\n+        let mut inserted = FxHashSet::default();\n         items.extend(\n             self.foreigns\n                 .iter()\n                 .map(|(item, renamed)| clean_maybe_renamed_foreign_item(cx, item, *renamed)),\n         );\n-        items.extend(self.mods.iter().map(|x| x.clean(cx)));\n+        items.extend(self.mods.iter().map(|x| {\n+            inserted.insert((ItemType::Module, x.name));\n+            x.clean(cx)\n+        }));\n \n         // Split up imports from all other items.\n         //\n         // This covers the case where somebody does an import which should pull in an item,\n         // but there's already an item with the same namespace and same name. Rust gives\n         // priority to the not-imported one, so we should, too.\n-        let mut inserted = FxHashSet::default();\n         items.extend(self.items.iter().flat_map(|(item, renamed)| {\n             // First, lower everything other than imports.\n             if matches!(item.kind, hir::ItemKind::Use(..)) {"}, {"sha": "8f1f1ec89674f8ba2f833f5484bc258be19c9cc5", "filename": "src/test/rustdoc/auxiliary/issue-99734-aux.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/225ac9efc10bfd4149fd6de3d09e70d6c2387a8b/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-99734-aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/225ac9efc10bfd4149fd6de3d09e70d6c2387a8b/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-99734-aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-99734-aux.rs?ref=225ac9efc10bfd4149fd6de3d09e70d6c2387a8b", "patch": "@@ -0,0 +1,7 @@\n+pub struct Option;\n+impl Option {\n+    pub fn unwrap(self) {}\n+}\n+\n+/// [`Option::unwrap`]\n+pub mod task {}"}, {"sha": "b2f9b8b46578b870bf91eba1eafdd39654e67f5d", "filename": "src/test/rustdoc/issue-99734-multiple-mods-w-same-name.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/225ac9efc10bfd4149fd6de3d09e70d6c2387a8b/src%2Ftest%2Frustdoc%2Fissue-99734-multiple-mods-w-same-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/225ac9efc10bfd4149fd6de3d09e70d6c2387a8b/src%2Ftest%2Frustdoc%2Fissue-99734-multiple-mods-w-same-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-99734-multiple-mods-w-same-name.rs?ref=225ac9efc10bfd4149fd6de3d09e70d6c2387a8b", "patch": "@@ -0,0 +1,14 @@\n+// aux-build:issue-99734-aux.rs\n+// build-aux-docs\n+// ignore-cross-compile\n+\n+#![crate_name = \"foo\"]\n+\n+#[macro_use]\n+extern crate issue_99734_aux;\n+\n+pub use issue_99734_aux::*;\n+\n+// @count foo/index.html '//a[@class=\"mod\"][@title=\"foo::task mod\"]' 1\n+\n+pub mod task {}"}]}