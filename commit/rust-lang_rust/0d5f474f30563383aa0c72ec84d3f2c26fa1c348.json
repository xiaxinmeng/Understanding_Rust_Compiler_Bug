{"sha": "0d5f474f30563383aa0c72ec84d3f2c26fa1c348", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNWY0NzRmMzA1NjMzODNhYTBjNzJlYzg0ZDNmMmMyNmZhMWMzNDg=", "commit": {"author": {"name": "Murarth", "email": "murarth@gmail.com", "date": "2016-05-07T17:39:24Z"}, "committer": {"name": "Murarth", "email": "murarth@gmail.com", "date": "2016-05-07T17:39:24Z"}, "message": "Add accessor methods to DiagnosticBuilder", "tree": {"sha": "bf879e7ff6f49b7cba9a0ce40b2aa99b19409de9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf879e7ff6f49b7cba9a0ce40b2aa99b19409de9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d5f474f30563383aa0c72ec84d3f2c26fa1c348", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d5f474f30563383aa0c72ec84d3f2c26fa1c348", "html_url": "https://github.com/rust-lang/rust/commit/0d5f474f30563383aa0c72ec84d3f2c26fa1c348", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d5f474f30563383aa0c72ec84d3f2c26fa1c348/comments", "author": {"login": "murarth", "id": 1332722, "node_id": "MDQ6VXNlcjEzMzI3MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1332722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murarth", "html_url": "https://github.com/murarth", "followers_url": "https://api.github.com/users/murarth/followers", "following_url": "https://api.github.com/users/murarth/following{/other_user}", "gists_url": "https://api.github.com/users/murarth/gists{/gist_id}", "starred_url": "https://api.github.com/users/murarth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murarth/subscriptions", "organizations_url": "https://api.github.com/users/murarth/orgs", "repos_url": "https://api.github.com/users/murarth/repos", "events_url": "https://api.github.com/users/murarth/events{/privacy}", "received_events_url": "https://api.github.com/users/murarth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "murarth", "id": 1332722, "node_id": "MDQ6VXNlcjEzMzI3MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1332722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murarth", "html_url": "https://github.com/murarth", "followers_url": "https://api.github.com/users/murarth/followers", "following_url": "https://api.github.com/users/murarth/following{/other_user}", "gists_url": "https://api.github.com/users/murarth/gists{/gist_id}", "starred_url": "https://api.github.com/users/murarth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murarth/subscriptions", "organizations_url": "https://api.github.com/users/murarth/orgs", "repos_url": "https://api.github.com/users/murarth/repos", "events_url": "https://api.github.com/users/murarth/events{/privacy}", "received_events_url": "https://api.github.com/users/murarth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d61bb3b497e3e0c788315dd8756f3dc18060c69", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d61bb3b497e3e0c788315dd8756f3dc18060c69", "html_url": "https://github.com/rust-lang/rust/commit/0d61bb3b497e3e0c788315dd8756f3dc18060c69"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "04f540c81ae0a4b4d0d6d215e0da9d5e623a8594", "filename": "src/libsyntax/errors/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0d5f474f30563383aa0c72ec84d3f2c26fa1c348/src%2Flibsyntax%2Ferrors%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5f474f30563383aa0c72ec84d3f2c26fa1c348/src%2Flibsyntax%2Ferrors%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ferrors%2Fmod.rs?ref=0d5f474f30563383aa0c72ec84d3f2c26fa1c348", "patch": "@@ -311,6 +311,14 @@ impl<'a> DiagnosticBuilder<'a> {\n         self\n     }\n \n+    pub fn message(&self) -> &str {\n+        &self.message\n+    }\n+\n+    pub fn level(&self) -> Level {\n+        self.level\n+    }\n+\n     /// Convenience function for internal use, clients should use one of the\n     /// struct_* methods on Handler.\n     fn new(emitter: &'a RefCell<Box<Emitter>>,"}]}