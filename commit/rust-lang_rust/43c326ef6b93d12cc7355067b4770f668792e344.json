{"sha": "43c326ef6b93d12cc7355067b4770f668792e344", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzYzMyNmVmNmI5M2QxMmNjNzM1NTA2N2I0NzcwZjY2ODc5MmUzNDQ=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-08-14T09:55:47Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-08-14T09:55:47Z"}, "message": "Followup to PR #16477: a run-pass regression test for Issue #15750.", "tree": {"sha": "5ea3aa08d5d1d0d214f83d6eb888e5fda941124b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ea3aa08d5d1d0d214f83d6eb888e5fda941124b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43c326ef6b93d12cc7355067b4770f668792e344", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43c326ef6b93d12cc7355067b4770f668792e344", "html_url": "https://github.com/rust-lang/rust/commit/43c326ef6b93d12cc7355067b4770f668792e344", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43c326ef6b93d12cc7355067b4770f668792e344/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "385c39a77b238df9371ee8bccc768b8d39258edd", "url": "https://api.github.com/repos/rust-lang/rust/commits/385c39a77b238df9371ee8bccc768b8d39258edd", "html_url": "https://github.com/rust-lang/rust/commit/385c39a77b238df9371ee8bccc768b8d39258edd"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "b62832066766653ed6f819469f7e353b77421bb2", "filename": "src/test/auxiliary/macro_crate_test.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/43c326ef6b93d12cc7355067b4770f668792e344/src%2Ftest%2Fauxiliary%2Fmacro_crate_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43c326ef6b93d12cc7355067b4770f668792e344/src%2Ftest%2Fauxiliary%2Fmacro_crate_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fmacro_crate_test.rs?ref=43c326ef6b93d12cc7355067b4770f668792e344", "patch": "@@ -19,6 +19,7 @@ use syntax::ast::{TokenTree, Item, MetaItem};\n use syntax::codemap::Span;\n use syntax::ext::base::*;\n use syntax::parse::token;\n+use syntax::parse;\n use rustc::plugin::Registry;\n \n use std::gc::{Gc, GC};\n@@ -32,6 +33,7 @@ macro_rules! unexported_macro (() => (3i))\n pub fn plugin_registrar(reg: &mut Registry) {\n     reg.register_macro(\"make_a_1\", expand_make_a_1);\n     reg.register_macro(\"forged_ident\", expand_forged_ident);\n+    reg.register_macro(\"identity\", expand_identity);\n     reg.register_syntax_extension(\n         token::intern(\"into_foo\"),\n         ItemModifier(expand_into_foo));\n@@ -45,6 +47,16 @@ fn expand_make_a_1(cx: &mut ExtCtxt, sp: Span, tts: &[TokenTree])\n     MacExpr::new(quote_expr!(cx, 1i))\n }\n \n+// See Issue #15750\n+fn expand_identity(cx: &mut ExtCtxt, _span: Span, tts: &[TokenTree])\n+                   -> Box<MacResult> {\n+    // Parse an expression and emit it unchanged.\n+    let mut parser = parse::new_parser_from_tts(cx.parse_sess(),\n+        cx.cfg(), Vec::from_slice(tts));\n+    let expr = parser.parse_expr();\n+    MacExpr::new(quote_expr!(&mut *cx, $expr))\n+}\n+\n fn expand_into_foo(cx: &mut ExtCtxt, sp: Span, attr: Gc<MetaItem>, it: Gc<Item>)\n                    -> Gc<Item> {\n     box(GC) Item {"}, {"sha": "0afd76e1659c48aefe9aac85d1950ea8fc9fa837", "filename": "src/test/run-pass-fulldeps/macro-crate-does-hygiene-work.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/43c326ef6b93d12cc7355067b4770f668792e344/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-does-hygiene-work.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43c326ef6b93d12cc7355067b4770f668792e344/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-does-hygiene-work.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-does-hygiene-work.rs?ref=43c326ef6b93d12cc7355067b4770f668792e344", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:macro_crate_test.rs\n+// ignore-stage1\n+\n+// Issue #15750: a macro that internally parses its input and then\n+// uses `quote_expr!` to rearrange it should be hygiene-preserving.\n+\n+#![feature(phase)]\n+\n+#[phase(plugin)]\n+extern crate macro_crate_test;\n+\n+fn main() {\n+    let x = 3i;\n+    assert_eq!(3, identity!(x));\n+    assert_eq!(6, identity!(x+x));\n+    let x = 4i;\n+    assert_eq!(4, identity!(x));\n+}"}]}