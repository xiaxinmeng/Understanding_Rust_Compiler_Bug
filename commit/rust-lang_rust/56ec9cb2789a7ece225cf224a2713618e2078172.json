{"sha": "56ec9cb2789a7ece225cf224a2713618e2078172", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2ZWM5Y2IyNzg5YTdlY2UyMjVjZjIyNGEyNzEzNjE4ZTIwNzgxNzI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-20T18:29:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-20T18:29:40Z"}, "message": "rt: Run yet more task_start_wrapper cleanup on the C stack", "tree": {"sha": "0e1d41f71642779aed5ad87965f9bb7f0472b781", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e1d41f71642779aed5ad87965f9bb7f0472b781"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56ec9cb2789a7ece225cf224a2713618e2078172", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56ec9cb2789a7ece225cf224a2713618e2078172", "html_url": "https://github.com/rust-lang/rust/commit/56ec9cb2789a7ece225cf224a2713618e2078172", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56ec9cb2789a7ece225cf224a2713618e2078172/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28b825d8469c5b6f92f367cb4aae2ea2607bc886", "url": "https://api.github.com/repos/rust-lang/rust/commits/28b825d8469c5b6f92f367cb4aae2ea2607bc886", "html_url": "https://github.com/rust-lang/rust/commit/28b825d8469c5b6f92f367cb4aae2ea2607bc886"}], "stats": {"total": 50, "additions": 33, "deletions": 17}, "files": [{"sha": "23bd6647a04825ba92c2ce36d495152b5d22034e", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 33, "deletions": 17, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/56ec9cb2789a7ece225cf224a2713618e2078172/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/56ec9cb2789a7ece225cf224a2713618e2078172/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=56ec9cb2789a7ece225cf224a2713618e2078172", "patch": "@@ -268,25 +268,18 @@ struct rust_closure_env {\n     type_desc *td;\n };\n \n-// This runs on the Rust stack\n-extern \"C\" CDECL\n-void task_start_wrapper(spawn_args *a)\n-{\n-    rust_task *task = a->task;\n-    int rval = 42;\n+struct cleanup_args {\n+    spawn_args *spargs;\n+    bool failed;\n+};\n \n-    bool failed = false;\n-    try {\n-        a->f(&rval, a->a3, a->a4);\n-    } catch (rust_task *ex) {\n-        A(task->sched, ex == task,\n-          \"Expected this task to be thrown for unwinding\");\n-        failed = true;\n-    }\n+void\n+cleanup_task(cleanup_args *args) {\n+    spawn_args *a = args->spargs;\n+    bool failed = args->failed;\n+    rust_task *task = a->task;\n \n-    // We're on the Rust stack and the cycle collector may recurse arbitrarily\n-    // deep, so switch to the C stack\n-    task->sched->c_context.call_shim_on_c_stack(task, (void*)cc::do_cc);\n+    cc::do_cc(task);\n \n     rust_closure_env* env = (rust_closure_env*)a->a3;\n     if(env) {\n@@ -313,6 +306,29 @@ void task_start_wrapper(spawn_args *a)\n         A(task->sched, false, \"Shouldn't happen\");\n #endif\n     }\n+}\n+\n+// This runs on the Rust stack\n+extern \"C\" CDECL\n+void task_start_wrapper(spawn_args *a)\n+{\n+    rust_task *task = a->task;\n+    int rval = 42;\n+\n+    bool failed = false;\n+    try {\n+        a->f(&rval, a->a3, a->a4);\n+    } catch (rust_task *ex) {\n+        A(task->sched, ex == task,\n+          \"Expected this task to be thrown for unwinding\");\n+        failed = true;\n+    }\n+\n+    cleanup_args ca = {a, failed};\n+\n+    // The cleanup work needs lots of stack\n+    task->sched->c_context.call_shim_on_c_stack(&ca, (void*)cleanup_task);\n+\n     task->ctx.next->swap(task->ctx);\n }\n "}]}