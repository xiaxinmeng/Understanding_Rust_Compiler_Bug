{"sha": "32b3d3e9ebd8dbc1073445b3be9676da85b6410c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYjNkM2U5ZWJkOGRiYzEwNzM0NDViM2JlOTY3NmRhODViNjQxMGM=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-05-03T20:03:01Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-05-03T20:03:53Z"}, "message": "tidy", "tree": {"sha": "d8e323b902a28172e5c5e8291473aaf70bb7f242", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8e323b902a28172e5c5e8291473aaf70bb7f242"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32b3d3e9ebd8dbc1073445b3be9676da85b6410c", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32b3d3e9ebd8dbc1073445b3be9676da85b6410c", "html_url": "https://github.com/rust-lang/rust/commit/32b3d3e9ebd8dbc1073445b3be9676da85b6410c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32b3d3e9ebd8dbc1073445b3be9676da85b6410c/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13df2ea69c332d7a20c7ab394020430a09dad507", "url": "https://api.github.com/repos/rust-lang/rust/commits/13df2ea69c332d7a20c7ab394020430a09dad507", "html_url": "https://github.com/rust-lang/rust/commit/13df2ea69c332d7a20c7ab394020430a09dad507"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "a139a26a597fc2fcfb9f01b27322f465b396f933", "filename": "src/librustc/middle/typeck/check/_match.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/32b3d3e9ebd8dbc1073445b3be9676da85b6410c/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32b3d3e9ebd8dbc1073445b3be9676da85b6410c/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs?ref=32b3d3e9ebd8dbc1073445b3be9676da85b6410c", "patch": "@@ -120,12 +120,12 @@ pub fn check_pat_variant(pcx: &pat_ctxt, pat: @ast::pat, path: @ast::Path,\n                     let enum_tpt = ty::lookup_item_type(tcx, enm);\n                     instantiate_path(pcx.fcx, path, enum_tpt, pat.span, pat.id,\n                                      pcx.block_region);\n-                    \n+\n                     // check that the type of the value being matched is a subtype\n                     // of the type of the pattern:\n                     let pat_ty = fcx.node_ty(pat.id);\n                     demand::subtype(fcx, pat.span, expected, pat_ty);\n-                    \n+\n                     // Get the expected types of the arguments.\n                     arg_types = {\n                         let vinfo =\n@@ -143,18 +143,18 @@ pub fn check_pat_variant(pcx: &pat_ctxt, pat: @ast::pat, path: @ast::Path,\n                             }\n                         })\n                     };\n-                    \n+\n                     kind_name = \"variant\";\n                 }\n                 None => {\n                     let resolved_expected =\n                         fcx.infcx().ty_to_str(fcx.infcx().resolve_type_vars_if_possible(expected));\n                     fcx.infcx().type_error_message_str(pat.span,\n                                                        |actual| {\n-                                                           fmt!(\"mismatched types: expected `%s` but found %s\",\n-                                                                resolved_expected, actual)},\n-                                                       ~\"a structure pattern\",\n-                                                       None);\n+                        fmt!(\"mismatched types: expected `%s` but found %s\",\n+                             resolved_expected, actual)},\n+                             ~\"a structure pattern\",\n+                             None);\n                     fcx.write_error(pat.id);\n                     kind_name = \"[error]\";\n                     arg_types = (copy subpats).get_or_default(~[]).map(|_|"}]}