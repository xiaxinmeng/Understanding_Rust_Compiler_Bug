{"sha": "e8c29959cde82359283ba4b2e705f7c691538414", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4YzI5OTU5Y2RlODIzNTkyODNiYTRiMmU3MDVmN2M2OTE1Mzg0MTQ=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-07-31T12:30:46Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-07-31T12:30:46Z"}, "message": "Sort NLL error diagnostics by span in an attempt to make them match source order\n(and thus, hopefully, more closely match user expectation).", "tree": {"sha": "b739d1c73e9a7f3294dd5581210cd6c568657f3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b739d1c73e9a7f3294dd5581210cd6c568657f3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8c29959cde82359283ba4b2e705f7c691538414", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8c29959cde82359283ba4b2e705f7c691538414", "html_url": "https://github.com/rust-lang/rust/commit/e8c29959cde82359283ba4b2e705f7c691538414", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8c29959cde82359283ba4b2e705f7c691538414/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54628c8ea844956f3f4f416b82067c634eb09f7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/54628c8ea844956f3f4f416b82067c634eb09f7b", "html_url": "https://github.com/rust-lang/rust/commit/54628c8ea844956f3f4f416b82067c634eb09f7b"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "3b767bfdd40ec88451a147c926ab9e0aa8eb7c8d", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8c29959cde82359283ba4b2e705f7c691538414/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8c29959cde82359283ba4b2e705f7c691538414/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=e8c29959cde82359283ba4b2e705f7c691538414", "patch": "@@ -331,6 +331,10 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n     }\n \n     if mbcx.errors_buffer.len() > 0 {\n+        mbcx.errors_buffer.sort_by(|diag1, diag2| {\n+            diag1.span.primary_span().cmp(&diag2.span.primary_span())\n+        });\n+\n         if tcx.migrate_borrowck() {\n             match tcx.borrowck(def_id).signalled_any_error {\n                 SignalledError::NoErrorsSeen => {"}]}