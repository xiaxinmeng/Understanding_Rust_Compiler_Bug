{"sha": "e6ce3ef80aad6df7e9971d126bb22619ab34927e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2Y2UzZWY4MGFhZDZkZjdlOTk3MWQxMjZiYjIyNjE5YWIzNDkyN2U=", "commit": {"author": {"name": "wangxiangqing", "email": "wangxiangqing@bytedance.com", "date": "2019-10-13T04:59:23Z"}, "committer": {"name": "wangxiangqing", "email": "wangxiangqing@bytedance.com", "date": "2019-10-13T05:07:32Z"}, "message": "Collect occurrences of  for mismatched braces diagnostic\n\nChange-Id: I20ba0b62308370ee961141fa1aefc4b9c9f0cb3a", "tree": {"sha": "ebfa87b7aac2380e52b5d6ef779e4a9ddaea23aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebfa87b7aac2380e52b5d6ef779e4a9ddaea23aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6ce3ef80aad6df7e9971d126bb22619ab34927e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6ce3ef80aad6df7e9971d126bb22619ab34927e", "html_url": "https://github.com/rust-lang/rust/commit/e6ce3ef80aad6df7e9971d126bb22619ab34927e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6ce3ef80aad6df7e9971d126bb22619ab34927e/comments", "author": {"login": "XiangQingW", "id": 7948384, "node_id": "MDQ6VXNlcjc5NDgzODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7948384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XiangQingW", "html_url": "https://github.com/XiangQingW", "followers_url": "https://api.github.com/users/XiangQingW/followers", "following_url": "https://api.github.com/users/XiangQingW/following{/other_user}", "gists_url": "https://api.github.com/users/XiangQingW/gists{/gist_id}", "starred_url": "https://api.github.com/users/XiangQingW/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XiangQingW/subscriptions", "organizations_url": "https://api.github.com/users/XiangQingW/orgs", "repos_url": "https://api.github.com/users/XiangQingW/repos", "events_url": "https://api.github.com/users/XiangQingW/events{/privacy}", "received_events_url": "https://api.github.com/users/XiangQingW/received_events", "type": "User", "site_admin": false}, "committer": {"login": "XiangQingW", "id": 7948384, "node_id": "MDQ6VXNlcjc5NDgzODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7948384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XiangQingW", "html_url": "https://github.com/XiangQingW", "followers_url": "https://api.github.com/users/XiangQingW/followers", "following_url": "https://api.github.com/users/XiangQingW/following{/other_user}", "gists_url": "https://api.github.com/users/XiangQingW/gists{/gist_id}", "starred_url": "https://api.github.com/users/XiangQingW/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XiangQingW/subscriptions", "organizations_url": "https://api.github.com/users/XiangQingW/orgs", "repos_url": "https://api.github.com/users/XiangQingW/repos", "events_url": "https://api.github.com/users/XiangQingW/events{/privacy}", "received_events_url": "https://api.github.com/users/XiangQingW/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80b861bed17ba2ce001911f78a5316f56466642f", "url": "https://api.github.com/repos/rust-lang/rust/commits/80b861bed17ba2ce001911f78a5316f56466642f", "html_url": "https://github.com/rust-lang/rust/commit/80b861bed17ba2ce001911f78a5316f56466642f"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "fa494db2f9f363c678df3f902892d1962f183e86", "filename": "src/libsyntax/parse/lexer/tokentrees.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e6ce3ef80aad6df7e9971d126bb22619ab34927e/src%2Flibsyntax%2Fparse%2Flexer%2Ftokentrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6ce3ef80aad6df7e9971d126bb22619ab34927e/src%2Flibsyntax%2Fparse%2Flexer%2Ftokentrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Ftokentrees.rs?ref=e6ce3ef80aad6df7e9971d126bb22619ab34927e", "patch": "@@ -1,3 +1,4 @@\n+use rustc_data_structures::fx::FxHashMap;\n use syntax_pos::Span;\n \n use crate::print::pprust::token_to_string;\n@@ -16,6 +17,7 @@ impl<'a> StringReader<'a> {\n             unmatched_braces: Vec::new(),\n             matching_delim_spans: Vec::new(),\n             last_unclosed_found_span: None,\n+            last_delim_empty_block_spans: FxHashMap::default()\n         };\n         let res = tt_reader.parse_all_token_trees();\n         (res, tt_reader.unmatched_braces)\n@@ -34,6 +36,7 @@ struct TokenTreesReader<'a> {\n     /// Used only for error recovery when arriving to EOF with mismatched braces.\n     matching_delim_spans: Vec<(token::DelimToken, Span, Span)>,\n     last_unclosed_found_span: Option<Span>,\n+    last_delim_empty_block_spans: FxHashMap<token::DelimToken, Span>\n }\n \n impl<'a> TokenTreesReader<'a> {\n@@ -121,13 +124,20 @@ impl<'a> TokenTreesReader<'a> {\n                     // Correct delimiter.\n                     token::CloseDelim(d) if d == delim => {\n                         let (open_brace, open_brace_span) = self.open_braces.pop().unwrap();\n+                        let close_brace_span = self.token.span;\n+\n+                        if close_brace_span.lo() == open_brace_span.hi() {\n+                            let empty_block_span = open_brace_span.to(close_brace_span);\n+                            self.last_delim_empty_block_spans.insert(delim, empty_block_span);\n+                        }\n+\n                         if self.open_braces.len() == 0 {\n                             // Clear up these spans to avoid suggesting them as we've found\n                             // properly matched delimiters so far for an entire block.\n                             self.matching_delim_spans.clear();\n                         } else {\n                             self.matching_delim_spans.push(\n-                                (open_brace, open_brace_span, self.token.span),\n+                                (open_brace, open_brace_span, close_brace_span),\n                             );\n                         }\n                         // Parse the close delimiter.\n@@ -193,13 +203,17 @@ impl<'a> TokenTreesReader<'a> {\n                     tts.into()\n                 ).into())\n             },\n-            token::CloseDelim(_) => {\n+            token::CloseDelim(delim) => {\n                 // An unexpected closing delimiter (i.e., there is no\n                 // matching opening delimiter).\n                 let token_str = token_to_string(&self.token);\n                 let msg = format!(\"unexpected close delimiter: `{}`\", token_str);\n                 let mut err = self.string_reader.sess.span_diagnostic\n                     .struct_span_err(self.token.span, &msg);\n+\n+                if let Some(span) = self.last_delim_empty_block_spans.remove(&delim) {\n+                    err.span_label(span, \"this block is empty, you might have not meant to close it\");\n+                }\n                 err.span_label(self.token.span, \"unexpected close delimiter\");\n                 Err(err)\n             },"}, {"sha": "6038bcae5aefb9294e45a426bc2783d3ac0e4529", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6ce3ef80aad6df7e9971d126bb22619ab34927e/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6ce3ef80aad6df7e9971d126bb22619ab34927e/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=e6ce3ef80aad6df7e9971d126bb22619ab34927e", "patch": "@@ -36,7 +36,7 @@ pub enum BinOpToken {\n }\n \n /// A delimiter token.\n-#[derive(Clone, PartialEq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\n+#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\n pub enum DelimToken {\n     /// A round parenthesis (i.e., `(` or `)`).\n     Paren,"}, {"sha": "bcc95c09e1e9910f155661d7841d0e7b8d9c118d", "filename": "src/test/ui/parser/mismatched-delim-brace-empty-block.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e6ce3ef80aad6df7e9971d126bb22619ab34927e/src%2Ftest%2Fui%2Fparser%2Fmismatched-delim-brace-empty-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6ce3ef80aad6df7e9971d126bb22619ab34927e/src%2Ftest%2Fui%2Fparser%2Fmismatched-delim-brace-empty-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-delim-brace-empty-block.rs?ref=e6ce3ef80aad6df7e9971d126bb22619ab34927e", "patch": "@@ -0,0 +1,3 @@\n+fn main() {}\n+    let _ = ();\n+} //~ ERROR unexpected close delimiter"}, {"sha": "82fe8930c325fcf2436fa6c243a5b7f6ad827144", "filename": "src/test/ui/parser/mismatched-delim-brace-empty-block.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e6ce3ef80aad6df7e9971d126bb22619ab34927e/src%2Ftest%2Fui%2Fparser%2Fmismatched-delim-brace-empty-block.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6ce3ef80aad6df7e9971d126bb22619ab34927e/src%2Ftest%2Fui%2Fparser%2Fmismatched-delim-brace-empty-block.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmismatched-delim-brace-empty-block.stderr?ref=e6ce3ef80aad6df7e9971d126bb22619ab34927e", "patch": "@@ -0,0 +1,11 @@\n+error: unexpected close delimiter: `}`\n+  --> $DIR/mismatched-delim-brace-empty-block.rs:3:1\n+   |\n+LL | fn main() {}\n+   |           -- this block is empty, you might have not meant to close it\n+LL |     let _ = ();\n+LL | }\n+   | ^ unexpected close delimiter\n+\n+error: aborting due to previous error\n+"}]}