{"sha": "87055a68c3194db212456f99ece080728a5fc2f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3MDU1YTY4YzMxOTRkYjIxMjQ1NmY5OWVjZTA4MDcyOGE1ZmMyZjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-30T10:25:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-30T10:25:23Z"}, "message": "Auto merge of #27371 - Gankro:str-clone, r=alexcrichton\n\nThis is a minor [breaking-change], as it changes what\r\n`boxed_str.to_owned()` does (previously it would deref to `&str` and\r\ncall `to_owned` on that to get a `String`). However `Box<str>` is such an\r\nexceptionally rare type that this is not expected to be a serious\r\nconcern. Also a `Box<str>` can be freely converted to a `String` to\r\nobtain the previous result anyway.", "tree": {"sha": "9908d4b080e8dac63662d25e5f498ae837a41456", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9908d4b080e8dac63662d25e5f498ae837a41456"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87055a68c3194db212456f99ece080728a5fc2f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87055a68c3194db212456f99ece080728a5fc2f8", "html_url": "https://github.com/rust-lang/rust/commit/87055a68c3194db212456f99ece080728a5fc2f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87055a68c3194db212456f99ece080728a5fc2f8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f97a82fd435b2f6e62d9f76a15ea4aeb6933b85c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f97a82fd435b2f6e62d9f76a15ea4aeb6933b85c", "html_url": "https://github.com/rust-lang/rust/commit/f97a82fd435b2f6e62d9f76a15ea4aeb6933b85c"}, {"sha": "3e954a8cb2fd094d79713059d83d37b2daa7b396", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e954a8cb2fd094d79713059d83d37b2daa7b396", "html_url": "https://github.com/rust-lang/rust/commit/3e954a8cb2fd094d79713059d83d37b2daa7b396"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "9420a88bade73cbb1cb16956745bd853baa2d50a", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/87055a68c3194db212456f99ece080728a5fc2f8/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87055a68c3194db212456f99ece080728a5fc2f8/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=87055a68c3194db212456f99ece080728a5fc2f8", "patch": "@@ -325,6 +325,19 @@ impl<T: Clone> Clone for Box<T> {\n     }\n }\n \n+\n+#[stable(feature = \"box_slice_clone\", since = \"1.3.0\")]\n+impl Clone for Box<str> {\n+    fn clone(&self) -> Self {\n+        let len = self.len();\n+        let buf = RawVec::with_capacity(len);\n+        unsafe {\n+            ptr::copy_nonoverlapping(self.as_ptr(), buf.ptr(), len);\n+            mem::transmute(buf.into_box()) // bytes to str ~magic\n+        }\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized + PartialEq> PartialEq for Box<T> {\n     #[inline]"}, {"sha": "0e9b01e5c233e93218773edff6a6af61d6cfcff2", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/87055a68c3194db212456f99ece080728a5fc2f8/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87055a68c3194db212456f99ece080728a5fc2f8/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=87055a68c3194db212456f99ece080728a5fc2f8", "patch": "@@ -92,6 +92,7 @@\n #![feature(unsafe_no_drop_flag, filling_drop)]\n #![feature(unsize)]\n #![feature(core_slice_ext)]\n+#![feature(core_str_ext)]\n \n #![cfg_attr(test, feature(test, alloc, rustc_private, box_raw))]\n #![cfg_attr(all(not(feature = \"external_funcs\"), not(feature = \"external_crate\")),"}, {"sha": "4cccb29b41cdd31a90b99ad4071705c8fba9bbc6", "filename": "src/libcollectionstest/str.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/87055a68c3194db212456f99ece080728a5fc2f8/src%2Flibcollectionstest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87055a68c3194db212456f99ece080728a5fc2f8/src%2Flibcollectionstest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstr.rs?ref=87055a68c3194db212456f99ece080728a5fc2f8", "patch": "@@ -1766,6 +1766,14 @@ fn test_into_string() {\n     assert_eq!(string.clone().into_boxed_slice().into_string(), string);\n }\n \n+#[test]\n+fn test_box_slice_clone() {\n+    let data = String::from(\"hello HELLO hello HELLO yes YES 5 \u4e2d\u00e4\u534e!!!\");\n+    let data2 = data.clone().into_boxed_slice().clone().into_string();\n+\n+    assert_eq!(data, data2);\n+}\n+\n mod pattern {\n     use std::str::pattern::Pattern;\n     use std::str::pattern::{Searcher, ReverseSearcher};"}]}