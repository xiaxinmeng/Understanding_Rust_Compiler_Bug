{"sha": "79575a1a8e55d767c63958f5970e6858b8e8e176", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5NTc1YTFhOGU1NWQ3NjdjNjM5NThmNTk3MGU2ODU4YjhlOGUxNzY=", "commit": {"author": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-05-29T16:54:31Z"}, "committer": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-05-29T16:57:12Z"}, "message": "Mention \"null pointer optimization\" in option docs.", "tree": {"sha": "71f8bbb2376175c0fa8c3c51d8b37ae5932f888a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71f8bbb2376175c0fa8c3c51d8b37ae5932f888a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79575a1a8e55d767c63958f5970e6858b8e8e176", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79575a1a8e55d767c63958f5970e6858b8e8e176", "html_url": "https://github.com/rust-lang/rust/commit/79575a1a8e55d767c63958f5970e6858b8e8e176", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79575a1a8e55d767c63958f5970e6858b8e8e176/comments", "author": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f75dbfa69ba8508fa7765305f75cd96dff06078", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f75dbfa69ba8508fa7765305f75cd96dff06078", "html_url": "https://github.com/rust-lang/rust/commit/9f75dbfa69ba8508fa7765305f75cd96dff06078"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "4e7afca6a4930e3115136e678e875108dc951968", "filename": "library/core/src/option.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79575a1a8e55d767c63958f5970e6858b8e8e176/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79575a1a8e55d767c63958f5970e6858b8e8e176/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=79575a1a8e55d767c63958f5970e6858b8e8e176", "patch": "@@ -83,6 +83,8 @@\n //! * [`ptr::NonNull<U>`]\n //! * `#[repr(transparent)]` struct around one of the types in this list.\n //!\n+//! This is called the \"null pointer optimization\" or NPO.\n+//!\n //! It is further guaranteed that, for the cases above, one can\n //! [`mem::transmute`] from all valid values of `T` to `Option<T>` and\n //! from `Some::<T>(_)` to `T` (but transmuting `None::<T>` to `T`"}]}