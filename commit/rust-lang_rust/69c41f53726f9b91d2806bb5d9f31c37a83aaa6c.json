{"sha": "69c41f53726f9b91d2806bb5d9f31c37a83aaa6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5YzQxZjUzNzI2ZjliOTFkMjgwNmJiNWQ5ZjMxYzM3YTgzYWFhNmM=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-21T11:42:42Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-21T11:42:42Z"}, "message": "Write the correct size for PrimVall::IntegerPtr.", "tree": {"sha": "481b0dbd42c57d4cd59d76c25501fa9be992a750", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/481b0dbd42c57d4cd59d76c25501fa9be992a750"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69c41f53726f9b91d2806bb5d9f31c37a83aaa6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69c41f53726f9b91d2806bb5d9f31c37a83aaa6c", "html_url": "https://github.com/rust-lang/rust/commit/69c41f53726f9b91d2806bb5d9f31c37a83aaa6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69c41f53726f9b91d2806bb5d9f31c37a83aaa6c/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "600ff26e659b306a36788b67de6e9c6e6e774ae7", "url": "https://api.github.com/repos/rust-lang/rust/commits/600ff26e659b306a36788b67de6e9c6e6e774ae7", "html_url": "https://github.com/rust-lang/rust/commit/600ff26e659b306a36788b67de6e9c6e6e774ae7"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "72dd0d9b1e9edffea3188837afa8aaa0afdc6e8f", "filename": "src/memory.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/69c41f53726f9b91d2806bb5d9f31c37a83aaa6c/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69c41f53726f9b91d2806bb5d9f31c37a83aaa6c/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=69c41f53726f9b91d2806bb5d9f31c37a83aaa6c", "patch": "@@ -201,6 +201,7 @@ impl Memory {\n     }\n \n     pub fn write_primval(&mut self, ptr: Pointer, val: PrimVal) -> EvalResult<()> {\n+        let pointer_size = self.pointer_size;\n         match val {\n             PrimVal::Bool(b) => self.write_bool(ptr, b),\n             PrimVal::I8(n)   => self.write_int(ptr, n as i64, 1),\n@@ -210,7 +211,8 @@ impl Memory {\n             PrimVal::U8(n)   => self.write_uint(ptr, n as u64, 1),\n             PrimVal::U16(n)  => self.write_uint(ptr, n as u64, 2),\n             PrimVal::U32(n)  => self.write_uint(ptr, n as u64, 4),\n-            PrimVal::U64(n) | PrimVal::IntegerPtr(n) => self.write_uint(ptr, n as u64, 8),\n+            PrimVal::U64(n)  => self.write_uint(ptr, n as u64, 8),\n+            PrimVal::IntegerPtr(n) => self.write_uint(ptr, n as u64, pointer_size),\n             PrimVal::AbstractPtr(_p) => unimplemented!(),\n         }\n     }"}]}