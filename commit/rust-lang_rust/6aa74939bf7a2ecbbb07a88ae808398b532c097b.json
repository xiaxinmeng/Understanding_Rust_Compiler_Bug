{"sha": "6aa74939bf7a2ecbbb07a88ae808398b532c097b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhYTc0OTM5YmY3YTJlY2JiYjA3YTg4YWU4MDgzOThiNTMyYzA5N2I=", "commit": {"author": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-08-10T22:24:40Z"}, "committer": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-09-20T10:42:24Z"}, "message": "only move access_levels/external_traits after early passes", "tree": {"sha": "8ed949ad0ab2820389eb3676dc00cea62d7c4703", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ed949ad0ab2820389eb3676dc00cea62d7c4703"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6aa74939bf7a2ecbbb07a88ae808398b532c097b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6aa74939bf7a2ecbbb07a88ae808398b532c097b", "html_url": "https://github.com/rust-lang/rust/commit/6aa74939bf7a2ecbbb07a88ae808398b532c097b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6aa74939bf7a2ecbbb07a88ae808398b532c097b/comments", "author": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "457efc111a691135356232245d8855dc006dc4e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/457efc111a691135356232245d8855dc006dc4e1", "html_url": "https://github.com/rust-lang/rust/commit/457efc111a691135356232245d8855dc006dc4e1"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "238a2bd3ba571b74c0cfc8ffd812efe95fbc6b02", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6aa74939bf7a2ecbbb07a88ae808398b532c097b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6aa74939bf7a2ecbbb07a88ae808398b532c097b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=6aa74939bf7a2ecbbb07a88ae808398b532c097b", "patch": "@@ -209,18 +209,15 @@ impl<'a, 'tcx, 'rcx, 'cstore> Clean<Crate> for visit_ast::RustdocVisitor<'a, 'tc\n             }));\n         }\n \n-        let mut access_levels = cx.access_levels.borrow_mut();\n-        let mut external_traits = cx.external_traits.borrow_mut();\n-\n         Crate {\n             name,\n             version: None,\n             src,\n             module: Some(module),\n             externs,\n             primitives,\n-            access_levels: Arc::new(mem::replace(&mut access_levels, Default::default())),\n-            external_traits: mem::replace(&mut external_traits, Default::default()),\n+            access_levels: Arc::new(Default::default()),\n+            external_traits: Default::default(),\n             masked_crates,\n         }\n     }"}, {"sha": "d6cdc48901cc841e7144a30829d0894544574a36", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6aa74939bf7a2ecbbb07a88ae808398b532c097b/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6aa74939bf7a2ecbbb07a88ae808398b532c097b/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=6aa74939bf7a2ecbbb07a88ae808398b532c097b", "patch": "@@ -41,6 +41,7 @@ use std::cell::RefCell;\n use std::mem;\n use rustc_data_structures::sync::{self, Lrc};\n use std::rc::Rc;\n+use std::sync::Arc;\n use std::path::PathBuf;\n \n use visit_ast::RustdocVisitor;\n@@ -599,6 +600,9 @@ pub fn run_core(search_paths: SearchPaths,\n \n             ctxt.sess().abort_if_errors();\n \n+            krate.access_levels = Arc::new(ctxt.access_levels.into_inner());\n+            krate.external_traits = ctxt.external_traits.into_inner();\n+\n             (krate, ctxt.renderinfo.into_inner(), passes)\n         }), &sess)\n     })"}, {"sha": "0ee1657f21516f67b05f13c58acb9eefb22e13e1", "filename": "src/librustdoc/passes/collect_trait_impls.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6aa74939bf7a2ecbbb07a88ae808398b532c097b/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6aa74939bf7a2ecbbb07a88ae808398b532c097b/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs?ref=6aa74939bf7a2ecbbb07a88ae808398b532c097b", "patch": "@@ -88,12 +88,5 @@ pub fn collect_trait_impls(mut krate: Crate, cx: &DocContext) -> Crate {\n         panic!(\"collect-trait-impls can't run\");\n     }\n \n-    // pulling in the impls puts their trait info into the DocContext, but that's already been\n-    // drained by now, so stuff that info into the Crate so the rendering can pick it up\n-    let mut external_traits = cx.external_traits.borrow_mut();\n-    for (did, trait_) in external_traits.drain() {\n-        krate.external_traits.entry(did).or_insert(trait_);\n-    }\n-\n     krate\n }"}, {"sha": "4fa5943faca0783ea7cf3d75d43efbc7e4890038", "filename": "src/librustdoc/passes/strip_private.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6aa74939bf7a2ecbbb07a88ae808398b532c097b/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6aa74939bf7a2ecbbb07a88ae808398b532c097b/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs?ref=6aa74939bf7a2ecbbb07a88ae808398b532c097b", "patch": "@@ -22,10 +22,10 @@ pub const STRIP_PRIVATE: Pass =\n \n /// Strip private items from the point of view of a crate or externally from a\n /// crate, specified by the `xcrate` flag.\n-pub fn strip_private(mut krate: clean::Crate, _: &DocContext) -> clean::Crate {\n+pub fn strip_private(mut krate: clean::Crate, cx: &DocContext) -> clean::Crate {\n     // This stripper collects all *retained* nodes.\n     let mut retained = DefIdSet();\n-    let access_levels = krate.access_levels.clone();\n+    let access_levels = cx.access_levels.borrow().clone();\n \n     // strip all private items\n     {"}]}