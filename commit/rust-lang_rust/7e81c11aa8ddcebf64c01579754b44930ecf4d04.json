{"sha": "7e81c11aa8ddcebf64c01579754b44930ecf4d04", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlODFjMTFhYThkZGNlYmY2NGMwMTU3OTc1NGI0NDkzMGVjZjRkMDQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-05T06:40:40Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-05T06:40:40Z"}, "message": "tweak swap_remove", "tree": {"sha": "f82e6afef895b5e0b0512c60dbf75077fec42cbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f82e6afef895b5e0b0512c60dbf75077fec42cbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e81c11aa8ddcebf64c01579754b44930ecf4d04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e81c11aa8ddcebf64c01579754b44930ecf4d04", "html_url": "https://github.com/rust-lang/rust/commit/7e81c11aa8ddcebf64c01579754b44930ecf4d04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e81c11aa8ddcebf64c01579754b44930ecf4d04/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bbaac357dd85092ed0fb822947df7a4d60c1db9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bbaac357dd85092ed0fb822947df7a4d60c1db9", "html_url": "https://github.com/rust-lang/rust/commit/5bbaac357dd85092ed0fb822947df7a4d60c1db9"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "aedb3724409fd7f4292059263f88335b43a4da65", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7e81c11aa8ddcebf64c01579754b44930ecf4d04/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e81c11aa8ddcebf64c01579754b44930ecf4d04/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=7e81c11aa8ddcebf64c01579754b44930ecf4d04", "patch": "@@ -963,14 +963,15 @@ impl<T> Vec<T> {\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn swap_remove(&mut self, index: usize) -> T {\n-        assert!(index < self.len);\n+        let len = self.len();\n+        assert!(index < len);\n         unsafe {\n             // We replace self[index] with the last element. Note that if the\n             // bounds check above succeeds there must be a last element (which\n             // can be self[index] itself).\n-            let last = ptr::read(self.as_ptr().add(self.len - 1));\n+            let last = ptr::read(self.as_ptr().add(len - 1));\n             let hole: *mut T = self.as_mut_ptr().add(index);\n-            self.len -= 1;\n+            self.set_len(len - 1);\n             ptr::replace(hole, last)\n         }\n     }"}]}