{"sha": "ef9c4b666f76cfaeea243760702d43719264f145", "node_id": "C_kwDOAAsO6NoAKGVmOWM0YjY2NmY3NmNmYWVlYTI0Mzc2MDcwMmQ0MzcxOTI2NGYxNDU", "commit": {"author": {"name": "k-nasa", "email": "htilcs1115@gmail.com", "date": "2021-10-13T12:03:01Z"}, "committer": {"name": "k-nasa", "email": "htilcs1115@gmail.com", "date": "2021-10-13T12:03:01Z"}, "message": "move test case", "tree": {"sha": "ce5bf373a7ca2e8c4d0dec8281840a7e4ea7277d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce5bf373a7ca2e8c4d0dec8281840a7e4ea7277d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef9c4b666f76cfaeea243760702d43719264f145", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef9c4b666f76cfaeea243760702d43719264f145", "html_url": "https://github.com/rust-lang/rust/commit/ef9c4b666f76cfaeea243760702d43719264f145", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef9c4b666f76cfaeea243760702d43719264f145/comments", "author": {"login": "k-nasa", "id": 23740172, "node_id": "MDQ6VXNlcjIzNzQwMTcy", "avatar_url": "https://avatars.githubusercontent.com/u/23740172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-nasa", "html_url": "https://github.com/k-nasa", "followers_url": "https://api.github.com/users/k-nasa/followers", "following_url": "https://api.github.com/users/k-nasa/following{/other_user}", "gists_url": "https://api.github.com/users/k-nasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-nasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-nasa/subscriptions", "organizations_url": "https://api.github.com/users/k-nasa/orgs", "repos_url": "https://api.github.com/users/k-nasa/repos", "events_url": "https://api.github.com/users/k-nasa/events{/privacy}", "received_events_url": "https://api.github.com/users/k-nasa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "k-nasa", "id": 23740172, "node_id": "MDQ6VXNlcjIzNzQwMTcy", "avatar_url": "https://avatars.githubusercontent.com/u/23740172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-nasa", "html_url": "https://github.com/k-nasa", "followers_url": "https://api.github.com/users/k-nasa/followers", "following_url": "https://api.github.com/users/k-nasa/following{/other_user}", "gists_url": "https://api.github.com/users/k-nasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-nasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-nasa/subscriptions", "organizations_url": "https://api.github.com/users/k-nasa/orgs", "repos_url": "https://api.github.com/users/k-nasa/repos", "events_url": "https://api.github.com/users/k-nasa/events{/privacy}", "received_events_url": "https://api.github.com/users/k-nasa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6a052f4078825ba307843df1770c92d96827075", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6a052f4078825ba307843df1770c92d96827075", "html_url": "https://github.com/rust-lang/rust/commit/a6a052f4078825ba307843df1770c92d96827075"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "f7b601d144a9d9642b5c300e3d2daeb591c5b781", "filename": "crates/ide_assists/src/handlers/replace_if_let_with_match.rs", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/ef9c4b666f76cfaeea243760702d43719264f145/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9c4b666f76cfaeea243760702d43719264f145/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs?ref=ef9c4b666f76cfaeea243760702d43719264f145", "patch": "@@ -574,6 +574,32 @@ fn main() {\n         )\n     }\n \n+    #[test]\n+    fn nested_type() {\n+        check_assist(\n+            replace_if_let_with_match,\n+            r#\"\n+//- minicore: result\n+fn foo(x: Result<i32, ()>) {\n+    let bar: Result<_, ()> = Ok(Some(1));\n+    $0if let Ok(Some(_)) = bar {\n+        ()\n+    } else {\n+        ()\n+    }\n+}\n+\"#,\n+            r#\"\n+fn foo(x: Result<i32, ()>) {\n+    let bar: Result<_, ()> = Ok(Some(1));\n+    match bar {\n+        Ok(Some(_)) => (),\n+        _ => (),\n+    }\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn test_replace_match_with_if_let_unwraps_simple_expressions() {\n         check_assist(\n@@ -885,32 +911,6 @@ fn foo() {\n         Bar(bar) => println!(\"bar {}\", bar),\n     }\n }\n-\"#,\n-        );\n-    }\n-\n-    #[test]\n-    fn nested_type() {\n-        check_assist(\n-            replace_if_let_with_match,\n-            r#\"\n-//- minicore: result\n-fn foo(x: Result<i32, ()>) {\n-    let bar: Result<_, ()> = Ok(Some(1));\n-    $0if let Ok(Some(_)) = bar {\n-        ()\n-    } else {\n-        ()\n-    }\n-}\n-\"#,\n-            r#\"\n-fn foo(x: Result<i32, ()>) {\n-    let bar: Result<_, ()> = Ok(Some(1));\n-    match bar {\n-        Ok(Some(_)) => (),\n-        _ => (),\n-    }\n \"#,\n         );\n     }"}]}