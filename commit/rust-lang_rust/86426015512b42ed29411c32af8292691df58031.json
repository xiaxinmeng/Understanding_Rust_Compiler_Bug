{"sha": "86426015512b42ed29411c32af8292691df58031", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2NDI2MDE1NTEyYjQyZWQyOTQxMWMzMmFmODI5MjY5MWRmNTgwMzE=", "commit": {"author": {"name": "Virgile Andreani", "email": "virgile.andreani@anbuco.fr", "date": "2014-01-28T22:40:36Z"}, "committer": {"name": "Virgile Andreani", "email": "virgile.andreani@anbuco.fr", "date": "2014-01-28T22:51:52Z"}, "message": "Rename OwnedCopyableVector to OwnedCloneableVector", "tree": {"sha": "e3401622619ce3854f257e897781e61e1bb39859", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3401622619ce3854f257e897781e61e1bb39859"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86426015512b42ed29411c32af8292691df58031", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86426015512b42ed29411c32af8292691df58031", "html_url": "https://github.com/rust-lang/rust/commit/86426015512b42ed29411c32af8292691df58031", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86426015512b42ed29411c32af8292691df58031/comments", "author": {"login": "Armavica", "id": 5855503, "node_id": "MDQ6VXNlcjU4NTU1MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5855503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Armavica", "html_url": "https://github.com/Armavica", "followers_url": "https://api.github.com/users/Armavica/followers", "following_url": "https://api.github.com/users/Armavica/following{/other_user}", "gists_url": "https://api.github.com/users/Armavica/gists{/gist_id}", "starred_url": "https://api.github.com/users/Armavica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Armavica/subscriptions", "organizations_url": "https://api.github.com/users/Armavica/orgs", "repos_url": "https://api.github.com/users/Armavica/repos", "events_url": "https://api.github.com/users/Armavica/events{/privacy}", "received_events_url": "https://api.github.com/users/Armavica/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Armavica", "id": 5855503, "node_id": "MDQ6VXNlcjU4NTU1MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5855503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Armavica", "html_url": "https://github.com/Armavica", "followers_url": "https://api.github.com/users/Armavica/followers", "following_url": "https://api.github.com/users/Armavica/following{/other_user}", "gists_url": "https://api.github.com/users/Armavica/gists{/gist_id}", "starred_url": "https://api.github.com/users/Armavica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Armavica/subscriptions", "organizations_url": "https://api.github.com/users/Armavica/orgs", "repos_url": "https://api.github.com/users/Armavica/repos", "events_url": "https://api.github.com/users/Armavica/events{/privacy}", "received_events_url": "https://api.github.com/users/Armavica/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a71b53e6c05c41760a0d60d04aad6ab962be1c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a71b53e6c05c41760a0d60d04aad6ab962be1c7", "html_url": "https://github.com/rust-lang/rust/commit/8a71b53e6c05c41760a0d60d04aad6ab962be1c7"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "833cc616f7f19adbd9e22d59d8248f37344582cc", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86426015512b42ed29411c32af8292691df58031/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/86426015512b42ed29411c32af8292691df58031/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=86426015512b42ed29411c32af8292691df58031", "patch": "@@ -100,7 +100,7 @@ syn keyword rustTrait ImmutableTuple1 ImmutableTuple2 ImmutableTuple3 ImmutableT\n syn keyword rustTrait ImmutableTuple5 ImmutableTuple6 ImmutableTuple7 ImmutableTuple8\n syn keyword rustTrait ImmutableTuple9 ImmutableTuple10 ImmutableTuple11 ImmutableTuple12\n syn keyword rustTrait ImmutableEqVector ImmutableTotalOrdVector ImmutableCopyableVector\n-syn keyword rustTrait OwnedVector OwnedCopyableVector OwnedEqVector MutableVector\n+syn keyword rustTrait OwnedVector OwnedCloneableVector OwnedEqVector MutableVector\n syn keyword rustTrait Vector VectorVector CloneableVector ImmutableVector\n \n \"syn keyword rustFunction stream"}, {"sha": "c185951fecac855562aec0c1c693693f010c226a", "filename": "src/libstd/io/mem.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86426015512b42ed29411c32af8292691df58031/src%2Flibstd%2Fio%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86426015512b42ed29411c32af8292691df58031/src%2Flibstd%2Fio%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmem.rs?ref=86426015512b42ed29411c32af8292691df58031", "patch": "@@ -17,7 +17,7 @@ use option::{Option, Some, None};\n use super::{Reader, Writer, Seek, Buffer, IoError, SeekStyle, io_error,\n             OtherIoError};\n use vec;\n-use vec::{Vector, ImmutableVector, MutableVector, OwnedCopyableVector};\n+use vec::{Vector, ImmutableVector, MutableVector, OwnedCloneableVector};\n \n /// Writes to an owned, growable byte vector\n ///"}, {"sha": "cadcbdd51f57b2af5d5687159fed0a6ac67c238b", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86426015512b42ed29411c32af8292691df58031/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86426015512b42ed29411c32af8292691df58031/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=86426015512b42ed29411c32af8292691df58031", "patch": "@@ -302,7 +302,7 @@ use str::{StrSlice, OwnedStr};\n use to_str::ToStr;\n use uint;\n use unstable::finally::Finally;\n-use vec::{OwnedVector, MutableVector, ImmutableVector, OwnedCopyableVector};\n+use vec::{OwnedVector, MutableVector, ImmutableVector, OwnedCloneableVector};\n use vec;\n \n // Reexports"}, {"sha": "11f23b22c51fa2889bd88939893ead0583c7b1be", "filename": "src/libstd/path/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86426015512b42ed29411c32af8292691df58031/src%2Flibstd%2Fpath%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86426015512b42ed29411c32af8292691df58031/src%2Flibstd%2Fpath%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath%2Fmod.rs?ref=86426015512b42ed29411c32af8292691df58031", "patch": "@@ -73,7 +73,7 @@ use str;\n use str::{OwnedStr, Str, StrSlice};\n use to_str::ToStr;\n use vec;\n-use vec::{CloneableVector, OwnedCopyableVector, OwnedVector, Vector};\n+use vec::{CloneableVector, OwnedCloneableVector, OwnedVector, Vector};\n use vec::{ImmutableEqVector, ImmutableVector};\n \n /// Typedef for POSIX file paths."}, {"sha": "e5e7d504e145b7a4d670bb7b3e26a3c40bd87424", "filename": "src/libstd/path/posix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86426015512b42ed29411c32af8292691df58031/src%2Flibstd%2Fpath%2Fposix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86426015512b42ed29411c32af8292691df58031/src%2Flibstd%2Fpath%2Fposix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath%2Fposix.rs?ref=86426015512b42ed29411c32af8292691df58031", "patch": "@@ -22,7 +22,7 @@ use str::Str;\n use to_bytes::IterBytes;\n use vec;\n use vec::{CloneableVector, RevSplits, Splits, Vector, VectorVector,\n-          ImmutableEqVector, OwnedVector, ImmutableVector, OwnedCopyableVector};\n+          ImmutableEqVector, OwnedVector, ImmutableVector, OwnedCloneableVector};\n use super::{BytesContainer, GenericPath, GenericPathUnsafe};\n \n /// Iterator that yields successive components of a Path as &[u8]"}, {"sha": "31e3edb70dff40c9b83b647fef4386b7e89feea4", "filename": "src/libstd/prelude.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86426015512b42ed29411c32af8292691df58031/src%2Flibstd%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86426015512b42ed29411c32af8292691df58031/src%2Flibstd%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude.rs?ref=86426015512b42ed29411c32af8292691df58031", "patch": "@@ -76,7 +76,7 @@ pub use tuple::{Tuple1, Tuple2, Tuple3, Tuple4};\n pub use tuple::{Tuple5, Tuple6, Tuple7, Tuple8};\n pub use tuple::{Tuple9, Tuple10, Tuple11, Tuple12};\n pub use vec::{ImmutableEqVector, ImmutableTotalOrdVector, ImmutableCopyableVector};\n-pub use vec::{OwnedVector, OwnedCopyableVector,OwnedEqVector};\n+pub use vec::{OwnedVector, OwnedCloneableVector,OwnedEqVector};\n pub use vec::{MutableVector, MutableTotalOrdVector};\n pub use vec::{Vector, VectorVector, CloneableVector, ImmutableVector};\n "}, {"sha": "21aa627b7c6db7bfd5048e856e8269bfa3ff1fc7", "filename": "src/libstd/str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86426015512b42ed29411c32af8292691df58031/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86426015512b42ed29411c32af8292691df58031/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=86426015512b42ed29411c32af8292691df58031", "patch": "@@ -112,7 +112,7 @@ use to_str::ToStr;\n use from_str::FromStr;\n use uint;\n use vec;\n-use vec::{OwnedVector, OwnedCopyableVector, ImmutableVector, MutableVector};\n+use vec::{OwnedVector, OwnedCloneableVector, ImmutableVector, MutableVector};\n use default::Default;\n use send_str::{SendStr, SendStrOwned};\n use unstable::raw::Repr;"}, {"sha": "589084ff8815de85990bed06cc56a84e31b72a8a", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/86426015512b42ed29411c32af8292691df58031/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86426015512b42ed29411c32af8292691df58031/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=86426015512b42ed29411c32af8292691df58031", "patch": "@@ -1698,7 +1698,7 @@ impl<T> Mutable for ~[T] {\n }\n \n /// Extension methods for owned vectors containing `Clone` elements.\n-pub trait OwnedCopyableVector<T:Clone> {\n+pub trait OwnedCloneableVector<T:Clone> {\n     /// Iterates over the slice `rhs`, copies each element, and then appends it to\n     /// the vector provided `v`. The `rhs` vector is traversed in-order.\n     ///\n@@ -1732,7 +1732,7 @@ pub trait OwnedCopyableVector<T:Clone> {\n     fn grow_set(&mut self, index: uint, initval: &T, val: T);\n }\n \n-impl<T:Clone> OwnedCopyableVector<T> for ~[T] {\n+impl<T:Clone> OwnedCloneableVector<T> for ~[T] {\n     #[inline]\n     fn push_all(&mut self, rhs: &[T]) {\n         let new_len = self.len() + rhs.len();"}]}