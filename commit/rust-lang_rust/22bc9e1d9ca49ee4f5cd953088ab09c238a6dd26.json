{"sha": "22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyYmM5ZTFkOWNhNDllZTRmNWNkOTUzMDg4YWIwOWMyMzhhNmRkMjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-30T13:33:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-30T13:33:15Z"}, "message": "Auto merge of #64778 - csmoe:index, r=eddyb\n\nIntroduce librustc_index crate\n\nCloses #50592", "tree": {"sha": "1447e329ac138963f386d612dd9eb78f8a03dafe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1447e329ac138963f386d612dd9eb78f8a03dafe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "html_url": "https://github.com/rust-lang/rust/commit/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0436d912df090b0c3cba9a8b818aab408756e49", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0436d912df090b0c3cba9a8b818aab408756e49", "html_url": "https://github.com/rust-lang/rust/commit/e0436d912df090b0c3cba9a8b818aab408756e49"}, {"sha": "64f61c7888c9cb2cbd7d37f87a6cbec2858ee409", "url": "https://api.github.com/repos/rust-lang/rust/commits/64f61c7888c9cb2cbd7d37f87a6cbec2858ee409", "html_url": "https://github.com/rust-lang/rust/commit/64f61c7888c9cb2cbd7d37f87a6cbec2858ee409"}], "stats": {"total": 452, "additions": 249, "deletions": 203}, "files": [{"sha": "cbedb552a068e09b9cdaadb2953c7fe7bb3e4366", "filename": "Cargo.lock", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -3081,6 +3081,7 @@ dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_fs_util\",\n+ \"rustc_index\",\n  \"rustc_macros\",\n  \"rustc_target\",\n  \"scoped-tls\",\n@@ -3361,6 +3362,7 @@ dependencies = [\n  \"rustc_errors\",\n  \"rustc_fs_util\",\n  \"rustc_incremental\",\n+ \"rustc_index\",\n  \"rustc_target\",\n  \"serialize\",\n  \"syntax\",\n@@ -3399,6 +3401,7 @@ dependencies = [\n  \"rustc-hash\",\n  \"rustc-rayon\",\n  \"rustc-rayon-core\",\n+ \"rustc_index\",\n  \"serialize\",\n  \"smallvec\",\n  \"stable_deref_trait\",\n@@ -3462,6 +3465,14 @@ dependencies = [\n  \"syntax_pos\",\n ]\n \n+[[package]]\n+name = \"rustc_index\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"serialize\",\n+ \"smallvec\",\n+]\n+\n [[package]]\n name = \"rustc_interface\"\n version = \"0.0.0\"\n@@ -3506,6 +3517,7 @@ dependencies = [\n  \"log\",\n  \"rustc\",\n  \"rustc_data_structures\",\n+ \"rustc_index\",\n  \"rustc_target\",\n  \"syntax\",\n  \"syntax_pos\",\n@@ -3551,6 +3563,7 @@ dependencies = [\n  \"rustc\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_index\",\n  \"rustc_target\",\n  \"serialize\",\n  \"smallvec\",\n@@ -3573,6 +3586,7 @@ dependencies = [\n  \"rustc_apfloat\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_index\",\n  \"rustc_lexer\",\n  \"rustc_target\",\n  \"serialize\",\n@@ -3672,6 +3686,7 @@ dependencies = [\n  \"bitflags\",\n  \"log\",\n  \"rustc_data_structures\",\n+ \"rustc_index\",\n  \"serialize\",\n  \"syntax_pos\",\n ]\n@@ -3720,6 +3735,7 @@ dependencies = [\n  \"rustc\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_index\",\n  \"rustc_target\",\n  \"smallvec\",\n  \"syntax\",\n@@ -4236,6 +4252,7 @@ dependencies = [\n  \"log\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_index\",\n  \"rustc_lexer\",\n  \"rustc_target\",\n  \"scoped-tls\",\n@@ -4265,6 +4282,7 @@ dependencies = [\n  \"arena\",\n  \"cfg-if\",\n  \"rustc_data_structures\",\n+ \"rustc_index\",\n  \"rustc_macros\",\n  \"scoped-tls\",\n  \"serialize\","}, {"sha": "a7c94d057dc49624ca3119a9daec9056239b7c06", "filename": "src/librustc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FCargo.toml?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -25,6 +25,7 @@ rustc_apfloat = { path = \"../librustc_apfloat\" }\n rustc_target = { path = \"../librustc_target\" }\n rustc_macros = { path = \"../librustc_macros\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n+rustc_index = { path = \"../librustc_index\" }\n errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n syntax = { path = \"../libsyntax\" }"}, {"sha": "5a5919d786638d3dcbf87444d95fa76de6afe473", "filename": "src/librustc/arena.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Farena.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -26,12 +26,12 @@ macro_rules! arena_types {\n             [] steal_mir: rustc::ty::steal::Steal<rustc::mir::Body<$tcx>>,\n             [] mir: rustc::mir::Body<$tcx>,\n             [] steal_promoted: rustc::ty::steal::Steal<\n-                rustc_data_structures::indexed_vec::IndexVec<\n+                rustc_index::vec::IndexVec<\n                     rustc::mir::Promoted,\n                     rustc::mir::Body<$tcx>\n                 >\n             >,\n-            [] promoted: rustc_data_structures::indexed_vec::IndexVec<\n+            [] promoted: rustc_index::vec::IndexVec<\n                 rustc::mir::Promoted,\n                 rustc::mir::Body<$tcx>\n             >,\n@@ -45,7 +45,7 @@ macro_rules! arena_types {\n             [decode] specialization_graph: rustc::traits::specialization_graph::Graph,\n             [] region_scope_tree: rustc::middle::region::ScopeTree,\n             [] item_local_set: rustc::util::nodemap::ItemLocalSet,\n-            [decode] mir_const_qualif: rustc_data_structures::bit_set::BitSet<rustc::mir::Local>,\n+            [decode] mir_const_qualif: rustc_index::bit_set::BitSet<rustc::mir::Local>,\n             [] trait_impls_of: rustc::ty::trait_def::TraitImpls,\n             [] dropck_outlives:\n                 rustc::infer::canonical::Canonical<'tcx,"}, {"sha": "0c56fc7914b4cfe505a153a9c8782071c378474b", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,7 +1,7 @@\n use errors::Diagnostic;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n use smallvec::SmallVec;\n use rustc_data_structures::sync::{Lrc, Lock, AtomicU32, Ordering};\n use std::env;\n@@ -26,7 +26,7 @@ pub struct DepGraph {\n     data: Option<Lrc<DepGraphData>>,\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct DepNodeIndex { .. }\n }\n "}, {"sha": "4302195755ea5ef5cce99f653990e2fd3fa30943", "filename": "src/librustc/dep_graph/serialized.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fdep_graph%2Fserialized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fdep_graph%2Fserialized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fserialized.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -2,9 +2,9 @@\n \n use crate::dep_graph::DepNode;\n use crate::ich::Fingerprint;\n-use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n+use rustc_index::vec::{IndexVec, Idx};\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct SerializedDepNodeIndex { .. }\n }\n "}, {"sha": "13200b38f2cdae131c80ef933f7026748956d6cc", "filename": "src/librustc/hir/def_id.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fhir%2Fdef_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fhir%2Fdef_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef_id.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,9 +1,9 @@\n use crate::ty::{self, TyCtxt};\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use std::fmt;\n use std::u32;\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct CrateId {\n         ENCODABLE = custom\n     }\n@@ -87,7 +87,7 @@ impl fmt::Display for CrateNum {\n impl rustc_serialize::UseSpecializedEncodable for CrateNum {}\n impl rustc_serialize::UseSpecializedDecodable for CrateNum {}\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     /// A DefIndex is an index into the hir-map for a crate, identifying a\n     /// particular definition. It should really be considered an interned\n     /// shorthand for a particular DefPath."}, {"sha": "4310bafd7812a856032e5a9f554947f6a2dfd52c", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -52,7 +52,7 @@ use crate::util::common::FN_OUTPUT_NAME;\n use crate::util::nodemap::{DefIdMap, NodeMap};\n use errors::Applicability;\n use rustc_data_structures::fx::FxHashSet;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc_data_structures::thin_vec::ThinVec;\n use rustc_data_structures::sync::Lrc;\n "}, {"sha": "1a970c7a2c1e04c9659c736f9ea8b945b79584ae", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -5,7 +5,7 @@ use crate::hir::map::HirEntryMap;\n use crate::hir::def_id::{LOCAL_CRATE, CrateNum};\n use crate::hir::intravisit::{Visitor, NestedVisitorMap};\n use rustc_data_structures::svh::Svh;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use crate::ich::Fingerprint;\n use crate::middle::cstore::CrateStore;\n use crate::session::CrateDisambiguator;"}, {"sha": "71bf230e37dedd8539e1d6dd2b665c1dec28d7fd", "filename": "src/librustc/hir/map/definitions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -11,7 +11,7 @@ use crate::session::CrateDisambiguator;\n use crate::util::nodemap::NodeMap;\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::indexed_vec::{IndexVec};\n+use rustc_index::vec::{IndexVec};\n use rustc_data_structures::stable_hasher::StableHasher;\n use std::borrow::Borrow;\n use std::fmt::Write;"}, {"sha": "1705f5692d4f9698c176921f45813021c0deaf67", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -17,7 +17,7 @@ use crate::util::common::time;\n \n use rustc_target::spec::abi::Abi;\n use rustc_data_structures::svh::Svh;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use syntax::ast::{self, Name, NodeId};\n use syntax::source_map::Spanned;\n use syntax::ext::base::MacroKind;"}, {"sha": "9ae661f0952a479990ed68ca2cd3cf6038325324", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -122,9 +122,9 @@ impl fmt::Display for HirId {\n \n // Hack to ensure that we don't try to access the private parts of `ItemLocalId` in this module.\n mod item_local_id_inner {\n-    use rustc_data_structures::indexed_vec::Idx;\n+    use rustc_index::vec::Idx;\n     use rustc_macros::HashStable;\n-    newtype_index! {\n+    rustc_index::newtype_index! {\n         /// An `ItemLocalId` uniquely identifies something within a given \"item-like\";\n         /// that is, within a `hir::Item`, `hir::TraitItem`, or `hir::ImplItem`. There is no\n         /// guarantee that the numerical value of a given `ItemLocalId` corresponds to"}, {"sha": "b9474f869ee29a6fee355ef43ca0896e5dd9e12c", "filename": "src/librustc/infer/canonical/canonicalizer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fcanonical%2Fcanonicalizer.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -18,7 +18,7 @@ use crate::ty::{self, BoundVar, InferConst, List, Ty, TyCtxt, TypeFlags};\n use crate::ty::flags::FlagComputation;\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use smallvec::SmallVec;\n \n impl<'cx, 'tcx> InferCtxt<'cx, 'tcx> {"}, {"sha": "562a463ded86ae831f605a971cb68bfd5b6c01d6", "filename": "src/librustc/infer/canonical/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Finfer%2Fcanonical%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Finfer%2Fcanonical%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fcanonical%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -25,7 +25,7 @@ use crate::infer::{InferCtxt, RegionVariableOrigin, TypeVariableOrigin, TypeVari\n use crate::infer::{ConstVariableOrigin, ConstVariableOriginKind};\n use crate::infer::region_constraints::MemberConstraint;\n use crate::mir::interpret::ConstValue;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc_macros::HashStable;\n use rustc_serialize::UseSpecializedDecodable;\n use smallvec::SmallVec;"}, {"sha": "95b6a8bc84342c897b2278251ca3a5a08f4943a8", "filename": "src/librustc/infer/canonical/query_response.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Finfer%2Fcanonical%2Fquery_response.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Finfer%2Fcanonical%2Fquery_response.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fcanonical%2Fquery_response.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -17,8 +17,8 @@ use crate::infer::region_constraints::{Constraint, RegionConstraintData};\n use crate::infer::InferCtxtBuilder;\n use crate::infer::{InferCtxt, InferOk, InferResult};\n use crate::mir::interpret::ConstValue;\n-use rustc_data_structures::indexed_vec::Idx;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::Idx;\n+use rustc_index::vec::IndexVec;\n use std::fmt::Debug;\n use syntax_pos::DUMMY_SP;\n use crate::traits::query::{Fallible, NoSolution};"}, {"sha": "f11f94c428e86a54ef2ffe667a56166648ebffbd", "filename": "src/librustc/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -19,7 +19,7 @@ use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::implementation::{\n     Direction, Graph, NodeIndex, INCOMING, OUTGOING,\n };\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n use smallvec::SmallVec;\n use std::fmt;\n use syntax_pos::Span;"}, {"sha": "b4b4d1fe3e1f6bb56d101ec20a8feb9bde00c2fe", "filename": "src/librustc/infer/region_constraints/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Finfer%2Fregion_constraints%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Finfer%2Fregion_constraints%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fregion_constraints%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -7,7 +7,7 @@ use super::unify_key;\n use super::{MiscVariable, RegionVariableOrigin, SubregionOrigin};\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::unify as ut;\n use crate::hir::def_id::DefId;"}, {"sha": "7b5aea8ac9847cd6dfef58ada70f14631272cf2a", "filename": "src/librustc/middle/intrinsicck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -5,7 +5,7 @@ use crate::ty::layout::{LayoutError, Pointer, SizeSkeleton, VariantIdx};\n use crate::ty::query::Providers;\n \n use rustc_target::spec::abi::Abi::RustIntrinsic;\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use syntax_pos::{Span, sym};\n use crate::hir::intravisit::{self, Visitor, NestedVisitorMap};\n use crate::hir;"}, {"sha": "9ff205228a566375bdeb17d20b5610bc69c04d5b", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -16,8 +16,8 @@ use crate::util::nodemap::{FxHashMap, FxHashSet};\n use crate::ty::{self, DefIdTree, TyCtxt};\n use crate::ty::query::Providers;\n \n-use rustc_data_structures::indexed_vec::Idx;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n+use rustc_index::vec::Idx;\n use rustc_macros::HashStable;\n use syntax::source_map;\n use syntax_pos::{Span, DUMMY_SP};\n@@ -131,7 +131,7 @@ pub enum ScopeData {\n     Remainder(FirstStatementIndex)\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     /// Represents a subscope of `block` for a binding that is introduced\n     /// by `block.stmts[first_statement_index]`. Such subscopes represent\n     /// a suffix of the block. Note that each subscope does not include"}, {"sha": "9b4136674187660019feec9c1a7af61459f5fcc6", "filename": "src/librustc/mir/cache.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fmir%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fmir%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fcache.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,4 +1,4 @@\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc_data_structures::sync::{RwLock, MappedReadGuard, ReadGuard};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_serialize::{Encodable, Encoder, Decodable, Decoder};"}, {"sha": "6664e16895ae60b2e55c0016a4e8386cca04c909", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -20,11 +20,11 @@ use crate::ty::{\n };\n \n use polonius_engine::Atom;\n-use rustc_data_structures::bit_set::BitMatrix;\n+use rustc_index::bit_set::BitMatrix;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::dominators::{dominators, Dominators};\n use rustc_data_structures::graph::{self, GraphPredecessors, GraphSuccessors};\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::sync::MappedReadGuard;\n use rustc_macros::HashStable;\n@@ -581,7 +581,7 @@ impl BorrowKind {\n ///////////////////////////////////////////////////////////////////////////\n // Variables and temps\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct Local {\n         derive [HashStable]\n         DEBUG_FORMAT = \"_{}\",\n@@ -994,7 +994,7 @@ pub struct UpvarDebuginfo {\n ///////////////////////////////////////////////////////////////////////////\n // BasicBlock\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct BasicBlock {\n         derive [HashStable]\n         DEBUG_FORMAT = \"bb{}\",\n@@ -1832,7 +1832,7 @@ static_assert_size!(PlaceElem<'_>, 16);\n /// need neither the `V` parameter for `Index` nor the `T` for `Field`.\n pub type ProjectionKind = ProjectionElem<(), ()>;\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct Field {\n         derive [HashStable]\n         DEBUG_FORMAT = \"field[{}]\"\n@@ -2047,7 +2047,7 @@ impl Debug for PlaceBase<'_> {\n ///////////////////////////////////////////////////////////////////////////\n // Scopes\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct SourceScope {\n         derive [HashStable]\n         DEBUG_FORMAT = \"scope[{}]\",\n@@ -2586,7 +2586,7 @@ impl<'tcx> TypeFoldable<'tcx> for UserTypeProjection {\n     }\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct Promoted {\n         derive [HashStable]\n         DEBUG_FORMAT = \"promoted[{}]\"\n@@ -2743,7 +2743,7 @@ pub struct UnsafetyCheckResult {\n     pub unsafe_blocks: Lrc<[(hir::HirId, bool)]>,\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct GeneratorSavedLocal {\n         derive [HashStable]\n         DEBUG_FORMAT = \"_{}\","}, {"sha": "f129dd3abeff7b1d6431fb82818b1a3aca0408ed", "filename": "src/librustc/mir/traversal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fmir%2Ftraversal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fmir%2Ftraversal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Ftraversal.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,4 +1,4 @@\n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n \n use super::*;\n "}, {"sha": "e463810b7af5fb279cf653564d6f982eab31c58d", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -132,7 +132,7 @@ rustc_queries! {\n             cache_on_disk_if { key.is_local() }\n             load_cached(tcx, id) {\n                 let promoted: Option<\n-                    rustc_data_structures::indexed_vec::IndexVec<\n+                    rustc_index::vec::IndexVec<\n                         crate::mir::Promoted,\n                         crate::mir::Body<'tcx>\n                     >> = tcx.queries.on_disk_cache.try_load_query_result(tcx, id);"}, {"sha": "ef79417c6f084b96348ddfcd671d032991fc2225", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -40,7 +40,7 @@ use crate::ty::subst::{Subst, SubstsRef};\n use crate::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, TypeFoldable};\n \n use crate::hir;\n-use rustc_data_structures::bit_set::GrowableBitSet;\n+use rustc_index::bit_set::GrowableBitSet;\n use rustc_data_structures::sync::Lock;\n use rustc_target::spec::abi::Abi;\n use syntax::attr;"}, {"sha": "34c650b06a5861f3c723f6c7a3131eb41982de87", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -52,7 +52,7 @@ use smallvec::SmallVec;\n use rustc_data_structures::stable_hasher::{\n     HashStable, StableHasher, StableVec, hash_stable_hashmap,\n };\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc_data_structures::sharded::ShardedHashMap;\n use rustc_data_structures::sync::{Lrc, Lock, WorkerLocal};\n use std::any::Any;\n@@ -777,7 +777,7 @@ impl<'a, 'tcx> HashStable<StableHashingContext<'a>> for TypeckTables<'tcx> {\n     }\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct UserTypeAnnotationIndex {\n         derive [HashStable]\n         DEBUG_FORMAT = \"UserType({})\","}, {"sha": "6b22ded49f3fc1ba3cad06a9dd473794c27edc97", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -17,9 +17,9 @@ use crate::ich::StableHashingContext;\n use crate::mir::{GeneratorLayout, GeneratorSavedLocal};\n use crate::ty::GeneratorSubsts;\n use crate::ty::subst::Subst;\n-use rustc_data_structures::bit_set::BitSet;\n-use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n+use rustc_index::bit_set::BitSet;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n+use rustc_index::vec::{IndexVec, Idx};\n \n pub use rustc_target::abi::*;\n use rustc_target::spec::{HasTargetSpec, abi::Abi as SpecAbi};"}, {"sha": "269f87c441a823535c40c515431b7cd822b01878", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -51,8 +51,8 @@ use syntax_pos::Span;\n \n use smallvec;\n use rustc_data_structures::fx::FxIndexMap;\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n use rustc_data_structures::stable_hasher::{StableHasher, HashStable};\n+use rustc_index::vec::{Idx, IndexVec};\n \n use crate::hir;\n \n@@ -1536,7 +1536,7 @@ impl<'tcx> InstantiatedPredicates<'tcx> {\n     }\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     /// \"Universes\" are used during type- and trait-checking in the\n     /// presence of `for<..>` binders to control what sets of names are\n     /// visible. Universes are arranged into a tree: the root universe"}, {"sha": "863721a5b4b79f7aff74b37f4aed52c7bffca43f", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -38,12 +38,12 @@ use crate::ty::steal::Steal;\n use crate::ty::util::NeedsDrop;\n use crate::ty::subst::SubstsRef;\n use crate::util::nodemap::{DefIdSet, DefIdMap, ItemLocalSet};\n-use crate::util::common::{ErrorReported};\n+use crate::util::common::ErrorReported;\n use crate::util::profiling::ProfileCategory::*;\n \n use rustc_data_structures::svh::Svh;\n-use rustc_data_structures::bit_set::BitSet;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::IndexVec;\n use rustc_data_structures::fx::{FxIndexMap, FxHashMap, FxHashSet};\n use rustc_data_structures::stable_hasher::StableVec;\n use rustc_data_structures::sync::Lrc;"}, {"sha": "97fafe341a3114ec5c82dc5f0cffce40741eb650", "filename": "src/librustc/ty/query/on_disk_cache.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -15,7 +15,7 @@ use errors::Diagnostic;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::thin_vec::ThinVec;\n use rustc_data_structures::sync::{Lrc, Lock, HashMapExt, Once};\n-use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n+use rustc_index::vec::{IndexVec, Idx};\n use rustc_serialize::{\n     Decodable, Decoder, Encodable, Encoder, SpecializedDecoder, SpecializedEncoder,\n     UseSpecializedDecodable, UseSpecializedEncodable, opaque,"}, {"sha": "6b0df7fb92a4a0c0a3779fab388f99ae1b665d5f", "filename": "src/librustc/ty/structural_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fstructural_impls.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -9,7 +9,7 @@ use crate::mir::interpret::ConstValue;\n use crate::ty::{self, Lift, Ty, TyCtxt, InferConst};\n use crate::ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n use crate::ty::print::{FmtPrinter, Printer};\n-use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n+use rustc_index::vec::{IndexVec, Idx};\n use smallvec::SmallVec;\n use crate::mir::interpret;\n "}, {"sha": "e105c44d09ae5ef0ea8cdabc25c2a94a7d782646", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -8,7 +8,7 @@ use crate::infer::canonical::Canonical;\n use crate::mir::interpret::ConstValue;\n use crate::middle::region;\n use polonius_engine::Atom;\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use rustc_macros::HashStable;\n use crate::ty::subst::{InternalSubsts, Subst, SubstsRef, GenericArg, GenericArgKind};\n use crate::ty::{self, AdtDef, Discr, DefIdTree, TypeFlags, Ty, TyCtxt, TypeFoldable};\n@@ -1166,7 +1166,7 @@ impl<'tcx> ParamConst {\n     }\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     /// A [De Bruijn index][dbi] is a standard means of representing\n     /// regions (and perhaps later types) in a higher-ranked setting. In\n     /// particular, imagine a type like this:\n@@ -1350,7 +1350,7 @@ pub struct FloatVid {\n     pub index: u32,\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct RegionVid {\n         DEBUG_FORMAT = custom,\n     }\n@@ -1377,7 +1377,7 @@ pub enum InferTy {\n     FreshFloatTy(u32),\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct BoundVar { .. }\n }\n "}, {"sha": "bdb7467a1010c1b5e4c760f84f35cec3c6e906fc", "filename": "src/librustc_codegen_llvm/debuginfo/create_scope_map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -11,8 +11,8 @@ use libc::c_uint;\n \n use syntax_pos::Pos;\n \n-use rustc_data_structures::bit_set::BitSet;\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::{Idx, IndexVec};\n \n use syntax_pos::BytePos;\n "}, {"sha": "e0e0cd5f739e2718474d2b2828948cf8a2157901", "filename": "src/librustc_codegen_llvm/debuginfo/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -26,7 +26,7 @@ use rustc::mir;\n use rustc::session::config::{self, DebugInfo};\n use rustc::util::nodemap::{DefIdMap, FxHashMap, FxHashSet};\n use rustc_data_structures::small_c_str::SmallCStr;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc_codegen_ssa::debuginfo::{FunctionDebugContext, MirDebugScope, VariableAccess,\n     VariableKind, FunctionDebugContextData, type_names};\n "}, {"sha": "309a17a01e3fa375396d7c25ab88dbc447ba7fbf", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -31,6 +31,7 @@ extern crate libc;\n #[macro_use] extern crate rustc;\n extern crate rustc_target;\n #[macro_use] extern crate rustc_data_structures;\n+extern crate rustc_index;\n extern crate rustc_incremental;\n extern crate rustc_codegen_utils;\n extern crate rustc_codegen_ssa;"}, {"sha": "c7d09a423d5e3b7c2ec9aef13a13a4480c66c811", "filename": "src/librustc_codegen_ssa/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_ssa%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_ssa%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2FCargo.toml?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -29,4 +29,5 @@ rustc_data_structures = { path = \"../librustc_data_structures\"}\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_fs_util = { path = \"../librustc_fs_util\" }\n rustc_incremental = { path = \"../librustc_incremental\" }\n+rustc_index = { path = \"../librustc_index\" }\n rustc_target = { path = \"../librustc_target\" }"}, {"sha": "9078f77f1f7a25db8580f9dc82e77b3b0d3e8172", "filename": "src/librustc_codegen_ssa/back/symbol_export.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -13,7 +13,7 @@ use rustc::ty::{TyCtxt, SymbolName};\n use rustc::ty::query::Providers;\n use rustc::ty::subst::SubstsRef;\n use rustc::util::nodemap::{FxHashMap, DefIdMap};\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use syntax::ext::allocator::ALLOCATOR_METHODS;\n \n pub type ExportedSymbols = FxHashMap<"}, {"sha": "d11d8911a93d592a3ce65d47c1687981290be516", "filename": "src/librustc_codegen_ssa/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_ssa%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_ssa%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbase.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -29,7 +29,7 @@ use rustc::util::common::{time, print_time_passes_entry, set_time_depth, time_de\n use rustc::session::config::{self, EntryFnType, Lto};\n use rustc::session::Session;\n use rustc::util::nodemap::FxHashMap;\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use rustc_codegen_utils::{symbol_names_test, check_for_rustc_errors_attr};\n use rustc::ty::layout::{FAT_PTR_ADDR, FAT_PTR_EXTRA};\n use crate::mir::place::PlaceRef;"}, {"sha": "ea1cf926fccf0a47ac537eeb371bcd48b4829f01", "filename": "src/librustc_codegen_ssa/mir/analyze.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,9 +1,9 @@\n //! An analysis to determine which locals require allocas and\n //! which do not.\n \n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n use rustc_data_structures::graph::dominators::Dominators;\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc::mir::{self, Location, TerminatorKind};\n use rustc::mir::visit::{Visitor, PlaceContext, MutatingUseContext, NonMutatingUseContext};\n use rustc::mir::traversal;"}, {"sha": "3a1d0a2577521a09fc620690ecf5268d33e6c512", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,4 +1,4 @@\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use rustc::middle::lang_items;\n use rustc::ty::{self, Ty, TypeFoldable, Instance};\n use rustc::ty::layout::{self, LayoutOf, HasTyCtxt, FnTypeExt};"}, {"sha": "d06359ab0ce89d4ffe694ae33538de89172368a5", "filename": "src/librustc_codegen_ssa/mir/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,6 +1,6 @@\n use rustc::mir::interpret::ErrorHandled;\n use rustc::mir;\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use rustc::ty::{self, Ty};\n use rustc::ty::layout::{self, HasTyCtxt};\n use syntax::source_map::Span;"}, {"sha": "2a563e8290ed377c92d3bbab17654a6fbe44b62b", "filename": "src/librustc_codegen_ssa/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -13,8 +13,8 @@ use syntax::symbol::kw;\n \n use std::iter;\n \n-use rustc_data_structures::bit_set::BitSet;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::IndexVec;\n \n use self::analyze::CleanupKind;\n use self::place::PlaceRef;"}, {"sha": "e75f247da96135ed3a791f4359e7de62238474f3", "filename": "src/librustc_codegen_ssa/traits/debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -3,7 +3,7 @@ use crate::debuginfo::{FunctionDebugContext, MirDebugScope, VariableAccess, Vari\n use rustc::hir::def_id::CrateNum;\n use rustc::mir;\n use rustc::ty::{self, Ty, Instance};\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use syntax::ast::Name;\n use syntax_pos::{SourceFile, Span};\n "}, {"sha": "e020f2f8da940e19d4a27c8b93e473eb77734702", "filename": "src/librustc_data_structures/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2FCargo.toml?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -24,6 +24,7 @@ rayon = { version = \"0.2.0\", package = \"rustc-rayon\" }\n rayon-core = { version = \"0.2.0\", package = \"rustc-rayon-core\" }\n rustc-hash = \"1.0.1\"\n smallvec = { version = \"0.6.7\", features = [\"union\", \"may_dangle\"] }\n+rustc_index = { path = \"../librustc_index\", package = \"rustc_index\" }\n \n [dependencies.parking_lot]\n version = \"0.9\""}, {"sha": "29a8a98d229cc7ec9810dad8890ae378b45cd16d", "filename": "src/librustc_data_structures/graph/dominators/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fgraph%2Fdominators%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fgraph%2Fdominators%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fgraph%2Fdominators%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -4,7 +4,7 @@\n //! Rice Computer Science TS-06-33870\n //! <https://www.cs.rice.edu/~keith/EMBED/dom.pdf>\n \n-use super::super::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n use super::iterate::reverse_post_order;\n use super::ControlFlowGraph;\n "}, {"sha": "052a09c0774b69336a6b56d4680766472a317ddb", "filename": "src/librustc_data_structures/graph/implementation/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fgraph%2Fimplementation%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fgraph%2Fimplementation%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fgraph%2Fimplementation%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -20,7 +20,7 @@\n //! the field `next_edge`). Each of those fields is an array that should\n //! be indexed by the direction (see the type `Direction`).\n \n-use crate::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n use crate::snapshot_vec::{SnapshotVec, SnapshotVecDelegate};\n use std::fmt::Debug;\n use std::usize;"}, {"sha": "e268b28174474a8df998bb841df6a522eead1c7a", "filename": "src/librustc_data_structures/graph/iterate/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fgraph%2Fiterate%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fgraph%2Fiterate%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fgraph%2Fiterate%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,6 +1,6 @@\n-use super::super::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use super::{DirectedGraph, WithNumNodes, WithSuccessors, WithStartNode};\n-use crate::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n \n #[cfg(test)]\n mod tests;"}, {"sha": "37335799d19af87ae5d46b1e469a41bc0aa9a0e6", "filename": "src/librustc_data_structures/graph/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,4 +1,4 @@\n-use super::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n \n pub mod dominators;\n pub mod implementation;"}, {"sha": "c214f66cd15cd1dc47a21768a1425b5cb702244d", "filename": "src/librustc_data_structures/graph/scc/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fgraph%2Fscc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fgraph%2Fscc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fgraph%2Fscc%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -6,7 +6,7 @@\n use crate::fx::FxHashSet;\n use crate::graph::{DirectedGraph, WithNumNodes, WithNumEdges, WithSuccessors, GraphSuccessors};\n use crate::graph::vec_graph::VecGraph;\n-use crate::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n use std::ops::Range;\n \n #[cfg(test)]"}, {"sha": "aad5944dcd0be0b8a2a75e782628f2ff48894c11", "filename": "src/librustc_data_structures/graph/vec_graph/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fgraph%2Fvec_graph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fgraph%2Fvec_graph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fgraph%2Fvec_graph%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,4 +1,4 @@\n-use crate::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n use crate::graph::{DirectedGraph, WithNumNodes, WithNumEdges, WithSuccessors, GraphSuccessors};\n \n #[cfg(test)]"}, {"sha": "474a42644d9150700bf2e47ce673ef3e04b04c7d", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -68,14 +68,12 @@ pub mod macros;\n pub mod svh;\n pub mod base_n;\n pub mod binary_search_util;\n-pub mod bit_set;\n pub mod box_region;\n pub mod const_cstr;\n pub mod flock;\n pub mod fx;\n pub mod stable_map;\n pub mod graph;\n-pub mod indexed_vec;\n pub mod jobserver;\n pub mod obligation_forest;\n pub mod owning_ref;"}, {"sha": "cfccef67fe7ddc66c9f65c3f3febb661f5ff0af4", "filename": "src/librustc_data_structures/obligation_forest/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -138,7 +138,7 @@ pub struct ObligationForest<O: ForestObligation> {\n     /// call to `compress`.\n     ///\n     /// `usize` indices are used here and throughout this module, rather than\n-    /// `newtype_index!` indices, because this code is hot enough that the\n+    /// `rustc_index::newtype_index!` indices, because this code is hot enough that the\n     /// `u32`-to-`usize` conversions that would be required are significant,\n     /// and space considerations are not important.\n     nodes: Vec<Node<O>>,"}, {"sha": "ee4f6a5e785e40c8351a7aa6dc549ecc6c9841ea", "filename": "src/librustc_data_structures/stable_hasher.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fstable_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fstable_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fstable_hasher.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -2,8 +2,8 @@ use std::hash::{Hash, Hasher, BuildHasher};\n use std::mem;\n use smallvec::SmallVec;\n use crate::sip128::SipHasher128;\n-use crate::indexed_vec;\n-use crate::bit_set;\n+use rustc_index::vec;\n+use rustc_index::bit_set;\n \n /// When hashing something that ends up affecting properties like symbol names,\n /// we want these symbol names to be calculated independently of other factors\n@@ -429,7 +429,7 @@ impl<T, CTX> HashStable<CTX> for ::std::mem::Discriminant<T> {\n     }\n }\n \n-impl<I: indexed_vec::Idx, T, CTX> HashStable<CTX> for indexed_vec::IndexVec<I, T>\n+impl<I: vec::Idx, T, CTX> HashStable<CTX> for vec::IndexVec<I, T>\n     where T: HashStable<CTX>,\n {\n     fn hash_stable(&self, ctx: &mut CTX, hasher: &mut StableHasher) {\n@@ -441,14 +441,14 @@ impl<I: indexed_vec::Idx, T, CTX> HashStable<CTX> for indexed_vec::IndexVec<I, T\n }\n \n \n-impl<I: indexed_vec::Idx, CTX> HashStable<CTX> for bit_set::BitSet<I>\n+impl<I: vec::Idx, CTX> HashStable<CTX> for bit_set::BitSet<I>\n {\n     fn hash_stable(&self, ctx: &mut CTX, hasher: &mut StableHasher) {\n         self.words().hash_stable(ctx, hasher);\n     }\n }\n \n-impl<R: indexed_vec::Idx, C: indexed_vec::Idx, CTX> HashStable<CTX>\n+impl<R: vec::Idx, C: vec::Idx, CTX> HashStable<CTX>\n for bit_set::BitMatrix<R, C>\n {\n     fn hash_stable(&self, ctx: &mut CTX, hasher: &mut StableHasher) {"}, {"sha": "f0a9c3afc68b08e00fdf4fcdfbc9bb022b003eb4", "filename": "src/librustc_data_structures/transitive_relation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Ftransitive_relation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Ftransitive_relation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Ftransitive_relation.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,4 +1,4 @@\n-use crate::bit_set::BitMatrix;\n+use rustc_index::bit_set::BitMatrix;\n use crate::fx::FxHashMap;\n use crate::stable_hasher::{HashStable, StableHasher};\n use crate::sync::Lock;"}, {"sha": "7744c30655dce4b5e3167af355609d3dc7fac177", "filename": "src/librustc_data_structures/vec_linked_list.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fvec_linked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fvec_linked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fvec_linked_list.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,4 +1,4 @@\n-use crate::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n \n pub fn iter<Ls>(\n     first: Option<Ls::LinkIndex>,"}, {"sha": "af63b18e9e92284f04c3e9f2384b40fc2bbe59f7", "filename": "src/librustc_data_structures/work_queue.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fwork_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_data_structures%2Fwork_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fwork_queue.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,5 +1,5 @@\n-use crate::bit_set::BitSet;\n-use crate::indexed_vec::Idx;\n+use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::Idx;\n use std::collections::VecDeque;\n \n /// A work queue is a handy data structure for tracking work left to"}, {"sha": "b1ebc95e4881b7920e36cfcf35db0ad6a4479af1", "filename": "src/librustc_index/Cargo.toml", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_index%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_index%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_index%2FCargo.toml?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -0,0 +1,14 @@\n+[package]\n+authors = [\"The Rust Project Developers\"]\n+name = \"rustc_index\"\n+version = \"0.0.0\"\n+edition = \"2018\"\n+\n+[lib]\n+name = \"rustc_index\"\n+path = \"lib.rs\"\n+doctest = false\n+\n+[dependencies]\n+rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n+smallvec = { version = \"0.6.7\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "9c96645ccf977a9a27fa4e20dbe0b7ff0c10f5fc", "filename": "src/librustc_index/bit_set.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_index%2Fbit_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_index%2Fbit_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_index%2Fbit_set.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,4 +1,4 @@\n-use crate::indexed_vec::{Idx, IndexVec};\n+use crate::vec::{Idx, IndexVec};\n use smallvec::SmallVec;\n use std::fmt;\n use std::iter;", "previous_filename": "src/librustc_data_structures/bit_set.rs"}, {"sha": "ac7913815ffd434fce82663fd2263ec4af5bcb1f", "filename": "src/librustc_index/bit_set/tests.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_index%2Fbit_set%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_index%2Fbit_set%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_index%2Fbit_set%2Ftests.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "previous_filename": "src/librustc_data_structures/bit_set/tests.rs"}, {"sha": "ad242dfd2e0c179f3d2d87c793a0d810f89b257e", "filename": "src/librustc_index/lib.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_index%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_index%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_index%2Flib.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -0,0 +1,7 @@\n+#![feature(allow_internal_unstable)]\n+#![feature(unboxed_closures)]\n+#![feature(test)]\n+#![feature(fn_traits)]\n+\n+pub mod vec;\n+pub mod bit_set;"}, {"sha": "6e80b48a6856016dadab3a7eb46bb2add06f0d6c", "filename": "src/librustc_index/vec.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_index%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_index%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_index%2Fvec.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "previous_filename": "src/librustc_data_structures/indexed_vec.rs"}, {"sha": "a61a314d5492d70af1a88178355769cf74a3e6fc", "filename": "src/librustc_lint/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_lint%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_lint%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2FCargo.toml?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -15,3 +15,4 @@ rustc_target = { path = \"../librustc_target\" }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n+rustc_index = { path = \"../librustc_index\" }"}, {"sha": "3d14a78c33f7ea74975e877b3862d3f1f417747b", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -7,7 +7,7 @@ use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n use rustc::ty::layout::{self, IntegerExt, LayoutOf, VariantIdx, SizeSkeleton};\n use rustc::{lint, util};\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use util::nodemap::FxHashSet;\n use lint::{LateContext, LintContext, LintArray};\n use lint::{LintPass, LateLintPass};"}, {"sha": "032470e1400abbb42455be173960d7f251b236e8", "filename": "src/librustc_metadata/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2FCargo.toml?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -18,6 +18,7 @@ rustc = { path = \"../librustc\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }\n rustc_target = { path = \"../librustc_target\" }\n+rustc_index = { path = \"../librustc_index\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n stable_deref_trait = \"1.0.0\"\n syntax = { path = \"../libsyntax\" }"}, {"sha": "d3619b2f5de90beda0f7b572a69384d69ea27016", "filename": "src/librustc_metadata/cstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_metadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_metadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -6,7 +6,7 @@ use rustc::hir::def_id::{CrateNum, DefIndex};\n use rustc::hir::map::definitions::DefPathTable;\n use rustc::middle::cstore::{DepKind, ExternCrate, MetadataLoader};\n use rustc::mir::interpret::AllocDecodingState;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc::util::nodemap::{FxHashMap, NodeMap};\n \n use rustc_data_structures::sync::{Lrc, RwLock, Lock};"}, {"sha": "edb6f594fdd0d98fecdbed4425d449f61fd0c9d5", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -35,7 +35,7 @@ use syntax::parse::source_file_to_stream;\n use syntax::parse::parser::emit_unclosed_delims;\n use syntax::symbol::Symbol;\n use syntax_pos::{Span, FileName};\n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n \n macro_rules! provide {\n     (<$lt:tt> $tcx:ident, $def_id:ident, $other:ident, $cdata:ident,"}, {"sha": "9fcc3101545995fd57fe6b0091d26fcd5e499247", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -3,7 +3,7 @@\n use crate::cstore::{self, CrateMetadata, MetadataBlob, NativeLibrary, ForeignModule};\n use crate::schema::*;\n \n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc_data_structures::sync::{Lrc, ReadGuard};\n use rustc::hir::map::{DefKey, DefPath, DefPathData, DefPathHash};\n use rustc::hir;"}, {"sha": "a86bc283cedc6d05eba5b2c27d9a124de1fb6729", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -8,7 +8,7 @@ use rustc::hir::def_id::{CrateNum, CRATE_DEF_INDEX, DefIndex, DefId, LocalDefId,\n use rustc::hir::GenericParamKind;\n use rustc::hir::map::definitions::DefPathTable;\n use rustc_data_structures::fingerprint::Fingerprint;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc::middle::dependency_format::Linkage;\n use rustc::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel,\n                                       metadata_symbol_name};"}, {"sha": "2069adea021b8d841cd9c1af1fbedb2758f6ef0c", "filename": "src/librustc_metadata/schema.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_metadata%2Fschema.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_metadata%2Fschema.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fschema.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -11,7 +11,7 @@ use rustc::session::CrateDisambiguator;\n use rustc::session::config::SymbolManglingVersion;\n use rustc::ty::{self, Ty, ReprOptions};\n use rustc_target::spec::{PanicStrategy, TargetTriple};\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc_data_structures::svh::Svh;\n \n use syntax::{ast, attr};"}, {"sha": "f0cdcf2136bfa7d8945c6e7acc467761db5bdecd", "filename": "src/librustc_mir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2FCargo.toml?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -19,6 +19,7 @@ polonius-engine  = \"0.10.0\"\n rustc = { path = \"../librustc\" }\n rustc_target = { path = \"../librustc_target\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n+rustc_index = { path = \"../librustc_index\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_lexer = { path = \"../librustc_lexer\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }"}, {"sha": "7dd1db3b7bdbc342ae50737fd5cf05040df731db", "filename": "src/librustc_mir/borrow_check/borrow_set.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -8,8 +8,8 @@ use rustc::mir::visit::{PlaceContext, Visitor, NonUseContext, MutatingUseContext\n use rustc::mir::{self, Location, Body, Local};\n use rustc::ty::{RegionVid, TyCtxt};\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n-use rustc_data_structures::indexed_vec::IndexVec;\n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::vec::IndexVec;\n+use rustc_index::bit_set::BitSet;\n use std::fmt;\n use std::ops::Index;\n "}, {"sha": "ef459ef0c1b702c6692317b39dbb7a5ee5fcb8c0", "filename": "src/librustc_mir/borrow_check/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -7,7 +7,7 @@ use rustc::mir::{\n };\n use rustc::ty::{self, Ty};\n use rustc_data_structures::fx::FxHashSet;\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use syntax_pos::Span;\n use syntax::source_map::DesugaringKind;"}, {"sha": "ce5d2a14bd122380711d2b23664750ac5ffa9258", "filename": "src/librustc_mir/borrow_check/flows.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fflows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fflows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fflows.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -5,7 +5,7 @@\n \n use rustc::mir::{BasicBlock, Local, Location};\n use rustc::ty::RegionVid;\n-use rustc_data_structures::bit_set::BitIter;\n+use rustc_index::bit_set::BitIter;\n \n use crate::borrow_check::location::LocationIndex;\n "}, {"sha": "9e94317b87e5493789b563d5d9ad9dd0ffa0a85c", "filename": "src/librustc_mir/borrow_check/location.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Flocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Flocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Flocation.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,5 +1,5 @@\n use rustc::mir::{BasicBlock, Location, Body};\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n \n /// Maps between a MIR Location, which identifies a particular\n /// statement within a basic block, to a \"rich location\", which\n@@ -17,7 +17,7 @@ crate struct LocationTable {\n     statements_before_block: IndexVec<BasicBlock, usize>,\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct LocationIndex {\n         DEBUG_FORMAT = \"LocationIndex({})\"\n     }"}, {"sha": "cfa211ad5afdb9a28f4c324eb56113c1665b2144", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -18,10 +18,10 @@ use rustc::ty::query::Providers;\n use rustc::ty::{self, TyCtxt};\n \n use rustc_errors::{Applicability, Diagnostic, DiagnosticBuilder};\n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::graph::dominators::Dominators;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use smallvec::SmallVec;\n \n use std::collections::BTreeMap;"}, {"sha": "8ab4020394ffdb8665e8af74fdc5833c6d7f9a29", "filename": "src/librustc_mir/borrow_check/mutability_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -5,7 +5,7 @@ use rustc::mir::{\n     Mutability, Place, PlaceRef, PlaceBase, ProjectionElem, Static, StaticKind\n };\n use rustc::ty::{self, Ty, TyCtxt};\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use syntax_pos::Span;\n use syntax_pos::symbol::kw;\n "}, {"sha": "b6a9a7ee6578fc35dc67a8dda3e25b0f42752f73", "filename": "src/librustc_mir/borrow_check/nll/constraints/graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraints%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraints%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraints%2Fgraph.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -4,7 +4,7 @@ use crate::borrow_check::nll::constraints::{OutlivesConstraintSet, OutlivesConst\n use rustc::mir::ConstraintCategory;\n use rustc::ty::RegionVid;\n use rustc_data_structures::graph;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use syntax_pos::DUMMY_SP;\n \n /// The construct graph organizes the constraints by their end-points."}, {"sha": "93113753c630bfbf6061b812395fd0adad0a1946", "filename": "src/librustc_mir/borrow_check/nll/constraints/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraints%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraints%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraints%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -2,7 +2,7 @@ use crate::borrow_check::nll::type_check::Locations;\n use rustc::mir::ConstraintCategory;\n use rustc::ty::RegionVid;\n use rustc_data_structures::graph::scc::Sccs;\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n use std::fmt;\n use std::ops::Index;\n \n@@ -100,13 +100,13 @@ impl fmt::Debug for OutlivesConstraint {\n     }\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct OutlivesConstraintIndex {\n         DEBUG_FORMAT = \"OutlivesConstraintIndex({})\"\n     }\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct ConstraintSccIndex {\n         DEBUG_FORMAT = \"ConstraintSccIndex({})\"\n     }"}, {"sha": "13e5769c5bea8a777b0d8216af992be36a0c2c37", "filename": "src/librustc_mir/borrow_check/nll/facts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ffacts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ffacts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ffacts.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -4,7 +4,7 @@ use polonius_engine::AllFacts as PoloniusAllFacts;\n use polonius_engine::Atom;\n use rustc::mir::Local;\n use rustc::ty::{RegionVid, TyCtxt};\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use std::error::Error;\n use std::fmt::Debug;\n use std::fs::{self, File};"}, {"sha": "fd195873a55e48a4d9e757ce2150cf013e4c4f68", "filename": "src/librustc_mir/borrow_check/nll/member_constraints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmember_constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmember_constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmember_constraints.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -2,7 +2,7 @@ use crate::rustc::ty::{self, Ty};\n use rustc::hir::def_id::DefId;\n use rustc::infer::region_constraints::MemberConstraint;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n use std::hash::Hash;\n use std::ops::Index;\n use syntax_pos::Span;\n@@ -51,7 +51,7 @@ crate struct NllMemberConstraint<'tcx> {\n     end_index: usize,\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     crate struct NllMemberConstraintIndex {\n         DEBUG_FORMAT = \"MemberConstraintIndex({})\"\n     }"}, {"sha": "b2e5751b902e7a9d566a0fe8fa49bbd7a4fa8111", "filename": "src/librustc_mir/borrow_check/nll/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -14,7 +14,7 @@ use rustc::infer::InferCtxt;\n use rustc::mir::{ClosureOutlivesSubject, ClosureRegionRequirements,\n                  Local, Location, Body, LocalKind, BasicBlock, Promoted};\n use rustc::ty::{self, RegionKind, RegionVid};\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc_errors::Diagnostic;\n use std::fmt::Debug;\n use std::env;"}, {"sha": "6d3f2e566382f8059ab3db36910e62ac8ac9aee9", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -12,7 +12,7 @@ use rustc::infer::InferCtxt;\n use rustc::infer::NLLRegionVariableOrigin;\n use rustc::mir::{ConstraintCategory, Location, Body};\n use rustc::ty::{self, RegionVid};\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc_errors::DiagnosticBuilder;\n use std::collections::VecDeque;\n use syntax::errors::Applicability;"}, {"sha": "7f0e97c9ae4264a5f555f75c82e3e65dfa5d3217", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/var_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fvar_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fvar_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fvar_name.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -3,7 +3,7 @@ use crate::borrow_check::nll::ToRegionVid;\n use crate::borrow_check::Upvar;\n use rustc::mir::{Local, Body};\n use rustc::ty::{RegionVid, TyCtxt};\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use syntax::source_map::Span;\n use syntax_pos::symbol::Symbol;\n "}, {"sha": "38df8035397123ac2fb66c366fd24939b9e5e48b", "filename": "src/librustc_mir/borrow_check/nll/region_infer/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -27,12 +27,12 @@ use rustc::mir::{\n use rustc::ty::{self, subst::SubstsRef, RegionVid, Ty, TyCtxt, TypeFoldable};\n use rustc::util::common::ErrorReported;\n use rustc_data_structures::binary_search_util;\n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::graph::WithSuccessors;\n use rustc_data_structures::graph::scc::Sccs;\n use rustc_data_structures::graph::vec_graph::VecGraph;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc_errors::{Diagnostic, DiagnosticBuilder};\n use syntax_pos::Span;\n "}, {"sha": "6acbff76bdc90a4ca5d74a53f648c8b0a540b647", "filename": "src/librustc_mir/borrow_check/nll/region_infer/values.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fvalues.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,9 +1,9 @@\n use rustc::mir::{BasicBlock, Location, Body};\n use rustc::ty::{self, RegionVid};\n-use rustc_data_structures::bit_set::{HybridBitSet, SparseBitMatrix};\n+use rustc_index::bit_set::{HybridBitSet, SparseBitMatrix};\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::indexed_vec::Idx;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::Idx;\n+use rustc_index::vec::IndexVec;\n use std::fmt::Debug;\n use std::rc::Rc;\n \n@@ -116,13 +116,13 @@ impl RegionValueElements {\n     }\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     /// A single integer representing a `Location` in the MIR control-flow\n     /// graph. Constructed efficiently from `RegionValueElements`.\n     pub struct PointIndex { DEBUG_FORMAT = \"PointIndex({})\" }\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     /// A single integer representing a `ty::Placeholder`.\n     pub struct PlaceholderIndex { DEBUG_FORMAT = \"PlaceholderIndex({})\" }\n }"}, {"sha": "cd13803875b5d44f7bd2599b172cef644387edb3", "filename": "src/librustc_mir/borrow_check/nll/renumber.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Frenumber.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Frenumber.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Frenumber.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -3,7 +3,7 @@ use rustc::ty::{self, ClosureSubsts, GeneratorSubsts, Ty, TypeFoldable};\n use rustc::mir::{Location, Body, Promoted};\n use rustc::mir::visit::{MutVisitor, TyContext};\n use rustc::infer::{InferCtxt, NLLRegionVariableOrigin};\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n \n /// Replaces all free regions appearing in the MIR with fresh\n /// inference variables, returning the number of variables created."}, {"sha": "d74dd0fc0f5f148f8a61ff50fdb40166f2e29d4a", "filename": "src/librustc_mir/borrow_check/nll/type_check/input_output.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Finput_output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Finput_output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Finput_output.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -12,7 +12,7 @@ use rustc::infer::LateBoundRegionConversionTime;\n use rustc::mir::*;\n use rustc::ty::Ty;\n \n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use syntax_pos::Span;\n \n use super::{Locations, TypeChecker};"}, {"sha": "7689ece706695c0acce58afabcc4de6b6e2d069f", "filename": "src/librustc_mir/borrow_check/nll/type_check/liveness/local_use_map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness%2Flocal_use_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness%2Flocal_use_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness%2Flocal_use_map.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -2,7 +2,7 @@ use crate::borrow_check::nll::region_infer::values::{PointIndex, RegionValueElem\n use crate::util::liveness::{categorize, DefUse};\n use rustc::mir::visit::{PlaceContext, Visitor};\n use rustc::mir::{Body, Local, Location};\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc_data_structures::vec_linked_list as vll;\n \n /// A map that cross references each local with the locations where it\n@@ -44,7 +44,7 @@ struct Appearance {\n     next: Option<AppearanceIndex>,\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct AppearanceIndex { .. }\n }\n "}, {"sha": "36482a7b13534f56433df3b0068e4345019fffff", "filename": "src/librustc_mir/borrow_check/nll/type_check/liveness/trace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness%2Ftrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness%2Ftrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness%2Ftrace.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -12,7 +12,7 @@ use rustc::traits::query::dropck_outlives::DropckOutlivesResult;\n use rustc::traits::query::type_op::outlives::DropckOutlives;\n use rustc::traits::query::type_op::TypeOp;\n use rustc::ty::{Ty, TypeFoldable};\n-use rustc_data_structures::bit_set::HybridBitSet;\n+use rustc_index::bit_set::HybridBitSet;\n use rustc_data_structures::fx::FxHashMap;\n use std::rc::Rc;\n "}, {"sha": "b24ba596d7e93a4d9f9dee9603381e018661300a", "filename": "src/librustc_mir/borrow_check/nll/type_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -43,7 +43,7 @@ use rustc::ty::{\n     UserTypeAnnotationIndex,\n };\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n+use rustc_index::vec::{IndexVec, Idx};\n use rustc::ty::layout::VariantIdx;\n use std::rc::Rc;\n use std::{fmt, iter, mem};"}, {"sha": "b4470582b7145d332f083c12ee0213eb2c14d351", "filename": "src/librustc_mir/borrow_check/nll/universal_regions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Funiversal_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Funiversal_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Funiversal_regions.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -21,7 +21,7 @@ use rustc::ty::fold::TypeFoldable;\n use rustc::ty::subst::{InternalSubsts, SubstsRef, Subst};\n use rustc::ty::{self, ClosureSubsts, GeneratorSubsts, RegionVid, Ty, TyCtxt};\n use rustc::util::nodemap::FxHashMap;\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc_errors::DiagnosticBuilder;\n use std::iter;\n "}, {"sha": "17308119339fd4e2daef1075a500d4c448e75776", "filename": "src/librustc_mir/build/expr/as_place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_place.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -8,7 +8,7 @@ use rustc::mir::interpret::{PanicInfo::BoundsCheck};\n use rustc::mir::*;\n use rustc::ty::{CanonicalUserTypeAnnotation, Variance};\n \n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n \n impl<'a, 'tcx> Builder<'a, 'tcx> {\n     /// Compile `expr`, yielding a place that we can move from etc."}, {"sha": "b4d93a4493fd9b14b8648f75d60608ad10f7e0fb", "filename": "src/librustc_mir/build/expr/as_rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,7 +1,7 @@\n //! See docs in `build/expr/mod.rs`.\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n \n use crate::build::expr::category::{Category, RvalueFunc};\n use crate::build::{BlockAnd, BlockAndExtension, Builder};"}, {"sha": "861de07c612e9bbaaa9b2f23616a946167161c99", "filename": "src/librustc_mir/build/matches/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -15,7 +15,7 @@ use rustc::mir::*;\n use rustc::middle::region;\n use rustc::ty::{self, CanonicalUserTypeAnnotation, Ty};\n use rustc::ty::layout::VariantIdx;\n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use syntax::ast::Name;\n use syntax_pos::Span;"}, {"sha": "a04c989e6e0debacf82ec1bb259d350dbf09c7f4", "filename": "src/librustc_mir/build/matches/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Ftest.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -9,9 +9,9 @@ use crate::build::Builder;\n use crate::build::matches::{Candidate, MatchPair, Test, TestKind};\n use crate::hair::*;\n use crate::hair::pattern::compare_const_vals;\n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc::ty::{self, Ty, adjustment::{PointerCast}};\n+use rustc::ty::{self, Ty, adjustment::PointerCast};\n use rustc::ty::util::IntTypeExt;\n use rustc::ty::layout::VariantIdx;\n use rustc::mir::*;"}, {"sha": "9c30d9509908b7e89520929a7aa26beda4cc0659", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -14,7 +14,7 @@ use rustc::ty::{self, Ty, TyCtxt};\n use rustc::ty::subst::Subst;\n use rustc::util::nodemap::HirIdMap;\n use rustc_target::spec::PanicStrategy;\n-use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n+use rustc_index::vec::{IndexVec, Idx};\n use std::u32;\n use rustc_target::spec::abi::Abi;\n use syntax::attr::{self, UnwindAttr};\n@@ -455,7 +455,7 @@ struct CFG<'tcx> {\n     basic_blocks: IndexVec<BasicBlock, BasicBlockData<'tcx>>,\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct ScopeId { .. }\n }\n "}, {"sha": "e0ca10535237bd3c0bf87c820c97ba74d9c68b90", "filename": "src/librustc_mir/dataflow/at_location.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fdataflow%2Fat_location.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fdataflow%2Fat_location.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fat_location.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -2,7 +2,7 @@\n //! locations.\n \n use rustc::mir::{BasicBlock, Location};\n-use rustc_data_structures::bit_set::{BitIter, BitSet, HybridBitSet};\n+use rustc_index::bit_set::{BitIter, BitSet, HybridBitSet};\n \n use crate::dataflow::{BitDenotation, DataflowResults, GenKillSet};\n use crate::dataflow::move_paths::{HasMoveData, MovePathIndex};"}, {"sha": "6f598469e9dae2dc9c82b27e4b4f4ab4c21d00a6", "filename": "src/librustc_mir/dataflow/generic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fdataflow%2Fgeneric.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fdataflow%2Fgeneric.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fgeneric.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -20,8 +20,8 @@ use std::cmp::Ordering;\n use std::ops;\n \n use rustc::mir::{self, traversal, BasicBlock, Location};\n-use rustc_data_structures::bit_set::BitSet;\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc_data_structures::work_queue::WorkQueue;\n \n use crate::dataflow::BottomValue;"}, {"sha": "5e64144df2cd1c371d93d4b1b995017f191f3fd3", "filename": "src/librustc_mir/dataflow/impls/borrows.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -5,9 +5,9 @@ use rustc::mir::{self, Location, Place, PlaceBase, Body};\n use rustc::ty::{self, TyCtxt};\n use rustc::ty::RegionVid;\n \n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n \n use crate::dataflow::{BitDenotation, BottomValue, GenKillSet};\n use crate::borrow_check::nll::region_infer::RegionInferenceContext;\n@@ -16,7 +16,7 @@ use crate::borrow_check::places_conflict;\n \n use std::rc::Rc;\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct BorrowIndex {\n         DEBUG_FORMAT = \"bw{}\"\n     }"}, {"sha": "535b803b85f35cc3b9140a765f50fa842dbd72e7", "filename": "src/librustc_mir/dataflow/impls/indirect_mutation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Findirect_mutation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Findirect_mutation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Findirect_mutation.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,7 +1,7 @@\n use rustc::mir::visit::Visitor;\n use rustc::mir::{self, Local, Location};\n use rustc::ty::{self, TyCtxt};\n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n use syntax_pos::DUMMY_SP;\n \n use crate::dataflow::{self, GenKillSet};"}, {"sha": "6f860d00a22c2d5eaf699119b9123ebe622f16c1", "filename": "src/librustc_mir/dataflow/impls/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -4,8 +4,8 @@\n \n use rustc::ty::TyCtxt;\n use rustc::mir::{self, Body, Location};\n-use rustc_data_structures::bit_set::BitSet;\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::Idx;\n \n use super::MoveDataParamEnv;\n "}, {"sha": "06999abdc8b264025f1136dddb88153e67f14c9e", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,8 +1,8 @@\n use syntax::ast::{self, MetaItem};\n use syntax::symbol::{Symbol, sym};\n \n-use rustc_data_structures::bit_set::{BitSet, HybridBitSet};\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::bit_set::{BitSet, HybridBitSet};\n+use rustc_index::vec::Idx;\n use rustc_data_structures::work_queue::WorkQueue;\n \n use rustc::hir::def_id::DefId;"}, {"sha": "53b18e4364b95e03da6f9ed6ef7462b443f93971", "filename": "src/librustc_mir/dataflow/move_paths/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,7 +1,7 @@\n use rustc::mir::tcx::RvalueInitializationState;\n use rustc::mir::*;\n use rustc::ty::{self, TyCtxt};\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use smallvec::{smallvec, SmallVec};\n \n use std::collections::hash_map::Entry;"}, {"sha": "f5a03316d809c0f8bbbd84d0b85dd3b40e17c606", "filename": "src/librustc_mir/dataflow/move_paths/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -2,7 +2,7 @@ use core::slice::Iter;\n use rustc::mir::*;\n use rustc::ty::{Ty, TyCtxt};\n use rustc::util::nodemap::FxHashMap;\n-use rustc_data_structures::indexed_vec::{Enumerated, Idx, IndexVec};\n+use rustc_index::vec::{Enumerated, Idx, IndexVec};\n use smallvec::SmallVec;\n use syntax_pos::Span;\n \n@@ -13,19 +13,19 @@ use self::abs_domain::{AbstractElem, Lift};\n \n mod abs_domain;\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct MovePathIndex {\n         DEBUG_FORMAT = \"mp{}\"\n     }\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct MoveOutIndex {\n         DEBUG_FORMAT = \"mo{}\"\n     }\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct InitIndex {\n         DEBUG_FORMAT = \"in{}\"\n     }"}, {"sha": "e9777dab26e2a5cd5c52dc9352f4d3422244a2d5", "filename": "src/librustc_mir/hair/cx/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fhair%2Fcx%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fhair%2Fcx%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fblock.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -5,7 +5,7 @@ use rustc::middle::region;\n use rustc::hir;\n use rustc::ty;\n \n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n \n impl<'tcx> Mirror<'tcx> for &'tcx hir::Block {\n     type Output = Block<'tcx>;"}, {"sha": "db314cb5fafd48c5cad23da21d065263153acbb0", "filename": "src/librustc_mir/hair/cx/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -3,7 +3,7 @@ use crate::hair::cx::Cx;\n use crate::hair::cx::block;\n use crate::hair::cx::to_ref::ToRef;\n use crate::hair::util::UserAnnotatedTyHelpers;\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use rustc::hir::def::{CtorOf, Res, DefKind, CtorKind};\n use rustc::mir::interpret::{GlobalId, ErrorHandled, ConstValue};\n use rustc::ty::{self, AdtKind, Ty};"}, {"sha": "e120b496d3d09c57eea70c65f447d07537fd0f3f", "filename": "src/librustc_mir/hair/cx/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -5,7 +5,7 @@\n use crate::hair::*;\n use crate::hair::util::UserAnnotatedTyHelpers;\n \n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use rustc::hir::def_id::DefId;\n use rustc::hir::Node;\n use rustc::middle::region;"}, {"sha": "d3bc61a4dde560b69cc62125108ed2ded5c4f963", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -161,7 +161,7 @@ use self::Usefulness::*;\n use self::WitnessPreference::*;\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n \n use super::{FieldPat, Pat, PatKind, PatRange};\n use super::{PatternFoldable, PatternFolder, compare_const_vals};"}, {"sha": "58d741b9295a3b209dd4652b75a50f5996f8fcfe", "filename": "src/librustc_mir/hair/pattern/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -24,7 +24,7 @@ use rustc::hir::def::{CtorOf, Res, DefKind, CtorKind};\n use rustc::hir::pat_util::EnumerateAndAdjustIterator;\n use rustc::hir::ptr::P;\n \n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use rustc_data_structures::fx::FxHashSet;\n \n use std::cmp::Ordering;"}, {"sha": "e1c45132103b450049f70cd48db64fb62be236d9", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -12,7 +12,7 @@ use rustc::ty::layout::{\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc::ty::query::TyCtxtAt;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc::mir::interpret::{\n     GlobalId, Scalar, Pointer, FrameInfo, AllocId,\n     InterpResult, truncate, sign_extend,"}, {"sha": "7ce151e087a6bcaff56548228870bfc067341753", "filename": "src/librustc_mir/interpret/snapshot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -17,7 +17,7 @@ use rustc::mir::interpret::{\n use rustc::ty::{self, TyCtxt};\n use rustc::ty::layout::{Align, Size};\n use rustc_data_structures::fx::FxHashSet;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use syntax::ast::Mutability;\n use syntax::source_map::Span;"}, {"sha": "da3fead1f9dd7e5cc1b7aa4cc0d238a5627c36f7", "filename": "src/librustc_mir/lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flints.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,4 +1,4 @@\n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n use rustc::hir::def_id::DefId;\n use rustc::hir::intravisit::FnKind;\n use rustc::hir::map::blocks::FnLikeNode;"}, {"sha": "9c58e2aa16c1d02e7f88b9ea320408c7f6fd990d", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -194,7 +194,7 @@ use crate::monomorphize;\n use rustc::util::nodemap::{FxHashSet, FxHashMap, DefIdMap};\n use rustc::util::common::time;\n \n-use rustc_data_structures::bit_set::GrowableBitSet;\n+use rustc_index::bit_set::GrowableBitSet;\n use rustc_data_structures::sync::{MTRef, MTLock, ParallelIterator, par_iter};\n \n use std::iter;"}, {"sha": "7303880602e9255678fbc01bbaa0fb8079deda66", "filename": "src/librustc_mir/shim.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fshim.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -6,7 +6,7 @@ use rustc::ty::layout::VariantIdx;\n use rustc::ty::subst::{Subst, InternalSubsts};\n use rustc::ty::query::Providers;\n \n-use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n+use rustc_index::vec::{IndexVec, Idx};\n \n use rustc_target::spec::abi::Abi;\n use syntax_pos::{Span, sym};"}, {"sha": "bf3df1ae2fd8484ab6fa6919427a61488b20f029", "filename": "src/librustc_mir/transform/add_call_guards.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fadd_call_guards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fadd_call_guards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fadd_call_guards.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,6 +1,6 @@\n use rustc::ty::TyCtxt;\n use rustc::mir::*;\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n use crate::transform::{MirPass, MirSource};\n \n #[derive(PartialEq)]"}, {"sha": "0c6468309dc4b9bc0a9ff8a5459ba961b3c48856", "filename": "src/librustc_mir/transform/check_consts/qualifs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -3,7 +3,7 @@\n use rustc::mir::*;\n use rustc::mir::interpret::ConstValue;\n use rustc::ty::{self, Ty};\n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n use syntax_pos::DUMMY_SP;\n \n use super::Item as ConstCx;"}, {"sha": "f95b240195b1e1976823fba65e2bab423d9c972c", "filename": "src/librustc_mir/transform/check_consts/resolver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -5,7 +5,7 @@\n \n use rustc::mir::visit::Visitor;\n use rustc::mir::{self, BasicBlock, Local, Location};\n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n \n use std::cell::RefCell;\n use std::marker::PhantomData;"}, {"sha": "e74b22b43525c8ae8f7709d3770ee7f78c6b06a9", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -5,7 +5,7 @@ use rustc::mir::visit::{PlaceContext, Visitor, MutatingUseContext, NonMutatingUs\n use rustc::mir::*;\n use rustc::ty::cast::CastTy;\n use rustc::ty::{self, TyCtxt};\n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n use rustc_target::spec::abi::Abi;\n use syntax::symbol::sym;\n use syntax_pos::Span;"}, {"sha": "70855d70228b3536e8456b04c665e180a8f46e6c", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,5 +1,5 @@\n use rustc_data_structures::fx::FxHashSet;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc_data_structures::sync::Lrc;\n \n use rustc::ty::query::Providers;"}, {"sha": "f34bfbeab3b47bf445a01f838fb59dc45b892315", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -21,7 +21,7 @@ use syntax::ast::Mutability;\n use syntax_pos::{Span, DUMMY_SP};\n use rustc::ty::subst::InternalSubsts;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc::ty::layout::{\n     LayoutOf, TyLayout, LayoutError, HasTyCtxt, TargetDataLayout, HasDataLayout,\n };"}, {"sha": "f91a08bcd9aa6349bad6776129a54d3cf414e0f2", "filename": "src/librustc_mir/transform/elaborate_drops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -14,7 +14,7 @@ use rustc::ty::layout::VariantIdx;\n use rustc::hir;\n use rustc::mir::*;\n use rustc::util::nodemap::FxHashMap;\n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n use std::fmt;\n use syntax_pos::Span;\n "}, {"sha": "bfc5eb5a94ef88ea37410dc1a6e3f9ffb96c4b5e", "filename": "src/librustc_mir/transform/generator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -58,8 +58,8 @@ use rustc::ty::GeneratorSubsts;\n use rustc::ty::layout::VariantIdx;\n use rustc::ty::subst::SubstsRef;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n-use rustc_data_structures::bit_set::{BitSet, BitMatrix};\n+use rustc_index::vec::{Idx, IndexVec};\n+use rustc_index::bit_set::{BitSet, BitMatrix};\n use std::borrow::Cow;\n use std::iter;\n use std::mem;"}, {"sha": "9830ed35ffc3ed0b10ed8bfc890b6cfe37fb51f6", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -3,8 +3,8 @@\n use rustc::hir::CodegenFnAttrFlags;\n use rustc::hir::def_id::DefId;\n \n-use rustc_data_structures::bit_set::BitSet;\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::{Idx, IndexVec};\n \n use rustc::mir::*;\n use rustc::mir::visit::*;"}, {"sha": "bb98d63b1ee10b4b317588e2aecc3b658d40ebc1", "filename": "src/librustc_mir/transform/instcombine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -5,7 +5,7 @@ use rustc::mir::{Constant, Location, Place, PlaceBase, Body, Operand, Projection\n use rustc::mir::visit::{MutVisitor, Visitor};\n use rustc::ty::{self, TyCtxt};\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use std::mem;\n use crate::transform::{MirPass, MirSource};\n "}, {"sha": "7e06729c2c742df9b41361b703738c05ce5d53d8", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,5 +1,5 @@\n use crate::{build, shim};\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use rustc::hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc::mir::{Body, MirPhase, Promoted};\n use rustc::ty::{TyCtxt, InstanceDef};"}, {"sha": "5d241ffe1c06a6860c98c42b40cb34538fdaac98", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -20,7 +20,7 @@ use rustc::ty::subst::InternalSubsts;\n use rustc::ty::TyCtxt;\n use syntax_pos::Span;\n \n-use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n+use rustc_index::vec::{IndexVec, Idx};\n \n use std::{iter, mem, usize};\n "}, {"sha": "2fa6b9d1a29366ef1096657f031f5cb0a562e408", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -4,8 +4,8 @@\n //! The Qualif flags below can be used to also provide better\n //! diagnostics as to why a constant rvalue wasn't promoted.\n \n-use rustc_data_structures::bit_set::BitSet;\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::IndexVec;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_target::spec::abi::Abi;\n use rustc::hir;"}, {"sha": "e1994c5f639b0e0882c1bfb2dc003d23355f99d8", "filename": "src/librustc_mir/transform/remove_noop_landing_pads.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,6 +1,6 @@\n use rustc::ty::TyCtxt;\n use rustc::mir::*;\n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n use crate::transform::{MirPass, MirSource};\n use crate::util::patch::MirPatch;\n "}, {"sha": "f509d2d7104eb31961ad26e23c8be10c93681b7d", "filename": "src/librustc_mir/transform/rustc_peek.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -6,7 +6,7 @@ use syntax_pos::Span;\n use rustc::ty::{self, TyCtxt};\n use rustc::hir::def_id::DefId;\n use rustc::mir::{self, Body, Location};\n-use rustc_data_structures::bit_set::BitSet;\n+use rustc_index::bit_set::BitSet;\n use crate::transform::{MirPass, MirSource};\n \n use crate::dataflow::{do_dataflow, DebugFormatted};"}, {"sha": "9ffff9a92fa53d041255af2ac45ce90c17f1af05", "filename": "src/librustc_mir/transform/simplify.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -27,8 +27,8 @@\n //! naively generate still contains the `_a = ()` write in the unreachable block \"after\" the\n //! return.\n \n-use rustc_data_structures::bit_set::BitSet;\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc::ty::TyCtxt;\n use rustc::mir::*;\n use rustc::mir::visit::{MutVisitor, Visitor, PlaceContext};"}, {"sha": "efa39d91205b467ba3f260dbd64bb15b6320ab2a", "filename": "src/librustc_mir/transform/uniform_array_move_out.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Funiform_array_move_out.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Ftransform%2Funiform_array_move_out.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Funiform_array_move_out.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -30,7 +30,7 @@ use rustc::ty;\n use rustc::ty::TyCtxt;\n use rustc::mir::*;\n use rustc::mir::visit::{Visitor, PlaceContext, NonUseContext};\n-use rustc_data_structures::indexed_vec::{IndexVec};\n+use rustc_index::vec::{IndexVec};\n use crate::transform::{MirPass, MirSource};\n use crate::util::patch::MirPatch;\n "}, {"sha": "c0f921857455683d52f12e409306143e90feece8", "filename": "src/librustc_mir/util/aggregate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Futil%2Faggregate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Futil%2Faggregate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Faggregate.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,7 +1,7 @@\n use rustc::mir::*;\n use rustc::ty::Ty;\n use rustc::ty::layout::VariantIdx;\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n \n use std::iter::TrustedLen;\n "}, {"sha": "3aea25fa8769fe708623e42c8b86a97c97ee9f7b", "filename": "src/librustc_mir/util/def_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Futil%2Fdef_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Futil%2Fdef_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fdef_use.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -2,7 +2,7 @@\n \n use rustc::mir::{Local, Location, Body};\n use rustc::mir::visit::{PlaceContext, MutVisitor, Visitor};\n-use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_index::vec::IndexVec;\n use std::mem;\n \n pub struct DefUseAnalysis {"}, {"sha": "37b9398f9cb612233a4bf9db46f284d20104e44c", "filename": "src/librustc_mir/util/elaborate_drops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -7,7 +7,7 @@ use rustc::ty::{self, Ty, TyCtxt};\n use rustc::ty::layout::VariantIdx;\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::util::IntTypeExt;\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use crate::util::patch::MirPatch;\n \n use std::convert::TryInto;"}, {"sha": "7fcb7a40a3c0893d5cdbd8a291236fb516dbfabd", "filename": "src/librustc_mir/util/graphviz.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,7 +1,7 @@\n use rustc::hir::def_id::DefId;\n use rustc::mir::*;\n use rustc::ty::TyCtxt;\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use std::fmt::Debug;\n use std::io::{self, Write};\n "}, {"sha": "9757f4ac392ec8d8e273f9417f6d99cb8f587b33", "filename": "src/librustc_mir/util/liveness.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fliveness.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -30,8 +30,8 @@ use rustc::mir::visit::{\n use rustc::mir::Local;\n use rustc::mir::*;\n use rustc::ty::{self, TyCtxt};\n-use rustc_data_structures::bit_set::BitSet;\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc_data_structures::work_queue::WorkQueue;\n use std::fs;\n use std::io::{self, Write};"}, {"sha": "a5f7e5401573bd606ac6374e06397e21166954d0", "filename": "src/librustc_mir/util/patch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Futil%2Fpatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Futil%2Fpatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fpatch.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -1,6 +1,6 @@\n use rustc::ty::Ty;\n use rustc::mir::*;\n-use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n+use rustc_index::vec::{IndexVec, Idx};\n use syntax_pos::Span;\n \n /// This struct represents a patch to MIR, which can add"}, {"sha": "7f6b60b1b116b48877fb18214adab1247407c997", "filename": "src/librustc_mir/util/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fpretty.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -3,7 +3,7 @@ use rustc::mir::*;\n use rustc::mir::visit::Visitor;\n use rustc::ty::{self, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use std::fmt::Display;\n use std::fmt::Write as _;\n use std::fs;"}, {"sha": "fba2ea02bb44ac45131310fa62cb35cc8022c5c1", "filename": "src/librustc_target/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_target%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_target%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2FCargo.toml?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -14,3 +14,4 @@ log = \"0.4\"\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n+rustc_index = { path = \"../librustc_index\" }"}, {"sha": "26d37f196befac3b9f15ed3b8e0d25af295043cc", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -6,8 +6,7 @@ use crate::spec::Target;\n use std::fmt;\n use std::ops::{Add, Deref, Sub, Mul, AddAssign, Range, RangeInclusive};\n \n-use rustc_data_structures::newtype_index;\n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_index::vec::{Idx, IndexVec};\n use syntax_pos::symbol::{sym, Symbol};\n use syntax_pos::Span;\n \n@@ -844,7 +843,7 @@ impl Abi {\n     }\n }\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct VariantIdx { .. }\n }\n "}, {"sha": "a6644258be280082764c5b18d898972fe9e1268b", "filename": "src/librustc_typeck/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_typeck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_typeck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2FCargo.toml?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -20,3 +20,4 @@ rustc_target = { path = \"../librustc_target\" }\n smallvec = { version = \"0.6.7\", features = [\"union\", \"may_dangle\"] }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n+rustc_index = { path = \"../librustc_index\" }"}, {"sha": "5e3db1c7990d0a6817fc6b8be47b9cc52aabeaa9", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -99,7 +99,7 @@ use crate::middle::lang_items;\n use crate::namespace::Namespace;\n use rustc::infer::{self, InferCtxt, InferOk, InferResult};\n use rustc::infer::canonical::{Canonical, OriginalQueryValues, QueryResponse};\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n use rustc_target::spec::abi::Abi;\n use rustc::infer::opaque_types::OpaqueTypeDecl;\n use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};"}, {"sha": "8f35ca01f79df2c8349109e9fa2ad95aca54374c", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -9,7 +9,7 @@ mod simplify;\n mod auto_trait;\n mod blanket_impl;\n \n-use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n+use rustc_index::vec::{IndexVec, Idx};\n use rustc_target::spec::abi::Abi;\n use rustc_typeck::hir_ty_to_ty;\n use rustc::infer::region_constraints::{RegionConstraintData, Constraint};"}, {"sha": "539bf5dfe28e629fff59367218888c7853f6ad0e", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -25,6 +25,7 @@ extern crate getopts;\n extern crate env_logger;\n extern crate rustc;\n extern crate rustc_data_structures;\n+extern crate rustc_index;\n extern crate rustc_driver;\n extern crate rustc_resolve;\n extern crate rustc_lint;"}, {"sha": "d8de21cc6778f1cdffc39cdfa211d91a209529fb", "filename": "src/libsyntax/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibsyntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibsyntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2FCargo.toml?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -18,6 +18,7 @@ lazy_static = \"1.0.0\"\n syntax_pos = { path = \"../libsyntax_pos\" }\n errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n+rustc_index = { path = \"../librustc_index\" }\n rustc_lexer = { path = \"../librustc_lexer\" }\n rustc_target = { path = \"../librustc_target\" }\n smallvec = { version = \"0.6.7\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "7a5c92167bc457ed788cf0334aa304c54d543f93", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -14,7 +14,7 @@ use crate::symbol::{kw, sym, Symbol};\n use crate::tokenstream::TokenStream;\n use crate::ThinVec;\n \n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_index::vec::Idx;\n #[cfg(target_arch = \"x86_64\")]\n use rustc_data_structures::static_assert_size;\n use rustc_target::spec::abi::Abi;\n@@ -241,9 +241,8 @@ impl ParenthesizedArgs {\n \n // hack to ensure that we don't try to access the private parts of `NodeId` in this module\n mod node_id_inner {\n-    use rustc_data_structures::indexed_vec::Idx;\n-    use rustc_data_structures::newtype_index;\n-    newtype_index! {\n+    use rustc_index::vec::Idx;\n+    rustc_index::newtype_index! {\n         pub struct NodeId {\n             ENCODABLE = custom\n             DEBUG_FORMAT = \"NodeId({})\""}, {"sha": "d2c76b669dd5fef54014896c2e84ad4d20325c0d", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -26,7 +26,7 @@ extern crate proc_macro;\n \n pub use errors;\n use rustc_data_structures::sync::Lock;\n-use rustc_data_structures::bit_set::GrowableBitSet;\n+use rustc_index::bit_set::GrowableBitSet;\n pub use rustc_data_structures::thin_vec::ThinVec;\n use ast::AttrId;\n use syntax_pos::edition::Edition;"}, {"sha": "378f7a955a36fb6edd0ae80ca3cea99f18e8688f", "filename": "src/libsyntax_pos/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibsyntax_pos%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibsyntax_pos%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2FCargo.toml?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -13,6 +13,7 @@ doctest = false\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n rustc_macros = { path = \"../librustc_macros\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n+rustc_index = { path = \"../librustc_index\" }\n arena = { path = \"../libarena\" }\n scoped-tls = \"1.0\"\n unicode-width = \"0.1.4\""}, {"sha": "1769135e7f21a1b6948df0e79dfdfe2977f320b5", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -4,8 +4,7 @@\n \n use arena::DroplessArena;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::indexed_vec::Idx;\n-use rustc_data_structures::newtype_index;\n+use rustc_index::vec::Idx;\n use rustc_macros::symbols;\n use rustc_serialize::{Decodable, Decoder, Encodable, Encoder};\n use rustc_serialize::{UseSpecializedDecodable, UseSpecializedEncodable};\n@@ -897,15 +896,15 @@ impl UseSpecializedDecodable for Ident {\n /// ```\n /// Internally, a symbol is implemented as an index, and all operations\n /// (including hashing, equality, and ordering) operate on that index. The use\n-/// of `newtype_index!` means that `Option<Symbol>` only takes up 4 bytes,\n-/// because `newtype_index!` reserves the last 256 values for tagging purposes.\n+/// of `rustc_index::newtype_index!` means that `Option<Symbol>` only takes up 4 bytes,\n+/// because `rustc_index::newtype_index!` reserves the last 256 values for tagging purposes.\n ///\n-/// Note that `Symbol` cannot directly be a `newtype_index!` because it\n+/// Note that `Symbol` cannot directly be a `rustc_index::newtype_index!` because it\n /// implements `fmt::Debug`, `Encodable`, and `Decodable` in special ways.\n #[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct Symbol(SymbolIndex);\n \n-newtype_index! {\n+rustc_index::newtype_index! {\n     pub struct SymbolIndex { .. }\n }\n "}, {"sha": "fe68b394e5a5cf2c2f9dc01e3a4391d0a2f5523c", "filename": "src/test/ui-fulldeps/newtype_index.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Ftest%2Fui-fulldeps%2Fnewtype_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src%2Ftest%2Fui-fulldeps%2Fnewtype_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fnewtype_index.rs?ref=22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26", "patch": "@@ -2,10 +2,10 @@\n \n #![feature(rustc_private)]\n \n-extern crate rustc_data_structures;\n+extern crate rustc_index;\n extern crate serialize as rustc_serialize;\n \n-use rustc_data_structures::{newtype_index, indexed_vec::Idx};\n+use rustc_index::{newtype_index, vec::Idx};\n \n newtype_index!(struct MyIdx { MAX = 0xFFFF_FFFA });\n "}]}