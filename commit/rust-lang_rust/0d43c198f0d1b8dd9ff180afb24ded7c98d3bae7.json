{"sha": "0d43c198f0d1b8dd9ff180afb24ded7c98d3bae7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNDNjMTk4ZjBkMWI4ZGQ5ZmYxODBhZmIyNGRlZDdjOThkM2JhZTc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-12-11T01:24:53Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-12-11T01:24:53Z"}, "message": "rustc: Add def ids to pattern bindings", "tree": {"sha": "167d941acd7aa19f4e7dc1ac37f27d9ae18a78b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/167d941acd7aa19f4e7dc1ac37f27d9ae18a78b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d43c198f0d1b8dd9ff180afb24ded7c98d3bae7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d43c198f0d1b8dd9ff180afb24ded7c98d3bae7", "html_url": "https://github.com/rust-lang/rust/commit/0d43c198f0d1b8dd9ff180afb24ded7c98d3bae7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d43c198f0d1b8dd9ff180afb24ded7c98d3bae7/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b84707da777a5caa58f7bdda4e1929e8a900404", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b84707da777a5caa58f7bdda4e1929e8a900404", "html_url": "https://github.com/rust-lang/rust/commit/0b84707da777a5caa58f7bdda4e1929e8a900404"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "7106515083ebf51ebf3495e6a4dbc29b21afacb6", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d43c198f0d1b8dd9ff180afb24ded7c98d3bae7/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d43c198f0d1b8dd9ff180afb24ded7c98d3bae7/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=0d43c198f0d1b8dd9ff180afb24ded7c98d3bae7", "patch": "@@ -46,7 +46,7 @@ type block_ = rec(vec[@stmt] stmts,\n type pat = spanned[pat_];\n tag pat_ {\n     pat_wild(ann);\n-    pat_bind(ident, ann);\n+    pat_bind(ident, def_id, ann);\n     pat_tag(ident, vec[@pat], ann);\n }\n "}, {"sha": "f8db2f71b143c2823cbd6f9ee46836cdd30b0ed7", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d43c198f0d1b8dd9ff180afb24ded7c98d3bae7/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d43c198f0d1b8dd9ff180afb24ded7c98d3bae7/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=0d43c198f0d1b8dd9ff180afb24ded7c98d3bae7", "patch": "@@ -883,7 +883,7 @@ impure fn parse_pat(parser p) -> @ast.pat {\n             alt (p.peek()) {\n                 case (token.IDENT(?id)) {\n                     p.bump();\n-                    pat = ast.pat_bind(id, ast.ann_none);\n+                    pat = ast.pat_bind(id, p.next_def_id(), ast.ann_none);\n                 }\n                 case (?tok) {\n                     p.err(\"expected identifier after '?' in pattern but \" +"}, {"sha": "da2415b7b7d4281b636e87f40d9a3053718c8809", "filename": "src/comp/middle/fold.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0d43c198f0d1b8dd9ff180afb24ded7c98d3bae7/src%2Fcomp%2Fmiddle%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d43c198f0d1b8dd9ff180afb24ded7c98d3bae7/src%2Fcomp%2Fmiddle%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ffold.rs?ref=0d43c198f0d1b8dd9ff180afb24ded7c98d3bae7", "patch": "@@ -145,7 +145,7 @@ type ast_fold[ENV] =\n          ann a) -> @pat)                          fold_pat_wild,\n \n      (fn(&ENV e, &span sp,\n-         ident i, ann a) -> @pat)                 fold_pat_bind,\n+         ident i, def_id did, ann a) -> @pat)     fold_pat_bind,\n \n      (fn(&ENV e, &span sp,\n          ident i, vec[@pat] args,\n@@ -340,8 +340,8 @@ fn fold_pat[ENV](&ENV env, ast_fold[ENV] fld, @ast.pat p) -> @ast.pat {\n \n     alt (p.node) {\n         case (ast.pat_wild(?t)) { ret fld.fold_pat_wild(env_, p.span, t); }\n-        case (ast.pat_bind(?id, ?t)) {\n-            ret fld.fold_pat_bind(env_, p.span, id, t);\n+        case (ast.pat_bind(?id, ?did, ?t)) {\n+            ret fld.fold_pat_bind(env_, p.span, id, did, t);\n         }\n         case (ast.pat_tag(?id, ?pats, ?t)) {\n             let vec[@ast.pat] ppats = vec();\n@@ -852,8 +852,9 @@ fn identity_fold_pat_wild[ENV](&ENV e, &span sp, ann a) -> @pat {\n     ret @respan(sp, ast.pat_wild(a));\n }\n \n-fn identity_fold_pat_bind[ENV](&ENV e, &span sp, ident i, ann a) -> @pat {\n-    ret @respan(sp, ast.pat_bind(i, a));\n+fn identity_fold_pat_bind[ENV](&ENV e, &span sp, ident i, def_id did, ann a)\n+        -> @pat {\n+    ret @respan(sp, ast.pat_bind(i, did, a));\n }\n \n fn identity_fold_pat_tag[ENV](&ENV e, &span sp, ident i, vec[@pat] args,\n@@ -1029,7 +1030,7 @@ fn new_identity_fold[ENV]() -> ast_fold[ENV] {\n          fold_decl_item   = bind identity_fold_decl_item[ENV](_,_,_),\n \n          fold_pat_wild    = bind identity_fold_pat_wild[ENV](_,_,_),\n-         fold_pat_bind    = bind identity_fold_pat_bind[ENV](_,_,_,_),\n+         fold_pat_bind    = bind identity_fold_pat_bind[ENV](_,_,_,_,_),\n          fold_pat_tag     = bind identity_fold_pat_tag[ENV](_,_,_,_,_),\n \n          fold_stmt_decl   = bind identity_fold_stmt_decl[ENV](_,_,_),"}]}