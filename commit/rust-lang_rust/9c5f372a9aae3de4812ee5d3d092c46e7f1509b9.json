{"sha": "9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNWYzNzJhOWFhZTNkZTQ4MTJlZTVkM2QwOTJjNDZlN2YxNTA5Yjk=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-24T17:26:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-24T17:26:24Z"}, "message": "Rollup merge of #49046 - Zoxc:error-summary, r=michaelwoerister\n\nAlways print `aborting due to n previous error(s)`\n\nr? @michaelwoerister", "tree": {"sha": "45ecb647c55318eb4a70dc12da817527edb23c06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45ecb647c55318eb4a70dc12da817527edb23c06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJatopACRBK7hj4Ov3rIwAAdHIIAHC1Zw4fpnsa1pPANx9AD0Hk\n3R9OPZoHxp5HCCUG0vepomyKTzsC/qlnY86qUa1IeXvJb2C75+wU96hCdFA6Xw8/\nWgi+XxSMJhqAnU9sRyKD93LTvLTitQEHvGqjK+02PP/8jVklMZVZgr87+6sGzSak\ngjLuZxUpv/TQZxWKkPp0+59rmX51RNjGk6Xrj5YfPpSrbFUjQfb1PNnfzTrk8J9C\nKzsWiKtrya/+f1ux6Jj7C314If24oNlUp8HtJUEWrt07PCWKRSNgIcXV7oFjobTd\nxwZ3Sb5axGKT53cPbZzbnCDYCGzloa2CHUU0U0qnldEk3o8a3hnPzLF4ptQfzY4=\n=pc3I\n-----END PGP SIGNATURE-----\n", "payload": "tree 45ecb647c55318eb4a70dc12da817527edb23c06\nparent b4aa80dd73df9708022cc383aad8da1dcf38d1df\nparent b1d872b38eaacefbef73faa6a4a0c07622a8c941\nauthor kennytm <kennytm@gmail.com> 1521912384 +0800\ncommitter GitHub <noreply@github.com> 1521912384 +0800\n\nRollup merge of #49046 - Zoxc:error-summary, r=michaelwoerister\n\nAlways print `aborting due to n previous error(s)`\n\nr? @michaelwoerister\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "html_url": "https://github.com/rust-lang/rust/commit/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4aa80dd73df9708022cc383aad8da1dcf38d1df", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4aa80dd73df9708022cc383aad8da1dcf38d1df", "html_url": "https://github.com/rust-lang/rust/commit/b4aa80dd73df9708022cc383aad8da1dcf38d1df"}, {"sha": "b1d872b38eaacefbef73faa6a4a0c07622a8c941", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1d872b38eaacefbef73faa6a4a0c07622a8c941", "html_url": "https://github.com/rust-lang/rust/commit/b1d872b38eaacefbef73faa6a4a0c07622a8c941"}], "stats": {"total": 174, "additions": 118, "deletions": 56}, "files": [{"sha": "b9bcbccb30ef37c16ef613b9687a6582a382a966", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 30, "deletions": 24, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -63,6 +63,7 @@ use rustc_resolve as resolve;\n use rustc_save_analysis as save;\n use rustc_save_analysis::DumpHandler;\n use rustc_data_structures::sync::Lrc;\n+use rustc_data_structures::OnDrop;\n use rustc::session::{self, config, Session, build_session, CompileResult};\n use rustc::session::CompileIncomplete;\n use rustc::session::config::{Input, PrintRequest, ErrorOutputType};\n@@ -515,30 +516,35 @@ fn run_compiler_impl<'a>(args: &[String],\n     target_features::add_configuration(&mut cfg, &sess, &*trans);\n     sess.parse_sess.config = cfg;\n \n-    let plugins = sess.opts.debugging_opts.extra_plugins.clone();\n-\n-    let cstore = CStore::new(trans.metadata_loader());\n-\n-    do_or_return!(callbacks.late_callback(&*trans,\n-                                          &matches,\n-                                          &sess,\n-                                          &cstore,\n-                                          &input,\n-                                          &odir,\n-                                          &ofile), Some(sess));\n-\n-    let control = callbacks.build_controller(&sess, &matches);\n-\n-    (driver::compile_input(trans,\n-                           &sess,\n-                           &cstore,\n-                           &input_file_path,\n-                           &input,\n-                           &odir,\n-                           &ofile,\n-                           Some(plugins),\n-                           &control),\n-     Some(sess))\n+    let result = {\n+        let plugins = sess.opts.debugging_opts.extra_plugins.clone();\n+\n+        let cstore = CStore::new(trans.metadata_loader());\n+\n+        do_or_return!(callbacks.late_callback(&*trans,\n+                                              &matches,\n+                                              &sess,\n+                                              &cstore,\n+                                              &input,\n+                                              &odir,\n+                                              &ofile), Some(sess));\n+\n+        let _sess_abort_error = OnDrop(|| sess.diagnostic().print_error_count());\n+\n+        let control = callbacks.build_controller(&sess, &matches);\n+\n+        driver::compile_input(trans,\n+                              &sess,\n+                              &cstore,\n+                              &input_file_path,\n+                              &input,\n+                              &odir,\n+                              &ofile,\n+                              Some(plugins),\n+                              &control)\n+    };\n+\n+    (result, Some(sess))\n }\n \n // Extract output directory and file from matches."}, {"sha": "dcbea793ba6a3e72e2e68414c6220f56d8314de3", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -558,21 +558,15 @@ impl Handler {\n     pub fn has_errors(&self) -> bool {\n         self.err_count() > 0\n     }\n-    pub fn abort_if_errors(&self) {\n-        let s;\n-        match self.err_count() {\n-            0 => {\n-                if let Some(bug) = self.delayed_span_bug.borrow_mut().take() {\n-                    DiagnosticBuilder::new_diagnostic(self, bug).emit();\n-                }\n-                return;\n-            }\n-            1 => s = \"aborting due to previous error\".to_string(),\n-            _ => {\n-                s = format!(\"aborting due to {} previous errors\", self.err_count());\n-            }\n-        }\n-        let err = self.fatal(&s);\n+\n+    pub fn print_error_count(&self) {\n+        let s = match self.err_count() {\n+            0 => return,\n+            1 => \"aborting due to previous error\".to_string(),\n+            _ => format!(\"aborting due to {} previous errors\", self.err_count())\n+        };\n+\n+        let _ = self.fatal(&s);\n \n         let can_show_explain = self.emitter.borrow().should_show_explain();\n         let are_there_diagnostics = !self.tracked_diagnostic_codes.borrow().is_empty();\n@@ -603,8 +597,16 @@ impl Handler {\n                 }\n             }\n         }\n+    }\n \n-        err.raise();\n+    pub fn abort_if_errors(&self) {\n+        if self.err_count() == 0 {\n+            if let Some(bug) = self.delayed_span_bug.borrow_mut().take() {\n+                DiagnosticBuilder::new_diagnostic(self, bug).emit();\n+            }\n+            return;\n+        }\n+        FatalError.raise();\n     }\n     pub fn emit(&self, msp: &MultiSpan, msg: &str, lvl: Level) {\n         if lvl == Warning && !self.flags.can_emit_warnings {"}, {"sha": "0e93277983f8d9fa8400190d15d8c511cd48069b", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -27,6 +27,7 @@ use std::slice;\n use require_c_abi_if_variadic;\n use util::common::ErrorReported;\n use util::nodemap::FxHashSet;\n+use errors::FatalError;\n \n use std::iter;\n use syntax::{abi, ast};\n@@ -337,7 +338,7 @@ impl<'o, 'gcx: 'tcx, 'tcx> AstConv<'gcx, 'tcx>+'o {\n             Def::Trait(trait_def_id) => trait_def_id,\n             Def::TraitAlias(alias_def_id) => alias_def_id,\n             Def::Err => {\n-                self.tcx().sess.fatal(\"cannot continue compilation due to previous error\");\n+                FatalError.raise();\n             }\n             _ => unreachable!(),\n         }"}, {"sha": "0278256994120983eb1ec8b64a9a97be5a65aa55", "filename": "src/test/ui-fulldeps/custom-derive/issue-36935.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fissue-36935.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fissue-36935.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fissue-36935.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -6,3 +6,5 @@ LL | #[derive(Foo, Bar)] //~ ERROR proc-macro derive panicked\n    |\n    = help: message: lolnope\n \n+error: aborting due to previous error\n+"}, {"sha": "30ad53f9041f0b294e62e189285aefb175516e84", "filename": "src/test/ui-fulldeps/proc-macro/load-panic.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fload-panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fload-panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fload-panic.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -6,3 +6,5 @@ LL | #[derive(A)]\n    |\n    = help: message: nope!\n \n+error: aborting due to previous error\n+"}, {"sha": "e247e86fbcb2281ecf67e9aa5bad6b73617a321e", "filename": "src/test/ui/codemap_tests/two_files.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fcodemap_tests%2Ftwo_files.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fcodemap_tests%2Ftwo_files.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Ftwo_files.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -4,5 +4,6 @@ error[E0404]: expected trait, found type alias `Bar`\n LL | impl Bar for Baz { } //~ ERROR expected trait, found type alias\n    |      ^^^ type aliases cannot be used for traits\n \n-error: cannot continue compilation due to previous error\n+error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0404`."}, {"sha": "a64595fbb40200f66c6b0eaa33400203f6109ab8", "filename": "src/test/ui/cross-file-errors/main.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fcross-file-errors%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fcross-file-errors%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcross-file-errors%2Fmain.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -9,3 +9,5 @@ LL |         _\n LL |     underscore!();\n    |     -------------- in this macro invocation\n \n+error: aborting due to previous error\n+"}, {"sha": "265a688df99105896dda747ad4428dcd1c7f1dff", "filename": "src/test/ui/did_you_mean/recursion_limit_macro.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_macro.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -9,3 +9,5 @@ LL |     recurse!(0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9);\n    |\n    = help: consider adding a `#![recursion_limit=\"20\"]` attribute to your crate\n \n+error: aborting due to previous error\n+"}, {"sha": "afb748bedbe0f8c89579b7878122f7d97d2e718a", "filename": "src/test/ui/error-codes/E0404.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Ferror-codes%2FE0404.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Ferror-codes%2FE0404.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0404.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -10,5 +10,6 @@ error[E0404]: expected trait, found struct `Foo`\n LL | fn baz<T: Foo>(_: T) {} //~ ERROR E0404\n    |           ^^^ not a trait\n \n-error: cannot continue compilation due to previous error\n+error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0404`."}, {"sha": "27190af1c6c11b4e8ececd0fc1c7834d1cdd33a2", "filename": "src/test/ui/error-codes/E0405.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Ferror-codes%2FE0405.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Ferror-codes%2FE0405.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0405.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -4,5 +4,6 @@ error[E0405]: cannot find trait `SomeTrait` in this scope\n LL | impl SomeTrait for Foo {} //~ ERROR E0405\n    |      ^^^^^^^^^ not found in this scope\n \n-error: cannot continue compilation due to previous error\n+error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0405`."}, {"sha": "a2c1dedff385ad9640c66ebfcf2efda04cfd4445", "filename": "src/test/ui/feature-gate-fn_must_use-cap-lints-allow.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Ffeature-gate-fn_must_use-cap-lints-allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Ffeature-gate-fn_must_use-cap-lints-allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-fn_must_use-cap-lints-allow.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -4,3 +4,5 @@ error: compilation successful\n LL | fn main() {} //~ ERROR compilation successful\n    | ^^^^^^^^^^^^\n \n+error: aborting due to previous error\n+"}, {"sha": "431c57abd2653ce6c87bc5fe93a1302e5dca5ff6", "filename": "src/test/ui/feature-gate-fn_must_use.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Ffeature-gate-fn_must_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Ffeature-gate-fn_must_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-fn_must_use.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -20,3 +20,5 @@ error: compilation successful\n LL | fn main() {} //~ ERROR compilation successful\n    | ^^^^^^^^^^^^\n \n+error: aborting due to previous error\n+"}, {"sha": "0beed62798710e9710efff7af3c438e1b0f6e0bf", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -1316,3 +1316,5 @@ LL | |     println!(\"Hello World\");\n LL | | }\n    | |_^\n \n+error: aborting due to previous error\n+"}, {"sha": "802c5d9384d7575f4264652d949fa924a9ae4123", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-deprecated.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-deprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-deprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-deprecated.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -6,3 +6,5 @@ LL | |     println!(\"Hello World\");\n LL | | }\n    | |_^\n \n+error: aborting due to previous error\n+"}, {"sha": "3cc0bebe816550a369aeb042a48adaec757cf39e", "filename": "src/test/ui/impl-trait/universal_wrong_bounds.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal_wrong_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal_wrong_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal_wrong_bounds.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -24,5 +24,7 @@ help: possible candidate is found in another module, you can import it into scop\n LL | use std::fmt::Debug;\n    |\n \n-error: cannot continue compilation due to previous error\n+error: aborting due to 3 previous errors\n \n+Some errors occurred: E0405, E0425.\n+For more information about an error, try `rustc --explain E0405`."}, {"sha": "aeb465b2ab2337ecc2fc9f5632b3d3850bf17bb7", "filename": "src/test/ui/issue-22644.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fissue-22644.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fissue-22644.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-22644.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -89,3 +89,5 @@ error: expected type, found `4`\n LL |     println!(\"{}\", a: &mut 4); //~ ERROR expected type, found `4`\n    |                            ^ expecting a type here because of type ascription\n \n+error: aborting due to 9 previous errors\n+"}, {"sha": "de7c11732e4a39e029c9df88134f2ba062f4da30", "filename": "src/test/ui/issue-44406.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fissue-44406.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fissue-44406.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-44406.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -13,3 +13,5 @@ LL |         bar(baz: $rest)\n LL |     foo!(true); //~ ERROR expected type, found keyword\n    |          ^^^^ expecting a type here because of type ascription\n \n+error: aborting due to 2 previous errors\n+"}, {"sha": "d484061ef9661d6590030eef376f1ead540432c3", "filename": "src/test/ui/lint-output-format-2.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Flint-output-format-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Flint-output-format-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint-output-format-2.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -22,3 +22,5 @@ LL | |     let _y = bar();\n LL | | }\n    | |_^\n \n+error: aborting due to previous error\n+"}, {"sha": "830270a99d1123a9845ba4dc5be3f3e1e1f360f8", "filename": "src/test/ui/loops-reject-duplicate-labels-2.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Floops-reject-duplicate-labels-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Floops-reject-duplicate-labels-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops-reject-duplicate-labels-2.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -70,3 +70,5 @@ LL | |     foo();\n LL | | }\n    | |_^\n \n+error: aborting due to previous error\n+"}, {"sha": "a71f98b812a8c136b6b9dea934367e7de6784bb1", "filename": "src/test/ui/loops-reject-duplicate-labels.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Floops-reject-duplicate-labels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Floops-reject-duplicate-labels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops-reject-duplicate-labels.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -73,3 +73,5 @@ LL | |     foo();\n LL | | }\n    | |_^\n \n+error: aborting due to previous error\n+"}, {"sha": "af524d5b01766e283937f36b9227509420acf6a1", "filename": "src/test/ui/loops-reject-labels-shadowing-lifetimes.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Floops-reject-labels-shadowing-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Floops-reject-labels-shadowing-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops-reject-labels-shadowing-lifetimes.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -108,3 +108,5 @@ LL | |     foo();\n LL | | }\n    | |_^\n \n+error: aborting due to previous error\n+"}, {"sha": "999cfb9cc3c6b62b83825531f4e9bb7d96930030", "filename": "src/test/ui/loops-reject-lifetime-shadowing-label.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Floops-reject-lifetime-shadowing-label.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Floops-reject-lifetime-shadowing-label.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops-reject-lifetime-shadowing-label.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -14,3 +14,5 @@ LL | |     foo();\n LL | | }\n    | |_^\n \n+error: aborting due to previous error\n+"}, {"sha": "b3e67fb2607cdb568a2110e907076e46fb62337d", "filename": "src/test/ui/macro-context.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fmacro-context.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fmacro-context.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacro-context.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -43,3 +43,5 @@ LL |     () => ( i ; typeof );   //~ ERROR expected expression, found reserved k\n LL |     m!();\n    |     ----- in this macro invocation\n \n+error: aborting due to 4 previous errors\n+"}, {"sha": "0f9f0607c5bf2247e7d8f333210eb2b7c68eeb3f", "filename": "src/test/ui/macros/macro_path_as_generic_bound.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fmacros%2Fmacro_path_as_generic_bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fmacros%2Fmacro_path_as_generic_bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro_path_as_generic_bound.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -4,5 +4,6 @@ error[E0433]: failed to resolve. Use of undeclared type or module `m`\n LL | foo!(m::m2::A); //~ ERROR failed to resolve\n    |      ^ Use of undeclared type or module `m`\n \n-error: cannot continue compilation due to previous error\n+error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0433`."}, {"sha": "a9ffef8ef80907d596238b804b765e21639bb7e8", "filename": "src/test/ui/macros/trace_faulty_macros.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -45,3 +45,5 @@ LL |     my_recursive_macro!();\n    = note: expanding `my_recursive_macro! {  }`\n    = note: to `my_recursive_macro ! (  ) ;`\n \n+error: aborting due to 2 previous errors\n+"}, {"sha": "ddf1cfe406f7c3033e22c1951eadf21adc5fa9cd", "filename": "src/test/ui/raw_string.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fraw_string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fraw_string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fraw_string.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -6,3 +6,5 @@ LL |     let x = r##\"lol\"#;\n    |\n    = note: this raw string should be terminated with `\"##`\n \n+error: aborting due to previous error\n+"}, {"sha": "3edfa33d80a02b9526d8163c2951991eba8d5fd1", "filename": "src/test/ui/resolve/issue-21221-1.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -45,5 +45,7 @@ help: possible candidate is found in another module, you can import it into scop\n LL | use std::ops::Div;\n    |\n \n-error: cannot continue compilation due to previous error\n+error: aborting due to 4 previous errors\n \n+Some errors occurred: E0405, E0412.\n+For more information about an error, try `rustc --explain E0405`."}, {"sha": "e11fe9ac4cf119982d10b370125832f04ae87bc3", "filename": "src/test/ui/resolve/issue-21221-2.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -8,5 +8,6 @@ help: possible candidate is found in another module, you can import it into scop\n LL | use foo::bar::T;\n    |\n \n-error: cannot continue compilation due to previous error\n+error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0405`."}, {"sha": "f406cd6e35fcfb1ea9c605f42671c8e206207a14", "filename": "src/test/ui/resolve/issue-21221-3.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -8,5 +8,6 @@ help: possible candidate is found in another module, you can import it into scop\n LL | use issue_21221_3::outer::OuterTrait;\n    |\n \n-error: cannot continue compilation due to previous error\n+error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0405`."}, {"sha": "c0a7f1734f49ccfdf8953673a3746029a70c8b46", "filename": "src/test/ui/resolve/issue-21221-4.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -8,5 +8,6 @@ help: possible candidate is found in another module, you can import it into scop\n LL | use issue_21221_4::T;\n    |\n \n-error: cannot continue compilation due to previous error\n+error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0405`."}, {"sha": "3627c09b28fd9dac873e23b298065ae20d3cc91c", "filename": "src/test/ui/resolve/issue-3907.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -8,5 +8,6 @@ help: possible better candidate is found in another module, you can import it in\n LL | use issue_3907::Foo;\n    |\n \n-error: cannot continue compilation due to previous error\n+error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0404`."}, {"sha": "353a0b1c3d9d09f322af8900053f4d643b2f95be", "filename": "src/test/ui/resolve/issue-5035.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fresolve%2Fissue-5035.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fresolve%2Fissue-5035.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-5035.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -13,5 +13,7 @@ LL | impl K for isize {} //~ ERROR expected trait, found type alias `K`\n    |      did you mean `I`?\n    |      type aliases cannot be used for traits\n \n-error: cannot continue compilation due to previous error\n+error: aborting due to 2 previous errors\n \n+Some errors occurred: E0404, E0432.\n+For more information about an error, try `rustc --explain E0404`."}, {"sha": "f32c5e9b2c6bd2e2f5214315d6dd3271340de899", "filename": "src/test/ui/resolve/unboxed-closure-sugar-nonexistent-trait.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fresolve%2Funboxed-closure-sugar-nonexistent-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fresolve%2Funboxed-closure-sugar-nonexistent-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Funboxed-closure-sugar-nonexistent-trait.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -10,5 +10,7 @@ error[E0404]: expected trait, found type alias `Typedef`\n LL | fn g<F:Typedef(isize) -> isize>(x: F) {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^ type aliases cannot be used for traits\n \n-error: cannot continue compilation due to previous error\n+error: aborting due to 2 previous errors\n \n+Some errors occurred: E0404, E0405.\n+For more information about an error, try `rustc --explain E0404`."}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/ui/rfc1598-generic-associated-types/generic-associated-types-where.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -1,2 +0,0 @@\n-error: cannot continue compilation due to previous error\n-"}, {"sha": "b496a1a76c017424252b586fa89452001f6cfb0a", "filename": "src/test/ui/span/issue-24690.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fspan%2Fissue-24690.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fspan%2Fissue-24690.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-24690.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -36,3 +36,5 @@ LL | |     println!(\"{}\", theTwo);\n LL | | }\n    | |_^\n \n+error: aborting due to previous error\n+"}, {"sha": "1dd45bb1e5efe3c764209f2e3aeeb34fb480ed61", "filename": "src/test/ui/span/issue-35987.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f372a9aae3de4812ee5d3d092c46e7f1509b9/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr?ref=9c5f372a9aae3de4812ee5d3d092c46e7f1509b9", "patch": "@@ -8,5 +8,6 @@ help: possible better candidate is found in another module, you can import it in\n LL | use std::ops::Add;\n    |\n \n-error: cannot continue compilation due to previous error\n+error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0404`."}]}