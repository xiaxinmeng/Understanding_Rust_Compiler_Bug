{"sha": "28626ca5b1228f283fbc7c85d88cf897c7750267", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4NjI2Y2E1YjEyMjhmMjgzZmJjN2M4NWQ4OGNmODk3Yzc3NTAyNjc=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertaylorj@gmail.com", "date": "2017-03-15T21:24:02Z"}, "committer": {"name": "Taylor Cramer", "email": "cramertaylorj@gmail.com", "date": "2017-03-16T05:39:04Z"}, "message": "Stabilize pub(restricted)", "tree": {"sha": "e54b7aacc3dc6b66fd1f9bac3f986d7830d34f04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e54b7aacc3dc6b66fd1f9bac3f986d7830d34f04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28626ca5b1228f283fbc7c85d88cf897c7750267", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28626ca5b1228f283fbc7c85d88cf897c7750267", "html_url": "https://github.com/rust-lang/rust/commit/28626ca5b1228f283fbc7c85d88cf897c7750267", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28626ca5b1228f283fbc7c85d88cf897c7750267/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0aeb9c12979e6da753701a798d04105b6b1a8c28", "url": "https://api.github.com/repos/rust-lang/rust/commits/0aeb9c12979e6da753701a798d04105b6b1a8c28", "html_url": "https://github.com/rust-lang/rust/commit/0aeb9c12979e6da753701a798d04105b6b1a8c28"}], "stats": {"total": 141, "additions": 35, "deletions": 106}, "files": [{"sha": "f5d6785d4455986ef384d42e56aab018043fc57f", "filename": "src/doc/unstable-book/src/SUMMARY.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -65,7 +65,6 @@\n - [plugin_registrar](plugin-registrar.md)\n - [prelude_import](prelude-import.md)\n - [proc_macro](proc-macro.md)\n-- [pub_restricted](pub-restricted.md)\n - [quote](quote.md)\n - [relaxed_adts](relaxed-adts.md)\n - [repr_simd](repr-simd.md)"}, {"sha": "730461813cbec5fe56e6aeae9d2a670683e012d9", "filename": "src/doc/unstable-book/src/pub-restricted.md", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0aeb9c12979e6da753701a798d04105b6b1a8c28/src%2Fdoc%2Funstable-book%2Fsrc%2Fpub-restricted.md", "raw_url": "https://github.com/rust-lang/rust/raw/0aeb9c12979e6da753701a798d04105b6b1a8c28/src%2Fdoc%2Funstable-book%2Fsrc%2Fpub-restricted.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fpub-restricted.md?ref=0aeb9c12979e6da753701a798d04105b6b1a8c28", "patch": "@@ -1,10 +0,0 @@\n-# `pub_restricted`\n-\n-The tracking issue for this feature is: [#32409]\n-\n-[#32409]: https://github.com/rust-lang/rust/issues/32409\n-\n-------------------------\n-\n-\n-"}, {"sha": "a007c9d2c43a93592e587b45160788e650b7c4a5", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -34,7 +34,7 @@\n #![feature(libc)]\n #![feature(loop_break_value)]\n #![feature(nonzero)]\n-#![feature(pub_restricted)]\n+#![cfg_attr(stage0, feature(pub_restricted))]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]\n #![feature(rustc_private)]"}, {"sha": "0a8719c1253299c4c52d3e0b93c090073f8a5adf", "filename": "src/librustc_incremental/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Flibrustc_incremental%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Flibrustc_incremental%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Flib.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -25,7 +25,7 @@\n #![feature(core_intrinsics)]\n #![feature(conservative_impl_trait)]\n #![cfg_attr(stage0,feature(field_init_shorthand))]\n-#![feature(pub_restricted)]\n+#![cfg_attr(stage0, feature(pub_restricted))]\n \n extern crate graphviz;\n #[macro_use] extern crate rustc;"}, {"sha": "074e2b873ec60683b016805fcd8ccaf9ddf2e220", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -951,7 +951,7 @@ impl<'a, 'tcx: 'a> TypeVisitor<'tcx> for SearchInterfaceForPrivateItemsVisitor<'\n                     self.min_visibility = vis;\n                 }\n                 if !vis.is_at_least(self.required_visibility, self.tcx) {\n-                    if self.tcx.sess.features.borrow().pub_restricted || self.has_old_errors {\n+                    if self.has_old_errors {\n                         let mut err = struct_span_err!(self.tcx.sess, self.span, E0446,\n                             \"private type `{}` in public interface\", ty);\n                         err.span_label(self.span, &format!(\"can't leak private type\"));\n@@ -986,7 +986,7 @@ impl<'a, 'tcx: 'a> TypeVisitor<'tcx> for SearchInterfaceForPrivateItemsVisitor<'\n                 self.min_visibility = vis;\n             }\n             if !vis.is_at_least(self.required_visibility, self.tcx) {\n-                if self.tcx.sess.features.borrow().pub_restricted || self.has_old_errors {\n+                if self.has_old_errors {\n                     struct_span_err!(self.tcx.sess, self.span, E0445,\n                                      \"private trait `{}` in public interface\", trait_ref)\n                         .span_label(self.span, &format!("}, {"sha": "aa49ecfd3332c2de9294aca11bd6ae779dbf18be", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -283,7 +283,6 @@\n #![feature(placement_in_syntax)]\n #![feature(placement_new_protocol)]\n #![feature(prelude_import)]\n-#![feature(pub_restricted)]\n #![feature(rand)]\n #![feature(raw)]\n #![feature(repr_simd)]\n@@ -309,6 +308,7 @@\n #![feature(vec_push_all)]\n #![feature(zero_one)]\n #![cfg_attr(test, feature(update_panic_count))]\n+#![cfg_attr(stage0, feature(pub_restricted))]\n \n // Explicitly import the prelude. The compiler uses this same unstable attribute\n // to import the prelude implicitly when building crates that depend on std."}, {"sha": "5eb9366fb2faf1a232dd1f06a8f0637baa764b3e", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -260,9 +260,6 @@ declare_features! (\n     // impl specialization (RFC 1210)\n     (active, specialization, \"1.7.0\", Some(31844)),\n \n-    // pub(restricted) visibilities (RFC 1422)\n-    (active, pub_restricted, \"1.9.0\", Some(32409)),\n-\n     // Allow Drop types in statics/const functions (RFC 1440)\n     (active, drop_types_in_const, \"1.9.0\", Some(33156)),\n \n@@ -406,6 +403,9 @@ declare_features! (\n     (accepted, field_init_shorthand, \"1.17.0\", Some(37340)),\n     // Allows the definition recursive static items.\n     (accepted, static_recursion, \"1.17.0\", Some(29719)),\n+    // pub(restricted) visibilities (RFC 1422)\n+    (accepted, pub_restricted, \"1.17.0\", Some(32409)),\n+\n );\n // If you change this, please modify src/doc/unstable-book as well. You must\n // move that documentation into the relevant place in the other docs, and\n@@ -1410,17 +1410,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n         visit::walk_impl_item(self, ii);\n     }\n \n-    fn visit_vis(&mut self, vis: &'a ast::Visibility) {\n-        let span = match *vis {\n-            ast::Visibility::Crate(span) => span,\n-            ast::Visibility::Restricted { ref path, .. } => path.span,\n-            _ => return,\n-        };\n-        gate_feature_post!(&self, pub_restricted, span, \"`pub(restricted)` syntax is experimental\");\n-\n-        visit::walk_vis(self, vis)\n-    }\n-\n     fn visit_generics(&mut self, g: &'a ast::Generics) {\n         for t in &g.ty_params {\n             if !t.attrs.is_empty() {"}, {"sha": "dfbe35dfd56ba2e68a01fc90ea5b41c7b1858355", "filename": "src/test/compile-fail-fulldeps/auxiliary/pub_and_stability.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Fpub_and_stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Fpub_and_stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Fpub_and_stability.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -35,7 +35,6 @@\n // non-pub fields, marked with SILLY below)\n \n #![feature(staged_api)]\n-#![feature(pub_restricted)]\n \n #![stable(feature = \"unit_test\", since = \"0.0.0\")]\n "}, {"sha": "1eb756fe9e4ec2bd258f9725c2e440bbc90e7b7d", "filename": "src/test/compile-fail/imports/unused.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fimports%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fimports%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimports%2Funused.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(pub_restricted)]\n #![deny(unused)]\n \n mod foo {"}, {"sha": "82d14ddb502b3e726430203860129fc8b7c37978", "filename": "src/test/compile-fail/privacy/restricted/auxiliary/pub_restricted.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fauxiliary%2Fpub_restricted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fauxiliary%2Fpub_restricted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fauxiliary%2Fpub_restricted.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(pub_restricted)]\n-\n pub(crate) struct Crate;\n #[derive(Default)]\n pub struct Universe {"}, {"sha": "e81e1e30d175011c91f06d7055263e8aa8bd1a72", "filename": "src/test/compile-fail/privacy/restricted/feature-gate.rs", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/0aeb9c12979e6da753701a798d04105b6b1a8c28/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ffeature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0aeb9c12979e6da753701a798d04105b6b1a8c28/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ffeature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ffeature-gate.rs?ref=0aeb9c12979e6da753701a798d04105b6b1a8c28", "patch": "@@ -1,27 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// gate-test-pub_restricted\n-\n-pub(crate) //~ ERROR experimental\n-mod foo {}\n-\n-pub(self) //~ ERROR experimental\n-mod bar {}\n-\n-struct S {\n-    pub(self) x: i32, //~ ERROR experimental\n-}\n-impl S {\n-    pub(self) fn f() {} //~ ERROR experimental\n-}\n-extern {\n-    pub(self) fn f(); //~ ERROR experimental\n-}"}, {"sha": "abd71b9c90b22ac357267a33f6995cc8acd58e2c", "filename": "src/test/compile-fail/privacy/restricted/lookup-ignores-private.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Flookup-ignores-private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Flookup-ignores-private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Flookup-ignores-private.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(rustc_attrs, pub_restricted)]\n+#![feature(rustc_attrs)]\n #![allow(warnings)]\n \n mod foo {"}, {"sha": "2f0636288031554b7639242533190fc0014d9b82", "filename": "src/test/compile-fail/privacy/restricted/private-in-public.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fprivate-in-public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fprivate-in-public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fprivate-in-public.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -8,14 +8,16 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(pub_restricted)]\n+#![deny(warnings)]\n+#![allow(unused)]\n \n mod foo {\n     struct Priv;\n     mod bar {\n         use foo::Priv;\n         pub(super) fn f(_: Priv) {}\n         pub(crate) fn g(_: Priv) {} //~ ERROR E0446\n+        //~^ this was previously accepted\n     }\n }\n "}, {"sha": "68458fe3f04ba6f1a23c35864e7133b0267c7604", "filename": "src/test/compile-fail/privacy/restricted/struct-literal-field.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fstruct-literal-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fstruct-literal-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fstruct-literal-field.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(pub_restricted)]\n #![deny(private_in_public)]\n #![allow(warnings)]\n "}, {"sha": "12697d51042edff24e2ca68778c9d1dde277a3f4", "filename": "src/test/compile-fail/privacy/restricted/test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftest.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:pub_restricted.rs\n \n-#![feature(pub_restricted)]\n #![deny(private_in_public)]\n #![allow(warnings)]\n extern crate pub_restricted;"}, {"sha": "bb212b3114d11e8a46323d5433931aebe0d6b7e9", "filename": "src/test/compile-fail/privacy/restricted/tuple-struct-fields/test.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(pub_restricted)]\n-\n mod foo {\n     type T = ();\n     struct S1(pub(foo) (), pub(T), pub(crate) (), pub(((), T)));"}, {"sha": "2c6e71d7c55e6af64fed081e4eb082de602fcf4c", "filename": "src/test/compile-fail/privacy/restricted/tuple-struct-fields/test2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest2.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(pub_restricted)]\n-\n macro_rules! define_struct {\n     ($t:ty) => {\n         struct S1(pub $t);"}, {"sha": "e15eeae8159a363983790cfdcebc381793e75731", "filename": "src/test/compile-fail/privacy/restricted/tuple-struct-fields/test3.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest3.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(pub_restricted)]\n-\n macro_rules! define_struct {\n     ($t:ty) => {\n         struct S1(pub($t));"}, {"sha": "c83a4e568528fe8454bbd6a70295ccda9a068612", "filename": "src/test/compile-fail/privacy/restricted/ty-params.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fty-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fty-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fty-params.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(pub_restricted)]\n-\n macro_rules! m {\n     ($p: path) => (pub(in $p) struct Z;)\n }"}, {"sha": "bddcd391b205d5e80263f3c65a548abf12c57608", "filename": "src/test/compile-fail/privacy/union-field-privacy-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Funion-field-privacy-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Funion-field-privacy-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Funion-field-privacy-1.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(pub_restricted)]\n #![feature(untagged_unions)]\n \n mod m {"}, {"sha": "e26b5e99ec1a5f62167df2846561ebeec0b7c43d", "filename": "src/test/compile-fail/privacy/union-field-privacy-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Funion-field-privacy-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fprivacy%2Funion-field-privacy-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Funion-field-privacy-2.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(pub_restricted)]\n #![feature(untagged_unions)]\n \n mod m {"}, {"sha": "420a45a2147e6b94fba4cac5cbcb50efb89a0efa", "filename": "src/test/compile-fail/resolve-bad-visibility.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fresolve-bad-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fcompile-fail%2Fresolve-bad-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-bad-visibility.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(pub_restricted)]\n-\n enum E {}\n trait Tr {}\n "}, {"sha": "704b20c6e712e588c65d027e970753d13862e3c4", "filename": "src/test/ui/resolve/auxiliary/privacy-struct-ctor.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fui%2Fresolve%2Fauxiliary%2Fprivacy-struct-ctor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fui%2Fresolve%2Fauxiliary%2Fprivacy-struct-ctor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fauxiliary%2Fprivacy-struct-ctor.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(pub_restricted)]\n-\n pub mod m {\n     pub struct S(u8);\n "}, {"sha": "87e7b4f42a1c027917fc41e3085b6b81b92c297c", "filename": "src/test/ui/resolve/privacy-struct-ctor.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -10,8 +10,6 @@\n \n // aux-build:privacy-struct-ctor.rs\n \n-#![feature(pub_restricted)]\n-\n extern crate privacy_struct_ctor as xcrate;\n \n mod m {"}, {"sha": "25afb6147e422d49fd6ff5163ce99076d2b0cb62", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -1,7 +1,7 @@\n error[E0423]: expected value, found struct `Z`\n-  --> $DIR/privacy-struct-ctor.rs:28:9\n+  --> $DIR/privacy-struct-ctor.rs:26:9\n    |\n-28 |         Z;\n+26 |         Z;\n    |         ^\n    |         |\n    |         did you mean `Z { /* fields */ }`?\n@@ -11,9 +11,9 @@ error[E0423]: expected value, found struct `Z`\n              `use m::n::Z;`\n \n error[E0423]: expected value, found struct `S`\n-  --> $DIR/privacy-struct-ctor.rs:38:5\n+  --> $DIR/privacy-struct-ctor.rs:36:5\n    |\n-38 |     S;\n+36 |     S;\n    |     ^\n    |     |\n    |     did you mean `S { /* fields */ }`?\n@@ -23,9 +23,9 @@ error[E0423]: expected value, found struct `S`\n              `use m::S;`\n \n error[E0423]: expected value, found struct `xcrate::S`\n-  --> $DIR/privacy-struct-ctor.rs:44:5\n+  --> $DIR/privacy-struct-ctor.rs:42:5\n    |\n-44 |     xcrate::S;\n+42 |     xcrate::S;\n    |     ^^^^^^^^^\n    |     |\n    |     did you mean `xcrate::S { /* fields */ }`?\n@@ -35,33 +35,33 @@ error[E0423]: expected value, found struct `xcrate::S`\n              `use m::S;`\n \n error: tuple struct `Z` is private\n-  --> $DIR/privacy-struct-ctor.rs:27:9\n+  --> $DIR/privacy-struct-ctor.rs:25:9\n    |\n-27 |         n::Z; //~ ERROR tuple struct `Z` is private\n+25 |         n::Z; //~ ERROR tuple struct `Z` is private\n    |         ^^^^\n \n error: tuple struct `S` is private\n-  --> $DIR/privacy-struct-ctor.rs:37:5\n+  --> $DIR/privacy-struct-ctor.rs:35:5\n    |\n-37 |     m::S; //~ ERROR tuple struct `S` is private\n+35 |     m::S; //~ ERROR tuple struct `S` is private\n    |     ^^^^\n \n error: tuple struct `Z` is private\n-  --> $DIR/privacy-struct-ctor.rs:41:5\n+  --> $DIR/privacy-struct-ctor.rs:39:5\n    |\n-41 |     m::n::Z; //~ ERROR tuple struct `Z` is private\n+39 |     m::n::Z; //~ ERROR tuple struct `Z` is private\n    |     ^^^^^^^\n \n error: tuple struct `S` is private\n-  --> $DIR/privacy-struct-ctor.rs:43:5\n+  --> $DIR/privacy-struct-ctor.rs:41:5\n    |\n-43 |     xcrate::m::S; //~ ERROR tuple struct `S` is private\n+41 |     xcrate::m::S; //~ ERROR tuple struct `S` is private\n    |     ^^^^^^^^^^^^\n \n error: tuple struct `Z` is private\n-  --> $DIR/privacy-struct-ctor.rs:47:5\n+  --> $DIR/privacy-struct-ctor.rs:45:5\n    |\n-47 |     xcrate::m::n::Z; //~ ERROR tuple struct `Z` is private\n+45 |     xcrate::m::n::Z; //~ ERROR tuple struct `Z` is private\n    |     ^^^^^^^^^^^^^^^\n \n error: aborting due to 8 previous errors"}, {"sha": "54cb0b59c75c3450f3979d7cb5dbb27b2a1e0d3d", "filename": "src/test/ui/span/pub-struct-field.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fui%2Fspan%2Fpub-struct-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fui%2Fspan%2Fpub-struct-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fpub-struct-field.rs?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -11,8 +11,6 @@\n // Regression test for issue #26083 and #35435\n // Test that span for public struct fields start at `pub`\n \n-#![feature(pub_restricted)]\n-\n struct Foo {\n     bar: u8,\n     pub bar: u8,"}, {"sha": "c66361c8546b839046fb47b9fcf2556eeba2c395", "filename": "src/test/ui/span/pub-struct-field.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fui%2Fspan%2Fpub-struct-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28626ca5b1228f283fbc7c85d88cf897c7750267/src%2Ftest%2Fui%2Fspan%2Fpub-struct-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fpub-struct-field.stderr?ref=28626ca5b1228f283fbc7c85d88cf897c7750267", "patch": "@@ -1,18 +1,18 @@\n error[E0124]: field `bar` is already declared\n-  --> $DIR/pub-struct-field.rs:18:5\n+  --> $DIR/pub-struct-field.rs:16:5\n    |\n-17 |     bar: u8,\n+15 |     bar: u8,\n    |     ------- `bar` first declared here\n-18 |     pub bar: u8,\n+16 |     pub bar: u8,\n    |     ^^^^^^^^^^^ field already declared\n \n error[E0124]: field `bar` is already declared\n-  --> $DIR/pub-struct-field.rs:19:5\n+  --> $DIR/pub-struct-field.rs:17:5\n    |\n-17 |     bar: u8,\n+15 |     bar: u8,\n    |     ------- `bar` first declared here\n-18 |     pub bar: u8,\n-19 |     pub(crate) bar: u8,\n+16 |     pub bar: u8,\n+17 |     pub(crate) bar: u8,\n    |     ^^^^^^^^^^^^^^^^^^ field already declared\n \n error: aborting due to 2 previous errors"}]}