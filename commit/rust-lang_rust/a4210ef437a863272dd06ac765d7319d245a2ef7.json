{"sha": "a4210ef437a863272dd06ac765d7319d245a2ef7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MjEwZWY0MzdhODYzMjcyZGQwNmFjNzY1ZDczMTlkMjQ1YTJlZjc=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2017-12-17T01:53:30Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2017-12-18T15:51:44Z"}, "message": "Fix ICE when calling non-functions within closures\n\nThe visitor for walking function bodies did not previously properly\nhandle error-cases for function calls. These are now ignored,\npreventing the panic.", "tree": {"sha": "924ddf0a694eb856316eefd77a72c6214a7534e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/924ddf0a694eb856316eefd77a72c6214a7534e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4210ef437a863272dd06ac765d7319d245a2ef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4210ef437a863272dd06ac765d7319d245a2ef7", "html_url": "https://github.com/rust-lang/rust/commit/a4210ef437a863272dd06ac765d7319d245a2ef7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4210ef437a863272dd06ac765d7319d245a2ef7/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3a7203e2c9ed30a501da86f3fa1f9efe707ac94", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3a7203e2c9ed30a501da86f3fa1f9efe707ac94", "html_url": "https://github.com/rust-lang/rust/commit/a3a7203e2c9ed30a501da86f3fa1f9efe707ac94"}], "stats": {"total": 51, "additions": 34, "deletions": 17}, "files": [{"sha": "0bce2ac0131a97be2f8a32f76bf2175de56cbd1b", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/a4210ef437a863272dd06ac765d7319d245a2ef7/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4210ef437a863272dd06ac765d7319d245a2ef7/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=a4210ef437a863272dd06ac765d7319d245a2ef7", "patch": "@@ -558,24 +558,27 @@ impl<'a, 'gcx, 'tcx> ExprUseVisitor<'a, 'gcx, 'tcx> {\n             }\n             ty::TyError => { }\n             _ => {\n-                let def_id = self.mc.tables.type_dependent_defs()[call.hir_id].def_id();\n-                let call_scope = region::Scope::Node(call.hir_id.local_id);\n-                match OverloadedCallType::from_method_id(self.tcx(), def_id) {\n-                    FnMutOverloadedCall => {\n-                        let call_scope_r = self.tcx().mk_region(ty::ReScope(call_scope));\n-                        self.borrow_expr(callee,\n-                                         call_scope_r,\n-                                         ty::MutBorrow,\n-                                         ClosureInvocation);\n-                    }\n-                    FnOverloadedCall => {\n-                        let call_scope_r = self.tcx().mk_region(ty::ReScope(call_scope));\n-                        self.borrow_expr(callee,\n-                                         call_scope_r,\n-                                         ty::ImmBorrow,\n-                                         ClosureInvocation);\n+                let type_dependent_defs = self.mc.tables.type_dependent_defs();\n+                if !type_dependent_defs.contains_key(call.hir_id) {\n+                    let def_id = type_dependent_defs[call.hir_id].def_id();\n+                    let call_scope = region::Scope::Node(call.hir_id.local_id);\n+                    match OverloadedCallType::from_method_id(self.tcx(), def_id) {\n+                        FnMutOverloadedCall => {\n+                            let call_scope_r = self.tcx().mk_region(ty::ReScope(call_scope));\n+                            self.borrow_expr(callee,\n+                                            call_scope_r,\n+                                            ty::MutBorrow,\n+                                            ClosureInvocation);\n+                        }\n+                        FnOverloadedCall => {\n+                            let call_scope_r = self.tcx().mk_region(ty::ReScope(call_scope));\n+                            self.borrow_expr(callee,\n+                                            call_scope_r,\n+                                            ty::ImmBorrow,\n+                                            ClosureInvocation);\n+                        }\n+                        FnOnceOverloadedCall => {self.consume_expr(callee)},\n                     }\n-                    FnOnceOverloadedCall => self.consume_expr(callee),\n                 }\n             }\n         }"}, {"sha": "e167289abd41a2b7c0da925098780cbcf16a1746", "filename": "src/test/compile-fail/issue-46771.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a4210ef437a863272dd06ac765d7319d245a2ef7/src%2Ftest%2Fcompile-fail%2Fissue-46771.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4210ef437a863272dd06ac765d7319d245a2ef7/src%2Ftest%2Fcompile-fail%2Fissue-46771.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-46771.rs?ref=a4210ef437a863272dd06ac765d7319d245a2ef7", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    struct Foo;\n+    (1 .. 2).find(|_| Foo(0) == 0); //~ ERROR expected function, found `main::Foo`\n+}\n\\ No newline at end of file"}]}