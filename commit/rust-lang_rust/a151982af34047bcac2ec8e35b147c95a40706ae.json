{"sha": "a151982af34047bcac2ec8e35b147c95a40706ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNTE5ODJhZjM0MDQ3YmNhYzJlYzhlMzViMTQ3Yzk1YTQwNzA2YWU=", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-07-06T21:44:18Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-07-06T21:44:18Z"}, "message": "Add doc comment for `impl From<LayoutError> for TryReserveError`", "tree": {"sha": "a967a3ef4fcf97818d64af78885933ada5f07784", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a967a3ef4fcf97818d64af78885933ada5f07784"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a151982af34047bcac2ec8e35b147c95a40706ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a151982af34047bcac2ec8e35b147c95a40706ae", "html_url": "https://github.com/rust-lang/rust/commit/a151982af34047bcac2ec8e35b147c95a40706ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a151982af34047bcac2ec8e35b147c95a40706ae/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8649737beefccbef2d6bc0113df4650dd05ad7f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8649737beefccbef2d6bc0113df4650dd05ad7f2", "html_url": "https://github.com/rust-lang/rust/commit/8649737beefccbef2d6bc0113df4650dd05ad7f2"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "97bfe2f3984ea2559ebcceb37ae4367c7ad9f1c4", "filename": "library/alloc/src/collections/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a151982af34047bcac2ec8e35b147c95a40706ae/library%2Falloc%2Fsrc%2Fcollections%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a151982af34047bcac2ec8e35b147c95a40706ae/library%2Falloc%2Fsrc%2Fcollections%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fmod.rs?ref=a151982af34047bcac2ec8e35b147c95a40706ae", "patch": "@@ -83,6 +83,7 @@ pub enum TryReserveError {\n \n #[unstable(feature = \"try_reserve\", reason = \"new API\", issue = \"48043\")]\n impl From<LayoutError> for TryReserveError {\n+    /// Always evaluates to [`TryReserveError::CapacityOverflow`].\n     #[inline]\n     fn from(_: LayoutError) -> Self {\n         TryReserveError::CapacityOverflow"}]}