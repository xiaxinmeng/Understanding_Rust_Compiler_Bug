{"sha": "3a3280326e9cf2cd2c31dcdbca68e98c1a16bf56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhMzI4MDMyNmU5Y2YyY2QyYzMxZGNkYmNhNjhlOThjMWExNmJmNTY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-08T10:11:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-08T10:11:57Z"}, "message": "Rollup merge of #64265 - petrochenkov:useerr, r=estebank\n\nresolve: Mark more erroneous imports as used\n\nFixes https://github.com/rust-lang/rust/issues/63724\nr? @estebank", "tree": {"sha": "42d7d5d519f9159d8c5ce0a5e56954ba537ff9de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42d7d5d519f9159d8c5ce0a5e56954ba537ff9de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a3280326e9cf2cd2c31dcdbca68e98c1a16bf56", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJddNPuCRBK7hj4Ov3rIwAAdHIIACDrIY4rNbCM0trVQa16kgq0\nRGtQ/f0N+929E4GnwAb86WMUoqt3KHs2ANwCCN/byWYnCa8f+HlP/aIS/sNEBEvH\n2R+JlvL5k+2x1pXb8hJRPwY6s1ha+dVvhI3WRViV5RYyB5j/fIm7bNGB/Zn88RhM\nr8xEC0t8vvdFeZXJnF3YPcD/hOzxNnRIS7/eJ0U8qCbUGo4N0sDdtyMV2NYScCdz\n7hZVsYnLki6JhDCngmpgiBV3Mpnhgh5hYu13WssgRKIK7a6tUnobSQsHVm1156bZ\n6H8gIpwzjB7q+aCFrOJZlZL9+52MtvxZKyVFcDWUZsJn5tT1zg35qu1mAAjEiig=\n=9u2l\n-----END PGP SIGNATURE-----\n", "payload": "tree 42d7d5d519f9159d8c5ce0a5e56954ba537ff9de\nparent 24172084e1ebd750de9adc0b65456b660d7c8c8b\nparent 7dc3839b50d1ddb623aef0fbe76e982af460a18a\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1567937517 +0200\ncommitter GitHub <noreply@github.com> 1567937517 +0200\n\nRollup merge of #64265 - petrochenkov:useerr, r=estebank\n\nresolve: Mark more erroneous imports as used\n\nFixes https://github.com/rust-lang/rust/issues/63724\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a3280326e9cf2cd2c31dcdbca68e98c1a16bf56", "html_url": "https://github.com/rust-lang/rust/commit/3a3280326e9cf2cd2c31dcdbca68e98c1a16bf56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a3280326e9cf2cd2c31dcdbca68e98c1a16bf56/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24172084e1ebd750de9adc0b65456b660d7c8c8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/24172084e1ebd750de9adc0b65456b660d7c8c8b", "html_url": "https://github.com/rust-lang/rust/commit/24172084e1ebd750de9adc0b65456b660d7c8c8b"}, {"sha": "7dc3839b50d1ddb623aef0fbe76e982af460a18a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7dc3839b50d1ddb623aef0fbe76e982af460a18a", "html_url": "https://github.com/rust-lang/rust/commit/7dc3839b50d1ddb623aef0fbe76e982af460a18a"}], "stats": {"total": 48, "additions": 37, "deletions": 11}, "files": [{"sha": "132690dcd7df22b6355f317753b0b1329c5baab0", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3a3280326e9cf2cd2c31dcdbca68e98c1a16bf56/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a3280326e9cf2cd2c31dcdbca68e98c1a16bf56/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=3a3280326e9cf2cd2c31dcdbca68e98c1a16bf56", "patch": "@@ -673,6 +673,10 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n             self.throw_unresolved_import_error(errors.clone(), None);\n         }\n \n+        for import in &self.r.indeterminate_imports {\n+            // Consider erroneous imports used to avoid duplicate diagnostics.\n+            self.r.used_imports.insert((import.id, TypeNS));\n+        }\n         // Report unresolved imports only if no hard error was already reported\n         // to avoid generating multiple errors on the same import.\n         if !has_errors {\n@@ -839,6 +843,10 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n                                          true, directive.span, directive.crate_lint());\n         let no_ambiguity = self.r.ambiguity_errors.len() == prev_ambiguity_errors_len;\n         directive.vis.set(orig_vis);\n+        if let PathResult::Failed { .. } | PathResult::NonModule(..) = path_res {\n+            // Consider erroneous imports used to avoid duplicate diagnostics.\n+            self.r.used_imports.insert((directive.id, TypeNS));\n+        }\n         let module = match path_res {\n             PathResult::Module(module) => {\n                 // Consistency checks, analogous to `finalize_macro_resolutions`."}, {"sha": "5398dd63c89294873d158ebc25b1de3d1816f092", "filename": "src/test/ui/imports/unresolved-imports-used.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3a3280326e9cf2cd2c31dcdbca68e98c1a16bf56/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a3280326e9cf2cd2c31dcdbca68e98c1a16bf56/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.rs?ref=3a3280326e9cf2cd2c31dcdbca68e98c1a16bf56", "patch": "@@ -1,12 +1,18 @@\n-// There should be *no* unused import errors.\n+// There should be *one* unused import error.\n #![deny(unused_imports)]\n \n mod qux {\n    fn quz() {}\n+   pub fn quy() {}\n }\n \n-use qux::quz; //~ ERROR function `quz` is private\n-use qux::bar; //~ ERROR unresolved import `qux::bar`\n-use foo::bar; //~ ERROR unresolved import `foo`\n+use qux::quz;  //~ ERROR function `quz` is private\n+use qux::bar;  //~ ERROR unresolved import `qux::bar`\n+use foo::bar;\n+use baz::*;\n+use qux::bar2; //~ ERROR unresolved import `qux::bar2`\n+use foo2::bar2;\n+use baz2::*;\n+use qux::quy;  //~ ERROR unused import\n \n fn main() {}"}, {"sha": "c9342d17a49d7c453d99876663f0d5b18f4172be", "filename": "src/test/ui/imports/unresolved-imports-used.stderr", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/3a3280326e9cf2cd2c31dcdbca68e98c1a16bf56/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a3280326e9cf2cd2c31dcdbca68e98c1a16bf56/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr?ref=3a3280326e9cf2cd2c31dcdbca68e98c1a16bf56", "patch": "@@ -1,22 +1,34 @@\n error[E0432]: unresolved import `qux::bar`\n-  --> $DIR/unresolved-imports-used.rs:9:5\n+  --> $DIR/unresolved-imports-used.rs:10:5\n    |\n LL | use qux::bar;\n    |     ^^^^^^^^ no `bar` in `qux`\n \n-error[E0432]: unresolved import `foo`\n-  --> $DIR/unresolved-imports-used.rs:10:5\n+error[E0432]: unresolved import `qux::bar2`\n+  --> $DIR/unresolved-imports-used.rs:13:5\n    |\n-LL | use foo::bar;\n-   |     ^^^ maybe a missing crate `foo`?\n+LL | use qux::bar2;\n+   |     ^^^^^^^^^ no `bar2` in `qux`\n \n error[E0603]: function `quz` is private\n-  --> $DIR/unresolved-imports-used.rs:8:10\n+  --> $DIR/unresolved-imports-used.rs:9:10\n    |\n LL | use qux::quz;\n    |          ^^^\n \n-error: aborting due to 3 previous errors\n+error: unused import: `qux::quy`\n+  --> $DIR/unresolved-imports-used.rs:16:5\n+   |\n+LL | use qux::quy;\n+   |     ^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/unresolved-imports-used.rs:2:9\n+   |\n+LL | #![deny(unused_imports)]\n+   |         ^^^^^^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n \n Some errors have detailed explanations: E0432, E0603.\n For more information about an error, try `rustc --explain E0432`."}]}