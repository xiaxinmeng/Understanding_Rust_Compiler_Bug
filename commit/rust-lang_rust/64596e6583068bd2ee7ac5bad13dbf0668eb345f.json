{"sha": "64596e6583068bd2ee7ac5bad13dbf0668eb345f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0NTk2ZTY1ODMwNjhiZDJlZTdhYzViYWQxM2RiZjA2NjhlYjM0NWY=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-06-28T22:54:16Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-06-28T23:11:04Z"}, "message": "Teach the parser and typechecker to understand port[int](). Closes #588", "tree": {"sha": "33228286be240df4ab6e504bdf0be3439c01ccb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33228286be240df4ab6e504bdf0be3439c01ccb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64596e6583068bd2ee7ac5bad13dbf0668eb345f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64596e6583068bd2ee7ac5bad13dbf0668eb345f", "html_url": "https://github.com/rust-lang/rust/commit/64596e6583068bd2ee7ac5bad13dbf0668eb345f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64596e6583068bd2ee7ac5bad13dbf0668eb345f/comments", "author": null, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c6ae8cadf12d58f9c6fe3a315b4c39c3ec6712c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c6ae8cadf12d58f9c6fe3a315b4c39c3ec6712c", "html_url": "https://github.com/rust-lang/rust/commit/1c6ae8cadf12d58f9c6fe3a315b4c39c3ec6712c"}], "stats": {"total": 96, "additions": 85, "deletions": 11}, "files": [{"sha": "f63a563621136904b82f8559a62f957950ef60ef", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=64596e6583068bd2ee7ac5bad13dbf0668eb345f", "patch": "@@ -290,7 +290,7 @@ tag expr_ {\n    /* FIXME Would be nice if expr_check desugared\n       to expr_if_check. */\n     expr_if_check(@expr, block, option::t[@expr]);\n-    expr_port;\n+    expr_port(option::t[@ty]);\n     expr_chan(@expr);\n     expr_anon_obj(anon_obj, vec[ty_param], obj_def_ids);\n }"}, {"sha": "9c9b08d9dac20b84250c9113478915983e472102", "filename": "src/comp/front/fold.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Ffront%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Ffront%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Ffold.rs?ref=64596e6583068bd2ee7ac5bad13dbf0668eb345f", "patch": "@@ -405,7 +405,12 @@ fn noop_fold_expr(&expr_ e, ast_fold fld) -> expr_ {\n         case (expr_log(?lv, ?e)) { expr_log(lv, fld.fold_expr(e)) }\n         case (expr_assert(?e)) { expr_assert(fld.fold_expr(e)) }\n         case (expr_check(?e)) { expr_check(fld.fold_expr(e)) }\n-        case (expr_port()) { e }\n+        case (expr_port(?ot)) { \n+            expr_port(alt(ot) {\n+                    case (option::some(?t)) { option::some(fld.fold_ty(t)) }\n+                    case (option::none) { option::none }\n+                })\n+                }\n         case (expr_chan(?e)) { expr_chan(fld.fold_expr(e)) }\n         case (expr_anon_obj(?ao, ?typms, ?odis)) {\n             expr_anon_obj(fold_anon_obj(ao), typms, odis)"}, {"sha": "454e00ea77a96e06fb38dcb709d93b46a8d3e641", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=64596e6583068bd2ee7ac5bad13dbf0668eb345f", "patch": "@@ -899,10 +899,16 @@ fn parse_bottom_expr(&parser p) -> @ast::expr {\n             ex = ast::expr_be(e);\n         } else { p.fatal(\"Non-call expression in tail call\"); }\n     } else if (eat_word(p, \"port\")) {\n+        auto ty = none;\n+        if(token::LBRACKET == p.peek()) {\n+            expect(p, token::LBRACKET);\n+            ty = some(parse_ty(p));\n+            expect(p, token::RBRACKET);\n+        }\n         expect(p, token::LPAREN);\n         expect(p, token::RPAREN);\n         hi = p.get_hi_pos();\n-        ex = ast::expr_port;\n+        ex = ast::expr_port(ty);\n     } else if (eat_word(p, \"chan\")) {\n         expect(p, token::LPAREN);\n         auto e = parse_expr(p);\n@@ -1592,7 +1598,7 @@ fn stmt_ends_with_semi(&ast::stmt stmt) -> bool {\n                 case (ast::expr_log(_, _)) { true }\n                 case (ast::expr_check(_)) { true }\n                 case (ast::expr_if_check(_, _, _)) { false }\n-                case (ast::expr_port) { true }\n+                case (ast::expr_port(_)) { true }\n                 case (ast::expr_chan(_)) { true }\n                 case (ast::expr_anon_obj(_,_,_)) { false }\n                 case (ast::expr_assert(_)) { true }"}, {"sha": "428076e46bac7f8efbe399e8a6859ab6a5396f21", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=64596e6583068bd2ee7ac5bad13dbf0668eb345f", "patch": "@@ -5996,7 +5996,7 @@ fn trans_expr_out(&@block_ctxt cx, &@ast::expr e, out_method output) ->\n         case (ast::expr_ret(?ex)) { ret trans_ret(cx, ex); }\n         case (ast::expr_put(?ex)) { ret trans_put(cx, ex); }\n         case (ast::expr_be(?ex)) { ret trans_be(cx, ex); }\n-        case (ast::expr_port) { ret trans_port(cx, e.id); }\n+        case (ast::expr_port(_)) { ret trans_port(cx, e.id); }\n         case (ast::expr_chan(?ex)) { ret trans_chan(cx, ex, e.id); }\n         case (ast::expr_send(?lhs, ?rhs)) {\n             ret trans_send(cx, lhs, rhs, e.id);"}, {"sha": "3e27e665054fb78b0df99bab54b8bd90c0a26bec", "filename": "src/comp/middle/tstate/pre_post_conditions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs?ref=64596e6583068bd2ee7ac5bad13dbf0668eb345f", "patch": "@@ -556,7 +556,7 @@ fn find_pre_post_expr(&fn_ctxt fcx, @expr e) {\n         }\n         case (expr_break) { clear_pp(expr_pp(fcx.ccx, e)); }\n         case (expr_cont) { clear_pp(expr_pp(fcx.ccx, e)); }\n-        case (expr_port) { clear_pp(expr_pp(fcx.ccx, e)); }\n+        case (expr_port(_)) { clear_pp(expr_pp(fcx.ccx, e)); }\n         case (expr_ext(_, _, _, ?expanded)) {\n             find_pre_post_expr(fcx, expanded);\n             copy_pre_post(fcx.ccx, e.id, expanded);"}, {"sha": "82274937c8d3945d3c654fa80e4e878da86b0618", "filename": "src/comp/middle/tstate/states.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs?ref=64596e6583068bd2ee7ac5bad13dbf0668eb345f", "patch": "@@ -565,7 +565,7 @@ fn find_pre_post_state_expr(&fn_ctxt fcx, &prestate pres, @expr e) -> bool {\n         }\n         case (expr_break) { ret pure_exp(fcx.ccx, e.id, pres); }\n         case (expr_cont) { ret pure_exp(fcx.ccx, e.id, pres); }\n-        case (expr_port) { ret pure_exp(fcx.ccx, e.id, pres); }\n+        case (expr_port(_)) { ret pure_exp(fcx.ccx, e.id, pres); }\n         case (expr_self_method(_)) { ret pure_exp(fcx.ccx, e.id, pres); }\n         case (expr_anon_obj(?anon_obj, _, _)) {\n             alt (anon_obj.with_obj) {"}, {"sha": "a47ef47ed8006a2511156e6a81969f934c274fb3", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=64596e6583068bd2ee7ac5bad13dbf0668eb345f", "patch": "@@ -2075,8 +2075,16 @@ fn check_expr(&@fn_ctxt fcx, &@ast::expr expr) {\n                 }\n             }\n         }\n-        case (ast::expr_port) {\n+        case (ast::expr_port(?typ)) {\n             auto t = next_ty_var(fcx);\n+            alt(typ) {\n+                case (some(?_t)) {\n+                    demand::simple(fcx, expr.span, \n+                                   ast_ty_to_ty_crate(fcx.ccx, _t), \n+                                   t);\n+                }\n+                case (none) {}\n+            }\n             auto pt = ty::mk_port(fcx.ccx.tcx, t);\n             write::ty_only_fixup(fcx, id, pt);\n         }"}, {"sha": "98db56e96c3fe36267ec85290fd96fc451731b4b", "filename": "src/comp/middle/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Fmiddle%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Fmiddle%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fvisit.rs?ref=64596e6583068bd2ee7ac5bad13dbf0668eb345f", "patch": "@@ -374,7 +374,7 @@ fn visit_expr[E](&@expr ex, &E e, &vt[E] v) {\n         case (expr_log(_, ?x)) { vt(v).visit_expr(x, e, v); }\n         case (expr_check(?x)) { vt(v).visit_expr(x, e, v); }\n         case (expr_assert(?x)) { vt(v).visit_expr(x, e, v); }\n-        case (expr_port) { }\n+        case (expr_port(_)) { }\n         case (expr_chan(?x)) { vt(v).visit_expr(x, e, v); }\n         case (expr_anon_obj(?anon_obj, _, _)) {\n             alt (anon_obj.fields) {"}, {"sha": "f4c954298fd790c4bf011a2a486391b19b8d5591", "filename": "src/comp/middle/walk.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Fmiddle%2Fwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Fmiddle%2Fwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fwalk.rs?ref=64596e6583068bd2ee7ac5bad13dbf0668eb345f", "patch": "@@ -380,7 +380,7 @@ fn walk_expr(&ast_visitor v, @ast::expr e) {\n         case (ast::expr_log(_, ?x)) { walk_expr(v, x); }\n         case (ast::expr_check(?x)) { walk_expr(v, x); }\n         case (ast::expr_assert(?x)) { walk_expr(v, x); }\n-        case (ast::expr_port) { }\n+        case (ast::expr_port(_)) { }\n         case (ast::expr_chan(?x)) { walk_expr(v, x); }\n         case (ast::expr_anon_obj(?anon_obj, _, _)) {\n             // Fields"}, {"sha": "332d4dd3acac452f72715ed9716fb494d86eac77", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=64596e6583068bd2ee7ac5bad13dbf0668eb345f", "patch": "@@ -882,7 +882,18 @@ fn print_expr(&ps s, &@ast::expr expr) {\n             // FIXME: extension 'body'\n \n         }\n-        case (ast::expr_port) { word(s.s, \"port\"); popen(s); pclose(s); }\n+        case (ast::expr_port(?ot)) {\n+            word(s.s, \"port\"); \n+            alt(ot) {\n+                case(some(?t)) {\n+                    word(s.s, \"[\");\n+                    print_type(s, *t);\n+                    word(s.s, \"]\");\n+                }\n+                case(none) {}\n+            }\n+            popen(s); pclose(s); \n+        }\n         case (ast::expr_chan(?expr)) {\n             word(s.s, \"chan\");\n             popen(s);"}, {"sha": "de4605ee0c46758871c6f4d047466170a53f94ff", "filename": "src/test/run-pass/task-compare.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Ftest%2Frun-pass%2Ftask-compare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64596e6583068bd2ee7ac5bad13dbf0668eb345f/src%2Ftest%2Frun-pass%2Ftask-compare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-compare.rs?ref=64596e6583068bd2ee7ac5bad13dbf0668eb345f", "patch": "@@ -0,0 +1,44 @@\n+// xfail-stage0\n+// xfail-stage1\n+// xfail-stage2\n+\n+/**\n+   A test case for issue #577, which also exposes #588\n+*/\n+\n+use std;\n+import std::task::join;\n+\n+fn child() {}\n+\n+fn main() {\n+    // tasks\n+    auto t1; auto t2;\n+\n+    t1 = spawn child();\n+    t2 = spawn child();\n+\n+    assert(t1 == t1);\n+    assert(t1 != t2);\n+\n+    // ports\n+    auto p1; auto p2;\n+    \n+    p1 = port[int]();\n+    p2 = port[int]();\n+\n+    assert(p1 == p1);\n+    assert(p1 != p2);\n+    \n+    // channels\n+    auto c1; auto c2;\n+    \n+    c1 = chan(p1);\n+    c2 = chan(p2);\n+\n+    assert(c1 == c1);\n+    assert(c1 != c2);\n+\n+    join(t1);\n+    join(t2);\n+}"}]}