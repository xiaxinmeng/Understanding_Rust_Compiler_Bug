{"sha": "ccd04a52810c596180486da8a2c2e157e63e3d2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjZDA0YTUyODEwYzU5NjE4MDQ4NmRhOGEyYzJlMTU3ZTYzZTNkMmY=", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2021-04-29T02:59:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-29T02:59:31Z"}, "message": "Rollup merge of #84663 - CDirkx:dropguard, r=Mark-Simulacrum\n\nRemove `DropGuard` in `sys::windows::process` and use `StaticMutex` instead\n\n`StaticMutex` is a mutex that when locked provides a guard that unlocks the mutex again when dropped, thus provides the exact same functionality as `DropGuard`. `StaticMutex` is used in more places, and is thus preferred over an ad-hoc construct like `DropGuard`.\n\n````@rustbot```` label: +T-libs-impl", "tree": {"sha": "4697a60f0054650fc24e193744b555a3f96e7b0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4697a60f0054650fc24e193744b555a3f96e7b0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccd04a52810c596180486da8a2c2e157e63e3d2f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgiiETCRBK7hj4Ov3rIwAAOCQIABU+fcG46temWrI5WVyKYnBD\n9DjgONrWUJVRaYx1OIAlQYXFLPB+XuUvw+I2UM5jBeeVPmC2GV/wsWYXgdRUH3QA\nxCBB08XpyagddE4qsgmtspNdnt7QoFXbxMJIuzvmnJxERF3i+fCg5BiTY8emNeTL\ngl09hu3mtx5rg6gttbxHT8MTfnBU/gaKy1H9N103nn5hjJ9+38SSpB4x1RSsQ9AR\n12kQb2nF7iX2a2CxYxHsI9oWv/UpjJ3YGfOUCwGR3Jd3TCwKHHUcDb0YjE6tGt7L\nA76ouBLpCzNyukqZNTCNanNZouKWvtcUsTq1SUWtBGcXZiw7xFpq4+wCI/oULhc=\n=GgVT\n-----END PGP SIGNATURE-----\n", "payload": "tree 4697a60f0054650fc24e193744b555a3f96e7b0f\nparent 096375451d888c1a78ae1ddcc9ec195f4ea9bd1b\nparent 1ac632627b7fc172887d0b8395cb8c8997c72274\nauthor Jack Huey <31162821+jackh726@users.noreply.github.com> 1619665171 -0400\ncommitter GitHub <noreply@github.com> 1619665171 -0400\n\nRollup merge of #84663 - CDirkx:dropguard, r=Mark-Simulacrum\n\nRemove `DropGuard` in `sys::windows::process` and use `StaticMutex` instead\n\n`StaticMutex` is a mutex that when locked provides a guard that unlocks the mutex again when dropped, thus provides the exact same functionality as `DropGuard`. `StaticMutex` is used in more places, and is thus preferred over an ad-hoc construct like `DropGuard`.\n\n````@rustbot```` label: +T-libs-impl\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccd04a52810c596180486da8a2c2e157e63e3d2f", "html_url": "https://github.com/rust-lang/rust/commit/ccd04a52810c596180486da8a2c2e157e63e3d2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccd04a52810c596180486da8a2c2e157e63e3d2f/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "096375451d888c1a78ae1ddcc9ec195f4ea9bd1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/096375451d888c1a78ae1ddcc9ec195f4ea9bd1b", "html_url": "https://github.com/rust-lang/rust/commit/096375451d888c1a78ae1ddcc9ec195f4ea9bd1b"}, {"sha": "1ac632627b7fc172887d0b8395cb8c8997c72274", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ac632627b7fc172887d0b8395cb8c8997c72274", "html_url": "https://github.com/rust-lang/rust/commit/1ac632627b7fc172887d0b8395cb8c8997c72274"}], "stats": {"total": 28, "additions": 4, "deletions": 24}, "files": [{"sha": "a5799606142ec2b44e850399772a8fb14e84e3f2", "filename": "library/std/src/sys/windows/process.rs", "status": "modified", "additions": 4, "deletions": 24, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ccd04a52810c596180486da8a2c2e157e63e3d2f/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccd04a52810c596180486da8a2c2e157e63e3d2f/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs?ref=ccd04a52810c596180486da8a2c2e157e63e3d2f", "patch": "@@ -19,9 +19,9 @@ use crate::sys::c;\n use crate::sys::cvt;\n use crate::sys::fs::{File, OpenOptions};\n use crate::sys::handle::Handle;\n-use crate::sys::mutex::Mutex;\n use crate::sys::pipe::{self, AnonPipe};\n use crate::sys::stdio;\n+use crate::sys_common::mutex::StaticMutex;\n use crate::sys_common::process::{CommandEnv, CommandEnvs};\n use crate::sys_common::AsInner;\n \n@@ -94,10 +94,6 @@ pub struct StdioPipes {\n     pub stderr: Option<AnonPipe>,\n }\n \n-struct DropGuard<'a> {\n-    lock: &'a Mutex,\n-}\n-\n impl Command {\n     pub fn new(program: &OsStr) -> Command {\n         Command {\n@@ -209,8 +205,9 @@ impl Command {\n         //\n         // For more information, msdn also has an article about this race:\n         // http://support.microsoft.com/kb/315939\n-        static CREATE_PROCESS_LOCK: Mutex = Mutex::new();\n-        let _guard = DropGuard::new(&CREATE_PROCESS_LOCK);\n+        static CREATE_PROCESS_LOCK: StaticMutex = StaticMutex::new();\n+\n+        let _guard = unsafe { CREATE_PROCESS_LOCK.lock() };\n \n         let mut pipes = StdioPipes { stdin: None, stdout: None, stderr: None };\n         let null = Stdio::Null;\n@@ -259,23 +256,6 @@ impl fmt::Debug for Command {\n     }\n }\n \n-impl<'a> DropGuard<'a> {\n-    fn new(lock: &'a Mutex) -> DropGuard<'a> {\n-        unsafe {\n-            lock.lock();\n-            DropGuard { lock }\n-        }\n-    }\n-}\n-\n-impl<'a> Drop for DropGuard<'a> {\n-    fn drop(&mut self) {\n-        unsafe {\n-            self.lock.unlock();\n-        }\n-    }\n-}\n-\n impl Stdio {\n     fn to_handle(&self, stdio_id: c::DWORD, pipe: &mut Option<AnonPipe>) -> io::Result<Handle> {\n         match *self {"}]}