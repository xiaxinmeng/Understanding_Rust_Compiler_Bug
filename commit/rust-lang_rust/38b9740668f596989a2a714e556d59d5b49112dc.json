{"sha": "38b9740668f596989a2a714e556d59d5b49112dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4Yjk3NDA2NjhmNTk2OTg5YTJhNzE0ZTU1NmQ1OWQ1YjQ5MTEyZGM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-13T02:36:03Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-13T02:36:03Z"}, "message": "Remove unused get_snippet function from codemap", "tree": {"sha": "9651a8e4e12b2cd6e99fabcab43e41e0cfb390b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9651a8e4e12b2cd6e99fabcab43e41e0cfb390b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38b9740668f596989a2a714e556d59d5b49112dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38b9740668f596989a2a714e556d59d5b49112dc", "html_url": "https://github.com/rust-lang/rust/commit/38b9740668f596989a2a714e556d59d5b49112dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38b9740668f596989a2a714e556d59d5b49112dc/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b22f94148720e1ece7e16afe92f91d998ac9af34", "url": "https://api.github.com/repos/rust-lang/rust/commits/b22f94148720e1ece7e16afe92f91d998ac9af34", "html_url": "https://github.com/rust-lang/rust/commit/b22f94148720e1ece7e16afe92f91d998ac9af34"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "4f6c16a39d76c72ce9d7d3f5327baf5aa455f3e2", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/38b9740668f596989a2a714e556d59d5b49112dc/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38b9740668f596989a2a714e556d59d5b49112dc/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=38b9740668f596989a2a714e556d59d5b49112dc", "patch": "@@ -215,12 +215,6 @@ pub impl CodeMap {\n         return str::slice(*begin.fm.src, begin.pos, end.pos);\n     }\n \n-    pub fn get_snippet(@self, fidx: uint, lo: uint, hi: uint) -> ~str\n-    {\n-        let fm = self.files[fidx];\n-        return str::slice(*fm.src, lo, hi)\n-    }\n-\n     pub fn get_filemap(@self, filename: ~str) -> @filemap {\n         for self.files.each |fm| { if fm.name == filename { return *fm; } }\n         //XXjdm the following triggers a mismatched type bug"}]}