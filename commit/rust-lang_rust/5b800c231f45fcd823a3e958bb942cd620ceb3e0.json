{"sha": "5b800c231f45fcd823a3e958bb942cd620ceb3e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViODAwYzIzMWY0NWZjZDgyM2EzZTk1OGJiOTQyY2Q2MjBjZWIzZTA=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2018-01-03T09:29:27Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2018-05-01T07:44:44Z"}, "message": "Don't force-enable frame pointers when generating debug info\n\nWe apparently used to generate bad/incomplete debug info causing\ndebuggers not to find symbols of stack allocated variables. This was\nsomehow worked around by having frame pointers.\n\nWith the current codegen, this seems no longer necessary, so we can\nremove the code that force-enables frame pointers whenever debug info\nis requested.\n\nSince certain situations, like profiling code profit from having frame\npointers, we add a -Cforce-frame-pointers flag to always enable frame\npointers.\n\nFixes #11906", "tree": {"sha": "97d7f7c2ebbdef87bb5ef45b96a43a1e6e304144", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97d7f7c2ebbdef87bb5ef45b96a43a1e6e304144"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b800c231f45fcd823a3e958bb942cd620ceb3e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b800c231f45fcd823a3e958bb942cd620ceb3e0", "html_url": "https://github.com/rust-lang/rust/commit/5b800c231f45fcd823a3e958bb942cd620ceb3e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b800c231f45fcd823a3e958bb942cd620ceb3e0/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a8ad909304953973a819760071de99f2ce5fb2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a8ad909304953973a819760071de99f2ce5fb2d", "html_url": "https://github.com/rust-lang/rust/commit/2a8ad909304953973a819760071de99f2ce5fb2d"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "023be78922207dacf9c6d19769c1cbc61e677d0d", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5b800c231f45fcd823a3e958bb942cd620ceb3e0/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b800c231f45fcd823a3e958bb942cd620ceb3e0/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=5b800c231f45fcd823a3e958bb942cd620ceb3e0", "patch": "@@ -1053,6 +1053,8 @@ options! {CodegenOptions, CodegenSetter, basic_codegen_options,\n          2 = full debug info with variable and type information\"),\n     opt_level: Option<String> = (None, parse_opt_string, [TRACKED],\n         \"optimize with possible levels 0-3, s, or z\"),\n+    force_frame_pointers: bool = (false, parse_bool, [TRACKED],\n+        \"force frame pointers to be used\"),\n     debug_assertions: Option<bool> = (None, parse_opt_bool, [TRACKED],\n         \"explicitly enable the cfg(debug_assertions) directive\"),\n     inline_threshold: Option<usize> = (None, parse_opt_uint, [TRACKED],\n@@ -2965,6 +2967,10 @@ mod tests {\n         opts.cg.debuginfo = Some(0xba5eba11);\n         assert!(reference.dep_tracking_hash() != opts.dep_tracking_hash());\n \n+        opts = reference.clone();\n+        opts.cg.force_frame_pointers = true;\n+        assert!(reference.dep_tracking_hash() != opts.dep_tracking_hash());\n+\n         opts = reference.clone();\n         opts.cg.debug_assertions = Some(true);\n         assert!(reference.dep_tracking_hash() != opts.dep_tracking_hash());"}, {"sha": "45b7e2d17404a28d454f3b20b41332ce7f300c65", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b800c231f45fcd823a3e958bb942cd620ceb3e0/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b800c231f45fcd823a3e958bb942cd620ceb3e0/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=5b800c231f45fcd823a3e958bb942cd620ceb3e0", "patch": "@@ -20,7 +20,7 @@ use lint::builtin::BuiltinLintDiagnostics;\n use middle::allocator::AllocatorKind;\n use middle::dependency_format;\n use session::search_paths::PathKind;\n-use session::config::{DebugInfoLevel, OutputType};\n+use session::config::{OutputType};\n use ty::tls;\n use util::nodemap::{FxHashSet};\n use util::common::{duration_to_secs_str, ErrorReported};"}, {"sha": "5baed57092d0f3c243605d666bce3a650281dbf6", "filename": "src/librustc_trans/attributes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b800c231f45fcd823a3e958bb942cd620ceb3e0/src%2Flibrustc_trans%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b800c231f45fcd823a3e958bb942cd620ceb3e0/src%2Flibrustc_trans%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fattributes.rs?ref=5b800c231f45fcd823a3e958bb942cd620ceb3e0", "patch": "@@ -69,8 +69,6 @@ pub fn naked(val: ValueRef, is_naked: bool) {\n }\n \n pub fn set_frame_pointer_elimination(cx: &CodegenCx, llfn: ValueRef) {\n-    // FIXME: #11906: Omitting frame pointers breaks retrieving the value of a\n-    // parameter.\n     if cx.sess().must_not_eliminate_frame_pointers() {\n         llvm::AddFunctionAttrStringValue(\n             llfn, llvm::AttributePlace::Function,"}, {"sha": "d40406a0476f2b3bb9969d108014e18b76b54f09", "filename": "src/test/codegen/force-frame-pointers.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5b800c231f45fcd823a3e958bb942cd620ceb3e0/src%2Ftest%2Fcodegen%2Fforce-frame-pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b800c231f45fcd823a3e958bb942cd620ceb3e0/src%2Ftest%2Fcodegen%2Fforce-frame-pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fforce-frame-pointers.rs?ref=5b800c231f45fcd823a3e958bb942cd620ceb3e0", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+//\n+// compile-flags: -C no-prepopulate-passes -C force-frame-pointers\n+\n+#![crate_type=\"lib\"]\n+\n+// CHECK: attributes #{{.*}} \"no-frame-pointer-elim\"=\"true\"\n+pub fn foo() {}"}]}