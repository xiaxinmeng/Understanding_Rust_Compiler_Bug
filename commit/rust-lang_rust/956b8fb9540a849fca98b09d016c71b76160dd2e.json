{"sha": "956b8fb9540a849fca98b09d016c71b76160dd2e", "node_id": "C_kwDOAAsO6NoAKDk1NmI4ZmI5NTQwYTg0OWZjYTk4YjA5ZDAxNmM3MWI3NjE2MGRkMmU", "commit": {"author": {"name": "iDawer", "email": "ilnur.iskhakov.oss@outlook.com", "date": "2022-05-10T12:18:42Z"}, "committer": {"name": "iDawer", "email": "ilnur.iskhakov.oss@outlook.com", "date": "2022-05-10T12:18:42Z"}, "message": "`signature_help`: detect fully qualified call syntax for parameter fallback", "tree": {"sha": "2d81922336d44224fef1c67b07d90efa8d22870f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d81922336d44224fef1c67b07d90efa8d22870f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/956b8fb9540a849fca98b09d016c71b76160dd2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/956b8fb9540a849fca98b09d016c71b76160dd2e", "html_url": "https://github.com/rust-lang/rust/commit/956b8fb9540a849fca98b09d016c71b76160dd2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/956b8fb9540a849fca98b09d016c71b76160dd2e/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad6df5b12e61cb7779bfc92c08f1ff0ee37c4f2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad6df5b12e61cb7779bfc92c08f1ff0ee37c4f2d", "html_url": "https://github.com/rust-lang/rust/commit/ad6df5b12e61cb7779bfc92c08f1ff0ee37c4f2d"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "e603cb4862d63bbc7ba6044c357954bdb37dbe59", "filename": "crates/ide/src/signature_help.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/956b8fb9540a849fca98b09d016c71b76160dd2e/crates%2Fide%2Fsrc%2Fsignature_help.rs", "raw_url": "https://github.com/rust-lang/rust/raw/956b8fb9540a849fca98b09d016c71b76160dd2e/crates%2Fide%2Fsrc%2Fsignature_help.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsignature_help.rs?ref=956b8fb9540a849fca98b09d016c71b76160dd2e", "patch": "@@ -129,7 +129,7 @@ fn signature_help_for_call(\n         hir::CallableKind::Function(func) => {\n             res.doc = func.docs(db).map(|it| it.into());\n             format_to!(res.signature, \"fn {}\", func.name(db));\n-            fn_params = Some(match func.self_param(db) {\n+            fn_params = Some(match callable.receiver_param(db) {\n                 Some(_self) => func.params_without_self(db),\n                 None => func.assoc_fn_params(db),\n             });\n@@ -1142,4 +1142,20 @@ fn f() {\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn fully_qualified_syntax() {\n+        check(\n+            r#\"\n+fn f() {\n+    trait A { fn foo(&self, other: Self); }\n+    A::foo(&self$0, other);\n+}\n+\"#,\n+            expect![[r#\"\n+                fn foo(self: &Self, other: Self)\n+                       ^^^^^^^^^^^  -----------\n+            \"#]],\n+        );\n+    }\n }"}]}