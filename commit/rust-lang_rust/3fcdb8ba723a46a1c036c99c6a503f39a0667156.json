{"sha": "3fcdb8ba723a46a1c036c99c6a503f39a0667156", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmY2RiOGJhNzIzYTQ2YTFjMDM2Yzk5YzZhNTAzZjM5YTA2NjcxNTY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-08-09T01:20:36Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-08-09T05:59:55Z"}, "message": "Only refer to return type when it matches", "tree": {"sha": "9e4a1dc903c23683e36d03026a4ef3a98c67b653", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e4a1dc903c23683e36d03026a4ef3a98c67b653"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fcdb8ba723a46a1c036c99c6a503f39a0667156", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fcdb8ba723a46a1c036c99c6a503f39a0667156", "html_url": "https://github.com/rust-lang/rust/commit/3fcdb8ba723a46a1c036c99c6a503f39a0667156", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fcdb8ba723a46a1c036c99c6a503f39a0667156/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d96f9d47ac35b637906edb1d5d112549164e096c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d96f9d47ac35b637906edb1d5d112549164e096c", "html_url": "https://github.com/rust-lang/rust/commit/d96f9d47ac35b637906edb1d5d112549164e096c"}], "stats": {"total": 40, "additions": 27, "deletions": 13}, "files": [{"sha": "3fdd9c34f46d9f130a94bb7f695cfeb403a6d0d3", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fcdb8ba723a46a1c036c99c6a503f39a0667156/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fcdb8ba723a46a1c036c99c6a503f39a0667156/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=3fcdb8ba723a46a1c036c99c6a503f39a0667156", "patch": "@@ -664,7 +664,7 @@ impl<'hir> Map<'hir> {\n             match *node {\n                 NodeExpr(ref expr) => {\n                     match expr.node {\n-                        ExprWhile(..) | ExprLoop(..) | ExprIf(..) => true,\n+                        ExprWhile(..) | ExprLoop(..) => true,\n                         _ => false,\n                     }\n                 }"}, {"sha": "7c8eb77380f02fb4070ca940694cd36adf61d60b", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/3fcdb8ba723a46a1c036c99c6a503f39a0667156/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fcdb8ba723a46a1c036c99c6a503f39a0667156/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=3fcdb8ba723a46a1c036c99c6a503f39a0667156", "patch": "@@ -95,7 +95,7 @@ use rustc::middle::region::CodeExtent;\n use rustc::ty::subst::{Kind, Subst, Substs};\n use rustc::traits::{self, FulfillmentContext, ObligationCause, ObligationCauseCode};\n use rustc::ty::{ParamTy, LvaluePreference, NoPreference, PreferMutLvalue};\n-use rustc::ty::{self, Ty, TyCtxt, Visibility};\n+use rustc::ty::{self, Ty, TyCtxt, Visibility, TypeVariants};\n use rustc::ty::adjustment::{Adjust, Adjustment, AutoBorrow};\n use rustc::ty::fold::{BottomUpFolder, TypeFoldable};\n use rustc::ty::maps::Providers;\n@@ -4302,7 +4302,6 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                    expected: Ty<'tcx>,\n                                    found: Ty<'tcx>,\n                                    can_suggest: bool) {\n-\n         // Only suggest changing the return type for methods that\n         // haven't set a return type at all (and aren't `fn main()` or an impl).\n         match (&fn_decl.output, found.is_suggestable(), can_suggest) {\n@@ -4316,13 +4315,31 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             }\n             (&hir::FunctionRetTy::DefaultReturn(span), _, _) => {\n                 // `fn main()` must return `()`, do not suggest changing return type\n-                err.span_label(span, \"expected `()` because of default return type\");\n+                err.span_label(span, \"expected () because of default return type\");\n             }\n             (&hir::FunctionRetTy::Return(ref ty), _, _) => {\n                 // Only point to return type if the expected type is the return type, as if they\n                 // are not, the expectation must have been caused by something else.\n-                err.span_label(ty.span,\n-                               format!(\"expected `{}` because of return type\", expected));\n+                debug!(\"suggest_missing_return_type: return type {:?} node {:?}\", ty, ty.node);\n+                let sp = ty.span;\n+                let ty = AstConv::ast_ty_to_ty(self, ty);\n+                debug!(\"suggest_missing_return_type: return type sty {:?}\", ty.sty);\n+                debug!(\"suggest_missing_return_type: expected type sty {:?}\", ty.sty);\n+                if ty.sty == expected.sty {\n+                    let quote = if let TypeVariants::TyTuple(ref slice, _) = expected.sty {\n+                        if slice.len() == 0 {  // don't use backtics for ()\n+                            \"\"\n+                        } else {\n+                            \"`\"\n+                        }\n+                    } else {\n+                        \"`\"\n+                    };\n+                    err.span_label(sp, format!(\"expected {}{}{} because of return type\",\n+                                               quote,\n+                                               expected,\n+                                               quote));\n+                }\n             }\n         }\n     }"}, {"sha": "6432375fe709be86a9044959a00112095f148cd2", "filename": "src/test/ui/block-result/block-must-not-have-result-res.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fcdb8ba723a46a1c036c99c6a503f39a0667156/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-res.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3fcdb8ba723a46a1c036c99c6a503f39a0667156/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-res.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-res.stderr?ref=3fcdb8ba723a46a1c036c99c6a503f39a0667156", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/block-must-not-have-result-res.rs:15:9\n    |\n 14 |     fn drop(&mut self) {\n-   |                        - expected `()` because of default return type\n+   |                        - expected () because of default return type\n 15 |         true //~  ERROR mismatched types\n    |         ^^^^ expected (), found bool\n    |"}, {"sha": "8fe4a512574101096ebb0a620899480f34f122e7", "filename": "src/test/ui/block-result/issue-13624.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fcdb8ba723a46a1c036c99c6a503f39a0667156/src%2Ftest%2Fui%2Fblock-result%2Fissue-13624.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3fcdb8ba723a46a1c036c99c6a503f39a0667156/src%2Ftest%2Fui%2Fblock-result%2Fissue-13624.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-13624.stderr?ref=3fcdb8ba723a46a1c036c99c6a503f39a0667156", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-13624.rs:17:5\n    |\n 16 |   pub fn get_enum_struct_variant() -> () {\n-   |                                       -- expected `()` because of return type\n+   |                                       -- expected () because of return type\n 17 |     Enum::EnumStructVariant { x: 1, y: 2, z: 3 }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected (), found enum `a::Enum`\n    |"}, {"sha": "ad39e38cab63fdfcaa282cbb3da47ce80346d1a3", "filename": "src/test/ui/block-result/issue-22645.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fcdb8ba723a46a1c036c99c6a503f39a0667156/src%2Ftest%2Fui%2Fblock-result%2Fissue-22645.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3fcdb8ba723a46a1c036c99c6a503f39a0667156/src%2Ftest%2Fui%2Fblock-result%2Fissue-22645.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-22645.stderr?ref=3fcdb8ba723a46a1c036c99c6a503f39a0667156", "patch": "@@ -12,7 +12,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-22645.rs:25:3\n    |\n 23 | fn main() {\n-   |           - expected `()` because of default return type\n+   |           - expected () because of default return type\n 24 |   let b = Bob + 3.5;\n 25 |   b + 3 //~ ERROR E0277\n    |   ^^^^^ expected (), found struct `Bob`"}, {"sha": "944391c1719cf7733c1c7bd9923d2c4980cd1e22", "filename": "src/test/ui/block-result/issue-5500.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fcdb8ba723a46a1c036c99c6a503f39a0667156/src%2Ftest%2Fui%2Fblock-result%2Fissue-5500.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3fcdb8ba723a46a1c036c99c6a503f39a0667156/src%2Ftest%2Fui%2Fblock-result%2Fissue-5500.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-5500.stderr?ref=3fcdb8ba723a46a1c036c99c6a503f39a0667156", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-5500.rs:12:5\n    |\n 11 | fn main() {\n-   |           - expected `()` because of default return type\n+   |           - expected () because of default return type\n 12 |     &panic!()\n    |     ^^^^^^^^^ expected (), found reference\n    |"}, {"sha": "3fc08a0900fb9ed7b8213b4d1d78144d3c07cca4", "filename": "src/test/ui/impl-trait/equality.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3fcdb8ba723a46a1c036c99c6a503f39a0667156/src%2Ftest%2Fui%2Fimpl-trait%2Fequality.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3fcdb8ba723a46a1c036c99c6a503f39a0667156/src%2Ftest%2Fui%2Fimpl-trait%2Fequality.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fequality.stderr?ref=3fcdb8ba723a46a1c036c99c6a503f39a0667156", "patch": "@@ -1,9 +1,6 @@\n error[E0308]: mismatched types\n   --> $DIR/equality.rs:25:5\n    |\n-21 | fn two(x: bool) -> impl Foo {\n-   |                    -------- expected `_` because of return type\n-...\n 25 |     0_u32\n    |     ^^^^^ expected i32, found u32\n    |"}]}