{"sha": "343909bca1a3903bc6df51007723601ac5a103c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0MzkwOWJjYTFhMzkwM2JjNmRmNTEwMDc3MjM2MDFhYzVhMTAzYzA=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-18T13:39:06Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-18T13:39:06Z"}, "message": "Audit `core::cmp` for `int/uint`.\n\n* cast 3-valued `core::cmp::Ordering` to `i32`, not `int`.\n\n* use `isize`/`usize` in the impl macros.", "tree": {"sha": "c57da285d5ace3c531ed0f115521681fcd067e9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c57da285d5ace3c531ed0f115521681fcd067e9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/343909bca1a3903bc6df51007723601ac5a103c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/343909bca1a3903bc6df51007723601ac5a103c0", "html_url": "https://github.com/rust-lang/rust/commit/343909bca1a3903bc6df51007723601ac5a103c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/343909bca1a3903bc6df51007723601ac5a103c0/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f82e2310b3b35bc1d137712576d2d16b82e03fcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/f82e2310b3b35bc1d137712576d2d16b82e03fcb", "html_url": "https://github.com/rust-lang/rust/commit/f82e2310b3b35bc1d137712576d2d16b82e03fcb"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "b37bad5f7546c21094828cf36e6c54e70593d210", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/343909bca1a3903bc6df51007723601ac5a103c0/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343909bca1a3903bc6df51007723601ac5a103c0/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=343909bca1a3903bc6df51007723601ac5a103c0", "patch": "@@ -215,7 +215,7 @@ impl Ord for Ordering {\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn cmp(&self, other: &Ordering) -> Ordering {\n-        (*self as int).cmp(&(*other as int))\n+        (*self as i32).cmp(&(*other as i32))\n     }\n }\n \n@@ -224,7 +224,7 @@ impl PartialOrd for Ordering {\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn partial_cmp(&self, other: &Ordering) -> Option<Ordering> {\n-        (*self as int).partial_cmp(&(*other as int))\n+        (*self as i32).partial_cmp(&(*other as i32))\n     }\n }\n \n@@ -482,7 +482,7 @@ mod impls {\n     }\n \n     partial_eq_impl! {\n-        bool char uint u8 u16 u32 u64 int i8 i16 i32 i64 f32 f64\n+        bool char usize u8 u16 u32 u64 isize i8 i16 i32 i64 f32 f64\n     }\n \n     macro_rules! eq_impl {\n@@ -492,7 +492,7 @@ mod impls {\n         )*)\n     }\n \n-    eq_impl! { () bool char uint u8 u16 u32 u64 int i8 i16 i32 i64 }\n+    eq_impl! { () bool char usize u8 u16 u32 u64 isize i8 i16 i32 i64 }\n \n     macro_rules! partial_ord_impl {\n         ($($t:ty)*) => ($(\n@@ -535,7 +535,7 @@ mod impls {\n         }\n     }\n \n-    partial_ord_impl! { char uint u8 u16 u32 u64 int i8 i16 i32 i64 f32 f64 }\n+    partial_ord_impl! { char usize u8 u16 u32 u64 isize i8 i16 i32 i64 f32 f64 }\n \n     macro_rules! ord_impl {\n         ($($t:ty)*) => ($(\n@@ -565,7 +565,7 @@ mod impls {\n         }\n     }\n \n-    ord_impl! { char uint u8 u16 u32 u64 int i8 i16 i32 i64 }\n+    ord_impl! { char usize u8 u16 u32 u64 isize i8 i16 i32 i64 }\n \n     // & pointers\n "}]}