{"sha": "71450c7aadac3a94889744143127962c4e991f60", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxNDUwYzdhYWRhYzNhOTQ4ODk3NDQxNDMxMjc5NjJjNGU5OTFmNjA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-20T16:57:08Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-20T17:00:04Z"}, "message": "generalize bindings_with_variant_name lint", "tree": {"sha": "1f62c650f26fc736e03a36dca0687d2da5ab1324", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f62c650f26fc736e03a36dca0687d2da5ab1324"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71450c7aadac3a94889744143127962c4e991f60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71450c7aadac3a94889744143127962c4e991f60", "html_url": "https://github.com/rust-lang/rust/commit/71450c7aadac3a94889744143127962c4e991f60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71450c7aadac3a94889744143127962c4e991f60/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "900811e43047fc5593f39b0363373530b02c87e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/900811e43047fc5593f39b0363373530b02c87e0", "html_url": "https://github.com/rust-lang/rust/commit/900811e43047fc5593f39b0363373530b02c87e0"}], "stats": {"total": 67, "additions": 53, "deletions": 14}, "files": [{"sha": "ced0d5ed9359e66ff37ce216dc185dcacb9408bf", "filename": "src/librustc_mir_build/hair/pattern/check_match.rs", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/71450c7aadac3a94889744143127962c4e991f60/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71450c7aadac3a94889744143127962c4e991f60/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fcheck_match.rs?ref=71450c7aadac3a94889744143127962c4e991f60", "patch": "@@ -67,18 +67,13 @@ impl<'tcx> Visitor<'tcx> for MatchVisitor<'_, 'tcx> {\n             hir::LocalSource::AwaitDesugar => (\"`await` future binding\", None),\n         };\n         self.check_irrefutable(&loc.pat, msg, sp);\n-\n-        // Check legality of move bindings and `@` patterns.\n         self.check_patterns(false, &loc.pat);\n     }\n \n-    fn visit_body(&mut self, body: &'tcx hir::Body<'tcx>) {\n-        intravisit::walk_body(self, body);\n-\n-        for param in body.params {\n-            self.check_irrefutable(&param.pat, \"function argument\", None);\n-            self.check_patterns(false, &param.pat);\n-        }\n+    fn visit_param(&mut self, param: &'tcx hir::Param<'tcx>) {\n+        intravisit::walk_param(self, param);\n+        self.check_irrefutable(&param.pat, \"function argument\", None);\n+        self.check_patterns(false, &param.pat);\n     }\n }\n \n@@ -123,6 +118,7 @@ impl<'tcx> MatchVisitor<'_, 'tcx> {\n         if !self.tcx.features().bindings_after_at {\n             check_legality_of_bindings_in_at_patterns(self, pat);\n         }\n+        check_for_bindings_named_same_as_variants(self, pat);\n     }\n \n     fn check_match(\n@@ -132,11 +128,8 @@ impl<'tcx> MatchVisitor<'_, 'tcx> {\n         source: hir::MatchSource,\n     ) {\n         for arm in arms {\n-            // First, check legality of move bindings.\n+            // Check the arm for some things unrelated to exhaustiveness.\n             self.check_patterns(arm.guard.is_some(), &arm.pat);\n-\n-            // Second, perform some lints.\n-            check_for_bindings_named_same_as_variants(self, &arm.pat);\n         }\n \n         let module = self.tcx.hir().get_module_parent(scrut.hir_id);"}, {"sha": "a98b4f2fd4450a1789f8526207d9921db994a07d", "filename": "src/test/ui/lint/lint-uppercase-variables.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/71450c7aadac3a94889744143127962c4e991f60/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71450c7aadac3a94889744143127962c4e991f60/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.rs?ref=71450c7aadac3a94889744143127962c4e991f60", "patch": "@@ -25,6 +25,16 @@ fn main() {\n //~^^^ WARN unused variable: `Foo`\n     }\n \n+    let Foo = foo::Foo::Foo;\n+    //~^ ERROR variable `Foo` should have a snake case name\n+    //~^^ WARN `Foo` is named the same as one of the variants of the type `foo::Foo`\n+    //~^^^ WARN unused variable: `Foo`\n+\n+    fn in_param(Foo: foo::Foo) {}\n+    //~^ ERROR variable `Foo` should have a snake case name\n+    //~^^ WARN `Foo` is named the same as one of the variants of the type `foo::Foo`\n+    //~^^^ WARN unused variable: `Foo`\n+\n     test(1);\n \n     let _ = Something { X: 0 };"}, {"sha": "a38f3e7626bca477f52863940ad277618c301646", "filename": "src/test/ui/lint/lint-uppercase-variables.stderr", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/71450c7aadac3a94889744143127962c4e991f60/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/71450c7aadac3a94889744143127962c4e991f60/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr?ref=71450c7aadac3a94889744143127962c4e991f60", "patch": "@@ -6,6 +6,18 @@ LL |         Foo => {}\n    |\n    = note: `#[warn(bindings_with_variant_name)]` on by default\n \n+warning[E0170]: pattern binding `Foo` is named the same as one of the variants of the type `foo::Foo`\n+  --> $DIR/lint-uppercase-variables.rs:28:9\n+   |\n+LL |     let Foo = foo::Foo::Foo;\n+   |         ^^^ help: to match on the variant, qualify the path: `foo::Foo::Foo`\n+\n+warning[E0170]: pattern binding `Foo` is named the same as one of the variants of the type `foo::Foo`\n+  --> $DIR/lint-uppercase-variables.rs:33:17\n+   |\n+LL |     fn in_param(Foo: foo::Foo) {}\n+   |                 ^^^ help: to match on the variant, qualify the path: `foo::Foo::Foo`\n+\n warning: unused variable: `Foo`\n   --> $DIR/lint-uppercase-variables.rs:22:9\n    |\n@@ -19,6 +31,18 @@ LL | #![warn(unused)]\n    |         ^^^^^^\n    = note: `#[warn(unused_variables)]` implied by `#[warn(unused)]`\n \n+warning: unused variable: `Foo`\n+  --> $DIR/lint-uppercase-variables.rs:28:9\n+   |\n+LL |     let Foo = foo::Foo::Foo;\n+   |         ^^^ help: consider prefixing with an underscore: `_Foo`\n+\n+warning: unused variable: `Foo`\n+  --> $DIR/lint-uppercase-variables.rs:33:17\n+   |\n+LL |     fn in_param(Foo: foo::Foo) {}\n+   |                 ^^^ help: consider prefixing with an underscore: `_Foo`\n+\n error: structure field `X` should have a snake case name\n   --> $DIR/lint-uppercase-variables.rs:10:5\n    |\n@@ -49,6 +73,18 @@ error: variable `Foo` should have a snake case name\n LL |         Foo => {}\n    |         ^^^ help: convert the identifier to snake case (notice the capitalization): `foo`\n \n-error: aborting due to 4 previous errors\n+error: variable `Foo` should have a snake case name\n+  --> $DIR/lint-uppercase-variables.rs:28:9\n+   |\n+LL |     let Foo = foo::Foo::Foo;\n+   |         ^^^ help: convert the identifier to snake case (notice the capitalization): `foo`\n+\n+error: variable `Foo` should have a snake case name\n+  --> $DIR/lint-uppercase-variables.rs:33:17\n+   |\n+LL |     fn in_param(Foo: foo::Foo) {}\n+   |                 ^^^ help: convert the identifier to snake case (notice the capitalization): `foo`\n+\n+error: aborting due to 6 previous errors\n \n For more information about this error, try `rustc --explain E0170`."}]}