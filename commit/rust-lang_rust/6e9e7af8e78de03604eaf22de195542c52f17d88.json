{"sha": "6e9e7af8e78de03604eaf22de195542c52f17d88", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlOWU3YWY4ZTc4ZGUwMzYwNGVhZjIyZGUxOTU1NDJjNTJmMTdkODg=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2017-02-09T14:58:20Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2017-02-09T14:58:20Z"}, "message": "Fix comment.", "tree": {"sha": "48287e1aba5c8189f51fed70f07c75e6fe7ca703", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48287e1aba5c8189f51fed70f07c75e6fe7ca703"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e9e7af8e78de03604eaf22de195542c52f17d88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e9e7af8e78de03604eaf22de195542c52f17d88", "html_url": "https://github.com/rust-lang/rust/commit/6e9e7af8e78de03604eaf22de195542c52f17d88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e9e7af8e78de03604eaf22de195542c52f17d88/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b95bf93b12c66976fcca5d819dfc1e11d7cba36", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b95bf93b12c66976fcca5d819dfc1e11d7cba36", "html_url": "https://github.com/rust-lang/rust/commit/3b95bf93b12c66976fcca5d819dfc1e11d7cba36"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2a9fe179fa22cad9b73b8dc4289a796eaed1997b", "filename": "src/terminator/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e9e7af8e78de03604eaf22de195542c52f17d88/src%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e9e7af8e78de03604eaf22de195542c52f17d88/src%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fmod.rs?ref=6e9e7af8e78de03604eaf22de195542c52f17d88", "patch": "@@ -308,7 +308,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                             \"std::panicking::panicking\" |\n                             \"std::rt::panicking\" => {\n                                 let (lval, block) = destination.expect(\"std::rt::panicking does not diverge\");\n-                                // we abort on panic -> `std::rt::panicking` always returns true\n+                                // we abort on panic -> `std::rt::panicking` always returns false\n                                 let bool = self.tcx.types.bool;\n                                 self.write_primval(lval, PrimVal::from_bool(false), bool)?;\n                                 self.goto_block(block);"}]}