{"sha": "d2df22268c9eb0e900a72157170d2b320daa3099", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyZGYyMjI2OGM5ZWIwZTkwMGE3MjE1NzE3MGQyYjMyMGRhYTMwOTk=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-11-15T19:51:25Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-11-17T11:42:51Z"}, "message": "Add test to ensure that no DOS backline (\\r\\n) doesn't create extra backline in source rendering", "tree": {"sha": "94776e8861bfcb4d9f7117fe18a28c5956c11d59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94776e8861bfcb4d9f7117fe18a28c5956c11d59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2df22268c9eb0e900a72157170d2b320daa3099", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl+ztzsACgkQPgar6Auq\n8ZyWgxAAkIg1Qwv5X6d5LUy9rdmE8C0poljCJ/DnMBGb/JDKmqx15eeSNpF5a1jM\n2QmgVJpAv4oP4wV7G393SXDj3ZEGyS34kkO57/TKeSAIgBkQN4kj/ynC5ZD0TGTO\noV55V32hBzcsm9bkLBHlY7Cwcasj4BFnv8u5wBlw+3WgAbPNp0/U/UCCp6KVZj52\n3wq8SLLtpYwpJN+57sCcsW69T8b2RP1N9lnBFD/z6FZRTmyYs7oGu3UGuslcDVJp\nmvE9+ZfDHaAFvMxXFMGEQqEqaU/x2WweePaI4owCxV/K7Omc6OZlWedG81eOdl+w\n4gEj7CXuNgaA7atDEczlhW55u+6prLaikJqFf11q8acXnfEEYRz+Q/cM45TR5KtD\n7ZxUOQcC3mX87MfYoFQDpZSDYtNx/+mCGwgmFNh9WC9Tkd7xEUCgFcLjoTnc00TH\npOGW0o1+TWFlkQcshzG8ur2MeCzVP/6tdMBjb/izjApjGBrqMjoo9JlNP/N3zTnA\nGDKqbUqfv4rTdCY4kT9ayUgWBdvJqIdDbvvYxvsi+esU/TVXUXROpdWBAVONfIyw\n80q+x8whxZ/4FVQMJDRFcWsIljVjUph74Xq7t5BUYmJefb+55Wl/wpmmXBFNTttO\nEzFL1HMjl+m8KxdREm5TBpul5GLi7LxtwPGAyFyERxYihDzvsro=\n=ORbN\n-----END PGP SIGNATURE-----", "payload": "tree 94776e8861bfcb4d9f7117fe18a28c5956c11d59\nparent f7886a62772dc571f8ad266561f267d5f88a819d\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1605469885 +0100\ncommitter Pietro Albini <pietro@pietroalbini.org> 1605613371 +0100\n\nAdd test to ensure that no DOS backline (\\r\\n) doesn't create extra backline in source rendering\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2df22268c9eb0e900a72157170d2b320daa3099", "html_url": "https://github.com/rust-lang/rust/commit/d2df22268c9eb0e900a72157170d2b320daa3099", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2df22268c9eb0e900a72157170d2b320daa3099/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7886a62772dc571f8ad266561f267d5f88a819d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7886a62772dc571f8ad266561f267d5f88a819d", "html_url": "https://github.com/rust-lang/rust/commit/f7886a62772dc571f8ad266561f267d5f88a819d"}], "stats": {"total": 41, "additions": 27, "deletions": 14}, "files": [{"sha": "b5fe593dc0105112247db67ccc6c922899e1ba9c", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d2df22268c9eb0e900a72157170d2b320daa3099/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2df22268c9eb0e900a72157170d2b320daa3099/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=d2df22268c9eb0e900a72157170d2b320daa3099", "patch": "@@ -21,8 +21,6 @@ pub fn render_with_highlighting(\n     playground_button: Option<&str>,\n     tooltip: Option<(&str, &str)>,\n ) -> String {\n-    // This replace allows to fix how the code source with DOS backline characters is displayed.\n-    let src = src.replace(\"\\r\\n\", \"\\n\");\n     debug!(\"highlighting: ================\\n{}\\n==============\", src);\n     let mut out = String::with_capacity(src.len());\n     if let Some((tooltip, class)) = tooltip {\n@@ -48,7 +46,9 @@ fn write_header(out: &mut String, class: Option<&str>) {\n }\n \n fn write_code(out: &mut String, src: &str) {\n-    Classifier::new(src).highlight(&mut |highlight| {\n+    // This replace allows to fix how the code source with DOS backline characters is displayed.\n+    let src = src.replace(\"\\r\\n\", \"\\n\");\n+    Classifier::new(&src).highlight(&mut |highlight| {\n         match highlight {\n             Highlight::Token { text, class } => string(out, Escape(text), class),\n             Highlight::EnterSpan { class } => enter_span(out, class),"}, {"sha": "4400f85681d8a7d5110da6bbd205c0277223eb08", "filename": "src/librustdoc/html/highlight/fixtures/dos_line.html", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d2df22268c9eb0e900a72157170d2b320daa3099/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fdos_line.html", "raw_url": "https://github.com/rust-lang/rust/raw/d2df22268c9eb0e900a72157170d2b320daa3099/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fdos_line.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fdos_line.html?ref=d2df22268c9eb0e900a72157170d2b320daa3099", "patch": "@@ -0,0 +1,3 @@\n+<span class=\"kw\">pub</span> <span class=\"kw\">fn</span> <span class=\"ident\">foo</span>() {\n+<span class=\"macro\">println</span><span class=\"macro\">!</span>(<span class=\"string\">&quot;foo&quot;</span>);\n+}"}, {"sha": "f57f52d6f087554ae57537cb98be73daa4f67663", "filename": "src/librustdoc/html/highlight/tests.rs", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/d2df22268c9eb0e900a72157170d2b320daa3099/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2df22268c9eb0e900a72157170d2b320daa3099/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ftests.rs?ref=d2df22268c9eb0e900a72157170d2b320daa3099", "patch": "@@ -1,17 +1,6 @@\n use super::write_code;\n use expect_test::expect_file;\n \n-#[test]\n-fn test_html_highlighting() {\n-    let src = include_str!(\"fixtures/sample.rs\");\n-    let html = {\n-        let mut out = String::new();\n-        write_code(&mut out, src);\n-        format!(\"{}<pre><code>{}</code></pre>\\n\", STYLE, out)\n-    };\n-    expect_file![\"fixtures/sample.html\"].assert_eq(&html);\n-}\n-\n const STYLE: &str = r#\"\n <style>\n .kw { color: #8959A8; }\n@@ -23,3 +12,24 @@ const STYLE: &str = r#\"\n .question-mark { color: #ff9011; }\n </style>\n \"#;\n+\n+#[test]\n+fn test_html_highlighting() {\n+    let src = include_str!(\"fixtures/sample.rs\");\n+    let html = {\n+        let mut out = String::new();\n+        write_code(&mut out, src);\n+        format!(\"{}<pre><code>{}</code></pre>\\n\", STYLE, out)\n+    };\n+    expect_file![\"fixtures/sample.html\"].assert_eq(&html);\n+}\n+\n+#[test]\n+fn test_dos_backline() {\n+    let src = \"pub fn foo() {\\r\\n\\\n+    println!(\\\"foo\\\");\\r\\n\\\n+}\\r\\n\";\n+    let mut html = String::new();\n+    write_code(&mut html, src);\n+    expect_file![\"fixtures/dos_line.html\"].assert_eq(&html);\n+}"}]}