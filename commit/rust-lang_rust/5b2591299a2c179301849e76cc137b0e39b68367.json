{"sha": "5b2591299a2c179301849e76cc137b0e39b68367", "node_id": "C_kwDOAAsO6NoAKDViMjU5MTI5OWEyYzE3OTMwMTg0OWU3NmNjMTM3YjBlMzliNjgzNjc", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-06T20:22:43Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-12T06:44:39Z"}, "message": "Add #[deny(unsafe_op_in_unsafe_fn)] to thread_local!(const).\n\nThis avoids 'unused unsafe' warnings when using this feature inside std.", "tree": {"sha": "8393f9211bdf2bdb9a8844cd682887f4cae7aaf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8393f9211bdf2bdb9a8844cd682887f4cae7aaf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b2591299a2c179301849e76cc137b0e39b68367", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b2591299a2c179301849e76cc137b0e39b68367", "html_url": "https://github.com/rust-lang/rust/commit/5b2591299a2c179301849e76cc137b0e39b68367", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b2591299a2c179301849e76cc137b0e39b68367/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83e8b9e4ddf41def776ad7d3724f308e689ad063", "url": "https://api.github.com/repos/rust-lang/rust/commits/83e8b9e4ddf41def776ad7d3724f308e689ad063", "html_url": "https://github.com/rust-lang/rust/commit/83e8b9e4ddf41def776ad7d3724f308e689ad063"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "99baca66df0921b4945c444e0cd4850bbee1952f", "filename": "library/std/src/thread/local.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b2591299a2c179301849e76cc137b0e39b68367/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b2591299a2c179301849e76cc137b0e39b68367/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs?ref=5b2591299a2c179301849e76cc137b0e39b68367", "patch": "@@ -179,6 +179,7 @@ macro_rules! __thread_local_inner {\n     // used to generate the `LocalKey` value for const-initialized thread locals\n     (@key $t:ty, const $init:expr) => {{\n         #[cfg_attr(not(windows), inline(always))] // see comments below\n+        #[deny(unsafe_op_in_unsafe_fn)]\n         unsafe fn __getit(\n             _init: $crate::option::Option<&mut $crate::option::Option<$t>>,\n         ) -> $crate::option::Option<&'static $t> {"}]}