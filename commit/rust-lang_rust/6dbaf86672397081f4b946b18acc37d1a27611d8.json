{"sha": "6dbaf86672397081f4b946b18acc37d1a27611d8", "node_id": "C_kwDOAAsO6NoAKDZkYmFmODY2NzIzOTcwODFmNGI5NDZiMThhY2MzN2QxYTI3NjExZDg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-13T00:17:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-13T00:17:08Z"}, "message": "Rollup merge of #104864 - chenyukang:yukang/fix-104700-binding, r=estebank\n\nAccount for item-local in inner scope for E0425\n\nFixes #104700", "tree": {"sha": "a58b5b14ca77b02bd777172563ff3c79d301340e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a58b5b14ca77b02bd777172563ff3c79d301340e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6dbaf86672397081f4b946b18acc37d1a27611d8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjl8SECRBK7hj4Ov3rIwAAh8kIAFXnC9tOSRfQEMeCGaHePrAt\nIbPy14oKB5K385ghuJt540W2wUymOTCCFY3pj/njocxL9GkaQrj+S9cr1akiYRko\n2QRRhDAsSOQXgQoZOwOWkpqzdWHltI6YzGPbOHxovgjS2f+awzfxQnTv1VyJzUtp\nVvTGCyoPdj3HfvQJlbei/fEv5zHHWdv11OrBtAHGWAA9bY8nzZkr9IhKWiuAoMSr\nJER5nXX0gS1gbf0uWSx7UGceho1aYSWzNSc+zF98WQr3xV7HXH8o1BXCbINb3d6q\niLjnfTg8zZfYt6pSkbscsIjgf3IpJKQkR1xQw8Ilj3hIBzhspDIJ51Q9CNs/WUY=\n=Jutt\n-----END PGP SIGNATURE-----\n", "payload": "tree a58b5b14ca77b02bd777172563ff3c79d301340e\nparent ed9749324aed9e97741abf569a022353e269a9df\nparent 68ea51602a492a02ed5d23580ac06f9c4cc830f5\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670890628 +0100\ncommitter GitHub <noreply@github.com> 1670890628 +0100\n\nRollup merge of #104864 - chenyukang:yukang/fix-104700-binding, r=estebank\n\nAccount for item-local in inner scope for E0425\n\nFixes #104700\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6dbaf86672397081f4b946b18acc37d1a27611d8", "html_url": "https://github.com/rust-lang/rust/commit/6dbaf86672397081f4b946b18acc37d1a27611d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6dbaf86672397081f4b946b18acc37d1a27611d8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed9749324aed9e97741abf569a022353e269a9df", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed9749324aed9e97741abf569a022353e269a9df", "html_url": "https://github.com/rust-lang/rust/commit/ed9749324aed9e97741abf569a022353e269a9df"}, {"sha": "68ea51602a492a02ed5d23580ac06f9c4cc830f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/68ea51602a492a02ed5d23580ac06f9c4cc830f5", "html_url": "https://github.com/rust-lang/rust/commit/68ea51602a492a02ed5d23580ac06f9c4cc830f5"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "5b7a00101e9b75b53cd635ec29c1d90da6a9a5be", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6dbaf86672397081f4b946b18acc37d1a27611d8/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dbaf86672397081f4b946b18acc37d1a27611d8/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=6dbaf86672397081f4b946b18acc37d1a27611d8", "patch": "@@ -566,6 +566,9 @@ struct LateResolutionVisitor<'a, 'b, 'ast> {\n     /// FIXME #4948: Reuse ribs to avoid allocation.\n     ribs: PerNS<Vec<Rib<'a>>>,\n \n+    /// Previous poped `rib`, only used for diagnostic.\n+    last_block_rib: Option<Rib<'a>>,\n+\n     /// The current set of local scopes, for labels.\n     label_ribs: Vec<Rib<'a, NodeId>>,\n \n@@ -873,6 +876,8 @@ impl<'a: 'ast, 'ast> Visitor<'ast> for LateResolutionVisitor<'a, '_, 'ast> {\n                             // Ignore errors in function bodies if this is rustdoc\n                             // Be sure not to set this until the function signature has been resolved.\n                             let previous_state = replace(&mut this.in_func_body, true);\n+                            // We only care block in the same function\n+                            this.last_block_rib = None;\n                             // Resolve the function body, potentially inside the body of an async closure\n                             this.with_lifetime_rib(\n                                 LifetimeRibKind::Elided(LifetimeRes::Infer),\n@@ -1168,6 +1173,7 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                 type_ns: vec![Rib::new(start_rib_kind)],\n                 macro_ns: vec![Rib::new(start_rib_kind)],\n             },\n+            last_block_rib: None,\n             label_ribs: Vec::new(),\n             lifetime_ribs: Vec::new(),\n             lifetime_elision_candidates: None,\n@@ -3769,7 +3775,7 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n             self.ribs[ValueNS].pop();\n             self.label_ribs.pop();\n         }\n-        self.ribs[ValueNS].pop();\n+        self.last_block_rib = self.ribs[ValueNS].pop();\n         if anonymous_module.is_some() {\n             self.ribs[TypeNS].pop();\n         }"}, {"sha": "49bbe37ee4328ad5dadd9ae79c87a7ded364dcd0", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6dbaf86672397081f4b946b18acc37d1a27611d8/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dbaf86672397081f4b946b18acc37d1a27611d8/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=6dbaf86672397081f4b946b18acc37d1a27611d8", "patch": "@@ -623,6 +623,22 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                 return (true, candidates);\n             }\n         }\n+\n+        // Try to find in last block rib\n+        if let Some(rib) = &self.last_block_rib && let RibKind::NormalRibKind = rib.kind {\n+            for (ident, &res) in &rib.bindings {\n+                if let Res::Local(_) = res && path.len() == 1 &&\n+                    ident.span.eq_ctxt(path[0].ident.span) &&\n+                    ident.name == path[0].ident.name {\n+                    err.span_help(\n+                        ident.span,\n+                        &format!(\"the binding `{}` is available in a different scope in the same function\", path_str),\n+                    );\n+                    return (true, candidates);\n+                }\n+            }\n+        }\n+\n         return (false, candidates);\n     }\n "}, {"sha": "e8f28c113e3ad9114d246d0172fee0133f3b3929", "filename": "src/test/ui/resolve/issue-104700-inner_scope.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6dbaf86672397081f4b946b18acc37d1a27611d8/src%2Ftest%2Fui%2Fresolve%2Fissue-104700-inner_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dbaf86672397081f4b946b18acc37d1a27611d8/src%2Ftest%2Fui%2Fresolve%2Fissue-104700-inner_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-104700-inner_scope.rs?ref=6dbaf86672397081f4b946b18acc37d1a27611d8", "patch": "@@ -0,0 +1,11 @@\n+fn main() {\n+    let foo = 1;\n+    {\n+        let bar = 2;\n+        let test_func = |x| x > 3;\n+    }\n+    if bar == 2 { //~ ERROR cannot find value\n+        println!(\"yes\");\n+    }\n+    test_func(1); //~ ERROR cannot find function\n+}"}, {"sha": "051b234fc72d8b939201f5bd2297db15d826e01f", "filename": "src/test/ui/resolve/issue-104700-inner_scope.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6dbaf86672397081f4b946b18acc37d1a27611d8/src%2Ftest%2Fui%2Fresolve%2Fissue-104700-inner_scope.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6dbaf86672397081f4b946b18acc37d1a27611d8/src%2Ftest%2Fui%2Fresolve%2Fissue-104700-inner_scope.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-104700-inner_scope.stderr?ref=6dbaf86672397081f4b946b18acc37d1a27611d8", "patch": "@@ -0,0 +1,21 @@\n+error[E0425]: cannot find value `bar` in this scope\n+  --> $DIR/issue-104700-inner_scope.rs:7:8\n+   |\n+LL |     if bar == 2 {\n+   |        ^^^\n+   |\n+help: the binding `bar` is available in a different scope in the same function\n+  --> $DIR/issue-104700-inner_scope.rs:4:13\n+   |\n+LL |         let bar = 2;\n+   |             ^^^\n+\n+error[E0425]: cannot find function `test_func` in this scope\n+  --> $DIR/issue-104700-inner_scope.rs:10:5\n+   |\n+LL |     test_func(1);\n+   |     ^^^^^^^^^ not found in this scope\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0425`."}]}