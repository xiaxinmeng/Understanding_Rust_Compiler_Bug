{"sha": "d71dea40cf2a509093bf882b87878406523c4073", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3MWRlYTQwY2YyYTUwOTA5M2JmODgyYjg3ODc4NDA2NTIzYzQwNzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-19T13:12:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-19T13:12:39Z"}, "message": "Auto merge of #6577 - nahuakang:inspect_then_for_each, r=flip1995\n\nNew Lint: inspect_then_for_each\n\n**Work In Progress**\n\nThis PR addresses [Issue 5209](https://github.com/rust-lang/rust-clippy/issues/5209) and adds a new lint called `inspect_then_for_each`.\n\nCurrent seek some guidance.\n\nIf you added a new lint, here's a checklist for things that will be\nchecked during review or continuous integration.\n\n- \\[x] Followed [lint naming conventions][lint_naming]\n- \\[x] Added passing UI tests (including committed `.stderr` file)\n- \\[x] `cargo test` passes locally\n- \\[x] Executed `cargo dev update_lints`\n- \\[x] Added lint documentation\n- \\[x] Run `cargo dev fmt`\n\n[lint_naming]: https://rust-lang.github.io/rfcs/0344-conventions-galore.html#lints\n\n---\n\nchangelog: Add [`inspect_for_each`] lint for the use of `inspect().for_each()` on `Iterators`.", "tree": {"sha": "663c1a118e2f634414fffce688805a4520b84602", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/663c1a118e2f634414fffce688805a4520b84602"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d71dea40cf2a509093bf882b87878406523c4073", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d71dea40cf2a509093bf882b87878406523c4073", "html_url": "https://github.com/rust-lang/rust/commit/d71dea40cf2a509093bf882b87878406523c4073", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d71dea40cf2a509093bf882b87878406523c4073/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e21270ba0e26a4807b74433719e5e3e9641bb8cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/e21270ba0e26a4807b74433719e5e3e9641bb8cf", "html_url": "https://github.com/rust-lang/rust/commit/e21270ba0e26a4807b74433719e5e3e9641bb8cf"}, {"sha": "3269070261e8324c2b3074cd491ddf2ac6cf19d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/3269070261e8324c2b3074cd491ddf2ac6cf19d3", "html_url": "https://github.com/rust-lang/rust/commit/3269070261e8324c2b3074cd491ddf2ac6cf19d3"}], "stats": {"total": 98, "additions": 98, "deletions": 0}, "files": [{"sha": "b3adeed77206794f82b81d208766f1fad3601e41", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d71dea40cf2a509093bf882b87878406523c4073/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/d71dea40cf2a509093bf882b87878406523c4073/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=d71dea40cf2a509093bf882b87878406523c4073", "patch": "@@ -1997,6 +1997,7 @@ Released 2018-09-13\n [`inline_asm_x86_att_syntax`]: https://rust-lang.github.io/rust-clippy/master/index.html#inline_asm_x86_att_syntax\n [`inline_asm_x86_intel_syntax`]: https://rust-lang.github.io/rust-clippy/master/index.html#inline_asm_x86_intel_syntax\n [`inline_fn_without_body`]: https://rust-lang.github.io/rust-clippy/master/index.html#inline_fn_without_body\n+[`inspect_for_each`]: https://rust-lang.github.io/rust-clippy/master/index.html#inspect_for_each\n [`int_plus_one`]: https://rust-lang.github.io/rust-clippy/master/index.html#int_plus_one\n [`integer_arithmetic`]: https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic\n [`integer_division`]: https://rust-lang.github.io/rust-clippy/master/index.html#integer_division"}, {"sha": "0b1b347ce4232806d31fa5ec084569ef4ebb5125", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d71dea40cf2a509093bf882b87878406523c4073/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d71dea40cf2a509093bf882b87878406523c4073/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=d71dea40cf2a509093bf882b87878406523c4073", "patch": "@@ -736,6 +736,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &methods::FROM_ITER_INSTEAD_OF_COLLECT,\n         &methods::GET_UNWRAP,\n         &methods::INEFFICIENT_TO_STRING,\n+        &methods::INSPECT_FOR_EACH,\n         &methods::INTO_ITER_ON_REF,\n         &methods::ITERATOR_STEP_BY_ZERO,\n         &methods::ITER_CLONED_COLLECT,\n@@ -1514,6 +1515,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&methods::FILTER_NEXT),\n         LintId::of(&methods::FLAT_MAP_IDENTITY),\n         LintId::of(&methods::FROM_ITER_INSTEAD_OF_COLLECT),\n+        LintId::of(&methods::INSPECT_FOR_EACH),\n         LintId::of(&methods::INTO_ITER_ON_REF),\n         LintId::of(&methods::ITERATOR_STEP_BY_ZERO),\n         LintId::of(&methods::ITER_CLONED_COLLECT),\n@@ -1815,6 +1817,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&methods::CLONE_ON_COPY),\n         LintId::of(&methods::FILTER_NEXT),\n         LintId::of(&methods::FLAT_MAP_IDENTITY),\n+        LintId::of(&methods::INSPECT_FOR_EACH),\n         LintId::of(&methods::OPTION_AS_REF_DEREF),\n         LintId::of(&methods::SEARCH_IS_SOME),\n         LintId::of(&methods::SKIP_WHILE_NEXT),"}, {"sha": "6d41ee38a2767b05a0f6b0adc1cfebbc3f2e3a42", "filename": "clippy_lints/src/methods/inspect_for_each.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d71dea40cf2a509093bf882b87878406523c4073/clippy_lints%2Fsrc%2Fmethods%2Finspect_for_each.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d71dea40cf2a509093bf882b87878406523c4073/clippy_lints%2Fsrc%2Fmethods%2Finspect_for_each.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Finspect_for_each.rs?ref=d71dea40cf2a509093bf882b87878406523c4073", "patch": "@@ -0,0 +1,23 @@\n+use rustc_hir as hir;\n+use rustc_lint::LateContext;\n+use rustc_span::source_map::Span;\n+\n+use crate::utils::{match_trait_method, paths, span_lint_and_help};\n+\n+use super::INSPECT_FOR_EACH;\n+\n+/// lint use of `inspect().for_each()` for `Iterators`\n+pub(super) fn lint<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx hir::Expr<'_>, inspect_span: Span) {\n+    if match_trait_method(cx, expr, &paths::ITERATOR) {\n+        let msg = \"called `inspect(..).for_each(..)` on an `Iterator`\";\n+        let hint = \"move the code from `inspect(..)` to `for_each(..)` and remove the `inspect(..)`\";\n+        span_lint_and_help(\n+            cx,\n+            INSPECT_FOR_EACH,\n+            inspect_span.with_hi(expr.span.hi()),\n+            msg,\n+            None,\n+            hint,\n+        );\n+    }\n+}"}, {"sha": "623554ea2d155cf66d6d41baee10eacaa674a09e", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/d71dea40cf2a509093bf882b87878406523c4073/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d71dea40cf2a509093bf882b87878406523c4073/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=d71dea40cf2a509093bf882b87878406523c4073", "patch": "@@ -1,5 +1,6 @@\n mod bind_instead_of_map;\n mod inefficient_to_string;\n+mod inspect_for_each;\n mod manual_saturating_arithmetic;\n mod option_map_unwrap_or;\n mod unnecessary_filter_map;\n@@ -1405,6 +1406,36 @@ declare_clippy_lint! {\n     \"use `.collect()` instead of `::from_iter()`\"\n }\n \n+declare_clippy_lint! {\n+    /// **What it does:** Checks for usage of `inspect().for_each()`.\n+    ///\n+    /// **Why is this bad?** It is the same as performing the computation\n+    /// inside `inspect` at the beginning of the closure in `for_each`.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    ///\n+    /// ```rust\n+    /// [1,2,3,4,5].iter()\n+    /// .inspect(|&x| println!(\"inspect the number: {}\", x))\n+    /// .for_each(|&x| {\n+    ///     assert!(x >= 0);\n+    /// });\n+    /// ```\n+    /// Can be written as\n+    /// ```rust\n+    /// [1,2,3,4,5].iter()\n+    /// .for_each(|&x| {\n+    ///     println!(\"inspect the number: {}\", x);\n+    ///     assert!(x >= 0);\n+    /// });\n+    /// ```\n+    pub INSPECT_FOR_EACH,\n+    complexity,\n+    \"using `.inspect().for_each()`, which can be replaced with `.for_each()`\"\n+}\n+\n pub struct Methods {\n     msrv: Option<RustcVersion>,\n }\n@@ -1467,6 +1498,7 @@ impl_lint_pass!(Methods => [\n     UNNECESSARY_LAZY_EVALUATIONS,\n     MAP_COLLECT_RESULT_UNIT,\n     FROM_ITER_INSTEAD_OF_COLLECT,\n+    INSPECT_FOR_EACH,\n ]);\n \n impl<'tcx> LateLintPass<'tcx> for Methods {\n@@ -1553,6 +1585,7 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n             [\"get_or_insert_with\", ..] => unnecessary_lazy_eval::lint(cx, expr, arg_lists[0], \"get_or_insert\"),\n             [\"ok_or_else\", ..] => unnecessary_lazy_eval::lint(cx, expr, arg_lists[0], \"ok_or\"),\n             [\"collect\", \"map\"] => lint_map_collect(cx, expr, arg_lists[1], arg_lists[0]),\n+            [\"for_each\", \"inspect\"] => inspect_for_each::lint(cx, expr, method_spans[1]),\n             _ => {},\n         }\n "}, {"sha": "7fe45c83bcacbd971132bca7c979f643d181658a", "filename": "tests/ui/inspect_for_each.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d71dea40cf2a509093bf882b87878406523c4073/tests%2Fui%2Finspect_for_each.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d71dea40cf2a509093bf882b87878406523c4073/tests%2Fui%2Finspect_for_each.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finspect_for_each.rs?ref=d71dea40cf2a509093bf882b87878406523c4073", "patch": "@@ -0,0 +1,22 @@\n+#![warn(clippy::inspect_for_each)]\n+\n+fn main() {\n+    let a: Vec<usize> = vec![1, 2, 3, 4, 5];\n+\n+    let mut b: Vec<usize> = Vec::new();\n+    a.into_iter().inspect(|x| assert!(*x > 0)).for_each(|x| {\n+        let y = do_some(x);\n+        let z = do_more(y);\n+        b.push(z);\n+    });\n+\n+    assert_eq!(b, vec![4, 5, 6, 7, 8]);\n+}\n+\n+fn do_some(a: usize) -> usize {\n+    a + 1\n+}\n+\n+fn do_more(a: usize) -> usize {\n+    a + 2\n+}"}, {"sha": "9f976bb74584ea3526e71e35279284316b58edff", "filename": "tests/ui/inspect_for_each.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d71dea40cf2a509093bf882b87878406523c4073/tests%2Fui%2Finspect_for_each.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d71dea40cf2a509093bf882b87878406523c4073/tests%2Fui%2Finspect_for_each.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finspect_for_each.stderr?ref=d71dea40cf2a509093bf882b87878406523c4073", "patch": "@@ -0,0 +1,16 @@\n+error: called `inspect(..).for_each(..)` on an `Iterator`\n+  --> $DIR/inspect_for_each.rs:7:19\n+   |\n+LL |       a.into_iter().inspect(|x| assert!(*x > 0)).for_each(|x| {\n+   |  ___________________^\n+LL | |         let y = do_some(x);\n+LL | |         let z = do_more(y);\n+LL | |         b.push(z);\n+LL | |     });\n+   | |______^\n+   |\n+   = note: `-D clippy::inspect-for-each` implied by `-D warnings`\n+   = help: move the code from `inspect(..)` to `for_each(..)` and remove the `inspect(..)`\n+\n+error: aborting due to previous error\n+"}]}