{"sha": "44ddbc55655268f04d1130620f3f359aa514a979", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ZGRiYzU1NjU1MjY4ZjA0ZDExMzA2MjBmM2YzNTlhYTUxNGE5Nzk=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-04-20T23:04:10Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-04-21T15:46:32Z"}, "message": "Correct lowering order to avoid ICE after rebase.\n\nThis commit changes the order that arguments and bodies of async\nfunctions are lowered so that when the body attempts to `lower_def` of a\nupvar then the id has already been assigned by lowering the argument\nfirst.", "tree": {"sha": "dd80319ad434069737755d5e1b8d9aa57dda452f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd80319ad434069737755d5e1b8d9aa57dda452f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44ddbc55655268f04d1130620f3f359aa514a979", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAly8kFgACgkQAXYLT59T\n8VSQfhAAoA5MLKEXmZWfwErS7KzBaC0k927Wo3Nqr92bEI4OpA5kPLCudenQwap1\nzYBXVc05Nd4sepLrRoBMbq7dHyEX5AEJTcjrg4fYHBZ6AmAHBjUa6MlqRtulDDMN\nJzGiYqsxnSw8DKHm1wn1KWKbpbQ7NoayINzSB3IKHobUNz7nEyDdEw+EnQkm2+/Z\n8l+bA24tnYCnXoDyXeS4AR9yv9Hkq5KLhRPTitJPYyhPABQAG/6IkEdlCBT1HfMM\nzZSc2wkViBUFBS7L1CJ1x63CAshi2ogZR4g2w3MaLfTda862gcTYWCa9mjDWaXDI\ns1Z9sXhpx/VOz87NEj7FyKJVPcLOql/Dm9Pw4AEBcNOh3UEyVQKNuZaCEuPaL+9q\nNwhSWIipdbodTiUKgr9MwUYQ+rLjr5ZIpHNLsk3A+MPpHwNhMxtEdoUFmD5L0d/9\nThYdM5VBJtixgdRQn1aHRydj0D6rl06utN8XCFxrdpNl1p3kWTiXVOMsSaektPU9\njidkA7Qntb16+Yfe2Q6W0NFetIqQowYSYnvE1sr/I+4Kh6jU6W/zvIUD9ih7TS20\ntLoHyokMTUDXV/3HGMp1AUwQgtbNbuRqjiEO1PIqvFjOlbB6gMd327FZkQaqWZsq\nFyYYy8csxBCR0jl2xOTdwP9gTohgwIn7tNaPbF1AkHTY5aZndUM=\n=phJI\n-----END PGP SIGNATURE-----", "payload": "tree dd80319ad434069737755d5e1b8d9aa57dda452f\nparent 9d7da824d6a691d58d486e22cc789c572e3d0bf0\nauthor David Wood <david@davidtw.co> 1555801450 +0100\ncommitter David Wood <david@davidtw.co> 1555861592 +0100\n\nCorrect lowering order to avoid ICE after rebase.\n\nThis commit changes the order that arguments and bodies of async\nfunctions are lowered so that when the body attempts to `lower_def` of a\nupvar then the id has already been assigned by lowering the argument\nfirst.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44ddbc55655268f04d1130620f3f359aa514a979", "html_url": "https://github.com/rust-lang/rust/commit/44ddbc55655268f04d1130620f3f359aa514a979", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44ddbc55655268f04d1130620f3f359aa514a979/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d7da824d6a691d58d486e22cc789c572e3d0bf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d7da824d6a691d58d486e22cc789c572e3d0bf0", "html_url": "https://github.com/rust-lang/rust/commit/9d7da824d6a691d58d486e22cc789c572e3d0bf0"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "b04e2e29bf2e57c316e77b56b5934169e302fc65", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/44ddbc55655268f04d1130620f3f359aa514a979/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44ddbc55655268f04d1130620f3f359aa514a979/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=44ddbc55655268f04d1130620f3f359aa514a979", "patch": "@@ -809,12 +809,10 @@ impl<'a> LoweringContext<'a> {\n         })\n     }\n \n-    fn record_body(&mut self, value: hir::Expr, decl: Option<&FnDecl>) -> hir::BodyId {\n+    fn record_body(&mut self, value: hir::Expr, arguments: HirVec<hir::Arg>) -> hir::BodyId {\n         let body = hir::Body {\n-            arguments: decl.map_or(hir_vec![], |decl| {\n-                decl.inputs.iter().map(|x| self.lower_arg(x)).collect()\n-            }),\n             is_generator: self.is_generator,\n+            arguments,\n             value,\n         };\n         let id = body.id();\n@@ -1137,11 +1135,10 @@ impl<'a> LoweringContext<'a> {\n         capture_clause: CaptureBy,\n         closure_node_id: NodeId,\n         ret_ty: Option<&Ty>,\n+        span: Span,\n         body: impl FnOnce(&mut LoweringContext<'_>) -> hir::Expr,\n     ) -> hir::ExprKind {\n         let prev_is_generator = mem::replace(&mut self.is_generator, true);\n-        let body_expr = body(self);\n-        let span = body_expr.span;\n         let output = match ret_ty {\n             Some(ty) => FunctionRetTy::Ty(P(ty.clone())),\n             None => FunctionRetTy::Default(span),\n@@ -1151,7 +1148,11 @@ impl<'a> LoweringContext<'a> {\n             output,\n             c_variadic: false\n         };\n-        let body_id = self.record_body(body_expr, Some(&decl));\n+        // Lower the arguments before the body otherwise the body will call `lower_def` expecting\n+        // the argument to have been assigned an id already.\n+        let arguments = self.lower_args(Some(&decl));\n+        let body_expr = body(self);\n+        let body_id = self.record_body(body_expr, arguments);\n         self.is_generator = prev_is_generator;\n \n         let capture_clause = self.lower_capture_clause(capture_clause);\n@@ -1182,8 +1183,9 @@ impl<'a> LoweringContext<'a> {\n         F: FnOnce(&mut LoweringContext<'_>) -> hir::Expr,\n     {\n         let prev = mem::replace(&mut self.is_generator, false);\n+        let arguments = self.lower_args(decl);\n         let result = f(self);\n-        let r = self.record_body(result, decl);\n+        let r = self.record_body(result, arguments);\n         self.is_generator = prev;\n         return r;\n     }\n@@ -2267,6 +2269,10 @@ impl<'a> LoweringContext<'a> {\n         }\n     }\n \n+    fn lower_args(&mut self, decl: Option<&FnDecl>) -> HirVec<hir::Arg> {\n+        decl.map_or(hir_vec![], |decl| decl.inputs.iter().map(|x| self.lower_arg(x)).collect())\n+    }\n+\n     fn lower_arg(&mut self, arg: &Arg) -> hir::Arg {\n         let LoweredNodeId { node_id: _, hir_id } = self.lower_node_id(arg.id);\n         hir::Arg {\n@@ -3045,7 +3051,7 @@ impl<'a> LoweringContext<'a> {\n                 }\n \n                 let async_expr = this.make_async_expr(\n-                    CaptureBy::Value, *closure_id, None,\n+                    CaptureBy::Value, *closure_id, None, body.span,\n                     |this| {\n                         let body = this.lower_block(&body, false);\n                         this.expr_block(body, ThinVec::new())\n@@ -4190,7 +4196,7 @@ impl<'a> LoweringContext<'a> {\n                 hir::MatchSource::Normal,\n             ),\n             ExprKind::Async(capture_clause, closure_node_id, ref block) => {\n-                self.make_async_expr(capture_clause, closure_node_id, None, |this| {\n+                self.make_async_expr(capture_clause, closure_node_id, None, block.span, |this| {\n                     this.with_new_scopes(|this| {\n                         let block = this.lower_block(block, false);\n                         this.expr_block(block, ThinVec::new())\n@@ -4236,7 +4242,7 @@ impl<'a> LoweringContext<'a> {\n                                 Some(&**ty)\n                             } else { None };\n                             let async_body = this.make_async_expr(\n-                                capture_clause, *closure_id, async_ret_ty,\n+                                capture_clause, *closure_id, async_ret_ty, body.span,\n                                 |this| {\n                                     this.with_new_scopes(|this| this.lower_expr(body))\n                                 });"}]}