{"sha": "fc3ab03af74cb94a5ec94d84ec15650314f613eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjM2FiMDNhZjc0Y2I5NGE1ZWM5NGQ4NGVjMTU2NTAzMTRmNjEzZWI=", "commit": {"author": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2019-12-29T16:38:37Z"}, "committer": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2019-12-29T16:38:37Z"}, "message": "Add helpers for unpacking lang items", "tree": {"sha": "116bdc0f05a3362a7a0dc6313299faad19f6ea9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/116bdc0f05a3362a7a0dc6313299faad19f6ea9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc3ab03af74cb94a5ec94d84ec15650314f613eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc3ab03af74cb94a5ec94d84ec15650314f613eb", "html_url": "https://github.com/rust-lang/rust/commit/fc3ab03af74cb94a5ec94d84ec15650314f613eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc3ab03af74cb94a5ec94d84ec15650314f613eb/comments", "author": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "523b4cbc602447b14202dd2520f84241bb07c4e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/523b4cbc602447b14202dd2520f84241bb07c4e2", "html_url": "https://github.com/rust-lang/rust/commit/523b4cbc602447b14202dd2520f84241bb07c4e2"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "37c861a877b1c6c25b825389c12243f53a1e6a28", "filename": "crates/ra_hir_def/src/lang_item.rs", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/fc3ab03af74cb94a5ec94d84ec15650314f613eb/crates%2Fra_hir_def%2Fsrc%2Flang_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc3ab03af74cb94a5ec94d84ec15650314f613eb/crates%2Fra_hir_def%2Fsrc%2Flang_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Flang_item.rs?ref=fc3ab03af74cb94a5ec94d84ec15650314f613eb", "patch": "@@ -22,6 +22,50 @@ pub enum LangItemTarget {\n     TraitId(TraitId),\n }\n \n+impl LangItemTarget {\n+    pub fn as_enum(self) -> Option<EnumId> {\n+        match self {\n+            LangItemTarget::EnumId(id) => Some(id),\n+            _ => None,\n+        }\n+    }\n+\n+    pub fn as_function(self) -> Option<FunctionId> {\n+        match self {\n+            LangItemTarget::FunctionId(id) => Some(id),\n+            _ => None,\n+        }\n+    }\n+\n+    pub fn as_impl_block(self) -> Option<ImplId> {\n+        match self {\n+            LangItemTarget::ImplBlockId(id) => Some(id),\n+            _ => None,\n+        }\n+    }\n+\n+    pub fn as_static(self) -> Option<StaticId> {\n+        match self {\n+            LangItemTarget::StaticId(id) => Some(id),\n+            _ => None,\n+        }\n+    }\n+\n+    pub fn as_struct(self) -> Option<StructId> {\n+        match self {\n+            LangItemTarget::StructId(id) => Some(id),\n+            _ => None,\n+        }\n+    }\n+\n+    pub fn as_trait(self) -> Option<TraitId> {\n+        match self {\n+            LangItemTarget::TraitId(id) => Some(id),\n+            _ => None,\n+        }\n+    }\n+}\n+\n #[derive(Default, Debug, Clone, PartialEq, Eq)]\n pub struct LangItems {\n     items: FxHashMap<SmolStr, LangItemTarget>,"}]}