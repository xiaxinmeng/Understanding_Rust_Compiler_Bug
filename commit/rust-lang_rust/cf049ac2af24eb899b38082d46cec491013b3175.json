{"sha": "cf049ac2af24eb899b38082d46cec491013b3175", "node_id": "C_kwDOAAsO6NoAKGNmMDQ5YWMyYWYyNGViODk5YjM4MDgyZDQ2Y2VjNDkxMDEzYjMxNzU", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-02-25T19:53:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-25T19:53:10Z"}, "message": "Rollup merge of #107911 - blyxyas:issue-107231-fix, r=compiler-errors\n\nAdd check for invalid #[macro_export] arguments\n\nResolves #107231\nSorry if I made something wrong, this is my first contribution to the repo.", "tree": {"sha": "037f12b93d6189801fd704967a75ff2ad3c2c42c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/037f12b93d6189801fd704967a75ff2ad3c2c42c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf049ac2af24eb899b38082d46cec491013b3175", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj+mcmCRBK7hj4Ov3rIwAAXJMIAD1bna/nmVZTdnum5Elta1NI\nllwY9NQBGGSgoRvPRXsG2vNDx2UCgfdZITe/Cc8D7KE6GyAHyKvta6S2Jr69bDpD\n0k8kKMMroGdMVFMH4Pxbm/nr5j0SRYvUI7YToEzQOukcNLc/pLBGep1eNK0cv1Hp\n4uYHoGaAn0JK7JM97uG2OkpDLmrSLD0R80TZaScb83ZLh0Ma8RBjhyJRsp22aLOy\nA0H4F3VUHqgJsnbzvmqgXTETZ8nGOqujxZfQnovbfD1wRQe2G3gp2JeTfiPpq0OW\nSpNzwfycQZcib+pPAMGwmrReloh8oMjvsAfK/WmD1o9OBmomzHxzodDPslFDgis=\n=N93S\n-----END PGP SIGNATURE-----\n", "payload": "tree 037f12b93d6189801fd704967a75ff2ad3c2c42c\nparent 390551716a5f16907e48b21934a66090fd8ef78d\nparent e39fe374df14334be3b5eb081a006fad8e4419f7\nauthor Michael Goulet <michael@errs.io> 1677354790 -0800\ncommitter GitHub <noreply@github.com> 1677354790 -0800\n\nRollup merge of #107911 - blyxyas:issue-107231-fix, r=compiler-errors\n\nAdd check for invalid #[macro_export] arguments\n\nResolves #107231\nSorry if I made something wrong, this is my first contribution to the repo.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf049ac2af24eb899b38082d46cec491013b3175", "html_url": "https://github.com/rust-lang/rust/commit/cf049ac2af24eb899b38082d46cec491013b3175", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf049ac2af24eb899b38082d46cec491013b3175/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "390551716a5f16907e48b21934a66090fd8ef78d", "url": "https://api.github.com/repos/rust-lang/rust/commits/390551716a5f16907e48b21934a66090fd8ef78d", "html_url": "https://github.com/rust-lang/rust/commit/390551716a5f16907e48b21934a66090fd8ef78d"}, {"sha": "e39fe374df14334be3b5eb081a006fad8e4419f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e39fe374df14334be3b5eb081a006fad8e4419f7", "html_url": "https://github.com/rust-lang/rust/commit/e39fe374df14334be3b5eb081a006fad8e4419f7"}], "stats": {"total": 119, "additions": 115, "deletions": 4}, "files": [{"sha": "46ec1a2dca1f7e22437e8eac90a373229454f159", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/cf049ac2af24eb899b38082d46cec491013b3175/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf049ac2af24eb899b38082d46cec491013b3175/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=cf049ac2af24eb899b38082d46cec491013b3175", "patch": "@@ -4103,3 +4103,33 @@ declare_lint! {\n     };\n     report_in_external_macro\n }\n+\n+declare_lint! {\n+    /// The `invalid_macro_export_arguments` lint detects cases where `#[macro_export]` is being used with invalid arguments.\n+    ///\n+    /// ### Example\n+    ///\n+    /// ```rust,compile_fail\n+    /// #![deny(invalid_macro_export_arguments)]\n+    ///\n+    /// #[macro_export(invalid_parameter)]\n+    /// macro_rules! myMacro {\n+    ///    () => {\n+    ///         // [...]\n+    ///    }\n+    /// }\n+    ///\n+    /// #[macro_export(too, many, items)]\n+    /// ```\n+    ///\n+    /// {{produces}}\n+    ///\n+    /// ### Explanation\n+    ///\n+    /// The only valid argument is `#[macro_export(local_inner_macros)]` or no argument (`#[macro_export]`).\n+    /// You can't have multiple arguments in a `#[macro_export(..)]`, or mention arguments other than `local_inner_macros`.\n+    ///\n+    pub INVALID_MACRO_EXPORT_ARGUMENTS,\n+    Warn,\n+    \"\\\"invalid_parameter\\\" isn't a valid argument for `#[macro_export]`\",\n+}"}, {"sha": "0ed29ce0d479578b3b51aea939e2d4e924607386", "filename": "compiler/rustc_passes/locales/en-US.ftl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cf049ac2af24eb899b38082d46cec491013b3175/compiler%2Frustc_passes%2Flocales%2Fen-US.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/cf049ac2af24eb899b38082d46cec491013b3175/compiler%2Frustc_passes%2Flocales%2Fen-US.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Flocales%2Fen-US.ftl?ref=cf049ac2af24eb899b38082d46cec491013b3175", "patch": "@@ -745,3 +745,7 @@ passes_proc_macro_invalid_abi = proc macro functions may not be `extern \"{$abi}\"\n passes_proc_macro_unsafe = proc macro functions may not be `unsafe`\n \n passes_skipping_const_checks = skipping const checks\n+\n+passes_invalid_macro_export_arguments = `{$name}` isn't a valid `#[macro_export]` argument\n+\n+passes_invalid_macro_export_arguments_too_many_items = `#[macro_export]` can only take 1 or 0 arguments"}, {"sha": "5ef3e13eff801ce37c30717788e4906e6e640656", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/cf049ac2af24eb899b38082d46cec491013b3175/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf049ac2af24eb899b38082d46cec491013b3175/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=cf049ac2af24eb899b38082d46cec491013b3175", "patch": "@@ -23,7 +23,8 @@ use rustc_middle::ty::fast_reject::{DeepRejectCtxt, TreatParams};\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{ParamEnv, TyCtxt};\n use rustc_session::lint::builtin::{\n-    CONFLICTING_REPR_HINTS, INVALID_DOC_ATTRIBUTES, UNUSED_ATTRIBUTES,\n+    CONFLICTING_REPR_HINTS, INVALID_DOC_ATTRIBUTES, INVALID_MACRO_EXPORT_ARGUMENTS,\n+    UNUSED_ATTRIBUTES,\n };\n use rustc_session::parse::feature_err;\n use rustc_span::symbol::{kw, sym, Symbol};\n@@ -2102,7 +2103,33 @@ impl CheckAttrVisitor<'_> {\n \n     fn check_macro_export(&self, hir_id: HirId, attr: &Attribute, target: Target) {\n         if target != Target::MacroDef {\n-            self.tcx.emit_spanned_lint(UNUSED_ATTRIBUTES, hir_id, attr.span, errors::MacroExport);\n+            self.tcx.emit_spanned_lint(\n+                UNUSED_ATTRIBUTES,\n+                hir_id,\n+                attr.span,\n+                errors::MacroExport::Normal,\n+            );\n+        } else if let Some(meta_item_list) = attr.meta_item_list() &&\n+        !meta_item_list.is_empty() {\n+            if meta_item_list.len() > 1 {\n+                self.tcx.emit_spanned_lint(\n+                    INVALID_MACRO_EXPORT_ARGUMENTS,\n+                    hir_id,\n+                    attr.span,\n+                    errors::MacroExport::TooManyItems,\n+                );\n+            } else {\n+                if meta_item_list[0].name_or_empty() != sym::local_inner_macros {\n+                    self.tcx.emit_spanned_lint(\n+                        INVALID_MACRO_EXPORT_ARGUMENTS,\n+                        hir_id,\n+                        meta_item_list[0].span(),\n+                        errors::MacroExport::UnknownItem {\n+                            name: meta_item_list[0].name_or_empty(),\n+                        },\n+                    );\n+                }\n+            }\n         }\n     }\n "}, {"sha": "2c0d21b479848c75d7e5186a01afa3667ec33eb8", "filename": "compiler/rustc_passes/src/errors.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cf049ac2af24eb899b38082d46cec491013b3175/compiler%2Frustc_passes%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf049ac2af24eb899b38082d46cec491013b3175/compiler%2Frustc_passes%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Ferrors.rs?ref=cf049ac2af24eb899b38082d46cec491013b3175", "patch": "@@ -641,8 +641,16 @@ pub struct MacroUse {\n }\n \n #[derive(LintDiagnostic)]\n-#[diag(passes_macro_export)]\n-pub struct MacroExport;\n+pub enum MacroExport {\n+    #[diag(passes_macro_export)]\n+    Normal,\n+\n+    #[diag(passes_invalid_macro_export_arguments)]\n+    UnknownItem { name: Symbol },\n+\n+    #[diag(passes_invalid_macro_export_arguments_too_many_items)]\n+    TooManyItems,\n+}\n \n #[derive(LintDiagnostic)]\n #[diag(passes_plugin_registrar)]"}, {"sha": "85d009f11a6f31ddab603b6ce150a5268274c799", "filename": "tests/ui/attributes/invalid_macro_export_argument.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/cf049ac2af24eb899b38082d46cec491013b3175/tests%2Fui%2Fattributes%2Finvalid_macro_export_argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf049ac2af24eb899b38082d46cec491013b3175/tests%2Fui%2Fattributes%2Finvalid_macro_export_argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fattributes%2Finvalid_macro_export_argument.rs?ref=cf049ac2af24eb899b38082d46cec491013b3175", "patch": "@@ -0,0 +1,26 @@\n+// check-pass\n+#[macro_export(hello, world)] //~ WARN `#[macro_export]` can only take 1 or 0 arguments\n+macro_rules! a {\n+    () => ()\n+}\n+\n+#[macro_export(not_local_inner_macros)] //~ WARN `not_local_inner_macros` isn't a valid `#[macro_export]` argument\n+macro_rules! b {\n+    () => ()\n+}\n+\n+#[macro_export]\n+macro_rules! c {\n+    () => ()\n+}\n+#[macro_export(local_inner_macros)]\n+macro_rules! d {\n+    () => ()\n+}\n+\n+#[macro_export()]\n+macro_rules! e {\n+    () => ()\n+}\n+\n+fn main() {}"}, {"sha": "a4e17642c2aac289523128602b3f209935585a81", "filename": "tests/ui/attributes/invalid_macro_export_argument.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cf049ac2af24eb899b38082d46cec491013b3175/tests%2Fui%2Fattributes%2Finvalid_macro_export_argument.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cf049ac2af24eb899b38082d46cec491013b3175/tests%2Fui%2Fattributes%2Finvalid_macro_export_argument.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fattributes%2Finvalid_macro_export_argument.stderr?ref=cf049ac2af24eb899b38082d46cec491013b3175", "patch": "@@ -0,0 +1,16 @@\n+warning: `#[macro_export]` can only take 1 or 0 arguments\n+  --> $DIR/invalid_macro_export_argument.rs:2:1\n+   |\n+LL | #[macro_export(hello, world)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(invalid_macro_export_arguments)]` on by default\n+\n+warning: `not_local_inner_macros` isn't a valid `#[macro_export]` argument\n+  --> $DIR/invalid_macro_export_argument.rs:7:16\n+   |\n+LL | #[macro_export(not_local_inner_macros)]\n+   |                ^^^^^^^^^^^^^^^^^^^^^^\n+\n+warning: 2 warnings emitted\n+"}]}