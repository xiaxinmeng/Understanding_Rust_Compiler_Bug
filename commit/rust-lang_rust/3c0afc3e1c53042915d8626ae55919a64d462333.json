{"sha": "3c0afc3e1c53042915d8626ae55919a64d462333", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMGFmYzNlMWM1MzA0MjkxNWQ4NjI2YWU1NTkxOWE2NGQ0NjIzMzM=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-11-26T23:07:36Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-03-09T18:23:06Z"}, "message": "Remove hir::Variant::attrs.", "tree": {"sha": "a728b58f7c9274ee0ac5c9acb5c97dfb8a3775f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a728b58f7c9274ee0ac5c9acb5c97dfb8a3775f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c0afc3e1c53042915d8626ae55919a64d462333", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c0afc3e1c53042915d8626ae55919a64d462333", "html_url": "https://github.com/rust-lang/rust/commit/3c0afc3e1c53042915d8626ae55919a64d462333", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c0afc3e1c53042915d8626ae55919a64d462333/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0a4611a8166d79a20b3d8db3eed80bb956ced61", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0a4611a8166d79a20b3d8db3eed80bb956ced61", "html_url": "https://github.com/rust-lang/rust/commit/a0a4611a8166d79a20b3d8db3eed80bb956ced61"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "0024822021211f8f5ae7cd9eaa8cfc5ecb76fe5d", "filename": "compiler/rustc_ast_lowering/src/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c0afc3e1c53042915d8626ae55919a64d462333/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c0afc3e1c53042915d8626ae55919a64d462333/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs?ref=3c0afc3e1c53042915d8626ae55919a64d462333", "patch": "@@ -749,9 +749,9 @@ impl<'hir> LoweringContext<'_, 'hir> {\n \n     fn lower_variant(&mut self, v: &Variant) -> hir::Variant<'hir> {\n         let id = self.lower_node_id(v.id);\n+        self.lower_attrs(id, &v.attrs);\n         hir::Variant {\n             id,\n-            attrs: self.lower_attrs(id, &v.attrs),\n             data: self.lower_variant_data(id, &v.data),\n             disr_expr: v.disr_expr.as_ref().map(|e| self.lower_anon_const(e)),\n             ident: v.ident,"}, {"sha": "0b767d413128f71c8797321cd22c40e61ba13934", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c0afc3e1c53042915d8626ae55919a64d462333/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c0afc3e1c53042915d8626ae55919a64d462333/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=3c0afc3e1c53042915d8626ae55919a64d462333", "patch": "@@ -2538,8 +2538,6 @@ pub struct Variant<'hir> {\n     /// Name of the variant.\n     #[stable_hasher(project(name))]\n     pub ident: Ident,\n-    /// Attributes of the variant.\n-    pub attrs: &'hir [Attribute],\n     /// Id of the variant (not the constructor, see `VariantData::ctor_hir_id()`).\n     pub id: HirId,\n     /// Fields and constructor id of the variant."}, {"sha": "19e038df6bba9356828231f3ce5e5361965ca46d", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c0afc3e1c53042915d8626ae55919a64d462333/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c0afc3e1c53042915d8626ae55919a64d462333/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=3c0afc3e1c53042915d8626ae55919a64d462333", "patch": "@@ -834,7 +834,7 @@ impl<'a> State<'a> {\n         for v in variants {\n             self.space_if_not_bol();\n             self.maybe_print_comment(v.span.lo());\n-            self.print_outer_attributes(&v.attrs);\n+            self.print_outer_attributes(self.attrs(v.id));\n             self.ibox(INDENT_UNIT);\n             self.print_variant(v);\n             self.s.word(\",\");"}, {"sha": "db97a69e7fa4057e608ca6c0e346d899e1f60f9e", "filename": "compiler/rustc_save_analysis/src/dump_visitor.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3c0afc3e1c53042915d8626ae55919a64d462333/compiler%2Frustc_save_analysis%2Fsrc%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c0afc3e1c53042915d8626ae55919a64d462333/compiler%2Frustc_save_analysis%2Fsrc%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2Fsrc%2Fdump_visitor.rs?ref=3c0afc3e1c53042915d8626ae55919a64d462333", "patch": "@@ -554,6 +554,7 @@ impl<'tcx> DumpVisitor<'tcx> {\n                         let span = self.span_from_span(name_span);\n                         let id = id_from_hir_id(variant.id, &self.save_ctxt);\n                         let parent = Some(id_from_def_id(item.def_id.to_def_id()));\n+                        let attrs = self.tcx.hir().attrs(variant.id);\n \n                         self.dumper.dump_def(\n                             &access,\n@@ -567,12 +568,9 @@ impl<'tcx> DumpVisitor<'tcx> {\n                                 parent,\n                                 children: vec![],\n                                 decl_id: None,\n-                                docs: self.save_ctxt.docs_for_attrs(&variant.attrs),\n+                                docs: self.save_ctxt.docs_for_attrs(attrs),\n                                 sig: sig::variant_signature(variant, &self.save_ctxt),\n-                                attributes: lower_attributes(\n-                                    variant.attrs.to_vec(),\n-                                    &self.save_ctxt,\n-                                ),\n+                                attributes: lower_attributes(attrs.to_vec(), &self.save_ctxt),\n                             },\n                         );\n                     }\n@@ -594,6 +592,7 @@ impl<'tcx> DumpVisitor<'tcx> {\n                         let span = self.span_from_span(name_span);\n                         let id = id_from_hir_id(variant.id, &self.save_ctxt);\n                         let parent = Some(id_from_def_id(item.def_id.to_def_id()));\n+                        let attrs = self.tcx.hir().attrs(variant.id);\n \n                         self.dumper.dump_def(\n                             &access,\n@@ -607,12 +606,9 @@ impl<'tcx> DumpVisitor<'tcx> {\n                                 parent,\n                                 children: vec![],\n                                 decl_id: None,\n-                                docs: self.save_ctxt.docs_for_attrs(&variant.attrs),\n+                                docs: self.save_ctxt.docs_for_attrs(attrs),\n                                 sig: sig::variant_signature(variant, &self.save_ctxt),\n-                                attributes: lower_attributes(\n-                                    variant.attrs.to_vec(),\n-                                    &self.save_ctxt,\n-                                ),\n+                                attributes: lower_attributes(attrs.to_vec(), &self.save_ctxt),\n                             },\n                         );\n                     }"}, {"sha": "8665a2d71b6dcabf4c24a1416340bba1a237070f", "filename": "src/tools/clippy/clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3c0afc3e1c53042915d8626ae55919a64d462333/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c0afc3e1c53042915d8626ae55919a64d462333/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmissing_doc.rs?ref=3c0afc3e1c53042915d8626ae55919a64d462333", "patch": "@@ -192,6 +192,7 @@ impl<'tcx> LateLintPass<'tcx> for MissingDoc {\n     }\n \n     fn check_variant(&mut self, cx: &LateContext<'tcx>, v: &'tcx hir::Variant<'_>) {\n-        self.check_missing_docs_attrs(cx, &v.attrs, v.span, \"a\", \"variant\");\n+        let attrs = cx.tcx.hir().attrs(v.id);\n+        self.check_missing_docs_attrs(cx, attrs, v.span, \"a\", \"variant\");\n     }\n }"}]}