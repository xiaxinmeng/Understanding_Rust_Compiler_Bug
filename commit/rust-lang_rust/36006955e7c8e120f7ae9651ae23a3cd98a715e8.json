{"sha": "36006955e7c8e120f7ae9651ae23a3cd98a715e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MDA2OTU1ZTdjOGUxMjBmN2FlOTY1MWFlMjNhM2NkOThhNzE1ZTg=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-11-11T11:49:21Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-11-21T20:54:55Z"}, "message": "Simplify pattern", "tree": {"sha": "e7f5faced5dbd4024ea03ccb041ccaea30a915c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7f5faced5dbd4024ea03ccb041ccaea30a915c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36006955e7c8e120f7ae9651ae23a3cd98a715e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36006955e7c8e120f7ae9651ae23a3cd98a715e8", "html_url": "https://github.com/rust-lang/rust/commit/36006955e7c8e120f7ae9651ae23a3cd98a715e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36006955e7c8e120f7ae9651ae23a3cd98a715e8/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae9677c82f592a7d6d25a5e3451f1f9cda55e754", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae9677c82f592a7d6d25a5e3451f1f9cda55e754", "html_url": "https://github.com/rust-lang/rust/commit/ae9677c82f592a7d6d25a5e3451f1f9cda55e754"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "1cc091d96206363b0858aada2bad822e44825d02", "filename": "src/librustc_codegen_ssa/mir/constant.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/36006955e7c8e120f7ae9651ae23a3cd98a715e8/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36006955e7c8e120f7ae9651ae23a3cd98a715e8/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs?ref=36006955e7c8e120f7ae9651ae23a3cd98a715e8", "patch": "@@ -14,8 +14,8 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n         constant: &mir::Constant<'tcx>,\n     ) -> Result<&'tcx ty::Const<'tcx>, ErrorHandled> {\n         match constant.literal.val {\n-            ty::ConstKind::Unevaluated(def_id, ref substs) => {\n-                let substs = self.monomorphize(substs);\n+            ty::ConstKind::Unevaluated(def_id, substs) => {\n+                let substs = self.monomorphize(&substs);\n                 let instance = ty::Instance::resolve(\n                     self.cx.tcx(), ty::ParamEnv::reveal_all(), def_id, substs,\n                 ).unwrap();"}]}