{"sha": "7f41465f6d025445374626c14958f8181a54c639", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmNDE0NjVmNmQwMjU0NDUzNzQ2MjZjMTQ5NThmODE4MWE1NGM2Mzk=", "commit": {"author": {"name": "1000teslas", "email": "47207223+1000teslas@users.noreply.github.com", "date": "2021-01-13T12:37:49Z"}, "committer": {"name": "1000teslas", "email": "47207223+1000teslas@users.noreply.github.com", "date": "2021-01-13T12:37:49Z"}, "message": "Move help link to error index", "tree": {"sha": "ea98bfabbe4ef746e865f153514ae820154a351b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea98bfabbe4ef746e865f153514ae820154a351b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f41465f6d025445374626c14958f8181a54c639", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f41465f6d025445374626c14958f8181a54c639", "html_url": "https://github.com/rust-lang/rust/commit/7f41465f6d025445374626c14958f8181a54c639", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f41465f6d025445374626c14958f8181a54c639/comments", "author": {"login": "1000teslas", "id": 47207223, "node_id": "MDQ6VXNlcjQ3MjA3MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47207223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1000teslas", "html_url": "https://github.com/1000teslas", "followers_url": "https://api.github.com/users/1000teslas/followers", "following_url": "https://api.github.com/users/1000teslas/following{/other_user}", "gists_url": "https://api.github.com/users/1000teslas/gists{/gist_id}", "starred_url": "https://api.github.com/users/1000teslas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1000teslas/subscriptions", "organizations_url": "https://api.github.com/users/1000teslas/orgs", "repos_url": "https://api.github.com/users/1000teslas/repos", "events_url": "https://api.github.com/users/1000teslas/events{/privacy}", "received_events_url": "https://api.github.com/users/1000teslas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "1000teslas", "id": 47207223, "node_id": "MDQ6VXNlcjQ3MjA3MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47207223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1000teslas", "html_url": "https://github.com/1000teslas", "followers_url": "https://api.github.com/users/1000teslas/followers", "following_url": "https://api.github.com/users/1000teslas/following{/other_user}", "gists_url": "https://api.github.com/users/1000teslas/gists{/gist_id}", "starred_url": "https://api.github.com/users/1000teslas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1000teslas/subscriptions", "organizations_url": "https://api.github.com/users/1000teslas/orgs", "repos_url": "https://api.github.com/users/1000teslas/repos", "events_url": "https://api.github.com/users/1000teslas/events{/privacy}", "received_events_url": "https://api.github.com/users/1000teslas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ee3071344334a0ac9defe876d6781d2d9658933", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ee3071344334a0ac9defe876d6781d2d9658933", "html_url": "https://github.com/rust-lang/rust/commit/3ee3071344334a0ac9defe876d6781d2d9658933"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "1dec705260a611a2b953f9c9d5820e6f5b675ea1", "filename": "compiler/rustc_error_codes/src/error_codes/E0373.md", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7f41465f6d025445374626c14958f8181a54c639/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0373.md", "raw_url": "https://github.com/rust-lang/rust/raw/7f41465f6d025445374626c14958f8181a54c639/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0373.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0373.md?ref=7f41465f6d025445374626c14958f8181a54c639", "patch": "@@ -50,3 +50,25 @@ fn foo() -> Box<Fn(u32) -> u32> {\n \n Now that the closure has its own copy of the data, there's no need to worry\n about safety.\n+\n+This error may also be encountered while using `async` blocks:\n+\n+```compile_fail,E0373\n+use std::sync::Arc;\n+use tokio::runtime::Runtime; // 0.3.1\n+\n+async fn f() {\n+    let room_ref = Arc::new(Vec::new());\n+\n+    let gameloop_handle = Runtime::new().unwrap().spawn(async {\n+        game_loop(Arc::clone(&room_ref))\n+    });\n+    gameloop_handle.await;\n+}\n+\n+fn game_loop(v: Arc<Vec<usize>>) {}\n+```\n+\n+Similarly to closures, `async` blocks are not executed immediately and may\n+capture closed-over data by reference. For more information, see \n+https://rust-lang.github.io/async-book/03_async_await/01_chapter.html.\n\\ No newline at end of file"}, {"sha": "fb817d3ca1e7247d28b53bd65b655d54382d2e54", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f41465f6d025445374626c14958f8181a54c639/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f41465f6d025445374626c14958f8181a54c639/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=7f41465f6d025445374626c14958f8181a54c639", "patch": "@@ -1335,11 +1335,9 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                     if matches!(generator_kind, GeneratorKind::Async(_)))\n                 {\n                     err.note(\n-                        \"async blocks are not executed immediately and either must take a \\\n+                        \"async blocks are not executed immediately and must either take a \\\n                     reference or ownership of outside variables they use\",\n                     );\n-                    err.help(\"see https://rust-lang.github.io/async-book/03_async_await/01_chapter.html#awaiting-on-a-multithreaded-executor \\\n-                        for more information\");\n                 } else {\n                     let msg = format!(\"function requires argument type to outlive `{}`\", fr_name);\n                     err.span_note(constraint_span, &msg);"}]}