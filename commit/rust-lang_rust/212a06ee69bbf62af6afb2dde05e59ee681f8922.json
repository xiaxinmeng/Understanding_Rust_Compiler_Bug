{"sha": "212a06ee69bbf62af6afb2dde05e59ee681f8922", "node_id": "C_kwDOAAsO6NoAKDIxMmEwNmVlNjliYmY2MmFmNmFmYjJkZGUwNWU1OWVlNjgxZjg5MjI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-01T17:46:10Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-01T19:39:59Z"}, "message": "Match on TraitItem exhaustively.", "tree": {"sha": "3745f738c04ff99d92a268aa2e3109185ecb51fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3745f738c04ff99d92a268aa2e3109185ecb51fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/212a06ee69bbf62af6afb2dde05e59ee681f8922", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/212a06ee69bbf62af6afb2dde05e59ee681f8922", "html_url": "https://github.com/rust-lang/rust/commit/212a06ee69bbf62af6afb2dde05e59ee681f8922", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/212a06ee69bbf62af6afb2dde05e59ee681f8922/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c5f077157e968b7c561b87f4500e578a5e23fdf", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c5f077157e968b7c561b87f4500e578a5e23fdf", "html_url": "https://github.com/rust-lang/rust/commit/6c5f077157e968b7c561b87f4500e578a5e23fdf"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "e676acebe359889965318cdd326da5fcc8b77fa1", "filename": "compiler/rustc_hir/src/intravisit.rs", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/212a06ee69bbf62af6afb2dde05e59ee681f8922/compiler%2Frustc_hir%2Fsrc%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/212a06ee69bbf62af6afb2dde05e59ee681f8922/compiler%2Frustc_hir%2Fsrc%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fintravisit.rs?ref=212a06ee69bbf62af6afb2dde05e59ee681f8922", "patch": "@@ -946,33 +946,30 @@ pub fn walk_fn<'v, V: Visitor<'v>>(\n }\n \n pub fn walk_trait_item<'v, V: Visitor<'v>>(visitor: &mut V, trait_item: &'v TraitItem<'v>) {\n-    visitor.visit_ident(trait_item.ident);\n-    visitor.visit_generics(&trait_item.generics);\n-    visitor.visit_defaultness(&trait_item.defaultness);\n-    match trait_item.kind {\n+    // N.B., deliberately force a compilation error if/when new fields are added.\n+    let TraitItem { ident, generics, ref defaultness, ref kind, span, def_id: _ } = *trait_item;\n+    let hir_id = trait_item.hir_id();\n+    visitor.visit_ident(ident);\n+    visitor.visit_generics(&generics);\n+    visitor.visit_defaultness(&defaultness);\n+    match *kind {\n         TraitItemKind::Const(ref ty, default) => {\n-            visitor.visit_id(trait_item.hir_id());\n+            visitor.visit_id(hir_id);\n             visitor.visit_ty(ty);\n             walk_list!(visitor, visit_nested_body, default);\n         }\n         TraitItemKind::Fn(ref sig, TraitFn::Required(param_names)) => {\n-            visitor.visit_id(trait_item.hir_id());\n+            visitor.visit_id(hir_id);\n             visitor.visit_fn_decl(&sig.decl);\n             for &param_name in param_names {\n                 visitor.visit_ident(param_name);\n             }\n         }\n         TraitItemKind::Fn(ref sig, TraitFn::Provided(body_id)) => {\n-            visitor.visit_fn(\n-                FnKind::Method(trait_item.ident, sig),\n-                &sig.decl,\n-                body_id,\n-                trait_item.span,\n-                trait_item.hir_id(),\n-            );\n+            visitor.visit_fn(FnKind::Method(ident, sig), &sig.decl, body_id, span, hir_id);\n         }\n         TraitItemKind::Type(bounds, ref default) => {\n-            visitor.visit_id(trait_item.hir_id());\n+            visitor.visit_id(hir_id);\n             walk_list!(visitor, visit_param_bound, bounds);\n             walk_list!(visitor, visit_ty, default);\n         }"}]}