{"sha": "64bf8dfa33f1394fa317f2fa50580fcb13f458f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0YmY4ZGZhMzNmMTM5NGZhMzE3ZjJmYTUwNTgwZmNiMTNmNDU4Zjk=", "commit": {"author": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2021-08-08T14:49:13Z"}, "committer": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2021-08-15T19:18:26Z"}, "message": "Introduce hir::ExprKind::Let - Take 2", "tree": {"sha": "d575fa89ded8c186b0053db2af4ebb91afbda64d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d575fa89ded8c186b0053db2af4ebb91afbda64d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64bf8dfa33f1394fa317f2fa50580fcb13f458f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64bf8dfa33f1394fa317f2fa50580fcb13f458f9", "html_url": "https://github.com/rust-lang/rust/commit/64bf8dfa33f1394fa317f2fa50580fcb13f458f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64bf8dfa33f1394fa317f2fa50580fcb13f458f9/comments", "author": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2323cbc2311d2b907b62d5dc58970756bfb3cbc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2323cbc2311d2b907b62d5dc58970756bfb3cbc0", "html_url": "https://github.com/rust-lang/rust/commit/2323cbc2311d2b907b62d5dc58970756bfb3cbc0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "975af6c02947af48b9308f7d72908e7b79f8402b", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64bf8dfa33f1394fa317f2fa50580fcb13f458f9/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64bf8dfa33f1394fa317f2fa50580fcb13f458f9/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=64bf8dfa33f1394fa317f2fa50580fcb13f458f9", "patch": "@@ -616,7 +616,7 @@ struct ControlFlow<'a> {\n \n fn extract_pats_and_cond(expr: &ast::Expr) -> (Option<&ast::Pat>, &ast::Expr) {\n     match expr.kind {\n-        ast::ExprKind::Let(ref pat, ref cond) => (Some(pat), cond),\n+        ast::ExprKind::Let(ref pat, ref cond, _) => (Some(pat), cond),\n         _ => (None, expr),\n     }\n }"}]}