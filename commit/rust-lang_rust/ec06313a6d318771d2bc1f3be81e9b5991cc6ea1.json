{"sha": "ec06313a6d318771d2bc1f3be81e9b5991cc6ea1", "node_id": "C_kwDOAAsO6NoAKGVjMDYzMTNhNmQzMTg3NzFkMmJjMWYzYmU4MWU5YjU5OTFjYzZlYTE", "commit": {"author": {"name": "Roland Fredenhagen", "email": "dev@modprog.de", "date": "2023-01-16T18:25:30Z"}, "committer": {"name": "Roland Fredenhagen", "email": "dev@modprog.de", "date": "2023-01-16T18:25:30Z"}, "message": "fix test for required_hashes", "tree": {"sha": "1c0eb59557a4329c541ad073046be9385c56bab2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c0eb59557a4329c541ad073046be9385c56bab2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec06313a6d318771d2bc1f3be81e9b5991cc6ea1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEpNSJzq73vBN5KqovCUr5kkEDXrYFAmPFlpoACgkQCUr5kkED\nXrbydA//aa+QkRcKBbeBzInqhN173K3fINd+Zs/C/UErZBWk/pce5LMDIRstyybp\nTXvvVn55YR+q9m8oXjK1JX0fe7WyO/DCmN5lqbaWoja0DIr16atzLsvpkUXhnXvt\n9tUJSzwfxiYWUYqWmq5ByeLQTKsHOM7Wtcw9t7NE5tQjh7/aCAgSoKH3/iU+hWgf\nddGcWCYHzWaXmE3DOy9V4bCVZfkklG2mFEhPPb7lBskxJNvXTO7GqQWeXJUfk2XY\nS8n1E5ExYMFvRmM0JUYLy6gmg9KPdjw4jcjGssavWKeDLzAR1AV3xOXWcNlpieMv\nnT6s412Mw/CX9tHxtVKKQf06AqDWltHSyAhcYBXe0wzH+ovbyd9fWByGUIQhWwrz\nlOBtqfKeTh2D8a7v5JoMrBn4CrZ8wcclE0g31j1GOaTl4da6+yDiBSrUMQAyqKh6\ncxIf8R7ooWoiquzJgfp0nGv2f7hNU/95ZQRMrd0dR6pR+WqaHQC9u3+lUP6S5ucQ\n7Gmod4DkyAUIIiUH0waq4i8YJj6c65N1sfxIcN1Ge9OEYuGpG9ZidyN3VAwZiZZq\nphYa+ug5BB7/oaO25Vv8gqP0ahhN/t4Y0Tcvg4KrdQeR5tRlcLSpOCiCQbyzbhGH\n16x8qffJdXv+fd7iBcqPF/ovAJOIssEEB7wIPy35ffYJ25iOpeI=\n=JNpJ\n-----END PGP SIGNATURE-----", "payload": "tree 1c0eb59557a4329c541ad073046be9385c56bab2\nparent 5e66e49c7307ba538dbc2ae45d64f8eccab05f03\nauthor Roland Fredenhagen <dev@modprog.de> 1673893530 +0100\ncommitter Roland Fredenhagen <dev@modprog.de> 1673893530 +0100\n\nfix test for required_hashes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec06313a6d318771d2bc1f3be81e9b5991cc6ea1", "html_url": "https://github.com/rust-lang/rust/commit/ec06313a6d318771d2bc1f3be81e9b5991cc6ea1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec06313a6d318771d2bc1f3be81e9b5991cc6ea1/comments", "author": {"login": "ModProg", "id": 11978847, "node_id": "MDQ6VXNlcjExOTc4ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/11978847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ModProg", "html_url": "https://github.com/ModProg", "followers_url": "https://api.github.com/users/ModProg/followers", "following_url": "https://api.github.com/users/ModProg/following{/other_user}", "gists_url": "https://api.github.com/users/ModProg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ModProg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ModProg/subscriptions", "organizations_url": "https://api.github.com/users/ModProg/orgs", "repos_url": "https://api.github.com/users/ModProg/repos", "events_url": "https://api.github.com/users/ModProg/events{/privacy}", "received_events_url": "https://api.github.com/users/ModProg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ModProg", "id": 11978847, "node_id": "MDQ6VXNlcjExOTc4ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/11978847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ModProg", "html_url": "https://github.com/ModProg", "followers_url": "https://api.github.com/users/ModProg/followers", "following_url": "https://api.github.com/users/ModProg/following{/other_user}", "gists_url": "https://api.github.com/users/ModProg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ModProg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ModProg/subscriptions", "organizations_url": "https://api.github.com/users/ModProg/orgs", "repos_url": "https://api.github.com/users/ModProg/repos", "events_url": "https://api.github.com/users/ModProg/events{/privacy}", "received_events_url": "https://api.github.com/users/ModProg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e66e49c7307ba538dbc2ae45d64f8eccab05f03", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e66e49c7307ba538dbc2ae45d64f8eccab05f03", "html_url": "https://github.com/rust-lang/rust/commit/5e66e49c7307ba538dbc2ae45d64f8eccab05f03"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "63f467bd3086059cf1e3748c174eb13fa647e6f8", "filename": "crates/ide-assists/src/utils.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ec06313a6d318771d2bc1f3be81e9b5991cc6ea1/crates%2Fide-assists%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec06313a6d318771d2bc1f3be81e9b5991cc6ea1/crates%2Fide-assists%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Futils.rs?ref=ec06313a6d318771d2bc1f3be81e9b5991cc6ea1", "patch": "@@ -761,17 +761,6 @@ pub(crate) fn convert_param_list_to_arg_list(list: ast::ParamList) -> ast::ArgLi\n \n /// Calculate the number of hashes required for a raw string containing `s`\n pub(crate) fn required_hashes(s: &str) -> usize {\n-    #[test]\n-    fn test_required_hashes() {\n-        assert_eq!(0, required_hashes(\"abc\"));\n-        assert_eq!(0, required_hashes(\"###\"));\n-        assert_eq!(1, required_hashes(\"\\\"\"));\n-        assert_eq!(2, required_hashes(\"\\\"#abc\"));\n-        assert_eq!(0, required_hashes(\"#abc\"));\n-        assert_eq!(3, required_hashes(\"#ab\\\"##c\"));\n-        assert_eq!(5, required_hashes(\"#ab\\\"##\\\"####c\"));\n-    }\n-\n     let mut res = 0usize;\n     for idx in s.match_indices('\"').map(|(i, _)| i) {\n         let (_, sub) = s.split_at(idx + 1);\n@@ -780,3 +769,13 @@ pub(crate) fn required_hashes(s: &str) -> usize {\n     }\n     res\n }\n+#[test]\n+fn test_required_hashes() {\n+    assert_eq!(0, required_hashes(\"abc\"));\n+    assert_eq!(0, required_hashes(\"###\"));\n+    assert_eq!(1, required_hashes(\"\\\"\"));\n+    assert_eq!(2, required_hashes(\"\\\"#abc\"));\n+    assert_eq!(0, required_hashes(\"#abc\"));\n+    assert_eq!(3, required_hashes(\"#ab\\\"##c\"));\n+    assert_eq!(5, required_hashes(\"#ab\\\"##\\\"####c\"));\n+}"}]}