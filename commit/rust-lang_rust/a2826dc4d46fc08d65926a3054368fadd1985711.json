{"sha": "a2826dc4d46fc08d65926a3054368fadd1985711", "node_id": "C_kwDOAAsO6NoAKGEyODI2ZGM0ZDQ2ZmMwOGQ2NTkyNmEzMDU0MzY4ZmFkZDE5ODU3MTE", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-04-20T08:03:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-20T08:03:26Z"}, "message": "Rollup merge of #110575 - Ezrashaw:fix-regression-110573, r=compiler-errors\n\nfix lint regression in `non_upper_case_globals`\n\nFixes #110573\n\nThe issue also exists for inherent associated types (where I copied my impl from). `EarlyContext` is more involved to fix in this way, so I'll leave it be for now (note it's unstable so that's not urgent).\n\nr? `@compiler-errors`", "tree": {"sha": "dceeb066e222acc72ee1f74427fb6c1fed91a409", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dceeb066e222acc72ee1f74427fb6c1fed91a409"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2826dc4d46fc08d65926a3054368fadd1985711", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkQPHOCRBK7hj4Ov3rIwAA0TgIAGBp8t0iNCZdIckbZI8KXzF/\nvFQ3WXo+VRoGkHyxoHgoRMu7FmkJttIyLACpbOAhtCoNVmeKvONeNf3zZrcN37Ve\nZqfR+x9POW2O7dsvrueTxGbAkWyCdymcZi6qn+nSMZJJWgZmn2Ei2wteT55KJRvr\n4Kwv6bWtakJGvu9Q2zIiT6EYi38C1mWewHzPXSQo7fmVg4VnkD7XfG4BWuNFOpTC\nImQocJ60+yPc3jIvGHcNv/D5VM79zzPUzaJbhNAZN0HIuQsbdPAAeg3PnETSjfUv\n35Nqhpclwf7H2j5vQPl5HNOxoxnPH4SXp+iqLs05m7Gne+pJtCDrB7eU3AoL6uI=\n=wyD5\n-----END PGP SIGNATURE-----\n", "payload": "tree dceeb066e222acc72ee1f74427fb6c1fed91a409\nparent a496ae6ac343d7eb700e92986ce2ec9f4e5e6f76\nparent 8cad917e689f19f7ea2f9a6d2e5a95c7ee6c77d4\nauthor Yuki Okushi <jtitor@2k36.org> 1681977806 +0900\ncommitter GitHub <noreply@github.com> 1681977806 +0900\n\nRollup merge of #110575 - Ezrashaw:fix-regression-110573, r=compiler-errors\n\nfix lint regression in `non_upper_case_globals`\n\nFixes #110573\n\nThe issue also exists for inherent associated types (where I copied my impl from). `EarlyContext` is more involved to fix in this way, so I'll leave it be for now (note it's unstable so that's not urgent).\n\nr? `@compiler-errors`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2826dc4d46fc08d65926a3054368fadd1985711", "html_url": "https://github.com/rust-lang/rust/commit/a2826dc4d46fc08d65926a3054368fadd1985711", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2826dc4d46fc08d65926a3054368fadd1985711/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a496ae6ac343d7eb700e92986ce2ec9f4e5e6f76", "url": "https://api.github.com/repos/rust-lang/rust/commits/a496ae6ac343d7eb700e92986ce2ec9f4e5e6f76", "html_url": "https://github.com/rust-lang/rust/commit/a496ae6ac343d7eb700e92986ce2ec9f4e5e6f76"}, {"sha": "8cad917e689f19f7ea2f9a6d2e5a95c7ee6c77d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cad917e689f19f7ea2f9a6d2e5a95c7ee6c77d4", "html_url": "https://github.com/rust-lang/rust/commit/8cad917e689f19f7ea2f9a6d2e5a95c7ee6c77d4"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "79253cbc8b43cc451561f1f2ee4a2f8e0285270f", "filename": "compiler/rustc_lint/src/nonstandard_style.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a2826dc4d46fc08d65926a3054368fadd1985711/compiler%2Frustc_lint%2Fsrc%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2826dc4d46fc08d65926a3054368fadd1985711/compiler%2Frustc_lint%2Fsrc%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnonstandard_style.rs?ref=a2826dc4d46fc08d65926a3054368fadd1985711", "patch": "@@ -33,6 +33,11 @@ pub fn method_context(cx: &LateContext<'_>, id: LocalDefId) -> MethodLateContext\n     }\n }\n \n+fn assoc_item_in_trait_impl(cx: &LateContext<'_>, ii: &hir::ImplItem<'_>) -> bool {\n+    let item = cx.tcx.associated_item(ii.owner_id);\n+    item.trait_item_def_id.is_some()\n+}\n+\n declare_lint! {\n     /// The `non_camel_case_types` lint detects types, variants, traits and\n     /// type parameters that don't have camel case names.\n@@ -177,6 +182,7 @@ impl EarlyLintPass for NonCamelCaseTypes {\n             // trait impls where we should have warned for the trait definition already.\n             ast::ItemKind::Impl(box ast::Impl { of_trait: None, items, .. }) => {\n                 for it in items {\n+                    // FIXME: this doesn't respect `#[allow(..)]` on the item itself.\n                     if let ast::AssocItemKind::Type(..) = it.kind {\n                         self.check_case(cx, \"associated type\", &it.ident);\n                     }\n@@ -494,15 +500,6 @@ impl<'tcx> LateLintPass<'tcx> for NonUpperCaseGlobals {\n             hir::ItemKind::Const(..) => {\n                 NonUpperCaseGlobals::check_upper_case(cx, \"constant\", &it.ident);\n             }\n-            // we only want to check inherent associated consts, trait consts\n-            // are linted at def-site.\n-            hir::ItemKind::Impl(hir::Impl { of_trait: None, items, .. }) => {\n-                for it in *items {\n-                    if let hir::AssocItemKind::Const = it.kind {\n-                        NonUpperCaseGlobals::check_upper_case(cx, \"associated constant\", &it.ident);\n-                    }\n-                }\n-            }\n             _ => {}\n         }\n     }\n@@ -513,6 +510,12 @@ impl<'tcx> LateLintPass<'tcx> for NonUpperCaseGlobals {\n         }\n     }\n \n+    fn check_impl_item(&mut self, cx: &LateContext<'_>, ii: &hir::ImplItem<'_>) {\n+        if let hir::ImplItemKind::Const(..) = ii.kind && !assoc_item_in_trait_impl(cx, ii) {\n+            NonUpperCaseGlobals::check_upper_case(cx, \"associated constant\", &ii.ident);\n+        }\n+    }\n+\n     fn check_pat(&mut self, cx: &LateContext<'_>, p: &hir::Pat<'_>) {\n         // Lint for constants that look like binding identifiers (#7526)\n         if let PatKind::Path(hir::QPath::Resolved(None, ref path)) = p.kind {"}, {"sha": "d9f0868b7659dd279ab20e239832faac3ae61747", "filename": "tests/ui/lint/issue-110573.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a2826dc4d46fc08d65926a3054368fadd1985711/tests%2Fui%2Flint%2Fissue-110573.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2826dc4d46fc08d65926a3054368fadd1985711/tests%2Fui%2Flint%2Fissue-110573.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Fissue-110573.rs?ref=a2826dc4d46fc08d65926a3054368fadd1985711", "patch": "@@ -0,0 +1,12 @@\n+// check-pass\n+\n+#![deny(warnings)]\n+\n+pub struct Struct;\n+\n+impl Struct {\n+    #[allow(non_upper_case_globals)]\n+    pub const Const: () = ();\n+}\n+\n+fn main() {}"}]}