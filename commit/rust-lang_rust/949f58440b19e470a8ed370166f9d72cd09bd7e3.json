{"sha": "949f58440b19e470a8ed370166f9d72cd09bd7e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0OWY1ODQ0MGIxOWU0NzBhOGVkMzcwMTY2ZjlkNzJjZDA5YmQ3ZTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-08T14:01:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-08T14:01:20Z"}, "message": "Auto merge of #3929 - KarboniteKream:single-char-pattern, r=oli-obk\n\nEscape a single quote in single_char_pattern hint\n\nThis PR correctly escapes single quotes in the hint for `single_char_pattern`.\nFor instance, the hint for `x.split(\"'\")` was `'''`, while it should be `'\\''`.", "tree": {"sha": "c29fe6e7682f9b6104148028df52d305c31da568", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c29fe6e7682f9b6104148028df52d305c31da568"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/949f58440b19e470a8ed370166f9d72cd09bd7e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/949f58440b19e470a8ed370166f9d72cd09bd7e3", "html_url": "https://github.com/rust-lang/rust/commit/949f58440b19e470a8ed370166f9d72cd09bd7e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/949f58440b19e470a8ed370166f9d72cd09bd7e3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fdd113bedb41a74482e050df5884b1a913707f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fdd113bedb41a74482e050df5884b1a913707f3", "html_url": "https://github.com/rust-lang/rust/commit/4fdd113bedb41a74482e050df5884b1a913707f3"}, {"sha": "560fd163d636420a36dac5eb582340a3cc338892", "url": "https://api.github.com/repos/rust-lang/rust/commits/560fd163d636420a36dac5eb582340a3cc338892", "html_url": "https://github.com/rust-lang/rust/commit/560fd163d636420a36dac5eb582340a3cc338892"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "bccabe1a61d83102fa5f8af254fee7a7cf388e69", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/949f58440b19e470a8ed370166f9d72cd09bd7e3/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/949f58440b19e470a8ed370166f9d72cd09bd7e3/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=949f58440b19e470a8ed370166f9d72cd09bd7e3", "patch": "@@ -2143,7 +2143,8 @@ fn lint_single_char_pattern<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, _expr: &'tcx h\n         then {\n             let mut applicability = Applicability::MachineApplicable;\n             let snip = snippet_with_applicability(cx, arg.span, \"..\", &mut applicability);\n-            let hint = format!(\"'{}'\", &snip[1..snip.len() - 1]);\n+            let c = &snip[1..snip.len() - 1];\n+            let hint = format!(\"'{}'\", if c == \"'\" { \"\\\\'\" } else { c });\n             span_lint_and_sugg(\n                 cx,\n                 SINGLE_CHAR_PATTERN,"}, {"sha": "d5b6d81d0a5db9c64ed5c8e1915e73be3edda878", "filename": "tests/ui/single_char_pattern.fixed", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/949f58440b19e470a8ed370166f9d72cd09bd7e3/tests%2Fui%2Fsingle_char_pattern.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/949f58440b19e470a8ed370166f9d72cd09bd7e3/tests%2Fui%2Fsingle_char_pattern.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.fixed?ref=949f58440b19e470a8ed370166f9d72cd09bd7e3", "patch": "@@ -41,6 +41,8 @@ fn main() {\n     x.trim_end_matches('x');\n     // Make sure we escape characters correctly.\n     x.split('\\n');\n+    x.split('\\'');\n+    x.split('\\'');\n \n     let h = HashSet::<String>::new();\n     h.contains(\"X\"); // should not warn"}, {"sha": "73f364854d0202f7c4afbc8889f848e895e71e1a", "filename": "tests/ui/single_char_pattern.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/949f58440b19e470a8ed370166f9d72cd09bd7e3/tests%2Fui%2Fsingle_char_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/949f58440b19e470a8ed370166f9d72cd09bd7e3/tests%2Fui%2Fsingle_char_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.rs?ref=949f58440b19e470a8ed370166f9d72cd09bd7e3", "patch": "@@ -41,6 +41,8 @@ fn main() {\n     x.trim_end_matches(\"x\");\n     // Make sure we escape characters correctly.\n     x.split(\"\\n\");\n+    x.split(\"'\");\n+    x.split(\"\\'\");\n \n     let h = HashSet::<String>::new();\n     h.contains(\"X\"); // should not warn"}, {"sha": "d394c989c44c00575174dbcac026da0709370bc8", "filename": "tests/ui/single_char_pattern.stderr", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/949f58440b19e470a8ed370166f9d72cd09bd7e3/tests%2Fui%2Fsingle_char_pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/949f58440b19e470a8ed370166f9d72cd09bd7e3/tests%2Fui%2Fsingle_char_pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.stderr?ref=949f58440b19e470a8ed370166f9d72cd09bd7e3", "patch": "@@ -109,16 +109,28 @@ LL |     x.split(\"/n\");\n    |             ^^^^ help: try using a char instead: `'/n'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:48:31\n+  --> $DIR/single_char_pattern.rs:44:13\n+   |\n+LL |     x.split(\"'\");\n+   |             ^^^ help: try using a char instead: `'/''`\n+\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:45:13\n+   |\n+LL |     x.split(\"/'\");\n+   |             ^^^^ help: try using a char instead: `'/''`\n+\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:50:31\n    |\n LL |     x.replace(\";\", \",\").split(\",\"); // issue #2978\n    |                               ^^^ help: try using a char instead: `','`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:49:19\n+  --> $DIR/single_char_pattern.rs:51:19\n    |\n LL |     x.starts_with(\"/x03\"); // issue #2996\n    |                   ^^^^^^ help: try using a char instead: `'/x03'`\n \n-error: aborting due to 20 previous errors\n+error: aborting due to 22 previous errors\n "}]}