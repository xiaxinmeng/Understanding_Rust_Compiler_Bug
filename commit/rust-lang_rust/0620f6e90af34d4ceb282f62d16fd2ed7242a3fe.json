{"sha": "0620f6e90af34d4ceb282f62d16fd2ed7242a3fe", "node_id": "C_kwDOAAsO6NoAKDA2MjBmNmU5MGFmMzRkNGNlYjI4MmY2MmQxNmZkMmVkNzI0MmEzZmU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-31T19:30:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-31T19:30:16Z"}, "message": "Rollup merge of #101230 - davidtwco:translation-internal-lint-no-self-lint, r=fee1-dead\n\nlint: avoid linting diag functions with diag lints\n\nFunctions annotated with `#[rustc_lint_diagnostics]` are used by the diagnostic migration lints to know when to lint, but functions that are annotated with this attribute shouldn't themselves be linted.\n\ncc #100717 https://github.com/rust-lang/rust/pull/101041#discussion_r959303706", "tree": {"sha": "57363529d31fbaace32e3d9c7da17b52f9b042bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57363529d31fbaace32e3d9c7da17b52f9b042bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0620f6e90af34d4ceb282f62d16fd2ed7242a3fe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjD7bICRBK7hj4Ov3rIwAATjYIACCTLk++xfpmsTyj2rf91Mt0\nzKLI6Gk5xEJW9fukL8b4Os4V0JWyYlcPrR1dM2Vj2geUUf9gGcYspMo8Lduh5Y5U\nZOCGNovUTHR4EQziI7lALGquRKT+GJcva0+/Fw+TL9qIw8JojDRsK5l1V2qGSIG+\nxj7Rzo/zOyciHhX1fn27EHpuVmrvb8Qrtv9lcojHM5dEJxDbp+ednkFYqU+CM6zb\nMkuy2tvC1sPF7mhLi1Q/D9MfayixfFBqMWOxtZnVbN4dxM+Yoe3cbGDpKroT/6+h\nrif41+oKk7COJb+MRNPK4NVBS+afTyAPh1nRDbHW0xEcLT2c2+VFgr9uJ9mWOz4=\n=VIUr\n-----END PGP SIGNATURE-----\n", "payload": "tree 57363529d31fbaace32e3d9c7da17b52f9b042bf\nparent c30c42ee299202a0620e753f793ccf240b2e4308\nparent 11fc7852fe7304b84a3bb642a0ab2d60611df1e0\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1661974216 +0200\ncommitter GitHub <noreply@github.com> 1661974216 +0200\n\nRollup merge of #101230 - davidtwco:translation-internal-lint-no-self-lint, r=fee1-dead\n\nlint: avoid linting diag functions with diag lints\n\nFunctions annotated with `#[rustc_lint_diagnostics]` are used by the diagnostic migration lints to know when to lint, but functions that are annotated with this attribute shouldn't themselves be linted.\n\ncc #100717 https://github.com/rust-lang/rust/pull/101041#discussion_r959303706\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0620f6e90af34d4ceb282f62d16fd2ed7242a3fe", "html_url": "https://github.com/rust-lang/rust/commit/0620f6e90af34d4ceb282f62d16fd2ed7242a3fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0620f6e90af34d4ceb282f62d16fd2ed7242a3fe/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c30c42ee299202a0620e753f793ccf240b2e4308", "url": "https://api.github.com/repos/rust-lang/rust/commits/c30c42ee299202a0620e753f793ccf240b2e4308", "html_url": "https://github.com/rust-lang/rust/commit/c30c42ee299202a0620e753f793ccf240b2e4308"}, {"sha": "11fc7852fe7304b84a3bb642a0ab2d60611df1e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/11fc7852fe7304b84a3bb642a0ab2d60611df1e0", "html_url": "https://github.com/rust-lang/rust/commit/11fc7852fe7304b84a3bb642a0ab2d60611df1e0"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "6d451f3090acb22c499aad8bd51c2eaab2eaa542", "filename": "compiler/rustc_lint/src/internal.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0620f6e90af34d4ceb282f62d16fd2ed7242a3fe/compiler%2Frustc_lint%2Fsrc%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0620f6e90af34d4ceb282f62d16fd2ed7242a3fe/compiler%2Frustc_lint%2Fsrc%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Finternal.rs?ref=0620f6e90af34d4ceb282f62d16fd2ed7242a3fe", "patch": "@@ -393,8 +393,14 @@ impl LateLintPass<'_> for Diagnostics {\n             return;\n         }\n \n+        let mut found_parent_with_attr = false;\n         let mut found_impl = false;\n-        for (_, parent) in cx.tcx.hir().parent_iter(expr.hir_id) {\n+        for (hir_id, parent) in cx.tcx.hir().parent_iter(expr.hir_id) {\n+            if let Some(owner_did) = hir_id.as_owner() {\n+                found_parent_with_attr = found_parent_with_attr\n+                    || cx.tcx.has_attr(owner_did.to_def_id(), sym::rustc_lint_diagnostics);\n+            }\n+\n             debug!(?parent);\n             if let Node::Item(Item { kind: ItemKind::Impl(impl_), .. }) = parent &&\n                 let Impl { of_trait: Some(of_trait), .. } = impl_ &&\n@@ -407,7 +413,7 @@ impl LateLintPass<'_> for Diagnostics {\n             }\n         }\n         debug!(?found_impl);\n-        if !found_impl {\n+        if !found_parent_with_attr && !found_impl {\n             cx.struct_span_lint(DIAGNOSTIC_OUTSIDE_OF_IMPL, span, |lint| {\n                 lint.build(fluent::lint::diag_out_of_impl).emit();\n             })\n@@ -425,7 +431,7 @@ impl LateLintPass<'_> for Diagnostics {\n             }\n         }\n         debug!(?found_diagnostic_message);\n-        if !found_diagnostic_message {\n+        if !found_parent_with_attr && !found_diagnostic_message {\n             cx.struct_span_lint(UNTRANSLATABLE_DIAGNOSTIC, span, |lint| {\n                 lint.build(fluent::lint::untranslatable_diag).emit();\n             })"}, {"sha": "0e449256153a2224949094a65297991e4b39938d", "filename": "src/test/ui-fulldeps/internal-lints/diagnostics.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0620f6e90af34d4ceb282f62d16fd2ed7242a3fe/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0620f6e90af34d4ceb282f62d16fd2ed7242a3fe/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.rs?ref=0620f6e90af34d4ceb282f62d16fd2ed7242a3fe", "patch": "@@ -1,6 +1,7 @@\n // compile-flags: -Z unstable-options\n \n #![crate_type = \"lib\"]\n+#![feature(rustc_attrs)]\n #![feature(rustc_private)]\n #![deny(rustc::untranslatable_diagnostic)]\n #![deny(rustc::diagnostic_outside_of_impl)]\n@@ -71,3 +72,10 @@ pub fn make_diagnostics<'a>(sess: &'a ParseSess) {\n     //~^ ERROR diagnostics should only be created in `SessionDiagnostic`/`AddSubdiagnostic` impls\n     //~^^ ERROR diagnostics should be created using translatable messages\n }\n+\n+// Check that `rustc_lint_diagnostics`-annotated functions aren't themselves linted.\n+\n+#[rustc_lint_diagnostics]\n+pub fn skipped_because_of_annotation<'a>(sess: &'a ParseSess) {\n+    let _diag = sess.struct_err(\"untranslatable diagnostic\"); // okay!\n+}"}, {"sha": "ed5105dabcd3ff8d686257031a5d6106df10d4b5", "filename": "src/test/ui-fulldeps/internal-lints/diagnostics.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0620f6e90af34d4ceb282f62d16fd2ed7242a3fe/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0620f6e90af34d4ceb282f62d16fd2ed7242a3fe/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.stderr?ref=0620f6e90af34d4ceb282f62d16fd2ed7242a3fe", "patch": "@@ -1,41 +1,41 @@\n error: diagnostics should be created using translatable messages\n-  --> $DIR/diagnostics.rs:36:14\n+  --> $DIR/diagnostics.rs:37:14\n    |\n LL |         sess.struct_err(\"untranslatable diagnostic\")\n    |              ^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/diagnostics.rs:5:9\n+  --> $DIR/diagnostics.rs:6:9\n    |\n LL | #![deny(rustc::untranslatable_diagnostic)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostics should be created using translatable messages\n-  --> $DIR/diagnostics.rs:53:14\n+  --> $DIR/diagnostics.rs:54:14\n    |\n LL |         diag.note(\"untranslatable diagnostic\");\n    |              ^^^^\n \n error: diagnostics should only be created in `SessionDiagnostic`/`AddSubdiagnostic` impls\n-  --> $DIR/diagnostics.rs:67:22\n+  --> $DIR/diagnostics.rs:68:22\n    |\n LL |     let _diag = sess.struct_err(fluent::parser::expect_path);\n    |                      ^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/diagnostics.rs:6:9\n+  --> $DIR/diagnostics.rs:7:9\n    |\n LL | #![deny(rustc::diagnostic_outside_of_impl)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostics should only be created in `SessionDiagnostic`/`AddSubdiagnostic` impls\n-  --> $DIR/diagnostics.rs:70:22\n+  --> $DIR/diagnostics.rs:71:22\n    |\n LL |     let _diag = sess.struct_err(\"untranslatable diagnostic\");\n    |                      ^^^^^^^^^^\n \n error: diagnostics should be created using translatable messages\n-  --> $DIR/diagnostics.rs:70:22\n+  --> $DIR/diagnostics.rs:71:22\n    |\n LL |     let _diag = sess.struct_err(\"untranslatable diagnostic\");\n    |                      ^^^^^^^^^^"}]}