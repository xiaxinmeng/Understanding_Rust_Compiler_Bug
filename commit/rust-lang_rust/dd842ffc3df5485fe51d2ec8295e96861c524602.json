{"sha": "dd842ffc3df5485fe51d2ec8295e96861c524602", "node_id": "C_kwDOAAsO6NoAKGRkODQyZmZjM2RmNTQ4NWZlNTFkMmVjODI5NWU5Njg2MWM1MjQ2MDI", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-07-24T20:17:18Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-09T13:05:53Z"}, "message": "`for_loop_over_fallibles`: remove duplication from the message", "tree": {"sha": "1ea0b82aa05b930a871d1c477a8c3f2ce6c20ef8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ea0b82aa05b930a871d1c477a8c3f2ce6c20ef8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd842ffc3df5485fe51d2ec8295e96861c524602", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd842ffc3df5485fe51d2ec8295e96861c524602", "html_url": "https://github.com/rust-lang/rust/commit/dd842ffc3df5485fe51d2ec8295e96861c524602", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd842ffc3df5485fe51d2ec8295e96861c524602/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2975ee9742d90a2a005005add4405a8f7156466", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2975ee9742d90a2a005005add4405a8f7156466", "html_url": "https://github.com/rust-lang/rust/commit/b2975ee9742d90a2a005005add4405a8f7156466"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "69d8fd84b64d5552a358ad99dac7b89b17225afc", "filename": "compiler/rustc_lint/src/for_loop_over_fallibles.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dd842ffc3df5485fe51d2ec8295e96861c524602/compiler%2Frustc_lint%2Fsrc%2Ffor_loop_over_fallibles.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd842ffc3df5485fe51d2ec8295e96861c524602/compiler%2Frustc_lint%2Fsrc%2Ffor_loop_over_fallibles.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ffor_loop_over_fallibles.rs?ref=dd842ffc3df5485fe51d2ec8295e96861c524602", "patch": "@@ -69,10 +69,8 @@ impl<'tcx> LateLintPass<'tcx> for ForLoopOverFallibles {\n             _ => return,\n         };\n \n-        let Ok(arg_snip) = cx.sess().source_map().span_to_snippet(arg.span) else { return };\n-\n         let msg = format!(\n-            \"for loop over `{arg_snip}`, which is {article} `{ty}`. This is more readably written as an `if let` statement\",\n+            \"for loop over {article} `{ty}`. This is more readably written as an `if let` statement\",\n         );\n \n         cx.struct_span_lint(FOR_LOOP_OVER_FALLIBLES, arg.span, |diag| {"}]}