{"sha": "5d1796a608d387be784f17c28ec7c81f178a81eb", "node_id": "C_kwDOAAsO6NoAKDVkMTc5NmE2MDhkMzg3YmU3ODRmMTdjMjhlYzdjODFmMTc4YTgxZWI", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-04-28T01:55:38Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-05-01T08:37:00Z"}, "message": "soften the wording for removing type ascription", "tree": {"sha": "5a5aaafdd30a1c51393aa9d3215b048269089a81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a5aaafdd30a1c51393aa9d3215b048269089a81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d1796a608d387be784f17c28ec7c81f178a81eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d1796a608d387be784f17c28ec7c81f178a81eb", "html_url": "https://github.com/rust-lang/rust/commit/5d1796a608d387be784f17c28ec7c81f178a81eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d1796a608d387be784f17c28ec7c81f178a81eb/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fe1ff2137f75ff5fafd45c04558c5f8ce9a00ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fe1ff2137f75ff5fafd45c04558c5f8ce9a00ee", "html_url": "https://github.com/rust-lang/rust/commit/0fe1ff2137f75ff5fafd45c04558c5f8ce9a00ee"}], "stats": {"total": 39, "additions": 16, "deletions": 23}, "files": [{"sha": "0ea8454db0893667246414d25882c5747b55fc58", "filename": "compiler/rustc_builtin_macros/src/asm.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5d1796a608d387be784f17c28ec7c81f178a81eb/compiler%2Frustc_builtin_macros%2Fsrc%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d1796a608d387be784f17c28ec7c81f178a81eb/compiler%2Frustc_builtin_macros%2Fsrc%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fasm.rs?ref=5d1796a608d387be784f17c28ec7c81f178a81eb", "patch": "@@ -68,8 +68,7 @@ pub fn parse_asm_args<'a>(\n         if !p.eat(&token::Comma) {\n             if allow_templates {\n                 // After a template string, we always expect *only* a comma...\n-                let mut err = diag.create_err(errors::AsmExpectedComma { span: p.token.span });\n-                return Err(err);\n+                return Err(diag.create_err(errors::AsmExpectedComma { span: p.token.span }));\n             } else {\n                 // ...after that delegate to `expect` to also include the other expected tokens.\n                 return Err(p.expect(&token::Comma).err().unwrap());"}, {"sha": "9a5232b1bcdd9eb903cc66f218c751251cedd06b", "filename": "compiler/rustc_parse/messages.ftl", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5d1796a608d387be784f17c28ec7c81f178a81eb/compiler%2Frustc_parse%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/5d1796a608d387be784f17c28ec7c81f178a81eb/compiler%2Frustc_parse%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fmessages.ftl?ref=5d1796a608d387be784f17c28ec7c81f178a81eb", "patch": "@@ -426,7 +426,8 @@ parse_path_single_colon = path separator must be a double colon\n parse_colon_as_semi = statements are terminated with a semicolon\n     .suggestion = use a semicolon instead\n \n-parse_type_ascription_removed = type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n+parse_type_ascription_removed =\n+    if you meant to annotate an expression with a type, the type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n \n parse_where_clause_before_tuple_struct_body = where clauses are not allowed before tuple struct bodies\n     .label = unexpected where clause"}, {"sha": "638a432cea5f1700bfaab6728706001a4bbb4fa8", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5d1796a608d387be784f17c28ec7c81f178a81eb/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d1796a608d387be784f17c28ec7c81f178a81eb/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=5d1796a608d387be784f17c28ec7c81f178a81eb", "patch": "@@ -1569,14 +1569,9 @@ impl<'a> Parser<'a> {\n     }\n \n     pub(super) fn expect_semi(&mut self) -> PResult<'a, ()> {\n-        if self.eat(&token::Semi) {\n+        if self.eat(&token::Semi) || self.recover_colon_as_semi() {\n             return Ok(());\n         }\n-\n-        if self.recover_colon_as_semi() {\n-            return Ok(());\n-        }\n-\n         self.expect(&token::Semi).map(drop) // Error unconditionally\n     }\n \n@@ -1597,9 +1592,7 @@ impl<'a> Parser<'a> {\n                 span: self.token.span,\n                 type_ascription: self.sess.unstable_features.is_nightly_build().then_some(()),\n             });\n-\n             self.bump();\n-\n             return true;\n         }\n "}, {"sha": "b9a2b141bce38ad7b9326acb5b19d37a789d6617", "filename": "compiler/rustc_parse/src/parser/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d1796a608d387be784f17c28ec7c81f178a81eb/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d1796a608d387be784f17c28ec7c81f178a81eb/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs?ref=5d1796a608d387be784f17c28ec7c81f178a81eb", "patch": "@@ -9,7 +9,7 @@ use rustc_ast::{\n     AssocConstraintKind, BlockCheckMode, GenericArg, GenericArgs, Generics, ParenthesizedArgs,\n     Path, PathSegment, QSelf,\n };\n-use rustc_errors::{pluralize, Applicability, IntoDiagnostic, PResult};\n+use rustc_errors::{Applicability, IntoDiagnostic, PResult};\n use rustc_span::source_map::{BytePos, Span};\n use rustc_span::symbol::{kw, sym, Ident};\n use std::mem;"}, {"sha": "0a571013d44daf1652dc4731a3ea1e52c1fca90b", "filename": "compiler/rustc_parse/src/parser/stmt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5d1796a608d387be784f17c28ec7c81f178a81eb/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d1796a608d387be784f17c28ec7c81f178a81eb/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs?ref=5d1796a608d387be784f17c28ec7c81f178a81eb", "patch": "@@ -645,7 +645,7 @@ impl<'a> Parser<'a> {\n \n                             if self.recover_colon_as_semi() {\n                                 // recover_colon_as_semi has already emitted a nicer error.\n-                                e.cancel();\n+                                e.delay_as_bug();\n                                 add_semi_to_stmt = true;\n                                 eat_semi = false;\n \n@@ -672,7 +672,7 @@ impl<'a> Parser<'a> {\n                                         };\n                                         match self.parse_expr_labeled(label, false) {\n                                             Ok(labeled_expr) => {\n-                                                e.cancel();\n+                                                e.delay_as_bug();\n                                                 self.sess.emit_err(MalformedLoopLabel {\n                                                     span: label.ident.span,\n                                                     correct_label: label.ident,"}, {"sha": "96f07e190c1e27321650c92ca57841006026d5bc", "filename": "tests/ui/generics/single-colon-path-not-const-generics.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Fgenerics%2Fsingle-colon-path-not-const-generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Fgenerics%2Fsingle-colon-path-not-const-generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerics%2Fsingle-colon-path-not-const-generics.stderr?ref=5d1796a608d387be784f17c28ec7c81f178a81eb", "patch": "@@ -6,7 +6,7 @@ LL | pub struct Foo {\n LL |   a: Vec<foo::bar:A>,\n    |                  ^ help: use a double colon instead: `::`\n    |\n-   = note: type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n+   = note: if you meant to annotate an expression with a type, the type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n \n error: aborting due to previous error\n "}, {"sha": "b3799101cf0a58ae24705f623dab4be8ce92f75d", "filename": "tests/ui/suggestions/type-ascription-instead-of-method.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-method.stderr?ref=5d1796a608d387be784f17c28ec7c81f178a81eb", "patch": "@@ -4,7 +4,7 @@ error: path separator must be a double colon\n LL |     let _ = Box:new(\"foo\".to_string());\n    |                ^ help: use a double colon instead: `::`\n    |\n-   = note: type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n+   = note: if you meant to annotate an expression with a type, the type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n \n error: aborting due to previous error\n "}, {"sha": "849630218daedb68311c05e1d458f341493a6bed", "filename": "tests/ui/suggestions/type-ascription-instead-of-path.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-path.stderr?ref=5d1796a608d387be784f17c28ec7c81f178a81eb", "patch": "@@ -4,7 +4,7 @@ error: path separator must be a double colon\n LL |     std:io::stdin();\n    |        ^ help: use a double colon instead: `::`\n    |\n-   = note: type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n+   = note: if you meant to annotate an expression with a type, the type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n \n error: aborting due to previous error\n "}, {"sha": "11d0f5f527e21e6fa7f56c84e0e242c1e6a82ac1", "filename": "tests/ui/suggestions/type-ascription-instead-of-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-variant.stderr?ref=5d1796a608d387be784f17c28ec7c81f178a81eb", "patch": "@@ -4,7 +4,7 @@ error: path separator must be a double colon\n LL |     let _ = Option:Some(\"\");\n    |                   ^ help: use a double colon instead: `::`\n    |\n-   = note: type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n+   = note: if you meant to annotate an expression with a type, the type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n \n error: aborting due to previous error\n "}, {"sha": "74d85a75c85c691f1ed86714725277597b515b96", "filename": "tests/ui/type/ascription/issue-47666.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Ftype%2Fascription%2Fissue-47666.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Ftype%2Fascription%2Fissue-47666.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype%2Fascription%2Fissue-47666.stderr?ref=5d1796a608d387be784f17c28ec7c81f178a81eb", "patch": "@@ -4,7 +4,7 @@ error: path separator must be a double colon\n LL |     let _ = Option:Some(vec![0, 1]);\n    |                   ^ help: use a double colon instead: `::`\n    |\n-   = note: type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n+   = note: if you meant to annotate an expression with a type, the type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n \n error: aborting due to previous error\n "}, {"sha": "a1371432f5ad6823870bae350164c0ebfdcaa681", "filename": "tests/ui/type/ascription/issue-54516.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Ftype%2Fascription%2Fissue-54516.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Ftype%2Fascription%2Fissue-54516.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype%2Fascription%2Fissue-54516.stderr?ref=5d1796a608d387be784f17c28ec7c81f178a81eb", "patch": "@@ -4,7 +4,7 @@ error: path separator must be a double colon\n LL |     println!(\"{}\", std::mem:size_of::<BTreeMap<u32, u32>>());\n    |                            ^ help: use a double colon instead: `::`\n    |\n-   = note: type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n+   = note: if you meant to annotate an expression with a type, the type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n \n error: aborting due to previous error\n "}, {"sha": "0ec527ff5a9583f8efd0cc6256e085b040d63f7e", "filename": "tests/ui/type/ascription/issue-60933.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Ftype%2Fascription%2Fissue-60933.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Ftype%2Fascription%2Fissue-60933.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype%2Fascription%2Fissue-60933.stderr?ref=5d1796a608d387be784f17c28ec7c81f178a81eb", "patch": "@@ -4,7 +4,7 @@ error: path separator must be a double colon\n LL |     let _: usize = std::mem:size_of::<u32>();\n    |                            ^ help: use a double colon instead: `::`\n    |\n-   = note: type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n+   = note: if you meant to annotate an expression with a type, the type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n \n error: aborting due to previous error\n "}, {"sha": "8c09e78bc5fbc97ca85178a93dca1d01db21ac96", "filename": "tests/ui/type/type-ascription-instead-of-statement-end.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Ftype%2Ftype-ascription-instead-of-statement-end.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Ftype%2Ftype-ascription-instead-of-statement-end.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype%2Ftype-ascription-instead-of-statement-end.stderr?ref=5d1796a608d387be784f17c28ec7c81f178a81eb", "patch": "@@ -4,7 +4,7 @@ error: statements are terminated with a semicolon\n LL |     println!(\"test\"):\n    |                     ^ help: use a semicolon instead: `;`\n    |\n-   = note: type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n+   = note: if you meant to annotate an expression with a type, the type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n \n error: expected one of `.`, `;`, `?`, `}`, or an operator, found `:`\n   --> $DIR/type-ascription-instead-of-statement-end.rs:7:21"}, {"sha": "e3afa497ac20155d55a58d412ebb90c774d2414e", "filename": "tests/ui/type/type-ascription-with-fn-call.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Ftype%2Ftype-ascription-with-fn-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d1796a608d387be784f17c28ec7c81f178a81eb/tests%2Fui%2Ftype%2Ftype-ascription-with-fn-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype%2Ftype-ascription-with-fn-call.stderr?ref=5d1796a608d387be784f17c28ec7c81f178a81eb", "patch": "@@ -4,7 +4,7 @@ error: statements are terminated with a semicolon\n LL |     f()  :\n    |          ^ help: use a semicolon instead: `;`\n    |\n-   = note: type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n+   = note: if you meant to annotate an expression with a type, the type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n \n error: aborting due to previous error\n "}]}