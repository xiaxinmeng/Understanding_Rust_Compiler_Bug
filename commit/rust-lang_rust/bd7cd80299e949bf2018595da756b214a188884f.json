{"sha": "bd7cd80299e949bf2018595da756b214a188884f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkN2NkODAyOTllOTQ5YmYyMDE4NTk1ZGE3NTZiMjE0YTE4ODg4NGY=", "commit": {"author": {"name": "AnthonyMikh", "email": "anthony.mikh@yandex.ru", "date": "2019-10-02T01:13:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-02T01:13:02Z"}, "message": "Fully clear `HandlerInner` in `Handler::reset_err_count`", "tree": {"sha": "6adf4bc70f12035325231d6c0b6d6802815d8bd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6adf4bc70f12035325231d6c0b6d6802815d8bd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd7cd80299e949bf2018595da756b214a188884f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdk/meCRBK7hj4Ov3rIwAAdHIIAEcN7HTrhqz7EHxOe1apJMq7\nG7h4qMKR0iscD4Me5JI0Ok7Rc42d3BhcoEQ/DIHibeqS8XJE+TpE+jQ9V6l+tdf4\nu7zJIrCzhB5ACkvYoi/00dIcAyzkoi2o9Sul8kt409GChrA+/gzBSvm+8bc+a9sX\nRJR4TKzTldEPIecaFQcs7Ygikv7XbCzhHYDSrXF6J2CC3uuh3grAXNATJfkzpGQs\nIq6r4CgB7v6ciWJ8ZnmBtWultFImozejDqSF4LccBpAthtp6FMWz3dUtM3rijBol\nYqbwrHYV+Ifpmq76EvJY1OLw7YAD2YhkqOZQZtm6IaY3XNEUD0BmcLEbK/dZ0WY=\n=R7UT\n-----END PGP SIGNATURE-----\n", "payload": "tree 6adf4bc70f12035325231d6c0b6d6802815d8bd4\nparent 702b45e409495a41afcccbe87a251a692b0cefab\nauthor AnthonyMikh <anthony.mikh@yandex.ru> 1569978782 +0300\ncommitter GitHub <noreply@github.com> 1569978782 +0300\n\nFully clear `HandlerInner` in `Handler::reset_err_count`"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd7cd80299e949bf2018595da756b214a188884f", "html_url": "https://github.com/rust-lang/rust/commit/bd7cd80299e949bf2018595da756b214a188884f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd7cd80299e949bf2018595da756b214a188884f/comments", "author": {"login": "AnthonyMikh", "id": 19252795, "node_id": "MDQ6VXNlcjE5MjUyNzk1", "avatar_url": "https://avatars.githubusercontent.com/u/19252795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnthonyMikh", "html_url": "https://github.com/AnthonyMikh", "followers_url": "https://api.github.com/users/AnthonyMikh/followers", "following_url": "https://api.github.com/users/AnthonyMikh/following{/other_user}", "gists_url": "https://api.github.com/users/AnthonyMikh/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnthonyMikh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnthonyMikh/subscriptions", "organizations_url": "https://api.github.com/users/AnthonyMikh/orgs", "repos_url": "https://api.github.com/users/AnthonyMikh/repos", "events_url": "https://api.github.com/users/AnthonyMikh/events{/privacy}", "received_events_url": "https://api.github.com/users/AnthonyMikh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "702b45e409495a41afcccbe87a251a692b0cefab", "url": "https://api.github.com/repos/rust-lang/rust/commits/702b45e409495a41afcccbe87a251a692b0cefab", "html_url": "https://github.com/rust-lang/rust/commit/702b45e409495a41afcccbe87a251a692b0cefab"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "f9dc13ce97eea79c6fed0db0a275736922038518", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bd7cd80299e949bf2018595da756b214a188884f/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd7cd80299e949bf2018595da756b214a188884f/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=bd7cd80299e949bf2018595da756b214a188884f", "patch": "@@ -469,14 +469,17 @@ impl Handler {\n     /// NOTE: *do not* call this function from rustc. It is only meant to be called from external\n     /// tools that want to reuse a `Parser` cleaning the previously emitted diagnostics as well as\n     /// the overall count of emitted error diagnostics.\n-    // FIXME: this does not clear inner entirely\n     pub fn reset_err_count(&self) {\n         let mut inner = self.inner.borrow_mut();\n-        // actually frees the underlying memory (which `clear` would not do)\n-        inner.emitted_diagnostics = Default::default();\n-        inner.deduplicated_err_count = 0;\n         inner.err_count = 0;\n-        inner.stashed_diagnostics.clear();\n+        inner.deduplicated_err_count = 0;\n+\n+        // actually free the underlying memory (which `clear` would not do)\n+        inner.delayed_span_bugs = Default::default();\n+        inner.taught_diagnostics = Default::default();\n+        inner.emitted_diagnostic_codes = Default::default();\n+        inner.emitted_diagnostics = Default::default();\n+        inner.stashed_diagnostics = Default::default();\n     }\n \n     /// Stash a given diagnostic with the given `Span` and `StashKey` as the key for later stealing."}]}