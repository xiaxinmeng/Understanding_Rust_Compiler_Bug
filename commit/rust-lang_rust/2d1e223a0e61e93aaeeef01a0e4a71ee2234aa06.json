{"sha": "2d1e223a0e61e93aaeeef01a0e4a71ee2234aa06", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkMWUyMjNhMGU2MWU5M2FhZWVlZjAxYTBlNGE3MWVlMjIzNGFhMDY=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-06-20T07:55:21Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-06-20T10:47:26Z"}, "message": "remove uses of the NodeId hir::map::expr", "tree": {"sha": "8a8d9237cd1285a30758ef7cfe26ab84b887fddf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a8d9237cd1285a30758ef7cfe26ab84b887fddf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d1e223a0e61e93aaeeef01a0e4a71ee2234aa06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d1e223a0e61e93aaeeef01a0e4a71ee2234aa06", "html_url": "https://github.com/rust-lang/rust/commit/2d1e223a0e61e93aaeeef01a0e4a71ee2234aa06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d1e223a0e61e93aaeeef01a0e4a71ee2234aa06/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21e63dddbeca3ab15cf365f9bd8dbb8a188c1d9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/21e63dddbeca3ab15cf365f9bd8dbb8a188c1d9b", "html_url": "https://github.com/rust-lang/rust/commit/21e63dddbeca3ab15cf365f9bd8dbb8a188c1d9b"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "10a85cc833a1e34703f7721dc5e32e58f13f7272", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2d1e223a0e61e93aaeeef01a0e4a71ee2234aa06/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d1e223a0e61e93aaeeef01a0e4a71ee2234aa06/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=2d1e223a0e61e93aaeeef01a0e4a71ee2234aa06", "patch": "@@ -927,12 +927,6 @@ impl<'hir> Map<'hir> {\n         }\n     }\n \n-    pub fn expect_expr(&self, id: NodeId) -> &'hir Expr {\n-        let hir_id = self.node_to_hir_id(id);\n-        self.expect_expr_by_hir_id(hir_id)\n-    }\n-\n-    // FIXME(@ljedrz): replace the `NodeId` variant.\n     pub fn expect_expr_by_hir_id(&self, id: HirId) -> &'hir Expr {\n         match self.find_by_hir_id(id) { // read recorded by find\n             Some(Node::Expr(expr)) => expr,"}, {"sha": "fa7e000106f612aa6467b3bebff7265f637b4ed8", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2d1e223a0e61e93aaeeef01a0e4a71ee2234aa06/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d1e223a0e61e93aaeeef01a0e4a71ee2234aa06/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=2d1e223a0e61e93aaeeef01a0e4a71ee2234aa06", "patch": "@@ -1531,7 +1531,8 @@ impl<'l, 'tcx, 'll, O: DumpOutput + 'll> Visitor<'l> for DumpVisitor<'l, 'tcx, '\n         self.process_macro_use(ex.span);\n         match ex.node {\n             ast::ExprKind::Struct(ref path, ref fields, ref base) => {\n-                let hir_expr = self.save_ctxt.tcx.hir().expect_expr(ex.id);\n+                let expr_hir_id = self.save_ctxt.tcx.hir().node_to_hir_id(ex.id);\n+                let hir_expr = self.save_ctxt.tcx.hir().expect_expr_by_hir_id(expr_hir_id);\n                 let adt = match self.save_ctxt.tables.expr_ty_opt(&hir_expr) {\n                     Some(ty) if ty.ty_adt_def().is_some() => ty.ty_adt_def().unwrap(),\n                     _ => {"}, {"sha": "3b0d0622baefd2b17ea04409898da5217fd3813e", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2d1e223a0e61e93aaeeef01a0e4a71ee2234aa06/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d1e223a0e61e93aaeeef01a0e4a71ee2234aa06/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=2d1e223a0e61e93aaeeef01a0e4a71ee2234aa06", "patch": "@@ -513,7 +513,8 @@ impl<'l, 'tcx> SaveContext<'l, 'tcx> {\n     }\n \n     pub fn get_expr_data(&self, expr: &ast::Expr) -> Option<Data> {\n-        let hir_node = self.tcx.hir().expect_expr(expr.id);\n+        let expr_hir_id = self.tcx.hir().node_to_hir_id(expr.id);\n+        let hir_node = self.tcx.hir().expect_expr_by_hir_id(expr_hir_id);\n         let ty = self.tables.expr_ty_adjusted_opt(&hir_node);\n         if ty.is_none() || ty.unwrap().sty == ty::Error {\n             return None;"}]}