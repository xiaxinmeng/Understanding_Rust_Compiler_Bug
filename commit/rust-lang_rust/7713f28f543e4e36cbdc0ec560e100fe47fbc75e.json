{"sha": "7713f28f543e4e36cbdc0ec560e100fe47fbc75e", "node_id": "C_kwDOAAsO6NoAKDc3MTNmMjhmNTQzZTRlMzZjYmRjMGVjNTYwZTEwMGZlNDdmYmM3NWU", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2022-06-04T12:04:35Z"}, "committer": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2022-06-04T12:04:35Z"}, "message": "Remove unnecessary clap_derive dependency added in 9ee211af\n\nThe fixed issue in this commit can be tested without depending on\nclap/clap_derive. This updates the test case to do so.", "tree": {"sha": "fb40683f82793d8a012ca52c26f4793a96903dda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb40683f82793d8a012ca52c26f4793a96903dda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7713f28f543e4e36cbdc0ec560e100fe47fbc75e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7713f28f543e4e36cbdc0ec560e100fe47fbc75e", "html_url": "https://github.com/rust-lang/rust/commit/7713f28f543e4e36cbdc0ec560e100fe47fbc75e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7713f28f543e4e36cbdc0ec560e100fe47fbc75e/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f067783461aff336e1273c9948d620d4009aedc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f067783461aff336e1273c9948d620d4009aedc4", "html_url": "https://github.com/rust-lang/rust/commit/f067783461aff336e1273c9948d620d4009aedc4"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "3c8b758d53dca74843349e28b8460495d2f4c105", "filename": "Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7713f28f543e4e36cbdc0ec560e100fe47fbc75e/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7713f28f543e4e36cbdc0ec560e100fe47fbc75e/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=7713f28f543e4e36cbdc0ec560e100fe47fbc75e", "patch": "@@ -40,7 +40,6 @@ filetime = \"0.2\"\n rustc-workspace-hack = \"1.0\"\n \n # UI test dependencies\n-clap = { version = \"3.1\", features = [\"derive\"] }\n clippy_utils = { path = \"clippy_utils\" }\n derive-new = \"0.5\"\n if_chain = \"1.0\""}, {"sha": "04c2eeff08b6f0b32ec0dd2b666ee84d31de7140", "filename": "tests/compile-test.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7713f28f543e4e36cbdc0ec560e100fe47fbc75e/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7713f28f543e4e36cbdc0ec560e100fe47fbc75e/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=7713f28f543e4e36cbdc0ec560e100fe47fbc75e", "patch": "@@ -23,7 +23,6 @@ const RUN_INTERNAL_TESTS: bool = cfg!(feature = \"internal\");\n \n /// All crates used in UI tests are listed here\n static TEST_DEPENDENCIES: &[&str] = &[\n-    \"clap\",\n     \"clippy_utils\",\n     \"derive_new\",\n     \"futures\",\n@@ -42,8 +41,6 @@ static TEST_DEPENDENCIES: &[&str] = &[\n // Test dependencies may need an `extern crate` here to ensure that they show up\n // in the depinfo file (otherwise cargo thinks they are unused)\n #[allow(unused_extern_crates)]\n-extern crate clap;\n-#[allow(unused_extern_crates)]\n extern crate clippy_utils;\n #[allow(unused_extern_crates)]\n extern crate derive_new;"}, {"sha": "ae2cc2492f414e8c9c033f38f920e188dc171785", "filename": "tests/ui/auxiliary/proc_macro_attr.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7713f28f543e4e36cbdc0ec560e100fe47fbc75e/tests%2Fui%2Fauxiliary%2Fproc_macro_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7713f28f543e4e36cbdc0ec560e100fe47fbc75e/tests%2Fui%2Fauxiliary%2Fproc_macro_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fproc_macro_attr.rs?ref=7713f28f543e4e36cbdc0ec560e100fe47fbc75e", "patch": "@@ -19,6 +19,11 @@ use syn::{\n     parse_quote, FnArg, ImplItem, ItemImpl, ItemTrait, Lifetime, Pat, PatIdent, PatType, Signature, TraitItem, Type,\n };\n \n+#[proc_macro_attribute]\n+pub fn dummy(_args: TokenStream, input: TokenStream) -> TokenStream {\n+    input\n+}\n+\n #[proc_macro_attribute]\n pub fn fake_async_trait(_args: TokenStream, input: TokenStream) -> TokenStream {\n     let mut item = parse_macro_input!(input as ItemTrait);"}, {"sha": "697412c00275e5178db7bcac8656e81eab5ae179", "filename": "tests/ui/empty_line_after_outer_attribute.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7713f28f543e4e36cbdc0ec560e100fe47fbc75e/tests%2Fui%2Fempty_line_after_outer_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7713f28f543e4e36cbdc0ec560e100fe47fbc75e/tests%2Fui%2Fempty_line_after_outer_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_line_after_outer_attribute.rs?ref=7713f28f543e4e36cbdc0ec560e100fe47fbc75e", "patch": "@@ -4,9 +4,6 @@\n #![feature(custom_inner_attributes)]\n #![rustfmt::skip]\n \n-#[macro_use]\n-extern crate clap;\n-\n #[macro_use]\n extern crate proc_macro_attr;\n \n@@ -113,10 +110,10 @@ pub trait Bazz {\n     }\n }\n \n-#[derive(clap::Parser)]\n-#[clap(after_help = \"This ia a help message.\n+#[derive(Clone, Copy)]\n+#[dummy(string = \"first line\n \n-You're welcome.\n+second line\n \")]\n pub struct Args;\n "}, {"sha": "594fca44a321071ac46cdc9ad5bcac5676f69218", "filename": "tests/ui/empty_line_after_outer_attribute.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7713f28f543e4e36cbdc0ec560e100fe47fbc75e/tests%2Fui%2Fempty_line_after_outer_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7713f28f543e4e36cbdc0ec560e100fe47fbc75e/tests%2Fui%2Fempty_line_after_outer_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_line_after_outer_attribute.stderr?ref=7713f28f543e4e36cbdc0ec560e100fe47fbc75e", "patch": "@@ -1,5 +1,5 @@\n error: found an empty line after an outer attribute. Perhaps you forgot to add a `!` to make it an inner attribute?\n-  --> $DIR/empty_line_after_outer_attribute.rs:14:1\n+  --> $DIR/empty_line_after_outer_attribute.rs:11:1\n    |\n LL | / #[crate_type = \"lib\"]\n LL | |\n@@ -10,15 +10,15 @@ LL | | fn with_one_newline_and_comment() { assert!(true) }\n    = note: `-D clippy::empty-line-after-outer-attr` implied by `-D warnings`\n \n error: found an empty line after an outer attribute. Perhaps you forgot to add a `!` to make it an inner attribute?\n-  --> $DIR/empty_line_after_outer_attribute.rs:26:1\n+  --> $DIR/empty_line_after_outer_attribute.rs:23:1\n    |\n LL | / #[crate_type = \"lib\"]\n LL | |\n LL | | fn with_one_newline() { assert!(true) }\n    | |_\n \n error: found an empty line after an outer attribute. Perhaps you forgot to add a `!` to make it an inner attribute?\n-  --> $DIR/empty_line_after_outer_attribute.rs:31:1\n+  --> $DIR/empty_line_after_outer_attribute.rs:28:1\n    |\n LL | / #[crate_type = \"lib\"]\n LL | |\n@@ -27,23 +27,23 @@ LL | | fn with_two_newlines() { assert!(true) }\n    | |_\n \n error: found an empty line after an outer attribute. Perhaps you forgot to add a `!` to make it an inner attribute?\n-  --> $DIR/empty_line_after_outer_attribute.rs:38:1\n+  --> $DIR/empty_line_after_outer_attribute.rs:35:1\n    |\n LL | / #[crate_type = \"lib\"]\n LL | |\n LL | | enum Baz {\n    | |_\n \n error: found an empty line after an outer attribute. Perhaps you forgot to add a `!` to make it an inner attribute?\n-  --> $DIR/empty_line_after_outer_attribute.rs:46:1\n+  --> $DIR/empty_line_after_outer_attribute.rs:43:1\n    |\n LL | / #[crate_type = \"lib\"]\n LL | |\n LL | | struct Foo {\n    | |_\n \n error: found an empty line after an outer attribute. Perhaps you forgot to add a `!` to make it an inner attribute?\n-  --> $DIR/empty_line_after_outer_attribute.rs:54:1\n+  --> $DIR/empty_line_after_outer_attribute.rs:51:1\n    |\n LL | / #[crate_type = \"lib\"]\n LL | |"}]}