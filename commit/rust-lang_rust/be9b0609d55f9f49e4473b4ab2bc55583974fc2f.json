{"sha": "be9b0609d55f9f49e4473b4ab2bc55583974fc2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlOWIwNjA5ZDU1ZjlmNDllNDQ3M2I0YWIyYmM1NTU4Mzk3NGZjMmY=", "commit": {"author": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-05-14T10:22:52Z"}, "committer": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-05-14T10:22:52Z"}, "message": "Runnable quick pick with buttons", "tree": {"sha": "1ef7855194a7ab9a9579a61d1a2bf853c8c10569", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ef7855194a7ab9a9579a61d1a2bf853c8c10569"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be9b0609d55f9f49e4473b4ab2bc55583974fc2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be9b0609d55f9f49e4473b4ab2bc55583974fc2f", "html_url": "https://github.com/rust-lang/rust/commit/be9b0609d55f9f49e4473b4ab2bc55583974fc2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be9b0609d55f9f49e4473b4ab2bc55583974fc2f/comments", "author": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ffc26eaebb1f9491477e99d5187b048bd489cd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ffc26eaebb1f9491477e99d5187b048bd489cd6", "html_url": "https://github.com/rust-lang/rust/commit/3ffc26eaebb1f9491477e99d5187b048bd489cd6"}], "stats": {"total": 82, "additions": 61, "deletions": 21}, "files": [{"sha": "b1d93fc34ebdfb750934ba764a9be2b8b1e1e4cd", "filename": "editors/code/src/commands/runnables.ts", "status": "modified", "additions": 61, "deletions": 21, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/be9b0609d55f9f49e4473b4ab2bc55583974fc2f/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "raw_url": "https://github.com/rust-lang/rust/raw/be9b0609d55f9f49e4473b4ab2bc55583974fc2f/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts?ref=be9b0609d55f9f49e4473b4ab2bc55583974fc2f", "patch": "@@ -5,7 +5,9 @@ import * as ra from '../rust-analyzer-api';\n import { Ctx, Cmd } from '../ctx';\n import { startDebugSession, getDebugConfiguration } from '../debug';\n \n-async function selectRunnable(ctx: Ctx, prevRunnable: RunnableQuickPick | undefined): Promise<RunnableQuickPick | undefined> {\n+const quickPickButtons = [{ iconPath: new vscode.ThemeIcon(\"save\"), tooltip: \"Save as a launch.json configurtation.\" }];\n+\n+async function selectRunnable(ctx: Ctx, prevRunnable?: RunnableQuickPick, showButtons: boolean = true): Promise<RunnableQuickPick | undefined> {\n     const editor = ctx.activeRustEditor;\n     const client = ctx.client;\n     if (!editor || !client) return;\n@@ -33,7 +35,41 @@ async function selectRunnable(ctx: Ctx, prevRunnable: RunnableQuickPick | undefi\n         }\n         items.push(new RunnableQuickPick(r));\n     }\n-    return await vscode.window.showQuickPick(items);\n+\n+    return await new Promise((resolve) => {\n+        const disposables: vscode.Disposable[] = [];\n+        const close = (result?: RunnableQuickPick) => {\n+            resolve(result);\n+            disposables.forEach(d => d.dispose());\n+        };\n+\n+        const quickPick = vscode.window.createQuickPick<RunnableQuickPick>();\n+        quickPick.items = items;\n+        quickPick.title = \"Select Runnable\";\n+        if (showButtons) {\n+            quickPick.buttons = quickPickButtons;\n+        }\n+        disposables.push(\n+            quickPick.onDidHide(() => close()),\n+            quickPick.onDidAccept(() => close(quickPick.selectedItems[0])),\n+            quickPick.onDidTriggerButton((_button) => {\n+                (async () => await makeDebugConfig(ctx, quickPick.activeItems[0]))();\n+                close();\n+            }),\n+            quickPick.onDidChangeActive((active) => {\n+                if (showButtons && active.length > 0) {\n+                    if (active[0].label.startsWith('cargo')) {\n+                        // save button makes no sense for `cargo test` or `cargo check`\n+                        quickPick.buttons = [];\n+                    } else if (quickPick.buttons.length === 0) {\n+                        quickPick.buttons = quickPickButtons;\n+                    }\n+                }\n+            }),\n+            quickPick\n+        );\n+        quickPick.show();\n+    });\n }\n \n export function run(ctx: Ctx): Cmd {\n@@ -86,31 +122,35 @@ export function debugSingle(ctx: Ctx): Cmd {\n     };\n }\n \n-export function newDebugConfig(ctx: Ctx): Cmd {\n-    return async () => {\n-        const scope = ctx.activeRustEditor?.document.uri;\n-        if (!scope) return;\n+async function makeDebugConfig(ctx: Ctx, item: RunnableQuickPick): Promise<void> {\n+    const scope = ctx.activeRustEditor?.document.uri;\n+    if (!scope) return;\n \n-        const item = await selectRunnable(ctx, undefined);\n-        if (!item) return;\n+    const debugConfig = await getDebugConfiguration(ctx, item.runnable);\n+    if (!debugConfig) return;\n \n-        const debugConfig = await getDebugConfiguration(ctx, item.runnable);\n-        if (!debugConfig) return;\n+    const wsLaunchSection = vscode.workspace.getConfiguration(\"launch\", scope);\n+    const configurations = wsLaunchSection.get<any[]>(\"configurations\") || [];\n \n-        const wsLaunchSection = vscode.workspace.getConfiguration(\"launch\", scope);\n-        const configurations = wsLaunchSection.get<any[]>(\"configurations\") || [];\n+    const index = configurations.findIndex(c => c.name === debugConfig.name);\n+    if (index !== -1) {\n+        const answer = await vscode.window.showErrorMessage(`Launch configuration '${debugConfig.name}' already exists!`, 'Cancel', 'Update');\n+        if (answer === \"Cancel\") return;\n \n-        const index = configurations.findIndex(c => c.name === debugConfig.name);\n-        if (index !== -1) {\n-            const answer = await vscode.window.showErrorMessage(`Launch configuration '${debugConfig.name}' already exists!`, 'Cancel', 'Update');\n-            if (answer === \"Cancel\") return;\n+        configurations[index] = debugConfig;\n+    } else {\n+        configurations.push(debugConfig);\n+    }\n \n-            configurations[index] = debugConfig;\n-        } else {\n-            configurations.push(debugConfig);\n-        }\n+    await wsLaunchSection.update(\"configurations\", configurations);\n+}\n+\n+export function newDebugConfig(ctx: Ctx): Cmd {\n+    return async () => {\n+        const item = await selectRunnable(ctx, undefined, false);\n+        if (!item) return;\n \n-        await wsLaunchSection.update(\"configurations\", configurations);\n+        await makeDebugConfig(ctx, item);\n     };\n }\n "}]}