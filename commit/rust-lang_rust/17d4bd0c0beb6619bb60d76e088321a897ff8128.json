{"sha": "17d4bd0c0beb6619bb60d76e088321a897ff8128", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3ZDRiZDBjMGJlYjY2MTliYjYwZDc2ZTA4ODMyMWE4OTdmZjgxMjg=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-08-12T21:27:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-12T21:27:01Z"}, "message": "Rollup merge of #53264 - Havvy:patch-3, r=GuillaumeGomez\n\nShow that Command can be reused and remodified\n\nThe prior documentation did not make it clear this was possible.\n\nI wanted to make the `list_dir` example work on Windows, but I don't know if passing \"/\" will error or show the root of the current volume (e.g. `C:`).\n\nr? @GuillaumeGomez", "tree": {"sha": "c8b0b171cf9ffd6bda15a0b1062899a6d0fbaa2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8b0b171cf9ffd6bda15a0b1062899a6d0fbaa2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17d4bd0c0beb6619bb60d76e088321a897ff8128", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbcKYlCRBK7hj4Ov3rIwAAdHIIABwK74B5kOGs3DNqtRj8SVff\n1GgAbpVcYDLP8Y/Vqfeuctgt5Djdg0BDDh52skX73dHSFy7Lxc2p3wvqTFzp3DXR\n3F1HkclNVFULYtvFv3otqlWR8ToAYQXfx3+eM85SSWCRX6niGmfQabcuX3kTrBMX\nWwaSynEEpCq59Vvmwua1qdbVC3vRXcYH8M/hBu+8lp/o3TqpX/GBXhRPcHolRbMw\nziFQfH1/gBSVIDn/kPDcuP9MtKQeO6qJJY/HA1fLssbvyZ32x34sjWE7tV03hHZW\niIPd4mQE3RMkcktHatW8wVWGlTCg0UtWzBvPdz9hL9XFBsiWby/Jv7wiTenPVP8=\n=vOqr\n-----END PGP SIGNATURE-----\n", "payload": "tree c8b0b171cf9ffd6bda15a0b1062899a6d0fbaa2f\nparent b0d7f91c4e15b8d5da71d4dd32917973c130af19\nparent 0070b46626407f2e815993d46aef2b2637c2a4ed\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1534109221 +0200\ncommitter GitHub <noreply@github.com> 1534109221 +0200\n\nRollup merge of #53264 - Havvy:patch-3, r=GuillaumeGomez\n\nShow that Command can be reused and remodified\n\nThe prior documentation did not make it clear this was possible.\n\nI wanted to make the `list_dir` example work on Windows, but I don't know if passing \"/\" will error or show the root of the current volume (e.g. `C:`).\n\nr? @GuillaumeGomez\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17d4bd0c0beb6619bb60d76e088321a897ff8128", "html_url": "https://github.com/rust-lang/rust/commit/17d4bd0c0beb6619bb60d76e088321a897ff8128", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17d4bd0c0beb6619bb60d76e088321a897ff8128/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0d7f91c4e15b8d5da71d4dd32917973c130af19", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0d7f91c4e15b8d5da71d4dd32917973c130af19", "html_url": "https://github.com/rust-lang/rust/commit/b0d7f91c4e15b8d5da71d4dd32917973c130af19"}, {"sha": "0070b46626407f2e815993d46aef2b2637c2a4ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/0070b46626407f2e815993d46aef2b2637c2a4ed", "html_url": "https://github.com/rust-lang/rust/commit/0070b46626407f2e815993d46aef2b2637c2a4ed"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "53babd449a992fbfe5653a67b1e3d36525cafdd3", "filename": "src/libstd/process.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/17d4bd0c0beb6619bb60d76e088321a897ff8128/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17d4bd0c0beb6619bb60d76e088321a897ff8128/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=17d4bd0c0beb6619bb60d76e088321a897ff8128", "patch": "@@ -381,6 +381,39 @@ impl fmt::Debug for ChildStderr {\n ///\n /// let hello = output.stdout;\n /// ```\n+///\n+/// `Command` can be reused to spawn multiple processes. The builder methods\n+/// change the command without needing to immediately spawn the process.\n+///\n+/// ```no_run\n+/// use std::process::Command;\n+///\n+/// let mut echo_hello = Command::new(\"sh\");\n+/// echo_hello.arg(\"-c\")\n+///           .arg(\"echo hello\");\n+/// let hello_1 = echo_hello.output().expect(\"failed to execute process\");\n+/// let hello_2 = echo_hello.output().expect(\"failed to execute process\");\n+/// ```\n+///\n+/// Similarly, you can call builder methods after spawning a process and then\n+/// spawn a new process with the modified settings.\n+///\n+/// ```no_run\n+/// use std::process::Command;\n+///\n+/// let mut list_dir = Command::new(\"ls\");\n+///\n+/// // Execute `ls` in the current directory of the program.\n+/// list_dir.status().expect(\"process failed to execute\");\n+///\n+/// println!(\"\");\n+///\n+/// // Change `ls` to execute in the root directory.\n+/// list_dir.current_dir(\"/\");\n+///\n+/// // And then execute `ls` again but in the root directory.\n+/// list_dir.status().expect(\"process failed to execute\");\n+/// ```\n #[stable(feature = \"process\", since = \"1.0.0\")]\n pub struct Command {\n     inner: imp::Command,"}]}