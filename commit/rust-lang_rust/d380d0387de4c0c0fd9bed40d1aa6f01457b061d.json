{"sha": "d380d0387de4c0c0fd9bed40d1aa6f01457b061d", "node_id": "C_kwDOAAsO6NoAKGQzODBkMDM4N2RlNGMwYzBmZDliZWQ0MGQxYWE2ZjAxNDU3YjA2MWQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-26T19:19:37Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-26T19:19:44Z"}, "message": "remove unused parser fn", "tree": {"sha": "885f468ce1547875960673e5996c9141e032aaed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/885f468ce1547875960673e5996c9141e032aaed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d380d0387de4c0c0fd9bed40d1aa6f01457b061d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d380d0387de4c0c0fd9bed40d1aa6f01457b061d", "html_url": "https://github.com/rust-lang/rust/commit/d380d0387de4c0c0fd9bed40d1aa6f01457b061d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d380d0387de4c0c0fd9bed40d1aa6f01457b061d/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43dd3d514b6b11c5195de2fd8e665828801d0972", "url": "https://api.github.com/repos/rust-lang/rust/commits/43dd3d514b6b11c5195de2fd8e665828801d0972", "html_url": "https://github.com/rust-lang/rust/commit/43dd3d514b6b11c5195de2fd8e665828801d0972"}], "stats": {"total": 18, "additions": 0, "deletions": 18}, "files": [{"sha": "4ef43735a62c8eac79b0499268553cfd223e91d3", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d380d0387de4c0c0fd9bed40d1aa6f01457b061d/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d380d0387de4c0c0fd9bed40d1aa6f01457b061d/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=d380d0387de4c0c0fd9bed40d1aa6f01457b061d", "patch": "@@ -1112,24 +1112,6 @@ pub struct Expr {\n }\n \n impl Expr {\n-    /// Returns `true` if this expression would be valid somewhere that expects a value;\n-    /// for example, an `if` condition.\n-    pub fn returns(&self) -> bool {\n-        if let ExprKind::Block(ref block, _) = self.kind {\n-            match block.stmts.last().map(|last_stmt| &last_stmt.kind) {\n-                // Implicit return\n-                Some(StmtKind::Expr(_)) => true,\n-                // Last statement is an explicit return?\n-                Some(StmtKind::Semi(expr)) => matches!(expr.kind, ExprKind::Ret(_)),\n-                // This is a block that doesn't end in either an implicit or explicit return.\n-                _ => false,\n-            }\n-        } else {\n-            // This is not a block, it is a value.\n-            true\n-        }\n-    }\n-\n     /// Is this expr either `N`, or `{ N }`.\n     ///\n     /// If this is not the case, name resolution does not resolve `N` when using"}]}