{"sha": "85b11d50b28137b5dbd739af4c59aee94ace7617", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1YjExZDUwYjI4MTM3YjVkYmQ3MzlhZjRjNTlhZWU5NGFjZTc2MTc=", "commit": {"author": {"name": "Camelid", "email": "37223377+camelid@users.noreply.github.com", "date": "2020-09-04T21:00:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-04T21:00:09Z"}, "message": "Improve docs for `std::env::args()`", "tree": {"sha": "d220c48418d051abc158e592b7c53d4d8dc4c33e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d220c48418d051abc158e592b7c53d4d8dc4c33e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85b11d50b28137b5dbd739af4c59aee94ace7617", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfUqrZCRBK7hj4Ov3rIwAAdHIIAK//mc4ZsqKyoOZwirjyiB39\nUDd9C9Sc8B6KaErbwjT7soYowDpX0BJP/dyIqyQgqMcbA5Vdqa6zsVwdWAJoUho5\nyqg8vQp+8g57Kv1f5M5WvPr9FGKSu1KFFzUY6rFLR76h9xtHUvwEM6tmd3rpa2Kp\n8C06uQda9hhVe1pgpLJfh59iXfxL66K5WL7/v3VoLb7mnGK4VpRAUOuR5fv0heBb\nq4WqAUr7BDU4+U6qFQ+DC6rwQC2C5kpqyLpVUhPg2FANWtS/IfjJirEWV1G7M1vQ\nNLdCCGqetgtorEiMtR2Qoj17pfgbfvT0yzbnXtlCwXTWSSvaUBc4jPMixgcxyjk=\n=Cr7Z\n-----END PGP SIGNATURE-----\n", "payload": "tree d220c48418d051abc158e592b7c53d4d8dc4c33e\nparent 42d896afbd0314375a12465a14dc8d23b1b73a55\nauthor Camelid <37223377+camelid@users.noreply.github.com> 1599253209 -0700\ncommitter GitHub <noreply@github.com> 1599253209 -0700\n\nImprove docs for `std::env::args()`"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85b11d50b28137b5dbd739af4c59aee94ace7617", "html_url": "https://github.com/rust-lang/rust/commit/85b11d50b28137b5dbd739af4c59aee94ace7617", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85b11d50b28137b5dbd739af4c59aee94ace7617/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42d896afbd0314375a12465a14dc8d23b1b73a55", "url": "https://api.github.com/repos/rust-lang/rust/commits/42d896afbd0314375a12465a14dc8d23b1b73a55", "html_url": "https://github.com/rust-lang/rust/commit/42d896afbd0314375a12465a14dc8d23b1b73a55"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "b0fceb9b2f669731fe6294d1682885b05be54ecd", "filename": "library/std/src/env.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/85b11d50b28137b5dbd739af4c59aee94ace7617/library%2Fstd%2Fsrc%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85b11d50b28137b5dbd739af4c59aee94ace7617/library%2Fstd%2Fsrc%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fenv.rs?ref=85b11d50b28137b5dbd739af4c59aee94ace7617", "patch": "@@ -695,21 +695,21 @@ pub struct ArgsOs {\n     inner: sys::args::Args,\n }\n \n-/// Returns the arguments which this program was started with (normally passed\n+/// Returns the arguments that this program was started with (normally passed\n /// via the command line).\n ///\n /// The first element is traditionally the path of the executable, but it can be\n /// set to arbitrary text, and may not even exist. This means this property should\n /// not be relied upon for security purposes.\n ///\n-/// On Unix systems shell usually expands unquoted arguments with glob patterns\n+/// On Unix systems the shell usually expands unquoted arguments with glob patterns\n /// (such as `*` and `?`). On Windows this is not done, and such arguments are\n /// passed as-is.\n ///\n-/// On glibc Linux systems, arguments are retrieved by placing a function in \".init_array\".\n-/// Glibc passes argc, argv, and envp to functions in \".init_array\", as a non-standard extension.\n-/// This allows `std::env::args` to work even in a `cdylib` or `staticlib`, as it does on macOS\n-/// and Windows.\n+/// On glibc Linux systems, arguments are retrieved by placing a function in `.init_array`.\n+/// Glibc passes `argc`, `argv`, and `envp` to functions in `.init_array`, as a non-standard\n+/// extension. This allows `std::env::args` to work even in a `cdylib` or `staticlib`, as it\n+/// does on macOS and Windows.\n ///\n /// # Panics\n ///"}]}