{"sha": "0c36c59175929a634f0619664929c1f67a22bf7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjMzZjNTkxNzU5MjlhNjM0ZjA2MTk2NjQ5MjljMWY2N2EyMmJmN2I=", "commit": {"author": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2017-10-09T21:07:53Z"}, "committer": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2017-10-09T21:07:53Z"}, "message": "add `required-version` option to rustfmt.toml\n\nThis option specifies the rustfmt version that *must* be used to format the code. Trying to use a\ndifferent version raises an error.\n\ncloses #1505", "tree": {"sha": "2442abf938af333c5b34306bb79b37214b80bb6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2442abf938af333c5b34306bb79b37214b80bb6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c36c59175929a634f0619664929c1f67a22bf7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c36c59175929a634f0619664929c1f67a22bf7b", "html_url": "https://github.com/rust-lang/rust/commit/0c36c59175929a634f0619664929c1f67a22bf7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c36c59175929a634f0619664929c1f67a22bf7b/comments", "author": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c9ee313a25dce69891bef9d7f6702ced0bb0259", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c9ee313a25dce69891bef9d7f6702ced0bb0259", "html_url": "https://github.com/rust-lang/rust/commit/6c9ee313a25dce69891bef9d7f6702ced0bb0259"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "bbaeb1fcc44f7c54c396bfe6008d53f62e7880b5", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0c36c59175929a634f0619664929c1f67a22bf7b/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c36c59175929a634f0619664929c1f67a22bf7b/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=0c36c59175929a634f0619664929c1f67a22bf7b", "patch": "@@ -195,7 +195,13 @@ fn execute(opts: &Options) -> FmtResult<Summary> {\n                 }\n             }\n \n-            Ok(run(Input::Text(input), &config))\n+            let mut error_summary = Summary::default();\n+            if config.version_meets_requirement(&mut error_summary) {\n+                error_summary.add(run(Input::Text(input), &config));\n+            }\n+\n+            Ok(error_summary)\n+\n         }\n         Operation::Format {\n             files,\n@@ -247,6 +253,10 @@ fn execute(opts: &Options) -> FmtResult<Summary> {\n                         config = config_tmp;\n                     }\n \n+                    if !config.version_meets_requirement(&mut error_summary) {\n+                        break\n+                    }\n+\n                     options.clone().apply_to(&mut config);\n                     error_summary.add(run(Input::File(file), &config));\n                 }"}, {"sha": "778c445d2f6decd54847cc6f3ee8799ccec88cc7", "filename": "src/config.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0c36c59175929a634f0619664929c1f67a22bf7b/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c36c59175929a634f0619664929c1f67a22bf7b/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=0c36c59175929a634f0619664929c1f67a22bf7b", "patch": "@@ -18,6 +18,7 @@ use std::path::{Path, PathBuf};\n \n use file_lines::FileLines;\n use lists::{ListTactic, SeparatorPlace, SeparatorTactic};\n+use Summary;\n \n macro_rules! configuration_option_enum{\n     ($e:ident: $( $x:ident ),+ $(,)*) => {\n@@ -272,6 +273,23 @@ macro_rules! create_config {\n         }\n \n         impl Config {\n+            pub fn version_meets_requirement(&self, error_summary: &mut Summary) -> bool {\n+                if self.was_set().required_version() {\n+                    let version = env!(\"CARGO_PKG_VERSION\");\n+                    let required_version = self.required_version();\n+                    if version != required_version {\n+                        println!(\n+                            \"Error: rustfmt version ({}) doesn't match the required version ({})\",\n+                            version,\n+                            required_version,\n+                        );\n+                        error_summary.add_formatting_error();\n+                        return false;\n+                    }\n+                }\n+\n+                true\n+            }\n \n             $(\n             pub fn $i(&self) -> $ty {\n@@ -622,6 +640,8 @@ create_config! {\n     merge_derives: bool, true, \"Merge multiple `#[derive(...)]` into a single one\";\n     binop_separator: SeparatorPlace, SeparatorPlace::Front,\n         \"Where to put a binary operator when a binary expression goes multiline.\";\n+    required_version: String, \"\".to_owned(),\n+        \"Require a specific version of rustfmt.\"\n }\n \n #[cfg(test)]"}]}