{"sha": "36396c6b972714bda6c25ab14a7a954136b8654f", "node_id": "C_kwDOAAsO6NoAKDM2Mzk2YzZiOTcyNzE0YmRhNmMyNWFiMTRhN2E5NTQxMzZiODY1NGY", "commit": {"author": {"name": "Piotr Mikulski", "email": "piotr@near.org", "date": "2022-01-16T18:32:45Z"}, "committer": {"name": "Piotr Mikulski", "email": "piotr@near.org", "date": "2022-01-16T18:33:30Z"}, "message": "Fix tests", "tree": {"sha": "7da54ce89881bf91d838279b761cfc4c3dd9a79e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7da54ce89881bf91d838279b761cfc4c3dd9a79e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36396c6b972714bda6c25ab14a7a954136b8654f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36396c6b972714bda6c25ab14a7a954136b8654f", "html_url": "https://github.com/rust-lang/rust/commit/36396c6b972714bda6c25ab14a7a954136b8654f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36396c6b972714bda6c25ab14a7a954136b8654f/comments", "author": {"login": "pmnoxx", "id": 7828365, "node_id": "MDQ6VXNlcjc4MjgzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/7828365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmnoxx", "html_url": "https://github.com/pmnoxx", "followers_url": "https://api.github.com/users/pmnoxx/followers", "following_url": "https://api.github.com/users/pmnoxx/following{/other_user}", "gists_url": "https://api.github.com/users/pmnoxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmnoxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmnoxx/subscriptions", "organizations_url": "https://api.github.com/users/pmnoxx/orgs", "repos_url": "https://api.github.com/users/pmnoxx/repos", "events_url": "https://api.github.com/users/pmnoxx/events{/privacy}", "received_events_url": "https://api.github.com/users/pmnoxx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmnoxx", "id": 7828365, "node_id": "MDQ6VXNlcjc4MjgzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/7828365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmnoxx", "html_url": "https://github.com/pmnoxx", "followers_url": "https://api.github.com/users/pmnoxx/followers", "following_url": "https://api.github.com/users/pmnoxx/following{/other_user}", "gists_url": "https://api.github.com/users/pmnoxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmnoxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmnoxx/subscriptions", "organizations_url": "https://api.github.com/users/pmnoxx/orgs", "repos_url": "https://api.github.com/users/pmnoxx/repos", "events_url": "https://api.github.com/users/pmnoxx/events{/privacy}", "received_events_url": "https://api.github.com/users/pmnoxx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d48d247309f024b4d009a528e243e4567a98aa8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d48d247309f024b4d009a528e243e4567a98aa8e", "html_url": "https://github.com/rust-lang/rust/commit/d48d247309f024b4d009a528e243e4567a98aa8e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d75ab0c4b1b0a5a8c8e0243eaa3c6a158c38b7d5", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/36396c6b972714bda6c25ab14a7a954136b8654f/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36396c6b972714bda6c25ab14a7a954136b8654f/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=36396c6b972714bda6c25ab14a7a954136b8654f", "patch": "@@ -2319,7 +2319,7 @@ fn check_methods<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>, msrv: Optio\n             (\"is_file\", []) => filetype_is_file::check(cx, expr, recv),\n             (\"is_none\", []) => check_is_some_is_none(cx, expr, recv, false),\n             (\"is_some\", []) => check_is_some_is_none(cx, expr, recv, true),\n-            (\"last\" | \"skip\", args @ []) => {\n+            (\"last\", args @ []) | (\"skip\", args @ [_]) => {\n                 if let Some((name2, [recv2, args2 @ ..], _span2)) = method_call(recv) {\n                     if let (\"cloned\", []) = (name2, args2) {\n                         iter_overeager_cloned::check(cx, expr, recv2, name, args);"}]}