{"sha": "978b6bf5a1b4b74e9c89e6db753823f9a7cb7f57", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3OGI2YmY1YTFiNGI3NGU5Yzg5ZTZkYjc1MzgyM2Y5YTdjYjdmNTc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T03:47:02Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:29Z"}, "message": "librustc: De-`@mut` `CStore::extern_mod_crate_map`", "tree": {"sha": "a108ca9599e184fd8f573baf5b7d2ad58fb92040", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a108ca9599e184fd8f573baf5b7d2ad58fb92040"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/978b6bf5a1b4b74e9c89e6db753823f9a7cb7f57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/978b6bf5a1b4b74e9c89e6db753823f9a7cb7f57", "html_url": "https://github.com/rust-lang/rust/commit/978b6bf5a1b4b74e9c89e6db753823f9a7cb7f57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/978b6bf5a1b4b74e9c89e6db753823f9a7cb7f57/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df373e6fbeb8b64abf0619dcaad642c26f04b6aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/df373e6fbeb8b64abf0619dcaad642c26f04b6aa", "html_url": "https://github.com/rust-lang/rust/commit/df373e6fbeb8b64abf0619dcaad642c26f04b6aa"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "b0d04165d8a3537a4a39c41e8bbd1cbc066cbfe4", "filename": "src/librustc/metadata/cstore.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/978b6bf5a1b4b74e9c89e6db753823f9a7cb7f57/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/978b6bf5a1b4b74e9c89e6db753823f9a7cb7f57/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcstore.rs?ref=978b6bf5a1b4b74e9c89e6db753823f9a7cb7f57", "patch": "@@ -62,7 +62,7 @@ pub struct CrateSource {\n \n pub struct CStore {\n     priv metas: RefCell<HashMap<ast::CrateNum, @crate_metadata>>,\n-    priv extern_mod_crate_map: extern_mod_crate_map,\n+    priv extern_mod_crate_map: RefCell<extern_mod_crate_map>,\n     priv used_crate_sources: ~[CrateSource],\n     priv used_libraries: ~[(~str, NativeLibaryKind)],\n     priv used_link_args: ~[~str],\n@@ -76,7 +76,7 @@ impl CStore {\n     pub fn new(intr: @ident_interner) -> CStore {\n         CStore {\n             metas: RefCell::new(HashMap::new()),\n-            extern_mod_crate_map: HashMap::new(),\n+            extern_mod_crate_map: RefCell::new(HashMap::new()),\n             used_crate_sources: ~[],\n             used_libraries: ~[],\n             used_link_args: ~[],\n@@ -162,20 +162,23 @@ impl CStore {\n     pub fn add_extern_mod_stmt_cnum(&mut self,\n                                     emod_id: ast::NodeId,\n                                     cnum: ast::CrateNum) {\n-        self.extern_mod_crate_map.insert(emod_id, cnum);\n+        let mut extern_mod_crate_map = self.extern_mod_crate_map.borrow_mut();\n+        extern_mod_crate_map.get().insert(emod_id, cnum);\n     }\n \n     pub fn find_extern_mod_stmt_cnum(&self, emod_id: ast::NodeId)\n                                      -> Option<ast::CrateNum> {\n-        self.extern_mod_crate_map.find(&emod_id).map(|x| *x)\n+        let extern_mod_crate_map = self.extern_mod_crate_map.borrow();\n+        extern_mod_crate_map.get().find(&emod_id).map(|x| *x)\n     }\n \n     // returns hashes of crates directly used by this crate. Hashes are sorted by\n     // (crate name, crate version, crate hash) in lexicographic order (not semver)\n     pub fn get_dep_hashes(&self) -> ~[@str] {\n         let mut result = ~[];\n \n-        for (_, &cnum) in self.extern_mod_crate_map.iter() {\n+        let extern_mod_crate_map = self.extern_mod_crate_map.borrow();\n+        for (_, &cnum) in extern_mod_crate_map.get().iter() {\n             let cdata = self.get_crate_data(cnum);\n             let hash = decoder::get_crate_hash(cdata.data());\n             let vers = decoder::get_crate_vers(cdata.data());"}]}