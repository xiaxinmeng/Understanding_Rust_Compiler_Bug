{"sha": "d14610dab4b4fedee7a0d8f1739eb3e0691984c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNDYxMGRhYjRiNGZlZGVlN2EwZDhmMTczOWViM2UwNjkxOTg0YzE=", "commit": {"author": {"name": "Muhammad Mominul Huque", "email": "mominul2082@gmail.com", "date": "2018-10-26T13:08:21Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-31T20:39:21Z"}, "message": "initial implementation", "tree": {"sha": "d022f3a2e3afc8cb56cb8b4d49fc5e8dab1abcf6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d022f3a2e3afc8cb56cb8b4d49fc5e8dab1abcf6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d14610dab4b4fedee7a0d8f1739eb3e0691984c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d14610dab4b4fedee7a0d8f1739eb3e0691984c1", "html_url": "https://github.com/rust-lang/rust/commit/d14610dab4b4fedee7a0d8f1739eb3e0691984c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d14610dab4b4fedee7a0d8f1739eb3e0691984c1/comments", "author": {"login": "mominul", "id": 9459891, "node_id": "MDQ6VXNlcjk0NTk4OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/9459891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mominul", "html_url": "https://github.com/mominul", "followers_url": "https://api.github.com/users/mominul/followers", "following_url": "https://api.github.com/users/mominul/following{/other_user}", "gists_url": "https://api.github.com/users/mominul/gists{/gist_id}", "starred_url": "https://api.github.com/users/mominul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mominul/subscriptions", "organizations_url": "https://api.github.com/users/mominul/orgs", "repos_url": "https://api.github.com/users/mominul/repos", "events_url": "https://api.github.com/users/mominul/events{/privacy}", "received_events_url": "https://api.github.com/users/mominul/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b9fc135d6763b403dcf2455c35251d5c36d83e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b9fc135d6763b403dcf2455c35251d5c36d83e5", "html_url": "https://github.com/rust-lang/rust/commit/9b9fc135d6763b403dcf2455c35251d5c36d83e5"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "c0be661fd608ce9b6e4d14d17d8742967bd1012a", "filename": ".cargo/config", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d14610dab4b4fedee7a0d8f1739eb3e0691984c1/.cargo%2Fconfig", "raw_url": "https://github.com/rust-lang/rust/raw/d14610dab4b4fedee7a0d8f1739eb3e0691984c1/.cargo%2Fconfig", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.cargo%2Fconfig?ref=d14610dab4b4fedee7a0d8f1739eb3e0691984c1", "patch": "@@ -3,6 +3,7 @@\n gen-syntax =    \"run --package tools -- gen-syntax\"\n gen-tests =    \"run --package tools -- gen-tests\"\n install-code = \"run --package tools -- install-code\"\n+format =    \"run --package tools -- format\"\n \n render-test = \"run --package ra_cli -- render-test\"\n parse =       \"run --package ra_cli -- parse\""}, {"sha": "91c35b9e133eadc6bc756881611589edd830a6b8", "filename": "crates/tools/src/lib.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d14610dab4b4fedee7a0d8f1739eb3e0691984c1/crates%2Ftools%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d14610dab4b4fedee7a0d8f1739eb3e0691984c1/crates%2Ftools%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Flib.rs?ref=d14610dab4b4fedee7a0d8f1739eb3e0691984c1", "patch": "@@ -12,9 +12,9 @@ pub use teraron::{Mode, Verify, Overwrite};\n \n pub type Result<T> = ::std::result::Result<T, failure::Error>;\n \n-pub const GRAMMAR: &str = \"ra_syntax/src/grammar.ron\";\n-pub const SYNTAX_KINDS: &str = \"ra_syntax/src/syntax_kinds/generated.rs.tera\";\n-pub const AST: &str = \"ra_syntax/src/ast/generated.rs.tera\";\n+pub const GRAMMAR: &str = \"crates/ra_syntax/src/grammar.ron\";\n+pub const SYNTAX_KINDS: &str = \"crates/ra_syntax/src/syntax_kinds/generated.rs.tera\";\n+pub const AST: &str = \"crates/ra_syntax/src/ast/generated.rs.tera\";\n \n #[derive(Debug)]\n pub struct Test {\n@@ -75,7 +75,8 @@ pub fn generate(mode: Mode) -> Result<()> {\n \n pub fn project_root() -> PathBuf {\n     Path::new(&std::env::var(\"CARGO_MANIFEST_DIR\").unwrap())\n-        .parent()\n+        .ancestors()\n+        .nth(2)\n         .unwrap()\n         .to_path_buf()\n }"}, {"sha": "bc5ad6fa8d1c59bf8e60158601d04ed06a847388", "filename": "crates/tools/src/main.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d14610dab4b4fedee7a0d8f1739eb3e0691984c1/crates%2Ftools%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d14610dab4b4fedee7a0d8f1739eb3e0691984c1/crates%2Ftools%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Fmain.rs?ref=d14610dab4b4fedee7a0d8f1739eb3e0691984c1", "patch": "@@ -13,7 +13,7 @@ use std::{\n     process::Command,\n };\n use tools::{\n-    collect_tests, Result, Test, generate, Mode, Overwrite, Verify,\n+    collect_tests, Result, Test, generate, Mode, Overwrite, Verify, project_root,\n };\n \n const GRAMMAR_DIR: &str = \"./crates/ra_syntax/src/grammar\";\n@@ -31,6 +31,7 @@ fn main() -> Result<()> {\n         .subcommand(SubCommand::with_name(\"gen-syntax\"))\n         .subcommand(SubCommand::with_name(\"gen-tests\"))\n         .subcommand(SubCommand::with_name(\"install-code\"))\n+        .subcommand(SubCommand::with_name(\"format\"))\n         .get_matches();\n     let mode = if matches.is_present(\"verify\") {\n         Verify\n@@ -41,6 +42,7 @@ fn main() -> Result<()> {\n         (\"install-code\", _) => install_code_extension()?,\n         (\"gen-tests\", _) => gen_tests(mode)?,\n         (\"gen-syntax\", _) => generate(Overwrite)?,\n+        (\"format\", _) => run_rustfmt()?,\n         _ => unreachable!(),\n     }\n     Ok(())\n@@ -146,12 +148,7 @@ fn install_code_extension() -> Result<()> {\n \n fn run(cmdline: &'static str, dir: &str) -> Result<()> {\n     eprintln!(\"\\nwill run: {}\", cmdline);\n-    let manifest_dir = env!(\"CARGO_MANIFEST_DIR\");\n-    let project_dir = Path::new(manifest_dir)\n-        .ancestors()\n-        .nth(2)\n-        .unwrap()\n-        .join(dir);\n+    let project_dir = project_root().join(dir);\n     let mut args = cmdline.split_whitespace();\n     let exec = args.next().unwrap();\n     let status = Command::new(exec)\n@@ -163,3 +160,11 @@ fn run(cmdline: &'static str, dir: &str) -> Result<()> {\n     }\n     Ok(())\n }\n+\n+fn run_rustfmt() -> Result<()> {\n+    // Use beta toolchain for 2018 edition.\n+    run(\"rustup install beta\", \".\")?;\n+    run(\"rustup component add rustfmt-preview --toolchain beta\", \".\")?;\n+    run(\"rustup run beta -- cargo fmt\", \".\")?;\n+    Ok(())\n+}"}]}