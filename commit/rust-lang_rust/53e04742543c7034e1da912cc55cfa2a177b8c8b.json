{"sha": "53e04742543c7034e1da912cc55cfa2a177b8c8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzZTA0NzQyNTQzYzcwMzRlMWRhOTEyY2M1NWNmYTJhMTc3YjhjOGI=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-05-17T22:01:53Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-05-18T12:16:45Z"}, "message": "Add better tests for hidden lifetimes in impl trait", "tree": {"sha": "ec666cfbd0636bc82432cc3dc432c3c9d8261cd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec666cfbd0636bc82432cc3dc432c3c9d8261cd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53e04742543c7034e1da912cc55cfa2a177b8c8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53e04742543c7034e1da912cc55cfa2a177b8c8b", "html_url": "https://github.com/rust-lang/rust/commit/53e04742543c7034e1da912cc55cfa2a177b8c8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53e04742543c7034e1da912cc55cfa2a177b8c8b/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7158ed9cbea805adf8161d3deaadba2f85b7692e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7158ed9cbea805adf8161d3deaadba2f85b7692e", "html_url": "https://github.com/rust-lang/rust/commit/7158ed9cbea805adf8161d3deaadba2f85b7692e"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "2ee004a37a6fc2568a37afbdc387d45f5f368ba5", "filename": "src/test/ui/impl-trait/hidden-lifetimes.rs", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/53e04742543c7034e1da912cc55cfa2a177b8c8b/src%2Ftest%2Fui%2Fimpl-trait%2Fhidden-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53e04742543c7034e1da912cc55cfa2a177b8c8b/src%2Ftest%2Fui%2Fimpl-trait%2Fhidden-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fhidden-lifetimes.rs?ref=53e04742543c7034e1da912cc55cfa2a177b8c8b", "patch": "@@ -0,0 +1,63 @@\n+// Test to show what happens if we were not careful and allowed invariant\n+// lifetimes to escape though an impl trait.\n+//\n+// Specifically we swap a long lived and short lived reference, giving us a\n+// dangling pointer.\n+\n+use std::cell::RefCell;\n+use std::rc::Rc;\n+\n+trait Swap: Sized {\n+    fn swap(self, other: Self);\n+}\n+\n+impl<T> Swap for &mut T {\n+    fn swap(self, other: Self) {\n+        std::mem::swap(self, other);\n+    }\n+}\n+\n+impl<T> Swap for Rc<RefCell<T>> {\n+    fn swap(self, other: Self) {\n+        <RefCell<T>>::swap(&self, &other);\n+    }\n+}\n+\n+// Here we are hiding `'b` making the caller believe that `&'a mut &'s T` and\n+// `&'a mut &'l T` are the same type.\n+fn hide_ref<'a, 'b, T: 'static>(x: &'a mut &'b T) -> impl Swap + 'a {\n+    //~^ ERROR hidden type\n+    x\n+}\n+\n+fn dangle_ref() -> &'static [i32; 3] {\n+    let mut res = &[4, 5, 6];\n+    let x = [1, 2, 3];\n+    hide_ref(&mut res).swap(hide_ref(&mut &x));\n+    res\n+}\n+\n+// Here we are hiding `'b` making the caller believe that `Rc<RefCell<&'s T>>`\n+// and `Rc<RefCell<&'l T>>` are the same type.\n+//\n+// This is different to the previous example because the concrete return type\n+// only has a single lifetime.\n+fn hide_rc_refcell<'a, 'b: 'a, T: 'static>(x: Rc<RefCell<&'b T>>) -> impl Swap + 'a {\n+    //~^ ERROR hidden type\n+    x\n+}\n+\n+fn dangle_rc_refcell() -> &'static [i32; 3] {\n+    let long = Rc::new(RefCell::new(&[4, 5, 6]));\n+    let x = [1, 2, 3];\n+    let short = Rc::new(RefCell::new(&x));\n+    hide_rc_refcell(long.clone()).swap(hide_rc_refcell(short));\n+    let res: &'static [i32; 3] = *long.borrow();\n+    res\n+}\n+\n+fn main() {\n+    // both will print nonsense values.\n+    println!(\"{:?}\", dangle_ref());\n+    println!(\"{:?}\", dangle_rc_refcell())\n+}"}, {"sha": "650161753d1e5171193fd5b7a2b2ad0bbbb98fc8", "filename": "src/test/ui/impl-trait/hidden-lifetimes.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/53e04742543c7034e1da912cc55cfa2a177b8c8b/src%2Ftest%2Fui%2Fimpl-trait%2Fhidden-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53e04742543c7034e1da912cc55cfa2a177b8c8b/src%2Ftest%2Fui%2Fimpl-trait%2Fhidden-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fhidden-lifetimes.stderr?ref=53e04742543c7034e1da912cc55cfa2a177b8c8b", "patch": "@@ -0,0 +1,27 @@\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/hidden-lifetimes.rs:28:54\n+   |\n+LL | fn hide_ref<'a, 'b, T: 'static>(x: &'a mut &'b T) -> impl Swap + 'a {\n+   |                                                      ^^^^^^^^^^^^^^\n+   |\n+note: hidden type `&'a mut &'b T` captures the lifetime 'b as defined on the function body at 28:17\n+  --> $DIR/hidden-lifetimes.rs:28:17\n+   |\n+LL | fn hide_ref<'a, 'b, T: 'static>(x: &'a mut &'b T) -> impl Swap + 'a {\n+   |                 ^^\n+\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/hidden-lifetimes.rs:45:70\n+   |\n+LL | fn hide_rc_refcell<'a, 'b: 'a, T: 'static>(x: Rc<RefCell<&'b T>>) -> impl Swap + 'a {\n+   |                                                                      ^^^^^^^^^^^^^^\n+   |\n+note: hidden type `std::rc::Rc<std::cell::RefCell<&'b T>>` captures the lifetime 'b as defined on the function body at 45:24\n+  --> $DIR/hidden-lifetimes.rs:45:24\n+   |\n+LL | fn hide_rc_refcell<'a, 'b: 'a, T: 'static>(x: Rc<RefCell<&'b T>>) -> impl Swap + 'a {\n+   |                        ^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0700`."}, {"sha": "8346542135becfc93c61d5ac02c844f392f2f1e8", "filename": "src/test/ui/impl-trait/multiple-lifetimes.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/53e04742543c7034e1da912cc55cfa2a177b8c8b/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53e04742543c7034e1da912cc55cfa2a177b8c8b/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes.rs?ref=53e04742543c7034e1da912cc55cfa2a177b8c8b", "patch": "@@ -0,0 +1,12 @@\n+// Test that multiple liftimes are allowed in impl trait types.\n+// compile-pass\n+\n+trait X<'x>: Sized {}\n+\n+impl<U> X<'_> for U {}\n+\n+fn multiple_lifeteimes<'a, 'b, T: 'static>(x: &'a mut &'b T) -> impl X<'b> + 'a {\n+    x\n+}\n+\n+fn main() {}"}]}