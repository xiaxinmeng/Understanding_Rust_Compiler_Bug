{"sha": "d5e24dc121da70027c8320ab03a7ca886d16ca0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ZTI0ZGMxMjFkYTcwMDI3YzgzMjBhYjAzYTdjYTg4NmQxNmNhMGU=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-07-02T17:09:15Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-19T19:02:32Z"}, "message": "Fix integer overflow", "tree": {"sha": "c306e7157c74a6e3549dcd3ce71472bb8c3211dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c306e7157c74a6e3549dcd3ce71472bb8c3211dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5e24dc121da70027c8320ab03a7ca886d16ca0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5e24dc121da70027c8320ab03a7ca886d16ca0e", "html_url": "https://github.com/rust-lang/rust/commit/d5e24dc121da70027c8320ab03a7ca886d16ca0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5e24dc121da70027c8320ab03a7ca886d16ca0e/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "734ce4ae1a87d83687d6a138f3ac78aa4bf97a8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/734ce4ae1a87d83687d6a138f3ac78aa4bf97a8c", "html_url": "https://github.com/rust-lang/rust/commit/734ce4ae1a87d83687d6a138f3ac78aa4bf97a8c"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "916261eba226a071f5be675677fcf31cc17d18a2", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d5e24dc121da70027c8320ab03a7ca886d16ca0e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5e24dc121da70027c8320ab03a7ca886d16ca0e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=d5e24dc121da70027c8320ab03a7ca886d16ca0e", "patch": "@@ -4997,18 +4997,20 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                         } else {\n                             0\n                         };\n-                        let param_idx = param.index as usize - has_self as usize - lifetime_offset;\n+                        let param_idx = (param.index as usize - has_self as usize)\n+                            .saturating_sub(lifetime_offset);\n                         if let Some(arg) = data.args.get(param_idx) {\n-                            return match param.kind {\n+                            match param.kind {\n                                 GenericParamDefKind::Lifetime => match arg {\n                                     GenericArg::Lifetime(lt) => {\n-                                        AstConv::ast_region_to_region(self, lt, Some(param)).into()\n+                                        return AstConv::ast_region_to_region(self,\n+                                            lt, Some(param)).into();\n                                     }\n-                                    _ => bug!(\"expected a lifetime arg\"),\n+                                    _ => {}\n                                 }\n                                 GenericParamDefKind::Type { .. } => match arg {\n-                                    GenericArg::Type(ty) => self.to_ty(ty).into(),\n-                                    _ => bug!(\"expected a type arg\"),\n+                                    GenericArg::Type(ty) => return self.to_ty(ty).into(),\n+                                    _ => {}\n                                 }\n                             }\n                         }"}]}