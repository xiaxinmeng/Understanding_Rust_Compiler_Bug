{"sha": "d614f463dedc269bd766f74024745e4fb6ba7020", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2MTRmNDYzZGVkYzI2OWJkNzY2Zjc0MDI0NzQ1ZTRmYjZiYTcwMjA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-09-12T08:50:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-12T08:50:38Z"}, "message": "Merge #1825\n\n1825: add quiet mode to analysis-stats r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "f34a9bc7eb5f8b12cbb4d74d13ef1b70b53c358b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f34a9bc7eb5f8b12cbb4d74d13ef1b70b53c358b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d614f463dedc269bd766f74024745e4fb6ba7020", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdegbeCRBK7hj4Ov3rIwAAdHIIAJKKnXx+JxSgaDoomG1P3pcS\n+1LIF9pRTIUtNQghsKGt6OugoHmNYAKmDk1NQs30SRXAf6cACzXh3OuNiuo4V6g0\nNGJo8ElVFsY48ZaCMkqloKwXWLLbjCwdsZyz4LOAfPQsbjhZcKz4Ivmh+KCbgKU9\nOTFMChOl8jaCe8bqhWZGWArJ818nxliYIeqIIJ2dZ0ihYaiiGO9Nrt+nXghM8+IF\njODut7DDmvXqYL4acR9eq7d+KAfxXjcgXqffpQXpGTj60PkPmP6Q+6TASRxDxXQH\nZ1Du32Sljr3usK5x51u6xVF52uoniNlAp2oNFLcXMHI4q3AVv8jLtxXaU9y/amM=\n=59O4\n-----END PGP SIGNATURE-----\n", "payload": "tree f34a9bc7eb5f8b12cbb4d74d13ef1b70b53c358b\nparent 7828f43303ea03810cd5cfe47297a8d95b6ceb51\nparent a31933e4b58f3520a04b99ee60acbabf5695d91e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1568278238 +0000\ncommitter GitHub <noreply@github.com> 1568278238 +0000\n\nMerge #1825\n\n1825: add quiet mode to analysis-stats r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d614f463dedc269bd766f74024745e4fb6ba7020", "html_url": "https://github.com/rust-lang/rust/commit/d614f463dedc269bd766f74024745e4fb6ba7020", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d614f463dedc269bd766f74024745e4fb6ba7020/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7828f43303ea03810cd5cfe47297a8d95b6ceb51", "url": "https://api.github.com/repos/rust-lang/rust/commits/7828f43303ea03810cd5cfe47297a8d95b6ceb51", "html_url": "https://github.com/rust-lang/rust/commit/7828f43303ea03810cd5cfe47297a8d95b6ceb51"}, {"sha": "a31933e4b58f3520a04b99ee60acbabf5695d91e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a31933e4b58f3520a04b99ee60acbabf5695d91e", "html_url": "https://github.com/rust-lang/rust/commit/a31933e4b58f3520a04b99ee60acbabf5695d91e"}], "stats": {"total": 198, "additions": 116, "deletions": 82}, "files": [{"sha": "8f4ce42da5dea404597db9eae7a4d5a9bdef8b17", "filename": "crates/ra_cli/src/analysis_stats.rs", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d614f463dedc269bd766f74024745e4fb6ba7020/crates%2Fra_cli%2Fsrc%2Fanalysis_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d614f463dedc269bd766f74024745e4fb6ba7020/crates%2Fra_cli%2Fsrc%2Fanalysis_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fanalysis_stats.rs?ref=d614f463dedc269bd766f74024745e4fb6ba7020", "patch": "@@ -4,9 +4,14 @@ use ra_db::SourceDatabase;\n use ra_hir::{Crate, HasBodySource, HasSource, HirDisplay, ImplItem, ModuleDef, Ty, TypeWalk};\n use ra_syntax::AstNode;\n \n-use crate::Result;\n+use crate::{Result, Verbosity};\n \n-pub fn run(verbose: bool, memory_usage: bool, path: &Path, only: Option<&str>) -> Result<()> {\n+pub fn run(\n+    verbosity: Verbosity,\n+    memory_usage: bool,\n+    path: &Path,\n+    only: Option<&str>,\n+) -> Result<()> {\n     let db_load_time = Instant::now();\n     let (mut host, roots) = ra_batch::load_cargo(path)?;\n     let db = host.raw_database();\n@@ -55,10 +60,14 @@ pub fn run(verbose: bool, memory_usage: bool, path: &Path, only: Option<&str>) -\n     println!(\"Item Collection: {:?}, {}\", analysis_time.elapsed(), ra_prof::memory_usage());\n \n     let inference_time = Instant::now();\n-    let bar = indicatif::ProgressBar::with_draw_target(\n-        funcs.len() as u64,\n-        indicatif::ProgressDrawTarget::stderr_nohz(),\n-    );\n+    let bar = match verbosity {\n+        Verbosity::Verbose | Verbosity::Normal => indicatif::ProgressBar::with_draw_target(\n+            funcs.len() as u64,\n+            indicatif::ProgressDrawTarget::stderr_nohz(),\n+        ),\n+        Verbosity::Quiet => indicatif::ProgressBar::hidden(),\n+    };\n+\n     bar.set_style(\n         indicatif::ProgressStyle::default_bar().template(\"{wide_bar} {pos}/{len}\\n{msg}\"),\n     );\n@@ -70,7 +79,7 @@ pub fn run(verbose: bool, memory_usage: bool, path: &Path, only: Option<&str>) -\n     for f in funcs {\n         let name = f.name(db);\n         let mut msg = format!(\"processing: {}\", name);\n-        if verbose {\n+        if verbosity.is_verbose() {\n             let src = f.source(db);\n             let original_file = src.file_id.original_file(db);\n             let path = db.file_relative_path(original_file);\n@@ -103,7 +112,7 @@ pub fn run(verbose: bool, memory_usage: bool, path: &Path, only: Option<&str>) -\n             }\n             if let Some(mismatch) = inference_result.type_mismatch_for_expr(expr_id) {\n                 num_type_mismatches += 1;\n-                if verbose {\n+                if verbosity.is_verbose() {\n                     let src = f.expr_source(db, expr_id);\n                     if let Some(src) = src {\n                         // FIXME: it might be nice to have a function (on Analysis?) that goes from Source<T> -> (LineCol, LineCol) directly"}, {"sha": "2a74b8733aeb0637a91d56bbfe536cb20a08908e", "filename": "crates/ra_cli/src/help.rs", "status": "modified", "additions": 73, "deletions": 72, "changes": 145, "blob_url": "https://github.com/rust-lang/rust/blob/d614f463dedc269bd766f74024745e4fb6ba7020/crates%2Fra_cli%2Fsrc%2Fhelp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d614f463dedc269bd766f74024745e4fb6ba7020/crates%2Fra_cli%2Fsrc%2Fhelp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fhelp.rs?ref=d614f463dedc269bd766f74024745e4fb6ba7020", "patch": "@@ -1,72 +1,73 @@\n-pub const GLOBAL_HELP: &str = \"ra-cli\r\n-\r\n-USAGE:\r\n-    ra_cli <SUBCOMMAND>\r\n-\r\n-FLAGS:\r\n-    -h, --help        Prints help information\r\n-\r\n-SUBCOMMANDS:\r\n-    analysis-bench\r\n-    analysis-stats\r\n-    highlight\r\n-    parse\r\n-    symbols\";\r\n-\r\n-pub const ANALYSIS_BENCH_HELP: &str = \"ra_cli-analysis-bench\r\n-\r\n-USAGE:\r\n-    ra_cli analysis-bench [FLAGS] [OPTIONS] [PATH]\r\n-\r\n-FLAGS:\r\n-    -h, --help        Prints help information\r\n-    -v, --verbose\r\n-    \r\n-OPTIONS:\r\n-    --complete <PATH:LINE:COLUMN>    Compute completions at this location\r\n-    --highlight <PATH>               Hightlight this file\r\n-    \r\n-ARGS:\r\n-    <PATH>    Project to analyse\";\r\n-\r\n-pub const ANALYSIS_STATS_HELP: &str = \"ra-cli-analysis-stats\r\n-\r\n-USAGE:\r\n-    ra_cli analysis-stats [FLAGS] [OPTIONS] [PATH]\r\n-    \r\n-FLAGS:\r\n-    -h, --help            Prints help information\r\n-        --memory-usage\r\n-    -v, --verbose\r\n-    \r\n-OPTIONS:\r\n-    -o <ONLY>\r\n-    \r\n-ARGS:\r\n-    <PATH>\";\r\n-\r\n-pub const HIGHLIGHT_HELP: &str = \"ra-cli-highlight\r\n-    \r\n-USAGE:\r\n-    ra_cli highlight [FLAGS]\r\n-    \r\n-FLAGS:\r\n-    -h, --help       Prints help information\r\n-    -r, --rainbow\";\r\n-\r\n-pub const SYMBOLS_HELP: &str = \"ra-cli-symbols\r\n-    \r\n-USAGE:\r\n-    ra_cli highlight [FLAGS]\r\n-    \r\n-FLAGS:\r\n-    -h, --help    Prints help inforamtion\";\r\n-\r\n-pub const PARSE_HELP: &str = \"ra-cli-parse\r\n-    \r\n-USAGE:\r\n-    ra_cli parse [FLAGS]\r\n-    \r\n-FLAGS:\r\n-    -h, --help       Prints help inforamtion\r\n-        --no-dump\";\r\n+pub const GLOBAL_HELP: &str = \"ra-cli\n+\n+USAGE:\n+    ra_cli <SUBCOMMAND>\n+\n+FLAGS:\n+    -h, --help        Prints help information\n+\n+SUBCOMMANDS:\n+    analysis-bench\n+    analysis-stats\n+    highlight\n+    parse\n+    symbols\";\n+\n+pub const ANALYSIS_BENCH_HELP: &str = \"ra_cli-analysis-bench\n+\n+USAGE:\n+    ra_cli analysis-bench [FLAGS] [OPTIONS] [PATH]\n+\n+FLAGS:\n+    -h, --help        Prints help information\n+    -v, --verbose\n+\n+OPTIONS:\n+    --complete <PATH:LINE:COLUMN>    Compute completions at this location\n+    --highlight <PATH>               Hightlight this file\n+\n+ARGS:\n+    <PATH>    Project to analyse\";\n+\n+pub const ANALYSIS_STATS_HELP: &str = \"ra-cli-analysis-stats\n+\n+USAGE:\n+    ra_cli analysis-stats [FLAGS] [OPTIONS] [PATH]\n+\n+FLAGS:\n+    -h, --help            Prints help information\n+        --memory-usage\n+    -v, --verbose\n+    -q, --quiet\n+\n+OPTIONS:\n+    -o <ONLY>\n+\n+ARGS:\n+    <PATH>\";\n+\n+pub const HIGHLIGHT_HELP: &str = \"ra-cli-highlight\n+\n+USAGE:\n+    ra_cli highlight [FLAGS]\n+\n+FLAGS:\n+    -h, --help       Prints help information\n+    -r, --rainbow\";\n+\n+pub const SYMBOLS_HELP: &str = \"ra-cli-symbols\n+\n+USAGE:\n+    ra_cli highlight [FLAGS]\n+\n+FLAGS:\n+    -h, --help    Prints help inforamtion\";\n+\n+pub const PARSE_HELP: &str = \"ra-cli-parse\n+\n+USAGE:\n+    ra_cli parse [FLAGS]\n+\n+FLAGS:\n+    -h, --help       Prints help inforamtion\n+        --no-dump\";"}, {"sha": "ca9275cd45c786dd718ea30b25a3a62200473b1e", "filename": "crates/ra_cli/src/main.rs", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d614f463dedc269bd766f74024745e4fb6ba7020/crates%2Fra_cli%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d614f463dedc269bd766f74024745e4fb6ba7020/crates%2Fra_cli%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fmain.rs?ref=d614f463dedc269bd766f74024745e4fb6ba7020", "patch": "@@ -12,6 +12,22 @@ use ra_syntax::{AstNode, SourceFile};\n \n type Result<T> = std::result::Result<T, Box<dyn Error + Send + Sync>>;\n \n+#[derive(Clone, Copy)]\n+pub enum Verbosity {\n+    Verbose,\n+    Normal,\n+    Quiet,\n+}\n+\n+impl Verbosity {\n+    fn is_verbose(&self) -> bool {\n+        match self {\n+            Verbosity::Verbose => true,\n+            _ => false,\n+        }\n+    }\n+}\n+\n fn main() -> Result<()> {\n     Logger::with_env().start()?;\n \n@@ -67,7 +83,15 @@ fn main() -> Result<()> {\n                 eprintln!(\"{}\", help::ANALYSIS_STATS_HELP);\n                 return Ok(());\n             }\n-            let verbose = matches.contains([\"-v\", \"--verbose\"]);\n+            let verbosity = match (\n+                matches.contains([\"-v\", \"--verbose\"]),\n+                matches.contains([\"-q\", \"--quiet\"]),\n+            ) {\n+                (false, false) => Verbosity::Normal,\n+                (false, true) => Verbosity::Quiet,\n+                (true, false) => Verbosity::Verbose,\n+                (true, true) => Err(\"Invalid flags: -q conflicts with -v\")?,\n+            };\n             let memory_usage = matches.contains(\"--memory-usage\");\n             let only = matches.value_from_str([\"-o\", \"--only\"])?.map(|v: String| v.to_owned());\n             let path = {\n@@ -79,7 +103,7 @@ fn main() -> Result<()> {\n                 trailing.pop().unwrap()\n             };\n             analysis_stats::run(\n-                verbose,\n+                verbosity,\n                 memory_usage,\n                 path.as_ref(),\n                 only.as_ref().map(String::as_ref),"}]}