{"sha": "e0281d991c7150a5cf1921e89a62e9427d0a6de6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMjgxZDk5MWM3MTUwYTVjZjE5MjFlODlhNjJlOTQyN2QwYTZkZTY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-02-01T03:34:46Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-02-01T03:34:46Z"}, "message": "core: Stamp out XXXes (comments only)", "tree": {"sha": "719240277c86c8314a720140c5450dcabdbdd879", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/719240277c86c8314a720140c5450dcabdbdd879"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0281d991c7150a5cf1921e89a62e9427d0a6de6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0281d991c7150a5cf1921e89a62e9427d0a6de6", "html_url": "https://github.com/rust-lang/rust/commit/e0281d991c7150a5cf1921e89a62e9427d0a6de6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0281d991c7150a5cf1921e89a62e9427d0a6de6/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2de8e8f81a87492dd73688405000249d46897ba6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2de8e8f81a87492dd73688405000249d46897ba6", "html_url": "https://github.com/rust-lang/rust/commit/2de8e8f81a87492dd73688405000249d46897ba6"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "760c08510e370eddd330e29d7cb6aa3ff12e7200", "filename": "src/libcore/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e0281d991c7150a5cf1921e89a62e9427d0a6de6/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0281d991c7150a5cf1921e89a62e9427d0a6de6/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=e0281d991c7150a5cf1921e89a62e9427d0a6de6", "patch": "@@ -145,7 +145,7 @@ pub mod win32 {\n /*\n Accessing environment variables is not generally threadsafe.\n This uses a per-runtime lock to serialize access.\n-XXX: It would probably be appropriate to make this a real global\n+FIXME #4726: It would probably be appropriate to make this a real global\n */\n fn with_env_lock<T>(f: &fn() -> T) -> T {\n     use private::global::global_data_clone_create;"}, {"sha": "6fd173f84aa2aa670bc0d7c3b93048565585f0b6", "filename": "src/libcore/private/finally.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e0281d991c7150a5cf1921e89a62e9427d0a6de6/src%2Flibcore%2Fprivate%2Ffinally.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0281d991c7150a5cf1921e89a62e9427d0a6de6/src%2Flibcore%2Fprivate%2Ffinally.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprivate%2Ffinally.rs?ref=e0281d991c7150a5cf1921e89a62e9427d0a6de6", "patch": "@@ -31,7 +31,7 @@ pub trait Finally<T> {\n }\n \n impl<T> &fn() -> T: Finally<T> {\n-    // XXX: Should not require a mode here\n+    // FIXME #4518: Should not require a mode here\n     fn finally(&self, +dtor: &fn()) -> T {\n         let _d = Finallyalizer {\n             dtor: dtor\n@@ -88,7 +88,7 @@ fn test_retval() {\n \n #[test]\n fn test_compact() {\n-    // XXX Should be able to use a fn item instead\n+    // FIXME #4727: Should be able to use a fn item instead\n     // of a closure for do_some_fallible_work,\n     // but it's a type error.\n     let do_some_fallible_work: &fn() = || { };"}, {"sha": "eab3f8ee537366b9526b7c9f16d82e72128f6f3d", "filename": "src/libcore/private/global.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e0281d991c7150a5cf1921e89a62e9427d0a6de6/src%2Flibcore%2Fprivate%2Fglobal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0281d991c7150a5cf1921e89a62e9427d0a6de6/src%2Flibcore%2Fprivate%2Fglobal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprivate%2Fglobal.rs?ref=e0281d991c7150a5cf1921e89a62e9427d0a6de6", "patch": "@@ -160,7 +160,7 @@ fn get_global_state() -> Exclusive<GlobalState> {\n \n     const POISON: int = -1;\n \n-    // XXX: Doing atomic_cxchg to initialize the global state\n+    // FIXME #4728: Doing atomic_cxchg to initialize the global state\n     // lazily, which wouldn't be necessary with a runtime written\n     // in Rust\n     let global_ptr = unsafe { rust_get_global_data_ptr() };"}, {"sha": "7a299d6f11bf9e319b4e291cd9a179cf40c33c6e", "filename": "src/libcore/private/weak_task.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e0281d991c7150a5cf1921e89a62e9427d0a6de6/src%2Flibcore%2Fprivate%2Fweak_task.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0281d991c7150a5cf1921e89a62e9427d0a6de6/src%2Flibcore%2Fprivate%2Fweak_task.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprivate%2Fweak_task.rs?ref=e0281d991c7150a5cf1921e89a62e9427d0a6de6", "patch": "@@ -30,7 +30,7 @@ use ops::Drop;\n \n type ShutdownMsg = ();\n \n-// XXX: This could be a PortOne but I've experienced bugginess\n+// FIXME #4729: This could be a PortOne but I've experienced bugginess\n // with oneshot pipes and try_send\n pub unsafe fn weaken_task(f: &fn(Port<ShutdownMsg>)) {\n     let service = global_data_clone_create(global_data_key,"}]}