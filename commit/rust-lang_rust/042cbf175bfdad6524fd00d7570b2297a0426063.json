{"sha": "042cbf175bfdad6524fd00d7570b2297a0426063", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0MmNiZjE3NWJmZGFkNjUyNGZkMDBkNzU3MGIyMjk3YTA0MjYwNjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-07T13:16:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-07T13:16:22Z"}, "message": "Auto merge of #1868 - hyd-dev:rustup, r=RalfJung\n\nFix tests for `C-unwind` ABI changes\n\ncc https://github.com/rust-lang/rust/issues/87778", "tree": {"sha": "124a7c516baa77bfddfd450e822e4372d0608157", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/124a7c516baa77bfddfd450e822e4372d0608157"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/042cbf175bfdad6524fd00d7570b2297a0426063", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/042cbf175bfdad6524fd00d7570b2297a0426063", "html_url": "https://github.com/rust-lang/rust/commit/042cbf175bfdad6524fd00d7570b2297a0426063", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/042cbf175bfdad6524fd00d7570b2297a0426063/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3157def7525872880d028439fddf293018cd1df", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3157def7525872880d028439fddf293018cd1df", "html_url": "https://github.com/rust-lang/rust/commit/d3157def7525872880d028439fddf293018cd1df"}, {"sha": "af7eb369b1eef147032e570d81dfc5c4e341b0ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/af7eb369b1eef147032e570d81dfc5c4e341b0ea", "html_url": "https://github.com/rust-lang/rust/commit/af7eb369b1eef147032e570d81dfc5c4e341b0ea"}], "stats": {"total": 63, "additions": 10, "deletions": 53}, "files": [{"sha": "e40ae69e2877a509e4b67976b6fe16ecca68f3d9", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/042cbf175bfdad6524fd00d7570b2297a0426063/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/042cbf175bfdad6524fd00d7570b2297a0426063/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=042cbf175bfdad6524fd00d7570b2297a0426063", "patch": "@@ -1 +1 @@\n-71ff9b41e9ebd3e336019513917a7a8868d1cc66\n+996ff2e0a0f911f52bb1de6bdd0cfd5704de1fc9"}, {"sha": "8e6e2a766007e6629c564290853d4b99e1057552", "filename": "tests/compile-fail/abort-terminator.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/042cbf175bfdad6524fd00d7570b2297a0426063/tests%2Fcompile-fail%2Fabort-terminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/042cbf175bfdad6524fd00d7570b2297a0426063/tests%2Fcompile-fail%2Fabort-terminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fabort-terminator.rs?ref=042cbf175bfdad6524fd00d7570b2297a0426063", "patch": "@@ -1,8 +1,7 @@\n // error-pattern: the program aborted\n-#![feature(unwind_attributes)]\n+#![feature(c_unwind)]\n \n-#[unwind(aborts)]\n-fn panic_abort() { panic!() }\n+extern \"C\" fn panic_abort() { panic!() }\n \n fn main() {\n     panic_abort();"}, {"sha": "e80a79d1028ddfddc79e16073552aa26d5569e12", "filename": "tests/compile-fail/function_calls/exported_symbol_bad_unwind2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/042cbf175bfdad6524fd00d7570b2297a0426063/tests%2Fcompile-fail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/042cbf175bfdad6524fd00d7570b2297a0426063/tests%2Fcompile-fail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.rs?ref=042cbf175bfdad6524fd00d7570b2297a0426063", "patch": "@@ -4,6 +4,8 @@\n #[cfg_attr(any(definition, both), rustc_allocator_nounwind)]\n #[no_mangle]\n extern \"C-unwind\" fn nounwind() {\n+    //[definition]~^ ERROR abnormal termination: the program aborted execution\n+    //[both]~^^ ERROR abnormal termination: the program aborted execution\n     panic!();\n }\n \n@@ -14,6 +16,4 @@ fn main() {\n     }\n     unsafe { nounwind() }\n     //[extern_block]~^ ERROR unwinding past a stack frame that does not allow unwinding\n-    //[definition]~^^ ERROR unwinding past a stack frame that does not allow unwinding\n-    //[both]~^^^ ERROR unwinding past a stack frame that does not allow unwinding\n }"}, {"sha": "bbbe677d3651e17eba26a4f160b86af36662d8fb", "filename": "tests/compile-fail/function_calls/exported_symbol_bad_unwind3.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d3157def7525872880d028439fddf293018cd1df/tests%2Fcompile-fail%2Ffunction_calls%2Fexported_symbol_bad_unwind3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3157def7525872880d028439fddf293018cd1df/tests%2Fcompile-fail%2Ffunction_calls%2Fexported_symbol_bad_unwind3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ffunction_calls%2Fexported_symbol_bad_unwind3.rs?ref=d3157def7525872880d028439fddf293018cd1df", "patch": "@@ -1,15 +0,0 @@\n-#![feature(unwind_attributes)]\n-\n-#[unwind(allowed)]\n-#[no_mangle]\n-extern \"C\" fn unwind() {\n-    panic!();\n-}\n-\n-fn main() {\n-    extern \"C\" {\n-        fn unwind();\n-    }\n-    unsafe { unwind() }\n-    //~^ ERROR unwinding past a stack frame that does not allow unwinding\n-}"}, {"sha": "089cd86f1b8f8e31a92e57cab6cafa533ff8051b", "filename": "tests/compile-fail/panic/bad_miri_start_panic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/042cbf175bfdad6524fd00d7570b2297a0426063/tests%2Fcompile-fail%2Fpanic%2Fbad_miri_start_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/042cbf175bfdad6524fd00d7570b2297a0426063/tests%2Fcompile-fail%2Fpanic%2Fbad_miri_start_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fbad_miri_start_panic.rs?ref=042cbf175bfdad6524fd00d7570b2297a0426063", "patch": "@@ -1,4 +1,6 @@\n // compile-flags: -Zmiri-disable-abi-check\n+// This feature is required to trigger the error using the \"C\" ABI.\n+#![feature(c_unwind)]\n \n extern \"C\" {\n     fn miri_start_panic(payload: *mut u8) -> !;"}, {"sha": "71b799a1f12ba6a748ed85918dcd5a2d2ee2c45a", "filename": "tests/run-pass/function_calls/exported_symbol_good_unwind.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/042cbf175bfdad6524fd00d7570b2297a0426063/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol_good_unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/042cbf175bfdad6524fd00d7570b2297a0426063/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol_good_unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol_good_unwind.rs?ref=042cbf175bfdad6524fd00d7570b2297a0426063", "patch": "@@ -2,16 +2,10 @@\n // found in this form\" errors works without `-C prefer-dynamic` (`panic!` calls foreign function\n // `__rust_start_panic`).\n // no-prefer-dynamic\n-#![feature(c_unwind, unboxed_closures, unwind_attributes)]\n+#![feature(c_unwind, unboxed_closures)]\n \n use std::panic;\n \n-#[no_mangle]\n-#[unwind(allowed)]\n-extern \"C\" fn good_unwind_allowed() {\n-    panic!();\n-}\n-\n #[no_mangle]\n extern \"C-unwind\" fn good_unwind_c() {\n     panic!();\n@@ -29,11 +23,6 @@ extern \"rust-call\" fn good_unwind_rust_call(_: ()) -> ! {\n }\n \n fn main() -> ! {\n-    extern \"C\" {\n-        #[unwind(allowed)]\n-        fn good_unwind_allowed();\n-    }\n-    panic::catch_unwind(|| unsafe { good_unwind_allowed() }).unwrap_err();\n     extern \"C-unwind\" {\n         fn good_unwind_c();\n     }"}, {"sha": "40a8f39509fa7fc4bcff587396b8f3e8963361a3", "filename": "tests/run-pass/function_calls/exported_symbol_good_unwind.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/042cbf175bfdad6524fd00d7570b2297a0426063/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol_good_unwind.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/042cbf175bfdad6524fd00d7570b2297a0426063/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol_good_unwind.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol_good_unwind.stderr?ref=042cbf175bfdad6524fd00d7570b2297a0426063", "patch": "@@ -1,5 +1,4 @@\n-thread 'main' panicked at 'explicit panic', $DIR/exported_symbol_good_unwind.rs:12:5\n+thread 'main' panicked at 'explicit panic', $DIR/exported_symbol_good_unwind.rs:11:5\n note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n-thread 'main' panicked at 'explicit panic', $DIR/exported_symbol_good_unwind.rs:17:5\n+thread 'main' panicked at 'explicit panic', $DIR/exported_symbol_good_unwind.rs:16:5\n thread 'main' panicked at 'explicit panic', $DIR/exported_symbol_good_unwind.rs:22:5\n-thread 'main' panicked at 'explicit panic', $DIR/exported_symbol_good_unwind.rs:28:5"}, {"sha": "0e4ec5739a8a0765d77ba523fe8ec42fbabb687f", "filename": "tests/run-pass/function_calls/exported_symbol_unwind_allowed.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d3157def7525872880d028439fddf293018cd1df/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol_unwind_allowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3157def7525872880d028439fddf293018cd1df/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol_unwind_allowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol_unwind_allowed.rs?ref=d3157def7525872880d028439fddf293018cd1df", "patch": "@@ -1,15 +0,0 @@\n-// compile-flags: -Zmiri-disable-abi-check\n-#![feature(unwind_attributes, c_unwind)]\n-\n-#[no_mangle]\n-extern \"C-unwind\" fn unwind() {\n-    panic!();\n-}\n-\n-fn main() {\n-    extern \"C\" {\n-        #[unwind(allowed)]\n-        fn unwind();\n-    }\n-    unsafe { unwind() }\n-}"}, {"sha": "14ee43950cec718e79e198a012cd2d0be7f173c8", "filename": "tests/run-pass/function_calls/exported_symbol_unwind_allowed.stderr", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3157def7525872880d028439fddf293018cd1df/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol_unwind_allowed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3157def7525872880d028439fddf293018cd1df/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol_unwind_allowed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol_unwind_allowed.stderr?ref=d3157def7525872880d028439fddf293018cd1df", "patch": "@@ -1,2 +0,0 @@\n-thread 'main' panicked at 'explicit panic', $DIR/exported_symbol_unwind_allowed.rs:6:5\n-note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace"}]}