{"sha": "4f43c5b1e78115083254e6df12e0d34f7da9748b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNDNjNWIxZTc4MTE1MDgzMjU0ZTZkZjEyZTBkMzRmN2RhOTc0OGI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-15T22:04:48Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-15T22:04:48Z"}, "message": "stop dumping DefPath into \"failed type test\" errors\n\nThe prior messages were not stable across platforms.", "tree": {"sha": "dcdac9625bdd7e916e8f898d90b1a9d4aaa73569", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcdac9625bdd7e916e8f898d90b1a9d4aaa73569"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f43c5b1e78115083254e6df12e0d34f7da9748b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f43c5b1e78115083254e6df12e0d34f7da9748b", "html_url": "https://github.com/rust-lang/rust/commit/4f43c5b1e78115083254e6df12e0d34f7da9748b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f43c5b1e78115083254e6df12e0d34f7da9748b/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f8ef0ca1a298619001998fcb5c329159db206c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f8ef0ca1a298619001998fcb5c329159db206c7", "html_url": "https://github.com/rust-lang/rust/commit/0f8ef0ca1a298619001998fcb5c329159db206c7"}], "stats": {"total": 104, "additions": 54, "deletions": 50}, "files": [{"sha": "36b59d9fb7d33f7d87ce6d59564912b207dc45a4", "filename": "src/librustc_mir/borrow_check/nll/region_infer/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -466,7 +466,11 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n             // Oh the humanity. Obviously we will do better than this error eventually.\n             tcx.sess.span_err(\n                 type_test.span,\n-                &format!(\"failed type test: {:?}\", type_test),\n+                &format!(\n+                    \"`{}` does not outlive `{:?}`\",\n+                    type_test.generic_kind,\n+                    type_test.lower_bound,\n+                ),\n             );\n         }\n     }"}, {"sha": "604c81da49db31f86a9c9994bad52b7a2646359c", "filename": "src/test/ui/nll/closure-requirements/propagate-from-trait-match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.rs?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -40,7 +40,7 @@ where\n     T: Trait<'a>,\n {\n     establish_relationships(value, |value| {\n-        //~^ ERROR failed type test\n+        //~^ ERROR `T` does not outlive\n \n         // This function call requires that\n         //"}, {"sha": "efac55f2beeace6b6ff2af98e453300e0ef7f6dd", "filename": "src/test/ui/nll/closure-requirements/propagate-from-trait-match.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.stderr?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -9,7 +9,7 @@ note: External requirements\n    |\n 42 |       establish_relationships(value, |value| {\n    |  ____________________________________^\n-43 | |         //~^ ERROR failed type test\n+43 | |         //~^ ERROR `T` does not outlive\n 44 | |\n 45 | |         // This function call requires that\n ...  |\n@@ -26,12 +26,12 @@ note: External requirements\n    = note: number of external vids: 2\n    = note: where T: '_#1r\n \n-error: failed type test: TypeTest { generic_kind: T/#1, lower_bound: '_#3r, point: bb0[3], span: $DIR/propagate-from-trait-match.rs:42:36: 57:6, test: IsOutlivedByAnyRegionIn(['_#2r]) }\n+error: `T` does not outlive `'_#3r`\n   --> $DIR/propagate-from-trait-match.rs:42:36\n    |\n 42 |       establish_relationships(value, |value| {\n    |  ____________________________________^\n-43 | |         //~^ ERROR failed type test\n+43 | |         //~^ ERROR `T` does not outlive\n 44 | |\n 45 | |         // This function call requires that\n ...  |"}, {"sha": "9451163ace99338090d28ae90901c2d5492317a2", "filename": "src/test/ui/nll/ty-outlives/projection-no-regions-closure.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-closure.rs?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -35,7 +35,7 @@ where\n {\n     with_signature(x, |mut y| Box::new(y.next()))\n     //~^ WARNING not reporting region error due to -Znll\n-    //~| ERROR failed type test\n+    //~| ERROR `<T as std::iter::Iterator>::Item` does not outlive\n }\n \n #[rustc_regions]\n@@ -53,7 +53,7 @@ where\n {\n     with_signature(x, |mut y| Box::new(y.next()))\n     //~^ WARNING not reporting region error due to -Znll\n-    //~| ERROR failed type test\n+    //~| ERROR `<T as std::iter::Iterator>::Item` does not outlive\n }\n \n #[rustc_regions]"}, {"sha": "9afd5d41182f41ed1e9c58707add79e7b9ad2643", "filename": "src/test/ui/nll/ty-outlives/projection-no-regions-closure.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-closure.stderr?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -72,7 +72,7 @@ note: External requirements\n    = note: number of external vids: 4\n    = note: where <T as std::iter::Iterator>::Item: '_#3r\n \n-error: failed type test: TypeTest { generic_kind: ProjectionTy { substs: Slice([T]), item_def_id: DefId(2/0:1697 ~ core[2633]::iter[0]::iterator[0]::Iterator[0]::Item[0]) }, lower_bound: '_#4r, point: bb0[5], span: $DIR/projection-no-regions-closure.rs:36:23: 36:49, test: IsOutlivedByAnyRegionIn(['_#2r]) }\n+error: `<T as std::iter::Iterator>::Item` does not outlive `'_#4r`\n   --> $DIR/projection-no-regions-closure.rs:36:23\n    |\n 36 |     with_signature(x, |mut y| Box::new(y.next()))\n@@ -86,7 +86,7 @@ note: No external requirements\n 34 | |     T: Iterator,\n 35 | | {\n ...  |\n-38 | |     //~| ERROR failed type test\n+38 | |     //~| ERROR `<T as std::iter::Iterator>::Item` does not outlive\n 39 | | }\n    | |_^\n    |\n@@ -111,7 +111,7 @@ note: No external requirements\n                T\n            ]\n \n-error: failed type test: TypeTest { generic_kind: ProjectionTy { substs: Slice([T]), item_def_id: DefId(2/0:1697 ~ core[2633]::iter[0]::iterator[0]::Iterator[0]::Item[0]) }, lower_bound: '_#6r, point: bb0[5], span: $DIR/projection-no-regions-closure.rs:54:23: 54:49, test: IsOutlivedByAnyRegionIn(['_#2r, '_#3r]) }\n+error: `<T as std::iter::Iterator>::Item` does not outlive `'_#6r`\n   --> $DIR/projection-no-regions-closure.rs:54:23\n    |\n 54 |     with_signature(x, |mut y| Box::new(y.next()))\n@@ -125,7 +125,7 @@ note: No external requirements\n 52 | |     T: 'b + Iterator,\n 53 | | {\n ...  |\n-56 | |     //~| ERROR failed type test\n+56 | |     //~| ERROR `<T as std::iter::Iterator>::Item` does not outlive\n 57 | | }\n    | |_^\n    |"}, {"sha": "c815fdc1a0c5e7f81cf3aae98ec63c90b215cd7a", "filename": "src/test/ui/nll/ty-outlives/projection-no-regions-fn.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-fn.rs?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -23,7 +23,7 @@ where\n {\n     Box::new(x.next())\n     //~^ WARNING not reporting region error due to -Znll\n-    //~| ERROR failed type test\n+    //~| ERROR `<T as std::iter::Iterator>::Item` does not outlive\n }\n \n fn correct_region<'a, T>(mut x: T) -> Box<dyn Anything + 'a>\n@@ -39,7 +39,7 @@ where\n {\n     Box::new(x.next())\n     //~^ WARNING not reporting region error due to -Znll\n-    //~| ERROR failed type test\n+    //~| ERROR `<T as std::iter::Iterator>::Item` does not outlive\n }\n \n fn outlives_region<'a, 'b, T>(mut x: T) -> Box<dyn Anything + 'a>"}, {"sha": "4d13972641c16be1a863a19fb8e50a6edfa44def", "filename": "src/test/ui/nll/ty-outlives/projection-no-regions-fn.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-fn.stderr?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -10,13 +10,13 @@ warning: not reporting region error due to -Znll\n 40 |     Box::new(x.next())\n    |     ^^^^^^^^^^^^^^^^^^\n \n-error: failed type test: TypeTest { generic_kind: ProjectionTy { substs: Slice([T]), item_def_id: DefId(2/0:1697 ~ core[2633]::iter[0]::iterator[0]::Iterator[0]::Item[0]) }, lower_bound: '_#4r, point: bb5[0], span: $DIR/projection-no-regions-fn.rs:24:5: 24:23, test: IsOutlivedByAnyRegionIn(['_#2r]) }\n+error: `<T as std::iter::Iterator>::Item` does not outlive `'_#4r`\n   --> $DIR/projection-no-regions-fn.rs:24:5\n    |\n 24 |     Box::new(x.next())\n    |     ^^^^^^^^^^^^^^^^^^\n \n-error: failed type test: TypeTest { generic_kind: ProjectionTy { substs: Slice([T]), item_def_id: DefId(2/0:1697 ~ core[2633]::iter[0]::iterator[0]::Iterator[0]::Item[0]) }, lower_bound: '_#5r, point: bb5[0], span: $DIR/projection-no-regions-fn.rs:40:5: 40:23, test: IsOutlivedByAnyRegionIn(['_#2r, '_#3r]) }\n+error: `<T as std::iter::Iterator>::Item` does not outlive `'_#5r`\n   --> $DIR/projection-no-regions-fn.rs:40:5\n    |\n 40 |     Box::new(x.next())"}, {"sha": "e2a2d20d77d5c8475089917f56e2705896562846", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-closure.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.rs?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -55,7 +55,7 @@ where\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to -Znll\n-    //~| ERROR failed type test\n+    //~| ERROR `T` does not outlive\n     //~| ERROR free region `ReEarlyBound(0, 'b)` does not outlive free region `'_#2r`\n }\n \n@@ -67,7 +67,7 @@ where\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to -Znll\n-    //~| ERROR failed type test\n+    //~| ERROR `T` does not outlive\n     //~| ERROR free region `ReEarlyBound(1, 'b)` does not outlive free region `ReEarlyBound(0, 'a)`\n }\n \n@@ -89,7 +89,7 @@ where\n \n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to -Znll\n-    //~| ERROR failed type test\n+    //~| ERROR `T` does not outlive\n     //~| ERROR free region `ReEarlyBound(1, 'b)` does not outlive free region `ReEarlyBound(0, 'a)`\n }\n "}, {"sha": "cbd80d70bf95553504b351513166ea2ec6a38bf0", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-closure.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -83,7 +83,7 @@ note: External requirements\n     = note: where T: '_#3r\n     = note: where '_#2r: '_#3r\n \n-error: failed type test: TypeTest { generic_kind: T/#1, lower_bound: '_#5r, point: bb0[5], span: $DIR/projection-one-region-closure.rs:56:29: 56:55, test: IsOutlivedByAnyRegionIn(['_#3r]) }\n+error: `T` does not outlive `'_#5r`\n   --> $DIR/projection-one-region-closure.rs:56:29\n    |\n 56 |     with_signature(cell, t, |cell, t| require(cell, t));\n@@ -112,7 +112,7 @@ note: No external requirements\n                T\n            ]\n \n-error: failed type test: TypeTest { generic_kind: T/#2, lower_bound: '_#6r, point: bb0[5], span: $DIR/projection-one-region-closure.rs:68:29: 68:55, test: IsOutlivedByAnyRegionIn(['_#3r]) }\n+error: `T` does not outlive `'_#6r`\n   --> $DIR/projection-one-region-closure.rs:68:29\n    |\n 68 |     with_signature(cell, t, |cell, t| require(cell, t));\n@@ -142,7 +142,7 @@ note: No external requirements\n                T\n            ]\n \n-error: failed type test: TypeTest { generic_kind: T/#2, lower_bound: '_#6r, point: bb0[5], span: $DIR/projection-one-region-closure.rs:90:29: 90:55, test: IsOutlivedByAnyRegionIn(['_#3r]) }\n+error: `T` does not outlive `'_#6r`\n   --> $DIR/projection-one-region-closure.rs:90:29\n    |\n 90 |     with_signature(cell, t, |cell, t| require(cell, t));"}, {"sha": "42bfdfcf9f91b8684b6a5c455632e089c2b379d1", "filename": "src/test/ui/nll/ty-outlives/projection-two-region-trait-bound-closure.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.rs?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -48,7 +48,7 @@ where\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to -Znll\n-    //~| ERROR failed type test\n+    //~| ERROR `<T as Anything<'_#5r, '_#6r>>::AssocType` does not outlive `'_#7r`\n }\n \n #[rustc_regions]\n@@ -59,7 +59,7 @@ where\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to -Znll\n-    //~| ERROR failed type test\n+    //~| ERROR `<T as Anything<'_#6r, '_#7r>>::AssocType` does not outlive `'_#8r`\n }\n \n #[rustc_regions]\n@@ -80,7 +80,7 @@ where\n \n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to -Znll\n-    //~| ERROR failed type test\n+    //~| ERROR `<T as Anything<'_#6r, '_#7r>>::AssocType` does not outlive `'_#8r`\n }\n \n #[rustc_regions]"}, {"sha": "5b708a0d7e6297d70f46f3c907e0b285f962a4ac", "filename": "src/test/ui/nll/ty-outlives/projection-two-region-trait-bound-closure.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -152,7 +152,7 @@ note: External requirements\n     = note: number of external vids: 3\n     = note: where <T as Anything<ReClosureBound('_#1r), ReClosureBound('_#1r)>>::AssocType: '_#2r\n \n-error: failed type test: TypeTest { generic_kind: ProjectionTy { substs: Slice([T, '_#5r, '_#6r]), item_def_id: DefId(0/0:5 ~ projection_two_region_trait_bound_closure[317d]::Anything[0]::AssocType[0]) }, lower_bound: '_#7r, point: bb0[5], span: $DIR/projection-two-region-trait-bound-closure.rs:49:29: 49:55, test: Any([IsOutlivedByAnyRegionIn(['_#6r, '_#5r]), All([IsOutlivedByAnyRegionIn(['_#4r]), IsOutlivedByAllRegionsIn(['_#5r, '_#6r])])]) }\n+error: `<T as Anything<'_#5r, '_#6r>>::AssocType` does not outlive `'_#7r`\n   --> $DIR/projection-two-region-trait-bound-closure.rs:49:29\n    |\n 49 |     with_signature(cell, t, |cell, t| require(cell, t));\n@@ -166,7 +166,7 @@ note: No external requirements\n 47 | |     T: Anything<'b, 'c>,\n 48 | | {\n ...  |\n-51 | |     //~| ERROR failed type test\n+51 | |     //~| ERROR `<T as Anything<'_#5r, '_#6r>>::AssocType` does not outlive `'_#7r`\n 52 | | }\n    | |_^\n    |\n@@ -176,7 +176,7 @@ note: No external requirements\n                T\n            ]\n \n-error: failed type test: TypeTest { generic_kind: ProjectionTy { substs: Slice([T, '_#6r, '_#7r]), item_def_id: DefId(0/0:5 ~ projection_two_region_trait_bound_closure[317d]::Anything[0]::AssocType[0]) }, lower_bound: '_#8r, point: bb0[5], span: $DIR/projection-two-region-trait-bound-closure.rs:60:29: 60:55, test: Any([IsOutlivedByAnyRegionIn(['_#7r, '_#6r]), All([IsOutlivedByAnyRegionIn(['_#4r]), IsOutlivedByAllRegionsIn(['_#6r, '_#7r])])]) }\n+error: `<T as Anything<'_#6r, '_#7r>>::AssocType` does not outlive `'_#8r`\n   --> $DIR/projection-two-region-trait-bound-closure.rs:60:29\n    |\n 60 |     with_signature(cell, t, |cell, t| require(cell, t));\n@@ -190,7 +190,7 @@ note: No external requirements\n 57 | |     T: Anything<'b, 'c>,\n 58 | |     'a: 'a,\n ...  |\n-62 | |     //~| ERROR failed type test\n+62 | |     //~| ERROR `<T as Anything<'_#6r, '_#7r>>::AssocType` does not outlive `'_#8r`\n 63 | | }\n    | |_^\n    |\n@@ -201,7 +201,7 @@ note: No external requirements\n                T\n            ]\n \n-error: failed type test: TypeTest { generic_kind: ProjectionTy { substs: Slice([T, '_#6r, '_#7r]), item_def_id: DefId(0/0:5 ~ projection_two_region_trait_bound_closure[317d]::Anything[0]::AssocType[0]) }, lower_bound: '_#8r, point: bb0[5], span: $DIR/projection-two-region-trait-bound-closure.rs:81:29: 81:55, test: Any([IsOutlivedByAnyRegionIn(['_#7r, '_#6r]), All([IsOutlivedByAnyRegionIn(['_#4r]), IsOutlivedByAllRegionsIn(['_#6r, '_#7r])])]) }\n+error: `<T as Anything<'_#6r, '_#7r>>::AssocType` does not outlive `'_#8r`\n   --> $DIR/projection-two-region-trait-bound-closure.rs:81:29\n    |\n 81 |     with_signature(cell, t, |cell, t| require(cell, t));\n@@ -215,7 +215,7 @@ note: No external requirements\n 68 | |     T: Anything<'b, 'c>,\n 69 | |     T::AssocType: 'a,\n ...  |\n-83 | |     //~| ERROR failed type test\n+83 | |     //~| ERROR `<T as Anything<'_#6r, '_#7r>>::AssocType` does not outlive `'_#8r`\n 84 | | }\n    | |_^\n    |"}, {"sha": "14e2eb26976ab4190fe8008a0c5499fa8c7c711a", "filename": "src/test/ui/nll/ty-outlives/ty-param-closure-outlives-from-return-type.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-return-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-return-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-return-type.rs?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -36,7 +36,7 @@ where\n \n     with_signature(x, |y| y)\n     //~^ WARNING not reporting region error due to -Znll\n-    //~| ERROR failed type test\n+    //~| ERROR `T` does not outlive\n }\n \n fn correct_region<'a, T>(x: Box<T>) -> Box<Debug + 'a>\n@@ -52,7 +52,7 @@ where\n {\n     x\n     //~^ WARNING not reporting region error due to -Znll\n-    //~| ERROR failed type test\n+    //~| ERROR `T` does not outlive\n }\n \n fn outlives_region<'a, 'b, T>(x: Box<T>) -> Box<Debug + 'a>"}, {"sha": "37ebc38da4dae93a3d9cba2c87af4b2835c4d314", "filename": "src/test/ui/nll/ty-outlives/ty-param-closure-outlives-from-return-type.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-return-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-return-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-return-type.stderr?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -25,7 +25,7 @@ note: External requirements\n    = note: number of external vids: 3\n    = note: where T: '_#2r\n \n-error: failed type test: TypeTest { generic_kind: T/#1, lower_bound: '_#4r, point: bb0[5], span: $DIR/ty-param-closure-outlives-from-return-type.rs:37:23: 37:28, test: IsOutlivedByAnyRegionIn(['_#2r]) }\n+error: `T` does not outlive `'_#4r`\n   --> $DIR/ty-param-closure-outlives-from-return-type.rs:37:23\n    |\n 37 |     with_signature(x, |y| y)\n@@ -39,7 +39,7 @@ note: No external requirements\n 28 | |     T: Debug,\n 29 | | {\n ...  |\n-39 | |     //~| ERROR failed type test\n+39 | |     //~| ERROR `T` does not outlive\n 40 | | }\n    | |_^\n    |\n@@ -48,7 +48,7 @@ note: No external requirements\n                T\n            ]\n \n-error: failed type test: TypeTest { generic_kind: T/#2, lower_bound: '_#4r, point: bb0[3], span: $DIR/ty-param-closure-outlives-from-return-type.rs:53:5: 53:6, test: IsOutlivedByAnyRegionIn(['_#2r, '_#3r]) }\n+error: `T` does not outlive `'_#4r`\n   --> $DIR/ty-param-closure-outlives-from-return-type.rs:53:5\n    |\n 53 |     x"}, {"sha": "beed1a740eac355e2eb124ae66af0684392bb0aa", "filename": "src/test/ui/nll/ty-outlives/ty-param-closure-outlives-from-where-clause.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-where-clause.rs?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -36,7 +36,7 @@ where\n #[rustc_regions]\n fn no_region<'a, T>(a: Cell<&'a ()>, b: T) {\n     with_signature(a, b, |x, y| {\n-        //~^ ERROR failed type test\n+        //~^ ERROR `T` does not outlive\n         //\n         // See `correct_region`, which explains the point of this\n         // test.  The only difference is that, in the case of this\n@@ -74,7 +74,7 @@ where\n     T: 'b,\n {\n     with_signature(a, b, |x, y| {\n-        //~^ ERROR failed type test\n+        //~^ ERROR `T` does not outlive\n         // See `correct_region`\n         require(&x, &y)\n         //~^ WARNING not reporting region error due to -Znll"}, {"sha": "78445eb47c328c38c078a07086da5c6a77b78058", "filename": "src/test/ui/nll/ty-outlives/ty-param-closure-outlives-from-where-clause.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-where-clause.stderr?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -15,7 +15,7 @@ note: External requirements\n    |\n 38 |       with_signature(a, b, |x, y| {\n    |  __________________________^\n-39 | |         //~^ ERROR failed type test\n+39 | |         //~^ ERROR `T` does not outlive\n 40 | |         //\n 41 | |         // See `correct_region`, which explains the point of this\n ...  |\n@@ -58,7 +58,7 @@ note: External requirements\n    |\n 76 |       with_signature(a, b, |x, y| {\n    |  __________________________^\n-77 | |         //~^ ERROR failed type test\n+77 | |         //~^ ERROR `T` does not outlive\n 78 | |         // See `correct_region`\n 79 | |         require(&x, &y)\n 80 | |         //~^ WARNING not reporting region error due to -Znll\n@@ -94,12 +94,12 @@ note: External requirements\n    = note: number of external vids: 4\n    = note: where T: '_#3r\n \n-error: failed type test: TypeTest { generic_kind: T/#0, lower_bound: '_#3r, point: bb0[5], span: $DIR/ty-param-closure-outlives-from-where-clause.rs:38:26: 47:6, test: IsOutlivedByAnyRegionIn(['_#2r]) }\n+error: `T` does not outlive `'_#3r`\n   --> $DIR/ty-param-closure-outlives-from-where-clause.rs:38:26\n    |\n 38 |       with_signature(a, b, |x, y| {\n    |  __________________________^\n-39 | |         //~^ ERROR failed type test\n+39 | |         //~^ ERROR `T` does not outlive\n 40 | |         //\n 41 | |         // See `correct_region`, which explains the point of this\n ...  |\n@@ -112,7 +112,7 @@ note: No external requirements\n    |\n 37 | / fn no_region<'a, T>(a: Cell<&'a ()>, b: T) {\n 38 | |     with_signature(a, b, |x, y| {\n-39 | |         //~^ ERROR failed type test\n+39 | |         //~^ ERROR `T` does not outlive\n 40 | |         //\n ...  |\n 47 | |     })\n@@ -140,12 +140,12 @@ note: No external requirements\n                T\n            ]\n \n-error: failed type test: TypeTest { generic_kind: T/#1, lower_bound: '_#5r, point: bb0[5], span: $DIR/ty-param-closure-outlives-from-where-clause.rs:76:26: 81:6, test: IsOutlivedByAnyRegionIn(['_#1r, '_#3r]) }\n+error: `T` does not outlive `'_#5r`\n   --> $DIR/ty-param-closure-outlives-from-where-clause.rs:76:26\n    |\n 76 |       with_signature(a, b, |x, y| {\n    |  __________________________^\n-77 | |         //~^ ERROR failed type test\n+77 | |         //~^ ERROR `T` does not outlive\n 78 | |         // See `correct_region`\n 79 | |         require(&x, &y)\n 80 | |         //~^ WARNING not reporting region error due to -Znll"}, {"sha": "a1e636cbc444bfae288ae97ba244f24cfb680907", "filename": "src/test/ui/nll/ty-outlives/ty-param-fn-body.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn-body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn-body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn-body.rs?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -29,7 +29,7 @@ fn region_within_body<T>(t: T) {\n fn region_static<'a, T>(cell: Cell<&'a usize>, t: T) {\n     outlives(cell, t)\n     //~^ WARNING not reporting region error due to -Znll\n-    //~| ERROR failed type test\n+    //~| ERROR `T` does not outlive\n }\n \n fn outlives<'a, T>(x: Cell<&'a usize>, y: T)"}, {"sha": "bbe55c52b6ed5684941ee6985171fd5a65144ce5", "filename": "src/test/ui/nll/ty-outlives/ty-param-fn-body.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn-body.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn-body.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn-body.stderr?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -4,7 +4,7 @@ warning: not reporting region error due to -Znll\n 30 |     outlives(cell, t)\n    |     ^^^^^^^^\n \n-error: failed type test: TypeTest { generic_kind: T/#0, lower_bound: '_#4r, point: bb0[4], span: $DIR/ty-param-fn-body.rs:30:5: 30:22, test: IsOutlivedByAnyRegionIn(['_#2r]) }\n+error: `T` does not outlive `'_#4r`\n   --> $DIR/ty-param-fn-body.rs:30:5\n    |\n 30 |     outlives(cell, t)"}, {"sha": "76783af4ceb0e9b39075ac702db02df3246d3ad4", "filename": "src/test/ui/nll/ty-outlives/ty-param-fn.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn.rs?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -21,7 +21,7 @@ where\n {\n     x\n     //~^ WARNING not reporting region error due to -Znll\n-    //~| ERROR failed type test\n+    //~| ERROR `T` does not outlive\n }\n \n fn correct_region<'a, T>(x: Box<T>) -> Box<Debug + 'a>\n@@ -37,7 +37,7 @@ where\n {\n     x\n     //~^ WARNING not reporting region error due to -Znll\n-    //~| ERROR failed type test\n+    //~| ERROR `T` does not outlive\n }\n \n fn outlives_region<'a, 'b, T>(x: Box<T>) -> Box<Debug + 'a>"}, {"sha": "02c4ebbd5aca9c4f9fc46fd42f19f023e1944ac9", "filename": "src/test/ui/nll/ty-outlives/ty-param-fn.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4f43c5b1e78115083254e6df12e0d34f7da9748b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn.stderr?ref=4f43c5b1e78115083254e6df12e0d34f7da9748b", "patch": "@@ -10,13 +10,13 @@ warning: not reporting region error due to -Znll\n 38 |     x\n    |     ^\n \n-error: failed type test: TypeTest { generic_kind: T/#1, lower_bound: '_#3r, point: bb0[3], span: $DIR/ty-param-fn.rs:22:5: 22:6, test: IsOutlivedByAnyRegionIn(['_#2r]) }\n+error: `T` does not outlive `'_#3r`\n   --> $DIR/ty-param-fn.rs:22:5\n    |\n 22 |     x\n    |     ^\n \n-error: failed type test: TypeTest { generic_kind: T/#2, lower_bound: '_#4r, point: bb0[3], span: $DIR/ty-param-fn.rs:38:5: 38:6, test: IsOutlivedByAnyRegionIn(['_#2r, '_#3r]) }\n+error: `T` does not outlive `'_#4r`\n   --> $DIR/ty-param-fn.rs:38:5\n    |\n 38 |     x"}]}