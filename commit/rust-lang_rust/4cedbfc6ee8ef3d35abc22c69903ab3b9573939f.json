{"sha": "4cedbfc6ee8ef3d35abc22c69903ab3b9573939f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjZWRiZmM2ZWU4ZWYzZDM1YWJjMjJjNjk5MDNhYjNiOTU3MzkzOWY=", "commit": {"author": {"name": "Gauri", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2018-01-13T06:29:35Z"}, "committer": {"name": "Gauri", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2018-01-13T06:29:35Z"}, "message": "fix mispositioned span", "tree": {"sha": "28e98bd277dc3bd6b5c68e6c3e108db0246e2799", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28e98bd277dc3bd6b5c68e6c3e108db0246e2799"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cedbfc6ee8ef3d35abc22c69903ab3b9573939f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cedbfc6ee8ef3d35abc22c69903ab3b9573939f", "html_url": "https://github.com/rust-lang/rust/commit/4cedbfc6ee8ef3d35abc22c69903ab3b9573939f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cedbfc6ee8ef3d35abc22c69903ab3b9573939f/comments", "author": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73ac5d6a80f26c692f1e084b72d69637d7de2c8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/73ac5d6a80f26c692f1e084b72d69637d7de2c8c", "html_url": "https://github.com/rust-lang/rust/commit/73ac5d6a80f26c692f1e084b72d69637d7de2c8c"}], "stats": {"total": 69, "additions": 2, "deletions": 67}, "files": [{"sha": "ae0766eeeefc3bf831bf5781b56a3f44ffc5d742", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4cedbfc6ee8ef3d35abc22c69903ab3b9573939f/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cedbfc6ee8ef3d35abc22c69903ab3b9573939f/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=4cedbfc6ee8ef3d35abc22c69903ab3b9573939f", "patch": "@@ -1187,7 +1187,7 @@ impl EmitterWriter {\n                     let sub_len = parts[0].snippet.trim().chars().fold(0, |acc, ch| {\n                         acc + unicode_width::UnicodeWidthChar::width(ch).unwrap_or(0)\n                     });\n-                    let underline_start = span_start_pos.col.0 + start;\n+                    let underline_start = span_start_pos.col_display + start;\n                     let underline_end = span_start_pos.col.0 + start + sub_len;\n                     for p in underline_start..underline_end {\n                         buffer.putc(row_num,"}, {"sha": "abbf3da513a6faf6272002919d26057e50d9aefd", "filename": "src/test/ui/lint/use_suggestion_json.stderr", "status": "modified", "additions": 1, "deletions": 66, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/4cedbfc6ee8ef3d35abc22c69903ab3b9573939f/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4cedbfc6ee8ef3d35abc22c69903ab3b9573939f/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr?ref=4cedbfc6ee8ef3d35abc22c69903ab3b9573939f", "patch": "@@ -2,72 +2,7 @@\n   \"message\": \"cannot find type `Iter` in this scope\",\n   \"code\": {\n     \"code\": \"E0412\",\n-    \"explanation\": \"\n-The type name used is not in scope.\n-\n-Erroneous code examples:\n-\n-```compile_fail,E0412\n-impl Something {} // error: type name `Something` is not in scope\n-\n-// or:\n-\n-trait Foo {\n-    fn bar(N); // error: type name `N` is not in scope\n-}\n-\n-// or:\n-\n-fn foo(x: T) {} // type name `T` is not in scope\n-```\n-\n-To fix this error, please verify you didn't misspell the type name, you did\n-declare it or imported it into the scope. Examples:\n-\n-```\n-struct Something;\n-\n-impl Something {} // ok!\n-\n-// or:\n-\n-trait Foo {\n-    type N;\n-\n-    fn bar(_: Self::N); // ok!\n-}\n-\n-// or:\n-\n-fn foo<T>(x: T) {} // ok!\n-```\n-\n-Another case that causes this error is when a type is imported into a parent\n-module. To fix this, you can follow the suggestion and use File directly or\n-`use super::File;` which will import the types from the parent namespace. An\n-example that causes this error is below:\n-\n-```compile_fail,E0412\n-use std::fs::File;\n-\n-mod foo {\n-    fn some_function(f: File) {}\n-}\n-```\n-\n-```\n-use std::fs::File;\n-\n-mod foo {\n-    // either\n-    use super::File;\n-    // or\n-    // use std::fs::File;\n-    fn foo(f: File) {}\n-}\n-# fn main() {} // don't insert it for us; that'll break imports\n-```\n-\"\n+    \"explanation\": null\n   },\n   \"level\": \"error\",\n   \"spans\": ["}]}