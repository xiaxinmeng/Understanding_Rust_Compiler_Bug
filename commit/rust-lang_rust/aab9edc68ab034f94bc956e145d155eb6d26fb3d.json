{"sha": "aab9edc68ab034f94bc956e145d155eb6d26fb3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhYjllZGM2OGFiMDM0Zjk0YmM5NTZlMTQ1ZDE1NWViNmQyNmZiM2Q=", "commit": {"author": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-07-15T15:48:28Z"}, "committer": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-07-27T03:28:06Z"}, "message": "Minor clean up", "tree": {"sha": "75978807307e1b39c238e4fa7a747dcc1b3e8f62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75978807307e1b39c238e4fa7a747dcc1b3e8f62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aab9edc68ab034f94bc956e145d155eb6d26fb3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aab9edc68ab034f94bc956e145d155eb6d26fb3d", "html_url": "https://github.com/rust-lang/rust/commit/aab9edc68ab034f94bc956e145d155eb6d26fb3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aab9edc68ab034f94bc956e145d155eb6d26fb3d/comments", "author": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "committer": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1f22c018e6b2fd64f7f3f94fe48b66c719e243a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1f22c018e6b2fd64f7f3f94fe48b66c719e243a", "html_url": "https://github.com/rust-lang/rust/commit/c1f22c018e6b2fd64f7f3f94fe48b66c719e243a"}], "stats": {"total": 63, "additions": 27, "deletions": 36}, "files": [{"sha": "793eb16b0377c930bade2a0c58ab58e59df24a86", "filename": "src/test/ui/self/elision/README.md", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2FREADME.md?ref=aab9edc68ab034f94bc956e145d155eb6d26fb3d", "patch": "@@ -1,5 +1,5 @@\n Test cases intended to to document behavior and try to exhaustively\n-explore the combinations. \n+explore the combinations.\n \n ## Confidence\n \n@@ -23,11 +23,11 @@ in the \"confidence\" field in the following table. Values:\n | `struct.rs` | `Struct` | `Struct` | ignore `self` parameter | 100% |\n | `alias.rs` | `Struct` | `Alias` | ignore `self` parameter | 100% |\n | `ref-self.rs` | `Struct` | `&Self` | take lifetime from `&Self` | 100% |\n-| `ref-mut-self.rs` | `Struct` | `&mut Self` | take lifetime from `&Self` | 100% |\n+| `ref-mut-self.rs` | `Struct` | `&mut Self` | take lifetime from `&mut Self` | 100% |\n | `ref-struct.rs` | `Struct` | `&Struct` | take lifetime from `&Self` | 50% |\n-| `ref-mut-struct.rs` | `Struct` | `&Struct` | take lifetime from `&Self` | 50% |\n+| `ref-mut-struct.rs` | `Struct` | `&mut Struct` | take lifetime from `&mut Self` | 50% |\n | `ref-alias.rs` | `Struct` | `&Alias` | ignore `Alias` | 0% |\n-| `ref-mut-alias.rs` | `Struct` | `&Alias` | ignore `Alias` | 0% |\n+| `ref-mut-alias.rs` | `Struct` | `&mut Alias` | ignore `Alias` | 0% |\n | `lt-self.rs` | `Struct<'a>` | `Self` | ignore `Self` (and hence `'a`) | 25% |\n | `lt-struct.rs` | `Struct<'a>` | `Self` | ignore `Self` (and hence `'a`) | 0% |\n | `lt-alias.rs`   | `Alias<'a>` | `Self` | ignore `Self` (and hence `'a`) | 0% |\n@@ -42,4 +42,3 @@ In each case, we test the following patterns:\n - `self: Box<Pin<XXX>>`\n \n In the non-reference cases, `Pin` causes errors so we substitute `Rc`.\n-"}, {"sha": "a7ea47bb7f6de87e037492dff3b737b6254ef465", "filename": "src/test/ui/self/elision/ref-mut-self.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self.rs?ref=aab9edc68ab034f94bc956e145d155eb6d26fb3d", "patch": "@@ -5,8 +5,6 @@ use std::pin::Pin;\n \n struct Struct { }\n \n-type Alias = Struct;\n-\n impl Struct {\n     // Test using `&mut self` sugar:\n "}, {"sha": "37984cd72fbace0d3d7cdd38d830834ee0fbf551", "filename": "src/test/ui/self/elision/ref-mut-self.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self.stderr?ref=aab9edc68ab034f94bc956e145d155eb6d26fb3d", "patch": "@@ -1,5 +1,5 @@\n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-mut-self.rs:14:9\n+  --> $DIR/ref-mut-self.rs:12:9\n    |\n LL |     fn ref_self(&mut self, f: &u32) -> &u32 {\n    |                               ----     ----\n@@ -9,7 +9,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-mut-self.rs:20:9\n+  --> $DIR/ref-mut-self.rs:18:9\n    |\n LL |     fn ref_Self(self: &mut Self, f: &u32) -> &u32 {\n    |                                     ----     ----\n@@ -19,7 +19,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-mut-self.rs:24:9\n+  --> $DIR/ref-mut-self.rs:22:9\n    |\n LL |     fn box_ref_Self(self: Box<&mut Self>, f: &u32) -> &u32 {\n    |                                              ----     ----\n@@ -29,7 +29,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-mut-self.rs:28:9\n+  --> $DIR/ref-mut-self.rs:26:9\n    |\n LL |     fn pin_ref_Self(self: Pin<&mut Self>, f: &u32) -> &u32 {\n    |                                              ----     ----\n@@ -39,7 +39,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-mut-self.rs:32:9\n+  --> $DIR/ref-mut-self.rs:30:9\n    |\n LL |     fn box_box_ref_Self(self: Box<Box<&mut Self>>, f: &u32) -> &u32 {\n    |                                                       ----     ----\n@@ -49,7 +49,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-mut-self.rs:36:9\n+  --> $DIR/ref-mut-self.rs:34:9\n    |\n LL |     fn box_pin_ref_Self(self: Box<Pin<&mut Self>>, f: &u32) -> &u32 {\n    |                                                       ----     ----"}, {"sha": "795ddf8ac1354066681f475f85c027ca48c6b536", "filename": "src/test/ui/self/elision/ref-mut-struct.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct.rs?ref=aab9edc68ab034f94bc956e145d155eb6d26fb3d", "patch": "@@ -5,8 +5,6 @@ use std::pin::Pin;\n \n struct Struct { }\n \n-type Alias = Struct;\n-\n impl Struct {\n     // Test using `&mut Struct` explicitly:\n "}, {"sha": "2a4826905b94a0b8e1d04169a4b3baae6e20a160", "filename": "src/test/ui/self/elision/ref-mut-struct.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct.stderr?ref=aab9edc68ab034f94bc956e145d155eb6d26fb3d", "patch": "@@ -1,5 +1,5 @@\n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-mut-struct.rs:14:9\n+  --> $DIR/ref-mut-struct.rs:12:9\n    |\n LL |     fn ref_Struct(self: &mut Struct, f: &u32) -> &u32 {\n    |                                         ----     ----\n@@ -9,7 +9,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-mut-struct.rs:18:9\n+  --> $DIR/ref-mut-struct.rs:16:9\n    |\n LL |     fn box_ref_Struct(self: Box<&mut Struct>, f: &u32) -> &u32 {\n    |                                                  ----     ----\n@@ -19,7 +19,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-mut-struct.rs:22:9\n+  --> $DIR/ref-mut-struct.rs:20:9\n    |\n LL |     fn pin_ref_Struct(self: Pin<&mut Struct>, f: &u32) -> &u32 {\n    |                                                  ----     ----\n@@ -29,7 +29,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-mut-struct.rs:26:9\n+  --> $DIR/ref-mut-struct.rs:24:9\n    |\n LL |     fn box_box_ref_Struct(self: Box<Box<&mut Struct>>, f: &u32) -> &u32 {\n    |                                                           ----     ----\n@@ -39,7 +39,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-mut-struct.rs:30:9\n+  --> $DIR/ref-mut-struct.rs:28:9\n    |\n LL |     fn box_pin_ref_Struct(self: Box<Pin<&mut Struct>>, f: &u32) -> &u32 {\n    |                                                           ----     ----"}, {"sha": "9655c11f45e2c8b8c4832db05222cac3cd344ee6", "filename": "src/test/ui/self/elision/ref-self.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self.rs?ref=aab9edc68ab034f94bc956e145d155eb6d26fb3d", "patch": "@@ -5,8 +5,6 @@ use std::pin::Pin;\n \n struct Struct { }\n \n-type Alias = Struct;\n-\n impl Struct {\n     // Test using `&self` sugar:\n "}, {"sha": "342d6d2b36357bffa93dc9d84a556e6f716637df", "filename": "src/test/ui/self/elision/ref-struct.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct.rs?ref=aab9edc68ab034f94bc956e145d155eb6d26fb3d", "patch": "@@ -5,8 +5,6 @@ use std::pin::Pin;\n \n struct Struct { }\n \n-type Alias = Struct;\n-\n impl Struct {\n     // Test using `&Struct` explicitly:\n "}, {"sha": "186e651c143bf547030ba09beea8de646230a070", "filename": "src/test/ui/self/elision/ref-struct.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct.stderr?ref=aab9edc68ab034f94bc956e145d155eb6d26fb3d", "patch": "@@ -1,5 +1,5 @@\n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-struct.rs:14:9\n+  --> $DIR/ref-struct.rs:12:9\n    |\n LL |     fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n    |                                     ----     ----\n@@ -9,7 +9,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-struct.rs:18:9\n+  --> $DIR/ref-struct.rs:16:9\n    |\n LL |     fn box_ref_Struct(self: Box<&Struct>, f: &u32) -> &u32 {\n    |                                              ----     ----\n@@ -19,7 +19,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-struct.rs:22:9\n+  --> $DIR/ref-struct.rs:20:9\n    |\n LL |     fn pin_ref_Struct(self: Pin<&Struct>, f: &u32) -> &u32 {\n    |                                              ----     ----\n@@ -29,7 +29,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-struct.rs:26:9\n+  --> $DIR/ref-struct.rs:24:9\n    |\n LL |     fn box_box_ref_Struct(self: Box<Box<&Struct>>, f: &u32) -> &u32 {\n    |                                                       ----     ----\n@@ -39,7 +39,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-struct.rs:30:9\n+  --> $DIR/ref-struct.rs:28:9\n    |\n LL |     fn box_pin_Struct(self: Box<Pin<&Struct>>, f: &u32) -> &u32 {\n    |                                                   ----     ----"}, {"sha": "227e993bd3c61bff39d00748017868088d2ed9b4", "filename": "src/test/ui/self/elision/struct.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2Fstruct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Felision%2Fstruct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fstruct.rs?ref=aab9edc68ab034f94bc956e145d155eb6d26fb3d", "patch": "@@ -8,26 +8,24 @@ use std::rc::Rc;\n struct Struct { }\n \n impl Struct {\n-    // Test using `&mut Struct` explicitly:\n-\n     fn ref_Struct(self: Struct, f: &u32) -> &u32 {\n-        f //~ ERROR lifetime mismatch\n+        f\n     }\n \n     fn box_Struct(self: Box<Struct>, f: &u32) -> &u32 {\n-        f //~ ERROR lifetime mismatch\n+        f\n     }\n \n     fn rc_Struct(self: Rc<Struct>, f: &u32) -> &u32 {\n-        f //~ ERROR lifetime mismatch\n+        f\n     }\n \n     fn box_box_Struct(self: Box<Box<Struct>>, f: &u32) -> &u32 {\n-        f //~ ERROR lifetime mismatch\n+        f\n     }\n \n     fn box_rc_Struct(self: Box<Rc<Struct>>, f: &u32) -> &u32 {\n-        f //~ ERROR lifetime mismatch\n+        f\n     }\n }\n "}, {"sha": "f04bd83ab6e4c4360467105181cf12c2c1fc990c", "filename": "src/test/ui/self/self_lifetime.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Fself_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aab9edc68ab034f94bc956e145d155eb6d26fb3d/src%2Ftest%2Fui%2Fself%2Fself_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fself_lifetime.rs?ref=aab9edc68ab034f94bc956e145d155eb6d26fb3d", "patch": "@@ -1,5 +1,7 @@\n // check-pass\n \n+// https://github.com/rust-lang/rust/pull/60944#issuecomment-495346120\n+\n struct Foo<'a>(&'a ());\n impl<'a> Foo<'a> {\n     fn foo<'b>(self: &'b Foo<'a>) -> &() { self.0 }"}]}