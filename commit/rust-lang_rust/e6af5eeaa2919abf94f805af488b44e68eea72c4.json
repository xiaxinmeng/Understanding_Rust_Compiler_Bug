{"sha": "e6af5eeaa2919abf94f805af488b44e68eea72c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2YWY1ZWVhYTI5MTlhYmY5NGY4MDVhZjQ4OGI0NGU2OGVlYTcyYzQ=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-07-31T00:56:53Z"}, "committer": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-07-31T01:38:15Z"}, "message": "Fix pretty-printing of consecutive idents.", "tree": {"sha": "3cad289ec7423052b8b1b47f396daf3f862e2a7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cad289ec7423052b8b1b47f396daf3f862e2a7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6af5eeaa2919abf94f805af488b44e68eea72c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6af5eeaa2919abf94f805af488b44e68eea72c4", "html_url": "https://github.com/rust-lang/rust/commit/e6af5eeaa2919abf94f805af488b44e68eea72c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6af5eeaa2919abf94f805af488b44e68eea72c4/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3819b6b3d11c2ae8d9a368049d679d2a096569a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3819b6b3d11c2ae8d9a368049d679d2a096569a0", "html_url": "https://github.com/rust-lang/rust/commit/3819b6b3d11c2ae8d9a368049d679d2a096569a0"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "a2479ef1365194780778fb32f4f71bf03bde5973", "filename": "src/libsyntax/print/pp.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e6af5eeaa2919abf94f805af488b44e68eea72c4/src%2Flibsyntax%2Fprint%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6af5eeaa2919abf94f805af488b44e68eea72c4/src%2Flibsyntax%2Fprint%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpp.rs?ref=e6af5eeaa2919abf94f805af488b44e68eea72c4", "patch": "@@ -118,7 +118,8 @@ fn mk_printer(out: io::writer, linewidth: uint) -> printer {\n                mut top: 0u,\n                mut bottom: 0u,\n                print_stack: dvec(),\n-               mut pending_indentation: 0})\n+               mut pending_indentation: 0,\n+               mut token_tree_last_was_ident: false})\n }\n \n \n@@ -223,7 +224,8 @@ type printer_ = {\n     // stack of blocks-in-progress being flushed by print\n     print_stack: dvec<print_stack_elt>,\n     // buffered indentation to avoid writing trailing whitespace\n-    mut pending_indentation: int\n+    mut pending_indentation: int,\n+    mut token_tree_last_was_ident: bool\n };\n \n enum printer {"}, {"sha": "cf97bd7c692674a8266ea416b9aa35eb0a79b3a6", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e6af5eeaa2919abf94f805af488b44e68eea72c4/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6af5eeaa2919abf94f805af488b44e68eea72c4/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=e6af5eeaa2919abf94f805af488b44e68eea72c4", "patch": "@@ -622,12 +622,14 @@ fn print_tt(s: ps, tt: ast::token_tree) {\n         for tts.each() |tt_elt| { print_tt(s, tt_elt); }\n       }\n       ast::tt_tok(_, tk) {\n-        word(s.s, parse::token::to_str(*s.intr, tk));\n         alt tk {\n-          // gotta keep them separated\n-          parse::token::IDENT(*) { word(s.s, ~\" \") }\n-          _ {}\n+          parse::token::IDENT(*) { // don't let idents run together\n+            if s.s.token_tree_last_was_ident { word(s.s, ~\" \") }\n+            s.s.token_tree_last_was_ident = true;\n+          }\n+          _ { s.s.token_tree_last_was_ident = false; }\n         }\n+        word(s.s, parse::token::to_str(*s.intr, tk));\n       }\n       ast::tt_seq(_, tts, sep, zerok) {\n         word(s.s, ~\"$(\");\n@@ -638,9 +640,11 @@ fn print_tt(s: ps, tt: ast::token_tree) {\n           none {}\n         }\n         word(s.s, if zerok { ~\"*\" } else { ~\"+\" });\n+        s.s.token_tree_last_was_ident = false;\n       }\n       ast::tt_nonterminal(_, name) {\n         word(s.s, ~\"$\" + *name);\n+        s.s.token_tree_last_was_ident = true;\n       }\n     }\n }"}]}