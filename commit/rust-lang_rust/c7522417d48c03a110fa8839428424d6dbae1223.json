{"sha": "c7522417d48c03a110fa8839428424d6dbae1223", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NTIyNDE3ZDQ4YzAzYTExMGZhODgzOTQyODQyNGQ2ZGJhZTEyMjM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-05-04T00:55:53Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-05-09T00:04:00Z"}, "message": "libstd: Remove some residual mutable fields", "tree": {"sha": "2ec7b3cde198bfb29eaddb1d6fa87d9503438d91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ec7b3cde198bfb29eaddb1d6fa87d9503438d91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7522417d48c03a110fa8839428424d6dbae1223", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7522417d48c03a110fa8839428424d6dbae1223", "html_url": "https://github.com/rust-lang/rust/commit/c7522417d48c03a110fa8839428424d6dbae1223", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7522417d48c03a110fa8839428424d6dbae1223/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d12d25534b01632f7b19fae85854032ebb1b319c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d12d25534b01632f7b19fae85854032ebb1b319c", "html_url": "https://github.com/rust-lang/rust/commit/d12d25534b01632f7b19fae85854032ebb1b319c"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "5e4f708f52fd4c3e3659f68d33db8a55928da4d4", "filename": "src/libstd/ebml.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c7522417d48c03a110fa8839428424d6dbae1223/src%2Flibstd%2Febml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7522417d48c03a110fa8839428424d6dbae1223/src%2Flibstd%2Febml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Febml.rs?ref=c7522417d48c03a110fa8839428424d6dbae1223", "patch": "@@ -600,11 +600,18 @@ pub mod writer {\n     use core::vec;\n \n     // ebml writing\n+    #[cfg(stage0)]\n     pub struct Encoder {\n         writer: @io::Writer,\n         priv mut size_positions: ~[uint],\n     }\n \n+    #[cfg(not(stage0))]\n+    pub struct Encoder {\n+        writer: @io::Writer,\n+        priv size_positions: ~[uint],\n+    }\n+\n     fn write_sized_vuint(w: @io::Writer, n: uint, size: uint) {\n         match size {\n             1u => w.write(&[0x80u8 | (n as u8)]),\n@@ -625,9 +632,22 @@ pub mod writer {\n         fail!(fmt!(\"vint to write too big: %?\", n));\n     }\n \n+    #[cfg(stage0)]\n+    pub fn Encoder(w: @io::Writer) -> Encoder {\n+        let size_positions: ~[uint] = ~[];\n+        Encoder {\n+            writer: w,\n+            mut size_positions: size_positions\n+        }\n+    }\n+\n+    #[cfg(not(stage0))]\n     pub fn Encoder(w: @io::Writer) -> Encoder {\n         let size_positions: ~[uint] = ~[];\n-        Encoder { writer: w, mut size_positions: size_positions }\n+        Encoder {\n+            writer: w,\n+            size_positions: size_positions\n+        }\n     }\n \n     // FIXME (#2741): Provide a function to write the standard ebml header."}, {"sha": "c815c9dd48062fac00c3023e403d5aa3049fec70", "filename": "src/libstd/json.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c7522417d48c03a110fa8839428424d6dbae1223/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7522417d48c03a110fa8839428424d6dbae1223/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=c7522417d48c03a110fa8839428424d6dbae1223", "patch": "@@ -220,11 +220,18 @@ impl serialize::Encoder for Encoder {\n     }\n }\n \n+#[cfg(stage0)]\n pub struct PrettyEncoder {\n     priv wr: @io::Writer,\n     priv mut indent: uint,\n }\n \n+#[cfg(not(stage0))]\n+pub struct PrettyEncoder {\n+    priv wr: @io::Writer,\n+    priv indent: uint,\n+}\n+\n pub fn PrettyEncoder(wr: @io::Writer) -> PrettyEncoder {\n     PrettyEncoder {\n         wr: wr,\n@@ -838,10 +845,16 @@ pub fn from_str(s: &str) -> Result<Json, Error> {\n     }\n }\n \n+#[cfg(stage0)]\n pub struct Decoder {\n     priv mut stack: ~[Json],\n }\n \n+#[cfg(not(stage0))]\n+pub struct Decoder {\n+    priv stack: ~[Json],\n+}\n+\n pub fn Decoder(json: Json) -> Decoder {\n     Decoder {\n         stack: ~[json]"}]}