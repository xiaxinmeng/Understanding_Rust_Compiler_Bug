{"sha": "e8ebf98742a46aef11d382d5cbad3d9bb9098b19", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4ZWJmOTg3NDJhNDZhZWYxMWQzODJkNWNiYWQzZDliYjkwOThiMTk=", "commit": {"author": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-06-26T20:43:27Z"}, "committer": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-06-26T20:43:27Z"}, "message": "Reorder some lines in `unpretty-expr-fn-arg.rs`", "tree": {"sha": "23c42945efaa62691eee0ccac5488f7335773e35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23c42945efaa62691eee0ccac5488f7335773e35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8ebf98742a46aef11d382d5cbad3d9bb9098b19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8ebf98742a46aef11d382d5cbad3d9bb9098b19", "html_url": "https://github.com/rust-lang/rust/commit/e8ebf98742a46aef11d382d5cbad3d9bb9098b19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8ebf98742a46aef11d382d5cbad3d9bb9098b19/comments", "author": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8b57723d41d5f8b58bc4796ecb4bde0ed00e639", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8b57723d41d5f8b58bc4796ecb4bde0ed00e639", "html_url": "https://github.com/rust-lang/rust/commit/a8b57723d41d5f8b58bc4796ecb4bde0ed00e639"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "6e1132a3372864b9c881ba8a6e1112ab9df3f25b", "filename": "src/test/ui/unpretty-expr-fn-arg.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e8ebf98742a46aef11d382d5cbad3d9bb9098b19/src%2Ftest%2Fui%2Funpretty-expr-fn-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8ebf98742a46aef11d382d5cbad3d9bb9098b19/src%2Ftest%2Fui%2Funpretty-expr-fn-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funpretty-expr-fn-arg.rs?ref=e8ebf98742a46aef11d382d5cbad3d9bb9098b19", "patch": "@@ -1,11 +1,11 @@\n // Regression test for the ICE described in #82328. The pretty-printer for\n-// compile-flags: -Zunpretty=hir,typed\n-// would previously retrieve type-checking results when entering a body,\n-// which means that type information was not available for expressions\n-// occurring in function signatures, as in the `foo` example below, leading\n-// to an ICE.\n+// `-Zunpretty=hir,typed` would previously retrieve type-checking results\n+// when entering a body, which means that type information was not available\n+// for expressions occurring in function signatures, as in the `foo` example\n+// below, leading to an ICE.\n \n // check-pass\n+// compile-flags: -Zunpretty=hir,typed\n #![allow(dead_code)]\n \n fn main() {}"}, {"sha": "cb04dfead73215e09a951f6c3b11ed6d93d37138", "filename": "src/test/ui/unpretty-expr-fn-arg.stdout", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e8ebf98742a46aef11d382d5cbad3d9bb9098b19/src%2Ftest%2Fui%2Funpretty-expr-fn-arg.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/e8ebf98742a46aef11d382d5cbad3d9bb9098b19/src%2Ftest%2Fui%2Funpretty-expr-fn-arg.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funpretty-expr-fn-arg.stdout?ref=e8ebf98742a46aef11d382d5cbad3d9bb9098b19", "patch": "@@ -1,11 +1,11 @@\n // Regression test for the ICE described in #82328. The pretty-printer for\n-// compile-flags: -Zunpretty=hir,typed\n-// would previously retrieve type-checking results when entering a body,\n-// which means that type information was not available for expressions\n-// occurring in function signatures, as in the `foo` example below, leading\n-// to an ICE.\n+// `-Zunpretty=hir,typed` would previously retrieve type-checking results\n+// when entering a body, which means that type information was not available\n+// for expressions occurring in function signatures, as in the `foo` example\n+// below, leading to an ICE.\n \n // check-pass\n+// compile-flags: -Zunpretty=hir,typed\n #![allow(dead_code)]\n #[prelude_import]\n use ::std::prelude::rust_2015::*;"}]}