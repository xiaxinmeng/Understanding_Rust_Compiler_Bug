{"sha": "a076fef2b647399f2fb0575830fb07320fb3b6f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwNzZmZWYyYjY0NzM5OWYyZmIwNTc1ODMwZmIwNzMyMGZiM2I2ZjU=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2013-09-30T15:44:58Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2013-09-30T23:44:25Z"}, "message": "Add new lint: non_uppercase_pattern_statics, for #7526.\n\nThis tries to warn about code like:\n    ```rust\n    match (0,0) {\n        (0, aha) => { ... },\n        ...\n    }\n    ```\nwhere `aha` is actually a static constant, not a binding.", "tree": {"sha": "714c1b311605131ae37b75c6248c93368d2be82c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/714c1b311605131ae37b75c6248c93368d2be82c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a076fef2b647399f2fb0575830fb07320fb3b6f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a076fef2b647399f2fb0575830fb07320fb3b6f5", "html_url": "https://github.com/rust-lang/rust/commit/a076fef2b647399f2fb0575830fb07320fb3b6f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a076fef2b647399f2fb0575830fb07320fb3b6f5/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8174618a05c44a9b90806aa7b848cb9b7ab62d25", "url": "https://api.github.com/repos/rust-lang/rust/commits/8174618a05c44a9b90806aa7b848cb9b7ab62d25", "html_url": "https://github.com/rust-lang/rust/commit/8174618a05c44a9b90806aa7b848cb9b7ab62d25"}], "stats": {"total": 129, "additions": 129, "deletions": 0}, "files": [{"sha": "0ce21bdf18ef948d0218945056cb89d66a2f87c5", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=a076fef2b647399f2fb0575830fb07320fb3b6f5", "patch": "@@ -11,6 +11,7 @@\n // LLVM wrappers are intended to be called from trans,\n // which already runs in a #[fixed_stack_segment]\n #[allow(cstack)];\n+#[allow(non_uppercase_pattern_statics)];\n \n use std::c_str::ToCStr;\n use std::hashmap::HashMap;"}, {"sha": "573d2a529d4b2623c2ab8a9d46fe5d6eec7a2bdd", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=a076fef2b647399f2fb0575830fb07320fb3b6f5", "patch": "@@ -11,6 +11,7 @@\n \n use middle::const_eval::{compare_const_vals, lookup_const_by_id};\n use middle::const_eval::{eval_const_expr, const_val, const_bool, const_float};\n+use middle::lint::non_uppercase_pattern_statics;\n use middle::pat_util::*;\n use middle::ty::*;\n use middle::ty;\n@@ -133,11 +134,30 @@ pub fn check_arms(cx: &MatchCheckCtxt, arms: &[Arm]) {\n                     _ => false\n                 }\n             };\n+\n+            // Lint for constants that look like binding identifiers (#7526)\n+            let pat_matches_non_uppercase_static: &fn(@Pat) = |p| {\n+                let msg = \"static constant in pattern should have an uppercase identifier\";\n+                match (&p.node, cx.tcx.def_map.find(&p.id)) {\n+                    (&PatIdent(_, ref path, _), Some(&DefStatic(_, false))) => {\n+                        // last identifier alone is right choice for this lint.\n+                        let ident = path.segments.last().identifier;\n+                        let s = cx.tcx.sess.str_of(ident);\n+                        if s.iter().any(|c| c.is_lowercase()) {\n+                            cx.tcx.sess.add_lint(non_uppercase_pattern_statics,\n+                                                 p.id, path.span, msg.to_owned());\n+                        }\n+                    }\n+                    _ => {}\n+                }\n+            };\n+\n             do walk_pat(*pat) |p| {\n                 if pat_matches_nan(p) {\n                     cx.tcx.sess.span_warn(p.span, \"unmatchable NaN in pattern, \\\n                                                    use the is_nan method in a guard instead\");\n                 }\n+                pat_matches_non_uppercase_static(p);\n                 true\n             };\n "}, {"sha": "340cf361a08d4d820bcec4eb3b07decf54d92274", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=a076fef2b647399f2fb0575830fb07320fb3b6f5", "patch": "@@ -83,6 +83,7 @@ pub enum lint {\n     unrecognized_lint,\n     non_camel_case_types,\n     non_uppercase_statics,\n+    non_uppercase_pattern_statics,\n     type_limits,\n     unused_unsafe,\n \n@@ -209,6 +210,13 @@ static lint_table: &'static [(&'static str, LintSpec)] = &[\n          default: allow\n      }),\n \n+    (\"non_uppercase_pattern_statics\",\n+     LintSpec {\n+         lint: non_uppercase_pattern_statics,\n+         desc: \"static constants in match patterns should be uppercased\",\n+         default: warn\n+     }),\n+\n     (\"managed_heap_memory\",\n      LintSpec {\n         lint: managed_heap_memory,"}, {"sha": "2ffff5b58381be17f7750509c0fad96bdca88bc6", "filename": "src/librustc/middle/trans/cabi_arm.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_arm.rs?ref=a076fef2b647399f2fb0575830fb07320fb3b6f5", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(non_uppercase_pattern_statics)];\n+\n use lib::llvm::{llvm, Integer, Pointer, Float, Double, Struct, Array};\n use lib::llvm::{Attribute, StructRetAttribute};\n use middle::trans::cabi::{FnType, LLVMType};"}, {"sha": "be4a6a6ec18f1cb06f85ffb2b26c282095cb4467", "filename": "src/librustc/middle/trans/cabi_mips.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_mips.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_mips.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_mips.rs?ref=a076fef2b647399f2fb0575830fb07320fb3b6f5", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(non_uppercase_pattern_statics)];\n \n use std::libc::c_uint;\n use std::num;"}, {"sha": "7b666ea2448b4ae432d12945d989b1e6a214c742", "filename": "src/librustc/middle/trans/cabi_x86_64.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86_64.rs?ref=a076fef2b647399f2fb0575830fb07320fb3b6f5", "patch": "@@ -11,6 +11,8 @@\n // The classification code for the x86_64 ABI is taken from the clay language\n // https://github.com/jckarter/clay/blob/master/compiler/src/externals.cpp\n \n+#[allow(non_uppercase_pattern_statics)];\n+\n use lib::llvm::{llvm, Integer, Pointer, Float, Double};\n use lib::llvm::{Struct, Array, Attribute};\n use lib::llvm::{StructRetAttribute, ByValAttribute};"}, {"sha": "0364251f520b17606c2e050406036f83521d22c8", "filename": "src/librustc/middle/trans/intrinsic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibrustc%2Fmiddle%2Ftrans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibrustc%2Fmiddle%2Ftrans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fintrinsic.rs?ref=a076fef2b647399f2fb0575830fb07320fb3b6f5", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(non_uppercase_pattern_statics)];\n+\n use back::{abi};\n use lib::llvm::{SequentiallyConsistent, Acquire, Release, Xchg};\n use lib::llvm::{ValueRef, Pointer};"}, {"sha": "6ccfd857126072fef522e63eea90af4d7c28cf6a", "filename": "src/librustc/middle/trans/type_.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs?ref=a076fef2b647399f2fb0575830fb07320fb3b6f5", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(non_uppercase_pattern_statics)];\n \n use lib::llvm::{llvm, TypeRef, Bool, False, True, TypeKind};\n use lib::llvm::{Float, Double, X86_FP80, PPC_FP128, FP128};"}, {"sha": "be8aa369b4bedc4cc1a8ec0262e00f56f56a7249", "filename": "src/libstd/num/f32.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibstd%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibstd%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff32.rs?ref=a076fef2b647399f2fb0575830fb07320fb3b6f5", "patch": "@@ -11,6 +11,7 @@\n //! Operations and constants for `f32`\n #[allow(missing_doc)];\n #[allow(non_uppercase_statics)];\n+#[allow(non_uppercase_pattern_statics)];\n \n use default::Default;\n use libc::c_int;"}, {"sha": "18d0037469d20192cbdf5986974f139d15125e10", "filename": "src/libstd/num/f64.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibstd%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Flibstd%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff64.rs?ref=a076fef2b647399f2fb0575830fb07320fb3b6f5", "patch": "@@ -12,6 +12,7 @@\n \n #[allow(missing_doc)];\n #[allow(non_uppercase_statics)];\n+#[allow(non_uppercase_pattern_statics)];\n \n use default::Default;\n use libc::c_int;"}, {"sha": "02be27b7ce2832c921664c3f944e900a55a444ef", "filename": "src/test/compile-fail/match-static-const-lc.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Ftest%2Fcompile-fail%2Fmatch-static-const-lc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Ftest%2Fcompile-fail%2Fmatch-static-const-lc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmatch-static-const-lc.rs?ref=a076fef2b647399f2fb0575830fb07320fb3b6f5", "patch": "@@ -0,0 +1,43 @@\n+// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Issue #7526: lowercase static constants in patterns look like bindings\n+\n+#[deny(non_uppercase_pattern_statics)];\n+\n+pub static a : int = 97;\n+\n+fn f() {\n+    let r = match (0,0) {\n+        (0, a) => 0,\n+        //~^ ERROR static constant in pattern should have an uppercase id\n+        (x, y) => 1 + x + y,\n+    };\n+    assert!(r == 1);\n+}\n+\n+mod m {\n+    pub static aha : int = 7;\n+}\n+\n+fn g() {\n+    use m::aha;\n+    let r = match (0,0) {\n+        (0, aha) => 0,\n+        //~^ ERROR static constant in pattern should have an uppercase id\n+        (x, y)   => 1 + x + y,\n+    };\n+    assert!(r == 1);\n+}\n+\n+fn main () {\n+    f();\n+    g();\n+}"}, {"sha": "305a20b6642e2d3826a511420826a0b0aed69a22", "filename": "src/test/run-pass/match-static-const-rename.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Ftest%2Frun-pass%2Fmatch-static-const-rename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a076fef2b647399f2fb0575830fb07320fb3b6f5/src%2Ftest%2Frun-pass%2Fmatch-static-const-rename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-static-const-rename.rs?ref=a076fef2b647399f2fb0575830fb07320fb3b6f5", "patch": "@@ -0,0 +1,47 @@\n+// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Issue #7526: lowercase static constants in patterns look like bindings\n+\n+// This is similar to compile-fail/match-static-const-lc, except it\n+// shows the expected usual workaround (choosing a different name for\n+// the static definition) and also demonstrates that one can work\n+// around this problem locally by reanming the constant in the `use`\n+// form to an uppercase identifier that placates the lint.\n+\n+#[deny(non_uppercase_pattern_statics)];\n+\n+pub static A : int = 97;\n+\n+fn f() {\n+    let r = match (0,0) {\n+        (0, A) => 0,\n+        (x, y) => 1 + x + y,\n+    };\n+    assert!(r == 1);\n+}\n+\n+mod m {\n+    pub static aha : int = 7;\n+}\n+\n+fn g() {\n+    use AHA = m::aha;\n+    let r = match (0,0) {\n+        (0, AHA) => 0,\n+        (x, y)   => 1 + x + y,\n+    };\n+    assert!(r == 1);\n+}\n+\n+fn main () {\n+    f();\n+    g();\n+}"}]}