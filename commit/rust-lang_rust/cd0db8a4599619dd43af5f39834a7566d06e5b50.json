{"sha": "cd0db8a4599619dd43af5f39834a7566d06e5b50", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMGRiOGE0NTk5NjE5ZGQ0M2FmNWYzOTgzNGE3NTY2ZDA2ZTViNTA=", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-05-13T01:41:59Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-05-13T01:51:23Z"}, "message": "Fix test comment for `while_let_on_iterator`", "tree": {"sha": "1288a393b2ce3c8e79d5c9ed7c295ca7a4fd8ee3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1288a393b2ce3c8e79d5c9ed7c295ca7a4fd8ee3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd0db8a4599619dd43af5f39834a7566d06e5b50", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: Created with Krypton\n\niF4EABYKAAYFAmCchhsACgkQ2lnoZDo37QaAIwD9ESZWVCFHeW4OjBrLY9K0FmMH\nagL4XmU6Lh/mE0yoDpoBANp3xLHVxQDNMY7YBeKNrNga0v2QwpvnyrpkU9Sa/GoD\n=OKfO\n-----END PGP SIGNATURE-----", "payload": "tree 1288a393b2ce3c8e79d5c9ed7c295ca7a4fd8ee3\nparent 4713e25ab07badc863fff05fcd5bcf9852cf375e\nauthor Jason Newcomb <jsnewcomb@pm.me> 1620870119 -0400\ncommitter Jason Newcomb <jsnewcomb@pm.me> 1620870683 -0400\n\nFix test comment for `while_let_on_iterator`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd0db8a4599619dd43af5f39834a7566d06e5b50", "html_url": "https://github.com/rust-lang/rust/commit/cd0db8a4599619dd43af5f39834a7566d06e5b50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd0db8a4599619dd43af5f39834a7566d06e5b50/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4713e25ab07badc863fff05fcd5bcf9852cf375e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4713e25ab07badc863fff05fcd5bcf9852cf375e", "html_url": "https://github.com/rust-lang/rust/commit/4713e25ab07badc863fff05fcd5bcf9852cf375e"}], "stats": {"total": 34, "additions": 15, "deletions": 19}, "files": [{"sha": "c3e2cf0c4a4bd485e8a869e3a1b7f140eacdc9e3", "filename": "tests/ui/while_let_on_iterator.fixed", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cd0db8a4599619dd43af5f39834a7566d06e5b50/tests%2Fui%2Fwhile_let_on_iterator.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/cd0db8a4599619dd43af5f39834a7566d06e5b50/tests%2Fui%2Fwhile_let_on_iterator.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_let_on_iterator.fixed?ref=cd0db8a4599619dd43af5f39834a7566d06e5b50", "patch": "@@ -148,10 +148,8 @@ fn issue1121() {\n }\n \n fn issue2965() {\n-    // This should not cause an ICE and suggest:\n-    //\n-    // for _ in values.iter() {}\n-    //\n+    // This should not cause an ICE\n+\n     use std::collections::HashSet;\n     let mut values = HashSet::new();\n     values.insert(1);"}, {"sha": "1717006a4490e59884b5e6db16858021ada5e383", "filename": "tests/ui/while_let_on_iterator.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cd0db8a4599619dd43af5f39834a7566d06e5b50/tests%2Fui%2Fwhile_let_on_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0db8a4599619dd43af5f39834a7566d06e5b50/tests%2Fui%2Fwhile_let_on_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_let_on_iterator.rs?ref=cd0db8a4599619dd43af5f39834a7566d06e5b50", "patch": "@@ -148,10 +148,8 @@ fn issue1121() {\n }\n \n fn issue2965() {\n-    // This should not cause an ICE and suggest:\n-    //\n-    // for _ in values.iter() {}\n-    //\n+    // This should not cause an ICE\n+\n     use std::collections::HashSet;\n     let mut values = HashSet::new();\n     values.insert(1);"}, {"sha": "eff559bef7e3b87a3ab9491876558389070393a9", "filename": "tests/ui/while_let_on_iterator.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/cd0db8a4599619dd43af5f39834a7566d06e5b50/tests%2Fui%2Fwhile_let_on_iterator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cd0db8a4599619dd43af5f39834a7566d06e5b50/tests%2Fui%2Fwhile_let_on_iterator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_let_on_iterator.stderr?ref=cd0db8a4599619dd43af5f39834a7566d06e5b50", "patch": "@@ -43,69 +43,69 @@ LL |         while let Some(_) = y.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for _ in y`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:193:9\n+  --> $DIR/while_let_on_iterator.rs:191:9\n    |\n LL |         while let Some(m) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for m in &mut it`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:204:5\n+  --> $DIR/while_let_on_iterator.rs:202:5\n    |\n LL |     while let Some(n) = it.next() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for n in it`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:206:9\n+  --> $DIR/while_let_on_iterator.rs:204:9\n    |\n LL |         while let Some(m) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for m in it`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:215:9\n+  --> $DIR/while_let_on_iterator.rs:213:9\n    |\n LL |         while let Some(m) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for m in it`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:224:9\n+  --> $DIR/while_let_on_iterator.rs:222:9\n    |\n LL |         while let Some(m) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for m in &mut it`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:241:9\n+  --> $DIR/while_let_on_iterator.rs:239:9\n    |\n LL |         while let Some(m) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for m in &mut it`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:256:13\n+  --> $DIR/while_let_on_iterator.rs:254:13\n    |\n LL |             while let Some(i) = self.0.next() {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for i in &mut self.0`\n \n error: manual `!RangeInclusive::contains` implementation\n-  --> $DIR/while_let_on_iterator.rs:257:20\n+  --> $DIR/while_let_on_iterator.rs:255:20\n    |\n LL |                 if i < 3 || i > 7 {\n    |                    ^^^^^^^^^^^^^^ help: use: `!(3..=7).contains(&i)`\n    |\n    = note: `-D clippy::manual-range-contains` implied by `-D warnings`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:288:13\n+  --> $DIR/while_let_on_iterator.rs:286:13\n    |\n LL |             while let Some(i) = self.0.0.0.next() {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for i in &mut self.0.0.0`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:317:5\n+  --> $DIR/while_let_on_iterator.rs:315:5\n    |\n LL |     while let Some(n) = it.next() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for n in &mut it`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:327:5\n+  --> $DIR/while_let_on_iterator.rs:325:5\n    |\n LL |     while let Some(..) = it.next() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for _ in it`"}]}