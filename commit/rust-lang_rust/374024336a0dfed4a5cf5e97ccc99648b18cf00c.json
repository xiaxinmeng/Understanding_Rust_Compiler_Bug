{"sha": "374024336a0dfed4a5cf5e97ccc99648b18cf00c", "node_id": "C_kwDOAAsO6NoAKDM3NDAyNDMzNmEwZGZlZDRhNWNmNWU5N2NjYzk5NjQ4YjE4Y2YwMGM", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-05-08T19:04:27Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-05-25T15:14:33Z"}, "message": "Improve comments", "tree": {"sha": "f22079823946f601d3fb1025b5c533cc358c8f46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f22079823946f601d3fb1025b5c533cc358c8f46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/374024336a0dfed4a5cf5e97ccc99648b18cf00c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/374024336a0dfed4a5cf5e97ccc99648b18cf00c", "html_url": "https://github.com/rust-lang/rust/commit/374024336a0dfed4a5cf5e97ccc99648b18cf00c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/374024336a0dfed4a5cf5e97ccc99648b18cf00c/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8488e8aed9eb59e45589974985e7cb377576353c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8488e8aed9eb59e45589974985e7cb377576353c", "html_url": "https://github.com/rust-lang/rust/commit/8488e8aed9eb59e45589974985e7cb377576353c"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "ccba77d7aa7553904a0c06aca3ee48b267bf23b0", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/374024336a0dfed4a5cf5e97ccc99648b18cf00c/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/374024336a0dfed4a5cf5e97ccc99648b18cf00c/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=374024336a0dfed4a5cf5e97ccc99648b18cf00c", "patch": "@@ -111,8 +111,9 @@ pub(crate) struct CrateMetadata {\n     dep_kind: Lock<CrateDepKind>,\n     /// Filesystem location of this crate.\n     source: Lrc<CrateSource>,\n-    /// Whether or not this crate should be consider a private dependency\n-    /// for purposes of the 'exported_private_dependencies' lint\n+    /// Whether or not this crate should be consider a private dependency.\n+    /// Used by the 'exported_private_dependencies' lint, and for determining\n+    /// whether to emit suggestions that reference this crate.\n     private_dep: Lock<bool>,\n     /// The hash for the host proc macro. Used to support `-Z dual-proc-macro`.\n     host_hash: Option<Svh>,"}, {"sha": "3b20ceac8759ff74ecef14eb6c7afac2882ee331", "filename": "src/bootstrap/metadata.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/374024336a0dfed4a5cf5e97ccc99648b18cf00c/src%2Fbootstrap%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/374024336a0dfed4a5cf5e97ccc99648b18cf00c/src%2Fbootstrap%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmetadata.rs?ref=374024336a0dfed4a5cf5e97ccc99648b18cf00c", "patch": "@@ -74,6 +74,8 @@ fn workspace_members(build: &Build) -> impl Iterator<Item = Package> {\n     let collect_metadata = |manifest_path| {\n         let mut cargo = Command::new(&build.initial_cargo);\n         cargo\n+            // Will read the libstd Cargo.toml\n+            // which uses the unstable `public-dependency` feature.\n             .env(\"RUSTC_BOOTSTRAP\", \"1\")\n             .arg(\"metadata\")\n             .arg(\"--format-version\")"}, {"sha": "01e5a00af4a23a69de2be5107810836b0ba7fcc6", "filename": "src/tools/rust-installer/combine-installers.sh", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/374024336a0dfed4a5cf5e97ccc99648b18cf00c/src%2Ftools%2Frust-installer%2Fcombine-installers.sh", "raw_url": "https://github.com/rust-lang/rust/raw/374024336a0dfed4a5cf5e97ccc99648b18cf00c/src%2Ftools%2Frust-installer%2Fcombine-installers.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-installer%2Fcombine-installers.sh?ref=374024336a0dfed4a5cf5e97ccc99648b18cf00c", "patch": "@@ -11,6 +11,8 @@ abs_path() {\n     (unset CDPATH && cd \"$path\" > /dev/null && pwd)\n }\n \n+# Running cargo will read the libstd Cargo.toml\n+# which uses the unstable `public-dependency` feature.\n export RUSTC_BOOTSTRAP=1\n \n src_dir=\"$(abs_path $(dirname \"$0\"))\""}, {"sha": "cc45b5e0803f762137005a51ce8e959dc4ab2ff5", "filename": "src/tools/rust-installer/gen-installer.sh", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/374024336a0dfed4a5cf5e97ccc99648b18cf00c/src%2Ftools%2Frust-installer%2Fgen-installer.sh", "raw_url": "https://github.com/rust-lang/rust/raw/374024336a0dfed4a5cf5e97ccc99648b18cf00c/src%2Ftools%2Frust-installer%2Fgen-installer.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-installer%2Fgen-installer.sh?ref=374024336a0dfed4a5cf5e97ccc99648b18cf00c", "patch": "@@ -11,6 +11,8 @@ abs_path() {\n     (unset CDPATH && cd \"$path\" > /dev/null && pwd)\n }\n \n+# Running cargo will read the libstd Cargo.toml\n+# which uses the unstable `public-dependency` feature.\n export RUSTC_BOOTSTRAP=1\n \n src_dir=\"$(abs_path $(dirname \"$0\"))\""}, {"sha": "374e103e89ca618e684514fa3d9b1c2fee3f2417", "filename": "src/tools/rust-installer/make-tarballs.sh", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/374024336a0dfed4a5cf5e97ccc99648b18cf00c/src%2Ftools%2Frust-installer%2Fmake-tarballs.sh", "raw_url": "https://github.com/rust-lang/rust/raw/374024336a0dfed4a5cf5e97ccc99648b18cf00c/src%2Ftools%2Frust-installer%2Fmake-tarballs.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-installer%2Fmake-tarballs.sh?ref=374024336a0dfed4a5cf5e97ccc99648b18cf00c", "patch": "@@ -11,6 +11,8 @@ abs_path() {\n     (unset CDPATH && cd \"$path\" > /dev/null && pwd)\n }\n \n+# Running cargo will read the libstd Cargo.toml\n+# which uses the unstable `public-dependency` feature.\n export RUSTC_BOOTSTRAP=1\n \n src_dir=\"$(abs_path $(dirname \"$0\"))\""}, {"sha": "a9eada22fc02f4190e37695883b418e055fd759c", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/374024336a0dfed4a5cf5e97ccc99648b18cf00c/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/374024336a0dfed4a5cf5e97ccc99648b18cf00c/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=374024336a0dfed4a5cf5e97ccc99648b18cf00c", "patch": "@@ -16,7 +16,9 @@ use std::sync::atomic::{AtomicBool, Ordering};\n use std::thread::{self, scope, ScopedJoinHandle};\n \n fn main() {\n-    // Allow using unstable cargo features in the standard library.\n+    // Running Cargo will read the libstd Cargo.toml\n+    // which uses the unstable `public-dependency` feature.\n+    //\n     // `setenv` might not be thread safe, so run it before using multiple threads.\n     env::set_var(\"RUSTC_BOOTSTRAP\", \"1\");\n "}]}