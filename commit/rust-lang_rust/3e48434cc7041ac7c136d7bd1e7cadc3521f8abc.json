{"sha": "3e48434cc7041ac7c136d7bd1e7cadc3521f8abc", "node_id": "C_kwDOAAsO6NoAKDNlNDg0MzRjYzcwNDFhYzdjMTM2ZDdiZDFlN2NhZGMzNTIxZjhhYmM", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-26T04:01:34Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-04T13:42:13Z"}, "message": "Use ObligationCtxt in impossible_predicates", "tree": {"sha": "a9cd9ef7cb1207207cd8e513100e950d298b5dd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9cd9ef7cb1207207cd8e513100e950d298b5dd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e48434cc7041ac7c136d7bd1e7cadc3521f8abc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e48434cc7041ac7c136d7bd1e7cadc3521f8abc", "html_url": "https://github.com/rust-lang/rust/commit/3e48434cc7041ac7c136d7bd1e7cadc3521f8abc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e48434cc7041ac7c136d7bd1e7cadc3521f8abc/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61d9b1656dba91122d308637d9611e0bd7ea68b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/61d9b1656dba91122d308637d9611e0bd7ea68b4", "html_url": "https://github.com/rust-lang/rust/commit/61d9b1656dba91122d308637d9611e0bd7ea68b4"}], "stats": {"total": 17, "additions": 5, "deletions": 12}, "files": [{"sha": "b8cbfcb8b795e3ca86c734924655895474d34dd7", "filename": "compiler/rustc_trait_selection/src/traits/mod.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3e48434cc7041ac7c136d7bd1e7cadc3521f8abc/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e48434cc7041ac7c136d7bd1e7cadc3521f8abc/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs?ref=3e48434cc7041ac7c136d7bd1e7cadc3521f8abc", "patch": "@@ -427,20 +427,13 @@ pub fn impossible_predicates<'tcx>(\n         infcx.set_tainted_by_errors();\n \n         let param_env = ty::ParamEnv::reveal_all();\n-        let mut selcx = SelectionContext::new(&infcx);\n-        let mut fulfill_cx = FulfillmentContext::new();\n-        let cause = ObligationCause::dummy();\n-        let Normalized { value: predicates, obligations } =\n-            normalize(&mut selcx, param_env, cause.clone(), predicates);\n-        for obligation in obligations {\n-            fulfill_cx.register_predicate_obligation(&infcx, obligation);\n-        }\n+        let ocx = ObligationCtxt::new(&infcx);\n+        let predicates = ocx.normalize(ObligationCause::dummy(), param_env, predicates);\n         for predicate in predicates {\n-            let obligation = Obligation::new(cause.clone(), param_env, predicate);\n-            fulfill_cx.register_predicate_obligation(&infcx, obligation);\n+            let obligation = Obligation::new(ObligationCause::dummy(), param_env, predicate);\n+            ocx.register_obligation(obligation);\n         }\n-\n-        let errors = fulfill_cx.select_all_or_error(&infcx);\n+        let errors = ocx.select_all_or_error();\n \n         // Clean up after ourselves\n         let _ = infcx.inner.borrow_mut().opaque_type_storage.take_opaque_types();"}]}