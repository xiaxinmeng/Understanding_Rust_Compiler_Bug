{"sha": "32e62d01510c7b1c0dbd39f9ecc9fd997c2ff2b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyZTYyZDAxNTEwYzdiMWMwZGJkMzlmOWVjYzlmZDk5N2MyZmYyYjk=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-04-07T21:55:02Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-04-07T22:46:41Z"}, "message": "add a -parse-only option to rustc\n\n(undocumented, only used for profiling the parser)", "tree": {"sha": "50fafabd2ec99bcfb6b025ff08003199cba49a6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50fafabd2ec99bcfb6b025ff08003199cba49a6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32e62d01510c7b1c0dbd39f9ecc9fd997c2ff2b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32e62d01510c7b1c0dbd39f9ecc9fd997c2ff2b9", "html_url": "https://github.com/rust-lang/rust/commit/32e62d01510c7b1c0dbd39f9ecc9fd997c2ff2b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32e62d01510c7b1c0dbd39f9ecc9fd997c2ff2b9/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "973023030e7c0ca9814bc60f389bb8d75923edc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/973023030e7c0ca9814bc60f389bb8d75923edc7", "html_url": "https://github.com/rust-lang/rust/commit/973023030e7c0ca9814bc60f389bb8d75923edc7"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "289536969eb63fd8bbeec098738b8d3701e2282b", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/32e62d01510c7b1c0dbd39f9ecc9fd997c2ff2b9/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32e62d01510c7b1c0dbd39f9ecc9fd997c2ff2b9/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=32e62d01510c7b1c0dbd39f9ecc9fd997c2ff2b9", "patch": "@@ -59,10 +59,12 @@ impure fn compile_input(session.session sess,\n                         str input, str output,\n                         bool shared,\n                         bool optimize,\n+                        bool parse_only,\n                         vec[str] library_search_paths) {\n     auto def = tup(0, 0);\n     auto p = parser.new_parser(sess, env, def, input);\n     auto crate = parse_input(sess, p, input);\n+    if (parse_only) {ret;}\n     crate = creader.read_crates(sess, crate, library_search_paths);\n     crate = resolve.resolve_crate(sess, crate);\n     auto typeck_result = typeck.check_crate(sess, crate);\n@@ -132,6 +134,7 @@ impure fn main(vec[str] args) {\n     let bool shared = false;\n     let bool pretty = false;\n     let bool ls = false;\n+    let bool parse_only = false;\n     let bool glue = false;\n \n     // FIXME: Maybe we should support -O0, -O1, -Os, etc\n@@ -156,6 +159,8 @@ impure fn main(vec[str] args) {\n                 pretty = true;\n             } else if (_str.eq(arg, \"-ls\")) {\n                 ls = true;\n+            } else if (_str.eq(arg, \"-parse-only\")) {\n+                parse_only = true;\n             } else if (_str.eq(arg, \"-o\")) {\n                 if (i+1u < len) {\n                     output_file = some(args.(i+1u));\n@@ -228,11 +233,13 @@ impure fn main(vec[str] args) {\n                         parts += vec(\".bc\");\n                         auto ofile = _str.concat(parts);\n                         compile_input(sess, env, ifile, ofile, shared,\n-                                      optimize, library_search_paths);\n+                                      optimize, parse_only,\n+                                      library_search_paths);\n                     }\n                     case (some[str](?ofile)) {\n                         compile_input(sess, env, ifile, ofile, shared,\n-                                      optimize, library_search_paths);\n+                                      optimize, parse_only,\n+                                      library_search_paths);\n                     }\n                 }\n             }"}]}