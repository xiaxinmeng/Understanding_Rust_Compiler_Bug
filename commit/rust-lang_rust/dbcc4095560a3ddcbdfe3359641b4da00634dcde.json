{"sha": "dbcc4095560a3ddcbdfe3359641b4da00634dcde", "node_id": "C_kwDOAAsO6NoAKGRiY2M0MDk1NTYwYTNkZGNiZGZlMzM1OTY0MWI0ZGEwMDYzNGRjZGU", "commit": {"author": {"name": "Matthew Kelly", "email": "matthew.kelly2@gmail.com", "date": "2022-08-23T09:19:04Z"}, "committer": {"name": "Matthew Kelly", "email": "matthew.kelly2@gmail.com", "date": "2022-08-23T09:19:04Z"}, "message": "Improve E0311.md description", "tree": {"sha": "62c4c5afc567eff5106a2bd3dbfeadece72793eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62c4c5afc567eff5106a2bd3dbfeadece72793eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbcc4095560a3ddcbdfe3359641b4da00634dcde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbcc4095560a3ddcbdfe3359641b4da00634dcde", "html_url": "https://github.com/rust-lang/rust/commit/dbcc4095560a3ddcbdfe3359641b4da00634dcde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbcc4095560a3ddcbdfe3359641b4da00634dcde/comments", "author": {"login": "MatthewPeterKelly", "id": 8137529, "node_id": "MDQ6VXNlcjgxMzc1Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/8137529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MatthewPeterKelly", "html_url": "https://github.com/MatthewPeterKelly", "followers_url": "https://api.github.com/users/MatthewPeterKelly/followers", "following_url": "https://api.github.com/users/MatthewPeterKelly/following{/other_user}", "gists_url": "https://api.github.com/users/MatthewPeterKelly/gists{/gist_id}", "starred_url": "https://api.github.com/users/MatthewPeterKelly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MatthewPeterKelly/subscriptions", "organizations_url": "https://api.github.com/users/MatthewPeterKelly/orgs", "repos_url": "https://api.github.com/users/MatthewPeterKelly/repos", "events_url": "https://api.github.com/users/MatthewPeterKelly/events{/privacy}", "received_events_url": "https://api.github.com/users/MatthewPeterKelly/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MatthewPeterKelly", "id": 8137529, "node_id": "MDQ6VXNlcjgxMzc1Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/8137529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MatthewPeterKelly", "html_url": "https://github.com/MatthewPeterKelly", "followers_url": "https://api.github.com/users/MatthewPeterKelly/followers", "following_url": "https://api.github.com/users/MatthewPeterKelly/following{/other_user}", "gists_url": "https://api.github.com/users/MatthewPeterKelly/gists{/gist_id}", "starred_url": "https://api.github.com/users/MatthewPeterKelly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MatthewPeterKelly/subscriptions", "organizations_url": "https://api.github.com/users/MatthewPeterKelly/orgs", "repos_url": "https://api.github.com/users/MatthewPeterKelly/repos", "events_url": "https://api.github.com/users/MatthewPeterKelly/events{/privacy}", "received_events_url": "https://api.github.com/users/MatthewPeterKelly/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9cefd04411611e72417ee2762979e300aac8749", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9cefd04411611e72417ee2762979e300aac8749", "html_url": "https://github.com/rust-lang/rust/commit/a9cefd04411611e72417ee2762979e300aac8749"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "00b23c420529febd14c0045e0708a928a776d3d4", "filename": "compiler/rustc_error_codes/src/error_codes/E0311.md", "status": "modified", "additions": 29, "deletions": 8, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/dbcc4095560a3ddcbdfe3359641b4da00634dcde/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0311.md", "raw_url": "https://github.com/rust-lang/rust/raw/dbcc4095560a3ddcbdfe3359641b4da00634dcde/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0311.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0311.md?ref=dbcc4095560a3ddcbdfe3359641b4da00634dcde", "patch": "@@ -21,14 +21,35 @@ where\n }\n ```\n \n-In this example we have a trait that borrows some inner data element of type `V`\n-from an outer type `T`, through an intermediate type `U`. The compiler is unable\n-to prove that the livetime of `U` is long enough to support the reference. To\n-fix the issue we can explicitly add lifetime specifiers to the `NestedBorrowMut`\n-trait, which link the lifetimes of the various data types and allow the code to\n-compile.\n-\n-Working implementation of the `NestedBorrowMut` trait:\n+Why doesn't this code compile? The problem has to do with Rust's rules for\n+lifetime elision in functions (Chapter 10.3 in the Rust book). One of the\n+inputs is a reference to `self`, so the compiler attempts to assign the\n+the same lifetime to the `&mut self` input and `&mut V` output to the\n+`nested_borrow_mut()` function. The problem is that there is no way for the\n+compiler to directly figure out how these two lifetimes are related in the\n+implementation of the function. We're implementing the `NextedBorrowMut`\n+trait for a type `T`, so the `&mut self` reference has the lifetime of `T`.\n+We know that `T` implements the `BorrowMut` trait returning a reference to `U`,\n+and that `U` implements the `BorrowMut` trait returning a reference to `V`.\n+The key is that we have not told the compiler that those two `U` lifetimes\n+are the same: for all it knows, we could be that the first `BorrowMut` trait\n+on `T` works with a lifetime `'a` and the second `BorrowMut` trait on `U`\n+works on a lifetime `'b`.\n+\n+The fix here is to add explicit lifetime annotations that tell the compiler\n+that the lifetime of the output is in fact the same as the lifetime of the\n+input (`self`). There are three references involved, to objects of type `T`\n+(`self`), `U` (the intermediate type), and `V` (the return type). In the\n+working code below, we see that all have been given the same lifetime `'a`:\n+- `&'a mut self` in the function argument list for `T`\n+- `U: BorrowMut<V> + 'a` in the trait bounds for `U`\n+- `&'a mut V` in the function return for `V`.\n+\n+The compiler can the check that the implementation of the\n+`nested_borrow_mut()` function satisfies these lifetimes. There are two\n+functions being called inside of `nested_borrow_mut()`, both of which are\n+the `borrow_mut()` function, which promises that the output lifetime is\n+the same as the input lifetime (see lifetime elision rules), which checks out.\n \n ```\n use std::borrow::BorrowMut;"}]}