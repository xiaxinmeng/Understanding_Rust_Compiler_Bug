{"sha": "19d6a3c7868c5c887c1c617fbef86bba8718625c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5ZDZhM2M3ODY4YzVjODg3YzFjNjE3ZmJlZjg2YmJhODcxODYyNWM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-01-02T04:52:19Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-01-04T03:46:55Z"}, "message": "Put the opening brace of impl on the next line\n\nWe put the opening brace on the next line if the following conditions hold:\n\n1. the result before '{' ends with comments or contains newline\n2. the last line of the result before '{' is not extendable (i.e. consists of\n   '>' and whitespaces).", "tree": {"sha": "fae34d5c46718a4e08ef0128654eb2cf39833545", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fae34d5c46718a4e08ef0128654eb2cf39833545"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19d6a3c7868c5c887c1c617fbef86bba8718625c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19d6a3c7868c5c887c1c617fbef86bba8718625c", "html_url": "https://github.com/rust-lang/rust/commit/19d6a3c7868c5c887c1c617fbef86bba8718625c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19d6a3c7868c5c887c1c617fbef86bba8718625c/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c355f3854c0e6d751d493dca3782533918e8c84d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c355f3854c0e6d751d493dca3782533918e8c84d", "html_url": "https://github.com/rust-lang/rust/commit/c355f3854c0e6d751d493dca3782533918e8c84d"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "d8d490f72c0fffa2b00c8fd071a317def8b4137e", "filename": "src/items.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/19d6a3c7868c5c887c1c617fbef86bba8718625c/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19d6a3c7868c5c887c1c617fbef86bba8718625c/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=19d6a3c7868c5c887c1c617fbef86bba8718625c", "patch": "@@ -33,8 +33,8 @@ use types::join_bounds;\n use utils::{colon_spaces, contains_skip, first_line_width, format_abi, format_constness,\n             format_defaultness, format_mutability, format_unsafety, format_visibility,\n             is_attributes_extendable, last_line_contains_single_line_comment,\n-            last_line_used_width, last_line_width, mk_sp, semicolon_for_expr, starts_with_newline,\n-            stmt_expr, trimmed_last_line_width};\n+            last_line_extendable, last_line_used_width, last_line_width, mk_sp,\n+            semicolon_for_expr, starts_with_newline, stmt_expr, trimmed_last_line_width};\n use vertical::rewrite_with_alignment;\n use visitor::FmtVisitor;\n \n@@ -639,8 +639,10 @@ pub fn format_impl(\n         }\n         result.push_str(&where_clause_str);\n \n+        let need_newline = !last_line_extendable(&result)\n+            && (last_line_contains_single_line_comment(&result) || result.contains('\\n'));\n         match context.config.brace_style() {\n-            _ if last_line_contains_single_line_comment(&result) => result.push_str(&sep),\n+            _ if need_newline => result.push_str(&sep),\n             BraceStyle::AlwaysNextLine => result.push_str(&sep),\n             BraceStyle::PreferSameLine => result.push(' '),\n             BraceStyle::SameLineWhere => {"}, {"sha": "2f65d27324659b0cdb93627b1c82f67cd73b9dff", "filename": "src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19d6a3c7868c5c887c1c617fbef86bba8718625c/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19d6a3c7868c5c887c1c617fbef86bba8718625c/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=19d6a3c7868c5c887c1c617fbef86bba8718625c", "patch": "@@ -178,7 +178,7 @@ pub fn last_line_extendable(s: &str) -> bool {\n     }\n     for c in s.chars().rev() {\n         match c {\n-            ')' | ']' | '}' | '?' => continue,\n+            ')' | ']' | '}' | '?' | '>' => continue,\n             '\\n' => break,\n             _ if c.is_whitespace() => continue,\n             _ => return false,"}, {"sha": "133e8babedb9759c5bdaf851eb0653d4d62e1e15", "filename": "tests/target/trait.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/19d6a3c7868c5c887c1c617fbef86bba8718625c/tests%2Ftarget%2Ftrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19d6a3c7868c5c887c1c617fbef86bba8718625c/tests%2Ftarget%2Ftrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftrait.rs?ref=19d6a3c7868c5c887c1c617fbef86bba8718625c", "patch": "@@ -103,14 +103,13 @@ trait Foo {\n // #2331\n trait MyTrait<\n     AAAAAAAAAAAAAAAAAAAA,\n-BBBBBBBBBBBBBBBBBBBB,\n-CCCCCCCCCCCCCCCCCCCC,\n-DDDDDDDDDDDDDDDDDDDD,\n+    BBBBBBBBBBBBBBBBBBBB,\n+    CCCCCCCCCCCCCCCCCCCC,\n+    DDDDDDDDDDDDDDDDDDDD,\n > {\n     fn foo() {}\n }\n \n-\n // Trait aliases\n trait FooBar = Foo + Bar;\n trait FooBar<A, B, C> = Foo + Bar;"}]}