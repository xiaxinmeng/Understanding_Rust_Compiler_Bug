{"sha": "95908f61a0c4e0cb874f5fbb882399a82003ae51", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1OTA4ZjYxYTBjNGUwY2I4NzRmNWZiYjg4MjM5OWE4MjAwM2FlNTE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-19T14:43:25Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-19T14:43:25Z"}, "message": "Add unimpl! for cast between 128bit int and float", "tree": {"sha": "d9abb2a47644ec99d2bd8fdad3d9445c56d65df2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9abb2a47644ec99d2bd8fdad3d9445c56d65df2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95908f61a0c4e0cb874f5fbb882399a82003ae51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95908f61a0c4e0cb874f5fbb882399a82003ae51", "html_url": "https://github.com/rust-lang/rust/commit/95908f61a0c4e0cb874f5fbb882399a82003ae51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95908f61a0c4e0cb874f5fbb882399a82003ae51/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae428a2d702fe9a8ae7993b720c59d184a9d239c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae428a2d702fe9a8ae7993b720c59d184a9d239c", "html_url": "https://github.com/rust-lang/rust/commit/ae428a2d702fe9a8ae7993b720c59d184a9d239c"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "ddfe91966ddad692e2adcfb1f3a3be7942bdf12e", "filename": "src/cast.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/95908f61a0c4e0cb874f5fbb882399a82003ae51/src%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95908f61a0c4e0cb874f5fbb882399a82003ae51/src%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcast.rs?ref=95908f61a0c4e0cb874f5fbb882399a82003ae51", "patch": "@@ -64,13 +64,21 @@ pub fn clif_int_or_float_cast(\n             from_signed, // FIXME is this correct?\n         )\n     } else if from_ty.is_int() && to_ty.is_float() {\n+        if from_ty == types::I128 {\n+            unimpl!(\"u/i128 -> float\");\n+        }\n+\n         // int-like -> float\n         if from_signed {\n             fx.bcx.ins().fcvt_from_sint(to_ty, from)\n         } else {\n             fx.bcx.ins().fcvt_from_uint(to_ty, from)\n         }\n     } else if from_ty.is_float() && to_ty.is_int() {\n+        if to_ty == types::I128 {\n+            unimpl!(\"float -> u/i128\");\n+        }\n+\n         // float -> int-like\n         if to_ty == types::I8 || to_ty == types::I16 {\n             // FIXME implement fcvt_to_*int_sat.i8/i16"}]}