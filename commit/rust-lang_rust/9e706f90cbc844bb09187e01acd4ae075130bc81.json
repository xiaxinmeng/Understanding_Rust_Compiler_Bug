{"sha": "9e706f90cbc844bb09187e01acd4ae075130bc81", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllNzA2ZjkwY2JjODQ0YmIwOTE4N2UwMWFjZDRhZTA3NTEzMGJjODE=", "commit": {"author": {"name": "Jan-Erik Rediger", "email": "janerik@fnordig.de", "date": "2016-07-12T22:41:40Z"}, "committer": {"name": "Jan-Erik Rediger", "email": "janerik@fnordig.de", "date": "2016-07-29T08:29:44Z"}, "message": "[LLVM-3.9] Configure PIE at the module level instead of compilation unit level\n\nThis was deleted here[1] which appears to be replaced by this[2]\nwhich is a new setPIELevel function on the LLVM module itself.\n\n[1]: http://reviews.llvm.org/D19753\n[2]: http://reviews.llvm.org/D19671", "tree": {"sha": "61cf2b6522b113e4ea758e58bb24e362606a0f60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61cf2b6522b113e4ea758e58bb24e362606a0f60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e706f90cbc844bb09187e01acd4ae075130bc81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e706f90cbc844bb09187e01acd4ae075130bc81", "html_url": "https://github.com/rust-lang/rust/commit/9e706f90cbc844bb09187e01acd4ae075130bc81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e706f90cbc844bb09187e01acd4ae075130bc81/comments", "author": {"login": "badboy", "id": 2129, "node_id": "MDQ6VXNlcjIxMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/2129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badboy", "html_url": "https://github.com/badboy", "followers_url": "https://api.github.com/users/badboy/followers", "following_url": "https://api.github.com/users/badboy/following{/other_user}", "gists_url": "https://api.github.com/users/badboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/badboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badboy/subscriptions", "organizations_url": "https://api.github.com/users/badboy/orgs", "repos_url": "https://api.github.com/users/badboy/repos", "events_url": "https://api.github.com/users/badboy/events{/privacy}", "received_events_url": "https://api.github.com/users/badboy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "badboy", "id": 2129, "node_id": "MDQ6VXNlcjIxMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/2129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badboy", "html_url": "https://github.com/badboy", "followers_url": "https://api.github.com/users/badboy/followers", "following_url": "https://api.github.com/users/badboy/following{/other_user}", "gists_url": "https://api.github.com/users/badboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/badboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badboy/subscriptions", "organizations_url": "https://api.github.com/users/badboy/orgs", "repos_url": "https://api.github.com/users/badboy/repos", "events_url": "https://api.github.com/users/badboy/events{/privacy}", "received_events_url": "https://api.github.com/users/badboy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbb4178f4effa2f7686aca70d5fdfa0eff94e692", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbb4178f4effa2f7686aca70d5fdfa0eff94e692", "html_url": "https://github.com/rust-lang/rust/commit/dbb4178f4effa2f7686aca70d5fdfa0eff94e692"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "4fc866752eb9f021137a8681c5d9e6087edad1bb", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e706f90cbc844bb09187e01acd4ae075130bc81/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e706f90cbc844bb09187e01acd4ae075130bc81/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=9e706f90cbc844bb09187e01acd4ae075130bc81", "patch": "@@ -2155,6 +2155,7 @@ extern {\n \n     pub fn LLVMRustSetComdat(M: ModuleRef, V: ValueRef, Name: *const c_char);\n     pub fn LLVMRustUnsetComdat(V: ValueRef);\n+    pub fn LLVMRustSetModulePIELevel(M: ModuleRef);\n }\n \n // LLVM requires symbols from this library, but apparently they're not printed"}, {"sha": "2437fa954d18dfe1c2e83b72a5f7e52ff3df6c97", "filename": "src/librustc_trans/context.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e706f90cbc844bb09187e01acd4ae075130bc81/src%2Flibrustc_trans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e706f90cbc844bb09187e01acd4ae075130bc81/src%2Flibrustc_trans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcontext.rs?ref=9e706f90cbc844bb09187e01acd4ae075130bc81", "patch": "@@ -352,6 +352,7 @@ unsafe fn create_context_and_module(sess: &Session, mod_name: &str) -> (ContextR\n     let llvm_target = sess.target.target.llvm_target.as_bytes();\n     let llvm_target = CString::new(llvm_target).unwrap();\n     llvm::LLVMRustSetNormalizedTarget(llmod, llvm_target.as_ptr());\n+    llvm::LLVMRustSetModulePIELevel(llmod);\n     (llcx, llmod)\n }\n "}, {"sha": "edf83bf80d6dc03d528ed81a82ead0fc982561a4", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9e706f90cbc844bb09187e01acd4ae075130bc81/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/9e706f90cbc844bb09187e01acd4ae075130bc81/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=9e706f90cbc844bb09187e01acd4ae075130bc81", "patch": "@@ -188,7 +188,10 @@ LLVMRustCreateTargetMachine(const char *triple,\n     }\n \n     TargetOptions Options;\n+#if LLVM_VERSION_MINOR <= 8\n     Options.PositionIndependentExecutable = PositionIndependentExecutable;\n+#endif\n+\n     Options.FloatABIType = FloatABI::Default;\n     if (UseSoftFloat) {\n         Options.FloatABIType = FloatABI::Soft;\n@@ -411,3 +414,10 @@ extern \"C\" LLVMTargetDataRef\n LLVMRustGetModuleDataLayout(LLVMModuleRef M) {\n     return wrap(&unwrap(M)->getDataLayout());\n }\n+\n+extern \"C\" void\n+LLVMRustSetModulePIELevel(LLVMModuleRef M) {\n+#if LLVM_VERSION_MINOR >= 9\n+    unwrap(M)->setPIELevel(PIELevel::Level::Default);\n+#endif\n+}"}]}