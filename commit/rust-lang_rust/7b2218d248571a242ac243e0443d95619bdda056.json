{"sha": "7b2218d248571a242ac243e0443d95619bdda056", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMjIxOGQyNDg1NzFhMjQyYWMyNDNlMDQ0M2Q5NTYxOWJkZGEwNTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-22T11:37:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-22T11:37:36Z"}, "message": "auto merge of #7926 : brson/rust/issue-4116, r=graydon\n\nWhen loading a module the parser will look for either foo.rs or foo/mod.rs and generate\r\nan error when both are found.", "tree": {"sha": "5a7df07eb67a06eab4eda78846e7db8cd7d0bd7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a7df07eb67a06eab4eda78846e7db8cd7d0bd7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b2218d248571a242ac243e0443d95619bdda056", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b2218d248571a242ac243e0443d95619bdda056", "html_url": "https://github.com/rust-lang/rust/commit/7b2218d248571a242ac243e0443d95619bdda056", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b2218d248571a242ac243e0443d95619bdda056/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40a48e62c1c72090dc00fa50dc7c6d3da8c9ab88", "url": "https://api.github.com/repos/rust-lang/rust/commits/40a48e62c1c72090dc00fa50dc7c6d3da8c9ab88", "html_url": "https://github.com/rust-lang/rust/commit/40a48e62c1c72090dc00fa50dc7c6d3da8c9ab88"}, {"sha": "a74d92e8ab61863876d2b5b6256b403efbb55492", "url": "https://api.github.com/repos/rust-lang/rust/commits/a74d92e8ab61863876d2b5b6256b403efbb55492", "html_url": "https://github.com/rust-lang/rust/commit/a74d92e8ab61863876d2b5b6256b403efbb55492"}], "stats": {"total": 98, "additions": 82, "deletions": 16}, "files": [{"sha": "b2a1a8a73bd14dfdbac3ec1e06cde0e96ff289cb", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 25, "deletions": 12, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/7b2218d248571a242ac243e0443d95619bdda056/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2218d248571a242ac243e0443d95619bdda056/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=7b2218d248571a242ac243e0443d95619bdda056", "patch": "@@ -3996,37 +3996,50 @@ impl Parser {\n         let prefix = prefix.dir_path();\n         let mod_path_stack = &*self.mod_path_stack;\n         let mod_path = Path(\".\").push_many(*mod_path_stack);\n+        let dir_path = prefix.push_many(mod_path.components);\n         let file_path = match ::attr::first_attr_value_str_by_name(\n                 outer_attrs, \"path\") {\n             Some(d) => {\n                 let path = Path(d);\n                 if !path.is_absolute {\n-                    mod_path.push(d)\n+                    dir_path.push(d)\n                 } else {\n                     path\n                 }\n             }\n-            None => mod_path.push(token::interner_get(id.name) + \".rs\") // default\n+            None => {\n+                let mod_name = token::interner_get(id.name).to_owned();\n+                let default_path_str = mod_name + \".rs\";\n+                let secondary_path_str = mod_name + \"/mod.rs\";\n+                let default_path = dir_path.push(default_path_str);\n+                let secondary_path = dir_path.push(secondary_path_str);\n+                let default_exists = default_path.exists();\n+                let secondary_exists = secondary_path.exists();\n+                match (default_exists, secondary_exists) {\n+                    (true, false) => default_path,\n+                    (false, true) => secondary_path,\n+                    (false, false) => {\n+                        self.span_fatal(id_sp, fmt!(\"file not found for module `%s`\", mod_name));\n+                    }\n+                    (true, true) => {\n+                        self.span_fatal(id_sp,\n+                                        fmt!(\"file for module `%s` found at both %s and %s\",\n+                                             mod_name, default_path_str, secondary_path_str));\n+                    }\n+                }\n+            }\n         };\n \n-        self.eval_src_mod_from_path(prefix,\n-                                    file_path,\n+        self.eval_src_mod_from_path(file_path,\n                                     outer_attrs.to_owned(),\n                                     id_sp)\n     }\n \n     fn eval_src_mod_from_path(&self,\n-                              prefix: Path,\n                               path: Path,\n                               outer_attrs: ~[ast::Attribute],\n                               id_sp: span) -> (ast::item_, ~[ast::Attribute]) {\n-\n-        let full_path = if path.is_absolute {\n-            path\n-        } else {\n-            prefix.push_many(path.components)\n-        };\n-        let full_path = full_path.normalize();\n+        let full_path = path.normalize();\n \n         let maybe_i = do self.sess.included_mod_stack.iter().position |p| { *p == full_path };\n         match maybe_i {"}, {"sha": "48bd00a3ee06cba88fb58c2ccdadd438bed34181", "filename": "src/test/compile-fail/mod_file_disambig.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7b2218d248571a242ac243e0443d95619bdda056/src%2Ftest%2Fcompile-fail%2Fmod_file_disambig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2218d248571a242ac243e0443d95619bdda056/src%2Ftest%2Fcompile-fail%2Fmod_file_disambig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmod_file_disambig.rs?ref=7b2218d248571a242ac243e0443d95619bdda056", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+mod mod_file_disambig_aux; //~ ERROR file for module `mod_file_disambig_aux` found at both\n+\n+fn main() {\n+    assert_eq!(mod_file_aux::bar(), 10);\n+}"}, {"sha": "ca5fc51337d1510129cd4d8c1ec65e2993ccfa77", "filename": "src/test/compile-fail/mod_file_disambig_aux.rs", "status": "renamed", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7b2218d248571a242ac243e0443d95619bdda056/src%2Ftest%2Fcompile-fail%2Fmod_file_disambig_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2218d248571a242ac243e0443d95619bdda056/src%2Ftest%2Fcompile-fail%2Fmod_file_disambig_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmod_file_disambig_aux.rs?ref=7b2218d248571a242ac243e0443d95619bdda056", "patch": "@@ -8,6 +8,4 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:error opening\n-\n-mod doesnotexist;\n\\ No newline at end of file\n+// xfail-test not a test. aux file", "previous_filename": "src/test/compile-fail/missingmod.rc"}, {"sha": "ca5fc51337d1510129cd4d8c1ec65e2993ccfa77", "filename": "src/test/compile-fail/mod_file_disambig_aux/mod.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7b2218d248571a242ac243e0443d95619bdda056/src%2Ftest%2Fcompile-fail%2Fmod_file_disambig_aux%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2218d248571a242ac243e0443d95619bdda056/src%2Ftest%2Fcompile-fail%2Fmod_file_disambig_aux%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmod_file_disambig_aux%2Fmod.rs?ref=7b2218d248571a242ac243e0443d95619bdda056", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-test not a test. aux file"}, {"sha": "8391ff6fa395eb1e93bfc13a669db4af91382628", "filename": "src/test/compile-fail/mod_file_not_exist.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b2218d248571a242ac243e0443d95619bdda056/src%2Ftest%2Fcompile-fail%2Fmod_file_not_exist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2218d248571a242ac243e0443d95619bdda056/src%2Ftest%2Fcompile-fail%2Fmod_file_not_exist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmod_file_not_exist.rs?ref=7b2218d248571a242ac243e0443d95619bdda056", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-mod not_a_real_file; //~ ERROR not_a_real_file.rs\n+mod not_a_real_file; //~ ERROR file not found for module `not_a_real_file`\n \n fn main() {\n     assert_eq!(mod_file_aux::bar(), 10);"}, {"sha": "eb5f72e59eb572a08d084da8028a9f47df5ce9c3", "filename": "src/test/run-pass/mod_dir_implicit.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7b2218d248571a242ac243e0443d95619bdda056/src%2Ftest%2Frun-pass%2Fmod_dir_implicit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2218d248571a242ac243e0443d95619bdda056/src%2Ftest%2Frun-pass%2Fmod_dir_implicit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_implicit.rs?ref=7b2218d248571a242ac243e0443d95619bdda056", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-pretty\n+// xfail-fast\n+\n+mod mod_dir_implicit_aux;\n+\n+pub fn main() {\n+    assert_eq!(mod_dir_implicit_aux::foo(), 10);\n+}"}, {"sha": "a3c1628725a07ed4b8525df1c021d8dcc0da0d50", "filename": "src/test/run-pass/mod_dir_implicit_aux/mod.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7b2218d248571a242ac243e0443d95619bdda056/src%2Ftest%2Frun-pass%2Fmod_dir_implicit_aux%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2218d248571a242ac243e0443d95619bdda056/src%2Ftest%2Frun-pass%2Fmod_dir_implicit_aux%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_implicit_aux%2Fmod.rs?ref=7b2218d248571a242ac243e0443d95619bdda056", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo() -> int { 10 }"}]}