{"sha": "21d613b1116eef86d613d5f7f10d8fa5f22e27b3", "node_id": "C_kwDOAAsO6NoAKDIxZDYxM2IxMTE2ZWVmODZkNjEzZDVmN2YxMGQ4ZmE1ZjIyZTI3YjM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-04T05:01:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-04T05:01:47Z"}, "message": "Auto merge of #96447 - petrochenkov:docregr, r=GuillaumeGomez\n\nrustdoc: Resolve doc links on fields during early resolution\n\nAnother subset of https://github.com/rust-lang/rust/pull/94857 which fixes https://github.com/rust-lang/rust/issues/96429.\n\nThis case regressed in https://github.com/rust-lang/rust/pull/96135 when `may_have_doc_links`-based filtering was introduced.\nBefore that filtering structs could collect traits in scope for their fields, but after the filtering structs won't collect anything if they don't have doc comments on them, so we have to visit fields too.", "tree": {"sha": "f08b424e3a630aec38f6559a14a8668aa29ed03e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f08b424e3a630aec38f6559a14a8668aa29ed03e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21d613b1116eef86d613d5f7f10d8fa5f22e27b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21d613b1116eef86d613d5f7f10d8fa5f22e27b3", "html_url": "https://github.com/rust-lang/rust/commit/21d613b1116eef86d613d5f7f10d8fa5f22e27b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21d613b1116eef86d613d5f7f10d8fa5f22e27b3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9add63257bd3968a7b7ea3372db9d548561e3396", "url": "https://api.github.com/repos/rust-lang/rust/commits/9add63257bd3968a7b7ea3372db9d548561e3396", "html_url": "https://github.com/rust-lang/rust/commit/9add63257bd3968a7b7ea3372db9d548561e3396"}, {"sha": "6d590ba9426f60459c66d19f73b52f774e23e308", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d590ba9426f60459c66d19f73b52f774e23e308", "html_url": "https://github.com/rust-lang/rust/commit/6d590ba9426f60459c66d19f73b52f774e23e308"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "07d05cab1d1d7bbfa719c3cca89ca7a8bb0ccde3", "filename": "src/librustdoc/passes/collect_intra_doc_links/early.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/21d613b1116eef86d613d5f7f10d8fa5f22e27b3/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21d613b1116eef86d613d5f7f10d8fa5f22e27b3/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links%2Fearly.rs?ref=21d613b1116eef86d613d5f7f10d8fa5f22e27b3", "patch": "@@ -293,10 +293,22 @@ impl<'ra> EarlyDocLinkResolver<'_, 'ra> {\n                     if let Res::Def(DefKind::Mod, ..) = child.res {\n                         self.resolve_doc_links_extern_inner(def_id); // Inner attribute scope\n                     }\n-                    // Traits are processed in `add_extern_traits_in_scope`.\n+                    // `DefKind::Trait`s are processed in `process_extern_impls`.\n                     if let Res::Def(DefKind::Mod | DefKind::Enum, ..) = child.res {\n                         self.process_module_children_or_reexports(def_id);\n                     }\n+                    if let Res::Def(DefKind::Struct | DefKind::Union | DefKind::Variant, _) =\n+                        child.res\n+                    {\n+                        let field_def_ids = Vec::from_iter(\n+                            self.resolver\n+                                .cstore()\n+                                .associated_item_def_ids_untracked(def_id, self.sess),\n+                        );\n+                        for field_def_id in field_def_ids {\n+                            self.resolve_doc_links_extern_outer(field_def_id, scope_id);\n+                        }\n+                    }\n                 }\n             }\n         }"}, {"sha": "e18404e44306e56e709bea357120b92281a53e3b", "filename": "src/test/rustdoc-ui/intra-doc/assoc-field.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/21d613b1116eef86d613d5f7f10d8fa5f22e27b3/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fassoc-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21d613b1116eef86d613d5f7f10d8fa5f22e27b3/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fassoc-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fassoc-field.rs?ref=21d613b1116eef86d613d5f7f10d8fa5f22e27b3", "patch": "@@ -0,0 +1,26 @@\n+// Traits in scope are collected for doc links in field attributes.\n+\n+// check-pass\n+// aux-build: assoc-field-dep.rs\n+\n+extern crate assoc_field_dep;\n+pub use assoc_field_dep::*;\n+\n+#[derive(Clone)]\n+pub struct Struct;\n+\n+pub mod mod1 {\n+    pub struct Fields {\n+        /// [crate::Struct::clone]\n+        pub field: u8,\n+    }\n+}\n+\n+pub mod mod2 {\n+    pub enum Fields {\n+        V {\n+            /// [crate::Struct::clone]\n+            field: u8,\n+        },\n+    }\n+}"}, {"sha": "cfb24fc2c665c04166b5fe998db5256d6a06451f", "filename": "src/test/rustdoc-ui/intra-doc/auxiliary/assoc-field-dep.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/21d613b1116eef86d613d5f7f10d8fa5f22e27b3/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fauxiliary%2Fassoc-field-dep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21d613b1116eef86d613d5f7f10d8fa5f22e27b3/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fauxiliary%2Fassoc-field-dep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fauxiliary%2Fassoc-field-dep.rs?ref=21d613b1116eef86d613d5f7f10d8fa5f22e27b3", "patch": "@@ -0,0 +1,18 @@\n+#[derive(Clone)]\n+pub struct Struct;\n+\n+pub mod dep_mod1 {\n+    pub struct Fields {\n+        /// [crate::Struct::clone]\n+        pub field: u8,\n+    }\n+}\n+\n+pub mod dep_mod2 {\n+    pub enum Fields {\n+        V {\n+            /// [crate::Struct::clone]\n+            field: u8,\n+        },\n+    }\n+}"}]}