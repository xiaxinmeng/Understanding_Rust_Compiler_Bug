{"sha": "03c000eb20b4f36428b8c64056bc54de8cd767ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzYzAwMGViMjBiNGYzNjQyOGI4YzY0MDU2YmM1NGRlOGNkNzY3YWM=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2021-02-03T02:53:30Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2021-02-03T02:53:30Z"}, "message": "Use `# min-llvm-version: 11.0` to force a minimum LLVM version, rather than ad-hoc internal solution.\n\nIn particular: the specific code to define LLVM_VERSION_11_PLUS here was, for\nsome reason, using `$(shell ...)` with bash-specific variable replacement code.\nOn non-bash platforms like dash, that `shell` invocation would fail, and the\nLLVM_VERSION_11_PLUS check would always fail, the test would always be ignored,\nand thus be treated as a \"success\" (in the sense that `--bless` would never do\nanything).\n\nThis was causing me a lot of pain.", "tree": {"sha": "5d7f21401141e0a512c32d9e05285e28206c3542", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d7f21401141e0a512c32d9e05285e28206c3542"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03c000eb20b4f36428b8c64056bc54de8cd767ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03c000eb20b4f36428b8c64056bc54de8cd767ac", "html_url": "https://github.com/rust-lang/rust/commit/03c000eb20b4f36428b8c64056bc54de8cd767ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03c000eb20b4f36428b8c64056bc54de8cd767ac/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "368275062fb655c1f36e0398f88b15379a1f3c93", "url": "https://api.github.com/repos/rust-lang/rust/commits/368275062fb655c1f36e0398f88b15379a1f3c93", "html_url": "https://github.com/rust-lang/rust/commit/368275062fb655c1f36e0398f88b15379a1f3c93"}], "stats": {"total": 25, "additions": 3, "deletions": 22}, "files": [{"sha": "7d9121ee2f8347293d6accf1fa815c5ff39bf378", "filename": "src/test/run-make-fulldeps/coverage-llvmir/Makefile", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/03c000eb20b4f36428b8c64056bc54de8cd767ac/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/03c000eb20b4f36428b8c64056bc54de8cd767ac/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir%2FMakefile?ref=03c000eb20b4f36428b8c64056bc54de8cd767ac", "patch": "@@ -1,4 +1,5 @@\n # needs-profiler-support\n+# min-llvm-version: 11.0\n \n -include ../coverage/coverage_tools.mk\n \n@@ -48,12 +49,7 @@ else\n \t\t-DINSTR_PROF_ORDERFILE='$(DATA_SECTION_PREFIX)__llvm_orderfile'\n endif\n \n-ifeq ($(LLVM_VERSION_11_PLUS),true)\n all: test_llvm_ir\n-else\n-$(info Rust option `-Z instrument-coverage` requires LLVM 11 or higher. Test skipped.)\n-all:\n-endif\n \n test_llvm_ir:\n \t# Compile the test program with non-experimental coverage instrumentation, and generate LLVM IR"}, {"sha": "ebbe065f5235f4d9d827abc1566460f7ea9aeb4e", "filename": "src/test/run-make-fulldeps/coverage-reports/Makefile", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/03c000eb20b4f36428b8c64056bc54de8cd767ac/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/03c000eb20b4f36428b8c64056bc54de8cd767ac/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2FMakefile?ref=03c000eb20b4f36428b8c64056bc54de8cd767ac", "patch": "@@ -1,5 +1,6 @@\n # needs-profiler-support\n # ignore-windows-gnu\n+# min-llvm-version: 11.0\n \n # FIXME(mati865): MinGW GCC miscompiles compiler-rt profiling library but with Clang it works\n # properly. Since we only have GCC on the CI ignore the test for now.\n@@ -67,12 +68,7 @@ ifdef RUSTC_BLESS_TEST\n DEBUG_FLAG=--debug\n endif\n \n-ifeq ($(LLVM_VERSION_11_PLUS),true)\n all: $(patsubst $(SOURCEDIR)/lib/%.rs,%,$(wildcard $(SOURCEDIR)/lib/*.rs)) $(patsubst $(SOURCEDIR)/%.rs,%,$(wildcard $(SOURCEDIR)/*.rs))\n-else\n-$(info Rust option `-Z instrument-coverage` requires LLVM 11 or higher. Test skipped.)\n-all:\n-endif\n \n # Ensure there are no `expected` results for tests that may have been removed or renamed\n .PHONY: clear_expected_if_blessed"}, {"sha": "2713e7d52ffd31cbfbd2faee8e3b182dc1140297", "filename": "src/test/run-make-fulldeps/coverage-spanview/Makefile", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/03c000eb20b4f36428b8c64056bc54de8cd767ac/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/03c000eb20b4f36428b8c64056bc54de8cd767ac/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2FMakefile?ref=03c000eb20b4f36428b8c64056bc54de8cd767ac", "patch": "@@ -1,4 +1,5 @@\n # needs-profiler-support\n+# min-llvm-version: 11.0\n \n -include ../coverage/coverage_tools.mk\n \n@@ -20,12 +21,7 @@ For revisions in Pull Requests (PR):\n endef\n export SPANVIEW_HEADER\n \n-ifeq ($(LLVM_VERSION_11_PLUS),true)\n all: $(patsubst $(SOURCEDIR)/lib/%.rs,%,$(wildcard $(SOURCEDIR)/lib/*.rs)) $(patsubst $(SOURCEDIR)/%.rs,%,$(wildcard $(SOURCEDIR)/*.rs))\n-else\n-$(info Rust option `-Z instrument-coverage` requires LLVM 11 or higher. Test skipped.)\n-all:\n-endif\n \n # Ensure there are no `expected` results for tests that may have been removed or renamed\n .PHONY: clear_expected_if_blessed"}, {"sha": "11fd824e5272f62800fb6fff05a2af9eb18a18e5", "filename": "src/test/run-make-fulldeps/coverage/coverage_tools.mk", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/03c000eb20b4f36428b8c64056bc54de8cd767ac/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fcoverage_tools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/03c000eb20b4f36428b8c64056bc54de8cd767ac/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fcoverage_tools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fcoverage_tools.mk?ref=03c000eb20b4f36428b8c64056bc54de8cd767ac", "patch": "@@ -14,10 +14,3 @@\n # Therefore, `-C link-dead-code` is no longer automatically enabled.\n \n UNAME = $(shell uname)\n-\n-# Rust option `-Z instrument-coverage` uses LLVM Coverage Mapping Format version 4,\n-# which requires LLVM 11 or greater.\n-LLVM_VERSION_11_PLUS := $(shell \\\n-\t\tLLVM_VERSION=$$(\"$(LLVM_BIN_DIR)\"/llvm-config --version) && \\\n-\t\tLLVM_VERSION_MAJOR=$${LLVM_VERSION/.*/} && \\\n-\t\t[ $$LLVM_VERSION_MAJOR -ge 11 ] && echo true || echo false)"}]}