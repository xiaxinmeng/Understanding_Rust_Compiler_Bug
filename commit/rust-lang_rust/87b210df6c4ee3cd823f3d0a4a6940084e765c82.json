{"sha": "87b210df6c4ee3cd823f3d0a4a6940084e765c82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3YjIxMGRmNmM0ZWUzY2Q4MjNmM2QwYTRhNjk0MDA4NGU3NjVjODI=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-11T05:03:54Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-11T16:39:32Z"}, "message": "Fix sign when number of seconds is zero", "tree": {"sha": "9c728e3cc1a3ae6fb974873426cf9788c2c4520c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c728e3cc1a3ae6fb974873426cf9788c2c4520c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87b210df6c4ee3cd823f3d0a4a6940084e765c82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87b210df6c4ee3cd823f3d0a4a6940084e765c82", "html_url": "https://github.com/rust-lang/rust/commit/87b210df6c4ee3cd823f3d0a4a6940084e765c82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87b210df6c4ee3cd823f3d0a4a6940084e765c82/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f4d185d1b39b98846895b06d4a29525365eba4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f4d185d1b39b98846895b06d4a29525365eba4f", "html_url": "https://github.com/rust-lang/rust/commit/8f4d185d1b39b98846895b06d4a29525365eba4f"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "2995bdc4346425a33329f1b5132ccd37fe19dde9", "filename": "src/shims/time.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/87b210df6c4ee3cd823f3d0a4a6940084e765c82/src%2Fshims%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87b210df6c4ee3cd823f3d0a4a6940084e765c82/src%2Fshims%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ftime.rs?ref=87b210df6c4ee3cd823f3d0a4a6940084e765c82", "patch": "@@ -16,6 +16,7 @@ fn get_time() -> (Duration, i128) {\n \n impl<'mir, 'tcx> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}\n pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx> {\n+    // Foreign function used by linux\n     fn clock_gettime(\n         &mut self,\n         clk_id_op: OpTy<'tcx, Tag>,\n@@ -38,12 +39,17 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         let (duration, sign) = get_time();\n         let tv_sec = sign * (duration.as_secs() as i128);\n-        let tv_nsec = duration.subsec_nanos() as i128;\n+        let mut tv_nsec = duration.subsec_nanos() as i128;\n+        // If the number of seconds is zero, we need to put the sign into the second's fraction.\n+        if tv_sec == 0 && sign < 0 {\n+            tv_nsec *= sign;\n+        }\n+\n         this.write_c_ints(&tp, &[tv_sec, tv_nsec], &[\"time_t\", \"c_long\"])?;\n \n         Ok(0)\n     }\n-\n+    // Foreign function used by generic unix\n     fn gettimeofday(\n         &mut self,\n         tv_op: OpTy<'tcx, Tag>,\n@@ -66,7 +72,11 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         let (duration, sign) = get_time();\n         let tv_sec = sign * (duration.as_secs() as i128);\n-        let tv_usec = duration.subsec_micros() as i128;\n+        let mut tv_usec = duration.subsec_micros() as i128;\n+        // If the number of seconds is zero, we need to put the sign into the second's fraction.\n+        if tv_sec == 0 && sign < 0 {\n+            tv_usec *= sign;\n+        }\n \n         this.write_c_ints(&tv, &[tv_sec, tv_usec], &[\"time_t\", \"suseconds_t\"])?;\n "}]}