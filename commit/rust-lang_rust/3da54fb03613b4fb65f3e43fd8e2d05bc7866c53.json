{"sha": "3da54fb03613b4fb65f3e43fd8e2d05bc7866c53", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYTU0ZmIwMzYxM2I0ZmI2NWYzZTQzZmQ4ZTJkMDViYzc4NjZjNTM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-09-15T22:28:59Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-09-15T22:28:59Z"}, "message": "rustbuild: Fix test \"test rustdoc\" invocation\n\nPreviously it would use the librustc output directory which would cause rustdoc\nto get entirely recompiled, whereas the intention is that it uses the\nalready-compiled artifacts from building rustdoc itself, using the tool output\ndirectory", "tree": {"sha": "f8106ff111733b18267985347e2798e9b0000a73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8106ff111733b18267985347e2798e9b0000a73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3da54fb03613b4fb65f3e43fd8e2d05bc7866c53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3da54fb03613b4fb65f3e43fd8e2d05bc7866c53", "html_url": "https://github.com/rust-lang/rust/commit/3da54fb03613b4fb65f3e43fd8e2d05bc7866c53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3da54fb03613b4fb65f3e43fd8e2d05bc7866c53/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd4bef54abafe6d93ec3c87498de696da6ef5819", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd4bef54abafe6d93ec3c87498de696da6ef5819", "html_url": "https://github.com/rust-lang/rust/commit/fd4bef54abafe6d93ec3c87498de696da6ef5819"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "5853d5ae3204e034e1050427e4146e30c17bbd61", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3da54fb03613b4fb65f3e43fd8e2d05bc7866c53/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da54fb03613b4fb65f3e43fd8e2d05bc7866c53/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=3da54fb03613b4fb65f3e43fd8e2d05bc7866c53", "patch": "@@ -1118,10 +1118,11 @@ impl Step for Rustdoc {\n         let compiler = builder.compiler(builder.top_stage, self.host);\n         let target = compiler.host;\n \n-        builder.ensure(RemoteCopyLibs { compiler, target });\n-\n-        let mut cargo = builder.cargo(compiler, Mode::Librustc, target, test_kind.subcommand());\n-        compile::rustc_cargo(build, &compiler, target, &mut cargo);\n+        let mut cargo = tool::prepare_tool_cargo(builder,\n+                                                 compiler,\n+                                                 target,\n+                                                 test_kind.subcommand(),\n+                                                 \"src/tools/rustdoc\");\n         let _folder = build.fold_output(|| {\n             format!(\"{}_stage{}-rustdoc\", test_kind.subcommand(), compiler.stage)\n         });"}, {"sha": "26ea89b68497c47da792b379cf39df116818b6b2", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3da54fb03613b4fb65f3e43fd8e2d05bc7866c53/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da54fb03613b4fb65f3e43fd8e2d05bc7866c53/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=3da54fb03613b4fb65f3e43fd8e2d05bc7866c53", "patch": "@@ -94,20 +94,21 @@ impl Step for ToolBuild {\n         let _folder = build.fold_output(|| format!(\"stage{}-{}\", compiler.stage, tool));\n         println!(\"Building stage{} tool {} ({})\", compiler.stage, tool, target);\n \n-        let mut cargo = prepare_tool_cargo(builder, compiler, target, path);\n+        let mut cargo = prepare_tool_cargo(builder, compiler, target, \"build\", path);\n         build.run(&mut cargo);\n         build.cargo_out(compiler, Mode::Tool, target).join(exe(tool, &compiler.host))\n     }\n }\n \n-fn prepare_tool_cargo(\n+pub fn prepare_tool_cargo(\n     builder: &Builder,\n     compiler: Compiler,\n     target: Interned<String>,\n+    command: &'static str,\n     path: &'static str,\n ) -> Command {\n     let build = builder.build;\n-    let mut cargo = builder.cargo(compiler, Mode::Tool, target, \"build\");\n+    let mut cargo = builder.cargo(compiler, Mode::Tool, target, command);\n     let dir = build.src.join(path);\n     cargo.arg(\"--manifest-path\").arg(dir.join(\"Cargo.toml\"));\n \n@@ -283,6 +284,7 @@ impl Step for Rustdoc {\n         let mut cargo = prepare_tool_cargo(builder,\n                                            build_compiler,\n                                            target,\n+                                           \"build\",\n                                            \"src/tools/rustdoc\");\n         build.run(&mut cargo);\n         // Cargo adds a number of paths to the dylib search path on windows, which results in"}]}