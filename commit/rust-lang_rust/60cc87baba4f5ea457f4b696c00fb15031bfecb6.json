{"sha": "60cc87baba4f5ea457f4b696c00fb15031bfecb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwY2M4N2JhYmE0ZjVlYTQ1N2Y0YjY5NmMwMGZiMTUwMzFiZmVjYjY=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2016-06-26T12:13:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-26T12:13:24Z"}, "message": "Merge pull request #1041 from oli-obk/procedural\n\ndon't depend on regex_macros anymore", "tree": {"sha": "a56c3fbb22a385666ac92f2fd22d84ad901b0b10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a56c3fbb22a385666ac92f2fd22d84ad901b0b10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60cc87baba4f5ea457f4b696c00fb15031bfecb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60cc87baba4f5ea457f4b696c00fb15031bfecb6", "html_url": "https://github.com/rust-lang/rust/commit/60cc87baba4f5ea457f4b696c00fb15031bfecb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60cc87baba4f5ea457f4b696c00fb15031bfecb6/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e43d1d78cd080c634ef371f24190d5022f456cf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e43d1d78cd080c634ef371f24190d5022f456cf1", "html_url": "https://github.com/rust-lang/rust/commit/e43d1d78cd080c634ef371f24190d5022f456cf1"}, {"sha": "2e86eb88f3e36a74ab59bfaa77fe01cf8d1cc028", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e86eb88f3e36a74ab59bfaa77fe01cf8d1cc028", "html_url": "https://github.com/rust-lang/rust/commit/2e86eb88f3e36a74ab59bfaa77fe01cf8d1cc028"}], "stats": {"total": 100, "additions": 52, "deletions": 48}, "files": [{"sha": "34e50956cc56b8b1a4d912866bd384c4f4a465c7", "filename": ".travis.yml", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/60cc87baba4f5ea457f4b696c00fb15031bfecb6/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/60cc87baba4f5ea457f4b696c00fb15031bfecb6/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=60cc87baba4f5ea457f4b696c00fb15031bfecb6", "patch": "@@ -26,13 +26,6 @@ script:\n  - cd clippy_lints && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D clippy && cd ..\n \n after_success:\n-# only test regex_macros if it compiles\n-- |\n-    #!/bin/bash\n-    cargo test --no-run --features 'debugging test-regex_macros'\n-    if [ \"$?\" != 101 ]; then\n-        cargo test --features 'debugging test-regex_macros' compile_test\n-    fi\n # trigger rebuild of the clippy-service, to keep it up to date with clippy itself\n - |\n     #!/bin/bash"}, {"sha": "5dc1363f3f5337d4e7bde53cfe47f52eb129352a", "filename": "Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/60cc87baba4f5ea457f4b696c00fb15031bfecb6/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/60cc87baba4f5ea457f4b696c00fb15031bfecb6/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=60cc87baba4f5ea457f4b696c00fb15031bfecb6", "patch": "@@ -24,17 +24,17 @@ name = \"cargo-clippy\"\n test = false\n \n [dependencies]\n-regex_macros = { version = \"0.1.33\", optional = true }\n # begin automatic update\n clippy_lints = { version = \"0.0.77\", path = \"clippy_lints\" }\n # end automatic update\n \n [dev-dependencies]\n compiletest_rs = \"0.2.0\"\n lazy_static = \"0.1.15\"\n-regex = \"0.1.56\"\n+regex = \"0.1.71\"\n rustc-serialize = \"0.3\"\n+clippy-mini-macro-test = { version = \"0.1\", path = \"mini-macro\" }\n+\n \n [features]\n debugging = []\n-test-regex_macros = [\"regex_macros\"]"}, {"sha": "f884ab48059fb9d033b0cfcabe5601e96a6bfd66", "filename": "mini-macro/Cargo.toml", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/60cc87baba4f5ea457f4b696c00fb15031bfecb6/mini-macro%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/60cc87baba4f5ea457f4b696c00fb15031bfecb6/mini-macro%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mini-macro%2FCargo.toml?ref=60cc87baba4f5ea457f4b696c00fb15031bfecb6", "patch": "@@ -0,0 +1,19 @@\n+[package]\n+name = \"clippy-mini-macro-test\"\n+version = \"0.1.0\"\n+authors = [\n+\t\"Manish Goregaokar <manishsmail@gmail.com>\",\n+\t\"Andre Bogus <bogusandre@gmail.com>\",\n+\t\"Georg Brandl <georg@python.org>\",\n+\t\"Martin Carton <cartonmartin@gmail.com>\",\n+\t\"Oliver Schneider <clippy-iethah7aipeen8neex1a@oli-obk.de>\"\n+]\n+license = \"MPL-2.0\"\n+description = \"A macro to test clippy's procedural macro checks\"\n+repository = \"https://github.com/Manishearth/rust-clippy\"\n+\n+[lib]\n+name = \"clippy_mini_macro_test\"\n+plugin = true\n+\n+[dependencies]"}, {"sha": "699d17d4d70ca1dd00b4d06632251da62f6d8be3", "filename": "mini-macro/src/lib.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/60cc87baba4f5ea457f4b696c00fb15031bfecb6/mini-macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60cc87baba4f5ea457f4b696c00fb15031bfecb6/mini-macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mini-macro%2Fsrc%2Flib.rs?ref=60cc87baba4f5ea457f4b696c00fb15031bfecb6", "patch": "@@ -0,0 +1,22 @@\n+#![feature(plugin_registrar, rustc_private)]\n+\n+extern crate syntax;\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use syntax::codemap::Span;\n+use syntax::ast::TokenTree;\n+use syntax::ext::base::{ExtCtxt, MacResult, MacEager};\n+use syntax::ext::build::AstBuilder;  // trait for expr_usize\n+use rustc_plugin::Registry;\n+\n+fn expand_macro(cx: &mut ExtCtxt, sp: Span, _: &[TokenTree]) -> Box<MacResult + 'static> {\n+    let e = cx.expr_usize(sp, 42);\n+    let e = cx.expr_mut_addr_of(sp, e);\n+    MacEager::expr(cx.expr_mut_addr_of(sp, e))\n+}\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_macro(\"mini_macro\", expand_macro);\n+}"}, {"sha": "aab196fb79545b039d9392af4d0e73cccab22446", "filename": "tests/compile-fail-regex_macros/regex.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e43d1d78cd080c634ef371f24190d5022f456cf1/tests%2Fcompile-fail-regex_macros%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e43d1d78cd080c634ef371f24190d5022f456cf1/tests%2Fcompile-fail-regex_macros%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail-regex_macros%2Fregex.rs?ref=e43d1d78cd080c634ef371f24190d5022f456cf1", "patch": "@@ -1,12 +0,0 @@\n-#![feature(plugin)]\n-#![plugin(clippy, regex_macros)]\n-\n-#![allow(unused)]\n-#![deny(invalid_regex, trivial_regex, regex_macro)]\n-\n-extern crate regex;\n-\n-fn main() {\n-    let some_regex = regex!(\"for real!\"); //~ERROR `regex!(_)`\n-    let other_regex = regex!(\"[a-z]_[A-Z]\"); //~ERROR `regex!(_)`\n-}"}, {"sha": "d21d97509241f24c4b225c486ee30dc3b5e26736", "filename": "tests/compile-test.rs", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/60cc87baba4f5ea457f4b696c00fb15031bfecb6/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60cc87baba4f5ea457f4b696c00fb15031bfecb6/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=60cc87baba4f5ea457f4b696c00fb15031bfecb6", "patch": "@@ -1,7 +1,7 @@\n extern crate compiletest_rs as compiletest;\n \n use std::path::PathBuf;\n-use std::env::{set_var, var, temp_dir};\n+use std::env::{set_var, var};\n \n fn run_mode(dir: &'static str, mode: &'static str) {\n     let mut config = compiletest::default_config();\n@@ -14,10 +14,6 @@ fn run_mode(dir: &'static str, mode: &'static str) {\n     }\n \n     config.mode = cfg_mode;\n-    if cfg!(windows) {\n-        // work around https://github.com/laumann/compiletest-rs/issues/35 on msvc windows\n-        config.build_base = temp_dir();\n-    }\n     config.src_base = PathBuf::from(format!(\"tests/{}\", dir));\n \n     compiletest::run_tests(&config);\n@@ -28,17 +24,8 @@ fn prepare_env() {\n }\n \n #[test]\n-#[cfg(not(feature = \"test-regex_macros\"))]\n fn compile_test() {\n     prepare_env();\n     run_mode(\"run-pass\", \"run-pass\");\n     run_mode(\"compile-fail\", \"compile-fail\");\n }\n-\n-#[test]\n-#[cfg(feature = \"test-regex_macros\")]\n-fn compile_test() {\n-    prepare_env();\n-    run_mode(\"run-pass-regex_macros\", \"run-pass\");\n-    run_mode(\"compile-fail-regex_macros\", \"compile-fail\");\n-}"}, {"sha": "92b44dbdd482ec510f5d50a35af63741c72d9e5a", "filename": "tests/run-pass-regex_macros/mut_mut_macro.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e43d1d78cd080c634ef371f24190d5022f456cf1/tests%2Frun-pass-regex_macros%2Fmut_mut_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e43d1d78cd080c634ef371f24190d5022f456cf1/tests%2Frun-pass-regex_macros%2Fmut_mut_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-regex_macros%2Fmut_mut_macro.rs?ref=e43d1d78cd080c634ef371f24190d5022f456cf1", "patch": "@@ -1,12 +0,0 @@\n-#![feature(plugin)]\n-#![plugin(clippy, regex_macros)]\n-\n-#[macro_use]\n-extern crate regex;\n-\n-#[deny(mut_mut)]\n-#[allow(regex_macro)]\n-fn main() {\n-    let pattern = regex!(r\"^(?P<level>[#]+)\\s(?P<title>.+)$\");\n-    assert!(pattern.is_match(\"# headline\"));\n-}"}, {"sha": "91269726172d3497c381257c5ea65ce17f3447aa", "filename": "tests/run-pass/procedural_macro.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/60cc87baba4f5ea457f4b696c00fb15031bfecb6/tests%2Frun-pass%2Fprocedural_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60cc87baba4f5ea457f4b696c00fb15031bfecb6/tests%2Frun-pass%2Fprocedural_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fprocedural_macro.rs?ref=60cc87baba4f5ea457f4b696c00fb15031bfecb6", "patch": "@@ -0,0 +1,7 @@\n+#![feature(plugin)]\n+#![plugin(clippy, clippy_mini_macro_test)]\n+\n+#[deny(warnings)]\n+fn main() {\n+    let _ = mini_macro!();\n+}"}]}