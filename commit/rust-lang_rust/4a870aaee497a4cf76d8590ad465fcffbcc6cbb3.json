{"sha": "4a870aaee497a4cf76d8590ad465fcffbcc6cbb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhODcwYWFlZTQ5N2E0Y2Y3NmQ4NTkwYWQ0NjVmY2ZmYmNjNmNiYjM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-23T20:19:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-23T20:19:16Z"}, "message": "Rollup merge of #65641 - nnethercote:derive-TokenStream-Encodable-Decodable, r=petrochenkov\n\nDerive `Rustc{En,De}codable` for `TokenStream`.\n\n`TokenStream` used to be a complex type, but it is now just a newtype\naround a `Lrc<Vec<TreeAndJoint>>`. Currently it uses custom encoding\nthat discards the `IsJoint` and custom decoding that adds `NonJoint`\nback in for every token tree. This requires building intermediate\n`Vec<TokenTree>`s.\n\nThis commit makes `TokenStream` derive `Rustc{En,De}codable`. This\nsimplifies the code, and avoids the creation of the intermediate\nvectors, saving up to 3% on various benchmarks. It also changes the AST\nJSON output in one test.\n\nr? @petrochenkov", "tree": {"sha": "917468d72264b6f947a6eea7ec9e31a2f742f740", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/917468d72264b6f947a6eea7ec9e31a2f742f740"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a870aaee497a4cf76d8590ad465fcffbcc6cbb3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdsLXECRBK7hj4Ov3rIwAAdHIIACV0WeeyqxfcmKoaMC/GrfRC\nsRg5yO0FICfGDzVa6+TSt7dDJGNxKgK5YVTkkubKi8PbUVGD5im2j+hMms+GpJpL\nvNXbsaAYOGT3XBDtL7H7sKmM7FZEuuIRTUAUaIt3Tp0FOxefp55R8febrmqkFFo1\nZDG0PUEfTrdgsGytLQEogbunPlcdSPfPpSvFvHWFOkMR4ADxHDD/W3tgFWFc4Hj/\nh03s0ItQmiNDQHk5fRBImbsQjYFO9dkHZFVnvVL0xuKEKt6dLUVtp5Mru8EltuZg\nMxsFhOdvQyTjh4+USG7+fswHN3XflVFfwfjWEqnldPSYzHXjfXKgwNCkNRk60JU=\n=QSdN\n-----END PGP SIGNATURE-----\n", "payload": "tree 917468d72264b6f947a6eea7ec9e31a2f742f740\nparent c192e318cabe4e8a3ea59837bcf82e94b0d4c965\nparent c290293cf291951825b10830df4bce3bc03aabef\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1571861956 +0200\ncommitter GitHub <noreply@github.com> 1571861956 +0200\n\nRollup merge of #65641 - nnethercote:derive-TokenStream-Encodable-Decodable, r=petrochenkov\n\nDerive `Rustc{En,De}codable` for `TokenStream`.\n\n`TokenStream` used to be a complex type, but it is now just a newtype\naround a `Lrc<Vec<TreeAndJoint>>`. Currently it uses custom encoding\nthat discards the `IsJoint` and custom decoding that adds `NonJoint`\nback in for every token tree. This requires building intermediate\n`Vec<TokenTree>`s.\n\nThis commit makes `TokenStream` derive `Rustc{En,De}codable`. This\nsimplifies the code, and avoids the creation of the intermediate\nvectors, saving up to 3% on various benchmarks. It also changes the AST\nJSON output in one test.\n\nr? @petrochenkov\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a870aaee497a4cf76d8590ad465fcffbcc6cbb3", "html_url": "https://github.com/rust-lang/rust/commit/4a870aaee497a4cf76d8590ad465fcffbcc6cbb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a870aaee497a4cf76d8590ad465fcffbcc6cbb3/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c192e318cabe4e8a3ea59837bcf82e94b0d4c965", "url": "https://api.github.com/repos/rust-lang/rust/commits/c192e318cabe4e8a3ea59837bcf82e94b0d4c965", "html_url": "https://github.com/rust-lang/rust/commit/c192e318cabe4e8a3ea59837bcf82e94b0d4c965"}, {"sha": "c290293cf291951825b10830df4bce3bc03aabef", "url": "https://api.github.com/repos/rust-lang/rust/commits/c290293cf291951825b10830df4bce3bc03aabef", "html_url": "https://github.com/rust-lang/rust/commit/c290293cf291951825b10830df4bce3bc03aabef"}], "stats": {"total": 19, "additions": 3, "deletions": 16}, "files": [{"sha": "0559f224f1f4bf30306767ed59a1ce161e9e3016", "filename": "src/libsyntax/tokenstream.rs", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4a870aaee497a4cf76d8590ad465fcffbcc6cbb3/src%2Flibsyntax%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a870aaee497a4cf76d8590ad465fcffbcc6cbb3/src%2Flibsyntax%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftokenstream.rs?ref=4a870aaee497a4cf76d8590ad465fcffbcc6cbb3", "patch": "@@ -19,7 +19,6 @@ use syntax_pos::{BytePos, Span, DUMMY_SP};\n #[cfg(target_arch = \"x86_64\")]\n use rustc_data_structures::static_assert_size;\n use rustc_data_structures::sync::Lrc;\n-use rustc_serialize::{Decoder, Decodable, Encoder, Encodable};\n use smallvec::{SmallVec, smallvec};\n \n use std::{iter, mem};\n@@ -136,7 +135,7 @@ impl TokenTree {\n /// The goal is for procedural macros to work with `TokenStream`s and `TokenTree`s\n /// instead of a representation of the abstract syntax tree.\n /// Today's `TokenTree`s can still contain AST via `token::Interpolated` for back-compat.\n-#[derive(Clone, Debug, Default)]\n+#[derive(Clone, Debug, Default, RustcEncodable, RustcDecodable)]\n pub struct TokenStream(pub Lrc<Vec<TreeAndJoint>>);\n \n pub type TreeAndJoint = (TokenTree, IsJoint);\n@@ -145,7 +144,7 @@ pub type TreeAndJoint = (TokenTree, IsJoint);\n #[cfg(target_arch = \"x86_64\")]\n static_assert_size!(TokenStream, 8);\n \n-#[derive(Clone, Copy, Debug, PartialEq)]\n+#[derive(Clone, Copy, Debug, PartialEq, RustcEncodable, RustcDecodable)]\n pub enum IsJoint {\n     Joint,\n     NonJoint\n@@ -460,18 +459,6 @@ impl Cursor {\n     }\n }\n \n-impl Encodable for TokenStream {\n-    fn encode<E: Encoder>(&self, encoder: &mut E) -> Result<(), E::Error> {\n-        self.trees().collect::<Vec<_>>().encode(encoder)\n-    }\n-}\n-\n-impl Decodable for TokenStream {\n-    fn decode<D: Decoder>(decoder: &mut D) -> Result<TokenStream, D::Error> {\n-        Vec::<TokenTree>::decode(decoder).map(|vec| vec.into_iter().collect())\n-    }\n-}\n-\n #[derive(Debug, Copy, Clone, PartialEq, RustcEncodable, RustcDecodable)]\n pub struct DelimSpan {\n     pub open: Span,"}, {"sha": "64c9f69311582cfd8dfe7e59a2968f62f880d90d", "filename": "src/test/ui/ast-json/ast-json-output.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a870aaee497a4cf76d8590ad465fcffbcc6cbb3/src%2Ftest%2Fui%2Fast-json%2Fast-json-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/4a870aaee497a4cf76d8590ad465fcffbcc6cbb3/src%2Ftest%2Fui%2Fast-json%2Fast-json-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fast-json%2Fast-json-output.stdout?ref=4a870aaee497a4cf76d8590ad465fcffbcc6cbb3", "patch": "@@ -1 +1 @@\n-{\"module\":{\"inner\":{\"lo\":0,\"hi\":0},\"items\":[{\"ident\":{\"name\":\"core\",\"span\":{\"lo\":0,\"hi\":0}},\"attrs\":[],\"id\":0,\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"vis\":{\"node\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0}},\"span\":{\"lo\":0,\"hi\":0},\"tokens\":[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Ident\",\"fields\":[\"extern\",false]},\"span\":{\"lo\":0,\"hi\":0}}]},{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Ident\",\"fields\":[\"crate\",false]},\"span\":{\"lo\":0,\"hi\":0}}]},{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Ident\",\"fields\":[\"core\",false]},\"span\":{\"lo\":0,\"hi\":0}}]},{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Semi\",\"span\":{\"lo\":0,\"hi\":0}}]}]}],\"inline\":true},\"attrs\":[],\"span\":{\"lo\":0,\"hi\":0}}\n+{\"module\":{\"inner\":{\"lo\":0,\"hi\":0},\"items\":[{\"ident\":{\"name\":\"core\",\"span\":{\"lo\":0,\"hi\":0}},\"attrs\":[],\"id\":0,\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"vis\":{\"node\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0}},\"span\":{\"lo\":0,\"hi\":0},\"tokens\":{\"_field0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Ident\",\"fields\":[\"extern\",false]},\"span\":{\"lo\":0,\"hi\":0}}]},\"NonJoint\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Ident\",\"fields\":[\"crate\",false]},\"span\":{\"lo\":0,\"hi\":0}}]},\"NonJoint\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Ident\",\"fields\":[\"core\",false]},\"span\":{\"lo\":0,\"hi\":0}}]},\"NonJoint\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Semi\",\"span\":{\"lo\":0,\"hi\":0}}]},\"NonJoint\"]]}}],\"inline\":true},\"attrs\":[],\"span\":{\"lo\":0,\"hi\":0}}"}]}