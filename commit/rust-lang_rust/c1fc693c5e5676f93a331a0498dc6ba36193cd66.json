{"sha": "c1fc693c5e5676f93a331a0498dc6ba36193cd66", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZmM2OTNjNWU1Njc2ZjkzYTMzMWEwNDk4ZGM2YmEzNjE5M2NkNjY=", "commit": {"author": {"name": "Ga\u00ebtan Cassiers", "email": "gaetan.cassiers@gmail.com", "date": "2015-05-24T21:35:40Z"}, "committer": {"name": "Ga\u00ebtan Cassiers", "email": "gaetan.cassiers@gmail.com", "date": "2015-05-24T21:35:40Z"}, "message": "syle correction", "tree": {"sha": "25eda44bab57a842cb49e64e24d48b5c9d30f761", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25eda44bab57a842cb49e64e24d48b5c9d30f761"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1fc693c5e5676f93a331a0498dc6ba36193cd66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1fc693c5e5676f93a331a0498dc6ba36193cd66", "html_url": "https://github.com/rust-lang/rust/commit/c1fc693c5e5676f93a331a0498dc6ba36193cd66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1fc693c5e5676f93a331a0498dc6ba36193cd66/comments", "author": {"login": "cassiersg", "id": 9348542, "node_id": "MDQ6VXNlcjkzNDg1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/9348542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassiersg", "html_url": "https://github.com/cassiersg", "followers_url": "https://api.github.com/users/cassiersg/followers", "following_url": "https://api.github.com/users/cassiersg/following{/other_user}", "gists_url": "https://api.github.com/users/cassiersg/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassiersg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassiersg/subscriptions", "organizations_url": "https://api.github.com/users/cassiersg/orgs", "repos_url": "https://api.github.com/users/cassiersg/repos", "events_url": "https://api.github.com/users/cassiersg/events{/privacy}", "received_events_url": "https://api.github.com/users/cassiersg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cassiersg", "id": 9348542, "node_id": "MDQ6VXNlcjkzNDg1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/9348542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassiersg", "html_url": "https://github.com/cassiersg", "followers_url": "https://api.github.com/users/cassiersg/followers", "following_url": "https://api.github.com/users/cassiersg/following{/other_user}", "gists_url": "https://api.github.com/users/cassiersg/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassiersg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassiersg/subscriptions", "organizations_url": "https://api.github.com/users/cassiersg/orgs", "repos_url": "https://api.github.com/users/cassiersg/repos", "events_url": "https://api.github.com/users/cassiersg/events{/privacy}", "received_events_url": "https://api.github.com/users/cassiersg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1db6fa0fe5d8ea9ddef2d5610c2485d9ec3a3cc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1db6fa0fe5d8ea9ddef2d5610c2485d9ec3a3cc5", "html_url": "https://github.com/rust-lang/rust/commit/1db6fa0fe5d8ea9ddef2d5610c2485d9ec3a3cc5"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "c242322a51d08b146e3957677a39c7832928e768", "filename": "src/expr.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c1fc693c5e5676f93a331a0498dc6ba36193cd66/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1fc693c5e5676f93a331a0498dc6ba36193cd66/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=c1fc693c5e5676f93a331a0498dc6ba36193cd66", "patch": "@@ -132,11 +132,14 @@ impl<'a> FmtVisitor<'a> {\n         debug!(\"rewrite_paren, subexpr_str: `{}`\", subexpr_str);\n         let mut lines = subexpr_str.rsplit('\\n');\n         let last_line_len = lines.next().unwrap().len();\n-        let last_line_offset = if lines.next().is_none() {offset+1} else {0};\n+        let last_line_offset = match lines.next() {\n+            None => offset+1,\n+            Some(_) => 0,\n+        };\n         if width + offset - last_line_offset - last_line_len > 0 {\n             format!(\"({})\", subexpr_str)\n         } else {\n-            // FIXME That's correct unless we have width < 2. Return an Optrion for such cases ?\n+            // FIXME That's correct unless we have width < 2. Return an Option for such cases ?\n             format!(\"({}\\n{} )\", subexpr_str, make_indent(offset))\n         }\n     }"}]}