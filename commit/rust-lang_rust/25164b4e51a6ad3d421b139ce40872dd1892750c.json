{"sha": "25164b4e51a6ad3d421b139ce40872dd1892750c", "node_id": "C_kwDOAAsO6NoAKDI1MTY0YjRlNTFhNmFkM2Q0MjFiMTM5Y2U0MDg3MmRkMTg5Mjc1MGM", "commit": {"author": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2022-05-28T05:19:43Z"}, "committer": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2022-05-28T05:19:43Z"}, "message": "Use `pointer::is_aligned` in ThinBox debug assert", "tree": {"sha": "76a31c190fb31a4dbb4cd24c8b3f2b7a159c3316", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76a31c190fb31a4dbb4cd24c8b3f2b7a159c3316"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25164b4e51a6ad3d421b139ce40872dd1892750c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEh0+qV0hta6XFe2D54u/UMJ4RyKgFAmKRsO8ACgkQ4u/UMJ4R\nyKgZ0xAAjLvgoPUohgcbjuQ71IXP0ms0n9rx2GcqyO0gLv8M6UbBHLATePPJ1AP2\nUhw0kBACKYalZ23BxdlScR4fVrdezNedyJANdsi2xwvyvASD8CCGUZhLXI80t7Cf\nM9Bf3N4eaDT9SfQNw5wawyQfIwthb6LKWM4QUwRwLTMBMAzmSHKQrswyR9UmgUgd\naPiv2ERoVQ5eDnmfRtX3TIBwY/kOWO3Vp3J4MyZMbBkRPaThh9OwNuZ9dpMALHGa\nQOZyDGETC73Lf3GlLjhwoCIMq4yKVbUqF0CMUzaCzNWVrdCqIemRU84e4on4KbcM\njhzVGH2nQ7DPqjcn4GF8ra5uLm43DZtU97Qbr49SQH7NP2un4Yd288K7kAU5SlHt\nUjpSELsG+fBHTtccfZjTqBlUjiFQqdCLVhkTFY+sHdDCe5ys8QQaKhr8eNv57j1W\n0oTQQOWG1Ee2RW2WKLQlvfmeA5OTduPOFizQ1A56Ydgwlk9YtT2kBk69h/eidi6i\nrE6Y48/o/mkAzLsxA4R9kCYykjwFuY4INA2ZVu5ELdZvYmfy6xRyiX8lTTaMTPKZ\nsQv9xCOsH3nkTdlZuoX8k5rtAUhqlFmrLhKuWj5t/E45V+RrgnHM9As2mFPYdHF/\nRHux2kPWXdu4UalMmrHUAMpiJQcUs0sKlrFHI0t9DBEA1PAW7WI=\n=rTuC\n-----END PGP SIGNATURE-----", "payload": "tree 76a31c190fb31a4dbb4cd24c8b3f2b7a159c3316\nparent fc109bb6c68f59903dace87c69bdeb2df5a006f0\nauthor Thom Chiovoloni <chiovolonit@gmail.com> 1653715183 -0700\ncommitter Thom Chiovoloni <chiovolonit@gmail.com> 1653715183 -0700\n\nUse `pointer::is_aligned` in ThinBox debug assert\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25164b4e51a6ad3d421b139ce40872dd1892750c", "html_url": "https://github.com/rust-lang/rust/commit/25164b4e51a6ad3d421b139ce40872dd1892750c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25164b4e51a6ad3d421b139ce40872dd1892750c/comments", "author": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc109bb6c68f59903dace87c69bdeb2df5a006f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc109bb6c68f59903dace87c69bdeb2df5a006f0", "html_url": "https://github.com/rust-lang/rust/commit/fc109bb6c68f59903dace87c69bdeb2df5a006f0"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "807c035fdbd0db099ca3ecc0ff943bb4463b2233", "filename": "library/alloc/src/boxed/thin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25164b4e51a6ad3d421b139ce40872dd1892750c/library%2Falloc%2Fsrc%2Fboxed%2Fthin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25164b4e51a6ad3d421b139ce40872dd1892750c/library%2Falloc%2Fsrc%2Fboxed%2Fthin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fboxed%2Fthin.rs?ref=25164b4e51a6ad3d421b139ce40872dd1892750c", "patch": "@@ -224,7 +224,7 @@ impl<H> WithHeader<H> {\n         //    will always result in an aligned header pointer, it just may not point to the\n         //    beginning of the allocation.\n         let hp = unsafe { self.0.as_ptr().sub(Self::header_size()) as *mut H };\n-        debug_assert!((hp.addr() & (core::mem::align_of::<H>() - 1)) == 0);\n+        debug_assert!(hp.is_aligned());\n         hp\n     }\n "}, {"sha": "9c25c572a689de99f32e5cbb98198658b38942dc", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/25164b4e51a6ad3d421b139ce40872dd1892750c/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25164b4e51a6ad3d421b139ce40872dd1892750c/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=25164b4e51a6ad3d421b139ce40872dd1892750c", "patch": "@@ -168,6 +168,7 @@\n #![feature(nll)] // Not necessary, but here to test the `nll` feature.\n #![feature(rustc_allow_const_fn_unstable)]\n #![feature(rustc_attrs)]\n+#![feature(pointer_is_aligned)]\n #![feature(slice_internals)]\n #![feature(staged_api)]\n #![cfg_attr(test, feature(test))]"}]}