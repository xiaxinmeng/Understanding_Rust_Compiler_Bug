{"sha": "9e1e989f7cfbc9bb35511acdeb51b3122bf717a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMWU5ODlmN2NmYmM5YmIzNTUxMWFjZGViNTFiMzEyMmJmNzE3YTI=", "commit": {"author": {"name": "Hanif Bin Ariffin", "email": "hanif.ariffin.4326@gmail.com", "date": "2020-04-25T23:46:53Z"}, "committer": {"name": "Hanif Bin Ariffin", "email": "hanif.ariffin.4326@gmail.com", "date": "2020-06-13T19:06:22Z"}, "message": "Document unsafety in partial_insertion_sort\n\nWe already implicitly (or explicitly??) do the bound checking for the indexing.", "tree": {"sha": "2a23ae5d89d53e48630c7a42186453f312dd7ce4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a23ae5d89d53e48630c7a42186453f312dd7ce4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e1e989f7cfbc9bb35511acdeb51b3122bf717a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e1e989f7cfbc9bb35511acdeb51b3122bf717a2", "html_url": "https://github.com/rust-lang/rust/commit/9e1e989f7cfbc9bb35511acdeb51b3122bf717a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e1e989f7cfbc9bb35511acdeb51b3122bf717a2/comments", "author": {"login": "hbina", "id": 6733660, "node_id": "MDQ6VXNlcjY3MzM2NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6733660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hbina", "html_url": "https://github.com/hbina", "followers_url": "https://api.github.com/users/hbina/followers", "following_url": "https://api.github.com/users/hbina/following{/other_user}", "gists_url": "https://api.github.com/users/hbina/gists{/gist_id}", "starred_url": "https://api.github.com/users/hbina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hbina/subscriptions", "organizations_url": "https://api.github.com/users/hbina/orgs", "repos_url": "https://api.github.com/users/hbina/repos", "events_url": "https://api.github.com/users/hbina/events{/privacy}", "received_events_url": "https://api.github.com/users/hbina/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hbina", "id": 6733660, "node_id": "MDQ6VXNlcjY3MzM2NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6733660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hbina", "html_url": "https://github.com/hbina", "followers_url": "https://api.github.com/users/hbina/followers", "following_url": "https://api.github.com/users/hbina/following{/other_user}", "gists_url": "https://api.github.com/users/hbina/gists{/gist_id}", "starred_url": "https://api.github.com/users/hbina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hbina/subscriptions", "organizations_url": "https://api.github.com/users/hbina/orgs", "repos_url": "https://api.github.com/users/hbina/repos", "events_url": "https://api.github.com/users/hbina/events{/privacy}", "received_events_url": "https://api.github.com/users/hbina/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e8b42c02bfa348b024ad07652e860b125345acf", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e8b42c02bfa348b024ad07652e860b125345acf", "html_url": "https://github.com/rust-lang/rust/commit/9e8b42c02bfa348b024ad07652e860b125345acf"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "937995e2fe0adf34fab4ad4be9575609a09ea84e", "filename": "src/libcore/slice/sort.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e1e989f7cfbc9bb35511acdeb51b3122bf717a2/src%2Flibcore%2Fslice%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e1e989f7cfbc9bb35511acdeb51b3122bf717a2/src%2Flibcore%2Fslice%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fsort.rs?ref=9e1e989f7cfbc9bb35511acdeb51b3122bf717a2", "patch": "@@ -131,6 +131,8 @@ where\n     let mut i = 1;\n \n     for _ in 0..MAX_STEPS {\n+        // SAFETY: We already explicitly done the bound checking with `i<len`\n+        // All our indexing following that is only in the range {0 <= index < len}\n         unsafe {\n             // Find the next pair of adjacent out-of-order elements.\n             while i < len && !is_less(v.get_unchecked(i), v.get_unchecked(i - 1)) {"}]}