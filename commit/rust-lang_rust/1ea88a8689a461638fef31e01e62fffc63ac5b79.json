{"sha": "1ea88a8689a461638fef31e01e62fffc63ac5b79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlYTg4YTg2ODlhNDYxNjM4ZmVmMzFlMDFlNjJmZmZjNjNhYzViNzk=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-08-17T09:31:09Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-08-17T09:31:09Z"}, "message": "Add tests", "tree": {"sha": "010967244e6a2d2c75cee5caa28051ff72a9b420", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/010967244e6a2d2c75cee5caa28051ff72a9b420"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ea88a8689a461638fef31e01e62fffc63ac5b79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ea88a8689a461638fef31e01e62fffc63ac5b79", "html_url": "https://github.com/rust-lang/rust/commit/1ea88a8689a461638fef31e01e62fffc63ac5b79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ea88a8689a461638fef31e01e62fffc63ac5b79/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab949fdd64433749ebb7f8ef516ee2cdfe217a9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab949fdd64433749ebb7f8ef516ee2cdfe217a9d", "html_url": "https://github.com/rust-lang/rust/commit/ab949fdd64433749ebb7f8ef516ee2cdfe217a9d"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "5d779355400ccf6c0ee8040a568776999191c96a", "filename": "src/test/ui/consts/zst_no_llvm_alloc.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1ea88a8689a461638fef31e01e62fffc63ac5b79/src%2Ftest%2Fui%2Fconsts%2Fzst_no_llvm_alloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ea88a8689a461638fef31e01e62fffc63ac5b79/src%2Ftest%2Fui%2Fconsts%2Fzst_no_llvm_alloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fzst_no_llvm_alloc.rs?ref=1ea88a8689a461638fef31e01e62fffc63ac5b79", "patch": "@@ -0,0 +1,19 @@\n+// run-pass\n+\n+#[repr(align(4))]\n+struct Foo;\n+\n+static FOO: Foo = Foo;\n+\n+fn main() {\n+    let x: &'static () = &();\n+    assert_eq!(x as *const () as usize, 1);\n+    let x: &'static Foo = &Foo;\n+    assert_eq!(x as *const Foo as usize, 4);\n+\n+    // statics must have a unique address\n+    assert_ne!(&FOO as *const Foo as usize, 4);\n+\n+    assert_eq!(<Vec<i32>>::new().as_ptr(), <&[i32]>::default().as_ptr());\n+    assert_eq!(<Box<[i32]>>::default().as_ptr(), (&[]).as_ptr());\n+}"}]}