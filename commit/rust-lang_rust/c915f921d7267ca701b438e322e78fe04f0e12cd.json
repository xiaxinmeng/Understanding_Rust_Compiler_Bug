{"sha": "c915f921d7267ca701b438e322e78fe04f0e12cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5MTVmOTIxZDcyNjdjYTcwMWI0MzhlMzIyZTc4ZmUwNGYwZTEyY2Q=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-11-15T10:04:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-15T10:04:45Z"}, "message": "Rollup merge of #55930 - ljedrz:hir_bonuses, r=cramertj\n\nA handful of hir tweaks\n\n- remove an unused `hir_vec` macro pattern\n- simplify `fmt::Debug` for `hir::Path` (take advantage of the `Display` implementation)\n- remove an unused type alias (`CrateConfig`)\n- simplify a `match` expression (join common patterns)", "tree": {"sha": "4f4bbbb48f93c411ae0d3291dfa8e5e1327cead5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f4bbbb48f93c411ae0d3291dfa8e5e1327cead5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c915f921d7267ca701b438e322e78fe04f0e12cd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb7US9CRBK7hj4Ov3rIwAAdHIIAJ69BAJv0l1fU11rmTQIcz5f\nJ3AMbg5XLu4Y64TsOr7fJza6Qw6raRkv96h8KYPeEgGQCtk9vpZ5Icelp2k1lqeT\nTvDxrM/kiq5gazcs+NZnKVp26HKYtvdqbpQYf9VkbDVzdCCIuPs6vR0i+R6wUx/r\npLEKZl+MrWR7ugO/rQMHoZ/iwEpjy17nHumIJr/iz+L6+bj/GFNUC/tsyWxOkjNW\n0f4iCAgX85al5xfcV74xSz9+ANCVqmsuNE7GIBlxlr79jG6TB50XA32O9GKTByd2\nh6+JgqGYG9SSOLp5OaR4RZZuxgDtHLYMhIUghmD/7W4uitYw5stuT3hotiorL2c=\n=i403\n-----END PGP SIGNATURE-----\n", "payload": "tree 4f4bbbb48f93c411ae0d3291dfa8e5e1327cead5\nparent 12556a4b8ff32e84f3024d4c998fee74a1670462\nparent cf4f5c3b349d994bb2024c700956f043fc913fe6\nauthor Pietro Albini <pietro@pietroalbini.org> 1542276285 +0100\ncommitter GitHub <noreply@github.com> 1542276285 +0100\n\nRollup merge of #55930 - ljedrz:hir_bonuses, r=cramertj\n\nA handful of hir tweaks\n\n- remove an unused `hir_vec` macro pattern\n- simplify `fmt::Debug` for `hir::Path` (take advantage of the `Display` implementation)\n- remove an unused type alias (`CrateConfig`)\n- simplify a `match` expression (join common patterns)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c915f921d7267ca701b438e322e78fe04f0e12cd", "html_url": "https://github.com/rust-lang/rust/commit/c915f921d7267ca701b438e322e78fe04f0e12cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c915f921d7267ca701b438e322e78fe04f0e12cd/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12556a4b8ff32e84f3024d4c998fee74a1670462", "url": "https://api.github.com/repos/rust-lang/rust/commits/12556a4b8ff32e84f3024d4c998fee74a1670462", "html_url": "https://github.com/rust-lang/rust/commit/12556a4b8ff32e84f3024d4c998fee74a1670462"}, {"sha": "cf4f5c3b349d994bb2024c700956f043fc913fe6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf4f5c3b349d994bb2024c700956f043fc913fe6", "html_url": "https://github.com/rust-lang/rust/commit/cf4f5c3b349d994bb2024c700956f043fc913fe6"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "e28193be34a44ccb336fa06ae70e8e7cd4f85279", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c915f921d7267ca701b438e322e78fe04f0e12cd/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c915f921d7267ca701b438e322e78fe04f0e12cd/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=c915f921d7267ca701b438e322e78fe04f0e12cd", "patch": "@@ -27,7 +27,7 @@ use syntax_pos::{Span, DUMMY_SP, symbol::InternedString};\n use syntax::source_map::{self, Spanned};\n use rustc_target::spec::abi::Abi;\n use syntax::ast::{self, CrateSugar, Ident, Name, NodeId, DUMMY_NODE_ID, AsmDialect};\n-use syntax::ast::{Attribute, Lit, StrStyle, FloatTy, IntTy, UintTy, MetaItem};\n+use syntax::ast::{Attribute, Lit, StrStyle, FloatTy, IntTy, UintTy};\n use syntax::attr::InlineAttr;\n use syntax::ext::hygiene::SyntaxContext;\n use syntax::ptr::P;\n@@ -57,7 +57,6 @@ macro_rules! hir_vec {\n     ($($x:expr),*) => (\n         $crate::hir::HirVec::from(vec![$($x),*])\n     );\n-    ($($x:expr,)*) => (hir_vec![$($x),*])\n }\n \n pub mod check_attr;\n@@ -318,7 +317,7 @@ impl Path {\n \n impl fmt::Debug for Path {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        write!(f, \"path({})\", print::to_string(print::NO_ANN, |s| s.print_path(self, false)))\n+        write!(f, \"path({})\", self)\n     }\n }\n \n@@ -685,8 +684,6 @@ pub struct WhereEqPredicate {\n     pub rhs_ty: P<Ty>,\n }\n \n-pub type CrateConfig = HirVec<P<MetaItem>>;\n-\n /// The top-level data structure that stores the entire contents of\n /// the crate currently being compiled.\n ///\n@@ -1183,8 +1180,8 @@ impl StmtKind {\n \n     pub fn id(&self) -> NodeId {\n         match *self {\n-            StmtKind::Decl(_, id) => id,\n-            StmtKind::Expr(_, id) => id,\n+            StmtKind::Decl(_, id) |\n+            StmtKind::Expr(_, id) |\n             StmtKind::Semi(_, id) => id,\n         }\n     }"}]}