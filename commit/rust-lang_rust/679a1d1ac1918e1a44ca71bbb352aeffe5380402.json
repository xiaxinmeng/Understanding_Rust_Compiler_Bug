{"sha": "679a1d1ac1918e1a44ca71bbb352aeffe5380402", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3OWExZDFhYzE5MThlMWE0NGNhNzFiYmIzNTJhZWZmZTUzODA0MDI=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-06T10:11:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-06T10:11:18Z"}, "message": "Rollup merge of #85920 - luqmana:wasm-linker-tweaks, r=petrochenkov\n\nTweak wasm_base target spec to indicate linker is not GNU and update linker inferring logic for wasm-ld.\n\nReported via [Zulip](https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/wasi.20linker.20unknown.20argument.3A.20--as-needed): we try passing `--as-needed` to the linker if it's GNU ld which `wasm-ld` is not. Usually this isn't an issue for wasm as we would use the WasmLd linker driver but because the linker in question (`wasm32-unknown-wasi-wasm-ld`) ended with `-ld` our linker inferring [logic](https://github.com/rust-lang/rust/blob/f64503eb555475d65ae5503ef22439ca5dd394fd/compiler/rustc_codegen_ssa/src/back/link.rs#L957-L1040) used the `GccLinker` implementations. (UPD: The linker inferring logic actually didn't apply in this case because the linker is actually invoked through gcc in the reported issue. But it's still worth updating the logic I think.)\n\nThis change then has 2 parts:\n1. Update wasm_base target spec to indicate `linker_is_gnu: false` plus a few additions of `target.is_like_wasm` to handle flags `wasm-ld` does in fact support.\n2. Improve the linker detection logic to properly determine the correct flavor of wasm linker we're using when we can.\n\nWe need to add the new `target.is_like_wasm` branches to handle the case where the \"linker\" used could be something like clang which would then under the hood call wasm-ld.", "tree": {"sha": "b818c8d80b1b85105b7a7811e5eb0ec0cc68d264", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b818c8d80b1b85105b7a7811e5eb0ec0cc68d264"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/679a1d1ac1918e1a44ca71bbb352aeffe5380402", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgvJ9HCRBK7hj4Ov3rIwAA7hsIAEkkQ2K4QVct5Nh5flSKxvei\nzC3omeHwXmci/KGvXD8n8ZVgKOxuESinN3Aziqmc9uVgJQYiIK6NPTAYSlSpfaCH\nSO9zY50JQLqZUE9nlDXIOcviDXyUNtOhHOyKp4KvvW7lvCXchGTDuSIgcVxBPiDk\nov5Hddc1rDjozh5Sp25O6NrpYmL6uJoi+eVI7+rei6oA4tq4ia3M824NUbDz0OVS\n0uakdE2aQEYRm6C97C9jDE2ZXlNzJQ0qKkO5HGGVYwJfI1TFxCEGNPB9+RCvE14D\nWXwfvTsGdnAfUyFdLO2h396uuv4pEtnoqMKB8K4pT8kD2lczsGbtJeYgRqjPWv4=\n=HBWr\n-----END PGP SIGNATURE-----\n", "payload": "tree b818c8d80b1b85105b7a7811e5eb0ec0cc68d264\nparent d69cd467618f69f4427f001b0a6a581e6375fd4c\nparent f667aca127cfcd13c186075a7c98bbd1f9dc2ca7\nauthor Yuki Okushi <jtitor@2k36.org> 1622974278 +0900\ncommitter GitHub <noreply@github.com> 1622974278 +0900\n\nRollup merge of #85920 - luqmana:wasm-linker-tweaks, r=petrochenkov\n\nTweak wasm_base target spec to indicate linker is not GNU and update linker inferring logic for wasm-ld.\n\nReported via [Zulip](https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/wasi.20linker.20unknown.20argument.3A.20--as-needed): we try passing `--as-needed` to the linker if it's GNU ld which `wasm-ld` is not. Usually this isn't an issue for wasm as we would use the WasmLd linker driver but because the linker in question (`wasm32-unknown-wasi-wasm-ld`) ended with `-ld` our linker inferring [logic](https://github.com/rust-lang/rust/blob/f64503eb555475d65ae5503ef22439ca5dd394fd/compiler/rustc_codegen_ssa/src/back/link.rs#L957-L1040) used the `GccLinker` implementations. (UPD: The linker inferring logic actually didn't apply in this case because the linker is actually invoked through gcc in the reported issue. But it's still worth updating the logic I think.)\n\nThis change then has 2 parts:\n1. Update wasm_base target spec to indicate `linker_is_gnu: false` plus a few additions of `target.is_like_wasm` to handle flags `wasm-ld` does in fact support.\n2. Improve the linker detection logic to properly determine the correct flavor of wasm linker we're using when we can.\n\nWe need to add the new `target.is_like_wasm` branches to handle the case where the \"linker\" used could be something like clang which would then under the hood call wasm-ld.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/679a1d1ac1918e1a44ca71bbb352aeffe5380402", "html_url": "https://github.com/rust-lang/rust/commit/679a1d1ac1918e1a44ca71bbb352aeffe5380402", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/679a1d1ac1918e1a44ca71bbb352aeffe5380402/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d69cd467618f69f4427f001b0a6a581e6375fd4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d69cd467618f69f4427f001b0a6a581e6375fd4c", "html_url": "https://github.com/rust-lang/rust/commit/d69cd467618f69f4427f001b0a6a581e6375fd4c"}, {"sha": "f667aca127cfcd13c186075a7c98bbd1f9dc2ca7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f667aca127cfcd13c186075a7c98bbd1f9dc2ca7", "html_url": "https://github.com/rust-lang/rust/commit/f667aca127cfcd13c186075a7c98bbd1f9dc2ca7"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "2519b0826a94c5226c33c8ab3ccaea63e07453c6", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/679a1d1ac1918e1a44ca71bbb352aeffe5380402/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/679a1d1ac1918e1a44ca71bbb352aeffe5380402/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=679a1d1ac1918e1a44ca71bbb352aeffe5380402", "patch": "@@ -1199,6 +1199,8 @@ fn linker_and_flavor(sess: &Session) -> (PathBuf, LinkerFlavor) {\n                     || stem.ends_with(\"-clang\")\n                 {\n                     LinkerFlavor::Gcc\n+                } else if stem == \"wasm-ld\" || stem.ends_with(\"-wasm-ld\") {\n+                    LinkerFlavor::Lld(LldFlavor::Wasm)\n                 } else if stem == \"ld\" || stem == \"ld.lld\" || stem.ends_with(\"-ld\") {\n                     LinkerFlavor::Ld\n                 } else if stem == \"link\" || stem == \"lld-link\" {"}, {"sha": "9152a69e7a194451767c41d423cdc0df47ac9422", "filename": "compiler/rustc_codegen_ssa/src/back/linker.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/679a1d1ac1918e1a44ca71bbb352aeffe5380402/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/679a1d1ac1918e1a44ca71bbb352aeffe5380402/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs?ref=679a1d1ac1918e1a44ca71bbb352aeffe5380402", "patch": "@@ -476,21 +476,23 @@ impl<'a> Linker for GccLinker<'a> {\n         // eliminate the metadata. If we're building an executable, however,\n         // --gc-sections drops the size of hello world from 1.8MB to 597K, a 67%\n         // reduction.\n-        } else if self.sess.target.linker_is_gnu && !keep_metadata {\n+        } else if (self.sess.target.linker_is_gnu || self.sess.target.is_like_wasm)\n+            && !keep_metadata\n+        {\n             self.linker_arg(\"--gc-sections\");\n         }\n     }\n \n     fn no_gc_sections(&mut self) {\n         if self.sess.target.is_like_osx {\n             self.linker_arg(\"-no_dead_strip\");\n-        } else if self.sess.target.linker_is_gnu {\n+        } else if self.sess.target.linker_is_gnu || self.sess.target.is_like_wasm {\n             self.linker_arg(\"--no-gc-sections\");\n         }\n     }\n \n     fn optimize(&mut self) {\n-        if !self.sess.target.linker_is_gnu {\n+        if !self.sess.target.linker_is_gnu && !self.sess.target.is_like_wasm {\n             return;\n         }\n "}, {"sha": "4c954a1e567ccb236e95b515fb2c8276be192364", "filename": "compiler/rustc_target/src/spec/wasm_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/679a1d1ac1918e1a44ca71bbb352aeffe5380402/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/679a1d1ac1918e1a44ca71bbb352aeffe5380402/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm_base.rs?ref=679a1d1ac1918e1a44ca71bbb352aeffe5380402", "patch": "@@ -102,6 +102,7 @@ pub fn options() -> TargetOptions {\n         // we use the LLD shipped with the Rust toolchain by default\n         linker: Some(\"rust-lld\".to_owned()),\n         lld_flavor: LldFlavor::Wasm,\n+        linker_is_gnu: false,\n \n         pre_link_args,\n "}]}