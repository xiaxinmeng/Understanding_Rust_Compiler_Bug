{"sha": "4154f895d388b1a8634a95ff76892419bebe9cc3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNTRmODk1ZDM4OGIxYTg2MzRhOTVmZjc2ODkyNDE5YmViZTljYzM=", "commit": {"author": {"name": "Paul Woolcock", "email": "paul@woolcock.us", "date": "2017-06-25T00:37:15Z"}, "committer": {"name": "Paul Woolcock", "email": "paul@woolcock.us", "date": "2017-06-25T16:23:20Z"}, "message": "only show allowed failure count if there are allowed failures", "tree": {"sha": "d255449ed5586611c150e428ee6d3035c119f1c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d255449ed5586611c150e428ee6d3035c119f1c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4154f895d388b1a8634a95ff76892419bebe9cc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4154f895d388b1a8634a95ff76892419bebe9cc3", "html_url": "https://github.com/rust-lang/rust/commit/4154f895d388b1a8634a95ff76892419bebe9cc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4154f895d388b1a8634a95ff76892419bebe9cc3/comments", "author": null, "committer": null, "parents": [{"sha": "8edc3cae3bd853fc0d7714c2135754dce0ba10eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/8edc3cae3bd853fc0d7714c2135754dce0ba10eb", "html_url": "https://github.com/rust-lang/rust/commit/8edc3cae3bd853fc0d7714c2135754dce0ba10eb"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "92cfb862b16691dafde886409044a087a9736780", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4154f895d388b1a8634a95ff76892419bebe9cc3/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4154f895d388b1a8634a95ff76892419bebe9cc3/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=4154f895d388b1a8634a95ff76892419bebe9cc3", "patch": "@@ -789,14 +789,24 @@ impl<T: Write> ConsoleTestState<T> {\n         } else {\n             self.write_pretty(\"FAILED\", term::color::RED)?;\n         }\n-        let s = format!(\n+        let s = if self.allowed_fail > 0 {\n+            format!(\n                 \". {} passed; {} failed ({} allowed); {} ignored; {} measured; {} filtered out\\n\\n\",\n                 self.passed,\n-                self.failed,\n+                self.failed + self.allowed_fail,\n                 self.allowed_fail,\n                 self.ignored,\n                 self.measured,\n-                self.filtered_out);\n+                self.filtered_out)\n+        } else {\n+            format!(\n+                \". {} passed; {} failed; {} ignored; {} measured; {} filtered out\\n\\n\",\n+                self.passed,\n+                self.failed,\n+                self.ignored,\n+                self.measured,\n+                self.filtered_out)\n+        };\n         self.write_plain(&s)?;\n         return Ok(success);\n     }"}]}