{"sha": "9450e7d142f53fc9daad87866cdc7af144013264", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0NTBlN2QxNDJmNTNmYzlkYWFkODc4NjZjZGM3YWYxNDQwMTMyNjQ=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-05-18T19:45:24Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-05-23T09:44:05Z"}, "message": "syntax: Fix spans for boolean literals passed to proc macros", "tree": {"sha": "61a6931bf1742acaab5ac92e85db2dcebea592f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61a6931bf1742acaab5ac92e85db2dcebea592f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9450e7d142f53fc9daad87866cdc7af144013264", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9450e7d142f53fc9daad87866cdc7af144013264", "html_url": "https://github.com/rust-lang/rust/commit/9450e7d142f53fc9daad87866cdc7af144013264", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9450e7d142f53fc9daad87866cdc7af144013264/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "694f76d56117bf178fb21d4a99f6b773b4ece119", "url": "https://api.github.com/repos/rust-lang/rust/commits/694f76d56117bf178fb21d4a99f6b773b4ece119", "html_url": "https://github.com/rust-lang/rust/commit/694f76d56117bf178fb21d4a99f6b773b4ece119"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "4ddf3ddbcee60842d307b33530a1c1bb4d9210fb", "filename": "src/libsyntax/parse/literal.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9450e7d142f53fc9daad87866cdc7af144013264/src%2Flibsyntax%2Fparse%2Fliteral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9450e7d142f53fc9daad87866cdc7af144013264/src%2Flibsyntax%2Fparse%2Fliteral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fliteral.rs?ref=9450e7d142f53fc9daad87866cdc7af144013264", "patch": "@@ -3,7 +3,7 @@\n use crate::ast::{self, Ident, Lit, LitKind};\n use crate::parse::parser::Parser;\n use crate::parse::PResult;\n-use crate::parse::token::{self, Token};\n+use crate::parse::token;\n use crate::parse::unescape::{unescape_str, unescape_char, unescape_byte_str, unescape_byte};\n use crate::print::pprust;\n use crate::symbol::{kw, Symbol};\n@@ -117,9 +117,9 @@ impl LitKind {\n \n             token::Str_(mut sym) => {\n                 // If there are no characters requiring special treatment we can\n-                // reuse the symbol from the Token. Otherwise, we must generate a\n+                // reuse the symbol from the token. Otherwise, we must generate a\n                 // new symbol because the string in the LitKind is different to the\n-                // string in the Token.\n+                // string in the token.\n                 let mut error = None;\n                 let s = &sym.as_str();\n                 if s.as_bytes().iter().any(|&c| c == b'\\\\' || c == b'\\r') {\n@@ -262,8 +262,8 @@ impl Lit {\n     /// Losslessly convert an AST literal into a token stream.\n     crate fn tokens(&self) -> TokenStream {\n         let token = match self.token {\n-            token::Bool(symbol) => Token::Ident(Ident::with_empty_ctxt(symbol), false),\n-            token => Token::Literal(token, self.suffix),\n+            token::Bool(symbol) => token::Ident(Ident::new(symbol, self.span), false),\n+            token => token::Literal(token, self.suffix),\n         };\n         TokenTree::Token(self.span, token).into()\n     }"}]}