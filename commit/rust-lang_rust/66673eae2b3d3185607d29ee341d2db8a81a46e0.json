{"sha": "66673eae2b3d3185607d29ee341d2db8a81a46e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2NjczZWFlMmIzZDMxODU2MDdkMjllZTM0MWQyZGI4YTgxYTQ2ZTA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-17T21:42:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-17T21:42:32Z"}, "message": "internal: retire famous_defs_fixture\n\nThis is now done declaratively via `minicore`.", "tree": {"sha": "5e7294a0239837c227b64575257bc4bb94ae0084", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e7294a0239837c227b64575257bc4bb94ae0084"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66673eae2b3d3185607d29ee341d2db8a81a46e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66673eae2b3d3185607d29ee341d2db8a81a46e0", "html_url": "https://github.com/rust-lang/rust/commit/66673eae2b3d3185607d29ee341d2db8a81a46e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66673eae2b3d3185607d29ee341d2db8a81a46e0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89c2dff58a253416c2f005fe2478f4ca66bfdba6", "url": "https://api.github.com/repos/rust-lang/rust/commits/89c2dff58a253416c2f005fe2478f4ca66bfdba6", "html_url": "https://github.com/rust-lang/rust/commit/89c2dff58a253416c2f005fe2478f4ca66bfdba6"}], "stats": {"total": 62, "additions": 24, "deletions": 38}, "files": [{"sha": "409f81ca09f6669f546ef372b73bfaab2d96128f", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/66673eae2b3d3185607d29ee341d2db8a81a46e0/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66673eae2b3d3185607d29ee341d2db8a81a46e0/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=66673eae2b3d3185607d29ee341d2db8a81a46e0", "patch": "@@ -568,8 +568,6 @@ mod tests {\n \n     use crate::fixture;\n \n-    use super::*;\n-\n     fn check_hover_no_result(ra_fixture: &str) {\n         let (analysis, position) = fixture::position(ra_fixture);\n         assert!(analysis.hover(position, true, true).unwrap().is_none());\n@@ -3813,11 +3811,14 @@ use foo::bar::{self$0};\n \n     #[test]\n     fn hover_keyword() {\n-        let ra_fixture = r#\"//- /main.rs crate:main deps:std\n-fn f() { retur$0n; }\"#;\n-        let fixture = format!(\"{}\\n{}\", ra_fixture, FamousDefs::FIXTURE);\n         check(\n-            &fixture,\n+            r#\"\n+//- /main.rs crate:main deps:std\n+fn f() { retur$0n; }\n+//- /libstd.rs crate:std\n+/// Docs for return_keyword\n+mod return_keyword {}\n+\"#,\n             expect![[r#\"\n                 *return*\n \n@@ -3834,11 +3835,15 @@ fn f() { retur$0n; }\"#;\n \n     #[test]\n     fn hover_builtin() {\n-        let ra_fixture = r#\"//- /main.rs crate:main deps:std\n-cosnt _: &str$0 = \"\"; }\"#;\n-        let fixture = format!(\"{}\\n{}\", ra_fixture, FamousDefs::FIXTURE);\n         check(\n-            &fixture,\n+            r#\"\n+//- /main.rs crate:main deps:std\n+cosnt _: &str$0 = \"\"; }\n+\n+//- /libstd.rs crate:std\n+/// Docs for prim_str\n+mod prim_str {}\n+\"#,\n             expect![[r#\"\n                 *str*\n "}, {"sha": "d96028cbcdf0da380f5cae364503c24f35654041", "filename": "crates/ide_db/src/helpers.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/66673eae2b3d3185607d29ee341d2db8a81a46e0/crates%2Fide_db%2Fsrc%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66673eae2b3d3185607d29ee341d2db8a81a46e0/crates%2Fide_db%2Fsrc%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers.rs?ref=66673eae2b3d3185607d29ee341d2db8a81a46e0", "patch": "@@ -74,12 +74,19 @@ pub fn visit_file_defs(\n /// somewhat similar to the known paths infra inside hir, but it different; We\n /// want to make sure that IDE specific paths don't become interesting inside\n /// the compiler itself as well.\n+///\n+/// Note that, by default, rust-analyzer tests **do not** include core or std\n+/// libraries. If you are writing tests for functionality using [`FamousDefs`],\n+/// you'd want to include [minicore](test_utils::MiniCore) declaration at the\n+/// start of your tests:\n+///\n+/// ```\n+/// //- minicore: iterator, ord, derive\n+/// ```\n pub struct FamousDefs<'a, 'b>(pub &'a Semantics<'b, RootDatabase>, pub Option<Crate>);\n \n #[allow(non_snake_case)]\n impl FamousDefs<'_, '_> {\n-    pub const FIXTURE: &'static str = include_str!(\"helpers/famous_defs_fixture.rs\");\n-\n     pub fn std(&self) -> Option<Crate> {\n         self.find_crate(\"std\")\n     }"}, {"sha": "6310fc0e1bfdba1c28a8bd98174ea367b874b707", "filename": "crates/ide_db/src/helpers/famous_defs_fixture.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/89c2dff58a253416c2f005fe2478f4ca66bfdba6/crates%2Fide_db%2Fsrc%2Fhelpers%2Ffamous_defs_fixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89c2dff58a253416c2f005fe2478f4ca66bfdba6/crates%2Fide_db%2Fsrc%2Fhelpers%2Ffamous_defs_fixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Ffamous_defs_fixture.rs?ref=89c2dff58a253416c2f005fe2478f4ca66bfdba6", "patch": "@@ -1,26 +0,0 @@\n-//- /libcore.rs crate:core\n-//! Signatures of traits, types and functions from the core lib for use in tests.\n-pub mod prelude {\n-    pub mod rust_2018 {\n-        pub use crate::{\n-            cmp::Ord,\n-            convert::{From, Into},\n-            default::Default,\n-            iter::{IntoIterator, Iterator},\n-            ops::{Fn, FnMut, FnOnce},\n-            option::Option::{self, *},\n-        };\n-    }\n-}\n-#[prelude_import]\n-pub use prelude::rust_2018::*;\n-//- /libstd.rs crate:std deps:core\n-//! Signatures of traits, types and functions from the std lib for use in tests.\n-\n-/// Docs for return_keyword\n-mod return_keyword {}\n-\n-/// Docs for prim_str\n-mod prim_str {}\n-\n-pub use core::ops;"}]}