{"sha": "4d58b048a8b1ca9e2bd6907359ef9b4dc1f7382a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNThiMDQ4YThiMWNhOWUyYmQ2OTA3MzU5ZWY5YjRkYzFmNzM4MmE=", "commit": {"author": {"name": "Ian Douglas Scott", "email": "ian@iandouglasscott.com", "date": "2017-07-06T23:14:00Z"}, "committer": {"name": "Ian Douglas Scott", "email": "ian@iandouglasscott.com", "date": "2017-07-07T00:34:51Z"}, "message": "Redox: add stat methods(); support is_symlink()", "tree": {"sha": "1d84f8e73526fbfc4a7dbdc955b285fbd2863ed7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d84f8e73526fbfc4a7dbdc955b285fbd2863ed7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d58b048a8b1ca9e2bd6907359ef9b4dc1f7382a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEECYv1aaNg4jTOK4YaSSThDhmbWVkFAlle1ysACgkQSSThDhmb\nWVl4fwf/d1L1Th1TD/lwAg5sh1gUk6m1aCT2eVYI7VJBR49/607bM2FizuMtdInM\nnqM0tExu2/VrSHck74WI5Ptja/I5tdoRy9KpeZ8kFpLluj3DWHWF2WIRCPbPq7gh\n8YHo9lFDaQU6Jc+sKHmBkdyUq2Ybt1Nb6Mgf4nzVln4k3B4/ArkhDnSU8Ive4P3j\n5TnJZDiKrzZHtFTmy9W28nC5CgDYGpcXy26op6WOdh3uKkhNFxlXH6UyCWlChy6C\nai14hqh/nlYutPQ32u4zCtkWwe7ZQcA6i00COQBWRparYXodtswgih7bU97TEzR2\nUJ8nvLyShE9yDGGBb3zMSCWNUYJYuA==\n=st/M\n-----END PGP SIGNATURE-----", "payload": "tree 1d84f8e73526fbfc4a7dbdc955b285fbd2863ed7\nparent 696412de7e4e119f8536686c643621115b90c775\nauthor Ian Douglas Scott <ian@iandouglasscott.com> 1499382840 -0700\ncommitter Ian Douglas Scott <ian@iandouglasscott.com> 1499387691 -0700\n\nRedox: add stat methods(); support is_symlink()\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d58b048a8b1ca9e2bd6907359ef9b4dc1f7382a", "html_url": "https://github.com/rust-lang/rust/commit/4d58b048a8b1ca9e2bd6907359ef9b4dc1f7382a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d58b048a8b1ca9e2bd6907359ef9b4dc1f7382a/comments", "author": {"login": "ids1024", "id": 2263150, "node_id": "MDQ6VXNlcjIyNjMxNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2263150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ids1024", "html_url": "https://github.com/ids1024", "followers_url": "https://api.github.com/users/ids1024/followers", "following_url": "https://api.github.com/users/ids1024/following{/other_user}", "gists_url": "https://api.github.com/users/ids1024/gists{/gist_id}", "starred_url": "https://api.github.com/users/ids1024/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ids1024/subscriptions", "organizations_url": "https://api.github.com/users/ids1024/orgs", "repos_url": "https://api.github.com/users/ids1024/repos", "events_url": "https://api.github.com/users/ids1024/events{/privacy}", "received_events_url": "https://api.github.com/users/ids1024/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ids1024", "id": 2263150, "node_id": "MDQ6VXNlcjIyNjMxNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2263150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ids1024", "html_url": "https://github.com/ids1024", "followers_url": "https://api.github.com/users/ids1024/followers", "following_url": "https://api.github.com/users/ids1024/following{/other_user}", "gists_url": "https://api.github.com/users/ids1024/gists{/gist_id}", "starred_url": "https://api.github.com/users/ids1024/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ids1024/subscriptions", "organizations_url": "https://api.github.com/users/ids1024/orgs", "repos_url": "https://api.github.com/users/ids1024/repos", "events_url": "https://api.github.com/users/ids1024/events{/privacy}", "received_events_url": "https://api.github.com/users/ids1024/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "696412de7e4e119f8536686c643621115b90c775", "url": "https://api.github.com/repos/rust-lang/rust/commits/696412de7e4e119f8536686c643621115b90c775", "html_url": "https://github.com/rust-lang/rust/commit/696412de7e4e119f8536686c643621115b90c775"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "9a0d1e06da327d1e9ecb439c5660201e801c880e", "filename": "src/libstd/sys/redox/ext/fs.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4d58b048a8b1ca9e2bd6907359ef9b4dc1f7382a/src%2Flibstd%2Fsys%2Fredox%2Fext%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d58b048a8b1ca9e2bd6907359ef9b4dc1f7382a/src%2Flibstd%2Fsys%2Fredox%2Fext%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fext%2Ffs.rs?ref=4d58b048a8b1ca9e2bd6907359ef9b4dc1f7382a", "patch": "@@ -177,6 +177,8 @@ pub trait MetadataExt {\n     #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n     fn mode(&self) -> u32;\n     #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n+    fn nlink(&self) -> u64;\n+    #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n     fn uid(&self) -> u32;\n     #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n     fn gid(&self) -> u32;\n@@ -194,6 +196,10 @@ pub trait MetadataExt {\n     fn ctime(&self) -> i64;\n     #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n     fn ctime_nsec(&self) -> i64;\n+    #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n+    fn blksize(&self) -> u64;\n+    #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n+    fn blocks(&self) -> u64;\n }\n \n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n@@ -207,6 +213,9 @@ impl MetadataExt for fs::Metadata {\n     fn mode(&self) -> u32 {\n         self.as_inner().as_inner().st_mode as u32\n     }\n+    fn nlink(&self) -> u64 {\n+        self.as_inner().as_inner().st_nlink as u64\n+    }\n     fn uid(&self) -> u32 {\n         self.as_inner().as_inner().st_uid as u32\n     }\n@@ -234,6 +243,12 @@ impl MetadataExt for fs::Metadata {\n     fn ctime_nsec(&self) -> i64 {\n         self.as_inner().as_inner().st_ctime_nsec as i64\n     }\n+    fn blksize(&self) -> u64 {\n+        self.as_inner().as_inner().st_blksize as u64\n+    }\n+    fn blocks(&self) -> u64 {\n+        self.as_inner().as_inner().st_blocks as u64\n+    }\n }\n \n /// Add special Redox types (block/char device, fifo and socket)"}, {"sha": "386ae24d9ea667e3370a6e97570a20f206150532", "filename": "src/libstd/sys/redox/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d58b048a8b1ca9e2bd6907359ef9b4dc1f7382a/src%2Flibstd%2Fsys%2Fredox%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d58b048a8b1ca9e2bd6907359ef9b4dc1f7382a/src%2Flibstd%2Fsys%2Fredox%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Ffs.rs?ref=4d58b048a8b1ca9e2bd6907359ef9b4dc1f7382a", "patch": "@@ -119,10 +119,10 @@ impl FilePermissions {\n impl FileType {\n     pub fn is_dir(&self) -> bool { self.is(syscall::MODE_DIR) }\n     pub fn is_file(&self) -> bool { self.is(syscall::MODE_FILE) }\n-    pub fn is_symlink(&self) -> bool { false /*FIXME: Implement symlink mode*/ }\n+    pub fn is_symlink(&self) -> bool { self.is(syscall::MODE_SYMLINK) }\n \n     pub fn is(&self, mode: u16) -> bool {\n-        self.mode & (syscall::MODE_DIR | syscall::MODE_FILE) == mode\n+        self.mode & syscall::MODE_TYPE == mode\n     }\n }\n "}]}