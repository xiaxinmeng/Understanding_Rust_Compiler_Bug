{"sha": "0455fe342f585eedb69075b4121ff0e285ebbced", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NTVmZTM0MmY1ODVlZWRiNjkwNzViNDEyMWZmMGUyODVlYmJjZWQ=", "commit": {"author": {"name": "Erin Power", "email": "xampprocky@gmail.com", "date": "2021-07-30T11:32:16Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-08-15T17:17:11Z"}, "message": "Update RELEASES.md for 1.55.0\n\nCo-authored-by: Eric Huss <eric@huss.org>\nCo-authored-by: inquisitivecrystal <22333129+inquisitivecrystal@users.noreply.github.com>\nCo-authored-by: Mark Rousskov <mark.simulacrum@gmail.com>\nCo-authored-by: Daniel Giger <danielg3432@gmail.com>", "tree": {"sha": "57a3afa6f7f15768331529051e113da9c56a2691", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57a3afa6f7f15768331529051e113da9c56a2691"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0455fe342f585eedb69075b4121ff0e285ebbced", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0455fe342f585eedb69075b4121ff0e285ebbced", "html_url": "https://github.com/rust-lang/rust/commit/0455fe342f585eedb69075b4121ff0e285ebbced", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0455fe342f585eedb69075b4121ff0e285ebbced/comments", "author": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0490a2dbbb94f8244fb6a15ca5d33dc3fcd268a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0490a2dbbb94f8244fb6a15ca5d33dc3fcd268a", "html_url": "https://github.com/rust-lang/rust/commit/c0490a2dbbb94f8244fb6a15ca5d33dc3fcd268a"}], "stats": {"total": 142, "additions": 142, "deletions": 0}, "files": [{"sha": "1d9ad3160f77e771d861d1df1aab90c24400cbe8", "filename": "RELEASES.md", "status": "modified", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/rust-lang/rust/blob/0455fe342f585eedb69075b4121ff0e285ebbced/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/0455fe342f585eedb69075b4121ff0e285ebbced/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=0455fe342f585eedb69075b4121ff0e285ebbced", "patch": "@@ -1,3 +1,145 @@\n+Version 1.55.0 (2021-09-09)\n+============================\n+\n+Language\n+--------\n+- [You can now write open \"from\" range patterns (`X..`), which will start at `X` and\n+  will end at the maximum value of the integer.][83918]\n+- [You can now explicitly import the prelude of different editions\n+  through `std::prelude` (e.g. `use std::prelude::rust_2021::*;`).][86294]\n+\n+Compiler\n+--------\n+- [Added tier 3\\* support for `powerpc-unknown-freebsd`.][87370]\n+- [Added tier 3 support for `powerpc64le-unknown-freebsd`.][83572]\n+\n+\\* Refer to Rust's [platform support page][platform-support-doc] for more\n+   information on Rust's tiered platform support.\n+\n+Libraries\n+---------\n+\n+- [Updated std's float parsing to use the Eisel-Lemire algorithm.][86761]\n+  These improvements should in general provide faster string parsing of floats,\n+  no longer reject certain valid floating point values, and reduce\n+  the produced code size for non-stripped artifacts.\n+- [`string::Drain` now implements `AsRef<str>` and `AsRef<[u8]>`.][86858]\n+- [`collections::{BinaryHeap, BTreeSet, HashSet, LinkedList, VecDeque}` now\n+  implement `From<[T; N]>`.][84111]\n+- [`collections::{BTreeMap, HashMap}` now implement `From<[(K, V); N]>`.][84111]\n+  This allows you to write the following;\n+  ```rust\n+  let highscores = std::collections::HashMap::from([\n+      (\"Alice\", 9000u32),\n+      (\"Bob\", 7250),\n+      (\"Charlie\", 5500),\n+  ]);\n+  ```\n+\n+Stabilised APIs\n+---------------\n+\n+- [`Bound::cloned`]\n+- [`Drain::as_str`]\n+- [`IntoInnerError::into_error`]\n+- [`IntoInnerError::into_parts`]\n+- [`MaybeUninit::assume_init_mut`]\n+- [`MaybeUninit::assume_init_ref`]\n+- [`MaybeUninit::write`]\n+- [`array::map`]\n+- [`ops::ControlFlow`]\n+- [`x86::_bittest`]\n+- [`x86::_bittestandcomplement`]\n+- [`x86::_bittestandreset`]\n+- [`x86::_bittestandset`]\n+- [`x86_64::_bittest64`]\n+- [`x86_64::_bittestandcomplement64`]\n+- [`x86_64::_bittestandreset64`]\n+- [`x86_64::_bittestandset64`]\n+\n+The following previously stable functions are now `const`.\n+\n+- [`str::from_utf8_unchecked`]\n+- [`mem::transmute`]\n+\n+\n+Cargo\n+-----\n+- [Cargo will now deduplicate compiler diagnostics to the terminal when invoking\n+  rustc in parallel such as when using `cargo test`.][cargo/9675]\n+- [The package definition in `cargo metadata` now includes the `\"default_run\"`\n+  field from the manifest.][cargo/9550]\n+- [Added `cargo d` as an alias for `cargo doc`.][cargo/9680]\n+\n+Rustdoc\n+-------\n+- [Added \"Go to item on exact match\" search option.][85876]\n+- [The \"Implementors\" section on traits no longer shows redundant\n+  method definitions.][85970]\n+- [Trait implementations are toggled open by default.][86260] This should make the\n+  implementations more searchable by tools like `CTRL+F` in your browser.\n+- [Intra-doc links should now correctly resolve associated items (e.g. methods)\n+  through type aliases.][86334]\n+- [Traits which are marked with `#[doc(hidden)]` will no longer appear in the\n+  \"Trait Implementations\" section.][86513]\n+\n+\n+Compatibility Notes\n+-------------------\n+- [std functions that return an `io::Error` will no longer use the\n+  `ErrorKind::Other` variant.][85746] This is to better reflect that these\n+  kinds of errors could be categorised [into newer more specific `ErrorKind`\n+  variants][79965], and that they do not represent a user error.\n+- [Using environment variable names with `process::Command` on Windows now\n+  behaves as expected.][85270] Previously using envionment variables with\n+  `Command` would cause them to be ASCII-uppercased.\n+- [Rustdoc will now warn on using rustdoc lints that aren't prefixed\n+  with `rustdoc::`][86849]\n+\n+[86849]: https://github.com/rust-lang/rust/pull/86849\n+[86513]: https://github.com/rust-lang/rust/pull/86513\n+[86334]: https://github.com/rust-lang/rust/pull/86334\n+[86260]: https://github.com/rust-lang/rust/pull/86260\n+[85970]: https://github.com/rust-lang/rust/pull/85970\n+[85876]: https://github.com/rust-lang/rust/pull/85876\n+[83572]: https://github.com/rust-lang/rust/pull/83572\n+[86294]: https://github.com/rust-lang/rust/pull/86294\n+[86858]: https://github.com/rust-lang/rust/pull/86858\n+[86761]: https://github.com/rust-lang/rust/pull/86761\n+[85769]: https://github.com/rust-lang/rust/pull/85769\n+[85746]: https://github.com/rust-lang/rust/pull/85746\n+[85305]: https://github.com/rust-lang/rust/pull/85305\n+[85270]: https://github.com/rust-lang/rust/pull/85270\n+[84111]: https://github.com/rust-lang/rust/pull/84111\n+[83918]: https://github.com/rust-lang/rust/pull/83918\n+[79965]: https://github.com/rust-lang/rust/pull/79965\n+[87370]: https://github.com/rust-lang/rust/pull/87370\n+[87298]: https://github.com/rust-lang/rust/pull/87298\n+[cargo/9675]: https://github.com/rust-lang/cargo/pull/9675\n+[cargo/9550]: https://github.com/rust-lang/cargo/pull/9550\n+[cargo/9680]: https://github.com/rust-lang/cargo/pull/9680\n+[`array::map`]: https://doc.rust-lang.org/stable/std/primitive.array.html#method.map\n+[`Bound::cloned`]: https://doc.rust-lang.org/stable/std/ops/enum.Bound.html#method.cloned\n+[`Drain::as_str`]: https://doc.rust-lang.org/stable/std/string/struct.Drain.html#method.as_str\n+[`IntoInnerError::into_error`]: https://doc.rust-lang.org/stable/std/io/struct.IntoInnerError.html#method.into_error\n+[`IntoInnerError::into_parts`]: https://doc.rust-lang.org/stable/std/io/struct.IntoInnerError.html#method.into_parts\n+[`MaybeUninit::assume_init_mut`]: https://doc.rust-lang.org/stable/std/mem/union.MaybeUninit.html#method.assume_init_mut\n+[`MaybeUninit::assume_init_ref`]: https://doc.rust-lang.org/stable/std/mem/union.MaybeUninit.html#method.assume_init_ref\n+[`MaybeUninit::write`]: https://doc.rust-lang.org/stable/std/mem/union.MaybeUninit.html#method.write\n+[`Seek::rewind`]: https://doc.rust-lang.org/stable/std/io/trait.Seek.html#method.rewind\n+[`mem::transmute`]: https://doc.rust-lang.org/stable/std/mem/fn.transmute.html\n+[`ops::ControlFlow`]: https://doc.rust-lang.org/stable/std/ops/enum.ControlFlow.html\n+[`str::from_utf8_unchecked`]: https://doc.rust-lang.org/stable/std/str/fn.from_utf8_unchecked.html\n+[`x86::_bittest`]: https://doc.rust-lang.org/stable/core/arch/x86/fn._bittest.html\n+[`x86::_bittestandcomplement`]: https://doc.rust-lang.org/stable/core/arch/x86/fn._bittestandcomplement.html\n+[`x86::_bittestandreset`]: https://doc.rust-lang.org/stable/core/arch/x86/fn._bittestandreset.html\n+[`x86::_bittestandset`]: https://doc.rust-lang.org/stable/core/arch/x86/fn._bittestandset.html\n+[`x86_64::_bittest64`]: https://doc.rust-lang.org/stable/core/arch/x86_64/fn._bittest64.html\n+[`x86_64::_bittestandcomplement64`]: https://doc.rust-lang.org/stable/core/arch/x86_64/fn._bittestandcomplement64.html\n+[`x86_64::_bittestandreset64`]: https://doc.rust-lang.org/stable/core/arch/x86_64/fn._bittestandreset64.html\n+[`x86_64::_bittestandset64`]: https://doc.rust-lang.org/stable/core/arch/x86_64/fn._bittestandset64.html\n+\n+\n Version 1.54.0 (2021-07-29)\n ============================\n "}]}