{"sha": "ae13bbcc98af5040aac39f4237ce3ff363a19974", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMTNiYmNjOThhZjUwNDBhYWMzOWY0MjM3Y2UzZmYzNjNhMTk5NzQ=", "commit": {"author": {"name": "Kamal Marhubi", "email": "kamal@marhubi.com", "date": "2015-11-08T00:03:25Z"}, "committer": {"name": "Kamal Marhubi", "email": "kamal@marhubi.com", "date": "2015-11-08T00:03:25Z"}, "message": "Move config help to dedicated --config-help flag\n\nThe existing help output is very verbose, overflowing a 50+ line\nterminal. This moves the configuration options to a separate help flag\nto make a mistyped command less annoying!", "tree": {"sha": "29978973460e87998506d6c4607f82ad021d134c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29978973460e87998506d6c4607f82ad021d134c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae13bbcc98af5040aac39f4237ce3ff363a19974", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae13bbcc98af5040aac39f4237ce3ff363a19974", "html_url": "https://github.com/rust-lang/rust/commit/ae13bbcc98af5040aac39f4237ce3ff363a19974", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae13bbcc98af5040aac39f4237ce3ff363a19974/comments", "author": {"login": "kamalmarhubi", "id": 50936, "node_id": "MDQ6VXNlcjUwOTM2", "avatar_url": "https://avatars.githubusercontent.com/u/50936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamalmarhubi", "html_url": "https://github.com/kamalmarhubi", "followers_url": "https://api.github.com/users/kamalmarhubi/followers", "following_url": "https://api.github.com/users/kamalmarhubi/following{/other_user}", "gists_url": "https://api.github.com/users/kamalmarhubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamalmarhubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamalmarhubi/subscriptions", "organizations_url": "https://api.github.com/users/kamalmarhubi/orgs", "repos_url": "https://api.github.com/users/kamalmarhubi/repos", "events_url": "https://api.github.com/users/kamalmarhubi/events{/privacy}", "received_events_url": "https://api.github.com/users/kamalmarhubi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kamalmarhubi", "id": 50936, "node_id": "MDQ6VXNlcjUwOTM2", "avatar_url": "https://avatars.githubusercontent.com/u/50936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamalmarhubi", "html_url": "https://github.com/kamalmarhubi", "followers_url": "https://api.github.com/users/kamalmarhubi/followers", "following_url": "https://api.github.com/users/kamalmarhubi/following{/other_user}", "gists_url": "https://api.github.com/users/kamalmarhubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamalmarhubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamalmarhubi/subscriptions", "organizations_url": "https://api.github.com/users/kamalmarhubi/orgs", "repos_url": "https://api.github.com/users/kamalmarhubi/repos", "events_url": "https://api.github.com/users/kamalmarhubi/events{/privacy}", "received_events_url": "https://api.github.com/users/kamalmarhubi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d0606c3c008aa4f20811e3732da3e7c3d1fb00b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d0606c3c008aa4f20811e3732da3e7c3d1fb00b", "html_url": "https://github.com/rust-lang/rust/commit/0d0606c3c008aa4f20811e3732da3e7c3d1fb00b"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "2789b5f6cdda2717f18f23a313b8398e648df0e0", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ae13bbcc98af5040aac39f4237ce3ff363a19974/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae13bbcc98af5040aac39f4237ce3ff363a19974/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=ae13bbcc98af5040aac39f4237ce3ff363a19974", "patch": "@@ -33,6 +33,8 @@ enum Operation {\n     Format(PathBuf, WriteMode),\n     /// Print the help message.\n     Help,\n+    /// Print detailed configuration help.\n+    ConfigHelp,\n     /// Invalid program input, including reason.\n     InvalidInput(String),\n     /// No file specified, read from stdin\n@@ -80,6 +82,10 @@ fn execute() -> i32 {\n                 \"mode to write in (not usable when piping from stdin)\",\n                 \"[replace|overwrite|display|diff|coverage]\");\n \n+    opts.optflag(\"\",\n+                 \"config-help\",\n+                 \"show details of rustfmt configuration options\");\n+\n     let operation = determine_operation(&opts, env::args().skip(1));\n \n     match operation {\n@@ -91,6 +97,10 @@ fn execute() -> i32 {\n             print_usage(&opts, \"\");\n             0\n         }\n+        Operation::ConfigHelp => {\n+            Config::print_docs();\n+            0\n+        }\n         Operation::Stdin(input, write_mode) => {\n             // try to read config from local directory\n             let config = match lookup_and_read_project_file(&Path::new(\".\")) {\n@@ -137,7 +147,6 @@ fn print_usage(opts: &Options, reason: &str) {\n                          reason,\n                          env::current_exe().unwrap().display());\n     println!(\"{}\", opts.usage(&reason));\n-    Config::print_docs();\n }\n \n fn determine_operation<I>(opts: &Options, args: I) -> Operation\n@@ -152,6 +161,10 @@ fn determine_operation<I>(opts: &Options, args: I) -> Operation\n         return Operation::Help;\n     }\n \n+    if matches.opt_present(\"config-help\") {\n+        return Operation::ConfigHelp;\n+    }\n+\n     // if no file argument is supplied, read from stdin\n     if matches.free.len() == 0 {\n "}]}