{"sha": "dbd7226d299ac23647975068bea1168cf56e0feb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZDcyMjZkMjk5YWMyMzY0Nzk3NTA2OGJlYTExNjhjZjU2ZTBmZWI=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-09-17T13:29:39Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-09-17T13:36:50Z"}, "message": "[mir-opt] Disable the `ConsideredEqual` logic in SimplifyBranchSame opt\n\nThe logic is currently broken and we need to disable it to fix a beta\nregression (see #76803)", "tree": {"sha": "6c893dc3cad385df6ad306c4d074dc1c95f2596c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c893dc3cad385df6ad306c4d074dc1c95f2596c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbd7226d299ac23647975068bea1168cf56e0feb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbd7226d299ac23647975068bea1168cf56e0feb", "html_url": "https://github.com/rust-lang/rust/commit/dbd7226d299ac23647975068bea1168cf56e0feb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbd7226d299ac23647975068bea1168cf56e0feb/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95386b656e91168bf53e2ab63c6b992cae591fe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/95386b656e91168bf53e2ab63c6b992cae591fe7", "html_url": "https://github.com/rust-lang/rust/commit/95386b656e91168bf53e2ab63c6b992cae591fe7"}], "stats": {"total": 57, "additions": 40, "deletions": 17}, "files": [{"sha": "9a11d927240200b097f64e1310c89e4f9a96521a", "filename": "compiler/rustc_mir/src/transform/simplify_try.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/dbd7226d299ac23647975068bea1168cf56e0feb/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify_try.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbd7226d299ac23647975068bea1168cf56e0feb/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify_try.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify_try.rs?ref=dbd7226d299ac23647975068bea1168cf56e0feb", "patch": "@@ -612,7 +612,7 @@ impl<'a, 'tcx> SimplifyBranchSameOptimizationFinder<'a, 'tcx> {\n                     && bb_l.terminator().kind == bb_r.terminator().kind;\n                     let statement_check = || {\n                         bb_l.statements.iter().zip(&bb_r.statements).try_fold(StatementEquality::TrivialEqual, |acc,(l,r)| {\n-                            let stmt_equality = self.statement_equality(*adt_matched_on, &l, bb_l_idx, &r, bb_r_idx);\n+                            let stmt_equality = self.statement_equality(*adt_matched_on, &l, bb_l_idx, &r, bb_r_idx, self.tcx.sess.opts.debugging_opts.mir_opt_level);\n                             if matches!(stmt_equality, StatementEquality::NotEqual) {\n                                 // short circuit\n                                 None\n@@ -672,6 +672,7 @@ impl<'a, 'tcx> SimplifyBranchSameOptimizationFinder<'a, 'tcx> {\n         x_bb_idx: BasicBlock,\n         y: &Statement<'tcx>,\n         y_bb_idx: BasicBlock,\n+        mir_opt_level: usize,\n     ) -> StatementEquality {\n         let helper = |rhs: &Rvalue<'tcx>,\n                       place: &Place<'tcx>,\n@@ -690,7 +691,13 @@ impl<'a, 'tcx> SimplifyBranchSameOptimizationFinder<'a, 'tcx> {\n \n             match rhs {\n                 Rvalue::Use(operand) if operand.place() == Some(adt_matched_on) => {\n-                    StatementEquality::ConsideredEqual(side_to_choose)\n+                    // FIXME(76803): This logic is currently broken because it does not take into\n+                    // account the current discriminant value.\n+                    if mir_opt_level > 2 {\n+                        StatementEquality::ConsideredEqual(side_to_choose)\n+                    } else {\n+                        StatementEquality::NotEqual\n+                    }\n                 }\n                 _ => {\n                     trace!("}, {"sha": "06f359da2e70d4168e71a0e958608b709e53e640", "filename": "src/test/mir-opt/simplify_arm.id.SimplifyBranchSame.diff", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/dbd7226d299ac23647975068bea1168cf56e0feb/src%2Ftest%2Fmir-opt%2Fsimplify_arm.id.SimplifyBranchSame.diff", "raw_url": "https://github.com/rust-lang/rust/raw/dbd7226d299ac23647975068bea1168cf56e0feb/src%2Ftest%2Fmir-opt%2Fsimplify_arm.id.SimplifyBranchSame.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_arm.id.SimplifyBranchSame.diff?ref=dbd7226d299ac23647975068bea1168cf56e0feb", "patch": "@@ -13,27 +13,24 @@\n   \n       bb0: {\n           _2 = discriminant(_1);           // scope 0 at $DIR/simplify-arm.rs:11:9: 11:16\n--         switchInt(move _2) -> [0_isize: bb1, 1_isize: bb3, otherwise: bb2]; // scope 0 at $DIR/simplify-arm.rs:11:9: 11:16\n-+         goto -> bb1;                     // scope 0 at $DIR/simplify-arm.rs:11:9: 11:16\n+          switchInt(move _2) -> [0_isize: bb1, 1_isize: bb3, otherwise: bb2]; // scope 0 at $DIR/simplify-arm.rs:11:9: 11:16\n       }\n   \n       bb1: {\n--         discriminant(_0) = 0;            // scope 0 at $DIR/simplify-arm.rs:12:17: 12:21\n--         goto -> bb4;                     // scope 0 at $DIR/simplify-arm.rs:10:5: 13:6\n--     }\n-- \n--     bb2: {\n--         unreachable;                     // scope 0 at $DIR/simplify-arm.rs:10:11: 10:12\n--     }\n-- \n--     bb3: {\n+          discriminant(_0) = 0;            // scope 0 at $DIR/simplify-arm.rs:12:17: 12:21\n+          goto -> bb4;                     // scope 0 at $DIR/simplify-arm.rs:10:5: 13:6\n+      }\n+  \n+      bb2: {\n+          unreachable;                     // scope 0 at $DIR/simplify-arm.rs:10:11: 10:12\n+      }\n+  \n+      bb3: {\n           _0 = move _1;                    // scope 1 at $DIR/simplify-arm.rs:11:20: 11:27\n--         goto -> bb4;                     // scope 0 at $DIR/simplify-arm.rs:10:5: 13:6\n-+         goto -> bb2;                     // scope 0 at $DIR/simplify-arm.rs:10:5: 13:6\n+          goto -> bb4;                     // scope 0 at $DIR/simplify-arm.rs:10:5: 13:6\n       }\n   \n--     bb4: {\n-+     bb2: {\n+      bb4: {\n           return;                          // scope 0 at $DIR/simplify-arm.rs:14:2: 14:2\n       }\n   }"}, {"sha": "a6a57622005482df640ecc47c5e62f523300cce8", "filename": "src/test/ui/mir/issue-76803-branches-not-same.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/dbd7226d299ac23647975068bea1168cf56e0feb/src%2Ftest%2Fui%2Fmir%2Fissue-76803-branches-not-same.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbd7226d299ac23647975068bea1168cf56e0feb/src%2Ftest%2Fui%2Fmir%2Fissue-76803-branches-not-same.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-76803-branches-not-same.rs?ref=dbd7226d299ac23647975068bea1168cf56e0feb", "patch": "@@ -0,0 +1,19 @@\n+// run-pass\n+\n+#[derive(Debug, Eq, PartialEq)]\n+pub enum Type {\n+    A,\n+    B,\n+}\n+\n+\n+pub fn encode(v: Type) -> Type {\n+    match v {\n+        Type::A => Type::B,\n+        _ => v,\n+    }\n+}\n+\n+fn main() {\n+  assert_eq!(Type::B, encode(Type::A));\n+}"}]}