{"sha": "62dc4e0d4cebc390de4053da881a74b9e72c52e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyZGM0ZTBkNGNlYmMzOTBkZTQwNTNkYTg4MWE3NGI5ZTcyYzUyZTY=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-17T20:32:06Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-21T07:20:22Z"}, "message": "vec: remove each_const\n\nAn Iterator implementation can be made for &const [T] if it turns out\nto be necessary for some use case.", "tree": {"sha": "e4b1029fb89ef03d5fc5bf730ce3cba796fd11e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4b1029fb89ef03d5fc5bf730ce3cba796fd11e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62dc4e0d4cebc390de4053da881a74b9e72c52e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62dc4e0d4cebc390de4053da881a74b9e72c52e6", "html_url": "https://github.com/rust-lang/rust/commit/62dc4e0d4cebc390de4053da881a74b9e72c52e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62dc4e0d4cebc390de4053da881a74b9e72c52e6/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77ae7ec8d874270af0741b5c1f52cf9d58248b86", "url": "https://api.github.com/repos/rust-lang/rust/commits/77ae7ec8d874270af0741b5c1f52cf9d58248b86", "html_url": "https://github.com/rust-lang/rust/commit/77ae7ec8d874270af0741b5c1f52cf9d58248b86"}], "stats": {"total": 23, "additions": 4, "deletions": 19}, "files": [{"sha": "78c4f5f13ec803e90f8a495708bbca11b39046f1", "filename": "src/libextra/sha1.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/62dc4e0d4cebc390de4053da881a74b9e72c52e6/src%2Flibextra%2Fsha1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62dc4e0d4cebc390de4053da881a74b9e72c52e6/src%2Flibextra%2Fsha1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsha1.rs?ref=62dc4e0d4cebc390de4053da881a74b9e72c52e6", "patch": "@@ -36,7 +36,7 @@ use core::vec;\n /// The SHA-1 interface\n trait Sha1 {\n     /// Provide message input as bytes\n-    fn input(&mut self, &const [u8]);\n+    fn input(&mut self, &[u8]);\n     /// Provide message input as string\n     fn input_str(&mut self, &str);\n     /**\n@@ -74,9 +74,9 @@ pub fn sha1() -> @Sha1 {\n           computed: bool,\n           work_buf: @mut ~[u32]};\n \n-    fn add_input(st: &mut Sha1State, msg: &const [u8]) {\n+    fn add_input(st: &mut Sha1State, msg: &[u8]) {\n         assert!((!st.computed));\n-        for vec::each_const(msg) |element| {\n+        for msg.iter().advance |element| {\n             st.msg_block[st.msg_block_idx] = *element;\n             st.msg_block_idx += 1u;\n             st.len_low += 8u32;\n@@ -242,7 +242,7 @@ pub fn sha1() -> @Sha1 {\n             self.h[4] = 0xC3D2E1F0u32;\n             self.computed = false;\n         }\n-        fn input(&mut self, msg: &const [u8]) { add_input(self, msg); }\n+        fn input(&mut self, msg: &[u8]) { add_input(self, msg); }\n         fn input_str(&mut self, msg: &str) {\n             add_input(self, msg.as_bytes());\n         }"}, {"sha": "1131abfafa8792dc0e7260cab0ac5ad05eab2939", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/62dc4e0d4cebc390de4053da881a74b9e72c52e6/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62dc4e0d4cebc390de4053da881a74b9e72c52e6/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=62dc4e0d4cebc390de4053da881a74b9e72c52e6", "patch": "@@ -1427,21 +1427,6 @@ pub fn each<'r,T>(v: &'r [T], f: &fn(&'r T) -> bool) -> bool {\n     return !broke;\n }\n \n-/// Like `each()`, but for the case where you have a vector that *may or may\n-/// not* have mutable contents.\n-#[inline]\n-pub fn each_const<T>(v: &const [T], f: &fn(elem: &const T) -> bool) -> bool {\n-    let mut i = 0;\n-    let n = v.len();\n-    while i < n {\n-        if !f(&const v[i]) {\n-            return false;\n-        }\n-        i += 1;\n-    }\n-    return true;\n-}\n-\n /**\n  * Iterates over a vector's elements and indices\n  *"}]}