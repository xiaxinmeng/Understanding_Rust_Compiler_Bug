{"sha": "2d17d9101dc9de04888cacb5b29860200a0f11c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkMTdkOTEwMWRjOWRlMDQ4ODhjYWNiNWIyOTg2MDIwMGEwZjExYzc=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-22T04:53:14Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-22T16:28:20Z"}, "message": "stdlib: Use if/alt expressions in std::map", "tree": {"sha": "1ac228aff82b0a5e94e9c93be83a31108b384c0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ac228aff82b0a5e94e9c93be83a31108b384c0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d17d9101dc9de04888cacb5b29860200a0f11c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d17d9101dc9de04888cacb5b29860200a0f11c7", "html_url": "https://github.com/rust-lang/rust/commit/2d17d9101dc9de04888cacb5b29860200a0f11c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d17d9101dc9de04888cacb5b29860200a0f11c7/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6777db615fcbed28c9ed203e0f95bd143b019eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6777db615fcbed28c9ed203e0f95bd143b019eb", "html_url": "https://github.com/rust-lang/rust/commit/f6777db615fcbed28c9ed203e0f95bd143b019eb"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "a9b015cf39c1dad6434f9fda2b641a35d8461443", "filename": "src/lib/map.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2d17d9101dc9de04888cacb5b29860200a0f11c7/src%2Flib%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d17d9101dc9de04888cacb5b29860200a0f11c7/src%2Flib%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fmap.rs?ref=2d17d9101dc9de04888cacb5b29860200a0f11c7", "patch": "@@ -166,19 +166,17 @@ fn mk_hashmap[K, V](&hashfn[K] hasher, &eqfn[K] eqer) -> hashmap[K, V] {\n             }\n \n             fn contains_key(&K key) -> bool {\n-                alt (find_common[K, V](hasher, eqer, bkts, nbkts, key)) {\n-                    case (option::some[V](_)) { ret true; }\n-                    case (_) { ret false; }\n-                }\n-                fail;   // FIXME: remove me when exhaustiveness checking works\n+                ret alt (find_common[K, V](hasher, eqer, bkts, nbkts, key)) {\n+                    case (option::some[V](_)) { true }\n+                    case (_) { false }\n+                };\n             }\n \n             fn get(&K key) -> V {\n-                alt (find_common[K, V](hasher, eqer, bkts, nbkts, key)) {\n-                    case (option::some[V](?val)) { ret val; }\n-                    case (_) { fail; }\n-                }\n-                fail;   // FIXME: remove me when exhaustiveness checking works\n+                ret alt (find_common[K, V](hasher, eqer, bkts, nbkts, key)) {\n+                    case (option::some[V](?val)) { val }\n+                    case (_) { fail }\n+                };\n             }\n \n             fn find(&K key) -> option::t[V] {"}]}