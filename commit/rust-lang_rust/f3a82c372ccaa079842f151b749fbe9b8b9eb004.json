{"sha": "f3a82c372ccaa079842f151b749fbe9b8b9eb004", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYTgyYzM3MmNjYWEwNzk4NDJmMTUxYjc0OWZiZTliOGI5ZWIwMDQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-02T09:25:24Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-02T09:25:24Z"}, "message": "remove flavor", "tree": {"sha": "e7dab9896f9ddfa0af3c880375d8408c7db758e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7dab9896f9ddfa0af3c880375d8408c7db758e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3a82c372ccaa079842f151b749fbe9b8b9eb004", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3a82c372ccaa079842f151b749fbe9b8b9eb004", "html_url": "https://github.com/rust-lang/rust/commit/f3a82c372ccaa079842f151b749fbe9b8b9eb004", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3a82c372ccaa079842f151b749fbe9b8b9eb004/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5287a2506c19b7f886556f8a73510f57dd234857", "url": "https://api.github.com/repos/rust-lang/rust/commits/5287a2506c19b7f886556f8a73510f57dd234857", "html_url": "https://github.com/rust-lang/rust/commit/5287a2506c19b7f886556f8a73510f57dd234857"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "2b451f08d6d8137c82ff38b1a80f68b9ad9051b4", "filename": "crates/ra_assists/src/replace_if_let_with_match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3a82c372ccaa079842f151b749fbe9b8b9eb004/crates%2Fra_assists%2Fsrc%2Freplace_if_let_with_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3a82c372ccaa079842f151b749fbe9b8b9eb004/crates%2Fra_assists%2Fsrc%2Freplace_if_let_with_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Freplace_if_let_with_match.rs?ref=f3a82c372ccaa079842f151b749fbe9b8b9eb004", "patch": "@@ -11,8 +11,8 @@ pub(crate) fn replace_if_let_with_match(mut ctx: AssistCtx<impl HirDatabase>) ->\n     let expr = cond.expr()?;\n     let then_block = if_expr.then_branch()?;\n     let else_block = match if_expr.else_branch()? {\n-        ast::ElseBranchFlavor::Block(it) => it,\n-        ast::ElseBranchFlavor::IfExpr(_) => return None,\n+        ast::ElseBranch::Block(it) => it,\n+        ast::ElseBranch::IfExpr(_) => return None,\n     };\n \n     ctx.add_action(AssistId(\"replace_if_let_with_match\"), \"replace with match\", |edit| {"}, {"sha": "ee2c4475ce2ea8ed5ca599ab4e3dc87211e58a59", "filename": "crates/ra_hir/src/expr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f3a82c372ccaa079842f151b749fbe9b8b9eb004/crates%2Fra_hir%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3a82c372ccaa079842f151b749fbe9b8b9eb004/crates%2Fra_hir%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr.rs?ref=f3a82c372ccaa079842f151b749fbe9b8b9eb004", "patch": "@@ -516,8 +516,8 @@ impl ExprCollector {\n                     let else_branch = e\n                         .else_branch()\n                         .map(|b| match b {\n-                            ast::ElseBranchFlavor::Block(it) => self.collect_block(it),\n-                            ast::ElseBranchFlavor::IfExpr(elif) => {\n+                            ast::ElseBranch::Block(it) => self.collect_block(it),\n+                            ast::ElseBranch::IfExpr(elif) => {\n                                 let expr: &ast::Expr = ast::Expr::cast(elif.syntax()).unwrap();\n                                 self.collect_expr(expr)\n                             }\n@@ -533,8 +533,8 @@ impl ExprCollector {\n                     let condition = self.collect_expr_opt(e.condition().and_then(|c| c.expr()));\n                     let then_branch = self.collect_block_opt(e.then_branch());\n                     let else_branch = e.else_branch().map(|b| match b {\n-                        ast::ElseBranchFlavor::Block(it) => self.collect_block(it),\n-                        ast::ElseBranchFlavor::IfExpr(elif) => {\n+                        ast::ElseBranch::Block(it) => self.collect_block(it),\n+                        ast::ElseBranch::IfExpr(elif) => {\n                             let expr: &ast::Expr = ast::Expr::cast(elif.syntax()).unwrap();\n                             self.collect_expr(expr)\n                         }"}, {"sha": "b0e0f8bf9086cc5ce18029434d3fc4f0ef13c709", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f3a82c372ccaa079842f151b749fbe9b8b9eb004/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3a82c372ccaa079842f151b749fbe9b8b9eb004/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=f3a82c372ccaa079842f151b749fbe9b8b9eb004", "patch": "@@ -164,7 +164,7 @@ impl LetStmt {\n }\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n-pub enum ElseBranchFlavor<'a> {\n+pub enum ElseBranch<'a> {\n     Block(&'a Block),\n     IfExpr(&'a IfExpr),\n }\n@@ -173,12 +173,12 @@ impl IfExpr {\n     pub fn then_branch(&self) -> Option<&Block> {\n         self.blocks().nth(0)\n     }\n-    pub fn else_branch(&self) -> Option<ElseBranchFlavor> {\n+    pub fn else_branch(&self) -> Option<ElseBranch> {\n         let res = match self.blocks().nth(1) {\n-            Some(block) => ElseBranchFlavor::Block(block),\n+            Some(block) => ElseBranch::Block(block),\n             None => {\n                 let elif: &IfExpr = child_opt(self)?;\n-                ElseBranchFlavor::IfExpr(elif)\n+                ElseBranch::IfExpr(elif)\n             }\n         };\n         Some(res)"}]}