{"sha": "901bab70d34748379331f1c1f069f57029f46b5e", "node_id": "C_kwDOAAsO6NoAKDkwMWJhYjcwZDM0NzQ4Mzc5MzMxZjFjMWYwNjlmNTcwMjlmNDZiNWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-28T05:34:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-28T05:34:03Z"}, "message": "Rollup merge of #110913 - compiler-errors:missing-lints, r=Nilstrieb\n\nAdd some missing built-in lints\n\n(and also sort them, so this is best reviewed one commit at a time)\n\nFixes #110911\n\nI wonder if there's a good way to detect when a lint is built-in (i.e. not associated to a lint pass). If so, it needs to be added to this list, or else we're unable to `allow` or `deny` it. Leaving that for future work, I guess...", "tree": {"sha": "6b5d8adddfd999b4d5bc36a786745db63bface3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b5d8adddfd999b4d5bc36a786745db63bface3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/901bab70d34748379331f1c1f069f57029f46b5e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkS1rLCRBK7hj4Ov3rIwAAe/wIAGDvCIgZot5vnaJWv34ACcVY\ntsMWyPue4z9dMhKIO2MHuJYNmCgI/uO1q46+32s36GHwdfkqjr47X9zRNLTR2txu\nUE+dnLI8ETlWKHLvJIUAlAWREv/t8VeSbx1ZitN3mdnZgDxGXkQxS25Qp9V1nJSR\nSTX0utCHN6m/cN0C2o2TfVaKpjNSpsKw3mdrOkfK8swzBY10dl2c86I7J5q+XBhs\nbSUqfpZDkbFR8IQCYF6RMaAZ1wQK+h8fV023ZKrKttxtWkJcx8Vrj/NGS7V4y8gr\nA54dYGT5uYjooEH5b3+lyynVlyx2X3Gyds1HsL6jJ1KQr9xaGvy+ZxqZUk1eZ/A=\n=JSST\n-----END PGP SIGNATURE-----\n", "payload": "tree 6b5d8adddfd999b4d5bc36a786745db63bface3d\nparent 8ce92daa854e329f4fb7ac75c28dbeea3f5bb125\nparent 0279922157761fa103c6be1792d2c3f77e5a61a3\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1682660043 +0200\ncommitter GitHub <noreply@github.com> 1682660043 +0200\n\nRollup merge of #110913 - compiler-errors:missing-lints, r=Nilstrieb\n\nAdd some missing built-in lints\n\n(and also sort them, so this is best reviewed one commit at a time)\n\nFixes #110911\n\nI wonder if there's a good way to detect when a lint is built-in (i.e. not associated to a lint pass). If so, it needs to be added to this list, or else we're unable to `allow` or `deny` it. Leaving that for future work, I guess...\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/901bab70d34748379331f1c1f069f57029f46b5e", "html_url": "https://github.com/rust-lang/rust/commit/901bab70d34748379331f1c1f069f57029f46b5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/901bab70d34748379331f1c1f069f57029f46b5e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ce92daa854e329f4fb7ac75c28dbeea3f5bb125", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ce92daa854e329f4fb7ac75c28dbeea3f5bb125", "html_url": "https://github.com/rust-lang/rust/commit/8ce92daa854e329f4fb7ac75c28dbeea3f5bb125"}, {"sha": "0279922157761fa103c6be1792d2c3f77e5a61a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0279922157761fa103c6be1792d2c3f77e5a61a3", "html_url": "https://github.com/rust-lang/rust/commit/0279922157761fa103c6be1792d2c3f77e5a61a3"}], "stats": {"total": 230, "additions": 123, "deletions": 107}, "files": [{"sha": "a3d7bd3ef59a357f3f2abcb4d8d00cf8a7429468", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 93, "deletions": 88, "changes": 181, "blob_url": "https://github.com/rust-lang/rust/blob/901bab70d34748379331f1c1f069f57029f46b5e/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/901bab70d34748379331f1c1f069f57029f46b5e/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=901bab70d34748379331f1c1f069f57029f46b5e", "patch": "@@ -3273,110 +3273,115 @@ declare_lint_pass! {\n     /// Does nothing as a lint pass, but registers some `Lint`s\n     /// that are used by other parts of the compiler.\n     HardwiredLints => [\n-        FORBIDDEN_LINT_GROUPS,\n-        ILLEGAL_FLOATING_POINT_LITERAL_PATTERN,\n+        // tidy-alphabetical-start\n+        ABSOLUTE_PATHS_NOT_STARTING_WITH_CRATE,\n+        AMBIGUOUS_ASSOCIATED_ITEMS,\n+        AMBIGUOUS_GLOB_REEXPORTS,\n         ARITHMETIC_OVERFLOW,\n-        UNCONDITIONAL_PANIC,\n-        UNUSED_IMPORTS,\n-        UNUSED_EXTERN_CRATES,\n-        UNUSED_CRATE_DEPENDENCIES,\n-        UNUSED_QUALIFICATIONS,\n-        UNKNOWN_LINTS,\n-        UNFULFILLED_LINT_EXPECTATIONS,\n-        UNUSED_VARIABLES,\n-        UNUSED_ASSIGNMENTS,\n-        DEAD_CODE,\n-        UNREACHABLE_CODE,\n-        UNREACHABLE_PATTERNS,\n-        OVERLAPPING_RANGE_ENDPOINTS,\n+        ASM_SUB_REGISTER,\n+        BAD_ASM_STYLE,\n+        BARE_TRAIT_OBJECTS,\n         BINDINGS_WITH_VARIANT_NAME,\n-        UNUSED_MACROS,\n-        UNUSED_MACRO_RULES,\n-        WARNINGS,\n-        UNUSED_FEATURES,\n-        STABLE_FEATURES,\n-        UNKNOWN_CRATE_TYPES,\n-        TRIVIAL_CASTS,\n-        TRIVIAL_NUMERIC_CASTS,\n-        PRIVATE_IN_PUBLIC,\n-        EXPORTED_PRIVATE_DEPENDENCIES,\n-        PUB_USE_OF_PRIVATE_EXTERN_CRATE,\n-        INVALID_TYPE_PARAM_DEFAULT,\n-        RENAMED_AND_REMOVED_LINTS,\n-        CONST_ITEM_MUTATION,\n-        PATTERNS_IN_FNS_WITHOUT_BODY,\n-        MISSING_FRAGMENT_SPECIFIER,\n-        LATE_BOUND_LIFETIME_ARGUMENTS,\n-        ORDER_DEPENDENT_TRAIT_OBJECTS,\n+        BREAK_WITH_LABEL_AND_LOOP,\n+        BYTE_SLICE_IN_PACKED_STRUCT_WITH_DERIVE,\n+        CENUM_IMPL_DROP_CAST,\n         COHERENCE_LEAK_CHECK,\n+        CONFLICTING_REPR_HINTS,\n+        CONST_EVALUATABLE_UNCHECKED,\n+        CONST_ITEM_MUTATION,\n+        DEAD_CODE,\n         DEPRECATED,\n-        UNUSED_UNSAFE,\n-        UNUSED_MUT,\n-        UNCONDITIONAL_RECURSION,\n-        SINGLE_USE_LIFETIMES,\n-        UNUSED_LIFETIMES,\n-        UNUSED_LABELS,\n-        TYVAR_BEHIND_RAW_POINTER,\n+        DEPRECATED_CFG_ATTR_CRATE_TYPE_NAME,\n+        DEPRECATED_IN_FUTURE,\n+        DEPRECATED_WHERE_CLAUSE_LOCATION,\n+        DUPLICATE_MACRO_ATTRIBUTES,\n         ELIDED_LIFETIMES_IN_PATHS,\n-        BARE_TRAIT_OBJECTS,\n-        ABSOLUTE_PATHS_NOT_STARTING_WITH_CRATE,\n-        UNSTABLE_NAME_COLLISIONS,\n-        IRREFUTABLE_LET_PATTERNS,\n-        WHERE_CLAUSES_OBJECT_SAFETY,\n-        PROC_MACRO_DERIVE_RESOLUTION_FALLBACK,\n-        MACRO_USE_EXTERN_CRATE,\n-        MACRO_EXPANDED_MACRO_EXPORTS_ACCESSED_BY_ABSOLUTE_PATHS,\n+        EXPORTED_PRIVATE_DEPENDENCIES,\n+        FFI_UNWIND_CALLS,\n+        FORBIDDEN_LINT_GROUPS,\n+        FUNCTION_ITEM_REFERENCES,\n+        FUZZY_PROVENANCE_CASTS,\n         ILL_FORMED_ATTRIBUTE_INPUT,\n-        CONFLICTING_REPR_HINTS,\n-        META_VARIABLE_MISUSE,\n-        DEPRECATED_IN_FUTURE,\n-        AMBIGUOUS_ASSOCIATED_ITEMS,\n-        INDIRECT_STRUCTURAL_MATCH,\n-        POINTER_STRUCTURAL_MATCH,\n-        NONTRIVIAL_STRUCTURAL_MATCH,\n-        SOFT_UNSTABLE,\n-        UNSTABLE_SYNTAX_PRE_EXPANSION,\n-        INLINE_NO_SANITIZE,\n-        BAD_ASM_STYLE,\n-        ASM_SUB_REGISTER,\n-        UNSAFE_OP_IN_UNSAFE_FN,\n+        ILLEGAL_FLOATING_POINT_LITERAL_PATTERN,\n+        IMPLIED_BOUNDS_ENTAILMENT,\n         INCOMPLETE_INCLUDE,\n-        CENUM_IMPL_DROP_CAST,\n-        FUZZY_PROVENANCE_CASTS,\n-        LOSSY_PROVENANCE_CASTS,\n-        CONST_EVALUATABLE_UNCHECKED,\n+        INDIRECT_STRUCTURAL_MATCH,\n         INEFFECTIVE_UNSTABLE_TRAIT_IMPL,\n-        MUST_NOT_SUSPEND,\n-        UNINHABITED_STATIC,\n-        FUNCTION_ITEM_REFERENCES,\n-        USELESS_DEPRECATED,\n-        MISSING_ABI,\n+        INLINE_NO_SANITIZE,\n+        INVALID_ALIGNMENT,\n         INVALID_DOC_ATTRIBUTES,\n-        SEMICOLON_IN_EXPRESSIONS_FROM_MACROS,\n-        RUST_2021_INCOMPATIBLE_CLOSURE_CAPTURES,\n+        INVALID_MACRO_EXPORT_ARGUMENTS,\n+        INVALID_TYPE_PARAM_DEFAULT,\n+        IRREFUTABLE_LET_PATTERNS,\n+        LARGE_ASSIGNMENTS,\n+        LATE_BOUND_LIFETIME_ARGUMENTS,\n         LEGACY_DERIVE_HELPERS,\n+        LOSSY_PROVENANCE_CASTS,\n+        MACRO_EXPANDED_MACRO_EXPORTS_ACCESSED_BY_ABSOLUTE_PATHS,\n+        MACRO_USE_EXTERN_CRATE,\n+        META_VARIABLE_MISUSE,\n+        MISSING_ABI,\n+        MISSING_FRAGMENT_SPECIFIER,\n+        MUST_NOT_SUSPEND,\n+        NAMED_ARGUMENTS_USED_POSITIONALLY,\n+        NON_EXHAUSTIVE_OMITTED_PATTERNS,\n+        NONTRIVIAL_STRUCTURAL_MATCH,\n+        ORDER_DEPENDENT_TRAIT_OBJECTS,\n+        OVERLAPPING_RANGE_ENDPOINTS,\n+        PATTERNS_IN_FNS_WITHOUT_BODY,\n+        POINTER_STRUCTURAL_MATCH,\n+        PRIVATE_IN_PUBLIC,\n         PROC_MACRO_BACK_COMPAT,\n+        PROC_MACRO_DERIVE_RESOLUTION_FALLBACK,\n+        PUB_USE_OF_PRIVATE_EXTERN_CRATE,\n+        RENAMED_AND_REMOVED_LINTS,\n+        REPR_TRANSPARENT_EXTERNAL_PRIVATE_FIELDS,\n+        RUST_2021_INCOMPATIBLE_CLOSURE_CAPTURES,\n         RUST_2021_INCOMPATIBLE_OR_PATTERNS,\n-        LARGE_ASSIGNMENTS,\n-        RUST_2021_PRELUDE_COLLISIONS,\n         RUST_2021_PREFIXES_INCOMPATIBLE_SYNTAX,\n+        RUST_2021_PRELUDE_COLLISIONS,\n+        SEMICOLON_IN_EXPRESSIONS_FROM_MACROS,\n+        SINGLE_USE_LIFETIMES,\n+        SOFT_UNSTABLE,\n+        STABLE_FEATURES,\n+        SUSPICIOUS_AUTO_TRAIT_IMPLS,\n+        TEST_UNSTABLE_LINT,\n+        TEXT_DIRECTION_CODEPOINT_IN_COMMENT,\n+        TRIVIAL_CASTS,\n+        TRIVIAL_NUMERIC_CASTS,\n+        TYVAR_BEHIND_RAW_POINTER,\n+        UNCONDITIONAL_PANIC,\n+        UNCONDITIONAL_RECURSION,\n+        UNDEFINED_NAKED_FUNCTION_ABI,\n+        UNFULFILLED_LINT_EXPECTATIONS,\n+        UNINHABITED_STATIC,\n+        UNKNOWN_CRATE_TYPES,\n+        UNKNOWN_LINTS,\n+        UNREACHABLE_CODE,\n+        UNREACHABLE_PATTERNS,\n+        UNSAFE_OP_IN_UNSAFE_FN,\n+        UNSTABLE_NAME_COLLISIONS,\n+        UNSTABLE_SYNTAX_PRE_EXPANSION,\n         UNSUPPORTED_CALLING_CONVENTIONS,\n-        BREAK_WITH_LABEL_AND_LOOP,\n+        UNUSED_ASSIGNMENTS,\n         UNUSED_ATTRIBUTES,\n+        UNUSED_CRATE_DEPENDENCIES,\n+        UNUSED_EXTERN_CRATES,\n+        UNUSED_FEATURES,\n+        UNUSED_IMPORTS,\n+        UNUSED_LABELS,\n+        UNUSED_LIFETIMES,\n+        UNUSED_MACRO_RULES,\n+        UNUSED_MACROS,\n+        UNUSED_MUT,\n+        UNUSED_QUALIFICATIONS,\n         UNUSED_TUPLE_STRUCT_FIELDS,\n-        NON_EXHAUSTIVE_OMITTED_PATTERNS,\n-        TEXT_DIRECTION_CODEPOINT_IN_COMMENT,\n-        DEPRECATED_CFG_ATTR_CRATE_TYPE_NAME,\n-        DUPLICATE_MACRO_ATTRIBUTES,\n-        SUSPICIOUS_AUTO_TRAIT_IMPLS,\n-        DEPRECATED_WHERE_CLAUSE_LOCATION,\n-        TEST_UNSTABLE_LINT,\n-        FFI_UNWIND_CALLS,\n-        REPR_TRANSPARENT_EXTERNAL_PRIVATE_FIELDS,\n-        NAMED_ARGUMENTS_USED_POSITIONALLY,\n-        IMPLIED_BOUNDS_ENTAILMENT,\n-        BYTE_SLICE_IN_PACKED_STRUCT_WITH_DERIVE,\n-        AMBIGUOUS_GLOB_REEXPORTS,\n+        UNUSED_UNSAFE,\n+        UNUSED_VARIABLES,\n+        USELESS_DEPRECATED,\n+        WARNINGS,\n+        WHERE_CLAUSES_OBJECT_SAFETY,\n+        // tidy-alphabetical-end\n     ]\n }\n "}, {"sha": "644acc27b58e2185f6da7a3479ebf0ea402c82b7", "filename": "tests/ui/attributes/invalid_macro_export_argument.deny.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/901bab70d34748379331f1c1f069f57029f46b5e/tests%2Fui%2Fattributes%2Finvalid_macro_export_argument.deny.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/901bab70d34748379331f1c1f069f57029f46b5e/tests%2Fui%2Fattributes%2Finvalid_macro_export_argument.deny.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fattributes%2Finvalid_macro_export_argument.deny.stderr?ref=901bab70d34748379331f1c1f069f57029f46b5e", "patch": "@@ -0,0 +1,20 @@\n+error: `#[macro_export]` can only take 1 or 0 arguments\n+  --> $DIR/invalid_macro_export_argument.rs:7:1\n+   |\n+LL | #[macro_export(hello, world)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/invalid_macro_export_argument.rs:4:24\n+   |\n+LL | #![cfg_attr(deny, deny(invalid_macro_export_arguments))]\n+   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: `not_local_inner_macros` isn't a valid `#[macro_export]` argument\n+  --> $DIR/invalid_macro_export_argument.rs:13:16\n+   |\n+LL | #[macro_export(not_local_inner_macros)]\n+   |                ^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "a0ed5fd1c8fa213eda08e751276c2d3dd318ae58", "filename": "tests/ui/attributes/invalid_macro_export_argument.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/901bab70d34748379331f1c1f069f57029f46b5e/tests%2Fui%2Fattributes%2Finvalid_macro_export_argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/901bab70d34748379331f1c1f069f57029f46b5e/tests%2Fui%2Fattributes%2Finvalid_macro_export_argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fattributes%2Finvalid_macro_export_argument.rs?ref=901bab70d34748379331f1c1f069f57029f46b5e", "patch": "@@ -1,10 +1,17 @@\n-// check-pass\n-#[macro_export(hello, world)] //~ WARN `#[macro_export]` can only take 1 or 0 arguments\n+// revisions: deny allow\n+//[allow] check-pass\n+\n+#![cfg_attr(deny, deny(invalid_macro_export_arguments))]\n+#![cfg_attr(allow, allow(invalid_macro_export_arguments))]\n+\n+#[macro_export(hello, world)]\n+//[deny]~^ ERROR `#[macro_export]` can only take 1 or 0 arguments\n macro_rules! a {\n     () => ()\n }\n \n-#[macro_export(not_local_inner_macros)] //~ WARN `not_local_inner_macros` isn't a valid `#[macro_export]` argument\n+#[macro_export(not_local_inner_macros)]\n+//[deny]~^ ERROR `not_local_inner_macros` isn't a valid `#[macro_export]` argument\n macro_rules! b {\n     () => ()\n }"}, {"sha": "a4e17642c2aac289523128602b3f209935585a81", "filename": "tests/ui/attributes/invalid_macro_export_argument.stderr", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8ce92daa854e329f4fb7ac75c28dbeea3f5bb125/tests%2Fui%2Fattributes%2Finvalid_macro_export_argument.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8ce92daa854e329f4fb7ac75c28dbeea3f5bb125/tests%2Fui%2Fattributes%2Finvalid_macro_export_argument.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fattributes%2Finvalid_macro_export_argument.stderr?ref=8ce92daa854e329f4fb7ac75c28dbeea3f5bb125", "patch": "@@ -1,16 +0,0 @@\n-warning: `#[macro_export]` can only take 1 or 0 arguments\n-  --> $DIR/invalid_macro_export_argument.rs:2:1\n-   |\n-LL | #[macro_export(hello, world)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `#[warn(invalid_macro_export_arguments)]` on by default\n-\n-warning: `not_local_inner_macros` isn't a valid `#[macro_export]` argument\n-  --> $DIR/invalid_macro_export_argument.rs:7:16\n-   |\n-LL | #[macro_export(not_local_inner_macros)]\n-   |                ^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: 2 warnings emitted\n-"}]}