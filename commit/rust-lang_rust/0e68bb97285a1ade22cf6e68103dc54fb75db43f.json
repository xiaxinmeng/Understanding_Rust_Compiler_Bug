{"sha": "0e68bb97285a1ade22cf6e68103dc54fb75db43f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNjhiYjk3Mjg1YTFhZGUyMmNmNmU2ODEwM2RjNTRmYjc1ZGI0M2Y=", "commit": {"author": {"name": "Basile Desloges", "email": "basile.desloges@gmail.com", "date": "2018-02-07T15:26:35Z"}, "committer": {"name": "Basile Desloges", "email": "basile.desloges@gmail.com", "date": "2018-03-08T21:28:52Z"}, "message": "Update tests", "tree": {"sha": "06f94d8aaee1a5cf091a2d23a566270def7d00c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06f94d8aaee1a5cf091a2d23a566270def7d00c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e68bb97285a1ade22cf6e68103dc54fb75db43f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e68bb97285a1ade22cf6e68103dc54fb75db43f", "html_url": "https://github.com/rust-lang/rust/commit/0e68bb97285a1ade22cf6e68103dc54fb75db43f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e68bb97285a1ade22cf6e68103dc54fb75db43f/comments", "author": {"login": "zilbuz", "id": 434964, "node_id": "MDQ6VXNlcjQzNDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/434964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilbuz", "html_url": "https://github.com/zilbuz", "followers_url": "https://api.github.com/users/zilbuz/followers", "following_url": "https://api.github.com/users/zilbuz/following{/other_user}", "gists_url": "https://api.github.com/users/zilbuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilbuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilbuz/subscriptions", "organizations_url": "https://api.github.com/users/zilbuz/orgs", "repos_url": "https://api.github.com/users/zilbuz/repos", "events_url": "https://api.github.com/users/zilbuz/events{/privacy}", "received_events_url": "https://api.github.com/users/zilbuz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zilbuz", "id": 434964, "node_id": "MDQ6VXNlcjQzNDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/434964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilbuz", "html_url": "https://github.com/zilbuz", "followers_url": "https://api.github.com/users/zilbuz/followers", "following_url": "https://api.github.com/users/zilbuz/following{/other_user}", "gists_url": "https://api.github.com/users/zilbuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilbuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilbuz/subscriptions", "organizations_url": "https://api.github.com/users/zilbuz/orgs", "repos_url": "https://api.github.com/users/zilbuz/repos", "events_url": "https://api.github.com/users/zilbuz/events{/privacy}", "received_events_url": "https://api.github.com/users/zilbuz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48ba50e10c275c55d5480a5102e53bdb5a977ad7", "url": "https://api.github.com/repos/rust-lang/rust/commits/48ba50e10c275c55d5480a5102e53bdb5a977ad7", "html_url": "https://github.com/rust-lang/rust/commit/48ba50e10c275c55d5480a5102e53bdb5a977ad7"}], "stats": {"total": 74, "additions": 61, "deletions": 13}, "files": [{"sha": "4d763017c0f8b4a9c6ec28320322a5ecc97e5722", "filename": "src/test/compile-fail/inner-static-type-parameter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e68bb97285a1ade22cf6e68103dc54fb75db43f/src%2Ftest%2Fcompile-fail%2Finner-static-type-parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e68bb97285a1ade22cf6e68103dc54fb75db43f/src%2Ftest%2Fcompile-fail%2Finner-static-type-parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finner-static-type-parameter.rs?ref=0e68bb97285a1ade22cf6e68103dc54fb75db43f", "patch": "@@ -14,7 +14,7 @@ enum Bar<T> { What } //~ ERROR parameter `T` is never used\n \n fn foo<T>() {\n     static a: Bar<T> = Bar::What;\n-//~^ ERROR can't use type parameters from outer function; try using a local type parameter instead\n+//~^ ERROR can't use type parameters from outer function\n }\n \n fn main() {"}, {"sha": "55975cc8e8645b712a93b1bd115790004d3740e9", "filename": "src/test/compile-fail/issue-3021-c.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0e68bb97285a1ade22cf6e68103dc54fb75db43f/src%2Ftest%2Fcompile-fail%2Fissue-3021-c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e68bb97285a1ade22cf6e68103dc54fb75db43f/src%2Ftest%2Fcompile-fail%2Fissue-3021-c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3021-c.rs?ref=0e68bb97285a1ade22cf6e68103dc54fb75db43f", "patch": "@@ -11,8 +11,8 @@\n fn siphash<T>() {\n \n     trait t {\n-        fn g(&self, x: T) -> T;  //~ ERROR can't use type parameters from outer function; try using\n-        //~^ ERROR can't use type parameters from outer function; try using\n+        fn g(&self, x: T) -> T;  //~ ERROR can't use type parameters from outer function\n+        //~^ ERROR can't use type parameters from outer function\n     }\n }\n "}, {"sha": "9a769c39eca12743d38a462ef2413ede20193423", "filename": "src/test/compile-fail/issue-3214.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e68bb97285a1ade22cf6e68103dc54fb75db43f/src%2Ftest%2Fcompile-fail%2Fissue-3214.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e68bb97285a1ade22cf6e68103dc54fb75db43f/src%2Ftest%2Fcompile-fail%2Fissue-3214.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3214.rs?ref=0e68bb97285a1ade22cf6e68103dc54fb75db43f", "patch": "@@ -10,7 +10,7 @@\n \n fn foo<T>() {\n     struct foo {\n-        x: T, //~ ERROR can't use type parameters from outer function;\n+        x: T, //~ ERROR can't use type parameters from outer function\n     }\n \n     impl<T> Drop for foo<T> {"}, {"sha": "af9e66b770bba6e3956bcf5020802523548505cc", "filename": "src/test/compile-fail/issue-5997-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e68bb97285a1ade22cf6e68103dc54fb75db43f/src%2Ftest%2Fcompile-fail%2Fissue-5997-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e68bb97285a1ade22cf6e68103dc54fb75db43f/src%2Ftest%2Fcompile-fail%2Fissue-5997-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5997-struct.rs?ref=0e68bb97285a1ade22cf6e68103dc54fb75db43f", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n fn f<T>() -> bool {\n-    struct S(T); //~ ERROR can't use type parameters from outer function; try using\n+    struct S(T); //~ ERROR can't use type parameters from outer function\n \n     true\n }"}, {"sha": "aac37289bb74952ddce176abc833629fdab68a0b", "filename": "src/test/compile-fail/nested-ty-params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e68bb97285a1ade22cf6e68103dc54fb75db43f/src%2Ftest%2Fcompile-fail%2Fnested-ty-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e68bb97285a1ade22cf6e68103dc54fb75db43f/src%2Ftest%2Fcompile-fail%2Fnested-ty-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnested-ty-params.rs?ref=0e68bb97285a1ade22cf6e68103dc54fb75db43f", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:can't use type parameters from outer function; try using\n+// error-pattern:can't use type parameters from outer function\n fn hd<U>(v: Vec<U> ) -> U {\n     fn hd1(w: [U]) -> U { return w[0]; }\n "}, {"sha": "04cd961e97ff76806659bedd7d398c98f789ea60", "filename": "src/test/compile-fail/type-arg-out-of-scope.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e68bb97285a1ade22cf6e68103dc54fb75db43f/src%2Ftest%2Fcompile-fail%2Ftype-arg-out-of-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e68bb97285a1ade22cf6e68103dc54fb75db43f/src%2Ftest%2Fcompile-fail%2Ftype-arg-out-of-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-arg-out-of-scope.rs?ref=0e68bb97285a1ade22cf6e68103dc54fb75db43f", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:can't use type parameters from outer function; try using\n+// error-pattern:can't use type parameters from outer function\n fn foo<T>(x: T) {\n     fn bar(f: Box<FnMut(T) -> T>) { }\n }"}, {"sha": "15b946625778c02a88d457ec0d94832f95b41c68", "filename": "src/test/ui/error-codes/E0401.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0e68bb97285a1ade22cf6e68103dc54fb75db43f/src%2Ftest%2Fui%2Ferror-codes%2FE0401.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e68bb97285a1ade22cf6e68103dc54fb75db43f/src%2Ftest%2Fui%2Ferror-codes%2FE0401.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0401.rs?ref=0e68bb97285a1ade22cf6e68103dc54fb75db43f", "patch": "@@ -8,11 +8,33 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+trait Baz<T> {}\n+\n fn foo<T>(x: T) {\n-    fn bar(y: T) { //~ ERROR E0401\n+    fn bar<U, V: Baz<U>, W: Fn()>(y: T) { //~ ERROR E0401\n+    }\n+    fn baz<U,\n+           V: Baz<U>,\n+           W: Fn()>\n+           (y: T) { //~ ERROR E0401\n     }\n     bar(x);\n }\n \n+\n+struct A<T> {\n+    inner: T,\n+}\n+\n+impl<T> Iterator for A<T> {\n+    type Item = u8;\n+    fn next(&mut self) -> Option<u8> {\n+        fn helper(sel: &Self) -> u8 { //~ ERROR E0401\n+            unimplemented!();\n+        }\n+        Some(helper(self))\n+    }\n+}\n+\n fn main() {\n }"}, {"sha": "c306ff4a04f6a92f1d887026c08e4f1722fc5d54", "filename": "src/test/ui/error-codes/E0401.stderr", "status": "modified", "additions": 31, "deletions": 5, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/0e68bb97285a1ade22cf6e68103dc54fb75db43f/src%2Ftest%2Fui%2Ferror-codes%2FE0401.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e68bb97285a1ade22cf6e68103dc54fb75db43f/src%2Ftest%2Fui%2Ferror-codes%2FE0401.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0401.stderr?ref=0e68bb97285a1ade22cf6e68103dc54fb75db43f", "patch": "@@ -1,9 +1,35 @@\n-error[E0401]: can't use type parameters from outer function; try using a local type parameter instead\n-  --> $DIR/E0401.rs:12:15\n+error[E0401]: can't use type parameters from outer function\n+  --> $DIR/E0401.rs:14:38\n    |\n-LL |     fn bar(y: T) { //~ ERROR E0401\n-   |               ^ use of type variable from outer function\n+LL | fn foo<T>(x: T) {\n+   |        - type variable from outer function\n+LL |     fn bar<U, V: Baz<U>, W: Fn()>(y: T) { //~ ERROR E0401\n+   |        --------------------------    ^ use of type variable from outer function\n+   |        |\n+   |        help: try using a local type parameter instead: `bar<U, V: Baz<U>, W: Fn(), T>`\n \n-error: aborting due to previous error\n+error[E0401]: can't use type parameters from outer function\n+  --> $DIR/E0401.rs:19:16\n+   |\n+LL | fn foo<T>(x: T) {\n+   |        - type variable from outer function\n+...\n+LL |            (y: T) { //~ ERROR E0401\n+   |                ^ use of type variable from outer function\n+   |\n+   = help: try using a local type parameter instead\n+\n+error[E0401]: can't use type parameters from outer function\n+  --> $DIR/E0401.rs:32:25\n+   |\n+LL | impl<T> Iterator for A<T> {\n+   | ---- `Self` type implicitely declared here, on the `impl`\n+...\n+LL |         fn helper(sel: &Self) -> u8 { //~ ERROR E0401\n+   |            ------       ^^^^ use of type variable from outer function\n+   |            |\n+   |            help: try using a local type parameter instead: `helper<Self>`\n+\n+error: aborting due to 3 previous errors\n \n If you want more information on this error, try using \"rustc --explain E0401\""}]}