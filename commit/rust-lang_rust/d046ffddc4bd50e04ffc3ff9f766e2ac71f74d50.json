{"sha": "d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwNDZmZmRkYzRiZDUwZTA0ZmZjM2ZmOWY3NjZlMmFjNzFmNzRkNTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-29T09:52:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-29T09:52:58Z"}, "message": "Auto merge of #64546 - weiznich:bugfix/rfc-2451-rerebalance-tests, r=nikomatsakis\n\nBugfix/rfc 2451 rerebalance tests\n\nr? @nikomatsakis\n\nFixes #64412\nDepends/Contains on #64414\n\ncc #55437 and #63599", "tree": {"sha": "dc7e51f95c0a246a52357c2949ae9d1b741e6bfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc7e51f95c0a246a52357c2949ae9d1b741e6bfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "html_url": "https://github.com/rust-lang/rust/commit/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe2f7e0e5350a431e00e72cfd00df2669f94fe06", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe2f7e0e5350a431e00e72cfd00df2669f94fe06", "html_url": "https://github.com/rust-lang/rust/commit/fe2f7e0e5350a431e00e72cfd00df2669f94fe06"}, {"sha": "9249a7393c7fcc2813599fe90dfdb2ea784264d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9249a7393c7fcc2813599fe90dfdb2ea784264d9", "html_url": "https://github.com/rust-lang/rust/commit/9249a7393c7fcc2813599fe90dfdb2ea784264d9"}], "stats": {"total": 548, "additions": 531, "deletions": 17}, "files": [{"sha": "4696d4da58ec0b0c958aa07a05baa76d3c60cb41", "filename": "src/librustc/traits/coherence.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fcoherence.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -378,7 +378,15 @@ fn orphan_check_trait_ref<'tcx>(\n         //      Let Ti be the first such type.\n         //     - No uncovered type parameters P1..=Pn may appear in T0..Ti (excluding Ti)\n         //\n-        for input_ty in trait_ref.input_types() {\n+        fn uncover_fundamental_ty(ty: Ty<'_>) -> Vec<Ty<'_>> {\n+            if fundamental_ty(ty) {\n+                ty.walk_shallow().flat_map(|ty| uncover_fundamental_ty(ty)).collect()\n+            } else {\n+                vec![ty]\n+            }\n+        }\n+\n+        for input_ty in trait_ref.input_types().flat_map(uncover_fundamental_ty) {\n             debug!(\"orphan_check_trait_ref: check ty `{:?}`\", input_ty);\n             if ty_is_local(tcx, input_ty, in_crate) {\n                 debug!(\"orphan_check_trait_ref: ty_is_local `{:?}`\", input_ty);"}, {"sha": "c22819831ab24a6b86a41bfbfec3d4b9fc3c98a5", "filename": "src/test/ui/coherence/auxiliary/coherence_lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fauxiliary%2Fcoherence_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fauxiliary%2Fcoherence_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fauxiliary%2Fcoherence_lib.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -5,11 +5,11 @@ pub trait Remote {\n }\n \n pub trait Remote1<T> {\n-    fn foo(&self, t: T) { }\n+    fn foo(&self, _t: T) { }\n }\n \n pub trait Remote2<T, U> {\n-    fn foo(&self, t: T, u: U) { }\n+    fn foo(&self, _t: T, _u: U) { }\n }\n \n pub struct Pair<T,U>(T,U);"}, {"sha": "b08fedc5e11c200e66ddab8431bd29ee9abf843c", "filename": "src/test/ui/coherence/impl-foreign[foreign]-for-foreign.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,17 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl Remote1<u32> for f64 {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+\n+fn main() {}"}, {"sha": "04e96f29230fb6ea5948277182bc99e7ffa96b8d", "filename": "src/test/ui/coherence/impl-foreign[foreign]-for-foreign.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.stderr?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,12 @@\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign[foreign]-for-foreign.rs:12:1\n+   |\n+LL | impl Remote1<u32> for f64 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0117`."}, {"sha": "33e85c164763e806a65a32f00a36d57d9a69b29b", "filename": "src/test/ui/coherence/impl-foreign[foreign]-for-local.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-local.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,16 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl Remote1<u32> for Local {\n+}\n+\n+fn main() {}"}, {"sha": "54d4bf04a583cfce83f247a45caa3d02b2d856d4", "filename": "src/test/ui/coherence/impl[t]-foreign[foreign[t]_local]-for-foreign.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5Bt%5D_local%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5Bt%5D_local%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5Bt%5D_local%5D-for-foreign.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,14 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// check-pass\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+impl<T> Remote2<Rc<T>, Local> for usize { }\n+\n+fn main() {}"}, {"sha": "66a4d9d27346945960477fdf5a7127603887ec1d", "filename": "src/test/ui/coherence/impl[t]-foreign[foreign]-for-fundamental[t].rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,20 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<u32> for Box<T> {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+impl<'a, T> Remote1<u32> for &'a T {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "2467097b1a8b3f7ac80cae005bf8191638403025", "filename": "src/test/ui/coherence/impl[t]-foreign[foreign]-for-fundamental[t].stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.stderr?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,19 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[foreign]-for-fundamental[t].rs:12:1\n+   |\n+LL | impl<T> Remote1<u32> for Box<T> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[foreign]-for-fundamental[t].rs:16:1\n+   |\n+LL | impl<'a, T> Remote1<u32> for &'a T {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "0a67ebcbba44c0f55b31c9c13f9855747d9e026e", "filename": "src/test/ui/coherence/impl[t]-foreign[foreign]-for-t.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,16 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<u32> for T {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "5c28406f113fca56595ba0b55b6735383fbb3232", "filename": "src/test/ui/coherence/impl[t]-foreign[foreign]-for-t.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.stderr?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,11 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[foreign]-for-t.rs:12:1\n+   |\n+LL | impl<T> Remote1<u32> for T {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "71598dae96ab3950951ec76b93d4023fe61ad4f2", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-foreign.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,20 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<Box<T>> for u32 {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+impl<'a, T> Remote1<&'a T> for u32 {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "dd9702650795eff3f7f90abd908c214849c2344c", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-foreign.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.stderr?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,19 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-foreign.rs:12:1\n+   |\n+LL | impl<T> Remote1<Box<T>> for u32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-foreign.rs:16:1\n+   |\n+LL | impl<'a, T> Remote1<&'a T> for u32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "7bf0306f29ba494d1964477a7fa6a7abe623ff7f", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-fundamental[t].rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,19 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<'a, T> Remote1<Box<T>> for &'a T {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+impl<'a, T> Remote1<&'a T> for Box<T> {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "eec57fccea762172a8e561c689380167d67ed397", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-fundamental[t].stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.stderr?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,19 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-fundamental[t].rs:12:1\n+   |\n+LL | impl<'a, T> Remote1<Box<T>> for &'a T {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-fundamental[t].rs:15:1\n+   |\n+LL | impl<'a, T> Remote1<&'a T> for Box<T> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "54d577c749248bf9a39a135b35c9ce38850d6d0a", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-local.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-local.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,17 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<Box<T>> for Local {}\n+\n+impl<'a, T> Remote1<&'a T> for Local {}\n+\n+fn main() {}"}, {"sha": "7af929006ef7f94bd426581b13ea8b9b0aaa266e", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-t.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,19 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<Box<T>> for T {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+impl<'a, T> Remote1<&'a T> for T {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "e017c3ffe6c0568be24f4a7899b6248eb0de48f4", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-t.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.stderr?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,19 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-t.rs:12:1\n+   |\n+LL | impl<T> Remote1<Box<T>> for T {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-t.rs:15:1\n+   |\n+LL | impl<'a, T> Remote1<&'a T> for T {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "24e0f309c45554d69a53c7ce2c427fc0a3cb772f", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]_local]-for-foreign.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D_local%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D_local%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D_local%5D-for-foreign.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,20 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote2<Box<T>, Local> for u32 {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+impl<'a, T> Remote2<&'a T, Local> for u32 {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "3d8561956ae7f251d9f5562d96aff6ef3b844159", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]_local]-for-foreign.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D_local%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D_local%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D_local%5D-for-foreign.stderr?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,19 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[fundamental[t]_local]-for-foreign.rs:12:1\n+   |\n+LL | impl<T> Remote2<Box<T>, Local> for u32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[fundamental[t]_local]-for-foreign.rs:16:1\n+   |\n+LL | impl<'a, T> Remote2<&'a T, Local> for u32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "81cf3c3f6eca9105d68afe7b36084298f71353d2", "filename": "src/test/ui/coherence/impl[t]-foreign[local]-for-foreign.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-foreign.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,16 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<Local> for Rc<T> {}\n+impl<T> Remote1<Local> for Vec<Box<T>> {}\n+\n+fn main() {}"}, {"sha": "54425b6d708aa33a7db33ef4c50c0a9e8f4bfe53", "filename": "src/test/ui/coherence/impl[t]-foreign[local]-for-fundamental[t].rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bt%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bt%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bt%5D.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,20 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<Local> for Box<T> {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+impl<T> Remote1<Local> for &T {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "7859665a7bb580dd65f2656087cbabbc7f7d219d", "filename": "src/test/ui/coherence/impl[t]-foreign[local]-for-fundamental[t].stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bt%5D.stderr?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,19 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[local]-for-fundamental[t].rs:12:1\n+   |\n+LL | impl<T> Remote1<Local> for Box<T> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[local]-for-fundamental[t].rs:16:1\n+   |\n+LL | impl<T> Remote1<Local> for &T {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "6b1d93cd9444278bdc8ac7601639acd30f1d8a03", "filename": "src/test/ui/coherence/impl[t]-foreign[local]-for-local.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-local.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,15 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl Remote1<Local> for Local {}\n+\n+fn main() {}"}, {"sha": "6f35c6c9dbc886b0d8b054762468d48ee8382f72", "filename": "src/test/ui/coherence/impl[t]-foreign[local]-for-t.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-t.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-t.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-t.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,16 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<Local> for T {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "be7de8cccb46756609d91294649e3ead7b2b09ed", "filename": "src/test/ui/coherence/impl[t]-foreign[local]-for-t.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-t.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-t.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-t.stderr?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,11 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[local]-for-t.rs:12:1\n+   |\n+LL | impl<T> Remote1<Local> for T {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "be0875d0110fd1eafef01d3150a9a65ad80fccef", "filename": "src/test/ui/coherence/impl[t]-foreign[local_fundamental[t]]-for-foreign.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal_fundamental%5Bt%5D%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal_fundamental%5Bt%5D%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal_fundamental%5Bt%5D%5D-for-foreign.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,19 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+struct Local2<T>(Rc<T>);\n+\n+impl<T> Remote2<Local, Box<T>> for u32 {}\n+impl<'a, T> Remote2<Local, &'a T> for u32 {}\n+impl<T> Remote2<Local2<T>, Box<T>> for u32 {}\n+impl<'a, T> Remote2<Local2<T>, &'a T> for u32 {}\n+\n+fn main() {}"}, {"sha": "5e89c2077330ada21dcadc71d032617ab46aa6ea", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-foreign.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,16 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<T> for u32 {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "5544729b5d640150c2ff2a6fddd5667c69204e5a", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-foreign.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.stderr?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,11 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[t]-for-foreign.rs:12:1\n+   |\n+LL | impl<T> Remote1<T> for u32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "300a2c4d48a9cf242be5984a4b96ca0bb07aa3ef", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-fundamental.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,20 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<T> for Box<T> {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+impl<'a, A, B> Remote1<A> for &'a B {\n+    //~^ ERROR type parameter `B` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "be8cc29a6e5b04e0624c8d9f7c6a3380c7b67407", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-fundamental.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.stderr?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,19 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[t]-for-fundamental.rs:12:1\n+   |\n+LL | impl<T> Remote1<T> for Box<T> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error[E0210]: type parameter `B` must be used as the type parameter for some local type (e.g., `MyStruct<B>`)\n+  --> $DIR/impl[t]-foreign[t]-for-fundamental.rs:16:1\n+   |\n+LL | impl<'a, A, B> Remote1<A> for &'a B {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `B` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "769147ea7eabd7a43624fbbd899692b0600f1831", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-local.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-local.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,15 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<T> for Local {}\n+\n+fn main() {}"}, {"sha": "c8513380ff73e2e4e302dd14f2ab99920d81a07c", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-t.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.rs?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,16 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote1<T> for T {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for some local type\n+}\n+\n+fn main() {}"}, {"sha": "de857afd20b1592e81f9e6f302b5a8bfb22804a1", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-t.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.stderr?ref=d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "patch": "@@ -0,0 +1,11 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign[t]-for-t.rs:12:1\n+   |\n+LL | impl<T> Remote1<T> for T {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "bacd3b89fad29333a04f65de99c86f0b8b75abb6", "filename": "src/test/ui/coherence/re-rebalance-coherence-rpass.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fe2f7e0e5350a431e00e72cfd00df2669f94fe06/src%2Ftest%2Fui%2Fcoherence%2Fre-rebalance-coherence-rpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe2f7e0e5350a431e00e72cfd00df2669f94fe06/src%2Ftest%2Fui%2Fcoherence%2Fre-rebalance-coherence-rpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fre-rebalance-coherence-rpass.rs?ref=fe2f7e0e5350a431e00e72cfd00df2669f94fe06", "patch": "@@ -1,14 +0,0 @@\n-#![allow(dead_code)]\n-#![feature(re_rebalance_coherence)]\n-\n-// run-pass\n-// aux-build:re_rebalance_coherence_lib.rs\n-\n-extern crate re_rebalance_coherence_lib as lib;\n-use lib::*;\n-\n-struct Oracle;\n-impl Backend for Oracle {}\n-impl<'a, T:'a, Tab> QueryFragment<Oracle> for BatchInsert<'a, T, Tab> {}\n-\n-fn main() {}"}]}