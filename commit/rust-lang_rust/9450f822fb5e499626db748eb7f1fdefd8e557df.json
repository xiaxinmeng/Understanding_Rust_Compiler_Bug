{"sha": "9450f822fb5e499626db748eb7f1fdefd8e557df", "node_id": "C_kwDOAAsO6NoAKDk0NTBmODIyZmI1ZTQ5OTYyNmRiNzQ4ZWI3ZjFmZGVmZDhlNTU3ZGY", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-07-25T17:45:26Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-07-25T17:45:26Z"}, "message": "Unused tuple fields in rustc_resolve.", "tree": {"sha": "9b85c28422023a1478af3e76243789b56aecbbff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b85c28422023a1478af3e76243789b56aecbbff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9450f822fb5e499626db748eb7f1fdefd8e557df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9450f822fb5e499626db748eb7f1fdefd8e557df", "html_url": "https://github.com/rust-lang/rust/commit/9450f822fb5e499626db748eb7f1fdefd8e557df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9450f822fb5e499626db748eb7f1fdefd8e557df/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec83476748f4fa9dd76c4c60a615e6ef6748e7fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec83476748f4fa9dd76c4c60a615e6ef6748e7fe", "html_url": "https://github.com/rust-lang/rust/commit/ec83476748f4fa9dd76c4c60a615e6ef6748e7fe"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "e955a1798b73563199056b85371e71c56ed16475", "filename": "compiler/rustc_resolve/src/build_reduced_graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9450f822fb5e499626db748eb7f1fdefd8e557df/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9450f822fb5e499626db748eb7f1fdefd8e557df/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs?ref=9450f822fb5e499626db748eb7f1fdefd8e557df", "patch": "@@ -524,7 +524,7 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n                         let crate_root = self.r.resolve_crate_root(source.ident);\n                         let crate_name = match crate_root.kind {\n                             ModuleKind::Def(.., name) => name,\n-                            ModuleKind::Block(..) => unreachable!(),\n+                            ModuleKind::Block => unreachable!(),\n                         };\n                         // HACK(eddyb) unclear how good this is, but keeping `$crate`\n                         // in `source` breaks `src/test/ui/imports/import-crate-var.rs`,\n@@ -936,7 +936,7 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n         if self.block_needs_anonymous_module(block) {\n             let module = self.r.new_module(\n                 Some(parent),\n-                ModuleKind::Block(block.id),\n+                ModuleKind::Block,\n                 expansion.to_expn_id(),\n                 block.span,\n                 parent.no_implicit_prelude,"}, {"sha": "cb6929d94126725202854da4a3b5e96b4c3cdd1c", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9450f822fb5e499626db748eb7f1fdefd8e557df/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9450f822fb5e499626db748eb7f1fdefd8e557df/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=9450f822fb5e499626db748eb7f1fdefd8e557df", "patch": "@@ -163,7 +163,7 @@ impl<'a> Resolver<'a> {\n \n         let container = match parent.kind {\n             ModuleKind::Def(kind, _, _) => kind.descr(parent.def_id()),\n-            ModuleKind::Block(..) => \"block\",\n+            ModuleKind::Block => \"block\",\n         };\n \n         let old_noun = match old_binding.is_import() {"}, {"sha": "6e6782881427b678e1ecc863a7bd31524dba17eb", "filename": "compiler/rustc_resolve/src/ident.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9450f822fb5e499626db748eb7f1fdefd8e557df/compiler%2Frustc_resolve%2Fsrc%2Fident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9450f822fb5e499626db748eb7f1fdefd8e557df/compiler%2Frustc_resolve%2Fsrc%2Fident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fident.rs?ref=9450f822fb5e499626db748eb7f1fdefd8e557df", "patch": "@@ -218,7 +218,7 @@ impl<'a> Resolver<'a> {\n             return Some((self.expn_def_scope(ctxt.remove_mark()), None));\n         }\n \n-        if let ModuleKind::Block(..) = module.kind {\n+        if let ModuleKind::Block = module.kind {\n             return Some((module.parent.unwrap().nearest_item_scope(), None));\n         }\n \n@@ -333,7 +333,7 @@ impl<'a> Resolver<'a> {\n             };\n \n             match module.kind {\n-                ModuleKind::Block(..) => {} // We can see through blocks\n+                ModuleKind::Block => {} // We can see through blocks\n                 _ => break,\n             }\n "}, {"sha": "84ddbb07f747ee08151f82ad38821afa7dea1efd", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9450f822fb5e499626db748eb7f1fdefd8e557df/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9450f822fb5e499626db748eb7f1fdefd8e557df/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=9450f822fb5e499626db748eb7f1fdefd8e557df", "patch": "@@ -1434,7 +1434,7 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                     // Items from this module\n                     self.r.add_module_candidates(module, &mut names, &filter_fn);\n \n-                    if let ModuleKind::Block(..) = module.kind {\n+                    if let ModuleKind::Block = module.kind {\n                         // We can see through blocks\n                     } else {\n                         // Items from the prelude"}, {"sha": "da3216bac06558a3116dbea518e60dcdbbd31fb7", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9450f822fb5e499626db748eb7f1fdefd8e557df/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9450f822fb5e499626db748eb7f1fdefd8e557df/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=9450f822fb5e499626db748eb7f1fdefd8e557df", "patch": "@@ -436,7 +436,7 @@ enum ModuleKind {\n     ///     f(); // Resolves to (1)\n     /// }\n     /// ```\n-    Block(NodeId),\n+    Block,\n     /// Any module with a name.\n     ///\n     /// This could be:\n@@ -453,7 +453,7 @@ impl ModuleKind {\n     /// Get name of the module.\n     pub fn name(&self) -> Option<Symbol> {\n         match self {\n-            ModuleKind::Block(..) => None,\n+            ModuleKind::Block => None,\n             ModuleKind::Def(.., name) => Some(*name),\n         }\n     }\n@@ -529,7 +529,7 @@ impl<'a> ModuleData<'a> {\n     ) -> Self {\n         let is_foreign = match kind {\n             ModuleKind::Def(_, def_id, _) => !def_id.is_local(),\n-            ModuleKind::Block(_) => false,\n+            ModuleKind::Block => false,\n         };\n         ModuleData {\n             parent,"}]}