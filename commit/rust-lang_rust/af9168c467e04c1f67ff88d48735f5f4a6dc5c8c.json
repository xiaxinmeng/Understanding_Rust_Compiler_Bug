{"sha": "af9168c467e04c1f67ff88d48735f5f4a6dc5c8c", "node_id": "C_kwDOAAsO6NoAKGFmOTE2OGM0NjdlMDRjMWY2N2ZmODhkNDg3MzVmNWY0YTZkYzVjOGM", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-05-14T04:30:36Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-05-14T04:44:42Z"}, "message": "Implement `Hash` for `core::alloc::Layout`", "tree": {"sha": "eb9b76985b40cd856db8c44c6aaad4cfcdb1d9ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb9b76985b40cd856db8c44c6aaad4cfcdb1d9ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af9168c467e04c1f67ff88d48735f5f4a6dc5c8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af9168c467e04c1f67ff88d48735f5f4a6dc5c8c", "html_url": "https://github.com/rust-lang/rust/commit/af9168c467e04c1f67ff88d48735f5f4a6dc5c8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af9168c467e04c1f67ff88d48735f5f4a6dc5c8c/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1f721e64014863f41c1a386b04af04c2de25321", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1f721e64014863f41c1a386b04af04c2de25321", "html_url": "https://github.com/rust-lang/rust/commit/f1f721e64014863f41c1a386b04af04c2de25321"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "2f378836cbbb37619ac0a6f020c8ea356931e8e1", "filename": "library/core/src/alloc/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af9168c467e04c1f67ff88d48735f5f4a6dc5c8c/library%2Fcore%2Fsrc%2Falloc%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af9168c467e04c1f67ff88d48735f5f4a6dc5c8c/library%2Fcore%2Fsrc%2Falloc%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Falloc%2Flayout.rs?ref=af9168c467e04c1f67ff88d48735f5f4a6dc5c8c", "patch": "@@ -26,7 +26,7 @@ const fn size_align<T>() -> (usize, usize) {\n /// like this are met, use specific allocators with looser\n /// requirements, or use the more lenient `Allocator` interface.)\n #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n-#[derive(Copy, Clone, Debug, PartialEq, Eq)]\n+#[derive(Copy, Clone, Debug, PartialEq, Eq, Hash)]\n #[lang = \"alloc_layout\"]\n pub struct Layout {\n     // size of the requested block of memory, measured in bytes."}, {"sha": "fcfa95120df21e94d9c6f8c0b3f4c76026a0aa5b", "filename": "library/core/src/mem/valid_align.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/af9168c467e04c1f67ff88d48735f5f4a6dc5c8c/library%2Fcore%2Fsrc%2Fmem%2Fvalid_align.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af9168c467e04c1f67ff88d48735f5f4a6dc5c8c/library%2Fcore%2Fsrc%2Fmem%2Fvalid_align.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fvalid_align.rs?ref=af9168c467e04c1f67ff88d48735f5f4a6dc5c8c", "patch": "@@ -1,6 +1,6 @@\n use crate::convert::TryFrom;\n use crate::num::NonZeroUsize;\n-use crate::{cmp, fmt, mem, num};\n+use crate::{cmp, fmt, hash, mem, num};\n \n /// A type storing a `usize` which is a power of two, and thus\n /// represents a possible alignment in the rust abstract machine.\n@@ -105,6 +105,13 @@ impl cmp::PartialOrd for ValidAlign {\n     }\n }\n \n+impl hash::Hash for ValidAlign {\n+    #[inline]\n+    fn hash<H: hash::Hasher>(&self, state: &mut H) {\n+        self.as_nonzero().hash(state)\n+    }\n+}\n+\n #[cfg(target_pointer_width = \"16\")]\n type ValidAlignEnum = ValidAlignEnum16;\n #[cfg(target_pointer_width = \"32\")]"}]}