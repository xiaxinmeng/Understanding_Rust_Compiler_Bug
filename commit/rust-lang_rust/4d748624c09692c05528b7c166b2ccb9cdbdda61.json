{"sha": "4d748624c09692c05528b7c166b2ccb9cdbdda61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNzQ4NjI0YzA5NjkyYzA1NTI4YjdjMTY2YjJjY2I5Y2RiZGRhNjE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-03-10T09:02:39Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-03-10T09:20:27Z"}, "message": "add regression test", "tree": {"sha": "6d4cfb91d519f241707dd7dd4d5adf6e0b3fb044", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d4cfb91d519f241707dd7dd4d5adf6e0b3fb044"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d748624c09692c05528b7c166b2ccb9cdbdda61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d748624c09692c05528b7c166b2ccb9cdbdda61", "html_url": "https://github.com/rust-lang/rust/commit/4d748624c09692c05528b7c166b2ccb9cdbdda61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d748624c09692c05528b7c166b2ccb9cdbdda61/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f27a13f5f620d1fcdc810b82033cee55804c3be", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f27a13f5f620d1fcdc810b82033cee55804c3be", "html_url": "https://github.com/rust-lang/rust/commit/9f27a13f5f620d1fcdc810b82033cee55804c3be"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "6b46b9317d0a1f4bc332f8c59419c84cf4da2307", "filename": "src/test/ui/consts/copy-intrinsic.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/4d748624c09692c05528b7c166b2ccb9cdbdda61/src%2Ftest%2Fui%2Fconsts%2Fcopy-intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d748624c09692c05528b7c166b2ccb9cdbdda61/src%2Ftest%2Fui%2Fconsts%2Fcopy-intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcopy-intrinsic.rs?ref=4d748624c09692c05528b7c166b2ccb9cdbdda61", "patch": "@@ -0,0 +1,31 @@\n+// ignore-tidy-linelength\n+#![feature(const_mut_refs, const_intrinsic_copy, const_ptr_offset)]\n+use std::ptr;\n+\n+const COPY_ZERO: () = unsafe {\n+    // Since we are not copying anything, this should be allowed.\n+    let src = ();\n+    let mut dst = ();\n+    ptr::copy_nonoverlapping(&src as *const _ as *const i32, &mut dst as *mut _ as *mut i32, 0);\n+};\n+\n+const COPY_OOB_1: () = unsafe {\n+    let mut x = 0i32;\n+    let dangle = (&mut x as *mut i32).wrapping_add(10);\n+    // Even if the first ptr is an int ptr and this is a ZST copy, we should detect dangling 2nd ptrs.\n+    ptr::copy_nonoverlapping(0x100 as *const i32, dangle, 0); //~ ERROR any use of this value will cause an error\n+    //~| memory access failed: pointer must be in-bounds\n+    //~| previously accepted\n+};\n+const COPY_OOB_2: () = unsafe {\n+    let x = 0i32;\n+    let dangle = (&x as *const i32).wrapping_add(10);\n+    // Even if the second ptr is an int ptr and this is a ZST copy, we should detect dangling 1st ptrs.\n+    ptr::copy_nonoverlapping(dangle, 0x100 as *mut i32, 0); //~ ERROR any use of this value will cause an error\n+    //~| memory access failed: pointer must be in-bounds\n+    //~| previously accepted\n+};\n+\n+\n+fn main() {\n+}"}, {"sha": "9157ba50ddeeb62a5d1105428b4f1b10c3882a85", "filename": "src/test/ui/consts/copy-intrinsic.stderr", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/4d748624c09692c05528b7c166b2ccb9cdbdda61/src%2Ftest%2Fui%2Fconsts%2Fcopy-intrinsic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d748624c09692c05528b7c166b2ccb9cdbdda61/src%2Ftest%2Fui%2Fconsts%2Fcopy-intrinsic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcopy-intrinsic.stderr?ref=4d748624c09692c05528b7c166b2ccb9cdbdda61", "patch": "@@ -0,0 +1,37 @@\n+error: any use of this value will cause an error\n+  --> $DIR/copy-intrinsic.rs:16:5\n+   |\n+LL | / const COPY_OOB_1: () = unsafe {\n+LL | |     let mut x = 0i32;\n+LL | |     let dangle = (&mut x as *mut i32).wrapping_add(10);\n+LL | |     // Even if the first ptr is an int ptr and this is a ZST copy, we should detect dangling 2nd ptrs.\n+LL | |     ptr::copy_nonoverlapping(0x100 as *const i32, dangle, 0);\n+   | |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ memory access failed: pointer must be in-bounds at offset 40, but is outside bounds of alloc4 which has size 4\n+LL | |\n+LL | |\n+LL | | };\n+   | |__-\n+   |\n+   = note: `#[deny(const_err)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+\n+error: any use of this value will cause an error\n+  --> $DIR/copy-intrinsic.rs:24:5\n+   |\n+LL | / const COPY_OOB_2: () = unsafe {\n+LL | |     let x = 0i32;\n+LL | |     let dangle = (&x as *const i32).wrapping_add(10);\n+LL | |     // Even if the second ptr is an int ptr and this is a ZST copy, we should detect dangling 1st ptrs.\n+LL | |     ptr::copy_nonoverlapping(dangle, 0x100 as *mut i32, 0);\n+   | |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ memory access failed: pointer must be in-bounds at offset 40, but is outside bounds of alloc6 which has size 4\n+LL | |\n+LL | |\n+LL | | };\n+   | |__-\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+\n+error: aborting due to 2 previous errors\n+"}]}