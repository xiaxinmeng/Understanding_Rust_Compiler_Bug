{"sha": "9ebeb284b588c0549dca2169227cabb7417825be", "node_id": "C_kwDOAAsO6NoAKDllYmViMjg0YjU4OGMwNTQ5ZGNhMjE2OTIyN2NhYmI3NDE3ODI1YmU", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-04-24T12:13:41Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-04-24T12:13:41Z"}, "message": "Fix MSVC hang issue", "tree": {"sha": "e9d386cde4bb9436878acf82f8c18fcb05ede5dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9d386cde4bb9436878acf82f8c18fcb05ede5dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ebeb284b588c0549dca2169227cabb7417825be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ebeb284b588c0549dca2169227cabb7417825be", "html_url": "https://github.com/rust-lang/rust/commit/9ebeb284b588c0549dca2169227cabb7417825be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ebeb284b588c0549dca2169227cabb7417825be/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8693227e5e3c7cf76e4a8f5f04cb572cff083627", "url": "https://api.github.com/repos/rust-lang/rust/commits/8693227e5e3c7cf76e4a8f5f04cb572cff083627", "html_url": "https://github.com/rust-lang/rust/commit/8693227e5e3c7cf76e4a8f5f04cb572cff083627"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "2dc3f4e8f3a490778166d924a7d30eaf94f81709", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9ebeb284b588c0549dca2169227cabb7417825be/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ebeb284b588c0549dca2169227cabb7417825be/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=9ebeb284b588c0549dca2169227cabb7417825be", "patch": "@@ -1691,6 +1691,12 @@ fn add_linked_symbol_object(\n         return;\n     };\n \n+    // NOTE(nbdd0121): MSVC will hang if the input object file contains no sections,\n+    // so add an empty section.\n+    if file.format() == object::BinaryFormat::Coff {\n+        file.add_section(Vec::new(), \".text\".into(), object::SectionKind::Text);\n+    }\n+\n     for (sym, kind) in symbols.iter() {\n         file.add_symbol(object::write::Symbol {\n             name: sym.clone().into(),"}]}