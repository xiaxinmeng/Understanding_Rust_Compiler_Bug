{"sha": "5fc5490bc84d02408c8fbcc6bf8edd49af06c9a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmYzU0OTBiYzg0ZDAyNDA4YzhmYmNjNmJmOGVkZDQ5YWYwNmM5YTQ=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-10-03T16:59:23Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-10-04T16:06:51Z"}, "message": "Add trailing punctuation\n\nCo-authored-by: Ralf Jung <post@ralfj.de>", "tree": {"sha": "76ce3fedd59fff582997b51b814501775d89ab18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76ce3fedd59fff582997b51b814501775d89ab18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fc5490bc84d02408c8fbcc6bf8edd49af06c9a4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl958xsACgkQtAh+UQ6Y\nsWTZrQ/+JPUeZ61chfxs9xWwgNNSZ1nMHHSP1ExPUw0CVDM1WutJnImayScf1Itu\nLv2G40iWqU/Ixej+OBuUcEHKwTc082450ix1JPnSEMmLBo0Vz3RFXhap/PwD1ih/\nbGga1QvPSzQhd98qqsZE104BRNbMUV05rUPPSpZX02laEFUS0IJHLZpCJs91h+i/\ny+lgkFvu5yJauW0Y3K6t6queAdAxluiCqDDk2ZbGl+wyrH+SaTa/XeUaOCqPY4b1\nBN9cW1R2FvPIfOltRsjwX2v1LOi4A8OiWS3tMtVZC5U8XnbsvHaqa+DfzksMoV/x\nDnQhE6b2eq0levXSudsjfmIN5G38WIhAlXzLluPaynwSDiyTwP8mIRurWE0AWP8q\nas0cyrbmHcvXt99XBBGZR41smt8wP1B2SyTFOaLDAHZ3ZD8WTvmtAVZuZ1hZgkDs\nD4VfOKMUK6blfd0gl0nt9qFUhJE3faeOehS5dykjXf/ptoEYIq06CaL0GDjrnA9J\nCEpx0TflFkA6c8SjsfNeqCIM6pqkFToZ90HzYXnHE5f+VQTDXohKKWi/JojX2Bz1\nKu1PyLne5XmK4LOUdoKwMUaF1akI9tDmM7FUxLsaA527HAVyCZ9pMRv4klNMxhQo\njwlm0l5slQ1CakIRRQt6OvESfJud/PA3zupRNfqtuiEjEUoaEeA=\n=SaG+\n-----END PGP SIGNATURE-----", "payload": "tree 76ce3fedd59fff582997b51b814501775d89ab18\nparent 0e59b6f6731d80151dfcf3572e93ea52430d8d9c\nauthor Aaron Hill <aa1ronham@gmail.com> 1601744363 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1601827611 -0400\n\nAdd trailing punctuation\n\nCo-authored-by: Ralf Jung <post@ralfj.de>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fc5490bc84d02408c8fbcc6bf8edd49af06c9a4", "html_url": "https://github.com/rust-lang/rust/commit/5fc5490bc84d02408c8fbcc6bf8edd49af06c9a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fc5490bc84d02408c8fbcc6bf8edd49af06c9a4/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e59b6f6731d80151dfcf3572e93ea52430d8d9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e59b6f6731d80151dfcf3572e93ea52430d8d9c", "html_url": "https://github.com/rust-lang/rust/commit/0e59b6f6731d80151dfcf3572e93ea52430d8d9c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "7cccf900a1bf6b7a1eb6ac193b6f4b55f846be7e", "filename": "tests/run-pass/fs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5fc5490bc84d02408c8fbcc6bf8edd49af06c9a4/tests%2Frun-pass%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fc5490bc84d02408c8fbcc6bf8edd49af06c9a4/tests%2Frun-pass%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffs.rs?ref=5fc5490bc84d02408c8fbcc6bf8edd49af06c9a4", "patch": "@@ -231,16 +231,16 @@ fn test_symlink() {\n         let expected_path = path.as_os_str().as_bytes();\n \n         // Test that the expected string gets written to a buffer of proper\n-        // length, and that a trailing null byte is not written\n+        // length, and that a trailing null byte is not written.\n         let symlink_c_str = CString::new(symlink_path.as_os_str().as_bytes()).unwrap();\n         let symlink_c_ptr = symlink_c_str.as_ptr();\n \n         // Make the buf one byte larger than it needs to be,\n-        // and check that the last byte is not overwritten\n+        // and check that the last byte is not overwritten.\n         let mut large_buf = vec![0xFF; expected_path.len() + 1];\n         let res = unsafe { libc::readlink(symlink_c_ptr, large_buf.as_mut_ptr().cast(), large_buf.len()) };\n         assert_eq!(res, large_buf.len() as isize - 1);\n-        // Check that the resovled path was properly written into the buf\n+        // Check that the resovled path was properly written into the buf.\n         assert_eq!(&large_buf[..(large_buf.len() - 1)], expected_path);\n         assert_eq!(large_buf.last(), Some(&0xFF));\n "}]}