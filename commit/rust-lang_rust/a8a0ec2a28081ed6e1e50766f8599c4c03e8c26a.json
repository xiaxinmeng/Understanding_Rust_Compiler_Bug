{"sha": "a8a0ec2a28081ed6e1e50766f8599c4c03e8c26a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4YTBlYzJhMjgwODFlZDZlMWU1MDc2NmY4NTk5YzRjMDNlOGMyNmE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-09-24T12:01:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-24T12:01:52Z"}, "message": "Rollup merge of #44795 - KiChjang:mir-err-notes, r=arielb1\n\nMIR borrowck: Add span labels for E0381 and E0505\n\nCorresponds to `report_use_of_moved` and `report_move_out_when_borrowed`.\n\nPart of #44596.", "tree": {"sha": "e50609667b2c3e8916dbf15f7b3a451642d98932", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e50609667b2c3e8916dbf15f7b3a451642d98932"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8a0ec2a28081ed6e1e50766f8599c4c03e8c26a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8a0ec2a28081ed6e1e50766f8599c4c03e8c26a", "html_url": "https://github.com/rust-lang/rust/commit/a8a0ec2a28081ed6e1e50766f8599c4c03e8c26a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8a0ec2a28081ed6e1e50766f8599c4c03e8c26a/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e377081ca7f556bf000e34457ebac2b695abdd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e377081ca7f556bf000e34457ebac2b695abdd1", "html_url": "https://github.com/rust-lang/rust/commit/4e377081ca7f556bf000e34457ebac2b695abdd1"}, {"sha": "ed59a868dddbd56749c13bc7ddc7ea849d83e107", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed59a868dddbd56749c13bc7ddc7ea849d83e107", "html_url": "https://github.com/rust-lang/rust/commit/ed59a868dddbd56749c13bc7ddc7ea849d83e107"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "10825323e4129b9e00bc8e9c4c64a19252c3cd79", "filename": "src/librustc_mir/borrow_check.rs", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a8a0ec2a28081ed6e1e50766f8599c4c03e8c26a/src%2Flibrustc_mir%2Fborrow_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a0ec2a28081ed6e1e50766f8599c4c03e8c26a/src%2Flibrustc_mir%2Fborrow_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check.rs?ref=a8a0ec2a28081ed6e1e50766f8599c4c03e8c26a", "patch": "@@ -408,7 +408,7 @@ impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx>\n             self.each_borrow_involving_path(\n                 context, lvalue_span.0, flow_state, |this, _idx, borrow| {\n                     if !borrow.compatible_with(BorrowKind::Mut) {\n-                        this.report_move_out_while_borrowed(context, lvalue_span);\n+                        this.report_move_out_while_borrowed(context, lvalue_span, borrow);\n                         Control::Break\n                     } else {\n                         Control::Continue\n@@ -896,20 +896,28 @@ impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx>\n     fn report_use_of_moved(&mut self,\n                            _context: Context,\n                            (lvalue, span): (&Lvalue, Span)) {\n-        let mut err = self.tcx.cannot_act_on_uninitialized_variable(\n-            span, \"use\", &self.describe_lvalue(lvalue), Origin::Mir);\n-        // FIXME: add span_label for use of uninitialized variable\n-        err.emit();\n+        self.tcx.cannot_act_on_uninitialized_variable(span,\n+                                                      \"use\",\n+                                                      &self.describe_lvalue(lvalue),\n+                                                      Origin::Mir)\n+                .span_label(span, format!(\"use of possibly uninitialized `{}`\",\n+                                          self.describe_lvalue(lvalue)))\n+                .emit();\n     }\n \n     fn report_move_out_while_borrowed(&mut self,\n                                       _context: Context,\n-                                      (lvalue, span): (&Lvalue, Span)) {\n-        let mut err = self.tcx.cannot_move_when_borrowed(\n-            span, &self.describe_lvalue(lvalue), Origin::Mir);\n-        // FIXME 1: add span_label for \"borrow of `()` occurs here\"\n-        // FIXME 2: add span_label for \"move out of `{}` occurs here\"\n-        err.emit();\n+                                      (lvalue, span): (&Lvalue, Span),\n+                                      borrow: &BorrowData) {\n+        self.tcx.cannot_move_when_borrowed(span,\n+                                           &self.describe_lvalue(lvalue),\n+                                           Origin::Mir)\n+                .span_label(self.retrieve_borrow_span(borrow),\n+                            format!(\"borrow of `{}` occurs here\",\n+                                    self.describe_lvalue(&borrow.lvalue)))\n+                .span_label(span, format!(\"move out of `{}` occurs here\",\n+                                          self.describe_lvalue(lvalue)))\n+                .emit();\n     }\n \n     fn report_use_while_mutably_borrowed(&mut self,"}]}