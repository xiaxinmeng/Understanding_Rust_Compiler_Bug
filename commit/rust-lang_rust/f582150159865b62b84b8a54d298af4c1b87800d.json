{"sha": "f582150159865b62b84b8a54d298af4c1b87800d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ODIxNTAxNTk4NjViNjJiODRiOGE1NGQyOThhZjRjMWI4NzgwMGQ=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-08T18:50:35Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-08T19:08:01Z"}, "message": "Restore Decodable impl for ~[T]\n\nBring back the Decodable impl for ~[T], this time using FromVec. It's\nstill not recommended that anyone use this, but at least it's available\nif necessary.", "tree": {"sha": "2bfbe8acaee582f6966ed270461db3da000f69c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bfbe8acaee582f6966ed270461db3da000f69c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f582150159865b62b84b8a54d298af4c1b87800d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f582150159865b62b84b8a54d298af4c1b87800d", "html_url": "https://github.com/rust-lang/rust/commit/f582150159865b62b84b8a54d298af4c1b87800d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f582150159865b62b84b8a54d298af4c1b87800d/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fb8741b2ec6cf44256b7241123fcb81a4b21a68", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fb8741b2ec6cf44256b7241123fcb81a4b21a68", "html_url": "https://github.com/rust-lang/rust/commit/9fb8741b2ec6cf44256b7241123fcb81a4b21a68"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "7914dd8c7d2aaf1269fc8288ae86e2f0aa724ba8", "filename": "src/libserialize/serialize.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f582150159865b62b84b8a54d298af4c1b87800d/src%2Flibserialize%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f582150159865b62b84b8a54d298af4c1b87800d/src%2Flibserialize%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fserialize.rs?ref=f582150159865b62b84b8a54d298af4c1b87800d", "patch": "@@ -451,6 +451,21 @@ impl<E, S:Encoder<E>,T:Encodable<S, E>> Encodable<S, E> for ~[T] {\n     }\n }\n \n+impl<E, D:Decoder<E>,T:Decodable<D, E>> Decodable<D, E> for ~[T] {\n+    fn decode(d: &mut D) -> Result<~[T], E> {\n+        use std::vec::FromVec;\n+\n+        d.read_seq(|d, len| {\n+            let mut v: Vec<T> = Vec::with_capacity(len);\n+            for i in range(0, len) {\n+                v.push(try!(d.read_seq_elt(i, |d| Decodable::decode(d))));\n+            }\n+            let k: ~[T] = FromVec::from_vec(v);\n+            Ok(k)\n+        })\n+    }\n+}\n+\n impl<E, S:Encoder<E>,T:Encodable<S, E>> Encodable<S, E> for Vec<T> {\n     fn encode(&self, s: &mut S) -> Result<(), E> {\n         s.emit_seq(self.len(), |s| {"}]}