{"sha": "a655438988c5f7d100a5423752b7ae0287d582fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2NTU0Mzg5ODhjNWY3ZDEwMGE1NDIzNzUyYjdhZTAyODdkNTgyZmQ=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-06-12T07:46:56Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-07-07T19:23:28Z"}, "message": "tests: Update and add tests for RFC 2203.", "tree": {"sha": "1f72516322ce74aa3e37b0302aabbfc4596d8153", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f72516322ce74aa3e37b0302aabbfc4596d8153"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a655438988c5f7d100a5423752b7ae0287d582fd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl0iRrEACgkQJZLnbIc4\nH9nRXQ/+IaKeP5FMyo7Y8Jd8oV+GJT2HJgFpSfDeuXv3kEhXGLFLYcN0RdCKlw7O\nHTruWIPAX7ly5+jPlIX40+tSegPPziiTLU5Mr1GNKuIqT59ov9S01rw6qzV/5YDh\n7KWDzB/77WZ2Tk/6SY7Fr+E9bJdME2Xs/RCkoDd3qIhDRdJwChaNEQeatKnhSqNS\nqY+ypt6OrB9aMRFTvDct5rd3MBZVmwJhO7cvxnk1jaobC08PdPN01gG3MHD7XUaD\n6lUmuaOAeeTz3924e0RrytV+q1t/fkjo15ssHknEVBz6HVy2ZNx8tOrbkZ9wsDTL\nIQ6bFtV2DXKCfIP6+MIzBHEMkdw2Saaram+Mq7gIier7F3Ow/EyO1+VYu8eYhtyn\nymfylsT3zdVA4AFdo1iIfVdzWzm3rXNUqUw3e5eb6bQxoYkAeAuUK9w/Ut8V9DiN\nZiFn8pWux8I+Za6jLrpkS+xDEvoRLOeje636XekwmwF5TgsJEjvkCsYPW+hgiDqE\nb5+14SkZYTCggxQlAOvT+PMNtiC1mRH6oABSkZqtNtYSaToctbgEENCurujbZDcG\nsWuP0t+wWcKS11BWMjrwSym8uP0XNH77I7MhThG91moi90cNaYftBxbZRdXbKHyr\nTfuuoRENjo6awk+OFZuOpq8m+7RmrZ3OzwqhEkEchoOmlntAtMA=\n=r/kq\n-----END PGP SIGNATURE-----", "payload": "tree 1f72516322ce74aa3e37b0302aabbfc4596d8153\nparent 813c994a754b963660b2030699ee1b77c5886ed5\nauthor David Wood <david@davidtw.co> 1560325616 +0100\ncommitter David Wood <david@davidtw.co> 1562527408 +0100\n\ntests: Update and add tests for RFC 2203.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a655438988c5f7d100a5423752b7ae0287d582fd", "html_url": "https://github.com/rust-lang/rust/commit/a655438988c5f7d100a5423752b7ae0287d582fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a655438988c5f7d100a5423752b7ae0287d582fd/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "813c994a754b963660b2030699ee1b77c5886ed5", "url": "https://api.github.com/repos/rust-lang/rust/commits/813c994a754b963660b2030699ee1b77c5886ed5", "html_url": "https://github.com/rust-lang/rust/commit/813c994a754b963660b2030699ee1b77c5886ed5"}], "stats": {"total": 128, "additions": 96, "deletions": 32}, "files": [{"sha": "3b7d7e5b51a2251eca1ba25559c92688a5dac227", "filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/migrate-fail.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fmigrate-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fmigrate-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fmigrate-fail.rs?ref=a655438988c5f7d100a5423752b7ae0287d582fd", "patch": "@@ -0,0 +1,26 @@\n+// ignore-tidy-linelength\n+// ignore-compare-mode-nll\n+// compile-flags: -Z borrowck=migrate\n+#![feature(const_in_array_repeat_expressions)]\n+#![allow(warnings)]\n+\n+// Some type that is not copyable.\n+struct Bar;\n+\n+mod non_constants {\n+    use Bar;\n+\n+    fn no_impl_copy_empty_value_multiple_elements() {\n+        let x = None;\n+        let arr: [Option<Bar>; 2] = [x; 2];\n+        //~^ ERROR the trait bound `std::option::Option<Bar>: std::marker::Copy` is not satisfied [E0277]\n+    }\n+\n+    fn no_impl_copy_value_multiple_elements() {\n+        let x = Some(Bar);\n+        let arr: [Option<Bar>; 2] = [x; 2];\n+        //~^ ERROR the trait bound `std::option::Option<Bar>: std::marker::Copy` is not satisfied [E0277]\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "aad6763f15094013aa157aea4a2c5d1ad4e6728b", "filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/migrate-fail.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fmigrate-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fmigrate-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fmigrate-fail.stderr?ref=a655438988c5f7d100a5423752b7ae0287d582fd", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `std::option::Option<Bar>: std::marker::Copy` is not satisfied\n-  --> $DIR/nll-borrowck.rs:87:37\n+  --> $DIR/migrate-fail.rs:15:37\n    |\n LL |         let arr: [Option<Bar>; 2] = [x; 2];\n    |                                     ^^^^^^ the trait `std::marker::Copy` is not implemented for `std::option::Option<Bar>`\n@@ -9,7 +9,7 @@ LL |         let arr: [Option<Bar>; 2] = [x; 2];\n    = note: the `Copy` trait is required because the repeated element will be copied\n \n error[E0277]: the trait bound `std::option::Option<Bar>: std::marker::Copy` is not satisfied\n-  --> $DIR/nll-borrowck.rs:103:37\n+  --> $DIR/migrate-fail.rs:21:37\n    |\n LL |         let arr: [Option<Bar>; 2] = [x; 2];\n    |                                     ^^^^^^ the trait `std::marker::Copy` is not implemented for `std::option::Option<Bar>`", "previous_filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/nll-borrowck.stderr"}, {"sha": "bfa8ebcfdd32af3cffa16437284d453f6c7206c7", "filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/migrate-pass.rs", "status": "renamed", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fmigrate-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fmigrate-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fmigrate-pass.rs?ref=a655438988c5f7d100a5423752b7ae0287d582fd", "patch": "@@ -1,6 +1,7 @@\n-// ignore-compile-mode-nll\n+// check-pass\n // compile-flags: -Z borrowck=migrate\n-#![feature(constants_in_array_repeat_expressions)]\n+// ignore-compare-mode-nll\n+#![feature(const_in_array_repeat_expressions)]\n #![allow(warnings)]\n \n // Some type that is not copyable.\n@@ -83,12 +84,6 @@ mod non_constants {\n         let arr: [Option<Bar>; 1] = [x; 1];\n     }\n \n-    fn no_impl_copy_empty_value_multiple_elements() {\n-        let x = None;\n-        let arr: [Option<Bar>; 2] = [x; 2];\n-        //~^ ERROR the trait bound `std::option::Option<Bar>: std::marker::Copy` is not satisfied [E0277]\n-    }\n-\n     fn no_impl_copy_value_no_elements() {\n         let x = Some(Bar);\n         let arr: [Option<Bar>; 0] = [x; 0];\n@@ -99,12 +94,6 @@ mod non_constants {\n         let arr: [Option<Bar>; 1] = [x; 1];\n     }\n \n-    fn no_impl_copy_value_multiple_elements() {\n-        let x = Some(Bar);\n-        let arr: [Option<Bar>; 2] = [x; 2];\n-        //~^ ERROR the trait bound `std::option::Option<Bar>: std::marker::Copy` is not satisfied [E0277]\n-    }\n-\n     fn impl_copy_empty_value_no_elements() {\n         let x: Option<u32> = None;\n         let arr: [Option<u32>; 0] = [x; 0];", "previous_filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/migrate-borrowck.rs"}, {"sha": "dc1193a2fe8f3820ba8c000d6fa4e737ad1179b5", "filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/nll-fail.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fnll-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fnll-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fnll-fail.rs?ref=a655438988c5f7d100a5423752b7ae0287d582fd", "patch": "@@ -0,0 +1,25 @@\n+// ignore-tidy-linelength\n+// ignore-compare-mode-nll\n+#![feature(const_in_array_repeat_expressions, nll)]\n+#![allow(warnings)]\n+\n+// Some type that is not copyable.\n+struct Bar;\n+\n+mod non_constants {\n+    use Bar;\n+\n+    fn no_impl_copy_empty_value_multiple_elements() {\n+        let x = None;\n+        let arr: [Option<Bar>; 2] = [x; 2];\n+        //~^ ERROR the trait bound `std::option::Option<Bar>: std::marker::Copy` is not satisfied [E0277]\n+    }\n+\n+    fn no_impl_copy_value_multiple_elements() {\n+        let x = Some(Bar);\n+        let arr: [Option<Bar>; 2] = [x; 2];\n+        //~^ ERROR the trait bound `std::option::Option<Bar>: std::marker::Copy` is not satisfied [E0277]\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "fd32484ff92c106c4c256c1349e5e24378a09a35", "filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/nll-fail.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fnll-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fnll-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fnll-fail.stderr?ref=a655438988c5f7d100a5423752b7ae0287d582fd", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `std::option::Option<Bar>: std::marker::Copy` is not satisfied\n-  --> $DIR/migrate-borrowck.rs:88:37\n+  --> $DIR/nll-fail.rs:14:37\n    |\n LL |         let arr: [Option<Bar>; 2] = [x; 2];\n    |                                     ^^^^^^ the trait `std::marker::Copy` is not implemented for `std::option::Option<Bar>`\n@@ -9,7 +9,7 @@ LL |         let arr: [Option<Bar>; 2] = [x; 2];\n    = note: the `Copy` trait is required because the repeated element will be copied\n \n error[E0277]: the trait bound `std::option::Option<Bar>: std::marker::Copy` is not satisfied\n-  --> $DIR/migrate-borrowck.rs:104:37\n+  --> $DIR/nll-fail.rs:20:37\n    |\n LL |         let arr: [Option<Bar>; 2] = [x; 2];\n    |                                     ^^^^^^ the trait `std::marker::Copy` is not implemented for `std::option::Option<Bar>`", "previous_filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/migrate-borrowck.stderr"}, {"sha": "a304f877ab7adc13ddcadf7b6ac812df7b7d33d2", "filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/nll-pass.rs", "status": "renamed", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fnll-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fnll-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fnll-pass.rs?ref=a655438988c5f7d100a5423752b7ae0287d582fd", "patch": "@@ -1,6 +1,7 @@\n-// ignore-compile-mode-nll\n+// check-pass\n+// ignore-compare-mode-nll\n #![allow(warnings)]\n-#![feature(constants_in_array_repeat_expressions, nll)]\n+#![feature(const_in_array_repeat_expressions, nll)]\n \n // Some type that is not copyable.\n struct Bar;\n@@ -82,12 +83,6 @@ mod non_constants {\n         let arr: [Option<Bar>; 1] = [x; 1];\n     }\n \n-    fn no_impl_copy_empty_value_multiple_elements() {\n-        let x = None;\n-        let arr: [Option<Bar>; 2] = [x; 2];\n-        //~^ ERROR the trait bound `std::option::Option<Bar>: std::marker::Copy` is not satisfied [E0277]\n-    }\n-\n     fn no_impl_copy_value_no_elements() {\n         let x = Some(Bar);\n         let arr: [Option<Bar>; 0] = [x; 0];\n@@ -98,12 +93,6 @@ mod non_constants {\n         let arr: [Option<Bar>; 1] = [x; 1];\n     }\n \n-    fn no_impl_copy_value_multiple_elements() {\n-        let x = Some(Bar);\n-        let arr: [Option<Bar>; 2] = [x; 2];\n-        //~^ ERROR the trait bound `std::option::Option<Bar>: std::marker::Copy` is not satisfied [E0277]\n-    }\n-\n     fn impl_copy_empty_value_no_elements() {\n         let x: Option<u32> = None;\n         let arr: [Option<u32>; 0] = [x; 0];", "previous_filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/nll-borrowck.rs"}, {"sha": "27bf5dabf566b503719040e54dd4c5bba3883da0", "filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/run-pass.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Frun-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Frun-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Frun-pass.rs?ref=a655438988c5f7d100a5423752b7ae0287d582fd", "patch": "@@ -0,0 +1,12 @@\n+// run-pass\n+#![feature(const_in_array_repeat_expressions)]\n+\n+#[derive(Debug, Eq, PartialEq)]\n+struct Bar;\n+\n+fn main() {\n+    const FOO: Option<Bar> = None;\n+    const ARR: [Option<Bar>; 2] = [FOO; 2];\n+\n+    assert_eq!(ARR, [None::<Bar>, None::<Bar>]);\n+}"}, {"sha": "35484d265bb5eea102dec3cd643216cbdc3db91a", "filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/trait-error.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Ftrait-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Ftrait-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Ftrait-error.rs?ref=a655438988c5f7d100a5423752b7ae0287d582fd", "patch": "@@ -0,0 +1,10 @@\n+// ignore-tidy-linelength\n+#![feature(const_in_array_repeat_expressions)]\n+\n+#[derive(Copy, Clone)]\n+struct Foo<T>(T);\n+\n+fn main() {\n+    [Foo(String::new()); 4];\n+    //~^ ERROR the trait bound `Foo<std::string::String>: std::marker::Copy` is not satisfied [E0277]\n+}"}, {"sha": "186909e469e05ae6f12e93c3a5cdac13ee03ab93", "filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/trait-error.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Ftrait-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a655438988c5f7d100a5423752b7ae0287d582fd/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Ftrait-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Ftrait-error.stderr?ref=a655438988c5f7d100a5423752b7ae0287d582fd", "patch": "@@ -0,0 +1,13 @@\n+error[E0277]: the trait bound `Foo<std::string::String>: std::marker::Copy` is not satisfied\n+  --> $DIR/trait-error.rs:8:5\n+   |\n+LL |     [Foo(String::new()); 4];\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::marker::Copy` is not implemented for `Foo<std::string::String>`\n+   |\n+   = help: the following implementations were found:\n+             <Foo<T> as std::marker::Copy>\n+   = note: the `Copy` trait is required because the repeated element will be copied\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}