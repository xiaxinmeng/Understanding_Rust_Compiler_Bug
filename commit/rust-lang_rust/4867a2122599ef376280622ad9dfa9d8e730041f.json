{"sha": "4867a2122599ef376280622ad9dfa9d8e730041f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NjdhMjEyMjU5OWVmMzc2MjgwNjIyYWQ5ZGZhOWQ4ZTczMDA0MWY=", "commit": {"author": {"name": "Yoh Deadfall", "email": "yoh.deadfall@hotmail.com", "date": "2021-07-05T11:30:15Z"}, "committer": {"name": "Yoh Deadfall", "email": "yoh.deadfall@hotmail.com", "date": "2021-07-06T07:37:49Z"}, "message": "Stabilize Vec<T>::shrink_to", "tree": {"sha": "08e3ed6b4049fc3c11c7198fd9ae0f56de5884b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08e3ed6b4049fc3c11c7198fd9ae0f56de5884b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4867a2122599ef376280622ad9dfa9d8e730041f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4867a2122599ef376280622ad9dfa9d8e730041f", "html_url": "https://github.com/rust-lang/rust/commit/4867a2122599ef376280622ad9dfa9d8e730041f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4867a2122599ef376280622ad9dfa9d8e730041f/comments", "author": {"login": "YohDeadfall", "id": 10694013, "node_id": "MDQ6VXNlcjEwNjk0MDEz", "avatar_url": "https://avatars.githubusercontent.com/u/10694013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YohDeadfall", "html_url": "https://github.com/YohDeadfall", "followers_url": "https://api.github.com/users/YohDeadfall/followers", "following_url": "https://api.github.com/users/YohDeadfall/following{/other_user}", "gists_url": "https://api.github.com/users/YohDeadfall/gists{/gist_id}", "starred_url": "https://api.github.com/users/YohDeadfall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YohDeadfall/subscriptions", "organizations_url": "https://api.github.com/users/YohDeadfall/orgs", "repos_url": "https://api.github.com/users/YohDeadfall/repos", "events_url": "https://api.github.com/users/YohDeadfall/events{/privacy}", "received_events_url": "https://api.github.com/users/YohDeadfall/received_events", "type": "User", "site_admin": false}, "committer": {"login": "YohDeadfall", "id": 10694013, "node_id": "MDQ6VXNlcjEwNjk0MDEz", "avatar_url": "https://avatars.githubusercontent.com/u/10694013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YohDeadfall", "html_url": "https://github.com/YohDeadfall", "followers_url": "https://api.github.com/users/YohDeadfall/followers", "following_url": "https://api.github.com/users/YohDeadfall/following{/other_user}", "gists_url": "https://api.github.com/users/YohDeadfall/gists{/gist_id}", "starred_url": "https://api.github.com/users/YohDeadfall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YohDeadfall/subscriptions", "organizations_url": "https://api.github.com/users/YohDeadfall/orgs", "repos_url": "https://api.github.com/users/YohDeadfall/repos", "events_url": "https://api.github.com/users/YohDeadfall/events{/privacy}", "received_events_url": "https://api.github.com/users/YohDeadfall/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a27044f42ace9eb652781b53f598e25d4e7e918", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a27044f42ace9eb652781b53f598e25d4e7e918", "html_url": "https://github.com/rust-lang/rust/commit/9a27044f42ace9eb652781b53f598e25d4e7e918"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "956e34550938de7ee21ca0a05b7b400f025532aa", "filename": "library/alloc/src/collections/binary_heap.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs?ref=4867a2122599ef376280622ad9dfa9d8e730041f", "patch": "@@ -965,7 +965,6 @@ impl<T> BinaryHeap<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(shrink_to)]\n     /// use std::collections::BinaryHeap;\n     /// let mut heap: BinaryHeap<i32> = BinaryHeap::with_capacity(100);\n     ///\n@@ -974,7 +973,7 @@ impl<T> BinaryHeap<T> {\n     /// assert!(heap.capacity() >= 10);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue = \"56431\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.55.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.data.shrink_to(min_capacity)\n     }"}, {"sha": "a540a3b40a6c50f747073ef0803343e498bbc889", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=4867a2122599ef376280622ad9dfa9d8e730041f", "patch": "@@ -766,7 +766,6 @@ impl<T> VecDeque<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(shrink_to)]\n     /// use std::collections::VecDeque;\n     ///\n     /// let mut buf = VecDeque::with_capacity(15);\n@@ -777,7 +776,7 @@ impl<T> VecDeque<T> {\n     /// buf.shrink_to(0);\n     /// assert!(buf.capacity() >= 4);\n     /// ```\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue = \"56431\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.55.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         let min_capacity = cmp::min(min_capacity, self.capacity());\n         // We don't have to worry about an overflow as neither `self.len()` nor `self.capacity()`"}, {"sha": "f3f589a433ad7c00100befc02f3de347032fa006", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=4867a2122599ef376280622ad9dfa9d8e730041f", "patch": "@@ -1098,7 +1098,6 @@ impl String {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(shrink_to)]\n     /// let mut s = String::from(\"foo\");\n     ///\n     /// s.reserve(100);\n@@ -1111,7 +1110,7 @@ impl String {\n     /// ```\n     #[cfg(not(no_global_oom_handling))]\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue = \"56431\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.55.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.vec.shrink_to(min_capacity)\n     }"}, {"sha": "0e16a46fa2c61f9bc0f8211ee52f88c96dfd0199", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=4867a2122599ef376280622ad9dfa9d8e730041f", "patch": "@@ -942,7 +942,6 @@ impl<T, A: Allocator> Vec<T, A> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(shrink_to)]\n     /// let mut vec = Vec::with_capacity(10);\n     /// vec.extend([1, 2, 3]);\n     /// assert_eq!(vec.capacity(), 10);\n@@ -952,7 +951,7 @@ impl<T, A: Allocator> Vec<T, A> {\n     /// assert!(vec.capacity() >= 3);\n     /// ```\n     #[cfg(not(no_global_oom_handling))]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue = \"56431\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.55.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         if self.capacity() > min_capacity {\n             self.buf.shrink_to_fit(cmp::max(self.len, min_capacity));"}, {"sha": "bc1a4862c7a977aaac04475cb3abdbea1c97ced3", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=4867a2122599ef376280622ad9dfa9d8e730041f", "patch": "@@ -665,7 +665,6 @@ where\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(shrink_to)]\n     /// use std::collections::HashMap;\n     ///\n     /// let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);\n@@ -678,7 +677,7 @@ where\n     /// assert!(map.capacity() >= 2);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue = \"56431\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.55.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.base.shrink_to(min_capacity);\n     }"}, {"sha": "d65a7e90dcf3d19e114cf134c3e344f9599fb1c1", "filename": "library/std/src/collections/hash/set.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs?ref=4867a2122599ef376280622ad9dfa9d8e730041f", "patch": "@@ -466,7 +466,6 @@ where\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(shrink_to)]\n     /// use std::collections::HashSet;\n     ///\n     /// let mut set = HashSet::with_capacity(100);\n@@ -479,7 +478,7 @@ where\n     /// assert!(set.capacity() >= 2);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue = \"56431\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.55.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.base.shrink_to(min_capacity)\n     }"}, {"sha": "00fe055198d12e5e361491e458fbc08d91c9ff58", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=4867a2122599ef376280622ad9dfa9d8e730041f", "patch": "@@ -319,7 +319,6 @@ impl OsString {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(shrink_to)]\n     /// use std::ffi::OsString;\n     ///\n     /// let mut s = OsString::from(\"foo\");\n@@ -333,7 +332,7 @@ impl OsString {\n     /// assert!(s.capacity() >= 3);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue = \"56431\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.55.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.inner.shrink_to(min_capacity)\n     }"}, {"sha": "d21164752da0f6dbf9caf7fbcbf51a6cc68ab076", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=4867a2122599ef376280622ad9dfa9d8e730041f", "patch": "@@ -306,7 +306,6 @@\n #![feature(ready_macro)]\n #![feature(rustc_attrs)]\n #![feature(rustc_private)]\n-#![feature(shrink_to)]\n #![feature(slice_concat_ext)]\n #![feature(slice_internals)]\n #![feature(slice_ptr_get)]"}, {"sha": "7d554c47702b9c4865a4a3595eac9f350e269c0c", "filename": "library/std/src/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4867a2122599ef376280622ad9dfa9d8e730041f/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=4867a2122599ef376280622ad9dfa9d8e730041f", "patch": "@@ -1398,7 +1398,7 @@ impl PathBuf {\n     /// Invokes [`shrink_to`] on the underlying instance of [`OsString`].\n     ///\n     /// [`shrink_to`]: OsString::shrink_to\n-    #[unstable(feature = \"shrink_to\", issue = \"56431\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.55.0\")]\n     #[inline]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.inner.shrink_to(min_capacity)"}]}