{"sha": "d4043a8dbafe6de9517dee760967dd0218bf28b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0MDQzYThkYmFmZTZkZTk1MTdkZWU3NjA5NjdkZDAyMThiZjI4Yjc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-13T06:45:52Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-13T06:45:52Z"}, "message": "only def-with-body remains", "tree": {"sha": "be82d35def6c326eca5f09e51279c972a550bf64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be82d35def6c326eca5f09e51279c972a550bf64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4043a8dbafe6de9517dee760967dd0218bf28b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4043a8dbafe6de9517dee760967dd0218bf28b7", "html_url": "https://github.com/rust-lang/rust/commit/d4043a8dbafe6de9517dee760967dd0218bf28b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4043a8dbafe6de9517dee760967dd0218bf28b7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d88269bc2d36d163eef5173912c40d5b6eee3847", "url": "https://api.github.com/repos/rust-lang/rust/commits/d88269bc2d36d163eef5173912c40d5b6eee3847", "html_url": "https://github.com/rust-lang/rust/commit/d88269bc2d36d163eef5173912c40d5b6eee3847"}], "stats": {"total": 16, "additions": 3, "deletions": 13}, "files": [{"sha": "67bf2de895f8344252ac2acffbe239ef206cc2d2", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d4043a8dbafe6de9517dee760967dd0218bf28b7/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4043a8dbafe6de9517dee760967dd0218bf28b7/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=d4043a8dbafe6de9517dee760967dd0218bf28b7", "patch": "@@ -12,6 +12,7 @@ use ra_syntax::{\n     SyntaxNode, AstPtr, TextUnit,\n     ast::{self, AstNode, NameOwner},\n     algo::find_node_at_offset,\n+    SyntaxKind::*,\n };\n \n use crate::{\n@@ -90,17 +91,6 @@ fn module_from_source(\n     )\n }\n \n-fn function_from_source(\n-    db: &impl HirDatabase,\n-    file_id: FileId,\n-    fn_def: &ast::FnDef,\n-) -> Option<Function> {\n-    let module = module_from_child_node(db, file_id, fn_def.syntax())?;\n-    let file_id = file_id.into();\n-    let ctx = LocationCtx::new(db, module, file_id);\n-    Some(Function { id: ctx.to_def(fn_def) })\n-}\n-\n pub fn struct_from_module(\n     db: &impl HirDatabase,\n     module: Module,\n@@ -168,8 +158,8 @@ fn try_get_resolver_for_node(\n     } else if let Some(e) = ast::EnumDef::cast(node) {\n         let module = module_from_child_node(db, file_id, e.syntax())?;\n         Some(enum_from_module(db, module, e).resolver(db))\n-    } else if let Some(f) = ast::FnDef::cast(node) {\n-        function_from_source(db, file_id, f).map(|f| f.resolver(db))\n+    } else if node.kind() == FN_DEF || node.kind() == CONST_DEF || node.kind() == STATIC_DEF {\n+        Some(def_with_body_from_child_node(db, file_id, node)?.resolver(db))\n     } else {\n         // FIXME add missing cases\n         None"}]}