{"sha": "d55fa2a9a3aa00a723f224eda764580a0492abd9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1NWZhMmE5YTNhYTAwYTcyM2YyMjRlZGE3NjQ1ODBhMDQ5MmFiZDk=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-05T02:05:16Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-05T02:05:32Z"}, "message": "Add #env syntax extension for plucking strings out of the compilation environment.", "tree": {"sha": "a4c337c74adfa68fb33547e19550b2b24a86c801", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4c337c74adfa68fb33547e19550b2b24a86c801"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d55fa2a9a3aa00a723f224eda764580a0492abd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d55fa2a9a3aa00a723f224eda764580a0492abd9", "html_url": "https://github.com/rust-lang/rust/commit/d55fa2a9a3aa00a723f224eda764580a0492abd9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d55fa2a9a3aa00a723f224eda764580a0492abd9/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7db03272592f4eaf433699786a93e02977d3264", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7db03272592f4eaf433699786a93e02977d3264", "html_url": "https://github.com/rust-lang/rust/commit/a7db03272592f4eaf433699786a93e02977d3264"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "6dc9c5ec021f5d70720d2f5d9d21c9a5ca6275f3", "filename": "src/comp/front/extenv.rs", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/d55fa2a9a3aa00a723f224eda764580a0492abd9/src%2Fcomp%2Ffront%2Fextenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d55fa2a9a3aa00a723f224eda764580a0492abd9/src%2Fcomp%2Ffront%2Fextenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fextenv.rs?ref=d55fa2a9a3aa00a723f224eda764580a0492abd9", "patch": "@@ -0,0 +1,68 @@\n+/*\n+ * The compiler code necessary to support the #env extension.  Eventually this\n+ * should all get sucked into either the compiler syntax extension plugin\n+ * interface.\n+ */\n+\n+import util.common;\n+\n+import std._str;\n+import std._vec;\n+import std.option;\n+import std.GenericOS;\n+\n+export expand_syntax_ext;\n+\n+// FIXME: Need to thread parser through here to handle errors correctly\n+fn expand_syntax_ext(parser.parser p,\n+                     common.span sp,\n+                     vec[@ast.expr] args,\n+                     option.t[str] body) -> @ast.expr {\n+\n+    if (_vec.len[@ast.expr](args) != 1u) {\n+        p.err(\"malformed #env call\");\n+    }\n+\n+    auto var = expr_to_str(p, args.(0));\n+    auto val = GenericOS.getenv(var);\n+    ret make_new_str(sp, val);\n+}\n+\n+// FIXME: duplicate code copied from extfmt.\n+\n+fn expr_to_str(parser.parser p,\n+               @ast.expr expr) -> str {\n+    alt (expr.node) {\n+        case (ast.expr_lit(?l, _)) {\n+            alt (l.node) {\n+                case (ast.lit_str(?s)) {\n+                    ret s;\n+                }\n+            }\n+        }\n+    }\n+    p.err(\"malformed #env call\");\n+    fail;\n+}\n+\n+fn make_new_lit(common.span sp, ast.lit_ lit) -> @ast.expr {\n+    auto sp_lit = @rec(node=lit, span=sp);\n+    auto expr = ast.expr_lit(sp_lit, ast.ann_none);\n+    ret @rec(node=expr, span=sp);\n+}\n+\n+fn make_new_str(common.span sp, str s) -> @ast.expr {\n+    auto lit = ast.lit_str(s);\n+    ret make_new_lit(sp, lit);\n+}\n+\n+//\n+// Local Variables:\n+// mode: rust\n+// fill-column: 78;\n+// indent-tabs-mode: nil\n+// c-basic-offset: 4\n+// buffer-file-coding-system: utf-8-unix\n+// compile-command: \"make -k -C $RBUILD 2>&1 | sed -e 's/\\\\/x\\\\//x:\\\\//g'\";\n+// End:\n+//"}, {"sha": "a7e355af5918eb71d8dd6189cb65533e88ad663b", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d55fa2a9a3aa00a723f224eda764580a0492abd9/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d55fa2a9a3aa00a723f224eda764580a0492abd9/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=d55fa2a9a3aa00a723f224eda764580a0492abd9", "patch": "@@ -948,6 +948,13 @@ fn expand_syntax_ext(parser p, ast.span sp,\n                                     expanded,\n                                     ast.ann_none);\n \n+        ret newexpr;\n+    } else if (_str.eq(extname, \"env\")) {\n+        auto expanded = extenv.expand_syntax_ext(p, sp, args, body);\n+        auto newexpr = ast.expr_ext(path, args, body,\n+                                    expanded,\n+                                    ast.ann_none);\n+\n         ret newexpr;\n     } else {\n         p.err(\"unknown syntax extension\");"}, {"sha": "3074a84d07419dceed7c5d4cfae029d889a6a46a", "filename": "src/comp/rustc.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d55fa2a9a3aa00a723f224eda764580a0492abd9/src%2Fcomp%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/d55fa2a9a3aa00a723f224eda764580a0492abd9/src%2Fcomp%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Frustc.rc?ref=d55fa2a9a3aa00a723f224eda764580a0492abd9", "patch": "@@ -24,6 +24,7 @@ mod front {\n     mod ast;\n     mod creader;\n     mod extfmt;\n+    mod extenv;\n     mod codemap;\n     mod lexer;\n     mod parser;"}]}