{"sha": "a0d8873097a587163887e701c08373a1571f8973", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwZDg4NzMwOTdhNTg3MTYzODg3ZTcwMWMwODM3M2ExNTcxZjg5NzM=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2013-05-02T17:36:24Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2013-05-02T17:36:24Z"}, "message": "More accurate spans", "tree": {"sha": "5b28b1ec6b6f61824bed81ed804a2838843476ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b28b1ec6b6f61824bed81ed804a2838843476ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0d8873097a587163887e701c08373a1571f8973", "comment_count": 8, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0d8873097a587163887e701c08373a1571f8973", "html_url": "https://github.com/rust-lang/rust/commit/a0d8873097a587163887e701c08373a1571f8973", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0d8873097a587163887e701c08373a1571f8973/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b42ea7f9ef06be9a623a8a007ae3aecbb7d961a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b42ea7f9ef06be9a623a8a007ae3aecbb7d961a3", "html_url": "https://github.com/rust-lang/rust/commit/b42ea7f9ef06be9a623a8a007ae3aecbb7d961a3"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "93584b00d39e638622927c91c8d6fe320df04b21", "filename": "src/libsyntax/parse/attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0d8873097a587163887e701c08373a1571f8973/src%2Flibsyntax%2Fparse%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d8873097a587163887e701c08373a1571f8973/src%2Flibsyntax%2Fparse%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fattr.rs?ref=a0d8873097a587163887e701c08373a1571f8973", "patch": "@@ -156,7 +156,7 @@ impl parser_attr for Parser {\n                 @spanned(lo, hi, ast::meta_list(name, inner_items))\n             }\n             _ => {\n-                let hi = self.span.hi;\n+                let hi = self.last_span.hi;\n                 @spanned(lo, hi, ast::meta_word(name))\n             }\n         }"}, {"sha": "1df6860fedee97c74de825b671458ef5f55b6dcd", "filename": "src/libsyntax/parse/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0d8873097a587163887e701c08373a1571f8973/src%2Flibsyntax%2Fparse%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d8873097a587163887e701c08373a1571f8973/src%2Flibsyntax%2Fparse%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fcommon.rs?ref=a0d8873097a587163887e701c08373a1571f8973", "patch": "@@ -122,7 +122,7 @@ pub impl Parser {\n     fn parse_path_list_ident(&self) -> ast::path_list_ident {\n         let lo = self.span.lo;\n         let ident = self.parse_ident();\n-        let hi = self.span.hi;\n+        let hi = self.last_span.hi;\n         spanned(lo, hi, ast::path_list_ident_ { name: ident,\n                                                 id: self.get_id() })\n     }"}, {"sha": "f0e9634d214d6de7597dcc3fa2ee9c4b9a8b8034", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a0d8873097a587163887e701c08373a1571f8973/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d8873097a587163887e701c08373a1571f8973/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=a0d8873097a587163887e701c08373a1571f8973", "patch": "@@ -2445,7 +2445,7 @@ pub impl Parser {\n                     }\n                 }\n             }\n-            hi = self.span.hi;\n+            hi = self.last_span.hi;\n           }\n         }\n         @ast::pat { id: self.get_id(), node: pat, span: mk_sp(lo, hi) }\n@@ -4311,7 +4311,7 @@ pub impl Parser {\n                                 rp: None,\n                                 types: ~[] };\n         return @spanned(lo,\n-                        self.span.hi,\n+                        self.last_span.hi,\n                         view_path_simple(last, path, self.get_id()));\n     }\n "}]}