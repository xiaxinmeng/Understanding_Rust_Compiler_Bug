{"sha": "9e22b844ddf503adba315aac4d05909bd947dafe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMjJiODQ0ZGRmNTAzYWRiYTMxNWFhYzRkMDU5MDliZDk0N2RhZmU=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2021-05-06T11:36:07Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-05-24T15:07:48Z"}, "message": "remove cfg(bootstrap)", "tree": {"sha": "bef5ba979794cdadc492bae0a83439a697716861", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bef5ba979794cdadc492bae0a83439a697716861"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e22b844ddf503adba315aac4d05909bd947dafe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e22b844ddf503adba315aac4d05909bd947dafe", "html_url": "https://github.com/rust-lang/rust/commit/9e22b844ddf503adba315aac4d05909bd947dafe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e22b844ddf503adba315aac4d05909bd947dafe/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c9500a8f4d5267c7123d23fe0a8fedbe6825cea", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c9500a8f4d5267c7123d23fe0a8fedbe6825cea", "html_url": "https://github.com/rust-lang/rust/commit/1c9500a8f4d5267c7123d23fe0a8fedbe6825cea"}], "stats": {"total": 86, "additions": 19, "deletions": 67}, "files": [{"sha": "7eeec4aa86bc16e3e54859bc6cb12f5e12da27f7", "filename": "compiler/rustc_apfloat/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_apfloat%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_apfloat%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_apfloat%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -35,7 +35,6 @@\n #![forbid(unsafe_code)]\n #![feature(iter_zip)]\n #![feature(nll)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n \n #[macro_use]\n extern crate alloc;"}, {"sha": "0f6e0fb8825be2828262c2d8b6394c3cfb4b5612", "filename": "compiler/rustc_ast/src/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_ast%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_ast%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -10,15 +10,13 @@\n )]\n #![feature(box_syntax)]\n #![feature(box_patterns)]\n-// On bootstrap bump, this will likely have to become const_fn_unsize\n-#![cfg_attr(bootstrap, feature(const_fn))] // For the `transmute` in `P::new`\n+#![cfg_attr(bootstrap, feature(const_fn_unsize))]\n #![feature(const_fn_transmute)]\n #![feature(const_panic)]\n #![feature(crate_visibility_modifier)]\n #![feature(iter_zip)]\n #![feature(label_break_value)]\n #![feature(nll)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![recursion_limit = \"256\"]\n \n #[macro_use]"}, {"sha": "6f1772ff8188da778b446e935f5e591dbc3ce8c3", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -31,7 +31,6 @@\n //! in the HIR, especially for multiple identifiers.\n \n #![feature(crate_visibility_modifier)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(box_patterns)]\n #![feature(iter_zip)]\n #![recursion_limit = \"256\"]"}, {"sha": "6bd543ff15021ee555b59bdb83bbfe1ff9ebf365", "filename": "compiler/rustc_ast_pretty/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_ast_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_ast_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -1,6 +1,5 @@\n #![feature(bool_to_option)]\n #![feature(crate_visibility_modifier)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(box_patterns)]\n #![recursion_limit = \"256\"]\n "}, {"sha": "3fb11f77872bee95a28114e89d9e7aabc4270c1b", "filename": "compiler/rustc_attr/src/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_attr%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_attr%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -4,8 +4,6 @@\n //! The goal is to move the definition of `MetaItem` and things that don't need to be in `syntax`\n //! to this crate.\n \n-#![cfg_attr(bootstrap, feature(or_patterns))]\n-\n #[macro_use]\n extern crate rustc_macros;\n "}, {"sha": "2393e0b9ebfac662e8b744d9b920f1190cdc1e76", "filename": "compiler/rustc_builtin_macros/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -9,7 +9,6 @@\n #![feature(decl_macro)]\n #![feature(iter_zip)]\n #![feature(nll)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(proc_macro_internals)]\n #![feature(proc_macro_quote)]\n #![recursion_limit = \"256\"]"}, {"sha": "728f1224dd86eb566f312a419c4b4c5e4fa4ad1f", "filename": "compiler/rustc_codegen_llvm/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -13,7 +13,6 @@\n #![feature(in_band_lifetimes)]\n #![feature(iter_zip)]\n #![feature(nll)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![recursion_limit = \"256\"]\n \n use back::write::{create_informational_target_machine, create_target_machine};"}, {"sha": "6c4bb021cb3a4b971251fc82390d8608bba94508", "filename": "compiler/rustc_codegen_ssa/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -6,7 +6,6 @@\n #![feature(try_blocks)]\n #![feature(in_band_lifetimes)]\n #![feature(nll)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(associated_type_bounds)]\n #![feature(iter_zip)]\n #![recursion_limit = \"256\"]"}, {"sha": "16510b3eb07c9a1758bc157a9c2b12ab67b862a7", "filename": "compiler/rustc_expand/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -3,7 +3,6 @@\n #![feature(decl_macro)]\n #![feature(destructuring_assignment)]\n #![feature(iter_zip)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(proc_macro_diagnostic)]\n #![feature(proc_macro_internals)]\n #![feature(proc_macro_span)]"}, {"sha": "6a12c917436222a93977f3d27fb4f894c4dc920a", "filename": "compiler/rustc_hir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -7,7 +7,6 @@\n #![cfg_attr(bootstrap, feature(extended_key_value_attributes))]\n #![feature(in_band_lifetimes)]\n #![feature(once_cell)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![recursion_limit = \"256\"]\n \n #[macro_use]"}, {"sha": "2b932b7c9537ee51a7cb1d007719463707e98150", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -1,4 +1,3 @@\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![recursion_limit = \"256\"]\n \n use rustc_ast as ast;"}, {"sha": "f3e5830c1982d570d3b0b17a6980dc8124341482", "filename": "compiler/rustc_infer/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_infer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_infer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -20,7 +20,6 @@\n #![feature(extend_one)]\n #![feature(iter_zip)]\n #![feature(never_type)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(in_band_lifetimes)]\n #![feature(control_flow_enum)]\n #![recursion_limit = \"512\"] // For rustdoc"}, {"sha": "45ed6872f1885edcc4b7a4083b372c6f654239ec", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -36,7 +36,6 @@\n #![feature(iter_zip)]\n #![feature(never_type)]\n #![feature(nll)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(half_open_range_patterns)]\n #![feature(exclusive_range_pattern)]\n #![feature(control_flow_enum)]"}, {"sha": "15c9eda9902c412d842dd3f874a9da077d2f5b87", "filename": "compiler/rustc_metadata/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_metadata%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_metadata%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -5,7 +5,6 @@\n #![feature(in_band_lifetimes)]\n #![feature(nll)]\n #![feature(once_cell)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(proc_macro_internals)]\n #![feature(min_specialization)]\n #![feature(stmt_expr_attributes)]"}, {"sha": "8ac83bfb829e2643ce590c982b98cea9df6e388e", "filename": "compiler/rustc_middle/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -36,7 +36,6 @@\n #![feature(extern_types)]\n #![feature(nll)]\n #![feature(once_cell)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(min_specialization)]\n #![feature(trusted_len)]\n #![feature(test)]"}, {"sha": "010da247b2e78ec4d170dd1c9665c848187fdd53", "filename": "compiler/rustc_mir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_mir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_mir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -29,7 +29,6 @@ Rust MIR: a lowered representation of Rust.\n #![feature(stmt_expr_attributes)]\n #![feature(trait_alias)]\n #![feature(option_get_or_insert_default)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(once_cell)]\n #![feature(control_flow_enum)]\n #![recursion_limit = \"256\"]"}, {"sha": "64c9eb02ae84bf2310559742065da753c994c5be", "filename": "compiler/rustc_mir_build/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -10,7 +10,6 @@\n #![feature(bool_to_option)]\n #![feature(iter_zip)]\n #![feature(once_cell)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![recursion_limit = \"256\"]\n \n #[macro_use]"}, {"sha": "da642bb2d28bddb6cc0b0066defad9ebffd1d363", "filename": "compiler/rustc_parse/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_parse%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_parse%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -4,7 +4,6 @@\n #![feature(crate_visibility_modifier)]\n #![feature(bindings_after_at)]\n #![feature(iter_order_by)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(box_syntax)]\n #![feature(box_patterns)]\n #![recursion_limit = \"256\"]"}, {"sha": "9d653de910fecad7602732312243e5a43164544f", "filename": "compiler/rustc_parse_format/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -10,7 +10,6 @@\n     test(attr(deny(warnings)))\n )]\n #![feature(nll)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(bool_to_option)]\n \n pub use Alignment::*;"}, {"sha": "fdcb2293a41a02dd21236a165ec4c3b4bd83a6e4", "filename": "compiler/rustc_passes/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_passes%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_passes%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -10,7 +10,6 @@\n #![feature(in_band_lifetimes)]\n #![feature(iter_zip)]\n #![feature(nll)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![recursion_limit = \"256\"]\n \n #[macro_use]"}, {"sha": "e64f12ef48f22551473317d9900fc0dccd9bc3db", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -1,7 +1,6 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n #![feature(in_band_lifetimes)]\n #![feature(nll)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(control_flow_enum)]\n #![feature(try_blocks)]\n #![feature(associated_type_defaults)]"}, {"sha": "5793b79e6478b716a54f75aff2c3b1010fd66b75", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -16,7 +16,6 @@\n #![feature(format_args_capture)]\n #![feature(iter_zip)]\n #![feature(nll)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![recursion_limit = \"256\"]\n #![allow(rustdoc::private_intra_doc_links)]\n "}, {"sha": "2bba6500d89cb60952682e96d9bf20016d3778c4", "filename": "compiler/rustc_save_analysis/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -1,6 +1,5 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n #![feature(nll)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![recursion_limit = \"256\"]\n \n mod dump_visitor;"}, {"sha": "8d00a9a959e7a2c8d0577eeeba57790230ccc956", "filename": "compiler/rustc_session/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_session%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_session%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -1,6 +1,5 @@\n #![feature(crate_visibility_modifier)]\n #![feature(once_cell)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![recursion_limit = \"256\"]\n \n #[macro_use]"}, {"sha": "f716ce1efce86f1d952df25a7ee5cfe5fd3d65ad", "filename": "compiler/rustc_symbol_mangling/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -90,7 +90,6 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n #![feature(never_type)]\n #![feature(nll)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(in_band_lifetimes)]\n #![recursion_limit = \"256\"]\n "}, {"sha": "e932b1bca7c7ba1f358fef288fe7ae525354de1e", "filename": "compiler/rustc_trait_selection/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -19,7 +19,6 @@\n #![feature(iter_zip)]\n #![feature(never_type)]\n #![feature(crate_visibility_modifier)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(control_flow_enum)]\n #![recursion_limit = \"512\"] // For rustdoc\n "}, {"sha": "92ef829747271fd158923fe36bbf5de42f4714ef", "filename": "compiler/rustc_typeck/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_typeck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/compiler%2Frustc_typeck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -65,7 +65,6 @@ This API is completely unstable and subject to change.\n #![feature(is_sorted)]\n #![feature(iter_zip)]\n #![feature(nll)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(try_blocks)]\n #![feature(never_type)]\n #![feature(slice_partition_dedup)]"}, {"sha": "97765c36d93009b7f8de5d4f3abf104ff26e4627", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -88,8 +88,7 @@\n #![feature(cfg_target_has_atomic)]\n #![feature(coerce_unsized)]\n #![cfg_attr(not(no_global_oom_handling), feature(const_btree_new))]\n-#![cfg_attr(bootstrap, feature(const_fn))]\n-#![cfg_attr(not(bootstrap), feature(const_fn_trait_bound))]\n+#![feature(const_fn_trait_bound)]\n #![feature(cow_is_borrowed)]\n #![feature(const_cow_is_borrowed)]\n #![feature(destructuring_assignment)]\n@@ -118,7 +117,6 @@\n #![feature(nonnull_slice_from_raw_parts)]\n #![feature(auto_traits)]\n #![feature(option_result_unwrap_unchecked)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(pattern)]\n #![feature(ptr_internals)]\n #![feature(rustc_attrs)]"}, {"sha": "e25d006d213c7e20a76bf85243e05f7a1993fc8e", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -156,7 +156,6 @@ impl<T: fmt::Debug, const N: usize> fmt::Debug for [T; N] {\n // Note: the `#[rustc_skip_array_during_method_dispatch]` on `trait IntoIterator`\n // hides this implementation from explicit `.into_iter()` calls on editions < 2021,\n // so those calls will still resolve to the slice implementation, by reference.\n-#[cfg(not(bootstrap))]\n #[stable(feature = \"array_into_iter_impl\", since = \"1.53.0\")]\n impl<T, const N: usize> IntoIterator for [T; N] {\n     type Item = T;"}, {"sha": "ecea898504dc70a7784e7b2d52db991d70d908d7", "filename": "library/core/src/cmp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fcore%2Fsrc%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fcore%2Fsrc%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcmp.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -274,7 +274,7 @@ pub trait Eq: PartialEq<Self> {\n     //\n     // This should never be implemented by hand.\n     #[doc(hidden)]\n-    #[cfg_attr(not(bootstrap), no_coverage)] // rust-lang/rust#84605\n+    #[no_coverage] // rust-lang/rust#84605\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn assert_receiver_is_total_eq(&self) {}"}, {"sha": "15952c6806fa4e75decd6db6a538031b9252ded1", "filename": "library/core/src/future/future.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fcore%2Fsrc%2Ffuture%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fcore%2Fsrc%2Ffuture%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffuture%2Ffuture.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -24,8 +24,7 @@ use crate::task::{Context, Poll};\n /// `.await` the value.\n ///\n /// [`Waker`]: crate::task::Waker\n-#[cfg_attr(bootstrap, doc(spotlight))]\n-#[cfg_attr(not(bootstrap), doc(notable_trait))]\n+#[doc(notable_trait)]\n #[must_use = \"futures do nothing unless you `.await` or poll them\"]\n #[stable(feature = \"futures_api\", since = \"1.36.0\")]\n #[lang = \"future_trait\"]"}, {"sha": "e2a407509b10dce04dc3d8d901264c4e1579a6e5", "filename": "library/core/src/iter/traits/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fcollect.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -198,7 +198,7 @@ pub trait FromIterator<A>: Sized {\n /// }\n /// ```\n #[rustc_diagnostic_item = \"IntoIterator\"]\n-#[cfg_attr(not(bootstrap), rustc_skip_array_during_method_dispatch)]\n+#[rustc_skip_array_during_method_dispatch]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait IntoIterator {\n     /// The type of the elements being iterated over."}, {"sha": "e6ed34d3f052bbb5aeb1a3f417136c7611d34f10", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -92,8 +92,7 @@ fn _assert_is_object_safe(_: &dyn Iterator<Item = ()>) {}\n     label = \"`{Self}` is not an iterator\",\n     message = \"`{Self}` is not an iterator\"\n )]\n-#[cfg_attr(bootstrap, doc(spotlight))]\n-#[cfg_attr(not(bootstrap), doc(notable_trait))]\n+#[doc(notable_trait)]\n #[rustc_diagnostic_item = \"Iterator\"]\n #[must_use = \"iterators are lazy and do nothing unless consumed\"]\n pub trait Iterator {"}, {"sha": "337182c0c9f2382a95addf93686fd46e36b300fa", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -82,12 +82,12 @@\n #![feature(const_refs_to_cell)]\n #![feature(const_panic)]\n #![feature(const_pin)]\n-#![cfg_attr(bootstrap, feature(const_fn))]\n #![feature(const_fn_union)]\n #![feature(const_impl_trait)]\n #![feature(const_fn_floating_point_arithmetic)]\n #![feature(const_fn_fn_ptr_basics)]\n-#![cfg_attr(not(bootstrap), feature(const_fn_trait_bound))]\n+#![feature(const_fn_trait_bound)]\n+#![cfg_attr(bootstrap, feature(const_fn))]\n #![feature(const_option)]\n #![feature(const_precise_live_drops)]\n #![feature(const_ptr_offset)]\n@@ -110,8 +110,7 @@\n #![feature(custom_inner_attributes)]\n #![feature(decl_macro)]\n #![feature(doc_cfg)]\n-#![cfg_attr(bootstrap, feature(doc_spotlight))]\n-#![cfg_attr(not(bootstrap), feature(doc_notable_trait))]\n+#![feature(doc_notable_trait)]\n #![feature(duration_consts_2)]\n #![cfg_attr(bootstrap, feature(extended_key_value_attributes))]\n #![feature(extern_types)]\n@@ -127,7 +126,6 @@\n #![feature(exhaustive_patterns)]\n #![feature(no_core)]\n #![feature(auto_traits)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(prelude_import)]\n #![feature(ptr_metadata)]\n #![feature(repr_simd, platform_intrinsics)]\n@@ -167,7 +165,7 @@\n #![feature(const_caller_location)]\n #![feature(slice_ptr_get)]\n #![feature(no_niche)] // rust-lang/rust#68303\n-#![cfg_attr(not(bootstrap), feature(no_coverage))] // rust-lang/rust#84605\n+#![feature(no_coverage)] // rust-lang/rust#84605\n #![feature(int_error_matching)]\n #![deny(unsafe_op_in_unsafe_fn)]\n \n@@ -304,8 +302,7 @@ pub mod primitive;\n     unused_imports,\n     unsafe_op_in_unsafe_fn\n )]\n-#[cfg_attr(bootstrap, allow(rustdoc::non_autolinks))]\n-#[cfg_attr(not(bootstrap), allow(rustdoc::bare_urls))]\n+#[allow(rustdoc::bare_urls)]\n // FIXME: This annotation should be moved into rust-lang/stdarch after clashing_extern_declarations is\n // merged. It currently cannot because bootstrap fails as the lint hasn't been defined yet.\n #[allow(clashing_extern_declarations)]"}, {"sha": "04a165e09f1e5544ffc51f8ed56d8736a4eba917", "filename": "library/proc_macro/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fproc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fproc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -21,8 +21,7 @@\n #![feature(rustc_allow_const_fn_unstable)]\n #![feature(nll)]\n #![feature(staged_api)]\n-#![cfg_attr(bootstrap, feature(const_fn))]\n-#![cfg_attr(not(bootstrap), feature(const_fn_trait_bound))]\n+#![feature(const_fn_trait_bound)]\n #![feature(const_fn_fn_ptr_basics)]\n #![feature(allow_internal_unstable)]\n #![feature(decl_macro)]"}, {"sha": "4c154dbe01a5aa22835f4ee48c8e2f88ea1142aa", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -509,8 +509,7 @@ pub(crate) fn default_read_exact<R: Read + ?Sized>(this: &mut R, mut buf: &mut [\n /// [`std::io`]: self\n /// [`File`]: crate::fs::File\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[cfg_attr(bootstrap, doc(spotlight))]\n-#[cfg_attr(not(bootstrap), doc(notable_trait))]\n+#[doc(notable_trait)]\n pub trait Read {\n     /// Pull some bytes from this source into the specified buffer, returning\n     /// how many bytes were read.\n@@ -1307,8 +1306,7 @@ impl Initializer {\n ///\n /// [`write_all`]: Write::write_all\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[cfg_attr(bootstrap, doc(spotlight))]\n-#[cfg_attr(not(bootstrap), doc(notable_trait))]\n+#[doc(notable_trait)]\n pub trait Write {\n     /// Write a buffer into this writer, returning how many bytes were written.\n     ///"}, {"sha": "8e4c63762fd38b3d407a7ae417c36aeedadd1dba", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -260,8 +260,7 @@\n #![feature(doc_cfg)]\n #![feature(doc_keyword)]\n #![feature(doc_masked)]\n-#![cfg_attr(bootstrap, feature(doc_spotlight))]\n-#![cfg_attr(not(bootstrap), feature(doc_notable_trait))]\n+#![feature(doc_notable_trait)]\n #![feature(dropck_eyepatch)]\n #![feature(duration_constants)]\n #![feature(edition_panic)]\n@@ -300,7 +299,6 @@\n #![feature(nonnull_slice_from_raw_parts)]\n #![feature(once_cell)]\n #![feature(auto_traits)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(panic_info_message)]\n #![feature(panic_internals)]\n #![feature(panic_unwind)]"}, {"sha": "8a3e425350a681a87292485e565640c49df87e8a", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -540,8 +540,7 @@ mod prim_pointer {}\n ///\n /// # Examples\n ///\n-#[cfg_attr(bootstrap, doc = \"```ignore\")]\n-#[cfg_attr(not(bootstrap), doc = \"```\")]\n+/// ```\n /// let mut array: [i32; 3] = [0; 3];\n ///\n /// array[1] = 1;\n@@ -581,8 +580,7 @@ mod prim_pointer {}\n /// `IntoIterator` by value. In the future, the behavior on the 2015 and 2018 edition\n /// might be made consistent to the behavior of later editions.\n ///\n-#[cfg_attr(bootstrap, doc = \"```rust,edition2018,ignore\")]\n-#[cfg_attr(not(bootstrap), doc = \"```rust,edition2018\")]\n+/// ```rust,edition2018\n /// # #![allow(array_into_iter)] // override our `deny(warnings)`\n /// let array: [i32; 3] = [0; 3];\n ///\n@@ -637,8 +635,7 @@ mod prim_pointer {}\n /// * replace `for ... in array.into_iter() {` with `for ... in array {`,\n ///   equivalent to the post-2021 behavior (Rust 1.53+)\n ///\n-#[cfg_attr(bootstrap, doc = \"```rust,edition2018,ignore\")]\n-#[cfg_attr(not(bootstrap), doc = \"```rust,edition2018\")]\n+/// ```rust,edition2018\n /// use std::array::IntoIter;\n ///\n /// let array: [i32; 3] = [0; 3];"}, {"sha": "6488625c5a84d5fde22ddc38bfaa8f15b0ae507a", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -8,7 +8,6 @@\n #![feature(box_syntax)]\n #![feature(in_band_lifetimes)]\n #![feature(nll)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(test)]\n #![feature(crate_visibility_modifier)]\n #![feature(never_type)]"}, {"sha": "1027057f38552c475bc3c8b3294ed961211ccf63", "filename": "src/stage0.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/src%2Fstage0.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/src%2Fstage0.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstage0.txt?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -12,7 +12,7 @@\n # stable release's version number. `date` is the date where the release we're\n # bootstrapping off was released.\n \n-date: 2021-05-06\n+date: 2021-05-23\n rustc: beta\n \n # We use a nightly rustfmt to format the source because it solves some"}, {"sha": "2c83409b402a6a32eab18dae21d4017146363f6e", "filename": "src/tools/clippy/clippy_lints/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -6,7 +6,6 @@\n #![feature(in_band_lifetimes)]\n #![feature(iter_zip)]\n #![feature(once_cell)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(rustc_private)]\n #![feature(stmt_expr_attributes)]\n #![feature(control_flow_enum)]"}, {"sha": "82250151aabc605f4275e628185cf0fb05799aa4", "filename": "src/tools/clippy/clippy_utils/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e22b844ddf503adba315aac4d05909bd947dafe/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e22b844ddf503adba315aac4d05909bd947dafe/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs?ref=9e22b844ddf503adba315aac4d05909bd947dafe", "patch": "@@ -1,7 +1,6 @@\n #![feature(box_patterns)]\n #![feature(in_band_lifetimes)]\n #![feature(iter_zip)]\n-#![cfg_attr(bootstrap, feature(or_patterns))]\n #![feature(rustc_private)]\n #![recursion_limit = \"512\"]\n #![cfg_attr(feature = \"deny-warnings\", deny(warnings))]"}]}