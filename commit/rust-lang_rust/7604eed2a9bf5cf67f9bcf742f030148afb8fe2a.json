{"sha": "7604eed2a9bf5cf67f9bcf742f030148afb8fe2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2MDRlZWQyYTliZjVjZjY3ZjliY2Y3NDJmMDMwMTQ4YWZiOGZlMmE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-08-25T18:27:04Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-08-31T07:14:23Z"}, "message": "review comments: reword comment", "tree": {"sha": "3fbf7e4ff2c98a137a5469d52ba6cc5556648cfc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fbf7e4ff2c98a137a5469d52ba6cc5556648cfc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7604eed2a9bf5cf67f9bcf742f030148afb8fe2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7604eed2a9bf5cf67f9bcf742f030148afb8fe2a", "html_url": "https://github.com/rust-lang/rust/commit/7604eed2a9bf5cf67f9bcf742f030148afb8fe2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7604eed2a9bf5cf67f9bcf742f030148afb8fe2a/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5384d5584f6fd596df3a86e2cd4e0281b27d10db", "url": "https://api.github.com/repos/rust-lang/rust/commits/5384d5584f6fd596df3a86e2cd4e0281b27d10db", "html_url": "https://github.com/rust-lang/rust/commit/5384d5584f6fd596df3a86e2cd4e0281b27d10db"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "ff3626ffb857674e85fd3ebc6f466eb8b382777d", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7604eed2a9bf5cf67f9bcf742f030148afb8fe2a/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7604eed2a9bf5cf67f9bcf742f030148afb8fe2a/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=7604eed2a9bf5cf67f9bcf742f030148afb8fe2a", "patch": "@@ -967,10 +967,10 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         let self_ty = trait_ref.self_ty();\n         match self_ty.sty {\n             ty::FnDef(def_id, _) => {\n-                // We tried to apply the bound to an `fn`. Check wether calling it\n-                // would evaluate to a type that *would* satisfy the trait binding.\n-                // If it would, suggest calling it: `bar(foo)` -> `bar(foo)`. This\n-                // case is *very* to hit if `foo` is `async`.\n+                // We tried to apply the bound to an `fn`. Check whether calling it would evaluate\n+                // to a type that *would* satisfy the trait binding. If it would, suggest calling\n+                // it: `bar(foo)` -> `bar(foo)`. This case is *very* likely to be hit if `foo` is\n+                // `async`.\n                 let output_ty = self_ty.fn_sig(self.tcx).output();\n                 let new_trait_ref = ty::TraitRef {\n                     def_id: trait_ref.def_id(),"}]}