{"sha": "d5b8048245f43bce521b8aabba344f795f2d56f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1YjgwNDgyNDVmNDNiY2U1MjFiOGFhYmJhMzQ0Zjc5NWYyZDU2Zjg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-28T07:43:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-28T07:43:40Z"}, "message": "Rollup merge of #59456 - czipperz:for-keyword-document-higher-ranked-trait-bounds, r=Centril\n\nAdd documentation about `for` used as higher ranked trait bounds\n\nResolves #55416", "tree": {"sha": "193847a617dc0d36cc2b83197ddbfd85fe2eaacc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/193847a617dc0d36cc2b83197ddbfd85fe2eaacc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5b8048245f43bce521b8aabba344f795f2d56f8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcnHssCRBK7hj4Ov3rIwAAdHIIACh2b0650hfzRDzDxaqp+L7F\n8ioeDkkVp0QJniYNukcs4Qn9hdrx28mMpg1iBjoj/sJuKygOZnYwXFjmS7qUJtfr\nEth2YmttIXGohm90UXce6Cca3A6nJ7ezhtyOJnCjsfA4fQ4kSf8ysbdhzdcAruoT\nk9/Oj0yqIRZmx5VMTOusls9vLqQBCLBVoL32FTgU8GDmDZts1xRmDVbmfRkemttC\n8LPFGDq/rZ345I1SugRWyBJ8gecAVux3rx+DvsRjpg70UIiX2tYBio0H+6/UKT6y\nBgmmqRuAjfN0qfRuQiXc3OaBJ8hT8k3OgDYt9jyX8bLtcyHQy7+0PsBy5ezweb0=\n=yEaQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 193847a617dc0d36cc2b83197ddbfd85fe2eaacc\nparent 2ee038af8c6c5362f27156af5eccd540bc7e5075\nparent 25452501ee53c60445b9774fa69e2dc2134ddc44\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1553759020 +0100\ncommitter GitHub <noreply@github.com> 1553759020 +0100\n\nRollup merge of #59456 - czipperz:for-keyword-document-higher-ranked-trait-bounds, r=Centril\n\nAdd documentation about `for` used as higher ranked trait bounds\n\nResolves #55416\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5b8048245f43bce521b8aabba344f795f2d56f8", "html_url": "https://github.com/rust-lang/rust/commit/d5b8048245f43bce521b8aabba344f795f2d56f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5b8048245f43bce521b8aabba344f795f2d56f8/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ee038af8c6c5362f27156af5eccd540bc7e5075", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ee038af8c6c5362f27156af5eccd540bc7e5075", "html_url": "https://github.com/rust-lang/rust/commit/2ee038af8c6c5362f27156af5eccd540bc7e5075"}, {"sha": "25452501ee53c60445b9774fa69e2dc2134ddc44", "url": "https://api.github.com/repos/rust-lang/rust/commits/25452501ee53c60445b9774fa69e2dc2134ddc44", "html_url": "https://github.com/rust-lang/rust/commit/25452501ee53c60445b9774fa69e2dc2134ddc44"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "7b0d1549e061ad4ffe45e0005ff23fd9ddc6f8cf", "filename": "src/libstd/keyword_docs.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d5b8048245f43bce521b8aabba344f795f2d56f8/src%2Flibstd%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b8048245f43bce521b8aabba344f795f2d56f8/src%2Flibstd%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkeyword_docs.rs?ref=d5b8048245f43bce521b8aabba344f795f2d56f8", "patch": "@@ -286,11 +286,16 @@ mod fn_keyword { }\n //\n /// The `for` keyword.\n ///\n-/// `for` is primarily used in for-in-loops, but it has a few other pieces of syntactic uses such as\n-/// `impl Trait for Type` (see [`impl`] for more info on that). for-in-loops, or to be more\n-/// precise, iterator loops, are a simple syntactic sugar over an exceedingly common practice\n-/// within Rust, which is to loop over an iterator until that iterator returns `None` (or `break`\n-/// is called).\n+/// The `for` keyword is used in many syntactic locations:\n+///\n+/// * `for` is used in for-in-loops (see below).\n+/// * `for` is used when implementing traits as in `impl Trait for Type` (see [`impl`] for more info\n+///   on that).\n+/// * `for` is also used for [higher-ranked trait bounds] as in `for<'a> &'a T: PartialEq<i32>`.\n+///\n+/// for-in-loops, or to be more precise, iterator loops, are a simple syntactic sugar over a common\n+/// practice within Rust, which is to loop over an iterator until that iterator returns `None` (or\n+/// `break` is called).\n ///\n /// ```rust\n /// for i in 0..5 {\n@@ -347,6 +352,8 @@ mod fn_keyword { }\n /// For more information on for-loops, see the [Rust book] or the [Reference].\n ///\n /// [`impl`]: keyword.impl.html\n+/// [higher-ranked trait bounds]:\n+/// https://doc.rust-lang.org/nightly/reference/trait-bounds.html#higher-ranked-trait-bounds\n /// [`IntoIterator`]: iter/trait.IntoIterator.html\n /// [Rust book]:\n /// https://doc.rust-lang.org/book/2018-edition/ch03-05-control-flow.html#looping-through-a-collection-with-for"}]}