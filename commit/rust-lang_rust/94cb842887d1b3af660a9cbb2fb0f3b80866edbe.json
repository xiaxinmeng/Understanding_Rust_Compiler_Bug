{"sha": "94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0Y2I4NDI4ODdkMWIzYWY2NjBhOWNiYjJmYjBmM2I4MDg2NmVkYmU=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-08-07T16:59:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-07T16:59:41Z"}, "message": "Rollup merge of #35366 - medzin:E0282, r=jonathandturner\n\nUpdated error message E0282\n\nFixes #35312 as part of #35233.\n\nr? @GuillaumeGomez", "tree": {"sha": "55be9445c52a8e4046a0fdb9bf562b06e48e37b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55be9445c52a8e4046a0fdb9bf562b06e48e37b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "html_url": "https://github.com/rust-lang/rust/commit/94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b69b2dbeb1713e999163fd82f0b8651e1e5fd4a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b69b2dbeb1713e999163fd82f0b8651e1e5fd4a7", "html_url": "https://github.com/rust-lang/rust/commit/b69b2dbeb1713e999163fd82f0b8651e1e5fd4a7"}, {"sha": "19e45799a5e3b3b9137cad4a1db94d64dce9ae76", "url": "https://api.github.com/repos/rust-lang/rust/commits/19e45799a5e3b3b9137cad4a1db94d64dce9ae76", "html_url": "https://github.com/rust-lang/rust/commit/19e45799a5e3b3b9137cad4a1db94d64dce9ae76"}], "stats": {"total": 58, "additions": 41, "deletions": 17}, "files": [{"sha": "9950560b13a5a7cda70ccd0d38ccc2fedf6a6c46", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "patch": "@@ -870,10 +870,12 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n \n \n     fn need_type_info(&self, span: Span, ty: Ty<'tcx>) {\n-        span_err!(self.tcx.sess, span, E0282,\n-                  \"unable to infer enough type information about `{}`; \\\n-                   type annotations or generic parameter binding required\",\n-                  ty);\n+        let mut err = struct_span_err!(self.tcx.sess, span, E0282,\n+                                       \"unable to infer enough type information about `{}`\",\n+                                       ty);\n+        err.note(\"type annotations or generic parameter binding required\");\n+        err.span_label(span, &format!(\"cannot infer type for `{}`\", ty));\n+        err.emit()\n     }\n \n     fn note_obligation_cause<T>(&self,"}, {"sha": "001e4b51bebc4f619beaa84665fb38a7d6ecf525", "filename": "src/test/compile-fail/issue-12187-1.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-12187-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-12187-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12187-1.rs?ref=94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "patch": "@@ -14,5 +14,7 @@ fn new<T>() -> &'static T {\n \n fn main() {\n     let &v = new();\n-    //~^ ERROR type annotations or generic parameter binding required\n+    //~^ ERROR unable to infer enough type information about `_` [E0282]\n+    //~| NOTE cannot infer type for `_`\n+    //~| NOTE type annotations or generic parameter binding\n }"}, {"sha": "7cbee402b368253cb59845e912ed357307f77f33", "filename": "src/test/compile-fail/issue-12187-2.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-12187-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-12187-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12187-2.rs?ref=94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "patch": "@@ -14,5 +14,7 @@ fn new<'r, T>() -> &'r T {\n \n fn main() {\n     let &v = new();\n-    //~^ ERROR type annotations or generic parameter binding required\n+    //~^ ERROR unable to infer enough type information about `_` [E0282]\n+    //~| NOTE cannot infer type for `_`\n+    //~| NOTE type annotations or generic parameter binding\n }"}, {"sha": "1be082ba9bbbad454982a42a82d8ce3e7c4b6361", "filename": "src/test/compile-fail/issue-23041.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-23041.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-23041.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23041.rs?ref=94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "patch": "@@ -14,4 +14,6 @@ fn main()\n     fn bar(x:i32) ->i32 { 3*x };\n     let b:Box<Any> = Box::new(bar as fn(_)->_);\n     b.downcast_ref::<fn(_)->_>(); //~ ERROR E0282\n+                                  //~| NOTE cannot infer type for `_`\n+                                  //~| NOTE type annotations or generic parameter binding required\n }"}, {"sha": "f5aa4fadbed88605886670d9165c9e4ce41fd759", "filename": "src/test/compile-fail/issue-5062.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-5062.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-5062.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5062.rs?ref=94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "patch": "@@ -9,4 +9,4 @@\n // except according to those terms.\n \n fn main() { format!(\"{:?}\", None); }\n-    //~^ ERROR type annotations or generic parameter binding required\n+    //~^ ERROR unable to infer enough type information about `_` [E0282]"}, {"sha": "71f28054579157b40e159f1d924e72b8b4913bcc", "filename": "src/test/compile-fail/issue-6458-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-6458-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-6458-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-6458-2.rs?ref=94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "patch": "@@ -11,5 +11,5 @@\n fn main() {\n     // Unconstrained type:\n     format!(\"{:?}\", None);\n-    //~^ ERROR type annotations or generic parameter binding required\n+    //~^ ERROR unable to infer enough type information about `_` [E0282]\n }"}, {"sha": "e397805565bbdcd95c036d8f1ce6ff45dbe560be", "filename": "src/test/compile-fail/issue-6458-3.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-6458-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-6458-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-6458-3.rs?ref=94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "patch": "@@ -12,5 +12,7 @@ use std::mem;\n \n fn main() {\n     mem::transmute(0);\n-    //~^ ERROR type annotations or generic parameter binding required\n+    //~^ ERROR unable to infer enough type information about `_` [E0282]\n+    //~| NOTE cannot infer type for `_`\n+    //~| NOTE type annotations or generic parameter binding\n }"}, {"sha": "c3f3a718ad0e21cf5c6a91ec11b62fe5031d442f", "filename": "src/test/compile-fail/issue-6458-4.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-6458-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-6458-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-6458-4.rs?ref=94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "patch": "@@ -10,7 +10,9 @@\n \n fn foo(b: bool) -> Result<bool,String> {\n     Err(\"bar\".to_string());\n-    //~^ ERROR type annotations or generic parameter binding required\n+    //~^ ERROR unable to infer enough type information about `_` [E0282]\n+    //~| NOTE cannot infer type for `_`\n+    //~| NOTE type annotations or generic parameter binding\n }\n \n fn main() {"}, {"sha": "a64522a0e5b7543bfc038c051d3247a759a9088a", "filename": "src/test/compile-fail/issue-6458.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-6458.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-6458.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-6458.rs?ref=94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "patch": "@@ -17,7 +17,9 @@ pub fn foo<State>(_: TypeWithState<State>) {}\n \n pub fn bar() {\n    foo(TypeWithState(marker::PhantomData));\n-   //~^ ERROR type annotations or generic parameter binding required\n+   //~^ ERROR unable to infer enough type information about `_` [E0282]\n+   //~| NOTE cannot infer type for `_`\n+   //~| NOTE type annotations or generic parameter binding\n }\n \n fn main() {"}, {"sha": "e3cb1d0c7daafac93b6be3ec2842647bf4ca1e8c", "filename": "src/test/compile-fail/issue-7813.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-7813.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fissue-7813.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7813.rs?ref=94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "patch": "@@ -10,5 +10,7 @@\n \n fn main() {\n     let v = &[];\n-    let it = v.iter(); //~ ERROR type annotations or generic parameter binding required\n+    let it = v.iter(); //~ ERROR unable to infer enough type information about `_` [E0282]\n+                       //~| NOTE cannot infer type for `_`\n+                       //~| NOTE type annotations or generic parameter binding\n }"}, {"sha": "4f86909765ef1f84f0efd972291286990f8b9617", "filename": "src/test/compile-fail/method-ambig-one-trait-unknown-int-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fmethod-ambig-one-trait-unknown-int-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fmethod-ambig-one-trait-unknown-int-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmethod-ambig-one-trait-unknown-int-type.rs?ref=94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "patch": "@@ -32,7 +32,7 @@ impl foo for Vec<isize> {\n fn m1() {\n     // we couldn't infer the type of the vector just based on calling foo()...\n     let mut x = Vec::new();\n-    //~^ ERROR type annotations or generic parameter binding required\n+    //~^ ERROR unable to infer enough type information about `_` [E0282]\n     x.foo();\n }\n "}, {"sha": "e6545063dbd4414e4a246986693933f4751bbe3a", "filename": "src/test/compile-fail/traits-multidispatch-convert-ambig-dest.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Ftraits-multidispatch-convert-ambig-dest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Ftraits-multidispatch-convert-ambig-dest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftraits-multidispatch-convert-ambig-dest.rs?ref=94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "patch": "@@ -34,7 +34,9 @@ where T : Convert<U>\n \n fn a() {\n     test(22, std::default::Default::default());\n-    //~^ ERROR type annotations or generic parameter binding required\n+    //~^ ERROR unable to infer enough type information about `_` [E0282]\n+    //~| NOTE cannot infer type for `_`\n+    //~| NOTE type annotations or generic parameter binding\n }\n \n fn main() {}"}, {"sha": "380cdd266cd6e86eff564624814a54a7586148c2", "filename": "src/test/compile-fail/unconstrained-none.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Funconstrained-none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Funconstrained-none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funconstrained-none.rs?ref=94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "patch": "@@ -11,5 +11,7 @@\n // Issue #5062\n \n fn main() {\n-    None; //~ ERROR type annotations or generic parameter binding required\n+    None; //~ ERROR unable to infer enough type information about `_` [E0282]\n+          //~| NOTE cannot infer type for `_`\n+          //~| NOTE type annotations or generic parameter binding\n }"}, {"sha": "ba94bf613d217d8e18c3ff27775e91b2a82185ee", "filename": "src/test/compile-fail/unconstrained-ref.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Funconstrained-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Funconstrained-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funconstrained-ref.rs?ref=94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "patch": "@@ -13,5 +13,7 @@ struct S<'a, T:'a> {\n }\n \n fn main() {\n-    S { o: &None }; //~ ERROR type annotations or generic parameter binding required\n+    S { o: &None }; //~ ERROR unable to infer enough type information about `_` [E0282]\n+                    //~| NOTE cannot infer type for `_`\n+                    //~| NOTE type annotations or generic parameter binding\n }"}, {"sha": "25709f35246e3b37f70ae690f6869b133718bbc0", "filename": "src/test/compile-fail/vector-no-ann.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fvector-no-ann.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94cb842887d1b3af660a9cbb2fb0f3b80866edbe/src%2Ftest%2Fcompile-fail%2Fvector-no-ann.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvector-no-ann.rs?ref=94cb842887d1b3af660a9cbb2fb0f3b80866edbe", "patch": "@@ -11,5 +11,7 @@\n \n fn main() {\n     let _foo = Vec::new();\n-    //~^ ERROR type annotations or generic parameter binding required\n+    //~^ ERROR unable to infer enough type information about `_` [E0282]\n+    //~| NOTE cannot infer type for `_`\n+    //~| NOTE type annotations or generic parameter binding\n }"}]}