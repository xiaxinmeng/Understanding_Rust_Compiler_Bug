{"sha": "b63f260bbcf89a2b40358f534b97f672468294fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2M2YyNjBiYmNmODlhMmI0MDM1OGY1MzRiOTdmNjcyNDY4Mjk0ZmI=", "commit": {"author": {"name": "Geoffry Song", "email": "goffrie@gmail.com", "date": "2019-10-03T07:10:58Z"}, "committer": {"name": "Geoffry Song", "email": "goffrie@gmail.com", "date": "2019-10-03T07:27:09Z"}, "message": "Lower the precedence of the `as` operator.\n\nPreviously, the `as` operator was being parsed like a postfix expression, and\ntherefore being given the highest possible precedence. That caused it to bind\nmore tightly than prefix operators, which it should not. Instead, parse it\nsomewhat like a normal binary expression with some special-casing.", "tree": {"sha": "9a21ac5bc76e828025c9dd66b01ea1e27bd38d50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a21ac5bc76e828025c9dd66b01ea1e27bd38d50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b63f260bbcf89a2b40358f534b97f672468294fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b63f260bbcf89a2b40358f534b97f672468294fb", "html_url": "https://github.com/rust-lang/rust/commit/b63f260bbcf89a2b40358f534b97f672468294fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b63f260bbcf89a2b40358f534b97f672468294fb/comments", "author": {"login": "goffrie", "id": 1240398, "node_id": "MDQ6VXNlcjEyNDAzOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1240398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goffrie", "html_url": "https://github.com/goffrie", "followers_url": "https://api.github.com/users/goffrie/followers", "following_url": "https://api.github.com/users/goffrie/following{/other_user}", "gists_url": "https://api.github.com/users/goffrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/goffrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goffrie/subscriptions", "organizations_url": "https://api.github.com/users/goffrie/orgs", "repos_url": "https://api.github.com/users/goffrie/repos", "events_url": "https://api.github.com/users/goffrie/events{/privacy}", "received_events_url": "https://api.github.com/users/goffrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "goffrie", "id": 1240398, "node_id": "MDQ6VXNlcjEyNDAzOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1240398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goffrie", "html_url": "https://github.com/goffrie", "followers_url": "https://api.github.com/users/goffrie/followers", "following_url": "https://api.github.com/users/goffrie/following{/other_user}", "gists_url": "https://api.github.com/users/goffrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/goffrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goffrie/subscriptions", "organizations_url": "https://api.github.com/users/goffrie/orgs", "repos_url": "https://api.github.com/users/goffrie/repos", "events_url": "https://api.github.com/users/goffrie/events{/privacy}", "received_events_url": "https://api.github.com/users/goffrie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1c367595139f109fb6f53811bed7d67a384793e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1c367595139f109fb6f53811bed7d67a384793e", "html_url": "https://github.com/rust-lang/rust/commit/e1c367595139f109fb6f53811bed7d67a384793e"}], "stats": {"total": 198, "additions": 153, "deletions": 45}, "files": [{"sha": "448b87505770c70001f36dd2ce809315587d9688", "filename": "crates/ra_parser/src/grammar/expressions.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b63f260bbcf89a2b40358f534b97f672468294fb/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b63f260bbcf89a2b40358f534b97f672468294fb/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=b63f260bbcf89a2b40358f534b97f672468294fb", "patch": "@@ -250,6 +250,7 @@ fn current_op(p: &Parser) -> (u8, SyntaxKind) {\n         T![!] if p.at(T![!=])  => (5,  T![!=]),\n         T![-] if p.at(T![-=])  => (1,  T![-=]),\n         T![-]                  => (10, T![-]),\n+        T![as]                 => (12, T![as]),\n \n         _                      => NOT_AN_OP\n     }\n@@ -278,6 +279,10 @@ fn expr_bp(p: &mut Parser, r: Restrictions, bp: u8) -> (Option<CompletedMarker>,\n         if op_bp < bp {\n             break;\n         }\n+        if p.at(T![as]) {\n+            lhs = cast_expr(p, lhs);\n+            continue;\n+        }\n         let m = lhs.precede(p);\n         p.bump(op);\n \n@@ -296,6 +301,7 @@ fn lhs(p: &mut Parser, r: Restrictions) -> Option<(CompletedMarker, BlockLike)>\n         // fn foo() {\n         //     let _ = &1;\n         //     let _ = &mut &f();\n+        //     let _ = &1 as *const i32;\n         // }\n         T![&] => {\n             m = p.start();\n@@ -305,9 +311,13 @@ fn lhs(p: &mut Parser, r: Restrictions) -> Option<(CompletedMarker, BlockLike)>\n         }\n         // test unary_expr\n         // fn foo() {\n-        //     **&1;\n+        //     **&1 + 1;\n         //     !!true;\n         //     --1;\n+        //     *&1 as u64;\n+        //     *x(1);\n+        //     &x[1];\n+        //     -1..2;\n         // }\n         T![*] | T![!] | T![-] => {\n             m = p.start();\n@@ -338,6 +348,7 @@ fn lhs(p: &mut Parser, r: Restrictions) -> Option<(CompletedMarker, BlockLike)>\n             return Some(postfix_expr(p, lhs, blocklike, !(r.prefer_stmt && blocklike.is_block())));\n         }\n     };\n+    // parse the interior of the unary expression\n     expr_bp(p, r, 255);\n     Some((m.complete(p, kind), BlockLike::NotBlock))\n }\n@@ -371,7 +382,6 @@ fn postfix_expr(\n                 }\n             },\n             T![?] => try_expr(p, lhs),\n-            T![as] => cast_expr(p, lhs),\n             _ => break,\n         };\n         allow_calls = true;"}, {"sha": "1080b48a1e3106ab97dd11654e4ac7628a1fd023", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0019_unary_expr.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b63f260bbcf89a2b40358f534b97f672468294fb/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0019_unary_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b63f260bbcf89a2b40358f534b97f672468294fb/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0019_unary_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0019_unary_expr.rs?ref=b63f260bbcf89a2b40358f534b97f672468294fb", "patch": "@@ -1,5 +1,9 @@\n fn foo() {\n-    **&1;\n+    **&1 + 1;\n     !!true;\n     --1;\n+    *&1 as u64;\n+    *x(1);\n+    &x[1];\n+    -1..2;\n }"}, {"sha": "e2b60d99f4658c1a942606888da1f0a25262e5db", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0019_unary_expr.txt", "status": "modified", "additions": 101, "deletions": 35, "changes": 136, "blob_url": "https://github.com/rust-lang/rust/blob/b63f260bbcf89a2b40358f534b97f672468294fb/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0019_unary_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/b63f260bbcf89a2b40358f534b97f672468294fb/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0019_unary_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0019_unary_expr.txt?ref=b63f260bbcf89a2b40358f534b97f672468294fb", "patch": "@@ -1,5 +1,5 @@\n-SOURCE_FILE@[0; 44)\n-  FN_DEF@[0; 43)\n+SOURCE_FILE@[0; 97)\n+  FN_DEF@[0; 96)\n     FN_KW@[0; 2) \"fn\"\n     WHITESPACE@[2; 3) \" \"\n     NAME@[3; 6)\n@@ -8,38 +8,104 @@ SOURCE_FILE@[0; 44)\n       L_PAREN@[6; 7) \"(\"\n       R_PAREN@[7; 8) \")\"\n     WHITESPACE@[8; 9) \" \"\n-    BLOCK_EXPR@[9; 43)\n-      BLOCK@[9; 43)\n+    BLOCK_EXPR@[9; 96)\n+      BLOCK@[9; 96)\n         L_CURLY@[9; 10) \"{\"\n         WHITESPACE@[10; 15) \"\\n    \"\n-        EXPR_STMT@[15; 20)\n-          PREFIX_EXPR@[15; 19)\n-            STAR@[15; 16) \"*\"\n-            PREFIX_EXPR@[16; 19)\n-              STAR@[16; 17) \"*\"\n-              REF_EXPR@[17; 19)\n-                AMP@[17; 18) \"&\"\n-                LITERAL@[18; 19)\n-                  INT_NUMBER@[18; 19) \"1\"\n-          SEMI@[19; 20) \";\"\n-        WHITESPACE@[20; 25) \"\\n    \"\n-        EXPR_STMT@[25; 32)\n-          PREFIX_EXPR@[25; 31)\n-            EXCL@[25; 26) \"!\"\n-            PREFIX_EXPR@[26; 31)\n-              EXCL@[26; 27) \"!\"\n-              LITERAL@[27; 31)\n-                TRUE_KW@[27; 31) \"true\"\n-          SEMI@[31; 32) \";\"\n-        WHITESPACE@[32; 37) \"\\n    \"\n-        EXPR_STMT@[37; 41)\n-          PREFIX_EXPR@[37; 40)\n-            MINUS@[37; 38) \"-\"\n-            PREFIX_EXPR@[38; 40)\n-              MINUS@[38; 39) \"-\"\n-              LITERAL@[39; 40)\n-                INT_NUMBER@[39; 40) \"1\"\n-          SEMI@[40; 41) \";\"\n-        WHITESPACE@[41; 42) \"\\n\"\n-        R_CURLY@[42; 43) \"}\"\n-  WHITESPACE@[43; 44) \"\\n\"\n+        EXPR_STMT@[15; 24)\n+          BIN_EXPR@[15; 23)\n+            PREFIX_EXPR@[15; 19)\n+              STAR@[15; 16) \"*\"\n+              PREFIX_EXPR@[16; 19)\n+                STAR@[16; 17) \"*\"\n+                REF_EXPR@[17; 19)\n+                  AMP@[17; 18) \"&\"\n+                  LITERAL@[18; 19)\n+                    INT_NUMBER@[18; 19) \"1\"\n+            WHITESPACE@[19; 20) \" \"\n+            PLUS@[20; 21) \"+\"\n+            WHITESPACE@[21; 22) \" \"\n+            LITERAL@[22; 23)\n+              INT_NUMBER@[22; 23) \"1\"\n+          SEMI@[23; 24) \";\"\n+        WHITESPACE@[24; 29) \"\\n    \"\n+        EXPR_STMT@[29; 36)\n+          PREFIX_EXPR@[29; 35)\n+            EXCL@[29; 30) \"!\"\n+            PREFIX_EXPR@[30; 35)\n+              EXCL@[30; 31) \"!\"\n+              LITERAL@[31; 35)\n+                TRUE_KW@[31; 35) \"true\"\n+          SEMI@[35; 36) \";\"\n+        WHITESPACE@[36; 41) \"\\n    \"\n+        EXPR_STMT@[41; 45)\n+          PREFIX_EXPR@[41; 44)\n+            MINUS@[41; 42) \"-\"\n+            PREFIX_EXPR@[42; 44)\n+              MINUS@[42; 43) \"-\"\n+              LITERAL@[43; 44)\n+                INT_NUMBER@[43; 44) \"1\"\n+          SEMI@[44; 45) \";\"\n+        WHITESPACE@[45; 50) \"\\n    \"\n+        EXPR_STMT@[50; 61)\n+          CAST_EXPR@[50; 60)\n+            PREFIX_EXPR@[50; 53)\n+              STAR@[50; 51) \"*\"\n+              REF_EXPR@[51; 53)\n+                AMP@[51; 52) \"&\"\n+                LITERAL@[52; 53)\n+                  INT_NUMBER@[52; 53) \"1\"\n+            WHITESPACE@[53; 54) \" \"\n+            AS_KW@[54; 56) \"as\"\n+            WHITESPACE@[56; 57) \" \"\n+            PATH_TYPE@[57; 60)\n+              PATH@[57; 60)\n+                PATH_SEGMENT@[57; 60)\n+                  NAME_REF@[57; 60)\n+                    IDENT@[57; 60) \"u64\"\n+          SEMI@[60; 61) \";\"\n+        WHITESPACE@[61; 66) \"\\n    \"\n+        EXPR_STMT@[66; 72)\n+          PREFIX_EXPR@[66; 71)\n+            STAR@[66; 67) \"*\"\n+            CALL_EXPR@[67; 71)\n+              PATH_EXPR@[67; 68)\n+                PATH@[67; 68)\n+                  PATH_SEGMENT@[67; 68)\n+                    NAME_REF@[67; 68)\n+                      IDENT@[67; 68) \"x\"\n+              ARG_LIST@[68; 71)\n+                L_PAREN@[68; 69) \"(\"\n+                LITERAL@[69; 70)\n+                  INT_NUMBER@[69; 70) \"1\"\n+                R_PAREN@[70; 71) \")\"\n+          SEMI@[71; 72) \";\"\n+        WHITESPACE@[72; 77) \"\\n    \"\n+        EXPR_STMT@[77; 83)\n+          REF_EXPR@[77; 82)\n+            AMP@[77; 78) \"&\"\n+            INDEX_EXPR@[78; 82)\n+              PATH_EXPR@[78; 79)\n+                PATH@[78; 79)\n+                  PATH_SEGMENT@[78; 79)\n+                    NAME_REF@[78; 79)\n+                      IDENT@[78; 79) \"x\"\n+              L_BRACK@[79; 80) \"[\"\n+              LITERAL@[80; 81)\n+                INT_NUMBER@[80; 81) \"1\"\n+              R_BRACK@[81; 82) \"]\"\n+          SEMI@[82; 83) \";\"\n+        WHITESPACE@[83; 88) \"\\n    \"\n+        EXPR_STMT@[88; 94)\n+          RANGE_EXPR@[88; 93)\n+            PREFIX_EXPR@[88; 90)\n+              MINUS@[88; 89) \"-\"\n+              LITERAL@[89; 90)\n+                INT_NUMBER@[89; 90) \"1\"\n+            DOTDOT@[90; 92) \"..\"\n+            LITERAL@[92; 93)\n+              INT_NUMBER@[92; 93) \"2\"\n+          SEMI@[93; 94) \";\"\n+        WHITESPACE@[94; 95) \"\\n\"\n+        R_CURLY@[95; 96) \"}\"\n+  WHITESPACE@[96; 97) \"\\n\""}, {"sha": "050638f56094fb00dbfbbbea59d776203340ae8b", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0082_ref_expr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b63f260bbcf89a2b40358f534b97f672468294fb/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0082_ref_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b63f260bbcf89a2b40358f534b97f672468294fb/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0082_ref_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0082_ref_expr.rs?ref=b63f260bbcf89a2b40358f534b97f672468294fb", "patch": "@@ -1,4 +1,5 @@\n fn foo() {\n     let _ = &1;\n     let _ = &mut &f();\n+    let _ = &1 as *const i32;\n }"}, {"sha": "d6334e55bbba41214e4fd15cbbca35fe6a67676a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0082_ref_expr.txt", "status": "modified", "additions": 34, "deletions": 7, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/b63f260bbcf89a2b40358f534b97f672468294fb/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0082_ref_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/b63f260bbcf89a2b40358f534b97f672468294fb/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0082_ref_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0082_ref_expr.txt?ref=b63f260bbcf89a2b40358f534b97f672468294fb", "patch": "@@ -1,5 +1,5 @@\n-SOURCE_FILE@[0; 52)\n-  FN_DEF@[0; 51)\n+SOURCE_FILE@[0; 82)\n+  FN_DEF@[0; 81)\n     FN_KW@[0; 2) \"fn\"\n     WHITESPACE@[2; 3) \" \"\n     NAME@[3; 6)\n@@ -8,8 +8,8 @@ SOURCE_FILE@[0; 52)\n       L_PAREN@[6; 7) \"(\"\n       R_PAREN@[7; 8) \")\"\n     WHITESPACE@[8; 9) \" \"\n-    BLOCK_EXPR@[9; 51)\n-      BLOCK@[9; 51)\n+    BLOCK_EXPR@[9; 81)\n+      BLOCK@[9; 81)\n         L_CURLY@[9; 10) \"{\"\n         WHITESPACE@[10; 15) \"\\n    \"\n         LET_STMT@[15; 26)\n@@ -50,6 +50,33 @@ SOURCE_FILE@[0; 52)\n                   L_PAREN@[46; 47) \"(\"\n                   R_PAREN@[47; 48) \")\"\n           SEMI@[48; 49) \";\"\n-        WHITESPACE@[49; 50) \"\\n\"\n-        R_CURLY@[50; 51) \"}\"\n-  WHITESPACE@[51; 52) \"\\n\"\n+        WHITESPACE@[49; 54) \"\\n    \"\n+        LET_STMT@[54; 79)\n+          LET_KW@[54; 57) \"let\"\n+          WHITESPACE@[57; 58) \" \"\n+          PLACEHOLDER_PAT@[58; 59)\n+            UNDERSCORE@[58; 59) \"_\"\n+          WHITESPACE@[59; 60) \" \"\n+          EQ@[60; 61) \"=\"\n+          WHITESPACE@[61; 62) \" \"\n+          CAST_EXPR@[62; 78)\n+            REF_EXPR@[62; 64)\n+              AMP@[62; 63) \"&\"\n+              LITERAL@[63; 64)\n+                INT_NUMBER@[63; 64) \"1\"\n+            WHITESPACE@[64; 65) \" \"\n+            AS_KW@[65; 67) \"as\"\n+            WHITESPACE@[67; 68) \" \"\n+            POINTER_TYPE@[68; 78)\n+              STAR@[68; 69) \"*\"\n+              CONST_KW@[69; 74) \"const\"\n+              WHITESPACE@[74; 75) \" \"\n+              PATH_TYPE@[75; 78)\n+                PATH@[75; 78)\n+                  PATH_SEGMENT@[75; 78)\n+                    NAME_REF@[75; 78)\n+                      IDENT@[75; 78) \"i32\"\n+          SEMI@[78; 79) \";\"\n+        WHITESPACE@[79; 80) \"\\n\"\n+        R_CURLY@[80; 81) \"}\"\n+  WHITESPACE@[81; 82) \"\\n\""}]}