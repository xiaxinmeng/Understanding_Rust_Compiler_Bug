{"sha": "d6cf0dfbab35f40abaef345024701ff8112ed2d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2Y2YwZGZiYWIzNWY0MGFiYWVmMzQ1MDI0NzAxZmY4MTEyZWQyZDg=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-05-12T16:58:23Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-05-15T08:55:02Z"}, "message": "syntax::visit: pub `walk_explicit_self` so impls can call it as defaults do.\n\ndrive-by: added some doc.", "tree": {"sha": "77b2c6ca9a79229480e771cf02cfb17b73af394f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77b2c6ca9a79229480e771cf02cfb17b73af394f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6cf0dfbab35f40abaef345024701ff8112ed2d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6cf0dfbab35f40abaef345024701ff8112ed2d8", "html_url": "https://github.com/rust-lang/rust/commit/d6cf0dfbab35f40abaef345024701ff8112ed2d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6cf0dfbab35f40abaef345024701ff8112ed2d8/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73a68cdba0d6e5ee28c9ef1ae80ec473f16cd9e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/73a68cdba0d6e5ee28c9ef1ae80ec473f16cd9e9", "html_url": "https://github.com/rust-lang/rust/commit/73a68cdba0d6e5ee28c9ef1ae80ec473f16cd9e9"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "ce10d0db3ba75d88c94b01501d0b2db0295c6d0d", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d6cf0dfbab35f40abaef345024701ff8112ed2d8/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6cf0dfbab35f40abaef345024701ff8112ed2d8/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=d6cf0dfbab35f40abaef345024701ff8112ed2d8", "patch": "@@ -61,7 +61,17 @@ pub fn generics_of_fn(fk: &FnKind) -> Generics {\n     }\n }\n \n+/// Each method of the Visitor trait is a hook to be potentially\n+/// overriden.  Each method's default implementation recursively visits\n+/// the substructure of the input via the corresponding `walk` method;\n+/// e.g. the `visit_mod` method by default calls `visit::walk_mod`.\n+///\n+/// If you want to ensure that your code handles every variant\n+/// explicitly, you need to override each method.  (And you also need\n+/// to monitor future changes to `Visitor` in case a new method with a\n+/// new default implementation gets introduced.)\n pub trait Visitor<E: Clone> {\n+\n     fn visit_ident(&mut self, _sp: Span, _ident: Ident, _e: E) {\n         /*! Visit the idents */\n     }\n@@ -179,9 +189,9 @@ pub fn walk_local<E: Clone, V: Visitor<E>>(visitor: &mut V, local: &Local, env:\n     }\n }\n \n-fn walk_explicit_self<E: Clone, V: Visitor<E>>(visitor: &mut V,\n-                                               explicit_self: &ExplicitSelf,\n-                                               env: E) {\n+pub fn walk_explicit_self<E: Clone, V: Visitor<E>>(visitor: &mut V,\n+                                                   explicit_self: &ExplicitSelf,\n+                                                   env: E) {\n     match explicit_self.node {\n         SelfStatic | SelfValue | SelfUniq => {}\n         SelfRegion(ref lifetime, _) => {"}]}