{"sha": "ca0b65402b107a8d357225945876783fa28122c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMGI2NTQwMmIxMDdhOGQzNTcyMjU5NDU4NzY3ODNmYTI4MTIyYzY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-10T17:33:15Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-12T05:39:40Z"}, "message": "libc: Switch open to use a mode_t on unix\n\nWhile I'm at it, export O_SYNC with the other flags that are exported.\n\nCloses #15582", "tree": {"sha": "557e1336d62e2ff59c1babb3176a528f6fd97250", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/557e1336d62e2ff59c1babb3176a528f6fd97250"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca0b65402b107a8d357225945876783fa28122c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca0b65402b107a8d357225945876783fa28122c6", "html_url": "https://github.com/rust-lang/rust/commit/ca0b65402b107a8d357225945876783fa28122c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca0b65402b107a8d357225945876783fa28122c6/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c26cd9f05dc20eb67cf90d2ebb18728807b53022", "url": "https://api.github.com/repos/rust-lang/rust/commits/c26cd9f05dc20eb67cf90d2ebb18728807b53022", "html_url": "https://github.com/rust-lang/rust/commit/c26cd9f05dc20eb67cf90d2ebb18728807b53022"}], "stats": {"total": 125, "additions": 67, "deletions": 58}, "files": [{"sha": "894779fa06b54bec98172a1fe7c88440f651d885", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 61, "deletions": 57, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/ca0b65402b107a8d357225945876783fa28122c6/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0b65402b107a8d357225945876783fa28122c6/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=ca0b65402b107a8d357225945876783fa28122c6", "patch": "@@ -2008,6 +2008,7 @@ pub mod consts {\n         pub mod posix88 {\n             use types::os::arch::c95::c_int;\n             use types::common::c95::c_void;\n+            use types::os::arch::posix88::mode_t;\n \n             pub static O_RDONLY : c_int = 0;\n             pub static O_WRONLY : c_int = 1;\n@@ -2016,20 +2017,20 @@ pub mod consts {\n             pub static O_CREAT : c_int = 64;\n             pub static O_EXCL : c_int = 128;\n             pub static O_TRUNC : c_int = 512;\n-            pub static S_IFIFO : c_int = 4096;\n-            pub static S_IFCHR : c_int = 8192;\n-            pub static S_IFBLK : c_int = 24576;\n-            pub static S_IFDIR : c_int = 16384;\n-            pub static S_IFREG : c_int = 32768;\n-            pub static S_IFLNK : c_int = 40960;\n-            pub static S_IFMT : c_int = 61440;\n-            pub static S_IEXEC : c_int = 64;\n-            pub static S_IWRITE : c_int = 128;\n-            pub static S_IREAD : c_int = 256;\n-            pub static S_IRWXU : c_int = 448;\n-            pub static S_IXUSR : c_int = 64;\n-            pub static S_IWUSR : c_int = 128;\n-            pub static S_IRUSR : c_int = 256;\n+            pub static S_IFIFO : mode_t = 4096;\n+            pub static S_IFCHR : mode_t = 8192;\n+            pub static S_IFBLK : mode_t = 24576;\n+            pub static S_IFDIR : mode_t = 16384;\n+            pub static S_IFREG : mode_t = 32768;\n+            pub static S_IFLNK : mode_t = 40960;\n+            pub static S_IFMT : mode_t = 61440;\n+            pub static S_IEXEC : mode_t = 64;\n+            pub static S_IWRITE : mode_t = 128;\n+            pub static S_IREAD : mode_t = 256;\n+            pub static S_IRWXU : mode_t = 448;\n+            pub static S_IXUSR : mode_t = 64;\n+            pub static S_IWUSR : mode_t = 128;\n+            pub static S_IRUSR : mode_t = 256;\n             pub static F_OK : c_int = 0;\n             pub static R_OK : c_int = 4;\n             pub static W_OK : c_int = 2;\n@@ -2220,6 +2221,7 @@ pub mod consts {\n         pub mod posix88 {\n             use types::os::arch::c95::c_int;\n             use types::common::c95::c_void;\n+            use types::os::arch::posix88::mode_t;\n \n             pub static O_RDONLY : c_int = 0;\n             pub static O_WRONLY : c_int = 1;\n@@ -2228,20 +2230,20 @@ pub mod consts {\n             pub static O_CREAT : c_int = 256;\n             pub static O_EXCL : c_int = 1024;\n             pub static O_TRUNC : c_int = 512;\n-            pub static S_IFIFO : c_int = 4096;\n-            pub static S_IFCHR : c_int = 8192;\n-            pub static S_IFBLK : c_int = 24576;\n-            pub static S_IFDIR : c_int = 16384;\n-            pub static S_IFREG : c_int = 32768;\n-            pub static S_IFLNK : c_int = 40960;\n-            pub static S_IFMT : c_int = 61440;\n-            pub static S_IEXEC : c_int = 64;\n-            pub static S_IWRITE : c_int = 128;\n-            pub static S_IREAD : c_int = 256;\n-            pub static S_IRWXU : c_int = 448;\n-            pub static S_IXUSR : c_int = 64;\n-            pub static S_IWUSR : c_int = 128;\n-            pub static S_IRUSR : c_int = 256;\n+            pub static S_IFIFO : mode_t = 4096;\n+            pub static S_IFCHR : mode_t = 8192;\n+            pub static S_IFBLK : mode_t = 24576;\n+            pub static S_IFDIR : mode_t = 16384;\n+            pub static S_IFREG : mode_t = 32768;\n+            pub static S_IFLNK : mode_t = 40960;\n+            pub static S_IFMT : mode_t = 61440;\n+            pub static S_IEXEC : mode_t = 64;\n+            pub static S_IWRITE : mode_t = 128;\n+            pub static S_IREAD : mode_t = 256;\n+            pub static S_IRWXU : mode_t = 448;\n+            pub static S_IXUSR : mode_t = 64;\n+            pub static S_IWUSR : mode_t = 128;\n+            pub static S_IRUSR : mode_t = 256;\n             pub static F_OK : c_int = 0;\n             pub static R_OK : c_int = 4;\n             pub static W_OK : c_int = 2;\n@@ -2759,6 +2761,7 @@ pub mod consts {\n         pub mod posix88 {\n             use types::common::c95::c_void;\n             use types::os::arch::c95::c_int;\n+            use types::os::arch::posix88::mode_t;\n \n             pub static O_RDONLY : c_int = 0;\n             pub static O_WRONLY : c_int = 1;\n@@ -2767,20 +2770,20 @@ pub mod consts {\n             pub static O_CREAT : c_int = 512;\n             pub static O_EXCL : c_int = 2048;\n             pub static O_TRUNC : c_int = 1024;\n-            pub static S_IFIFO : c_int = 4096;\n-            pub static S_IFCHR : c_int = 8192;\n-            pub static S_IFBLK : c_int = 24576;\n-            pub static S_IFDIR : c_int = 16384;\n-            pub static S_IFREG : c_int = 32768;\n-            pub static S_IFLNK : c_int = 40960;\n-            pub static S_IFMT : c_int = 61440;\n-            pub static S_IEXEC : c_int = 64;\n-            pub static S_IWRITE : c_int = 128;\n-            pub static S_IREAD : c_int = 256;\n-            pub static S_IRWXU : c_int = 448;\n-            pub static S_IXUSR : c_int = 64;\n-            pub static S_IWUSR : c_int = 128;\n-            pub static S_IRUSR : c_int = 256;\n+            pub static S_IFIFO : mode_t = 4096;\n+            pub static S_IFCHR : mode_t = 8192;\n+            pub static S_IFBLK : mode_t = 24576;\n+            pub static S_IFDIR : mode_t = 16384;\n+            pub static S_IFREG : mode_t = 32768;\n+            pub static S_IFLNK : mode_t = 40960;\n+            pub static S_IFMT : mode_t = 61440;\n+            pub static S_IEXEC : mode_t = 64;\n+            pub static S_IWRITE : mode_t = 128;\n+            pub static S_IREAD : mode_t = 256;\n+            pub static S_IRWXU : mode_t = 448;\n+            pub static S_IXUSR : mode_t = 64;\n+            pub static S_IWUSR : mode_t = 128;\n+            pub static S_IRUSR : mode_t = 256;\n             pub static F_OK : c_int = 0;\n             pub static R_OK : c_int = 4;\n             pub static W_OK : c_int = 2;\n@@ -3148,6 +3151,7 @@ pub mod consts {\n         pub mod posix88 {\n             use types::common::c95::c_void;\n             use types::os::arch::c95::c_int;\n+            use types::os::arch::posix88::mode_t;\n \n             pub static O_RDONLY : c_int = 0;\n             pub static O_WRONLY : c_int = 1;\n@@ -3156,20 +3160,20 @@ pub mod consts {\n             pub static O_CREAT : c_int = 512;\n             pub static O_EXCL : c_int = 2048;\n             pub static O_TRUNC : c_int = 1024;\n-            pub static S_IFIFO : c_int = 4096;\n-            pub static S_IFCHR : c_int = 8192;\n-            pub static S_IFBLK : c_int = 24576;\n-            pub static S_IFDIR : c_int = 16384;\n-            pub static S_IFREG : c_int = 32768;\n-            pub static S_IFLNK : c_int = 40960;\n-            pub static S_IFMT : c_int = 61440;\n-            pub static S_IEXEC : c_int = 64;\n-            pub static S_IWRITE : c_int = 128;\n-            pub static S_IREAD : c_int = 256;\n-            pub static S_IRWXU : c_int = 448;\n-            pub static S_IXUSR : c_int = 64;\n-            pub static S_IWUSR : c_int = 128;\n-            pub static S_IRUSR : c_int = 256;\n+            pub static S_IFIFO : mode_t = 4096;\n+            pub static S_IFCHR : mode_t = 8192;\n+            pub static S_IFBLK : mode_t = 24576;\n+            pub static S_IFDIR : mode_t = 16384;\n+            pub static S_IFREG : mode_t = 32768;\n+            pub static S_IFLNK : mode_t = 40960;\n+            pub static S_IFMT : mode_t = 61440;\n+            pub static S_IEXEC : mode_t = 64;\n+            pub static S_IWRITE : mode_t = 128;\n+            pub static S_IREAD : mode_t = 256;\n+            pub static S_IRWXU : mode_t = 448;\n+            pub static S_IXUSR : mode_t = 64;\n+            pub static S_IWUSR : mode_t = 128;\n+            pub static S_IRUSR : mode_t = 256;\n             pub static F_OK : c_int = 0;\n             pub static R_OK : c_int = 4;\n             pub static W_OK : c_int = 2;\n@@ -3858,7 +3862,7 @@ pub mod funcs {\n             use types::os::arch::posix88::mode_t;\n \n             extern {\n-                pub fn open(path: *const c_char, oflag: c_int, mode: c_int)\n+                pub fn open(path: *const c_char, oflag: c_int, mode: mode_t)\n                             -> c_int;\n                 pub fn creat(path: *const c_char, mode: mode_t) -> c_int;\n                 pub fn fcntl(fd: c_int, cmd: c_int, ...) -> c_int;"}, {"sha": "74ab19d0aa67cfce91c0fa05e99ba57fa45a11b7", "filename": "src/libstd/io/fs.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ca0b65402b107a8d357225945876783fa28122c6/src%2Flibstd%2Fio%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0b65402b107a8d357225945876783fa28122c6/src%2Flibstd%2Fio%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ffs.rs?ref=ca0b65402b107a8d357225945876783fa28122c6", "patch": "@@ -330,6 +330,11 @@ pub fn lstat(path: &Path) -> IoResult<FileStat> {\n }\n \n fn from_rtio(s: rtio::FileStat) -> FileStat {\n+    #[cfg(windows)]\n+    type Mode = libc::c_int;\n+    #[cfg(unix)]\n+    type Mode = libc::mode_t;\n+\n     let rtio::FileStat {\n         size, kind, perm, created, modified,\n         accessed, device, inode, rdev,\n@@ -338,7 +343,7 @@ fn from_rtio(s: rtio::FileStat) -> FileStat {\n \n     FileStat {\n         size: size,\n-        kind: match (kind as libc::c_int) & libc::S_IFMT {\n+        kind: match (kind as Mode) & libc::S_IFMT {\n             libc::S_IFREG => io::TypeFile,\n             libc::S_IFDIR => io::TypeDirectory,\n             libc::S_IFIFO => io::TypeNamedPipe,"}]}