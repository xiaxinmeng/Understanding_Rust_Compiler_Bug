{"sha": "2e3e0c0892d6fc9d20374d31db994eee4d083366", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlM2UwYzA4OTJkNmZjOWQyMDM3NGQzMWRiOTk0ZWVlNGQwODMzNjY=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-05-03T10:26:45Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-05-03T10:26:45Z"}, "message": "Avoid needless creation of unique strings in fmt!()\n\nOnly the first portion has to be owned, as it acts as the buffer for the\nconstructed string. The remaining strings can be static.", "tree": {"sha": "a3dd92264e23c3ae63be032ca841a0878b035155", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3dd92264e23c3ae63be032ca841a0878b035155"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e3e0c0892d6fc9d20374d31db994eee4d083366", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e3e0c0892d6fc9d20374d31db994eee4d083366", "html_url": "https://github.com/rust-lang/rust/commit/2e3e0c0892d6fc9d20374d31db994eee4d083366", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e3e0c0892d6fc9d20374d31db994eee4d083366/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ae44a07a9d508d0ad413e70d3152a0f4a087976", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ae44a07a9d508d0ad413e70d3152a0f4a087976", "html_url": "https://github.com/rust-lang/rust/commit/2ae44a07a9d508d0ad413e70d3152a0f4a087976"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "e9eebe5b2acc6ef98c529009d3d65d202bda64dc", "filename": "src/libsyntax/ext/fmt.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2e3e0c0892d6fc9d20374d31db994eee4d083366/src%2Flibsyntax%2Fext%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e3e0c0892d6fc9d20374d31db994eee4d083366/src%2Flibsyntax%2Fext%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ffmt.rs?ref=2e3e0c0892d6fc9d20374d31db994eee4d083366", "patch": "@@ -273,15 +273,13 @@ fn pieces_to_expr(cx: @ext_ctxt, sp: span,\n         match pc {\n             /* Raw strings get appended via str::push_str */\n             PieceString(s) => {\n-                let portion = mk_uniq_str(cx, fmt_sp, s);\n-\n                 /* If this is the first portion, then initialize the local\n                    buffer with it directly. If it's actually the only piece,\n                    then there's no need for it to be mutable */\n                 if i == 0 {\n-                    stms.push(mk_local(cx, fmt_sp, npieces > 1, ident, portion));\n+                    stms.push(mk_local(cx, fmt_sp, npieces > 1, ident, mk_uniq_str(cx, fmt_sp, s)));\n                 } else {\n-                    let args = ~[mk_mut_addr_of(cx, fmt_sp, buf()), portion];\n+                    let args = ~[mk_mut_addr_of(cx, fmt_sp, buf()), mk_base_str(cx, fmt_sp, s)];\n                     let call = mk_call_global(cx,\n                                               fmt_sp,\n                                               ~[str_ident, push_ident],"}]}