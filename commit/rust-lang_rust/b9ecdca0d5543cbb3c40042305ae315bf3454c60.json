{"sha": "b9ecdca0d5543cbb3c40042305ae315bf3454c60", "node_id": "C_kwDOAAsO6NoAKGI5ZWNkY2EwZDU1NDNjYmIzYzQwMDQyMzA1YWUzMTViZjM0NTRjNjA", "commit": {"author": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2022-03-28T02:36:22Z"}, "committer": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2022-03-28T02:36:22Z"}, "message": "Don't panic when scraping invalid calls", "tree": {"sha": "0e9964d9d361d194a1860734440544fc41698125", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e9964d9d361d194a1860734440544fc41698125"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9ecdca0d5543cbb3c40042305ae315bf3454c60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9ecdca0d5543cbb3c40042305ae315bf3454c60", "html_url": "https://github.com/rust-lang/rust/commit/b9ecdca0d5543cbb3c40042305ae315bf3454c60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9ecdca0d5543cbb3c40042305ae315bf3454c60/comments", "author": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1416d528aa17623c15d51839a5cfeee7bfdbc35", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1416d528aa17623c15d51839a5cfeee7bfdbc35", "html_url": "https://github.com/rust-lang/rust/commit/d1416d528aa17623c15d51839a5cfeee7bfdbc35"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "bddc4326b74686339010b7aecbfacc05ed4f4463", "filename": "src/librustdoc/scrape_examples.rs", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b9ecdca0d5543cbb3c40042305ae315bf3454c60/src%2Flibrustdoc%2Fscrape_examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ecdca0d5543cbb3c40042305ae315bf3454c60/src%2Flibrustdoc%2Fscrape_examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fscrape_examples.rs?ref=b9ecdca0d5543cbb3c40042305ae315bf3454c60", "patch": "@@ -192,15 +192,22 @@ where\n             return;\n         }\n \n-        assert!(\n-            enclosing_item_span.contains(call_span),\n-            \"Attempted to scrape call at [{call_span:?}] whose enclosing item [{enclosing_item_span:?}] doesn't contain the span of the call.\",\n-        );\n-\n-        assert!(\n-            call_span.contains(ident_span),\n-            \"Attempted to scrape call at [{call_span:?}] whose identifier [{ident_span:?}] was not contained in the span of the call.\"\n-        );\n+        // If the enclosing item doesn't actually enclose the call, this means we probably have a weird\n+        // macro issue even though the spans aren't tagged as being from an expansion.\n+        if !enclosing_item_span.contains(call_span) {\n+            warn!(\n+                \"Attempted to scrape call at [{call_span:?}] whose enclosing item [{enclosing_item_span:?}] doesn't contain the span of the call.\"\n+            );\n+            return;\n+        }\n+\n+        // Similarly for the call w/ the function ident.\n+        if !call_span.contains(ident_span) {\n+            warn!(\n+                \"Attempted to scrape call at [{call_span:?}] whose identifier [{ident_span:?}] was not contained in the span of the call.\"\n+            );\n+            return;\n+        }\n \n         // Save call site if the function resolves to a concrete definition\n         if let ty::FnDef(def_id, _) = ty.kind() {"}]}