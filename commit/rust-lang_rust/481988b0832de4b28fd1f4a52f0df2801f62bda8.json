{"sha": "481988b0832de4b28fd1f4a52f0df2801f62bda8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MTk4OGIwODMyZGU0YjI4ZmQxZjRhNTJmMGRmMjgwMWY2MmJkYTg=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-07-10T07:18:19Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-07-10T07:18:19Z"}, "message": "Use str::strip* in bootstrap\n\nThis commit replaces the use of `trim_start_matches`\nbecause in `rustc -Vv` output there are no lines\nstarting with multiple \"release:\".", "tree": {"sha": "e24fb04e327b90cc8096d53dc93cffa618a844bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e24fb04e327b90cc8096d53dc93cffa618a844bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/481988b0832de4b28fd1f4a52f0df2801f62bda8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/481988b0832de4b28fd1f4a52f0df2801f62bda8", "html_url": "https://github.com/rust-lang/rust/commit/481988b0832de4b28fd1f4a52f0df2801f62bda8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/481988b0832de4b28fd1f4a52f0df2801f62bda8/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e59b08e62ea691916d2f063cac5aab4634128022", "url": "https://api.github.com/repos/rust-lang/rust/commits/e59b08e62ea691916d2f063cac5aab4634128022", "html_url": "https://github.com/rust-lang/rust/commit/e59b08e62ea691916d2f063cac5aab4634128022"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "9b4926f28d4edb320d50b6efc3a1069215113f32", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/481988b0832de4b28fd1f4a52f0df2801f62bda8/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/481988b0832de4b28fd1f4a52f0df2801f62bda8/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=481988b0832de4b28fd1f4a52f0df2801f62bda8", "patch": "@@ -963,10 +963,11 @@ pub fn run_cargo(\n         .collect::<Vec<_>>();\n     for (prefix, extension, expected_len) in toplevel {\n         let candidates = contents.iter().filter(|&&(_, ref filename, ref meta)| {\n-            filename.starts_with(&prefix[..])\n-                && filename[prefix.len()..].starts_with('-')\n-                && filename.ends_with(&extension[..])\n-                && meta.len() == expected_len\n+            meta.len() == expected_len\n+                && filename\n+                    .strip_prefix(&prefix[..])\n+                    .map(|s| s.starts_with('-') && s.ends_with(&extension[..]))\n+                    .unwrap_or(false)\n         });\n         let max = candidates\n             .max_by_key(|&&(_, _, ref metadata)| FileTime::from_last_modification_time(metadata));"}, {"sha": "783a64c3581f96a43b6b106bcebff0bdce9ec3ec", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/481988b0832de4b28fd1f4a52f0df2801f62bda8/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/481988b0832de4b28fd1f4a52f0df2801f62bda8/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=481988b0832de4b28fd1f4a52f0df2801f62bda8", "patch": "@@ -436,10 +436,9 @@ impl Build {\n             output(Command::new(&build.initial_rustc).arg(\"--version\").arg(\"--verbose\"));\n         let local_release = local_version_verbose\n             .lines()\n-            .filter(|x| x.starts_with(\"release:\"))\n+            .filter_map(|x| x.strip_prefix(\"release:\"))\n             .next()\n             .unwrap()\n-            .trim_start_matches(\"release:\")\n             .trim();\n         let my_version = channel::CFG_RELEASE_NUM;\n         if local_release.split('.').take(2).eq(my_version.split('.').take(2)) {\n@@ -1089,10 +1088,10 @@ impl Build {\n         let toml_file_name = self.src.join(&format!(\"src/tools/{}/Cargo.toml\", package));\n         let toml = t!(fs::read_to_string(&toml_file_name));\n         for line in toml.lines() {\n-            let prefix = \"version = \\\"\";\n-            let suffix = \"\\\"\";\n-            if line.starts_with(prefix) && line.ends_with(suffix) {\n-                return line[prefix.len()..line.len() - suffix.len()].to_string();\n+            if let Some(stripped) =\n+                line.strip_prefix(\"version = \\\"\").and_then(|s| s.strip_suffix(\"\\\"\"))\n+            {\n+                return stripped.to_owned();\n             }\n         }\n "}]}