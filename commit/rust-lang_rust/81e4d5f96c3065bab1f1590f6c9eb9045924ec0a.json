{"sha": "81e4d5f96c3065bab1f1590f6c9eb9045924ec0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxZTRkNWY5NmMzMDY1YmFiMWYxNTkwZjZjOWViOTA0NTkyNGVjMGE=", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2021-04-23T20:28:17Z"}, "committer": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2021-04-23T20:28:17Z"}, "message": "add special case for typeof fallback", "tree": {"sha": "b25b2f38e4cf1b2aff6d8e9ed2be55f56aed351d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b25b2f38e4cf1b2aff6d8e9ed2be55f56aed351d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81e4d5f96c3065bab1f1590f6c9eb9045924ec0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81e4d5f96c3065bab1f1590f6c9eb9045924ec0a", "html_url": "https://github.com/rust-lang/rust/commit/81e4d5f96c3065bab1f1590f6c9eb9045924ec0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81e4d5f96c3065bab1f1590f6c9eb9045924ec0a/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a49b746da43625fd789c2cd72d24093525c4ca17", "url": "https://api.github.com/repos/rust-lang/rust/commits/a49b746da43625fd789c2cd72d24093525c4ca17", "html_url": "https://github.com/rust-lang/rust/commit/a49b746da43625fd789c2cd72d24093525c4ca17"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "cb4257e05347ae2550195d5f28fb779b9d29083e", "filename": "compiler/rustc_typeck/src/check/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/81e4d5f96c3065bab1f1590f6c9eb9045924ec0a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81e4d5f96c3065bab1f1590f6c9eb9045924ec0a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs?ref=81e4d5f96c3065bab1f1590f6c9eb9045924ec0a", "patch": "@@ -540,6 +540,12 @@ fn typeck_with_fallback<'tcx>(\n                             kind: TypeVariableOriginKind::TypeInference,\n                             span,\n                         }),\n+                        Node::Ty(&hir::Ty {\n+                            kind: hir::TyKind::Typeof(ref anon_const), ..\n+                        }) if anon_const.hir_id == id => fcx.next_ty_var(TypeVariableOrigin {\n+                            kind: TypeVariableOriginKind::TypeInference,\n+                            span,\n+                        }),\n                         Node::Expr(&hir::Expr { kind: hir::ExprKind::InlineAsm(ia), .. })\n                             if ia.operands.iter().any(|(op, _op_sp)| match op {\n                                 hir::InlineAsmOperand::Const { anon_const } => {"}]}