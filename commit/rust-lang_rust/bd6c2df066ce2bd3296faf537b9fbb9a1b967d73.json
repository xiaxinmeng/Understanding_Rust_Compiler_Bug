{"sha": "bd6c2df066ce2bd3296faf537b9fbb9a1b967d73", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkNmMyZGYwNjZjZTJiZDMyOTZmYWY1MzdiOWZiYjlhMWI5NjdkNzM=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2019-03-23T06:30:17Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2019-03-23T06:30:17Z"}, "message": "Change explicit_counter_loop's message to reflect original variable name", "tree": {"sha": "2f64f5b6b355c51d49a794eec3d73177963182e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f64f5b6b355c51d49a794eec3d73177963182e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd6c2df066ce2bd3296faf537b9fbb9a1b967d73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd6c2df066ce2bd3296faf537b9fbb9a1b967d73", "html_url": "https://github.com/rust-lang/rust/commit/bd6c2df066ce2bd3296faf537b9fbb9a1b967d73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd6c2df066ce2bd3296faf537b9fbb9a1b967d73/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7d444508655eab132f0d24d81f9cdc08b848056", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7d444508655eab132f0d24d81f9cdc08b848056", "html_url": "https://github.com/rust-lang/rust/commit/c7d444508655eab132f0d24d81f9cdc08b848056"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "d88f3e6782f593ea5517905a82ecb66c2da527c7", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bd6c2df066ce2bd3296faf537b9fbb9a1b967d73/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd6c2df066ce2bd3296faf537b9fbb9a1b967d73/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=bd6c2df066ce2bd3296faf537b9fbb9a1b967d73", "patch": "@@ -777,7 +777,7 @@ fn check_for_loop<'a, 'tcx>(\n     check_for_loop_range(cx, pat, arg, body, expr);\n     check_for_loop_reverse_range(cx, arg, expr);\n     check_for_loop_arg(cx, pat, arg, expr);\n-    check_for_loop_explicit_counter(cx, arg, body, expr);\n+    check_for_loop_explicit_counter(cx, pat, arg, body, expr);\n     check_for_loop_over_map_kv(cx, pat, arg, body, expr);\n     check_for_mut_range_bound(cx, arg, body);\n     detect_manual_memcpy(cx, pat, arg, body, expr);\n@@ -1453,6 +1453,7 @@ fn check_arg_type(cx: &LateContext<'_, '_>, pat: &Pat, arg: &Expr) {\n \n fn check_for_loop_explicit_counter<'a, 'tcx>(\n     cx: &LateContext<'a, 'tcx>,\n+    pat: &'tcx Pat,\n     arg: &'tcx Expr,\n     body: &'tcx Expr,\n     expr: &'tcx Expr,\n@@ -1495,8 +1496,9 @@ fn check_for_loop_explicit_counter<'a, 'tcx>(\n                             expr.span,\n                             &format!(\n                                 \"the variable `{0}` is used as a loop counter. Consider using `for ({0}, \\\n-                                 item) in {1}.enumerate()` or similar iterators\",\n+                                 {1}) in {2}.enumerate()` or similar iterators\",\n                                 name,\n+                                snippet(cx, pat.span, \"_\"),\n                                 snippet(cx, arg.span, \"_\")\n                             ),\n                         );"}, {"sha": "84ca0db8388befeb43e0baa3ec7b1cb97d5abff1", "filename": "tests/ui/explicit_counter_loop.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bd6c2df066ce2bd3296faf537b9fbb9a1b967d73/tests%2Fui%2Fexplicit_counter_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd6c2df066ce2bd3296faf537b9fbb9a1b967d73/tests%2Fui%2Fexplicit_counter_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_counter_loop.stderr?ref=bd6c2df066ce2bd3296faf537b9fbb9a1b967d73", "patch": "@@ -1,24 +1,24 @@\n-error: the variable `_index` is used as a loop counter. Consider using `for (_index, item) in &vec.enumerate()` or similar iterators\n+error: the variable `_index` is used as a loop counter. Consider using `for (_index, _v) in &vec.enumerate()` or similar iterators\n   --> $DIR/explicit_counter_loop.rs:6:15\n    |\n LL |     for _v in &vec {\n    |               ^^^^\n    |\n    = note: `-D clippy::explicit-counter-loop` implied by `-D warnings`\n \n-error: the variable `_index` is used as a loop counter. Consider using `for (_index, item) in &vec.enumerate()` or similar iterators\n+error: the variable `_index` is used as a loop counter. Consider using `for (_index, _v) in &vec.enumerate()` or similar iterators\n   --> $DIR/explicit_counter_loop.rs:12:15\n    |\n LL |     for _v in &vec {\n    |               ^^^^\n \n-error: the variable `count` is used as a loop counter. Consider using `for (count, item) in text.chars().enumerate()` or similar iterators\n+error: the variable `count` is used as a loop counter. Consider using `for (count, ch) in text.chars().enumerate()` or similar iterators\n   --> $DIR/explicit_counter_loop.rs:51:19\n    |\n LL |         for ch in text.chars() {\n    |                   ^^^^^^^^^^^^\n \n-error: the variable `count` is used as a loop counter. Consider using `for (count, item) in text.chars().enumerate()` or similar iterators\n+error: the variable `count` is used as a loop counter. Consider using `for (count, ch) in text.chars().enumerate()` or similar iterators\n   --> $DIR/explicit_counter_loop.rs:62:19\n    |\n LL |         for ch in text.chars() {"}]}