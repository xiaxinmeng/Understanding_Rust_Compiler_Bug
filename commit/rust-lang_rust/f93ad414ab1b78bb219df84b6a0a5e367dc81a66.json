{"sha": "f93ad414ab1b78bb219df84b6a0a5e367dc81a66", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5M2FkNDE0YWIxYjc4YmIyMTlkZjg0YjZhMGE1ZTM2N2RjODFhNjY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-18T19:37:42Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-18T19:44:52Z"}, "message": "Rename first_ty_sty to ty_sty", "tree": {"sha": "2a64478b71bcdc9dd4c340e389fe587e328c1125", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a64478b71bcdc9dd4c340e389fe587e328c1125"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f93ad414ab1b78bb219df84b6a0a5e367dc81a66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f93ad414ab1b78bb219df84b6a0a5e367dc81a66", "html_url": "https://github.com/rust-lang/rust/commit/f93ad414ab1b78bb219df84b6a0a5e367dc81a66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f93ad414ab1b78bb219df84b6a0a5e367dc81a66/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b39e664ee8add0f6a36462c18927648aa3dc207e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b39e664ee8add0f6a36462c18927648aa3dc207e", "html_url": "https://github.com/rust-lang/rust/commit/b39e664ee8add0f6a36462c18927648aa3dc207e"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "51f1ad1a3765b91c71c45fea8913a01aeb5c4e53", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f93ad414ab1b78bb219df84b6a0a5e367dc81a66/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f93ad414ab1b78bb219df84b6a0a5e367dc81a66/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=f93ad414ab1b78bb219df84b6a0a5e367dc81a66", "patch": "@@ -1097,7 +1097,7 @@ fn external_generic_args(\n     substs: SubstsRef<'_>,\n ) -> GenericArgs {\n     let mut skip_self = has_self;\n-    let mut first_ty_sty = None;\n+    let mut ty_sty = None;\n     let args: Vec<_> = substs.iter().filter_map(|kind| match kind.unpack() {\n         UnpackedKind::Lifetime(lt) => {\n             lt.clean(cx).and_then(|lt| Some(GenericArg::Lifetime(lt)))\n@@ -1107,7 +1107,7 @@ fn external_generic_args(\n             None\n         }\n         UnpackedKind::Type(ty) => {\n-            first_ty_sty = Some(&ty.sty);\n+            ty_sty = Some(&ty.sty);\n             Some(GenericArg::Type(ty.clean(cx)))\n         }\n         UnpackedKind::Const(ct) => Some(GenericArg::Const(ct.clean(cx))),\n@@ -1116,8 +1116,8 @@ fn external_generic_args(\n     match trait_did {\n         // Attempt to sugar an external path like Fn<(A, B,), C> to Fn(A, B) -> C\n         Some(did) if cx.tcx.lang_items().fn_trait_kind(did).is_some() => {\n-            assert!(first_ty_sty.is_some());\n-            let inputs = match first_ty_sty {\n+            assert!(ty_sty.is_some());\n+            let inputs = match ty_sty {\n                 Some(ty::Tuple(ref tys)) => tys.iter().map(|t| t.clean(cx)).collect(),\n                 _ => return GenericArgs::AngleBracketed { args, bindings },\n             };"}]}