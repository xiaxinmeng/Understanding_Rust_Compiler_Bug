{"sha": "6827a413c82af4c69b74a5b961b695b854e4ecad", "node_id": "C_kwDOAAsO6NoAKDY4MjdhNDEzYzgyYWY0YzY5Yjc0YTViOTYxYjY5NWI4NTRlNGVjYWQ", "commit": {"author": {"name": "onestacked", "email": "chrisi.schrefl@gmail.com", "date": "2023-05-26T07:53:05Z"}, "committer": {"name": "onestacked", "email": "chrisi.schrefl@gmail.com", "date": "2023-05-26T07:53:05Z"}, "message": "Blesses UI tests, add known bug to typeid-equality-by-subtyping", "tree": {"sha": "64a0650018468e5b6faa93291ccccc82acc217f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64a0650018468e5b6faa93291ccccc82acc217f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6827a413c82af4c69b74a5b961b695b854e4ecad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6827a413c82af4c69b74a5b961b695b854e4ecad", "html_url": "https://github.com/rust-lang/rust/commit/6827a413c82af4c69b74a5b961b695b854e4ecad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6827a413c82af4c69b74a5b961b695b854e4ecad/comments", "author": {"login": "chriss0612", "id": 18047460, "node_id": "MDQ6VXNlcjE4MDQ3NDYw", "avatar_url": "https://avatars.githubusercontent.com/u/18047460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chriss0612", "html_url": "https://github.com/chriss0612", "followers_url": "https://api.github.com/users/chriss0612/followers", "following_url": "https://api.github.com/users/chriss0612/following{/other_user}", "gists_url": "https://api.github.com/users/chriss0612/gists{/gist_id}", "starred_url": "https://api.github.com/users/chriss0612/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chriss0612/subscriptions", "organizations_url": "https://api.github.com/users/chriss0612/orgs", "repos_url": "https://api.github.com/users/chriss0612/repos", "events_url": "https://api.github.com/users/chriss0612/events{/privacy}", "received_events_url": "https://api.github.com/users/chriss0612/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chriss0612", "id": 18047460, "node_id": "MDQ6VXNlcjE4MDQ3NDYw", "avatar_url": "https://avatars.githubusercontent.com/u/18047460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chriss0612", "html_url": "https://github.com/chriss0612", "followers_url": "https://api.github.com/users/chriss0612/followers", "following_url": "https://api.github.com/users/chriss0612/following{/other_user}", "gists_url": "https://api.github.com/users/chriss0612/gists{/gist_id}", "starred_url": "https://api.github.com/users/chriss0612/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chriss0612/subscriptions", "organizations_url": "https://api.github.com/users/chriss0612/orgs", "repos_url": "https://api.github.com/users/chriss0612/repos", "events_url": "https://api.github.com/users/chriss0612/events{/privacy}", "received_events_url": "https://api.github.com/users/chriss0612/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2bdaf1a4d38c06521bf9004c5b54ea97d29d6d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2bdaf1a4d38c06521bf9004c5b54ea97d29d6d4", "html_url": "https://github.com/rust-lang/rust/commit/f2bdaf1a4d38c06521bf9004c5b54ea97d29d6d4"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "b22cab7c7ffad044ada7b7de105c49e78157cc06", "filename": "tests/ui/const-generics/generic_const_exprs/typeid-equality-by-subtyping.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6827a413c82af4c69b74a5b961b695b854e4ecad/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Ftypeid-equality-by-subtyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6827a413c82af4c69b74a5b961b695b854e4ecad/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Ftypeid-equality-by-subtyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Ftypeid-equality-by-subtyping.rs?ref=6827a413c82af4c69b74a5b961b695b854e4ecad", "patch": "@@ -1,7 +1,7 @@\n-// check-pass\n+// known-bug: #110395\n // known-bug: #97156\n \n-#![feature(const_type_id, generic_const_exprs)]\n+#![feature(const_type_id, const_trait_impl, generic_const_exprs)]\n #![allow(incomplete_features)]\n \n use std::any::TypeId;\n@@ -26,7 +26,10 @@ impl<T: 'static> AssocCt for T {\n trait WithAssoc<U> {\n     type Assoc;\n }\n-impl<T: 'static> WithAssoc<()> for T where [(); <T as AssocCt>::ASSOC]: {\n+impl<T: 'static> WithAssoc<()> for T\n+where\n+    [(); <T as AssocCt>::ASSOC]:,\n+{\n     type Assoc = [u8; <T as AssocCt>::ASSOC];\n }\n \n@@ -38,7 +41,6 @@ where\n     x\n }\n \n-\n fn unsound<T>(x: <One as WithAssoc<T>>::Assoc) -> <Two as WithAssoc<T>>::Assoc\n where\n     One: WithAssoc<T>,"}, {"sha": "8cbd12654480ab09b5fd4e7c9702562a692a853c", "filename": "tests/ui/const-generics/generic_const_exprs/typeid-equality-by-subtyping.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6827a413c82af4c69b74a5b961b695b854e4ecad/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Ftypeid-equality-by-subtyping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6827a413c82af4c69b74a5b961b695b854e4ecad/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Ftypeid-equality-by-subtyping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Ftypeid-equality-by-subtyping.stderr?ref=6827a413c82af4c69b74a5b961b695b854e4ecad", "patch": "@@ -0,0 +1,11 @@\n+error: to use a constant of type `TypeId` in a pattern, `TypeId` must be annotated with `#[derive(PartialEq, Eq)]`\n+  --> $DIR/typeid-equality-by-subtyping.rs:18:9\n+   |\n+LL |         WHAT_A_TYPE => 0,\n+   |         ^^^^^^^^^^^\n+   |\n+   = note: the traits must be derived, manual `impl`s are not sufficient\n+   = note: see https://doc.rust-lang.org/stable/std/marker/trait.StructuralEq.html for details\n+\n+error: aborting due to previous error\n+"}, {"sha": "dc2c702d885ace995ab6149b8caf22d39d1dd0fa", "filename": "tests/ui/consts/const_cmp_type_id.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6827a413c82af4c69b74a5b961b695b854e4ecad/tests%2Fui%2Fconsts%2Fconst_cmp_type_id.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6827a413c82af4c69b74a5b961b695b854e4ecad/tests%2Fui%2Fconsts%2Fconst_cmp_type_id.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconsts%2Fconst_cmp_type_id.stderr?ref=6827a413c82af4c69b74a5b961b695b854e4ecad", "patch": "@@ -20,7 +20,6 @@ LL |     assert!(TypeId::of::<u8>() == TypeId::of::<u8>());\n note: impl defined here, but it is not `const`\n   --> $SRC_DIR/core/src/any.rs:LL:COL\n    = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n-   = note: this error originates in the derive macro `PartialEq` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0277]: can't compare `TypeId` with `TypeId` in const contexts\n   --> $DIR/const_cmp_type_id.rs:9:13\n@@ -44,7 +43,6 @@ LL |     assert!(TypeId::of::<()>() != TypeId::of::<u8>());\n note: impl defined here, but it is not `const`\n   --> $SRC_DIR/core/src/any.rs:LL:COL\n    = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n-   = note: this error originates in the derive macro `PartialEq` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0277]: can't compare `TypeId` with `TypeId` in const contexts\n   --> $DIR/const_cmp_type_id.rs:10:22"}, {"sha": "09661d3f3440d60709f86b71fcfe5f16c5591e1d", "filename": "tests/ui/consts/issue-73976-monomorphic.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6827a413c82af4c69b74a5b961b695b854e4ecad/tests%2Fui%2Fconsts%2Fissue-73976-monomorphic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6827a413c82af4c69b74a5b961b695b854e4ecad/tests%2Fui%2Fconsts%2Fissue-73976-monomorphic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconsts%2Fissue-73976-monomorphic.stderr?ref=6827a413c82af4c69b74a5b961b695b854e4ecad", "patch": "@@ -20,7 +20,6 @@ LL |     GetTypeId::<T>::VALUE == GetTypeId::<usize>::VALUE\n note: impl defined here, but it is not `const`\n   --> $SRC_DIR/core/src/any.rs:LL:COL\n    = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n-   = note: this error originates in the derive macro `PartialEq` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to 2 previous errors\n "}]}