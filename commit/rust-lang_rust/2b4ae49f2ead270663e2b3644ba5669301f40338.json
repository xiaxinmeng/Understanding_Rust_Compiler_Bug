{"sha": "2b4ae49f2ead270663e2b3644ba5669301f40338", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiNGFlNDlmMmVhZDI3MDY2M2UyYjM2NDRiYTU2NjkzMDFmNDAzMzg=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-07-29T00:24:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-29T00:24:25Z"}, "message": "Rollup merge of #74891 - lcnr:auto-trait-finder, r=varkor\n\nhandle ConstEquate in rustdoc\n\nfixes #74882\n\nr? @varkor cc @eddyb", "tree": {"sha": "2ae20b66c00fe8601c99e9617006661224ef36f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ae20b66c00fe8601c99e9617006661224ef36f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b4ae49f2ead270663e2b3644ba5669301f40338", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfIMG6CRBK7hj4Ov3rIwAAdHIIAGTGR7ZdANBKgcZWJrrpNZdk\nvpJ5WiupsYToREmMcVZms9NSjir7mCexJCVakoIqp6nVpzXX0tVeDfHx/8YCTm9/\n8qNmGLeXdvEVgtYGZwUHa8mlf+GhLcDt//aDhCBJzqGbYvJB6ski1hprM/LD4xsi\nYxt0iK1FR80DDIIffImRxkupjxpHLjNyGQWaN7tQ5Vc8DczscCRp9s/A/NglwUTn\nyEH1MagOkj1WQ9uMOWifDYH8altw9GQxuLu5rqpJNnqtrR+2+FRWj+CvtjG4jPiK\nJjf74hjMhXfFk/0+qk2NN/xfJZxK8N1vCqf8ERzMWSLgJb+wtZlnN3fvomGmoPc=\n=TrAi\n-----END PGP SIGNATURE-----\n", "payload": "tree 2ae20b66c00fe8601c99e9617006661224ef36f2\nparent 18bb8355df1b7040ff8f48d08426ae3f04d83a17\nparent 2a16bb085e37ea8ada2906c7406546bd0bb526d7\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1595982265 +0900\ncommitter GitHub <noreply@github.com> 1595982265 +0900\n\nRollup merge of #74891 - lcnr:auto-trait-finder, r=varkor\n\nhandle ConstEquate in rustdoc\n\nfixes #74882\n\nr? @varkor cc @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b4ae49f2ead270663e2b3644ba5669301f40338", "html_url": "https://github.com/rust-lang/rust/commit/2b4ae49f2ead270663e2b3644ba5669301f40338", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b4ae49f2ead270663e2b3644ba5669301f40338/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18bb8355df1b7040ff8f48d08426ae3f04d83a17", "url": "https://api.github.com/repos/rust-lang/rust/commits/18bb8355df1b7040ff8f48d08426ae3f04d83a17", "html_url": "https://github.com/rust-lang/rust/commit/18bb8355df1b7040ff8f48d08426ae3f04d83a17"}, {"sha": "2a16bb085e37ea8ada2906c7406546bd0bb526d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a16bb085e37ea8ada2906c7406546bd0bb526d7", "html_url": "https://github.com/rust-lang/rust/commit/2a16bb085e37ea8ada2906c7406546bd0bb526d7"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "05a0c52badb7adb0d17576caa282f9f70cf5d7a5", "filename": "src/librustc_trait_selection/traits/auto_trait.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/2b4ae49f2ead270663e2b3644ba5669301f40338/src%2Flibrustc_trait_selection%2Ftraits%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b4ae49f2ead270663e2b3644ba5669301f40338/src%2Flibrustc_trait_selection%2Ftraits%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fauto_trait.rs?ref=2b4ae49f2ead270663e2b3644ba5669301f40338", "patch": "@@ -802,6 +802,38 @@ impl AutoTraitFinder<'tcx> {\n                         _ => {}\n                     };\n                 }\n+                ty::PredicateAtom::ConstEquate(c1, c2) => {\n+                    let evaluate = |c: &'tcx ty::Const<'tcx>| {\n+                        if let ty::ConstKind::Unevaluated(def, substs, promoted) = c.val {\n+                            match select.infcx().const_eval_resolve(\n+                                obligation.param_env,\n+                                def,\n+                                substs,\n+                                promoted,\n+                                Some(obligation.cause.span),\n+                            ) {\n+                                Ok(val) => Ok(ty::Const::from_value(select.tcx(), val, c.ty)),\n+                                Err(err) => Err(err),\n+                            }\n+                        } else {\n+                            Ok(c)\n+                        }\n+                    };\n+\n+                    match (evaluate(c1), evaluate(c2)) {\n+                        (Ok(c1), Ok(c2)) => {\n+                            match select\n+                                .infcx()\n+                                .at(&obligation.cause, obligation.param_env)\n+                                .eq(c1, c2)\n+                            {\n+                                Ok(_) => (),\n+                                Err(_) => return false,\n+                            }\n+                        }\n+                        _ => return false,\n+                    }\n+                }\n                 _ => panic!(\"Unexpected predicate {:?} {:?}\", ty, predicate),\n             };\n         }"}, {"sha": "6cc02f78c625d622f5f5018420f52a7a2d3094c7", "filename": "src/test/rustdoc/lazy_normalization_consts/const-equate-pred.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2b4ae49f2ead270663e2b3644ba5669301f40338/src%2Ftest%2Frustdoc%2Flazy_normalization_consts%2Fconst-equate-pred.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b4ae49f2ead270663e2b3644ba5669301f40338/src%2Ftest%2Frustdoc%2Flazy_normalization_consts%2Fconst-equate-pred.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Flazy_normalization_consts%2Fconst-equate-pred.rs?ref=2b4ae49f2ead270663e2b3644ba5669301f40338", "patch": "@@ -0,0 +1,18 @@\n+#![crate_name = \"foo\"]\n+#![feature(lazy_normalization_consts)]\n+#![allow(incomplete_features)]\n+\n+// Checking if `Send` is implemented for `Hasher` requires us to evaluate a `ConstEquate` predicate,\n+// which previously caused an ICE.\n+\n+pub struct Hasher<T> {\n+    cv_stack: T,\n+}\n+\n+unsafe impl<T: Default> Send for Hasher<T> {}\n+\n+// @has foo/struct.Foo.html\n+// @has - '//code' 'impl Send for Foo'\n+pub struct Foo {\n+    hasher: Hasher<[u8; 3]>,\n+}"}]}