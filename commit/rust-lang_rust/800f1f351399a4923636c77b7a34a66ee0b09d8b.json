{"sha": "800f1f351399a4923636c77b7a34a66ee0b09d8b", "node_id": "C_kwDOAAsO6NoAKDgwMGYxZjM1MTM5OWE0OTIzNjM2Yzc3YjdhMzRhNjZlZTBiMDlkOGI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-25T19:18:01Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-25T19:26:53Z"}, "message": "Liberate late-bound regions correctly", "tree": {"sha": "a83f56005fe2d17f5604fa925d73c09e317eec17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a83f56005fe2d17f5604fa925d73c09e317eec17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/800f1f351399a4923636c77b7a34a66ee0b09d8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/800f1f351399a4923636c77b7a34a66ee0b09d8b", "html_url": "https://github.com/rust-lang/rust/commit/800f1f351399a4923636c77b7a34a66ee0b09d8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/800f1f351399a4923636c77b7a34a66ee0b09d8b/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95b61d16d4bd2e46b0a110c1bda703f026f0a94f", "url": "https://api.github.com/repos/rust-lang/rust/commits/95b61d16d4bd2e46b0a110c1bda703f026f0a94f", "html_url": "https://github.com/rust-lang/rust/commit/95b61d16d4bd2e46b0a110c1bda703f026f0a94f"}], "stats": {"total": 58, "additions": 56, "deletions": 2}, "files": [{"sha": "3028242781cb0cd45ac8e84ffca49032a9ad8a2c", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/800f1f351399a4923636c77b7a34a66ee0b09d8b/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/800f1f351399a4923636c77b7a34a66ee0b09d8b/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=800f1f351399a4923636c77b7a34a66ee0b09d8b", "patch": "@@ -3758,13 +3758,13 @@ fn hint_missing_borrow<'tcx>(\n     err: &mut Diagnostic,\n ) {\n     let found_args = match found.kind() {\n-        ty::FnPtr(f) => f.inputs().skip_binder().iter(),\n+        ty::FnPtr(f) => infcx.replace_bound_vars_with_placeholders(*f).inputs().iter(),\n         kind => {\n             span_bug!(span, \"found was converted to a FnPtr above but is now {:?}\", kind)\n         }\n     };\n     let expected_args = match expected.kind() {\n-        ty::FnPtr(f) => f.inputs().skip_binder().iter(),\n+        ty::FnPtr(f) => infcx.replace_bound_vars_with_placeholders(*f).inputs().iter(),\n         kind => {\n             span_bug!(span, \"expected was converted to a FnPtr above but is now {:?}\", kind)\n         }"}, {"sha": "3bf6b7bb9b19e484ea0de703d880777df2316433", "filename": "tests/ui/suggestions/late-bound-in-borrow-closure-sugg.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/800f1f351399a4923636c77b7a34a66ee0b09d8b/tests%2Fui%2Fsuggestions%2Flate-bound-in-borrow-closure-sugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/800f1f351399a4923636c77b7a34a66ee0b09d8b/tests%2Fui%2Fsuggestions%2Flate-bound-in-borrow-closure-sugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Flate-bound-in-borrow-closure-sugg.rs?ref=800f1f351399a4923636c77b7a34a66ee0b09d8b", "patch": "@@ -0,0 +1,28 @@\n+use std::cell::RefCell;\n+use std::collections::HashMap;\n+use std::rc::Rc;\n+\n+pub struct Trader<'a> {\n+    closure: Box<dyn Fn(&mut Trader) + 'a>,\n+}\n+\n+impl<'a> Trader<'a> {\n+    pub fn new() -> Self {\n+        Trader {\n+            closure: Box::new(|_| {}),\n+        }\n+    }\n+    pub fn set_closure(&mut self, function: impl Fn(&mut Trader) + 'a) {\n+        //foo\n+    }\n+}\n+\n+fn main() {\n+    let closure = |trader : Trader| {\n+        println!(\"Woooosh!\");\n+    };\n+\n+    let mut trader = Trader::new();\n+    trader.set_closure(closure);\n+    //~^ ERROR type mismatch in closure arguments\n+}"}, {"sha": "4fb5c65235cbb9b45b2f3545a0310dbd9fc531f3", "filename": "tests/ui/suggestions/late-bound-in-borrow-closure-sugg.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/800f1f351399a4923636c77b7a34a66ee0b09d8b/tests%2Fui%2Fsuggestions%2Flate-bound-in-borrow-closure-sugg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/800f1f351399a4923636c77b7a34a66ee0b09d8b/tests%2Fui%2Fsuggestions%2Flate-bound-in-borrow-closure-sugg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Flate-bound-in-borrow-closure-sugg.stderr?ref=800f1f351399a4923636c77b7a34a66ee0b09d8b", "patch": "@@ -0,0 +1,26 @@\n+error[E0631]: type mismatch in closure arguments\n+  --> $DIR/late-bound-in-borrow-closure-sugg.rs:26:24\n+   |\n+LL |     let closure = |trader : Trader| {\n+   |                   ----------------- found signature defined here\n+...\n+LL |     trader.set_closure(closure);\n+   |            ----------- ^^^^^^^ expected due to this\n+   |            |\n+   |            required by a bound introduced by this call\n+   |\n+   = note: expected closure signature `for<'a, 'b> fn(&'a mut Trader<'b>) -> _`\n+              found closure signature `for<'a> fn(Trader<'a>) -> _`\n+note: required by a bound in `Trader::<'a>::set_closure`\n+  --> $DIR/late-bound-in-borrow-closure-sugg.rs:15:50\n+   |\n+LL |     pub fn set_closure(&mut self, function: impl Fn(&mut Trader) + 'a) {\n+   |                                                  ^^^^^^^^^^^^^^^ required by this bound in `Trader::<'a>::set_closure`\n+help: consider borrowing the argument\n+   |\n+LL |     let closure = |trader : &Trader| {\n+   |                             +\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0631`."}]}