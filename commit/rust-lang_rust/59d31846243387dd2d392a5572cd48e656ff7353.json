{"sha": "59d31846243387dd2d392a5572cd48e656ff7353", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5ZDMxODQ2MjQzMzg3ZGQyZDM5MmE1NTcyY2Q0OGU2NTZmZjczNTM=", "commit": {"author": {"name": "Mikhail Modin", "email": "mikhailm1@gmail.com", "date": "2017-11-01T13:21:30Z"}, "committer": {"name": "Mikhail Modin", "email": "mikhailm1@gmail.com", "date": "2017-11-02T06:43:36Z"}, "message": "add one more sample", "tree": {"sha": "aa7a1a8dd816ba5c98f7a90fd342126ac6a0a363", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa7a1a8dd816ba5c98f7a90fd342126ac6a0a363"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59d31846243387dd2d392a5572cd48e656ff7353", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59d31846243387dd2d392a5572cd48e656ff7353", "html_url": "https://github.com/rust-lang/rust/commit/59d31846243387dd2d392a5572cd48e656ff7353", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59d31846243387dd2d392a5572cd48e656ff7353/comments", "author": {"login": "mikhail-m1", "id": 5663581, "node_id": "MDQ6VXNlcjU2NjM1ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/5663581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikhail-m1", "html_url": "https://github.com/mikhail-m1", "followers_url": "https://api.github.com/users/mikhail-m1/followers", "following_url": "https://api.github.com/users/mikhail-m1/following{/other_user}", "gists_url": "https://api.github.com/users/mikhail-m1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikhail-m1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikhail-m1/subscriptions", "organizations_url": "https://api.github.com/users/mikhail-m1/orgs", "repos_url": "https://api.github.com/users/mikhail-m1/repos", "events_url": "https://api.github.com/users/mikhail-m1/events{/privacy}", "received_events_url": "https://api.github.com/users/mikhail-m1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mikhail-m1", "id": 5663581, "node_id": "MDQ6VXNlcjU2NjM1ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/5663581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikhail-m1", "html_url": "https://github.com/mikhail-m1", "followers_url": "https://api.github.com/users/mikhail-m1/followers", "following_url": "https://api.github.com/users/mikhail-m1/following{/other_user}", "gists_url": "https://api.github.com/users/mikhail-m1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikhail-m1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikhail-m1/subscriptions", "organizations_url": "https://api.github.com/users/mikhail-m1/orgs", "repos_url": "https://api.github.com/users/mikhail-m1/repos", "events_url": "https://api.github.com/users/mikhail-m1/events{/privacy}", "received_events_url": "https://api.github.com/users/mikhail-m1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb2867da88f1653d74bcb771445e6d1e3fc1de5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb2867da88f1653d74bcb771445e6d1e3fc1de5b", "html_url": "https://github.com/rust-lang/rust/commit/cb2867da88f1653d74bcb771445e6d1e3fc1de5b"}], "stats": {"total": 74, "additions": 68, "deletions": 6}, "files": [{"sha": "e0015fe7d766be7b3d8910f8f0682f06fb6972d0", "filename": "src/test/mir-opt/match_false_edges.rs", "status": "modified", "additions": 68, "deletions": 6, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/59d31846243387dd2d392a5572cd48e656ff7353/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59d31846243387dd2d392a5572cd48e656ff7353/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.rs?ref=59d31846243387dd2d392a5572cd48e656ff7353", "patch": "@@ -18,12 +18,19 @@ fn guard2(_:i32) -> bool {\n     true\n }\n \n-fn full_tested_match()\n-{\n+fn full_tested_match() {\n     let _ = match Some(42) {\n         Some(x) if guard() => 1 + x,\n         Some(y) => 2 + y,\n-        None => 3\n+        None => 3,\n+    };\n+}\n+\n+fn full_tested_match2() {\n+    let _ = match Some(42) {\n+        Some(x) if guard() => 1 + x,\n+        None => 3,\n+        Some(y) => 2 + y,\n     };\n }\n \n@@ -93,11 +100,66 @@ fn main() {\n //      ...\n //      return;\n //  }\n-//\n-//\n // END rustc.node17.NLL.before.mir\n //\n // START rustc.node40.NLL.before.mir\n+//  bb0: {\n+//      ...\n+//      _2 = std::option::Option<i32>::Some(const 42i32,);\n+//      _5 = discriminant(_2);\n+//      switchInt(_5) -> [0isize: bb4, otherwise: bb3];\n+//  }\n+//  bb1: { // arm1\n+//      StorageLive(_7);\n+//      _7 = _3;\n+//      _1 = Add(const 1i32, _7);\n+//      ...\n+//      goto -> bb11;\n+//  }\n+//  bb2: { // binding3(empty) and arm3\n+//      _1 = const 3i32;\n+//      goto -> bb11;\n+//  }\n+//  bb3: {\n+//      falseEdges -> [real: bb7, imaginary: bb4]; //pre_binding1\n+//  }\n+//  bb4: {\n+//      falseEdges -> [real: bb2, imaginary: bb5]; //pre_binding2\n+//  }\n+//  bb5: {\n+//      falseEdges -> [real: bb10, imaginary: bb6]; //pre_binding3\n+//  }\n+//  bb6: {\n+//      unreachable;\n+//  }\n+//  bb7: { // binding1 and guard\n+//      StorageLive(_3);\n+//      _3 = ((_2 as Some).0: i32);\n+//      StorageLive(_6);\n+//      _6 = const guard() -> bb8;\n+//  }\n+//  bb8: { // end of guard\n+//      switchInt(_6) -> [0u8: bb9, otherwise: bb1];\n+//  }\n+//  bb9: { // to pre_binding2\n+//      falseEdges -> [real: bb5, imaginary: bb4];\n+//  }\n+//  bb10: { // binding2 and arm2\n+//      StorageLive(_4);\n+//      _4 = ((_2 as Some).0: i32);\n+//      StorageLive(_8);\n+//      _8 = _4;\n+//      _1 = Add(const 2i32, _8);\n+//      StorageDead(_8);\n+//      goto -> bb11;\n+//  }\n+//  bb11: {\n+//      ...\n+//      return;\n+//  }\n+// END rustc.node40.NLL.before.mir\n+//\n+// START rustc.node63.NLL.before.mir\n // bb0: {\n //     ...\n //     _2 = std::option::Option<i32>::Some(const 1i32,);\n@@ -171,4 +233,4 @@ fn main() {\n //     ...\n //     return;\n // }\n-// END rustc.node40.NLL.before.mir\n+// END rustc.node63.NLL.before.mir"}]}