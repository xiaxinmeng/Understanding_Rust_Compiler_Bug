{"sha": "710662c8ac88d18ff252718012a69ff96b5343e8", "node_id": "C_kwDOAAsO6NoAKDcxMDY2MmM4YWM4OGQxOGZmMjUyNzE4MDEyYTY5ZmY5NmI1MzQzZTg", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-02-02T11:44:51Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-02-03T17:56:08Z"}, "message": "Remove defaultness from ImplItem.", "tree": {"sha": "2de927558757542d181d2145ef31ef3bc33890a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2de927558757542d181d2145ef31ef3bc33890a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/710662c8ac88d18ff252718012a69ff96b5343e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/710662c8ac88d18ff252718012a69ff96b5343e8", "html_url": "https://github.com/rust-lang/rust/commit/710662c8ac88d18ff252718012a69ff96b5343e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/710662c8ac88d18ff252718012a69ff96b5343e8/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "686663a49e57870c78a4cd047f23a44175fc67a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/686663a49e57870c78a4cd047f23a44175fc67a4", "html_url": "https://github.com/rust-lang/rust/commit/686663a49e57870c78a4cd047f23a44175fc67a4"}], "stats": {"total": 32, "additions": 11, "deletions": 21}, "files": [{"sha": "44ee666b5e9bcf70facca1e67fd8844dabbdfb6f", "filename": "compiler/rustc_ast_lowering/src/item.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/710662c8ac88d18ff252718012a69ff96b5343e8/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710662c8ac88d18ff252718012a69ff96b5343e8/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs?ref=710662c8ac88d18ff252718012a69ff96b5343e8", "patch": "@@ -896,17 +896,13 @@ impl<'hir> LoweringContext<'_, 'hir> {\n             AssocItemKind::MacCall(..) => panic!(\"`TyMac` should have been expanded by now\"),\n         };\n \n-        // Since `default impl` is not yet implemented, this is always true in impls.\n-        let has_value = true;\n-        let (defaultness, _) = self.lower_defaultness(i.kind.defaultness(), has_value);\n         let hir_id = self.lower_node_id(i.id);\n         self.lower_attrs(hir_id, &i.attrs);\n         let item = hir::ImplItem {\n             def_id: hir_id.expect_owner(),\n             ident: self.lower_ident(i.ident),\n             generics,\n             vis: self.lower_visibility(&i.vis),\n-            defaultness,\n             kind,\n             span: self.lower_span(i.span),\n         };"}, {"sha": "840b30623bf355167f7049baa34cc76d567fa7fa", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/710662c8ac88d18ff252718012a69ff96b5343e8/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710662c8ac88d18ff252718012a69ff96b5343e8/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=710662c8ac88d18ff252718012a69ff96b5343e8", "patch": "@@ -2112,7 +2112,6 @@ pub struct ImplItem<'hir> {\n     pub ident: Ident,\n     pub def_id: LocalDefId,\n     pub vis: Visibility<'hir>,\n-    pub defaultness: Defaultness,\n     pub generics: Generics<'hir>,\n     pub kind: ImplItemKind<'hir>,\n     pub span: Span,\n@@ -3304,6 +3303,6 @@ mod size_asserts {\n \n     rustc_data_structures::static_assert_size!(super::Item<'static>, 184);\n     rustc_data_structures::static_assert_size!(super::TraitItem<'static>, 128);\n-    rustc_data_structures::static_assert_size!(super::ImplItem<'static>, 152);\n+    rustc_data_structures::static_assert_size!(super::ImplItem<'static>, 144);\n     rustc_data_structures::static_assert_size!(super::ForeignItem<'static>, 136);\n }"}, {"sha": "9811b0cd89191ef172e62b8064d45ed6305bb460", "filename": "compiler/rustc_hir/src/intravisit.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/710662c8ac88d18ff252718012a69ff96b5343e8/compiler%2Frustc_hir%2Fsrc%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710662c8ac88d18ff252718012a69ff96b5343e8/compiler%2Frustc_hir%2Fsrc%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fintravisit.rs?ref=710662c8ac88d18ff252718012a69ff96b5343e8", "patch": "@@ -1020,12 +1020,10 @@ pub fn walk_trait_item_ref<'v, V: Visitor<'v>>(visitor: &mut V, trait_item_ref:\n \n pub fn walk_impl_item<'v, V: Visitor<'v>>(visitor: &mut V, impl_item: &'v ImplItem<'v>) {\n     // N.B., deliberately force a compilation error if/when new fields are added.\n-    let ImplItem { def_id: _, ident, ref vis, ref defaultness, ref generics, ref kind, span: _ } =\n-        *impl_item;\n+    let ImplItem { def_id: _, ident, ref vis, ref generics, ref kind, span: _ } = *impl_item;\n \n     visitor.visit_ident(ident);\n     visitor.visit_vis(vis);\n-    visitor.visit_defaultness(defaultness);\n     visitor.visit_generics(generics);\n     match *kind {\n         ImplItemKind::Const(ref ty, body) => {"}, {"sha": "7204efc4224583c776fabd6fdd42d1fab02f1af5", "filename": "compiler/rustc_hir/src/stable_hash_impls.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/710662c8ac88d18ff252718012a69ff96b5343e8/compiler%2Frustc_hir%2Fsrc%2Fstable_hash_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710662c8ac88d18ff252718012a69ff96b5343e8/compiler%2Frustc_hir%2Fsrc%2Fstable_hash_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fstable_hash_impls.rs?ref=710662c8ac88d18ff252718012a69ff96b5343e8", "patch": "@@ -164,13 +164,11 @@ impl<HirCtx: crate::HashStableContext> HashStable<HirCtx> for TraitItem<'_> {\n \n impl<HirCtx: crate::HashStableContext> HashStable<HirCtx> for ImplItem<'_> {\n     fn hash_stable(&self, hcx: &mut HirCtx, hasher: &mut StableHasher) {\n-        let ImplItem { def_id: _, ident, ref vis, defaultness, ref generics, ref kind, span } =\n-            *self;\n+        let ImplItem { def_id: _, ident, ref vis, ref generics, ref kind, span } = *self;\n \n         hcx.hash_hir_item_like(|hcx| {\n             ident.name.hash_stable(hcx, hasher);\n             vis.hash_stable(hcx, hasher);\n-            defaultness.hash_stable(hcx, hasher);\n             generics.hash_stable(hcx, hasher);\n             kind.hash_stable(hcx, hasher);\n             span.hash_stable(hcx, hasher);"}, {"sha": "90833ffef952a746cc5501aff87b79ea34e07682", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/710662c8ac88d18ff252718012a69ff96b5343e8/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710662c8ac88d18ff252718012a69ff96b5343e8/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=710662c8ac88d18ff252718012a69ff96b5343e8", "patch": "@@ -923,7 +923,6 @@ impl<'a> State<'a> {\n         self.hardbreak_if_not_bol();\n         self.maybe_print_comment(ii.span.lo());\n         self.print_outer_attributes(self.attrs(ii.hir_id()));\n-        self.print_defaultness(ii.defaultness);\n \n         match ii.kind {\n             hir::ImplItemKind::Const(ref ty, expr) => {"}, {"sha": "3bb55d2663f2a8d08a2f58db92c648e90a8809a3", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/710662c8ac88d18ff252718012a69ff96b5343e8/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710662c8ac88d18ff252718012a69ff96b5343e8/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=710662c8ac88d18ff252718012a69ff96b5343e8", "patch": "@@ -1014,7 +1014,8 @@ impl Clean<Item> for hir::ImplItem<'_> {\n                     {\n                         m.header.constness = hir::Constness::NotConst;\n                     }\n-                    MethodItem(m, Some(self.defaultness))\n+                    let defaultness = cx.tcx.associated_item(self.def_id).defaultness;\n+                    MethodItem(m, Some(defaultness))\n                 }\n                 hir::ImplItemKind::TyAlias(ref hir_ty) => {\n                     let type_ = hir_ty.clean(cx);"}, {"sha": "2fb991b60ef3f7b25aadf73ff8495c345995f0c9", "filename": "src/test/incremental/hashes/trait_impls.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/710662c8ac88d18ff252718012a69ff96b5343e8/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710662c8ac88d18ff252718012a69ff96b5343e8/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs?ref=710662c8ac88d18ff252718012a69ff96b5343e8", "patch": "@@ -358,9 +358,11 @@ pub trait AddDefaultTrait {\n \n #[cfg(any(cfail1,cfail4))]\n impl AddDefaultTrait for Foo {\n-    // -------------------------------------------------------------------------------------------\n+    // ----------------------------------------------------\n     // -------------------------\n-            fn method_name() { }\n+    // ----------------------------------------------------\n+    // -------------------------\n+    fn         method_name() { }\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n@@ -369,9 +371,9 @@ impl AddDefaultTrait for Foo {\n #[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl AddDefaultTrait for Foo {\n-    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"associated_item\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item,optimized_mir\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"associated_item\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     default fn method_name() { }\n }"}, {"sha": "8691148313702e4657a2137b664289b4b1925cb8", "filename": "src/tools/clippy/clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/710662c8ac88d18ff252718012a69ff96b5343e8/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710662c8ac88d18ff252718012a69ff96b5343e8/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=710662c8ac88d18ff252718012a69ff96b5343e8", "patch": "@@ -54,9 +54,6 @@ impl<'tcx> LateLintPass<'tcx> for DeepCodeInspector {\n             ),\n             hir::VisibilityKind::Inherited => println!(\"visibility inherited from outer item\"),\n         }\n-        if item.defaultness.is_default() {\n-            println!(\"default\");\n-        }\n         match item.kind {\n             hir::ImplItemKind::Const(_, body_id) => {\n                 println!(\"associated constant\");"}]}