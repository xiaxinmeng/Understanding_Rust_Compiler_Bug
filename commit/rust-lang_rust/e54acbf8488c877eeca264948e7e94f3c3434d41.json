{"sha": "e54acbf8488c877eeca264948e7e94f3c3434d41", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1NGFjYmY4NDg4Yzg3N2VlY2EyNjQ5NDhlN2U5NGYzYzM0MzRkNDE=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-08-25T01:16:56Z"}, "committer": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-08-25T01:20:17Z"}, "message": "Document the macro parser a little more.", "tree": {"sha": "510ac95462fe92e3771a302f4f36aca13fdf3148", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/510ac95462fe92e3771a302f4f36aca13fdf3148"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e54acbf8488c877eeca264948e7e94f3c3434d41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e54acbf8488c877eeca264948e7e94f3c3434d41", "html_url": "https://github.com/rust-lang/rust/commit/e54acbf8488c877eeca264948e7e94f3c3434d41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e54acbf8488c877eeca264948e7e94f3c3434d41/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9297d1f00a27ac6bb272d5b2b75535697f1e2e4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9297d1f00a27ac6bb272d5b2b75535697f1e2e4b", "html_url": "https://github.com/rust-lang/rust/commit/9297d1f00a27ac6bb272d5b2b75535697f1e2e4b"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "04f0e5f0a83ffbc8dcfd7772221f7fc8442f9069", "filename": "src/libsyntax/ext/tt/earley_parser.rs", "status": "modified", "additions": 60, "deletions": 2, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/e54acbf8488c877eeca264948e7e94f3c3434d41/src%2Flibsyntax%2Fext%2Ftt%2Fearley_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e54acbf8488c877eeca264948e7e94f3c3434d41/src%2Flibsyntax%2Fext%2Ftt%2Fearley_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fearley_parser.rs?ref=e54acbf8488c877eeca264948e7e94f3c3434d41", "patch": "@@ -13,14 +13,72 @@ import ast_util::mk_sp;\n import std::map::{hashmap, uint_hash};\n \n /* This is an Earley-like parser, without support for in-grammar nonterminals,\n-onlyl calling out to the main rust parser for named nonterminals (which it\n+only by calling out to the main rust parser for named nonterminals (which it\n commits to fully when it hits one in a grammar). This means that there are no\n completer or predictor rules, and therefore no need to store one column per\n token: instead, there's a set of current Earley items and a set of next\n ones. Instead of NTs, we have a special case for Kleene star. The big-O, in\n pathological cases, is worse than traditional Earley parsing, but it's an\n easier fit for Macro-by-Example-style rules, and I think the overhead is\n-lower. */\n+lower. (In order to prevent the pathological case, we'd need to lazily\n+construct the resulting `named_match`es at the very end. It'd be a pain,\n+and require more memory to keep around old items, but it would also save\n+overhead)*/\n+\n+/* Quick intro to how the parser works:\n+\n+A 'position' is a dot in the middle of a matcher, usually represented as a\n+dot. For example `\u00b7 a $( a )* a b` is a position, as is `a $( \u00b7 a )* a b`.\n+\n+The parser walks through the input a character at a time, maintaining a list\n+of items consistent with the current position in the input string: `cur_eis`.\n+\n+As it processes them, it fills up `eof_eis` with items that would be valid if\n+the macro invocation is now over, `bb_eis` with items that are waiting on\n+a Rust nonterminal like `$e:expr`, and `next_eis` with items that are waiting\n+on the a particular token. Most of the logic concerns moving the \u00b7 through the\n+repetitions indicated by Kleene stars. It only advances or calls out to the\n+real Rust parser when no `cur_eis` items remain\n+\n+Example: Start parsing `a a a a b` against [\u00b7 a $( a )* a b].\n+\n+Remaining input: `a a a a b`\n+next_eis: [\u00b7 a $( a )* a b]\n+\n+- - - Advance over an `a`. - - -\n+\n+Remaining input: `a a a b`\n+cur: [a \u00b7 $( a )* a b]\n+Descend/Skip (first item).\n+next: [a $( \u00b7 a )* a b]  [a $( a )* \u00b7 a b].\n+\n+- - - Advance over an `a`. - - -\n+\n+Remaining input: `a a b`\n+cur: [a $( a \u00b7 )* a b]  next: [a $( a )* a \u00b7 b]\n+Finish/Repeat (first item)\n+next: [a $( a )* \u00b7 a b]  [a $( \u00b7 a )* a b]  [a $( a )* a \u00b7 b]\n+\n+- - - Advance over an `a`. - - - (this looks exactly like the last step)\n+\n+Remaining input: `a b`\n+cur: [a $( a \u00b7 )* a b]  next: [a $( a )* a \u00b7 b]\n+Finish/Repeat (first item)\n+next: [a $( a )* \u00b7 a b]  [a $( \u00b7 a )* a b]  [a $( a )* a \u00b7 b]\n+\n+- - - Advance over an `a`. - - - (this looks exactly like the last step)\n+\n+Remaining input: `b`\n+cur: [a $( a \u00b7 )* a b]  next: [a $( a )* a \u00b7 b]\n+Finish/Repeat (first item)\n+next: [a $( a )* \u00b7 a b]  [a $( \u00b7 a )* a b]\n+\n+- - - Advance over a `b`. - - -\n+\n+Remaining input: ``\n+eof: [a $( a )* a b \u00b7]\n+\n+ */\n \n \n /* to avoid costly uniqueness checks, we require that `match_seq` always has a"}]}