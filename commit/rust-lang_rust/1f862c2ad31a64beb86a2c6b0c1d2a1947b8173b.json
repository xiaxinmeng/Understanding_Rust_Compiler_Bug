{"sha": "1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b", "node_id": "C_kwDOAAsO6NoAKDFmODYyYzJhZDMxYTY0YmViODZhMmM2YjBjMWQyYTE5NDdiODE3M2I", "commit": {"author": {"name": "naosense", "email": "pingao777@gmail.com", "date": "2022-12-13T08:50:09Z"}, "committer": {"name": "naosense", "email": "pingao777@gmail.coom", "date": "2022-12-13T13:43:16Z"}, "message": "remove assert macro", "tree": {"sha": "93cfc3289a9f408db3f1a78b8c3bf68432eaab4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93cfc3289a9f408db3f1a78b8c3bf68432eaab4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b", "html_url": "https://github.com/rust-lang/rust/commit/1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b/comments", "author": {"login": "naosense", "id": 2225426, "node_id": "MDQ6VXNlcjIyMjU0MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2225426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naosense", "html_url": "https://github.com/naosense", "followers_url": "https://api.github.com/users/naosense/followers", "following_url": "https://api.github.com/users/naosense/following{/other_user}", "gists_url": "https://api.github.com/users/naosense/gists{/gist_id}", "starred_url": "https://api.github.com/users/naosense/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naosense/subscriptions", "organizations_url": "https://api.github.com/users/naosense/orgs", "repos_url": "https://api.github.com/users/naosense/repos", "events_url": "https://api.github.com/users/naosense/events{/privacy}", "received_events_url": "https://api.github.com/users/naosense/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "949d0709bd814c1191ab8c0e6c689db3f7ff07e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/949d0709bd814c1191ab8c0e6c689db3f7ff07e4", "html_url": "https://github.com/rust-lang/rust/commit/949d0709bd814c1191ab8c0e6c689db3f7ff07e4"}], "stats": {"total": 122, "additions": 71, "deletions": 51}, "files": [{"sha": "d9ef7dffa020dbbd6d24715a35129fa72f88bcf2", "filename": "clippy_lints/src/manual_is_ascii_check.rs", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b/clippy_lints%2Fsrc%2Fmanual_is_ascii_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b/clippy_lints%2Fsrc%2Fmanual_is_ascii_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_is_ascii_check.rs?ref=1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b", "patch": "@@ -25,13 +25,9 @@ declare_clippy_lint! {\n     ///     assert!(matches!('2', '0'..='9'));\n     ///     assert!(matches!('x', 'A'..='Z' | 'a'..='z'));\n     ///\n-    ///     assert!((b'0'..=b'9').contains(&b'0'));\n-    ///     assert!((b'a'..=b'z').contains(&b'a'));\n-    ///     assert!((b'A'..=b'Z').contains(&b'A'));\n-    ///\n-    ///     assert!(('0'..='9').contains(&'0'));\n-    ///     assert!(('a'..='z').contains(&'a'));\n-    ///     assert!(('A'..='Z').contains(&'A'));\n+    ///     ('0'..='9').contains(&'0');\n+    ///     ('a'..='z').contains(&'a');\n+    ///     ('A'..='Z').contains(&'A');\n     /// }\n     /// ```\n     /// Use instead:\n@@ -42,13 +38,9 @@ declare_clippy_lint! {\n     ///     assert!('2'.is_ascii_digit());\n     ///     assert!('x'.is_ascii_alphabetic());\n     ///\n-    ///     assert!(b'0'.is_ascii_digit());\n-    ///     assert!(b'a'.is_ascii_lowercase());\n-    ///     assert!(b'A'.is_ascii_uppercase());\n-    ///\n-    ///     assert!('0'.is_ascii_digit());\n-    ///     assert!('a'.is_ascii_lowercase());\n-    ///     assert!('A'.is_ascii_uppercase());\n+    ///     '0'.is_ascii_digit();\n+    ///     'a'.is_ascii_lowercase();\n+    ///     'A'.is_ascii_uppercase();\n     /// }\n     /// ```\n     #[clippy::version = \"1.66.0\"]"}, {"sha": "5b2b44c2fdb2bbaa6c960d482f36e051616267fe", "filename": "tests/ui/manual_is_ascii_check.fixed", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b/tests%2Fui%2Fmanual_is_ascii_check.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b/tests%2Fui%2Fmanual_is_ascii_check.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_is_ascii_check.fixed?ref=1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b", "patch": "@@ -16,13 +16,18 @@ fn main() {\n \n     assert!(matches!('x', 'A'..='Z' | 'a'..='z' | '_'));\n \n-    assert!(b'0'.is_ascii_digit());\n-    assert!(b'a'.is_ascii_lowercase());\n-    assert!(b'A'.is_ascii_uppercase());\n-\n-    assert!('0'.is_ascii_digit());\n-    assert!('a'.is_ascii_lowercase());\n-    assert!('A'.is_ascii_uppercase());\n+    b'0'.is_ascii_digit();\n+    b'a'.is_ascii_lowercase();\n+    b'A'.is_ascii_uppercase();\n+\n+    '0'.is_ascii_digit();\n+    'a'.is_ascii_lowercase();\n+    'A'.is_ascii_uppercase();\n+\n+    let cool_letter = &'g';\n+    cool_letter.is_ascii_digit();\n+    cool_letter.is_ascii_lowercase();\n+    cool_letter.is_ascii_uppercase();\n }\n \n #[clippy::msrv = \"1.23\"]"}, {"sha": "c9433f33a1b6f3891e47a391ad150a784c2bc0db", "filename": "tests/ui/manual_is_ascii_check.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b/tests%2Fui%2Fmanual_is_ascii_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b/tests%2Fui%2Fmanual_is_ascii_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_is_ascii_check.rs?ref=1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b", "patch": "@@ -16,13 +16,18 @@ fn main() {\n \n     assert!(matches!('x', 'A'..='Z' | 'a'..='z' | '_'));\n \n-    assert!((b'0'..=b'9').contains(&b'0'));\n-    assert!((b'a'..=b'z').contains(&b'a'));\n-    assert!((b'A'..=b'Z').contains(&b'A'));\n-\n-    assert!(('0'..='9').contains(&'0'));\n-    assert!(('a'..='z').contains(&'a'));\n-    assert!(('A'..='Z').contains(&'A'));\n+    (b'0'..=b'9').contains(&b'0');\n+    (b'a'..=b'z').contains(&b'a');\n+    (b'A'..=b'Z').contains(&b'A');\n+\n+    ('0'..='9').contains(&'0');\n+    ('a'..='z').contains(&'a');\n+    ('A'..='Z').contains(&'A');\n+\n+    let cool_letter = &'g';\n+    ('0'..='9').contains(cool_letter);\n+    ('a'..='z').contains(cool_letter);\n+    ('A'..='Z').contains(cool_letter);\n }\n \n #[clippy::msrv = \"1.23\"]"}, {"sha": "ee60188506d6fc08182a897d47a9d3c7ca290aa4", "filename": "tests/ui/manual_is_ascii_check.stderr", "status": "modified", "additions": 41, "deletions": 23, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b/tests%2Fui%2Fmanual_is_ascii_check.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b/tests%2Fui%2Fmanual_is_ascii_check.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_is_ascii_check.stderr?ref=1f862c2ad31a64beb86a2c6b0c1d2a1947b8173b", "patch": "@@ -43,64 +43,82 @@ LL |     assert!(matches!('x', 'A'..='Z' | 'a'..='z'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'x'.is_ascii_alphabetic()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:19:13\n+  --> $DIR/manual_is_ascii_check.rs:19:5\n    |\n-LL |     assert!((b'0'..=b'9').contains(&b'0'));\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b'0'.is_ascii_digit()`\n+LL |     (b'0'..=b'9').contains(&b'0');\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b'0'.is_ascii_digit()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:20:13\n+  --> $DIR/manual_is_ascii_check.rs:20:5\n    |\n-LL |     assert!((b'a'..=b'z').contains(&b'a'));\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b'a'.is_ascii_lowercase()`\n+LL |     (b'a'..=b'z').contains(&b'a');\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b'a'.is_ascii_lowercase()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:21:13\n+  --> $DIR/manual_is_ascii_check.rs:21:5\n    |\n-LL |     assert!((b'A'..=b'Z').contains(&b'A'));\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b'A'.is_ascii_uppercase()`\n+LL |     (b'A'..=b'Z').contains(&b'A');\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b'A'.is_ascii_uppercase()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:23:13\n+  --> $DIR/manual_is_ascii_check.rs:23:5\n    |\n-LL |     assert!(('0'..='9').contains(&'0'));\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'0'.is_ascii_digit()`\n+LL |     ('0'..='9').contains(&'0');\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'0'.is_ascii_digit()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:24:13\n+  --> $DIR/manual_is_ascii_check.rs:24:5\n    |\n-LL |     assert!(('a'..='z').contains(&'a'));\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'a'.is_ascii_lowercase()`\n+LL |     ('a'..='z').contains(&'a');\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'a'.is_ascii_lowercase()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:25:13\n+  --> $DIR/manual_is_ascii_check.rs:25:5\n    |\n-LL |     assert!(('A'..='Z').contains(&'A'));\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'A'.is_ascii_uppercase()`\n+LL |     ('A'..='Z').contains(&'A');\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'A'.is_ascii_uppercase()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:37:13\n+  --> $DIR/manual_is_ascii_check.rs:28:5\n+   |\n+LL |     ('0'..='9').contains(cool_letter);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `cool_letter.is_ascii_digit()`\n+\n+error: manual check for common ascii range\n+  --> $DIR/manual_is_ascii_check.rs:29:5\n+   |\n+LL |     ('a'..='z').contains(cool_letter);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `cool_letter.is_ascii_lowercase()`\n+\n+error: manual check for common ascii range\n+  --> $DIR/manual_is_ascii_check.rs:30:5\n+   |\n+LL |     ('A'..='Z').contains(cool_letter);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `cool_letter.is_ascii_uppercase()`\n+\n+error: manual check for common ascii range\n+  --> $DIR/manual_is_ascii_check.rs:42:13\n    |\n LL |     assert!(matches!(b'1', b'0'..=b'9'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b'1'.is_ascii_digit()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:38:13\n+  --> $DIR/manual_is_ascii_check.rs:43:13\n    |\n LL |     assert!(matches!('X', 'A'..='Z'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'X'.is_ascii_uppercase()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:39:13\n+  --> $DIR/manual_is_ascii_check.rs:44:13\n    |\n LL |     assert!(matches!('x', 'A'..='Z' | 'a'..='z'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'x'.is_ascii_alphabetic()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:49:23\n+  --> $DIR/manual_is_ascii_check.rs:54:23\n    |\n LL |     const FOO: bool = matches!('x', '0'..='9');\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'x'.is_ascii_digit()`\n \n-error: aborting due to 17 previous errors\n+error: aborting due to 20 previous errors\n "}]}