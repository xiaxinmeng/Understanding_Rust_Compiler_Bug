{"sha": "e2640a51eee383dcc337e78c233597d18dc78fa2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyNjQwYTUxZWVlMzgzZGNjMzM3ZTc4YzIzMzU5N2QxOGRjNzhmYTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-08T23:22:03Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-09T14:44:23Z"}, "message": "typeck: use .peel_refs() more.", "tree": {"sha": "48088832ad7f9555f1f7cc4eb11fcad1ba587062", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48088832ad7f9555f1f7cc4eb11fcad1ba587062"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2640a51eee383dcc337e78c233597d18dc78fa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2640a51eee383dcc337e78c233597d18dc78fa2", "html_url": "https://github.com/rust-lang/rust/commit/e2640a51eee383dcc337e78c233597d18dc78fa2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2640a51eee383dcc337e78c233597d18dc78fa2/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50a0ec91e066237acd8cc416cd1c0457c8240b96", "url": "https://api.github.com/repos/rust-lang/rust/commits/50a0ec91e066237acd8cc416cd1c0457c8240b96", "html_url": "https://github.com/rust-lang/rust/commit/50a0ec91e066237acd8cc416cd1c0457c8240b96"}], "stats": {"total": 27, "additions": 10, "deletions": 17}, "files": [{"sha": "18b555dc037c2c2853ec862cdecfbeefe7b45107", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 10, "deletions": 17, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e2640a51eee383dcc337e78c233597d18dc78fa2/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2640a51eee383dcc337e78c233597d18dc78fa2/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=e2640a51eee383dcc337e78c233597d18dc78fa2", "patch": "@@ -268,7 +268,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 op.node.as_str(), lhs_ty),\n                             );\n                             let mut suggested_deref = false;\n-                            if let Ref(_, mut rty, _) = lhs_ty.sty {\n+                            if let Ref(_, rty, _) = lhs_ty.sty {\n                                 if {\n                                     self.infcx.type_is_copy_modulo_regions(self.param_env,\n                                                                            rty,\n@@ -279,13 +279,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                             .is_ok()\n                                 } {\n                                     if let Ok(lstring) = source_map.span_to_snippet(lhs_expr.span) {\n-                                        while let Ref(_, rty_inner, _) = rty.sty {\n-                                            rty = rty_inner;\n-                                        }\n                                         let msg = &format!(\n                                             \"`{}=` can be used on '{}', you can dereference `{}`\",\n                                             op.node.as_str(),\n-                                            rty,\n+                                            rty.peel_refs(),\n                                             lstring,\n                                         );\n                                         err.span_suggestion(\n@@ -361,7 +358,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             }\n \n                             let mut suggested_deref = false;\n-                            if let Ref(_, mut rty, _) = lhs_ty.sty {\n+                            if let Ref(_, rty, _) = lhs_ty.sty {\n                                 if {\n                                     self.infcx.type_is_copy_modulo_regions(self.param_env,\n                                                                            rty,\n@@ -372,17 +369,13 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                             .is_ok()\n                                 } {\n                                     if let Ok(lstring) = source_map.span_to_snippet(lhs_expr.span) {\n-                                        while let Ref(_, rty_inner, _) = rty.sty {\n-                                            rty = rty_inner;\n-                                        }\n-                                        let msg = &format!(\n-                                                \"`{}` can be used on '{}', you can \\\n-                                                dereference `{2}`: `*{2}`\",\n-                                                op.node.as_str(),\n-                                                rty,\n-                                                lstring\n-                                        );\n-                                        err.help(msg);\n+                                        err.help(&format!(\n+                                            \"`{}` can be used on '{}', you can \\\n+                                            dereference `{2}`: `*{2}`\",\n+                                            op.node.as_str(),\n+                                            rty.peel_refs(),\n+                                            lstring\n+                                        ));\n                                         suggested_deref = true;\n                                     }\n                                 }"}]}