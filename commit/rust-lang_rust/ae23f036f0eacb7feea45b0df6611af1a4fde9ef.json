{"sha": "ae23f036f0eacb7feea45b0df6611af1a4fde9ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMjNmMDM2ZjBlYWNiN2ZlZWE0NWIwZGY2NjExYWYxYTRmZGU5ZWY=", "commit": {"author": {"name": "Mina Naguib", "email": "minaguib@users.noreply.github.com", "date": "2017-01-03T19:52:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-03T19:52:14Z"}, "message": "Doc fix", "tree": {"sha": "baf5cc0f59dc20852a44ce2381f1aa82b2586eed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/baf5cc0f59dc20852a44ce2381f1aa82b2586eed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae23f036f0eacb7feea45b0df6611af1a4fde9ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae23f036f0eacb7feea45b0df6611af1a4fde9ef", "html_url": "https://github.com/rust-lang/rust/commit/ae23f036f0eacb7feea45b0df6611af1a4fde9ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae23f036f0eacb7feea45b0df6611af1a4fde9ef/comments", "author": {"login": "minaguib", "id": 11226, "node_id": "MDQ6VXNlcjExMjI2", "avatar_url": "https://avatars.githubusercontent.com/u/11226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minaguib", "html_url": "https://github.com/minaguib", "followers_url": "https://api.github.com/users/minaguib/followers", "following_url": "https://api.github.com/users/minaguib/following{/other_user}", "gists_url": "https://api.github.com/users/minaguib/gists{/gist_id}", "starred_url": "https://api.github.com/users/minaguib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minaguib/subscriptions", "organizations_url": "https://api.github.com/users/minaguib/orgs", "repos_url": "https://api.github.com/users/minaguib/repos", "events_url": "https://api.github.com/users/minaguib/events{/privacy}", "received_events_url": "https://api.github.com/users/minaguib/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f62c2920077eb5cb81323142fc5dbe6ae8813c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f62c2920077eb5cb81323142fc5dbe6ae8813c0", "html_url": "https://github.com/rust-lang/rust/commit/8f62c2920077eb5cb81323142fc5dbe6ae8813c0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e225aba2bf813f202e36cd76605556e1cd253338", "filename": "src/libstd/net/tcp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae23f036f0eacb7feea45b0df6611af1a4fde9ef/src%2Flibstd%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae23f036f0eacb7feea45b0df6611af1a4fde9ef/src%2Flibstd%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Ftcp.rs?ref=ae23f036f0eacb7feea45b0df6611af1a4fde9ef", "patch": "@@ -52,7 +52,7 @@ pub struct TcpStream(net_imp::TcpStream);\n ///     // ...\n /// }\n ///\n-/// // accept connections and process them, spawning a new thread for each one\n+/// // accept connections and process them serially\n /// for stream in listener.incoming() {\n ///     match stream {\n ///         Ok(stream) => {"}]}