{"sha": "8fe79bdfdacb2f5914971bd1a0b63b9577afbf6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmZTc5YmRmZGFjYjJmNTkxNDk3MWJkMWEwYjYzYjk1NzdhZmJmNmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-24T02:39:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-24T02:39:02Z"}, "message": "Auto merge of #28607 - remram44:doc-fix-str-pattern, r=alexcrichton\n\nReported by Moonlightning on #rust\r\n> 17:13 EDT < Moonlightning> I think I found a bug in the str::matches() documentation. Was it copied from str::split()? :p\r\n> 17:13 EDT < Moonlightning> Because it says \u201cThe pattern can be a simple `&str`, `char`, or a closure that determines the split.\u201d\r\n\r\nI changed \"determines the split\" to \"determines if a character matches\".\r\n\r\nIt's not super clear, \"determines the split\" is not super clear to begin with, maybe this can be made better? On the other hand following the link to Pattern provides enough details.", "tree": {"sha": "c88db9257618e778ac4a7d19366b7a6e9a0b4130", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c88db9257618e778ac4a7d19366b7a6e9a0b4130"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fe79bdfdacb2f5914971bd1a0b63b9577afbf6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fe79bdfdacb2f5914971bd1a0b63b9577afbf6a", "html_url": "https://github.com/rust-lang/rust/commit/8fe79bdfdacb2f5914971bd1a0b63b9577afbf6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fe79bdfdacb2f5914971bd1a0b63b9577afbf6a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0666b45dd9adef751340e86badbef4daedb2dc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0666b45dd9adef751340e86badbef4daedb2dc2", "html_url": "https://github.com/rust-lang/rust/commit/f0666b45dd9adef751340e86badbef4daedb2dc2"}, {"sha": "30fbf44fbc3d844c3e609bffa239151d5efcbccd", "url": "https://api.github.com/repos/rust-lang/rust/commits/30fbf44fbc3d844c3e609bffa239151d5efcbccd", "html_url": "https://github.com/rust-lang/rust/commit/30fbf44fbc3d844c3e609bffa239151d5efcbccd"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "2f74ab5026e9257073ea25a77ddf2f52be17182d", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8fe79bdfdacb2f5914971bd1a0b63b9577afbf6a/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fe79bdfdacb2f5914971bd1a0b63b9577afbf6a/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=8fe79bdfdacb2f5914971bd1a0b63b9577afbf6a", "patch": "@@ -715,8 +715,7 @@ impl str {\n     /// Returns `None` if it doesn't exist.\n     ///\n     /// The pattern can be a simple `&str`, `char`, or a closure that\n-    /// determines the\n-    /// split.\n+    /// determines if a character matches.\n     ///\n     /// # Examples\n     ///\n@@ -760,7 +759,7 @@ impl str {\n     /// Returns `None` if it doesn't exist.\n     ///\n     /// The pattern can be a simple `&str`, `char`,\n-    /// or a closure that determines the split.\n+    /// or a closure that determines if a character matches.\n     ///\n     /// # Examples\n     ///\n@@ -1096,7 +1095,7 @@ impl str {\n     /// An iterator over the matches of a pattern within `self`.\n     ///\n     /// The pattern can be a simple `&str`, `char`, or a closure that\n-    /// determines the split.\n+    /// determines if a character matches.\n     /// Additional libraries might provide more complex patterns like\n     /// regular expressions.\n     ///\n@@ -1129,7 +1128,7 @@ impl str {\n     /// reverse order.\n     ///\n     /// The pattern can be a simple `&str`, `char`, or a closure that\n-    /// determines the split.\n+    /// determines if a character matches.\n     /// Additional libraries might provide more complex patterns like\n     /// regular expressions.\n     ///\n@@ -1166,8 +1165,7 @@ impl str {\n     /// match are returned.\n     ///\n     /// The pattern can be a simple `&str`, `char`, or a closure that\n-    /// determines\n-    /// the split.\n+    /// determines if a character matches.\n     /// Additional libraries might provide more complex patterns like\n     /// regular expressions.\n     ///\n@@ -1214,8 +1212,7 @@ impl str {\n     /// match are returned.\n     ///\n     /// The pattern can be a simple `&str`, `char`, or a closure that\n-    /// determines\n-    /// the split.\n+    /// determines if a character matches.\n     /// Additional libraries might provide more complex patterns like\n     /// regular expressions.\n     ///\n@@ -1296,7 +1293,7 @@ impl str {\n     /// repeatedly removed.\n     ///\n     /// The pattern can be a simple `char`, or a closure that determines\n-    /// the split.\n+    /// if a character matches.\n     ///\n     /// # Examples\n     ///\n@@ -1326,7 +1323,7 @@ impl str {\n     /// repeatedly removed.\n     ///\n     /// The pattern can be a simple `&str`, `char`, or a closure that\n-    /// determines the split.\n+    /// determines if a character matches.\n     ///\n     /// # Examples\n     ///\n@@ -1346,7 +1343,7 @@ impl str {\n     /// repeatedly removed.\n     ///\n     /// The pattern can be a simple `&str`, `char`, or a closure that\n-    /// determines the split.\n+    /// determines if a character matches.\n     ///\n     /// # Examples\n     ///"}]}