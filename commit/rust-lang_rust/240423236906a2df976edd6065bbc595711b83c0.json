{"sha": "240423236906a2df976edd6065bbc595711b83c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0MDQyMzIzNjkwNmEyZGY5NzZlZGQ2MDY1YmJjNTk1NzExYjgzYzA=", "commit": {"author": {"name": "Jonathan Reem", "email": "jonathan.reem@gmail.com", "date": "2015-01-06T21:59:07Z"}, "committer": {"name": "Jonathan Reem", "email": "jonathan.reem@gmail.com", "date": "2015-01-06T21:59:07Z"}, "message": "Remove the unneeded Sized bound on TypeId creation\n\nThis bound is probably unintentional and is unnecessarily\nconstricting.", "tree": {"sha": "2563d0251e50c93c28a1767ea9104aeb4c41742f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2563d0251e50c93c28a1767ea9104aeb4c41742f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/240423236906a2df976edd6065bbc595711b83c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/240423236906a2df976edd6065bbc595711b83c0", "html_url": "https://github.com/rust-lang/rust/commit/240423236906a2df976edd6065bbc595711b83c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/240423236906a2df976edd6065bbc595711b83c0/comments", "author": {"login": "reem", "id": 4745181, "node_id": "MDQ6VXNlcjQ3NDUxODE=", "avatar_url": "https://avatars.githubusercontent.com/u/4745181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reem", "html_url": "https://github.com/reem", "followers_url": "https://api.github.com/users/reem/followers", "following_url": "https://api.github.com/users/reem/following{/other_user}", "gists_url": "https://api.github.com/users/reem/gists{/gist_id}", "starred_url": "https://api.github.com/users/reem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reem/subscriptions", "organizations_url": "https://api.github.com/users/reem/orgs", "repos_url": "https://api.github.com/users/reem/repos", "events_url": "https://api.github.com/users/reem/events{/privacy}", "received_events_url": "https://api.github.com/users/reem/received_events", "type": "User", "site_admin": false}, "committer": {"login": "reem", "id": 4745181, "node_id": "MDQ6VXNlcjQ3NDUxODE=", "avatar_url": "https://avatars.githubusercontent.com/u/4745181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reem", "html_url": "https://github.com/reem", "followers_url": "https://api.github.com/users/reem/followers", "following_url": "https://api.github.com/users/reem/following{/other_user}", "gists_url": "https://api.github.com/users/reem/gists{/gist_id}", "starred_url": "https://api.github.com/users/reem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reem/subscriptions", "organizations_url": "https://api.github.com/users/reem/orgs", "repos_url": "https://api.github.com/users/reem/repos", "events_url": "https://api.github.com/users/reem/events{/privacy}", "received_events_url": "https://api.github.com/users/reem/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6539cb417f4a7c2d9d1afce44c196578d2b67f38", "url": "https://api.github.com/repos/rust-lang/rust/commits/6539cb417f4a7c2d9d1afce44c196578d2b67f38", "html_url": "https://github.com/rust-lang/rust/commit/6539cb417f4a7c2d9d1afce44c196578d2b67f38"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "fe9100e8a5cc6b78c20ba10ca79787122499443a", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/240423236906a2df976edd6065bbc595711b83c0/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/240423236906a2df976edd6065bbc595711b83c0/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=240423236906a2df976edd6065bbc595711b83c0", "patch": "@@ -200,8 +200,7 @@ extern \"rust-intrinsic\" {\n     /// Gets an identifier which is globally unique to the specified type. This\n     /// function will return the same value for a type regardless of whichever\n     /// crate it is invoked in.\n-    pub fn type_id<T: 'static>() -> TypeId;\n-\n+    pub fn type_id<T: ?Sized + 'static>() -> TypeId;\n \n     /// Create a value initialized to zero.\n     ///\n@@ -552,8 +551,9 @@ pub struct TypeId {\n \n impl TypeId {\n     /// Returns the `TypeId` of the type this generic function has been instantiated with\n-    pub fn of<T: 'static>() -> TypeId {\n+    pub fn of<T: ?Sized + 'static>() -> TypeId {\n         unsafe { type_id::<T>() }\n     }\n+\n     pub fn hash(&self) -> u64 { self.t }\n }"}]}