{"sha": "fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkMzJmZTliYjljYzk3YTVhM2Q5N2FiMGY2YWI2NzNkOGM4MWZhODg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-08-12T08:18:21Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-08-12T09:14:49Z"}, "message": "fix span of stack size error", "tree": {"sha": "58f97b7184903551d43407b9f56658d6fb44027c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58f97b7184903551d43407b9f56658d6fb44027c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88", "html_url": "https://github.com/rust-lang/rust/commit/fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a505e773a54bd40840e80e2038b0f634aed02c77", "url": "https://api.github.com/repos/rust-lang/rust/commits/a505e773a54bd40840e80e2038b0f634aed02c77", "html_url": "https://github.com/rust-lang/rust/commit/a505e773a54bd40840e80e2038b0f634aed02c77"}], "stats": {"total": 41, "additions": 22, "deletions": 19}, "files": [{"sha": "2d0e68d58943fe56ff4b09db84cf39615135508f", "filename": "src/librustc_mir/const_eval/machine.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs?ref=fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88", "patch": "@@ -301,12 +301,16 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n         Ok(())\n     }\n \n-    fn after_stack_push(ecx: &mut InterpCx<'mir, 'tcx, Self>) -> InterpResult<'tcx> {\n-        // Enforce stack size limit.\n-        if !ecx.tcx.sess.recursion_limit().value_within_limit(ecx.stack().len()) {\n+    #[inline(always)]\n+    fn init_frame_extra(\n+        ecx: &mut InterpCx<'mir, 'tcx, Self>,\n+        frame: Frame<'mir, 'tcx>,\n+    ) -> InterpResult<'tcx, Frame<'mir, 'tcx>> {\n+        // Enforce stack size limit. Add 1 because this is run before the new frame is pushed.\n+        if !ecx.tcx.sess.recursion_limit().value_within_limit(ecx.stack().len() + 1) {\n             throw_exhaust!(StackFrameLimitReached)\n         } else {\n-            Ok(())\n+            Ok(frame)\n         }\n     }\n "}, {"sha": "5cab4ba37e3a5be0e4e016c15cc088cbf93acff8", "filename": "src/librustc_mir/interpret/machine.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs?ref=fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88", "patch": "@@ -409,12 +409,4 @@ pub macro compile_time_machine(<$mir: lifetime, $tcx: lifetime>) {\n     ) -> Self::PointerTag {\n         ()\n     }\n-\n-    #[inline(always)]\n-    fn init_frame_extra(\n-        _ecx: &mut InterpCx<$mir, $tcx, Self>,\n-        frame: Frame<$mir, $tcx>,\n-    ) -> InterpResult<$tcx, Frame<$mir, $tcx>> {\n-        Ok(frame)\n-    }\n }"}, {"sha": "3b39d5f66b78fa81d4135acbe070e785bcc1384a", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88", "patch": "@@ -281,6 +281,14 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for ConstPropMachine<'mir, 'tcx>\n         Ok(())\n     }\n \n+    #[inline(always)]\n+    fn init_frame_extra(\n+        _ecx: &mut InterpCx<'mir, 'tcx, Self>,\n+        frame: Frame<'mir, 'tcx>,\n+    ) -> InterpResult<'tcx, Frame<'mir, 'tcx>> {\n+        Ok(frame)\n+    }\n+\n     #[inline(always)]\n     fn stack(\n         ecx: &'a InterpCx<'mir, 'tcx, Self>,"}, {"sha": "15436f9c1b2cfa0cd8ecf1e308396658cb14b984", "filename": "src/test/ui/consts/uninhabited-const-issue-61744.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.rs?ref=fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88", "patch": "@@ -1,11 +1,11 @@\n // build-fail\n \n pub const unsafe fn fake_type<T>() -> T {\n-    hint_unreachable() //~ ERROR evaluation of constant value failed\n+    hint_unreachable()\n }\n \n pub const unsafe fn hint_unreachable() -> ! {\n-    fake_type()\n+    fake_type() //~ ERROR evaluation of constant value failed\n }\n \n trait Const {"}, {"sha": "024f9782d4a67efc627777fe110e9d83dba174e7", "filename": "src/test/ui/consts/uninhabited-const-issue-61744.stderr", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.stderr?ref=fd32fe9bb9cc97a5a3d97ab0f6ab673d8c81fa88", "patch": "@@ -1,11 +1,9 @@\n error[E0080]: evaluation of constant value failed\n-  --> $DIR/uninhabited-const-issue-61744.rs:4:5\n+  --> $DIR/uninhabited-const-issue-61744.rs:8:5\n    |\n LL |     hint_unreachable()\n-   |     ^^^^^^^^^^^^^^^^^^\n+   |     ------------------\n    |     |\n-   |     reached the configured maximum number of stack frames\n-   |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n@@ -72,8 +70,9 @@ LL |     hint_unreachable()\n    |     inside `fake_type::<i32>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n ...\n LL |     fake_type()\n-   |     -----------\n+   |     ^^^^^^^^^^^\n    |     |\n+   |     reached the configured maximum number of stack frames\n    |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5"}]}