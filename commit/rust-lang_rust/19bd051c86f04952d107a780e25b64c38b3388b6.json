{"sha": "19bd051c86f04952d107a780e25b64c38b3388b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5YmQwNTFjODZmMDQ5NTJkMTA3YTc4MGUyNWI2NGMzOGIzMzg4YjY=", "commit": {"author": {"name": "Doug Goldstein", "email": "cardoe@cardoe.com", "date": "2015-11-16T23:01:58Z"}, "committer": {"name": "Doug Goldstein", "email": "cardoe@cardoe.com", "date": "2015-11-16T23:07:45Z"}, "message": "mk/platform: support i486 and i586 target CHOST\n\nOn distros that use i486 or i586 in their CHOST, Rust will fail to build\nbecause it is not handling i486 or i586 like i686 is handled. This\nchanges the match to do work for all instances of i?86 instead of just\ni686. The Yocto Project still uses i586 as a target.\n\nSigned-off-by: Doug Goldstein <cardoe@cardoe.com>", "tree": {"sha": "725c2aaec8aff422f797346d43e8a3c2e37dce05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/725c2aaec8aff422f797346d43e8a3c2e37dce05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19bd051c86f04952d107a780e25b64c38b3388b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19bd051c86f04952d107a780e25b64c38b3388b6", "html_url": "https://github.com/rust-lang/rust/commit/19bd051c86f04952d107a780e25b64c38b3388b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19bd051c86f04952d107a780e25b64c38b3388b6/comments", "author": {"login": "cardoe", "id": 8839, "node_id": "MDQ6VXNlcjg4Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cardoe", "html_url": "https://github.com/cardoe", "followers_url": "https://api.github.com/users/cardoe/followers", "following_url": "https://api.github.com/users/cardoe/following{/other_user}", "gists_url": "https://api.github.com/users/cardoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/cardoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cardoe/subscriptions", "organizations_url": "https://api.github.com/users/cardoe/orgs", "repos_url": "https://api.github.com/users/cardoe/repos", "events_url": "https://api.github.com/users/cardoe/events{/privacy}", "received_events_url": "https://api.github.com/users/cardoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cardoe", "id": 8839, "node_id": "MDQ6VXNlcjg4Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cardoe", "html_url": "https://github.com/cardoe", "followers_url": "https://api.github.com/users/cardoe/followers", "following_url": "https://api.github.com/users/cardoe/following{/other_user}", "gists_url": "https://api.github.com/users/cardoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/cardoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cardoe/subscriptions", "organizations_url": "https://api.github.com/users/cardoe/orgs", "repos_url": "https://api.github.com/users/cardoe/repos", "events_url": "https://api.github.com/users/cardoe/events{/privacy}", "received_events_url": "https://api.github.com/users/cardoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3042fedb4f50640e2c9a02297c5ce9a1f3ffaa5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3042fedb4f50640e2c9a02297c5ce9a1f3ffaa5a", "html_url": "https://github.com/rust-lang/rust/commit/3042fedb4f50640e2c9a02297c5ce9a1f3ffaa5a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5faa3b15e2ef67965aaf8e5e92444698d77cbd05", "filename": "mk/platform.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19bd051c86f04952d107a780e25b64c38b3388b6/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/19bd051c86f04952d107a780e25b64c38b3388b6/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=19bd051c86f04952d107a780e25b64c38b3388b6", "patch": "@@ -14,7 +14,7 @@\n # would create a variable HOST_i686-darwin-macos with the value\n # i386.\n define DEF_HOST_VAR\n-  HOST_$(1) = $(subst i686,i386,$(word 1,$(subst -, ,$(1))))\n+  HOST_$(1) = $(patsubst i%86,i386,$(word 1,$(subst -, ,$(1))))\n endef\n $(foreach t,$(CFG_TARGET),$(eval $(call DEF_HOST_VAR,$(t))))\n $(foreach t,$(CFG_TARGET),$(info cfg: host for $(t) is $(HOST_$(t))))"}]}