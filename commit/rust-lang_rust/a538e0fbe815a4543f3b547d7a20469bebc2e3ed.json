{"sha": "a538e0fbe815a4543f3b547d7a20469bebc2e3ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1MzhlMGZiZTgxNWE0NTQzZjNiNTQ3ZDdhMjA0NjliZWJjMmUzZWQ=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-07-30T12:04:41Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-07-30T12:04:41Z"}, "message": "Add workaround for changing sysroot paths", "tree": {"sha": "fb8e5fbd8cf1d54109b3a88c214488e2d8ce3cce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb8e5fbd8cf1d54109b3a88c214488e2d8ce3cce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a538e0fbe815a4543f3b547d7a20469bebc2e3ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a538e0fbe815a4543f3b547d7a20469bebc2e3ed", "html_url": "https://github.com/rust-lang/rust/commit/a538e0fbe815a4543f3b547d7a20469bebc2e3ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a538e0fbe815a4543f3b547d7a20469bebc2e3ed/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be803efb7c7ba257716fcc97c57ecfd07e278b07", "url": "https://api.github.com/repos/rust-lang/rust/commits/be803efb7c7ba257716fcc97c57ecfd07e278b07", "html_url": "https://github.com/rust-lang/rust/commit/be803efb7c7ba257716fcc97c57ecfd07e278b07"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "9e23b5805a1a61491f8e93ea6ac3663478fec40d", "filename": "crates/ra_project_model/src/sysroot.rs", "status": "modified", "additions": 34, "deletions": 8, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/a538e0fbe815a4543f3b547d7a20469bebc2e3ed/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a538e0fbe815a4543f3b547d7a20469bebc2e3ed/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs?ref=a538e0fbe815a4543f3b547d7a20469bebc2e3ed", "patch": "@@ -54,13 +54,24 @@ impl Sysroot {\n         let src = get_or_install_rust_src(cargo_toml)?;\n         let mut sysroot = Sysroot { crates: Arena::default() };\n         for name in SYSROOT_CRATES.trim().lines() {\n+            // FIXME: remove this path when 1.47 comes out\n+            // https://github.com/rust-lang/rust/pull/73265\n             let root = src.join(format!(\"lib{}\", name)).join(\"lib.rs\");\n             if root.exists() {\n                 sysroot.crates.alloc(SysrootCrateData {\n                     name: name.into(),\n                     root,\n                     deps: Vec::new(),\n                 });\n+            } else {\n+                let root = src.join(name).join(\"src/lib.rs\");\n+                if root.exists() {\n+                    sysroot.crates.alloc(SysrootCrateData {\n+                        name: name.into(),\n+                        root,\n+                        deps: Vec::new(),\n+                    });\n+                }\n             }\n         }\n         if let Some(std) = sysroot.std() {\n@@ -94,23 +105,38 @@ fn get_or_install_rust_src(cargo_toml: &AbsPath) -> Result<AbsPathBuf> {\n     rustc.current_dir(current_dir).args(&[\"--print\", \"sysroot\"]);\n     let stdout = utf8_stdout(rustc)?;\n     let sysroot_path = AbsPath::assert(Path::new(stdout.trim()));\n-    let src_path = sysroot_path.join(\"lib/rustlib/src/rust/src\");\n-\n-    if !src_path.exists() {\n+    let mut src = get_rust_src(sysroot_path);\n+    if src.is_none() {\n         let mut rustup = Command::new(ra_toolchain::rustup());\n         rustup.current_dir(current_dir).args(&[\"component\", \"add\", \"rust-src\"]);\n         utf8_stdout(rustup)?;\n+        src = get_rust_src(sysroot_path);\n     }\n-    if !src_path.exists() {\n-        bail!(\n+    match src {\n+        Some(r) => Ok(r),\n+        None => bail!(\n             \"can't load standard library from sysroot\\n\\\n             {}\\n\\\n             (discovered via `rustc --print sysroot`)\\n\\\n             try running `rustup component add rust-src` or set `RUST_SRC_PATH`\",\n-            src_path.display(),\n-        )\n+            sysroot_path.display(),\n+        ),\n+    }\n+}\n+\n+fn get_rust_src(sysroot_path: &AbsPath) -> Option<AbsPathBuf> {\n+    // try the new path first since the old one still exists\n+    let mut src_path = sysroot_path.join(\"lib/rustlib/src/rust/library\");\n+    if !src_path.exists() {\n+        // FIXME: remove this path when 1.47 comes out\n+        // https://github.com/rust-lang/rust/pull/73265\n+        src_path = sysroot_path.join(\"lib/rustlib/src/rust/src\");\n+    }\n+    if src_path.exists() {\n+        Some(src_path)\n+    } else {\n+        None\n     }\n-    Ok(src_path)\n }\n \n impl SysrootCrateData {"}]}