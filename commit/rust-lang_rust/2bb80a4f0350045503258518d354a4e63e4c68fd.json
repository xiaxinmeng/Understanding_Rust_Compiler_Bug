{"sha": "2bb80a4f0350045503258518d354a4e63e4c68fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiYjgwYTRmMDM1MDA0NTUwMzI1ODUxOGQzNTRhNGU2M2U0YzY4ZmQ=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-10-10T18:37:20Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-10-10T18:39:57Z"}, "message": "Also replace the associated types with iter", "tree": {"sha": "b9b9e8283753f469177797dac60c76fc89a8bcd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9b9e8283753f469177797dac60c76fc89a8bcd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bb80a4f0350045503258518d354a4e63e4c68fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bb80a4f0350045503258518d354a4e63e4c68fd", "html_url": "https://github.com/rust-lang/rust/commit/2bb80a4f0350045503258518d354a4e63e4c68fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bb80a4f0350045503258518d354a4e63e4c68fd/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a72b7bccde54d901f3d89300777e0685790aefd", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a72b7bccde54d901f3d89300777e0685790aefd", "html_url": "https://github.com/rust-lang/rust/commit/9a72b7bccde54d901f3d89300777e0685790aefd"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "9aaa280c8c3ba7c7d35c94111cb1ebc1bc155a16", "filename": "crates/hir/src/code_model.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2bb80a4f0350045503258518d354a4e63e4c68fd/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bb80a4f0350045503258518d354a4e63e4c68fd/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=2bb80a4f0350045503258518d354a4e63e4c68fd", "patch": "@@ -1372,7 +1372,7 @@ impl Type {\n         r#trait: Trait,\n         args: &[Type],\n         alias: TypeAlias,\n-    ) -> Option<Ty> {\n+    ) -> Option<Type> {\n         let subst = Substs::build_for_def(db, r#trait.id)\n             .push(self.ty.value.clone())\n             .fill(args.iter().map(|t| t.ty.value.clone()))\n@@ -1393,6 +1393,10 @@ impl Type {\n             Solution::Unique(SolutionVariables(subst)) => subst.value.first().cloned(),\n             Solution::Ambig(_) => None,\n         }\n+        .map(|ty| Type {\n+            krate: self.krate,\n+            ty: InEnvironment { value: ty, environment: Arc::clone(&self.ty.environment) },\n+        })\n     }\n \n     pub fn is_copy(&self, db: &dyn HirDatabase) -> bool {"}, {"sha": "2ed84095da1960957402a500cff06bedeb89e07a", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2bb80a4f0350045503258518d354a4e63e4c68fd/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bb80a4f0350045503258518d354a4e63e4c68fd/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=2bb80a4f0350045503258518d354a4e63e4c68fd", "patch": "@@ -228,17 +228,20 @@ fn hint_iterator(\n             _ => None,\n         })?;\n         if let Some(ty) = ty.normalize_trait_assoc_type(db, iter_trait, &[], assoc_type_item) {\n-            // TODO kb also check for the iterator impls for this ty\n-            dbg!(ty.display(db).to_string());\n             const LABEL_START: &str = \"impl Iterator<Item = \";\n             const LABEL_END: &str = \">\";\n \n-            let ty_display = ty.display_truncated(\n-                db,\n-                config\n-                    .max_length\n-                    .map(|len| len.saturating_sub(LABEL_START.len() + LABEL_END.len())),\n-            );\n+            let ty_display = hint_iterator(sema, config, &ty)\n+                .map(|assoc_type_impl| assoc_type_impl.to_string())\n+                .unwrap_or_else(|| {\n+                    ty.display_truncated(\n+                        db,\n+                        config\n+                            .max_length\n+                            .map(|len| len.saturating_sub(LABEL_START.len() + LABEL_END.len())),\n+                    )\n+                    .to_string()\n+                });\n             return Some(format!(\"{}{}{}\", LABEL_START, ty_display, LABEL_END).into());\n         }\n     }\n@@ -1169,7 +1172,7 @@ fn main() {\n             InlayHintsConfig {\n                 parameter_hints: false,\n                 type_hints: true,\n-                chaining_hints: true,\n+                chaining_hints: false,\n                 max_length: None,\n             },\n             r#\"\n@@ -1193,8 +1196,8 @@ fn main() {\n     let mut some_iter = SomeIter::new();\n       //^^^^^^^^^^^^^ SomeIter<Take<Repeat<i32>>>\n       some_iter.push(iter::repeat(2).take(2));\n-    let zz = some_iter.take(2);\n-      //^^ impl Iterator<Item = Take<Repeat<i32>>>\n+    let iter_of_iters = some_iter.take(2);\n+      //^^^^^^^^^^^^^ impl Iterator<Item = impl Iterator<Item = i32>>\n }\n \"#,\n         );"}]}