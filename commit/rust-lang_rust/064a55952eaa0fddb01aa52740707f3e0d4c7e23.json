{"sha": "064a55952eaa0fddb01aa52740707f3e0d4c7e23", "node_id": "C_kwDOAAsO6NoAKDA2NGE1NTk1MmVhYTBmZGRiMDFhYTUyNzQwNzA3ZjNlMGQ0YzdlMjM", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-03-29T21:08:10Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-03-29T21:08:10Z"}, "message": "Fix `x doc --stage 0 compiler`\n\nEric figured out the fix to this almost 2 years ago, I just didn't read his comment carefully enough at the timme.\nThe issue was that fake rustc and fake rustdoc were inconsistent about when they passed `--sysroot` to the real compiler.\nChange them to consistently only pass it when `--target` is present.", "tree": {"sha": "51d3dd129412040cda23124fa1462c2fd30adf7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51d3dd129412040cda23124fa1462c2fd30adf7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/064a55952eaa0fddb01aa52740707f3e0d4c7e23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/064a55952eaa0fddb01aa52740707f3e0d4c7e23", "html_url": "https://github.com/rust-lang/rust/commit/064a55952eaa0fddb01aa52740707f3e0d4c7e23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/064a55952eaa0fddb01aa52740707f3e0d4c7e23/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11909e3588319235e28e99294e17cca11db1d7e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/11909e3588319235e28e99294e17cca11db1d7e2", "html_url": "https://github.com/rust-lang/rust/commit/11909e3588319235e28e99294e17cca11db1d7e2"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "4bba2eb4507440ed07d6cb9242dfcdba33964446", "filename": "src/bootstrap/bin/rustdoc.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/064a55952eaa0fddb01aa52740707f3e0d4c7e23/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/064a55952eaa0fddb01aa52740707f3e0d4c7e23/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustdoc.rs?ref=064a55952eaa0fddb01aa52740707f3e0d4c7e23", "patch": "@@ -15,6 +15,10 @@ fn main() {\n     let libdir = env::var_os(\"RUSTDOC_LIBDIR\").expect(\"RUSTDOC_LIBDIR was not set\");\n     let sysroot = env::var_os(\"RUSTC_SYSROOT\").expect(\"RUSTC_SYSROOT was not set\");\n \n+    // Detect whether or not we're a build script depending on whether --target\n+    // is passed (a bit janky...)\n+    let target = args.windows(2).find(|w| &*w[0] == \"--target\").and_then(|w| w[1].to_str());\n+\n     use std::str::FromStr;\n \n     let verbose = match env::var(\"RUSTC_VERBOSE\") {\n@@ -26,10 +30,18 @@ fn main() {\n     dylib_path.insert(0, PathBuf::from(libdir.clone()));\n \n     let mut cmd = Command::new(rustdoc);\n-    cmd.args(&args)\n-        .arg(\"--sysroot\")\n-        .arg(&sysroot)\n-        .env(dylib_path_var(), env::join_paths(&dylib_path).unwrap());\n+\n+    if target.is_some() {\n+        // The stage0 compiler has a special sysroot distinct from what we\n+        // actually downloaded, so we just always pass the `--sysroot` option,\n+        // unless one is already set.\n+        if !args.iter().any(|arg| arg == \"--sysroot\") {\n+            cmd.arg(\"--sysroot\").arg(&sysroot);\n+        }\n+    }\n+\n+    cmd.args(&args);\n+    cmd.env(dylib_path_var(), env::join_paths(&dylib_path).unwrap());\n \n     // Force all crates compiled by this compiler to (a) be unstable and (b)\n     // allow the `rustc_private` feature to link to other unstable crates"}]}