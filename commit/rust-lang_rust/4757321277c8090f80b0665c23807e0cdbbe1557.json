{"sha": "4757321277c8090f80b0665c23807e0cdbbe1557", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NTczMjEyNzdjODA5MGY4MGIwNjY1YzIzODA3ZTBjZGJiZTE1NTc=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2018-03-21T23:32:42Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2018-03-21T23:33:18Z"}, "message": "Don't index a string with `chars().count()`", "tree": {"sha": "a769936926725cb0d0d5b6461cbf4f41408b1ade", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a769936926725cb0d0d5b6461cbf4f41408b1ade"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4757321277c8090f80b0665c23807e0cdbbe1557", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4757321277c8090f80b0665c23807e0cdbbe1557", "html_url": "https://github.com/rust-lang/rust/commit/4757321277c8090f80b0665c23807e0cdbbe1557", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4757321277c8090f80b0665c23807e0cdbbe1557/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55162239007a1514dd9c5fe99c377c1929be1039", "url": "https://api.github.com/repos/rust-lang/rust/commits/55162239007a1514dd9c5fe99c377c1929be1039", "html_url": "https://github.com/rust-lang/rust/commit/55162239007a1514dd9c5fe99c377c1929be1039"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "167bbe29408616ddc8c5fb2234fedfb53cf15281", "filename": "src/attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4757321277c8090f80b0665c23807e0cdbbe1557/src%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4757321277c8090f80b0665c23807e0cdbbe1557/src%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fattr.rs?ref=4757321277c8090f80b0665c23807e0cdbbe1557", "patch": "@@ -167,7 +167,7 @@ impl Rewrite for ast::NestedMetaItem {\n \n fn has_newlines_before_after_comment(comment: &str) -> (&str, &str) {\n     // Look at before and after comment and see if there are any empty lines.\n-    let comment_begin = comment.chars().position(|c| c == '/');\n+    let comment_begin = comment.find('/');\n     let len = comment_begin.unwrap_or_else(|| comment.len());\n     let mlb = count_newlines(&comment[..len]) > 1;\n     let mla = if comment_begin.is_none() {"}, {"sha": "05b423d1898d4a3458459695a81af49595482466", "filename": "src/comment.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4757321277c8090f80b0665c23807e0cdbbe1557/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4757321277c8090f80b0665c23807e0cdbbe1557/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=4757321277c8090f80b0665c23807e0cdbbe1557", "patch": "@@ -187,7 +187,7 @@ pub fn combine_strs_with_missing_comments(\n     // expression and the second expression or the missing comment. We will preserve the original\n     // layout whenever possible.\n     let original_snippet = context.snippet(span);\n-    let prefer_same_line = if let Some(pos) = original_snippet.chars().position(|c| c == '/') {\n+    let prefer_same_line = if let Some(pos) = original_snippet.find('/') {\n         !original_snippet[..pos].contains('\\n')\n     } else {\n         !original_snippet.contains('\\n')\n@@ -523,7 +523,7 @@ pub fn recover_missing_comment_in_span(\n         Some(String::new())\n     } else {\n         let missing_snippet = context.snippet(span);\n-        let pos = missing_snippet.chars().position(|c| c == '/').unwrap_or(0);\n+        let pos = missing_snippet.find('/').unwrap_or(0);\n         // 1 = ` `\n         let total_width = missing_comment.len() + used_width + 1;\n         let force_new_line_before_comment ="}, {"sha": "ad7babca118109a3278f94880bf0c98afb64b761", "filename": "src/issues.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4757321277c8090f80b0665c23807e0cdbbe1557/src%2Fissues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4757321277c8090f80b0665c23807e0cdbbe1557/src%2Fissues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fissues.rs?ref=4757321277c8090f80b0665c23807e0cdbbe1557", "patch": "@@ -227,13 +227,13 @@ fn find_unnumbered_issue() {\n         let mut seeker = BadIssueSeeker::new(ReportTactic::Unnumbered, ReportTactic::Unnumbered);\n         assert_eq!(\n             Some(failing_pos),\n-            text.chars().position(|c| seeker.inspect(c).is_some())\n+            text.find(|c| seeker.inspect(c).is_some())\n         );\n     }\n \n     fn check_pass(text: &str) {\n         let mut seeker = BadIssueSeeker::new(ReportTactic::Unnumbered, ReportTactic::Unnumbered);\n-        assert_eq!(None, text.chars().position(|c| seeker.inspect(c).is_some()));\n+        assert_eq!(None, text.find(|c| seeker.inspect(c).is_some()));\n     }\n \n     check_fail(\"TODO\\n\", 4);"}, {"sha": "0ef264b7f160592bec56f1eabad6cb9d88107170", "filename": "src/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4757321277c8090f80b0665c23807e0cdbbe1557/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4757321277c8090f80b0665c23807e0cdbbe1557/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=4757321277c8090f80b0665c23807e0cdbbe1557", "patch": "@@ -977,7 +977,7 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n             result.push_str(&where_clause_str);\n         } else {\n             let item_snippet = context.snippet(item.span);\n-            if let Some(lo) = item_snippet.chars().position(|c| c == '/') {\n+            if let Some(lo) = item_snippet.find('/') {\n                 // 1 = `{`\n                 let comment_hi = body_lo - BytePos(1);\n                 let comment_lo = item.span.lo() + BytePos(lo as u32);"}, {"sha": "b2ed894687945ad86de27439c0c9160f8a468fed", "filename": "src/lib.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4757321277c8090f80b0665c23807e0cdbbe1557/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4757321277c8090f80b0665c23807e0cdbbe1557/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=4757321277c8090f80b0665c23807e0cdbbe1557", "patch": "@@ -153,12 +153,14 @@ impl FormattingError {\n         match self.kind {\n             ErrorKind::LineOverflow(found, max) => (max, found - max),\n             ErrorKind::TrailingWhitespace => {\n-                let trailing_ws_len = self.line_buffer\n-                    .chars()\n-                    .rev()\n-                    .take_while(|c| c.is_whitespace())\n-                    .count();\n-                (self.line_buffer.len() - trailing_ws_len, trailing_ws_len)\n+                let trailing_ws_start = self.line_buffer\n+                    .rfind(|c: char| !c.is_whitespace())\n+                    .map(|pos| pos + 1)\n+                    .unwrap_or(0);\n+                (\n+                    trailing_ws_start,\n+                    self.line_buffer.len() - trailing_ws_start,\n+                )\n             }\n             _ => unreachable!(),\n         }"}]}