{"sha": "cb5e94bb62308735612c9102e8ca6ee38678db12", "node_id": "C_kwDOAAsO6NoAKGNiNWU5NGJiNjIzMDg3MzU2MTJjOTEwMmU4Y2E2ZWUzODY3OGRiMTI", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-07-10T22:05:19Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-07-10T22:34:22Z"}, "message": "Remove box syntax from doctest.rs\n\nDoctests are fairly cold code, so even if there\nis a regression, which i doubt, it won't matter.", "tree": {"sha": "a78634df461c3748864a161a6c029b43bd81f132", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a78634df461c3748864a161a6c029b43bd81f132"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb5e94bb62308735612c9102e8ca6ee38678db12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb5e94bb62308735612c9102e8ca6ee38678db12", "html_url": "https://github.com/rust-lang/rust/commit/cb5e94bb62308735612c9102e8ca6ee38678db12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb5e94bb62308735612c9102e8ca6ee38678db12/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94a09232ff8f598d0e38aaa26f8abb89779665bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/94a09232ff8f598d0e38aaa26f8abb89779665bd", "html_url": "https://github.com/rust-lang/rust/commit/94a09232ff8f598d0e38aaa26f8abb89779665bd"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "6b25fbebdef42f0ee1070e36b711654838c0ab06", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cb5e94bb62308735612c9102e8ca6ee38678db12/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb5e94bb62308735612c9102e8ca6ee38678db12/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=cb5e94bb62308735612c9102e8ca6ee38678db12", "patch": "@@ -103,7 +103,7 @@ pub(crate) fn run(options: RustdocOptions) -> Result<(), ErrorGuaranteed> {\n         diagnostic_output: DiagnosticOutput::Default,\n         lint_caps,\n         parse_sess_created: None,\n-        register_lints: Some(box crate::lint::register_lints),\n+        register_lints: Some(Box::new(crate::lint::register_lints)),\n         override_queries: None,\n         make_codegen_backend: None,\n         registry: rustc_driver::diagnostics_registry(),\n@@ -556,7 +556,7 @@ pub(crate) fn make_test(\n             .supports_color();\n \n             let emitter = EmitterWriter::new(\n-                box io::sink(),\n+                Box::new(io::sink()),\n                 None,\n                 None,\n                 fallback_bundle,\n@@ -568,7 +568,7 @@ pub(crate) fn make_test(\n             );\n \n             // FIXME(misdreavus): pass `-Z treat-err-as-bug` to the doctest parser\n-            let handler = Handler::with_emitter(false, None, box emitter);\n+            let handler = Handler::with_emitter(false, None, Box::new(emitter));\n             let sess = ParseSess::with_span_handler(handler, sm);\n \n             let mut found_main = false;\n@@ -1005,7 +1005,7 @@ impl Tester for Collector {\n \n             if let Err(err) = std::fs::create_dir_all(&path) {\n                 eprintln!(\"Couldn't create directory for doctest executables: {}\", err);\n-                panic::resume_unwind(box ());\n+                panic::resume_unwind(Box::new(()));\n             }\n \n             DirState::Perm(path)\n@@ -1034,7 +1034,7 @@ impl Tester for Collector {\n                 no_run,\n                 test_type: test::TestType::DocTest,\n             },\n-            testfn: test::DynTestFn(box move || {\n+            testfn: test::DynTestFn(Box::new(move || {\n                 let report_unused_externs = |uext| {\n                     unused_externs.lock().unwrap().push(uext);\n                 };\n@@ -1105,9 +1105,9 @@ impl Tester for Collector {\n                         }\n                     }\n \n-                    panic::resume_unwind(box ());\n+                    panic::resume_unwind(Box::new(()));\n                 }\n-            }),\n+            })),\n         });\n     }\n "}]}