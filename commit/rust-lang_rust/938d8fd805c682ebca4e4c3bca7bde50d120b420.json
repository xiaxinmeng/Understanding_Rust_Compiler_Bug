{"sha": "938d8fd805c682ebca4e4c3bca7bde50d120b420", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzOGQ4ZmQ4MDVjNjgyZWJjYTRlNGMzYmNhN2JkZTUwZDEyMGI0MjA=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-10-04T18:01:13Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-10-04T18:01:13Z"}, "message": "Move `MirSource` to `rustc_middle`", "tree": {"sha": "7fd2de84b02f75e42c0f376d3aa6ed3c94660c38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fd2de84b02f75e42c0f376d3aa6ed3c94660c38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/938d8fd805c682ebca4e4c3bca7bde50d120b420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/938d8fd805c682ebca4e4c3bca7bde50d120b420", "html_url": "https://github.com/rust-lang/rust/commit/938d8fd805c682ebca4e4c3bca7bde50d120b420", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/938d8fd805c682ebca4e4c3bca7bde50d120b420/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "141a977edf1319727b633843e6cd35daa17cdfb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/141a977edf1319727b633843e6cd35daa17cdfb6", "html_url": "https://github.com/rust-lang/rust/commit/141a977edf1319727b633843e6cd35daa17cdfb6"}], "stats": {"total": 63, "additions": 35, "deletions": 28}, "files": [{"sha": "e94d83f48a6ed4ac89671133eafe6e3c742720f5", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/938d8fd805c682ebca4e4c3bca7bde50d120b420/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/938d8fd805c682ebca4e4c3bca7bde50d120b420/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=938d8fd805c682ebca4e4c3bca7bde50d120b420", "patch": "@@ -111,6 +111,38 @@ impl MirPhase {\n     }\n }\n \n+/// Where a specific `mir::Body` comes from.\n+#[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+#[derive(HashStable, TyEncodable, TyDecodable, TypeFoldable)]\n+pub struct MirSource<'tcx> {\n+    pub instance: InstanceDef<'tcx>,\n+\n+    /// If `Some`, this is a promoted rvalue within the parent function.\n+    pub promoted: Option<Promoted>,\n+}\n+\n+impl<'tcx> MirSource<'tcx> {\n+    pub fn item(def_id: DefId) -> Self {\n+        MirSource {\n+            instance: InstanceDef::Item(ty::WithOptConstParam::unknown(def_id)),\n+            promoted: None,\n+        }\n+    }\n+\n+    pub fn from_instance(instance: InstanceDef<'tcx>) -> Self {\n+        MirSource { instance, promoted: None }\n+    }\n+\n+    pub fn with_opt_param(self) -> ty::WithOptConstParam<DefId> {\n+        self.instance.with_opt_param()\n+    }\n+\n+    #[inline]\n+    pub fn def_id(&self) -> DefId {\n+        self.instance.def_id()\n+    }\n+}\n+\n /// The lowered representation of a single function.\n #[derive(Clone, TyEncodable, TyDecodable, Debug, HashStable, TypeFoldable)]\n pub struct Body<'tcx> {"}, {"sha": "41076f8e5d5259159753936dd7014a06ad7c6e9a", "filename": "compiler/rustc_mir/src/transform/mod.rs", "status": "modified", "additions": 3, "deletions": 28, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/938d8fd805c682ebca4e4c3bca7bde50d120b420/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/938d8fd805c682ebca4e4c3bca7bde50d120b420/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs?ref=938d8fd805c682ebca4e4c3bca7bde50d120b420", "patch": "@@ -9,7 +9,7 @@ use rustc_middle::mir::visit::Visitor as _;\n use rustc_middle::mir::{traversal, Body, ConstQualifs, MirPhase, Promoted};\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::steal::Steal;\n-use rustc_middle::ty::{self, InstanceDef, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n use rustc_span::{Span, Symbol};\n use std::borrow::Cow;\n \n@@ -49,6 +49,8 @@ pub mod uninhabited_enum_branching;\n pub mod unreachable_prop;\n pub mod validate;\n \n+pub use rustc_middle::mir::MirSource;\n+\n pub(crate) fn provide(providers: &mut Providers) {\n     self::check_unsafety::provide(providers);\n     *providers = Providers {\n@@ -132,33 +134,6 @@ fn mir_keys(tcx: TyCtxt<'_>, krate: CrateNum) -> FxHashSet<LocalDefId> {\n     set\n }\n \n-/// Where a specific `mir::Body` comes from.\n-#[derive(Debug, Copy, Clone)]\n-pub struct MirSource<'tcx> {\n-    pub instance: InstanceDef<'tcx>,\n-\n-    /// If `Some`, this is a promoted rvalue within the parent function.\n-    pub promoted: Option<Promoted>,\n-}\n-\n-impl<'tcx> MirSource<'tcx> {\n-    pub fn item(def_id: DefId) -> Self {\n-        MirSource {\n-            instance: InstanceDef::Item(ty::WithOptConstParam::unknown(def_id)),\n-            promoted: None,\n-        }\n-    }\n-\n-    pub fn with_opt_param(self) -> ty::WithOptConstParam<DefId> {\n-        self.instance.with_opt_param()\n-    }\n-\n-    #[inline]\n-    pub fn def_id(&self) -> DefId {\n-        self.instance.def_id()\n-    }\n-}\n-\n /// Generates a default name for the pass based on the name of the\n /// type `T`.\n pub fn default_name<T: ?Sized>() -> Cow<'static, str> {"}]}