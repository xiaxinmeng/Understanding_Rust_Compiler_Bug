{"sha": "8fdf77a20daba89f117521b471ef77b087c94c4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmZGY3N2EyMGRhYmE4OWYxMTc1MjFiNDcxZWY3N2IwODdjOTRjNGI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-27T19:34:55Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-27T19:34:55Z"}, "message": "std: Make url a sendable type", "tree": {"sha": "96b656ff6f3f25c39d18740c515243af9f676ea6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96b656ff6f3f25c39d18740c515243af9f676ea6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fdf77a20daba89f117521b471ef77b087c94c4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fdf77a20daba89f117521b471ef77b087c94c4b", "html_url": "https://github.com/rust-lang/rust/commit/8fdf77a20daba89f117521b471ef77b087c94c4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fdf77a20daba89f117521b471ef77b087c94c4b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8800413f52f427d41da193f7139e8d1a5038c836", "url": "https://api.github.com/repos/rust-lang/rust/commits/8800413f52f427d41da193f7139e8d1a5038c836", "html_url": "https://github.com/rust-lang/rust/commit/8800413f52f427d41da193f7139e8d1a5038c836"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "712b5124c7f7eba048ac796f13558b10ab88fc40", "filename": "src/libstd/net_url.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8fdf77a20daba89f117521b471ef77b087c94c4b/src%2Flibstd%2Fnet_url.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fdf77a20daba89f117521b471ef77b087c94c4b/src%2Flibstd%2Fnet_url.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet_url.rs?ref=8fdf77a20daba89f117521b471ef77b087c94c4b", "patch": "@@ -1,8 +1,5 @@\n //! Types/fns concerning URLs (see RFC 3986)\n \n-import map;\n-import map::*;\n-\n export url, userinfo, query, from_str, to_str;\n \n type url = {\n@@ -19,7 +16,7 @@ type userinfo = {\n     pass: option<~str>\n };\n \n-type query = map::hashmap<~str, ~str>;\n+type query = ~[(~str, ~str)];\n \n fn url(-scheme: ~str, -user: option<userinfo>, -host: ~str,\n        -path: ~str, -query: query, -fragment: option<~str>) -> url {\n@@ -61,19 +58,20 @@ fn userinfo_to_str(-userinfo: userinfo) -> ~str {\n }\n \n fn query_from_str(rawquery: ~str) -> query {\n-    let query: query = map::str_hash();\n+    let mut query: query = ~[];\n     if str::len(rawquery) != 0 {\n         for str::split_char(rawquery, '&').each |p| {\n             let (k, v) = split_char_first(p, '=');\n-            query.insert(k, v);\n+            vec::push(query, (k, v));\n         };\n     }\n     ret query;\n }\n \n fn query_to_str(query: query) -> ~str {\n     let mut strvec = ~[];\n-    for query.each |k, v| {\n+    for query.each |kv| {\n+        let (k, v) = kv;\n         strvec += ~[#fmt(\"%s=%s\", k, v)];\n     };\n     ret str::connect(strvec, ~\"&\");\n@@ -161,7 +159,7 @@ fn to_str(url: url) -> ~str {\n     } else {\n        ~\"\"\n     };\n-    let query = if url.query.size() == 0 {\n+    let query = if url.query.len() == 0 {\n         ~\"\"\n     } else {\n         str::concat(~[~\"?\", query_to_str(url.query)])"}]}