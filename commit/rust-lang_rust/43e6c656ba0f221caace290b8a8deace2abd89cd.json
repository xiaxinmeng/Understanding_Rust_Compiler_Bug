{"sha": "43e6c656ba0f221caace290b8a8deace2abd89cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzZTZjNjU2YmEwZjIyMWNhYWNlMjkwYjhhOGRlYWNlMmFiZDg5Y2Q=", "commit": {"author": {"name": "daxpedda", "email": "daxpedda@gmail.com", "date": "2021-04-10T15:38:04Z"}, "committer": {"name": "daxpedda", "email": "daxpedda@gmail.com", "date": "2021-04-10T15:38:04Z"}, "message": "Remove `debug_assert` from `panic_in_result_fn`", "tree": {"sha": "0d17b8a5e6f8c7de7248b6cb6e0d033abd6cf7f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d17b8a5e6f8c7de7248b6cb6e0d033abd6cf7f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43e6c656ba0f221caace290b8a8deace2abd89cd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3qx/rJh59vdc2+v9Q9YqPqOI5G8FAmBxxlwACgkQQ9YqPqOI\n5G/d4Q/+Mf0ZPJm7TMo7zkgrPdOu9xXEKEAbdEs92Nm6Z9ppDwBeCaAPIsRedfO8\nwYqhCnI7f7cY7zqCWpi0ob4HOtnwVVrPKXsuyNWUH/C3Nz+uRh/NDqLOF46KrG6u\nu5chha1iV4VCLDmdzR4yhG4BAmVVrd5bd26rEizQu4La3TljUbWyxJXOloAt4ez1\nUOYSyN0auJ0EL3pBR9om5JsH1poX5vEcZBxOJUubNk2cj6vhjk7ag8lsNfT1959R\n7IcKJ2dFFB+w9o5pPURPcmZNj9enl2L+rTG252iqgUHHh+KYN330SxRLp7FEXbgH\no89+njsvfl8eFVe5rmZFGyw2Pr8EModVwWELx/hHDnkDWGRvlcKmGVwo1ObMN8qU\nzG9rcrtU+1ff2zwzkOVXbMpfnos+mjqteALL02N6XIOF4tZlJIcHcoqtl1CE2Oit\nn5ugpVnnQBcILn/14psUFY8TvqtT0BZpusgfAXGvqG+RxJ+Ktjpd5cU5X5qzUaif\no6CWIotO32Tt2baDrzHxaZWuDJkDQvi57ZBMGeFdshd6sdwWWLJupgP3q2YZMeZb\n7drJFa8qSrIR+CCGcgqgT8w8P/EXn5JnNtYHZEp1vUlkih0Y81kMFwLihGPVoUrO\nhmUVefsihi7qTlyMRiwswSIW1AjHfRn3b0MEkivDozUi3O/6GLA=\n=XNLe\n-----END PGP SIGNATURE-----", "payload": "tree 0d17b8a5e6f8c7de7248b6cb6e0d033abd6cf7f1\nparent f7c2c44e76c626afcd594ecc193ed446729152db\nauthor daxpedda <daxpedda@gmail.com> 1618069084 +0200\ncommitter daxpedda <daxpedda@gmail.com> 1618069084 +0200\n\nRemove `debug_assert` from `panic_in_result_fn`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43e6c656ba0f221caace290b8a8deace2abd89cd", "html_url": "https://github.com/rust-lang/rust/commit/43e6c656ba0f221caace290b8a8deace2abd89cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43e6c656ba0f221caace290b8a8deace2abd89cd/comments", "author": {"login": "daxpedda", "id": 1645124, "node_id": "MDQ6VXNlcjE2NDUxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1645124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxpedda", "html_url": "https://github.com/daxpedda", "followers_url": "https://api.github.com/users/daxpedda/followers", "following_url": "https://api.github.com/users/daxpedda/following{/other_user}", "gists_url": "https://api.github.com/users/daxpedda/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxpedda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxpedda/subscriptions", "organizations_url": "https://api.github.com/users/daxpedda/orgs", "repos_url": "https://api.github.com/users/daxpedda/repos", "events_url": "https://api.github.com/users/daxpedda/events{/privacy}", "received_events_url": "https://api.github.com/users/daxpedda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "daxpedda", "id": 1645124, "node_id": "MDQ6VXNlcjE2NDUxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1645124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxpedda", "html_url": "https://github.com/daxpedda", "followers_url": "https://api.github.com/users/daxpedda/followers", "following_url": "https://api.github.com/users/daxpedda/following{/other_user}", "gists_url": "https://api.github.com/users/daxpedda/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxpedda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxpedda/subscriptions", "organizations_url": "https://api.github.com/users/daxpedda/orgs", "repos_url": "https://api.github.com/users/daxpedda/repos", "events_url": "https://api.github.com/users/daxpedda/events{/privacy}", "received_events_url": "https://api.github.com/users/daxpedda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7c2c44e76c626afcd594ecc193ed446729152db", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7c2c44e76c626afcd594ecc193ed446729152db", "html_url": "https://github.com/rust-lang/rust/commit/f7c2c44e76c626afcd594ecc193ed446729152db"}], "stats": {"total": 76, "additions": 9, "deletions": 67}, "files": [{"sha": "791a2bf079846838beba6b84de4918c7f72b27df", "filename": "clippy_lints/src/panic_in_result_fn.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/43e6c656ba0f221caace290b8a8deace2abd89cd/clippy_lints%2Fsrc%2Fpanic_in_result_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43e6c656ba0f221caace290b8a8deace2abd89cd/clippy_lints%2Fsrc%2Fpanic_in_result_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_in_result_fn.rs?ref=43e6c656ba0f221caace290b8a8deace2abd89cd", "patch": "@@ -61,9 +61,6 @@ fn lint_impl_body<'tcx>(cx: &LateContext<'tcx>, impl_span: Span, body: &'tcx hir\n             \"assert\",\n             \"assert_eq\",\n             \"assert_ne\",\n-            \"debug_assert\",\n-            \"debug_assert_eq\",\n-            \"debug_assert_ne\",\n         ],\n         body,\n     );"}, {"sha": "1f8485b8cd84ae01081f674b3db81c70f04f0a10", "filename": "tests/ui/panic_in_result_fn_debug_assertions.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/43e6c656ba0f221caace290b8a8deace2abd89cd/tests%2Fui%2Fpanic_in_result_fn_debug_assertions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43e6c656ba0f221caace290b8a8deace2abd89cd/tests%2Fui%2Fpanic_in_result_fn_debug_assertions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanic_in_result_fn_debug_assertions.rs?ref=43e6c656ba0f221caace290b8a8deace2abd89cd", "patch": "@@ -1,43 +1,45 @@\n #![warn(clippy::panic_in_result_fn)]\n #![allow(clippy::unnecessary_wraps)]\n \n+// debug_assert should never trigger the `panic_in_result_fn` lint\n+\n struct A;\n \n impl A {\n-    fn result_with_debug_assert_with_message(x: i32) -> Result<bool, String> // should emit lint\n+    fn result_with_debug_assert_with_message(x: i32) -> Result<bool, String>\n     {\n         debug_assert!(x == 5, \"wrong argument\");\n         Ok(true)\n     }\n \n-    fn result_with_debug_assert_eq(x: i32) -> Result<bool, String> // should emit lint\n+    fn result_with_debug_assert_eq(x: i32) -> Result<bool, String>\n     {\n         debug_assert_eq!(x, 5);\n         Ok(true)\n     }\n \n-    fn result_with_debug_assert_ne(x: i32) -> Result<bool, String> // should emit lint\n+    fn result_with_debug_assert_ne(x: i32) -> Result<bool, String>\n     {\n         debug_assert_ne!(x, 1);\n         Ok(true)\n     }\n \n-    fn other_with_debug_assert_with_message(x: i32) // should not emit lint\n+    fn other_with_debug_assert_with_message(x: i32)\n     {\n         debug_assert!(x == 5, \"wrong argument\");\n     }\n \n-    fn other_with_debug_assert_eq(x: i32) // should not emit lint\n+    fn other_with_debug_assert_eq(x: i32)\n     {\n         debug_assert_eq!(x, 5);\n     }\n \n-    fn other_with_debug_assert_ne(x: i32) // should not emit lint\n+    fn other_with_debug_assert_ne(x: i32)\n     {\n         debug_assert_ne!(x, 1);\n     }\n \n-    fn result_without_banned_functions() -> Result<bool, String> // should not emit lint\n+    fn result_without_banned_functions() -> Result<bool, String>\n     {\n         let debug_assert = \"debug_assert!\";\n         println!(\"No {}\", debug_assert);"}, {"sha": "ec18e89698c56d6d2cc59a158adcdb3a0053e166", "filename": "tests/ui/panic_in_result_fn_debug_assertions.stderr", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/f7c2c44e76c626afcd594ecc193ed446729152db/tests%2Fui%2Fpanic_in_result_fn_debug_assertions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7c2c44e76c626afcd594ecc193ed446729152db/tests%2Fui%2Fpanic_in_result_fn_debug_assertions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanic_in_result_fn_debug_assertions.stderr?ref=f7c2c44e76c626afcd594ecc193ed446729152db", "patch": "@@ -1,57 +0,0 @@\n-error: used `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertion in a function that returns `Result`\n-  --> $DIR/panic_in_result_fn_debug_assertions.rs:7:5\n-   |\n-LL | /     fn result_with_debug_assert_with_message(x: i32) -> Result<bool, String> // should emit lint\n-LL | |     {\n-LL | |         debug_assert!(x == 5, \"wrong argument\");\n-LL | |         Ok(true)\n-LL | |     }\n-   | |_____^\n-   |\n-   = note: `-D clippy::panic-in-result-fn` implied by `-D warnings`\n-   = help: `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertions should not be used in a function that returns `Result` as `Result` is expected to return an error instead of crashing\n-note: return Err() instead of panicking\n-  --> $DIR/panic_in_result_fn_debug_assertions.rs:9:9\n-   |\n-LL |         debug_assert!(x == 5, \"wrong argument\");\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: used `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertion in a function that returns `Result`\n-  --> $DIR/panic_in_result_fn_debug_assertions.rs:13:5\n-   |\n-LL | /     fn result_with_debug_assert_eq(x: i32) -> Result<bool, String> // should emit lint\n-LL | |     {\n-LL | |         debug_assert_eq!(x, 5);\n-LL | |         Ok(true)\n-LL | |     }\n-   | |_____^\n-   |\n-   = help: `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertions should not be used in a function that returns `Result` as `Result` is expected to return an error instead of crashing\n-note: return Err() instead of panicking\n-  --> $DIR/panic_in_result_fn_debug_assertions.rs:15:9\n-   |\n-LL |         debug_assert_eq!(x, 5);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: used `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertion in a function that returns `Result`\n-  --> $DIR/panic_in_result_fn_debug_assertions.rs:19:5\n-   |\n-LL | /     fn result_with_debug_assert_ne(x: i32) -> Result<bool, String> // should emit lint\n-LL | |     {\n-LL | |         debug_assert_ne!(x, 1);\n-LL | |         Ok(true)\n-LL | |     }\n-   | |_____^\n-   |\n-   = help: `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertions should not be used in a function that returns `Result` as `Result` is expected to return an error instead of crashing\n-note: return Err() instead of panicking\n-  --> $DIR/panic_in_result_fn_debug_assertions.rs:21:9\n-   |\n-LL |         debug_assert_ne!(x, 1);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: aborting due to 3 previous errors\n-"}]}