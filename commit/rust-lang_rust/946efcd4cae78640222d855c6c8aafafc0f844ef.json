{"sha": "946efcd4cae78640222d855c6c8aafafc0f844ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0NmVmY2Q0Y2FlNzg2NDAyMjJkODU1YzZjOGFhZmFmYzBmODQ0ZWY=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-05-10T01:11:59Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-05-10T05:41:01Z"}, "message": "Refactor the `hir::lowering::lower_*` functions into methods of `LoweringContext`", "tree": {"sha": "bde0c72e24ad9f5aec30761a2ae7b79f85eb4507", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bde0c72e24ad9f5aec30761a2ae7b79f85eb4507"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/946efcd4cae78640222d855c6c8aafafc0f844ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/946efcd4cae78640222d855c6c8aafafc0f844ef", "html_url": "https://github.com/rust-lang/rust/commit/946efcd4cae78640222d855c6c8aafafc0f844ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/946efcd4cae78640222d855c6c8aafafc0f844ef/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d5c5785d58f435d2d6e6e408e20c5c0b02a8e41", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d5c5785d58f435d2d6e6e408e20c5c0b02a8e41", "html_url": "https://github.com/rust-lang/rust/commit/8d5c5785d58f435d2d6e6e408e20c5c0b02a8e41"}], "stats": {"total": 2782, "additions": 1383, "deletions": 1399}, "files": [{"sha": "0f65c5c64e49131fb55c91feafa472ba12462073", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 1372, "deletions": 1387, "changes": 2759, "blob_url": "https://github.com/rust-lang/rust/blob/946efcd4cae78640222d855c6c8aafafc0f844ef/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/946efcd4cae78640222d855c6c8aafafc0f844ef/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=946efcd4cae78640222d855c6c8aafafc0f844ef"}, {"sha": "492d36cfb31a5062d27cc9da2d0520f0c651176f", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/946efcd4cae78640222d855c6c8aafafc0f844ef/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/946efcd4cae78640222d855c6c8aafafc0f844ef/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=946efcd4cae78640222d855c6c8aafafc0f844ef", "patch": "@@ -37,7 +37,7 @@ use rustc_typeck as typeck;\n use rustc_privacy;\n use rustc_plugin::registry::Registry;\n use rustc_plugin as plugin;\n-use rustc::hir::lowering::{lower_crate, LoweringContext};\n+use rustc::hir::lowering::LoweringContext;\n use rustc_passes::{no_asm, loops, consts, rvalues, static_recursion};\n use rustc_const_eval::check_match;\n use super::Compilation;\n@@ -787,8 +787,8 @@ pub fn lower_and_resolve<'a>(sess: &Session,\n \n         // Lower ast -> hir.\n         let hir_forest = time(sess.time_passes(), \"lowering ast -> hir\", || {\n-            let mut lcx = LoweringContext::new(sess, Some(krate), &mut resolver);\n-            hir_map::Forest::new(lower_crate(&mut lcx, krate), dep_graph)\n+            let krate = LoweringContext::new(sess, Some(krate), &mut resolver).lower_crate(krate);\n+            hir_map::Forest::new(krate, dep_graph)\n         });\n \n         (ty::CrateAnalysis {"}, {"sha": "8c17ef02615fe74e99939a6aab4f209eee235ef6", "filename": "src/librustc_metadata/astencode.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/946efcd4cae78640222d855c6c8aafafc0f844ef/src%2Flibrustc_metadata%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/946efcd4cae78640222d855c6c8aafafc0f844ef/src%2Flibrustc_metadata%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fastencode.rs?ref=946efcd4cae78640222d855c6c8aafafc0f844ef", "patch": "@@ -57,7 +57,7 @@ use rustc_serialize::{Encodable, EncoderHelpers};\n #[cfg(test)] use syntax::parse;\n #[cfg(test)] use syntax::ast::NodeId;\n #[cfg(test)] use rustc::hir::print as pprust;\n-#[cfg(test)] use rustc::hir::lowering::{lower_item, LoweringContext, DummyResolver};\n+#[cfg(test)] use rustc::hir::lowering::{LoweringContext, DummyResolver};\n \n struct DecodeContext<'a, 'b, 'tcx: 'a> {\n     tcx: &'a TyCtxt<'tcx>,\n@@ -1347,7 +1347,7 @@ fn roundtrip(in_item: hir::Item) {\n fn test_basic() {\n     let cx = mk_ctxt();\n     with_testing_context(|lcx| {\n-        roundtrip(lower_item(lcx, &quote_item!(&cx,\n+        roundtrip(lcx.lower_item(&quote_item!(&cx,\n             fn foo() {}\n         ).unwrap()));\n     });\n@@ -1357,7 +1357,7 @@ fn test_basic() {\n fn test_smalltalk() {\n     let cx = mk_ctxt();\n     with_testing_context(|lcx| {\n-        roundtrip(lower_item(lcx, &quote_item!(&cx,\n+        roundtrip(lcx.lower_item(&quote_item!(&cx,\n             fn foo() -> isize { 3 + 4 } // first smalltalk program ever executed.\n         ).unwrap()));\n     });\n@@ -1367,7 +1367,7 @@ fn test_smalltalk() {\n fn test_more() {\n     let cx = mk_ctxt();\n     with_testing_context(|lcx| {\n-        roundtrip(lower_item(lcx, &quote_item!(&cx,\n+        roundtrip(lcx.lower_item(&quote_item!(&cx,\n             fn foo(x: usize, y: usize) -> usize {\n                 let z = x + y;\n                 return z;\n@@ -1387,10 +1387,10 @@ fn test_simplification() {\n     ).unwrap();\n     let cx = mk_ctxt();\n     with_testing_context(|lcx| {\n-        let hir_item = lower_item(lcx, &item);\n+        let hir_item = lcx.lower_item(&item);\n         let item_in = InlinedItemRef::Item(&hir_item);\n         let item_out = simplify_ast(item_in);\n-        let item_exp = InlinedItem::Item(P(lower_item(lcx, &quote_item!(&cx,\n+        let item_exp = InlinedItem::Item(P(lcx.lower_item(&quote_item!(&cx,\n             fn new_int_alist<B>() -> alist<isize, B> {\n                 return alist {eq_fn: eq_int, data: Vec::new()};\n             }"}, {"sha": "d4c08552edfc3164d7ec68188d0249fd82154a50", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/946efcd4cae78640222d855c6c8aafafc0f844ef/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/946efcd4cae78640222d855c6c8aafafc0f844ef/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=946efcd4cae78640222d855c6c8aafafc0f844ef", "patch": "@@ -28,7 +28,7 @@ use rustc::hir::map as hir_map;\n use rustc::session::{self, config};\n use rustc::session::config::{get_unstable_features_setting, OutputType};\n use rustc::session::search_paths::{SearchPaths, PathKind};\n-use rustc::hir::lowering::{lower_crate, LoweringContext, DummyResolver};\n+use rustc::hir::lowering::{LoweringContext, DummyResolver};\n use rustc_back::dynamic_lib::DynamicLibrary;\n use rustc_back::tempdir::TempDir;\n use rustc_driver::{driver, Compilation};\n@@ -98,8 +98,7 @@ pub fn run(input: &str,\n     let defs = &RefCell::new(hir_map::collect_definitions(&krate));\n \n     let mut dummy_resolver = DummyResolver;\n-    let mut lcx = LoweringContext::new(&sess, Some(&krate), &mut dummy_resolver);\n-    let krate = lower_crate(&mut lcx, &krate);\n+    let krate = LoweringContext::new(&sess, Some(&krate), &mut dummy_resolver).lower_crate(&krate);\n \n     let opts = scrape_test_config(&krate);\n "}]}