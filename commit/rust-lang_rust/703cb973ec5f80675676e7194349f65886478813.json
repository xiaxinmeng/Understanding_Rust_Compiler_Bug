{"sha": "703cb973ec5f80675676e7194349f65886478813", "node_id": "C_kwDOAAsO6NoAKDcwM2NiOTczZWM1ZjgwNjc1Njc2ZTcxOTQzNDlmNjU4ODY0Nzg4MTM", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-10-09T15:08:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-09T15:08:39Z"}, "message": "Rollup merge of #88436 - lf-:stabilize-command-access, r=yaahc\n\nstd: Stabilize command_access\n\nTracking issue: #44434 (not yet closed but the FCP is done so that should be soon).", "tree": {"sha": "a4c61916094c2fba7a1ff9f649617f4033eca488", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4c61916094c2fba7a1ff9f649617f4033eca488"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/703cb973ec5f80675676e7194349f65886478813", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhYbB3CRBK7hj4Ov3rIwAAnXwIABmkgPS/JV+aDGdOpw1pJncs\ndLtmbPcRmvKmfmO+P3VsUCwhEXJ36kGFhuA72a9d4HXCcgx8Yqd9cEMZqjzKegKI\ncBKIjkd32RJN+MrafMiTIMBDB/0171rytTCAscpGlCRw6rrebrgwMFvNv+LEZKHp\n2S9Aqj8ch+M715JnEMN0vNEPkPXILFoJ8EWAEQ51uhLUPqvU//QB6uR6EnRFbTUc\nipDAmPhQvg1FnHr/nJRyH5tkwyVUUcUoNsMpg8PrWQYsosT16eCCqgk+RXWITcUR\nQegGSzmjzX84gdE5cX973FhleHzrYZLA/TL3zG4SJxZnz62umvAnS9b8Ee7aMMA=\n=mRzw\n-----END PGP SIGNATURE-----\n", "payload": "tree a4c61916094c2fba7a1ff9f649617f4033eca488\nparent 3e4f95612e5e4d2c7e8e0a21b3ff703c580ac15c\nparent 5e1941c058f4437c7a7b03b76d96d3d6d5c8aa3d\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1633792119 +0200\ncommitter GitHub <noreply@github.com> 1633792119 +0200\n\nRollup merge of #88436 - lf-:stabilize-command-access, r=yaahc\n\nstd: Stabilize command_access\n\nTracking issue: #44434 (not yet closed but the FCP is done so that should be soon).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/703cb973ec5f80675676e7194349f65886478813", "html_url": "https://github.com/rust-lang/rust/commit/703cb973ec5f80675676e7194349f65886478813", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/703cb973ec5f80675676e7194349f65886478813/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e4f95612e5e4d2c7e8e0a21b3ff703c580ac15c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e4f95612e5e4d2c7e8e0a21b3ff703c580ac15c", "html_url": "https://github.com/rust-lang/rust/commit/3e4f95612e5e4d2c7e8e0a21b3ff703c580ac15c"}, {"sha": "5e1941c058f4437c7a7b03b76d96d3d6d5c8aa3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e1941c058f4437c7a7b03b76d96d3d6d5c8aa3d", "html_url": "https://github.com/rust-lang/rust/commit/5e1941c058f4437c7a7b03b76d96d3d6d5c8aa3d"}], "stats": {"total": 26, "additions": 11, "deletions": 15}, "files": [{"sha": "4bd06475e2761510fe681acd80de672683f0e094", "filename": "library/std/src/process.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/703cb973ec5f80675676e7194349f65886478813/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/703cb973ec5f80675676e7194349f65886478813/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=703cb973ec5f80675676e7194349f65886478813", "patch": "@@ -115,7 +115,7 @@ use crate::path::Path;\n use crate::str;\n use crate::sys::pipe::{read2, AnonPipe};\n use crate::sys::process as imp;\n-#[unstable(feature = \"command_access\", issue = \"44434\")]\n+#[stable(feature = \"command_access\", since = \"1.57.0\")]\n pub use crate::sys_common::process::CommandEnvs;\n use crate::sys_common::{AsInner, AsInnerMut, FromInner, IntoInner};\n \n@@ -943,13 +943,12 @@ impl Command {\n     /// # Examples\n     ///\n     /// ```\n-    /// # #![feature(command_access)]\n     /// use std::process::Command;\n     ///\n     /// let cmd = Command::new(\"echo\");\n     /// assert_eq!(cmd.get_program(), \"echo\");\n     /// ```\n-    #[unstable(feature = \"command_access\", issue = \"44434\")]\n+    #[stable(feature = \"command_access\", since = \"1.57.0\")]\n     pub fn get_program(&self) -> &OsStr {\n         self.inner.get_program()\n     }\n@@ -963,7 +962,6 @@ impl Command {\n     /// # Examples\n     ///\n     /// ```\n-    /// # #![feature(command_access)]\n     /// use std::ffi::OsStr;\n     /// use std::process::Command;\n     ///\n@@ -972,7 +970,7 @@ impl Command {\n     /// let args: Vec<&OsStr> = cmd.get_args().collect();\n     /// assert_eq!(args, &[\"first\", \"second\"]);\n     /// ```\n-    #[unstable(feature = \"command_access\", issue = \"44434\")]\n+    #[stable(feature = \"command_access\", since = \"1.57.0\")]\n     pub fn get_args(&self) -> CommandArgs<'_> {\n         CommandArgs { inner: self.inner.get_args() }\n     }\n@@ -992,7 +990,6 @@ impl Command {\n     /// # Examples\n     ///\n     /// ```\n-    /// # #![feature(command_access)]\n     /// use std::ffi::OsStr;\n     /// use std::process::Command;\n     ///\n@@ -1004,7 +1001,7 @@ impl Command {\n     ///     (OsStr::new(\"TZ\"), None)\n     /// ]);\n     /// ```\n-    #[unstable(feature = \"command_access\", issue = \"44434\")]\n+    #[stable(feature = \"command_access\", since = \"1.57.0\")]\n     pub fn get_envs(&self) -> CommandEnvs<'_> {\n         self.inner.get_envs()\n     }\n@@ -1016,7 +1013,6 @@ impl Command {\n     /// # Examples\n     ///\n     /// ```\n-    /// # #![feature(command_access)]\n     /// use std::path::Path;\n     /// use std::process::Command;\n     ///\n@@ -1025,7 +1021,7 @@ impl Command {\n     /// cmd.current_dir(\"/bin\");\n     /// assert_eq!(cmd.get_current_dir(), Some(Path::new(\"/bin\")));\n     /// ```\n-    #[unstable(feature = \"command_access\", issue = \"44434\")]\n+    #[stable(feature = \"command_access\", since = \"1.57.0\")]\n     pub fn get_current_dir(&self) -> Option<&Path> {\n         self.inner.get_current_dir()\n     }\n@@ -1057,13 +1053,13 @@ impl AsInnerMut<imp::Command> for Command {\n ///\n /// This struct is created by [`Command::get_args`]. See its documentation for\n /// more.\n-#[unstable(feature = \"command_access\", issue = \"44434\")]\n+#[stable(feature = \"command_access\", since = \"1.57.0\")]\n #[derive(Debug)]\n pub struct CommandArgs<'a> {\n     inner: imp::CommandArgs<'a>,\n }\n \n-#[unstable(feature = \"command_access\", issue = \"44434\")]\n+#[stable(feature = \"command_access\", since = \"1.57.0\")]\n impl<'a> Iterator for CommandArgs<'a> {\n     type Item = &'a OsStr;\n     fn next(&mut self) -> Option<&'a OsStr> {\n@@ -1074,7 +1070,7 @@ impl<'a> Iterator for CommandArgs<'a> {\n     }\n }\n \n-#[unstable(feature = \"command_access\", issue = \"44434\")]\n+#[stable(feature = \"command_access\", since = \"1.57.0\")]\n impl<'a> ExactSizeIterator for CommandArgs<'a> {\n     fn len(&self) -> usize {\n         self.inner.len()"}, {"sha": "3d71219756a207bfaba82d9a6a980ef102e6e338", "filename": "library/std/src/sys_common/process.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/703cb973ec5f80675676e7194349f65886478813/library%2Fstd%2Fsrc%2Fsys_common%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/703cb973ec5f80675676e7194349f65886478813/library%2Fstd%2Fsrc%2Fsys_common%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fprocess.rs?ref=703cb973ec5f80675676e7194349f65886478813", "patch": "@@ -106,13 +106,13 @@ impl CommandEnv {\n /// This struct is created by\n /// [`Command::get_envs`][crate::process::Command::get_envs]. See its\n /// documentation for more.\n-#[unstable(feature = \"command_access\", issue = \"44434\")]\n+#[stable(feature = \"command_access\", since = \"1.57.0\")]\n #[derive(Debug)]\n pub struct CommandEnvs<'a> {\n     iter: crate::collections::btree_map::Iter<'a, EnvKey, Option<OsString>>,\n }\n \n-#[unstable(feature = \"command_access\", issue = \"44434\")]\n+#[stable(feature = \"command_access\", since = \"1.57.0\")]\n impl<'a> Iterator for CommandEnvs<'a> {\n     type Item = (&'a OsStr, Option<&'a OsStr>);\n     fn next(&mut self) -> Option<Self::Item> {\n@@ -123,7 +123,7 @@ impl<'a> Iterator for CommandEnvs<'a> {\n     }\n }\n \n-#[unstable(feature = \"command_access\", issue = \"44434\")]\n+#[stable(feature = \"command_access\", since = \"1.57.0\")]\n impl<'a> ExactSizeIterator for CommandEnvs<'a> {\n     fn len(&self) -> usize {\n         self.iter.len()"}]}