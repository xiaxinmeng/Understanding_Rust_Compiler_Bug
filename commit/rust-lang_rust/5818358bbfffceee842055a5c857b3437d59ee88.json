{"sha": "5818358bbfffceee842055a5c857b3437d59ee88", "node_id": "C_kwDOAAsO6NoAKDU4MTgzNThiYmZmZmNlZWU4NDIwNTVhNWM4NTdiMzQzN2Q1OWVlODg", "commit": {"author": {"name": "Dezhi Wu", "email": "wu543065657@163.com", "date": "2021-10-13T01:01:30Z"}, "committer": {"name": "Dezhi Wu", "email": "wu543065657@163.com", "date": "2021-10-13T01:09:07Z"}, "message": "import `ControlFlow` to the module", "tree": {"sha": "04703e9c9b3fe57999b6f7b64d14d91edbc320a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04703e9c9b3fe57999b6f7b64d14d91edbc320a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5818358bbfffceee842055a5c857b3437d59ee88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5818358bbfffceee842055a5c857b3437d59ee88", "html_url": "https://github.com/rust-lang/rust/commit/5818358bbfffceee842055a5c857b3437d59ee88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5818358bbfffceee842055a5c857b3437d59ee88/comments", "author": {"login": "dzvon", "id": 3402811, "node_id": "MDQ6VXNlcjM0MDI4MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3402811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzvon", "html_url": "https://github.com/dzvon", "followers_url": "https://api.github.com/users/dzvon/followers", "following_url": "https://api.github.com/users/dzvon/following{/other_user}", "gists_url": "https://api.github.com/users/dzvon/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzvon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzvon/subscriptions", "organizations_url": "https://api.github.com/users/dzvon/orgs", "repos_url": "https://api.github.com/users/dzvon/repos", "events_url": "https://api.github.com/users/dzvon/events{/privacy}", "received_events_url": "https://api.github.com/users/dzvon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dzvon", "id": 3402811, "node_id": "MDQ6VXNlcjM0MDI4MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3402811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzvon", "html_url": "https://github.com/dzvon", "followers_url": "https://api.github.com/users/dzvon/followers", "following_url": "https://api.github.com/users/dzvon/following{/other_user}", "gists_url": "https://api.github.com/users/dzvon/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzvon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzvon/subscriptions", "organizations_url": "https://api.github.com/users/dzvon/orgs", "repos_url": "https://api.github.com/users/dzvon/repos", "events_url": "https://api.github.com/users/dzvon/events{/privacy}", "received_events_url": "https://api.github.com/users/dzvon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f888e85f79627cf05eca66b01aaf09c9d3906df5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f888e85f79627cf05eca66b01aaf09c9d3906df5", "html_url": "https://github.com/rust-lang/rust/commit/f888e85f79627cf05eca66b01aaf09c9d3906df5"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "0107e6a6132ffbcd06f7c873bab8012266909e12", "filename": "crates/ide_assists/src/handlers/extract_function.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5818358bbfffceee842055a5c857b3437d59ee88/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5818358bbfffceee842055a5c857b3437d59ee88/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=5818358bbfffceee842055a5c857b3437d59ee88", "patch": "@@ -5,6 +5,7 @@ use either::Either;\n use hir::{HirDisplay, InFile, Local, Semantics, TypeInfo};\n use ide_db::{\n     defs::{Definition, NameRefClass},\n+    helpers::insert_use::{insert_use, ImportScope},\n     helpers::node_ext::{preorder_expr, walk_expr, walk_pat, walk_patterns_in_expr},\n     search::{FileReference, ReferenceCategory, SearchScope},\n     RootDatabase,\n@@ -86,6 +87,8 @@ pub(crate) fn extract_function(acc: &mut Assists, ctx: &AssistContext) -> Option\n \n     let target_range = body.text_range();\n \n+    let scope = ImportScope::find_insert_use_container_with_macros(&node, &ctx.sema)?;\n+\n     acc.add(\n         AssistId(\"extract_function\", crate::AssistKind::RefactorExtract),\n         \"Extract into function\",\n@@ -118,10 +121,25 @@ pub(crate) fn extract_function(acc: &mut Assists, ctx: &AssistContext) -> Option\n \n             let fn_def = format_function(ctx, module, &fun, old_indent, new_indent);\n             let insert_offset = insert_after.text_range().end();\n+\n+            if fn_def.contains(\"ControlFlow\") {\n+                let scope = match scope {\n+                    ImportScope::File(it) => ImportScope::File(builder.make_mut(it)),\n+                    ImportScope::Module(it) => ImportScope::Module(builder.make_mut(it)),\n+                    ImportScope::Block(it) => ImportScope::Block(builder.make_mut(it)),\n+                };\n+\n+                insert_use(\n+                    &scope,\n+                    make::path_from_text(\"std::ops::ControlFlow\"),\n+                    &ctx.config.insert_use,\n+                );\n+            }\n+\n             match ctx.config.snippet_cap {\n                 Some(cap) => builder.insert_snippet(cap, insert_offset, fn_def),\n                 None => builder.insert(insert_offset, fn_def),\n-            }\n+            };\n         },\n     )\n }\n@@ -3297,6 +3315,8 @@ fn foo() {\n }\n \"#,\n             r#\"\n+use std::ops::ControlFlow;\n+\n fn foo() {\n     loop {\n         let mut n = 1;\n@@ -3334,6 +3354,8 @@ fn foo() {\n }\n \"#,\n             r#\"\n+use std::ops::ControlFlow;\n+\n fn foo() {\n     loop {\n         let mut n = 1;"}]}