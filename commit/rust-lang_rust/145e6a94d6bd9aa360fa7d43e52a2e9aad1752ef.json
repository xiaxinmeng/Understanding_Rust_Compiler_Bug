{"sha": "145e6a94d6bd9aa360fa7d43e52a2e9aad1752ef", "node_id": "C_kwDOAAsO6NoAKDE0NWU2YTk0ZDZiZDlhYTM2MGZhN2Q0M2U1MmEyZTlhYWQxNzUyZWY", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-02-10T15:59:04Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-02-10T18:02:39Z"}, "message": "Add suspicious_command_arg_space lint.", "tree": {"sha": "e9b713c1b38be5a6ab9fa866daf295e74fa5d01e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9b713c1b38be5a6ab9fa866daf295e74fa5d01e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/145e6a94d6bd9aa360fa7d43e52a2e9aad1752ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/145e6a94d6bd9aa360fa7d43e52a2e9aad1752ef", "html_url": "https://github.com/rust-lang/rust/commit/145e6a94d6bd9aa360fa7d43e52a2e9aad1752ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/145e6a94d6bd9aa360fa7d43e52a2e9aad1752ef/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f7558148c22e53cd4608773b56cdfa50dcdeac3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f7558148c22e53cd4608773b56cdfa50dcdeac3", "html_url": "https://github.com/rust-lang/rust/commit/0f7558148c22e53cd4608773b56cdfa50dcdeac3"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "c97f4661cf186ba5cc26c8ff30f3a5da2e28b038", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/145e6a94d6bd9aa360fa7d43e52a2e9aad1752ef/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/145e6a94d6bd9aa360fa7d43e52a2e9aad1752ef/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=145e6a94d6bd9aa360fa7d43e52a2e9aad1752ef", "patch": "@@ -80,6 +80,7 @@ mod skip_while_next;\n mod stable_sort_primitive;\n mod str_splitn;\n mod string_extend_chars;\n+mod suspicious_command_arg_space;\n mod suspicious_map;\n mod suspicious_splitn;\n mod suspicious_to_owned;\n@@ -3162,6 +3163,32 @@ declare_clippy_lint! {\n     \"collecting an iterator when collect is not needed\"\n }\n \n+declare_clippy_lint! {\n+    /// ### What it does\n+    ///\n+    /// Checks for `Command::arg()` invocations that look like they\n+    /// should be multiple arguments instead, such as `arg(\"-t ext2\")`.\n+    ///\n+    /// ### Why is this bad?\n+    ///\n+    /// Arguments are not split by space. An argument like `arg(\"-t ext2\")`\n+    /// will be passed as a single argument to the command,\n+    /// which is likely not what was intended.\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// std::process::Command::new(\"echo\").arg(\"-n hello\").spawn().unwrap();\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// std::process::Command::new(\"echo\").args([\"-n\", \"hello\"]).spawn().unwrap();\n+    /// ```\n+    #[clippy::version = \"1.67.0\"]\n+    pub SUSPICIOUS_COMMAND_ARG_SPACE,\n+    suspicious,\n+    \"single command line argument that looks like it should be multiple arguments\"\n+}\n+\n pub struct Methods {\n     avoid_breaking_exported_api: bool,\n     msrv: Msrv,\n@@ -3496,6 +3523,9 @@ impl Methods {\n                         unnecessary_lazy_eval::check(cx, expr, recv, arg, \"and\");\n                     }\n                 },\n+                (\"arg\", [arg]) => {\n+                    suspicious_command_arg_space::check(cx, recv, arg, span);\n+                }\n                 (\"as_deref\" | \"as_deref_mut\", []) => {\n                     needless_option_as_deref::check(cx, expr, recv, name);\n                 },"}, {"sha": "73632c5a357ddf0f042fcea5efdd9f8ef3fbccbb", "filename": "clippy_lints/src/methods/suspicious_command_arg_space.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/145e6a94d6bd9aa360fa7d43e52a2e9aad1752ef/clippy_lints%2Fsrc%2Fmethods%2Fsuspicious_command_arg_space.rs", "raw_url": "https://github.com/rust-lang/rust/raw/145e6a94d6bd9aa360fa7d43e52a2e9aad1752ef/clippy_lints%2Fsrc%2Fmethods%2Fsuspicious_command_arg_space.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fsuspicious_command_arg_space.rs?ref=145e6a94d6bd9aa360fa7d43e52a2e9aad1752ef", "patch": "@@ -0,0 +1,39 @@\n+use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::paths;\n+use clippy_utils::ty::match_type;\n+use rustc_ast as ast;\n+use rustc_errors::{Applicability, Diagnostic};\n+use rustc_hir as hir;\n+use rustc_lint::LateContext;\n+use rustc_span::Span;\n+\n+use super::SUSPICIOUS_COMMAND_ARG_SPACE;\n+\n+pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, recv: &'tcx hir::Expr<'_>, arg: &'tcx hir::Expr<'_>, span: Span) {\n+    let ty = cx.typeck_results().expr_ty(recv).peel_refs();\n+\n+    if match_type(cx, ty, &paths::STD_PROCESS_COMMAND)\n+        && let hir::ExprKind::Lit(lit) = &arg.kind\n+        && let ast::LitKind::Str(s, _) = &lit.node\n+        && let Some((arg1, arg2)) = s.as_str().split_once(' ')\n+        && arg1.starts_with('-')\n+        && arg1.chars().all(|c| c.is_ascii_alphanumeric() || c == '_' || c == '-')\n+    {\n+        span_lint_and_then(\n+            cx,\n+            SUSPICIOUS_COMMAND_ARG_SPACE,\n+            arg.span,\n+            \"single argument that looks like it should be multiple arguments\",\n+            |diag: &mut Diagnostic| {\n+                diag.multipart_suggestion_verbose(\n+                    \"consider splitting the argument\",\n+                    vec![\n+                        (span, \"args\".to_string()),\n+                        (arg.span, format!(\"[{arg1:?}, {arg2:?}]\")),\n+                    ],\n+                    Applicability::MaybeIncorrect,\n+                );\n+            }\n+        );\n+    }\n+}"}, {"sha": "4aae0f7284e4d96f7110d5ac9bab954cd2924730", "filename": "clippy_utils/src/paths.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/145e6a94d6bd9aa360fa7d43e52a2e9aad1752ef/clippy_utils%2Fsrc%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/145e6a94d6bd9aa360fa7d43e52a2e9aad1752ef/clippy_utils%2Fsrc%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fpaths.rs?ref=145e6a94d6bd9aa360fa7d43e52a2e9aad1752ef", "patch": "@@ -115,6 +115,7 @@ pub const STD_FS_CREATE_DIR: [&str; 3] = [\"std\", \"fs\", \"create_dir\"];\n pub const STD_IO_SEEK: [&str; 3] = [\"std\", \"io\", \"Seek\"];\n pub const STD_IO_SEEK_FROM_CURRENT: [&str; 4] = [\"std\", \"io\", \"SeekFrom\", \"Current\"];\n pub const STD_IO_SEEKFROM_START: [&str; 4] = [\"std\", \"io\", \"SeekFrom\", \"Start\"];\n+pub const STD_PROCESS_COMMAND: [&str; 3] = [\"std\", \"process\", \"Command\"];\n pub const STRING_AS_MUT_STR: [&str; 4] = [\"alloc\", \"string\", \"String\", \"as_mut_str\"];\n pub const STRING_AS_STR: [&str; 4] = [\"alloc\", \"string\", \"String\", \"as_str\"];\n pub const STRING_NEW: [&str; 4] = [\"alloc\", \"string\", \"String\", \"new\"];"}]}