{"sha": "5751fcc3b129a31981e9e24ee0ad063b9c7574ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3NTFmY2MzYjEyOWEzMTk4MWU5ZTI0ZWUwYWQwNjNiOWM3NTc0ZmY=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-11-30T21:58:06Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-05-23T16:51:49Z"}, "message": "Update all_traits", "tree": {"sha": "763507a6f3e75056f3cd6ebac7cfb2978d3cda01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/763507a6f3e75056f3cd6ebac7cfb2978d3cda01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5751fcc3b129a31981e9e24ee0ad063b9c7574ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5751fcc3b129a31981e9e24ee0ad063b9c7574ff", "html_url": "https://github.com/rust-lang/rust/commit/5751fcc3b129a31981e9e24ee0ad063b9c7574ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5751fcc3b129a31981e9e24ee0ad063b9c7574ff/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10ef70bb68707eda2f0c999a5a06231adcbf967c", "url": "https://api.github.com/repos/rust-lang/rust/commits/10ef70bb68707eda2f0c999a5a06231adcbf967c", "html_url": "https://github.com/rust-lang/rust/commit/10ef70bb68707eda2f0c999a5a06231adcbf967c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "8716f3e22cc7d7bb25224bd0554aff97b089571d", "filename": "src/librustc/arena.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5751fcc3b129a31981e9e24ee0ad063b9c7574ff/src%2Flibrustc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5751fcc3b129a31981e9e24ee0ad063b9c7574ff/src%2Flibrustc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Farena.rs?ref=5751fcc3b129a31981e9e24ee0ad063b9c7574ff", "patch": "@@ -81,6 +81,7 @@ macro_rules! arena_types {\n             [few] lint_levels: rustc::lint::LintLevelMap,\n             [few] stability_index: rustc::middle::stability::Index<'tcx>,\n             [few] features: syntax::feature_gate::Features,\n+            [few] all_traits: Vec<rustc::hir::def_id::DefId>,\n         ], $tcx);\n     )\n }"}, {"sha": "9bbc91e455616e7cbcfb8f5da88012ffefa7796a", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5751fcc3b129a31981e9e24ee0ad063b9c7574ff/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5751fcc3b129a31981e9e24ee0ad063b9c7574ff/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=5751fcc3b129a31981e9e24ee0ad063b9c7574ff", "patch": "@@ -850,7 +850,7 @@ rustc_queries! {\n         /// A vector of every trait accessible in the whole crate\n         /// (i.e., including those from subcrates). This is used only for\n         /// error reporting.\n-        query all_traits(_: CrateNum) -> Lrc<Vec<DefId>> {\n+        query all_traits(_: CrateNum) -> &'tcx [DefId] {\n             desc { \"fetching all foreign and local traits\" }\n         }\n     }"}, {"sha": "dfe21edee41f3fb629f05580f2b477971f21a1c5", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5751fcc3b129a31981e9e24ee0ad063b9c7574ff/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5751fcc3b129a31981e9e24ee0ad063b9c7574ff/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=5751fcc3b129a31981e9e24ee0ad063b9c7574ff", "patch": "@@ -6,7 +6,6 @@ use crate::middle::lang_items::FnOnceTraitLangItem;\n use crate::namespace::Namespace;\n use crate::util::nodemap::FxHashSet;\n use errors::{Applicability, DiagnosticBuilder};\n-use rustc_data_structures::sync::Lrc;\n use rustc::hir::{self, ExprKind, Node, QPath};\n use rustc::hir::def::{Res, DefKind};\n use rustc::hir::def_id::{CRATE_DEF_INDEX, LOCAL_CRATE, DefId};\n@@ -844,7 +843,7 @@ fn compute_all_traits<'a, 'gcx, 'tcx>(tcx: TyCtxt<'a, 'gcx, 'tcx>) -> Vec<DefId>\n pub fn provide(providers: &mut ty::query::Providers<'_>) {\n     providers.all_traits = |tcx, cnum| {\n         assert_eq!(cnum, LOCAL_CRATE);\n-        Lrc::new(compute_all_traits(tcx))\n+        &tcx.arena.alloc(compute_all_traits(tcx))[..]\n     }\n }\n "}]}