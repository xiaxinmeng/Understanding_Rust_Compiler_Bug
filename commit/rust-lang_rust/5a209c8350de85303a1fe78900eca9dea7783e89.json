{"sha": "5a209c8350de85303a1fe78900eca9dea7783e89", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhMjA5YzgzNTBkZTg1MzAzYTFmZTc4OTAwZWNhOWRlYTc3ODNlODk=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-08-17T00:38:51Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-08-17T00:39:25Z"}, "message": "Fix some comments.", "tree": {"sha": "70ec3e11eb4db29ba751a6bdf5e47655d6346a78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70ec3e11eb4db29ba751a6bdf5e47655d6346a78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a209c8350de85303a1fe78900eca9dea7783e89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a209c8350de85303a1fe78900eca9dea7783e89", "html_url": "https://github.com/rust-lang/rust/commit/5a209c8350de85303a1fe78900eca9dea7783e89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a209c8350de85303a1fe78900eca9dea7783e89/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce276211f5373c96c870d19c888e6c0c55567c2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce276211f5373c96c870d19c888e6c0c55567c2b", "html_url": "https://github.com/rust-lang/rust/commit/ce276211f5373c96c870d19c888e6c0c55567c2b"}], "stats": {"total": 18, "additions": 4, "deletions": 14}, "files": [{"sha": "477c7c6a399b1de78ec71a76e923cda4e5b48da5", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5a209c8350de85303a1fe78900eca9dea7783e89/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a209c8350de85303a1fe78900eca9dea7783e89/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=5a209c8350de85303a1fe78900eca9dea7783e89", "patch": "@@ -1279,20 +1279,6 @@ fn incr_refcnt_of_boxed(cx: &@block_ctxt, box_ptr: ValueRef) -> result {\n \n fn make_free_glue(cx: &@block_ctxt, v0: ValueRef, t: &ty::t) {\n     // NB: v is an *alias* of type t here, not a direct value.\n-\n-    // FIXME: switch gc/non-gc on layer of the type.\n-    // FIXME: switch gc/non-gc on layer of the type.\n-    // TODO: call upcall_kill\n-\n-\n-    // Call through the obj's own fields-drop glue first.\n-\n-    // Then free the body.\n-    // FIXME: switch gc/non-gc on layer of the type.\n-    // Call through the closure's own fields-drop glue first.\n-\n-    // Then free the body.\n-    // FIXME: switch gc/non-gc on layer of the type.\n     let rs =\n         alt ty::struct(bcx_tcx(cx), t) {\n           ty::ty_str. {\n@@ -1329,6 +1315,8 @@ fn make_free_glue(cx: &@block_ctxt, v0: ValueRef, t: &ty::t) {\n             fail \"free uniq unimplemented\";\n           }\n           ty::ty_obj(_) {\n+            // Call through the obj's own fields-drop glue first.\n+            // Then free the body.\n             let box_cell =\n                 cx.build.GEP(v0, ~[C_int(0), C_int(abi::obj_field_box)]);\n             let b = cx.build.Load(box_cell);\n@@ -1351,6 +1339,8 @@ fn make_free_glue(cx: &@block_ctxt, v0: ValueRef, t: &ty::t) {\n             }\n           }\n           ty::ty_fn(_, _, _, _, _) {\n+            // Call through the closure's own fields-drop glue first.\n+            // Then free the body.\n             let box_cell =\n                 cx.build.GEP(v0, ~[C_int(0), C_int(abi::fn_field_box)]);\n             let v = cx.build.Load(box_cell);"}]}