{"sha": "faccb0f07a50f1b19644938723f6cd2c6c5877c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhY2NiMGYwN2E1MGYxYjE5NjQ0OTM4NzIzZjZjZDJjNmM1ODc3Yzg=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-04T23:49:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-04T23:49:43Z"}, "message": "Rollup merge of #71878 - main--:patch-2, r=Amanieu\n\nAdd remove_current_as_list to LinkedList's CursorMut\n\nThe `remove_current` method only returns the inner `T` and deallocates the list node. This is unnecessary for move operations, where the element is going to be linked back into this (or even a different) `LinkedList`. The `remove_current_as_list` method avoids this by returning the unlinked list node as a new single-element `LinkedList` structure.\n\n(per https://github.com/rust-lang/rust/issues/58533#issuecomment-623010157)", "tree": {"sha": "d9ccb2cda8e921c5551d5bc4b55c057927dc2dbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9ccb2cda8e921c5551d5bc4b55c057927dc2dbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/faccb0f07a50f1b19644938723f6cd2c6c5877c8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJesKoXCRBK7hj4Ov3rIwAAdHIIAFj+v0A7bpldMzQgVyB6OXQf\ntHklZZ7AfFtCB+efiYSSAqTUMaZI2WXy5lXhBUeOahCMtQNBQTgAdIjCB57Rcq+4\noPaPI/L4hh+Qsq3KMsbVvIvFYOH4JLcEHXDvn2YgS8bbbA3tI5xv8RHee8vgnsla\n43PHh1QrB42RCrSloSkq+QOtN2YOLXSVlyYSfS7OrHLqDhwHzgvs4/3F/rBmsdAy\nHwSH+PVZ362vNS3aCHD/q8bJL8zMY8v4yiDSlVWSnF1n2nWUMQob0wt5PKAcMtxX\nBKI+SQh0HrsxLOj4r4cHD8Jm2XO7Fsc53wuSH2zwj/VuT9LcSjxmdJubWo7U35Q=\n=zvy0\n-----END PGP SIGNATURE-----\n", "payload": "tree d9ccb2cda8e921c5551d5bc4b55c057927dc2dbd\nparent db7b38181c9f0b0347453780eb61c66d00bc95b9\nparent c5cdf7fe920c8cb3b60f5a6e257f6cdfb51102d3\nauthor Dylan DPC <dylan.dpc@gmail.com> 1588636183 +0200\ncommitter GitHub <noreply@github.com> 1588636183 +0200\n\nRollup merge of #71878 - main--:patch-2, r=Amanieu\n\nAdd remove_current_as_list to LinkedList's CursorMut\n\nThe `remove_current` method only returns the inner `T` and deallocates the list node. This is unnecessary for move operations, where the element is going to be linked back into this (or even a different) `LinkedList`. The `remove_current_as_list` method avoids this by returning the unlinked list node as a new single-element `LinkedList` structure.\n\n(per https://github.com/rust-lang/rust/issues/58533#issuecomment-623010157)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/faccb0f07a50f1b19644938723f6cd2c6c5877c8", "html_url": "https://github.com/rust-lang/rust/commit/faccb0f07a50f1b19644938723f6cd2c6c5877c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/faccb0f07a50f1b19644938723f6cd2c6c5877c8/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db7b38181c9f0b0347453780eb61c66d00bc95b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/db7b38181c9f0b0347453780eb61c66d00bc95b9", "html_url": "https://github.com/rust-lang/rust/commit/db7b38181c9f0b0347453780eb61c66d00bc95b9"}, {"sha": "c5cdf7fe920c8cb3b60f5a6e257f6cdfb51102d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5cdf7fe920c8cb3b60f5a6e257f6cdfb51102d3", "html_url": "https://github.com/rust-lang/rust/commit/c5cdf7fe920c8cb3b60f5a6e257f6cdfb51102d3"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "cc0f07b822741bd76610541da02b7d83e91e75d9", "filename": "src/liballoc/collections/linked_list.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/faccb0f07a50f1b19644938723f6cd2c6c5877c8/src%2Fliballoc%2Fcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faccb0f07a50f1b19644938723f6cd2c6c5877c8/src%2Fliballoc%2Fcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Flinked_list.rs?ref=faccb0f07a50f1b19644938723f6cd2c6c5877c8", "patch": "@@ -1496,6 +1496,31 @@ impl<'a, T> CursorMut<'a, T> {\n         }\n     }\n \n+    /// Removes the current element from the `LinkedList` without deallocating the list node.\n+    ///\n+    /// The node that was removed is returned as a new `LinkedList` containing only this node.\n+    /// The cursor is moved to point to the next element in the current `LinkedList`.\n+    ///\n+    /// If the cursor is currently pointing to the \"ghost\" non-element then no element\n+    /// is removed and `None` is returned.\n+    #[unstable(feature = \"linked_list_cursors\", issue = \"58533\")]\n+    pub fn remove_current_as_list(&mut self) -> Option<LinkedList<T>> {\n+        let mut unlinked_node = self.current?;\n+        unsafe {\n+            self.current = unlinked_node.as_ref().next;\n+            self.list.unlink_node(unlinked_node);\n+\n+            unlinked_node.as_mut().prev = None;\n+            unlinked_node.as_mut().next = None;\n+            Some(LinkedList {\n+                head: Some(unlinked_node),\n+                tail: Some(unlinked_node),\n+                len: 1,\n+                marker: PhantomData,\n+            })\n+        }\n+    }\n+\n     /// Inserts the elements from the given `LinkedList` after the current one.\n     ///\n     /// If the cursor is pointing at the \"ghost\" non-element then the new elements are"}]}