{"sha": "b149315fda614e21bbc53d58bed4f6dfa19116c1", "node_id": "C_kwDOAAsO6NoAKGIxNDkzMTVmZGE2MTRlMjFiYmM1M2Q1OGJlZDRmNmRmYTE5MTE2YzE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-20T13:37:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-20T13:37:34Z"}, "message": "Rollup merge of #105944 - JohnTitor:issue-80816, r=compiler-errors\n\nAdd regression test for #80816\n\nCloses #80816\nr? `@compiler-errors`\nSigned-off-by: Yuki Okushi <jtitor@2k36.org>", "tree": {"sha": "c1d3c304eca076946f7c6e2749d4034615c6b34c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1d3c304eca076946f7c6e2749d4034615c6b34c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b149315fda614e21bbc53d58bed4f6dfa19116c1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjobqeCRBK7hj4Ov3rIwAADZgIABUtbvzC0Z84j4xkfpeh2p5y\niUyVaqgZVl1wSnNaH7XrEgdcHqiYZ+iuIkUJ7lN1avWeuxOEhT/NsNLu0K/tREkM\nhRVnMiJYWCUEq78Ncd+qL5R58nOw5NNbBrMhqEddMhaBABctV4qvfTVLhfyQhTe0\nxbOycy8Fb/doG+xWYHKXZovHJs3cZQMVNzywkwa27ja2I0Bo0wPzU1uHdEeZfHl3\nGrHxCEGZ4vIpwQIOBagd579SzQFb2sfnTvjR7SWLs35i5IE9ZbDhw168l0+tBgmT\n93o/KsfXpEV/Ej4sahdEwKh1BXwGHw6Qhp7KK04WuVTxp2akketj8m88zSLZe3Q=\n=k3MV\n-----END PGP SIGNATURE-----\n", "payload": "tree c1d3c304eca076946f7c6e2749d4034615c6b34c\nparent d6fbe798507d6401d9081eb07eae8bd51dd7cf3a\nparent 17d7d71d9416077ec3c005bbc4b9a59bf95335e1\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1671543454 +0100\ncommitter GitHub <noreply@github.com> 1671543454 +0100\n\nRollup merge of #105944 - JohnTitor:issue-80816, r=compiler-errors\n\nAdd regression test for #80816\n\nCloses #80816\nr? `@compiler-errors`\nSigned-off-by: Yuki Okushi <jtitor@2k36.org>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b149315fda614e21bbc53d58bed4f6dfa19116c1", "html_url": "https://github.com/rust-lang/rust/commit/b149315fda614e21bbc53d58bed4f6dfa19116c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b149315fda614e21bbc53d58bed4f6dfa19116c1/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6fbe798507d6401d9081eb07eae8bd51dd7cf3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6fbe798507d6401d9081eb07eae8bd51dd7cf3a", "html_url": "https://github.com/rust-lang/rust/commit/d6fbe798507d6401d9081eb07eae8bd51dd7cf3a"}, {"sha": "17d7d71d9416077ec3c005bbc4b9a59bf95335e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/17d7d71d9416077ec3c005bbc4b9a59bf95335e1", "html_url": "https://github.com/rust-lang/rust/commit/17d7d71d9416077ec3c005bbc4b9a59bf95335e1"}], "stats": {"total": 81, "additions": 81, "deletions": 0}, "files": [{"sha": "ead320a4fe42c66d688158928eb0ab46597bc7be", "filename": "src/test/ui/inference/issue-80816.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/b149315fda614e21bbc53d58bed4f6dfa19116c1/src%2Ftest%2Fui%2Finference%2Fissue-80816.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b149315fda614e21bbc53d58bed4f6dfa19116c1/src%2Ftest%2Fui%2Finference%2Fissue-80816.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fissue-80816.rs?ref=b149315fda614e21bbc53d58bed4f6dfa19116c1", "patch": "@@ -0,0 +1,54 @@\n+#![allow(unreachable_code)]\n+\n+use std::marker::PhantomData;\n+use std::ops::Deref;\n+use std::sync::Arc;\n+\n+pub struct Guard<T> {\n+    _phantom: PhantomData<T>,\n+}\n+impl<T> Deref for Guard<T> {\n+    type Target = T;\n+    fn deref(&self) -> &T {\n+        unimplemented!()\n+    }\n+}\n+\n+pub struct DirectDeref<T>(T);\n+impl<T> Deref for DirectDeref<Arc<T>> {\n+    type Target = T;\n+    fn deref(&self) -> &T {\n+        unimplemented!()\n+    }\n+}\n+\n+pub trait Access<T> {\n+    type Guard: Deref<Target = T>;\n+    fn load(&self) -> Self::Guard {\n+        unimplemented!()\n+    }\n+}\n+impl<T, A: Access<T>, P: Deref<Target = A>> Access<T> for P {\n+    //~^ NOTE: required for `Arc<ArcSwapAny<Arc<usize>>>` to implement `Access<_>`\n+    type Guard = A::Guard;\n+}\n+impl<T> Access<T> for ArcSwapAny<T> {\n+    //~^ NOTE: multiple `impl`s satisfying `ArcSwapAny<Arc<usize>>: Access<_>` found\n+    type Guard = Guard<T>;\n+}\n+impl<T> Access<T> for ArcSwapAny<Arc<T>> {\n+    type Guard = DirectDeref<Arc<T>>;\n+}\n+\n+pub struct ArcSwapAny<T> {\n+    _phantom_arc: PhantomData<T>,\n+}\n+\n+pub fn foo() {\n+    let s: Arc<ArcSwapAny<Arc<usize>>> = unimplemented!();\n+    let guard: Guard<Arc<usize>> = s.load();\n+    //~^ ERROR: type annotations needed\n+    //~| HELP: try using a fully qualified path to specify the expected types\n+}\n+\n+fn main() {}"}, {"sha": "bd833340df4ce7fbc5eddba88592c15bc603b7a5", "filename": "src/test/ui/inference/issue-80816.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/b149315fda614e21bbc53d58bed4f6dfa19116c1/src%2Ftest%2Fui%2Finference%2Fissue-80816.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b149315fda614e21bbc53d58bed4f6dfa19116c1/src%2Ftest%2Fui%2Finference%2Fissue-80816.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fissue-80816.stderr?ref=b149315fda614e21bbc53d58bed4f6dfa19116c1", "patch": "@@ -0,0 +1,27 @@\n+error[E0283]: type annotations needed\n+  --> $DIR/issue-80816.rs:49:38\n+   |\n+LL |     let guard: Guard<Arc<usize>> = s.load();\n+   |                                      ^^^^\n+   |\n+note: multiple `impl`s satisfying `ArcSwapAny<Arc<usize>>: Access<_>` found\n+  --> $DIR/issue-80816.rs:35:1\n+   |\n+LL | impl<T> Access<T> for ArcSwapAny<T> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+...\n+LL | impl<T> Access<T> for ArcSwapAny<Arc<T>> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: required for `Arc<ArcSwapAny<Arc<usize>>>` to implement `Access<_>`\n+  --> $DIR/issue-80816.rs:31:45\n+   |\n+LL | impl<T, A: Access<T>, P: Deref<Target = A>> Access<T> for P {\n+   |                                             ^^^^^^^^^     ^\n+help: try using a fully qualified path to specify the expected types\n+   |\n+LL |     let guard: Guard<Arc<usize>> = <Arc<ArcSwapAny<Arc<usize>>> as Access<T>>::load(&s);\n+   |                                    ++++++++++++++++++++++++++++++++++++++++++++++++++ ~\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0283`."}]}