{"sha": "cbe2de7fd273d25e6fc37abb4094a3ecfabbe359", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiZTJkZTdmZDI3M2QyNWU2ZmMzN2FiYjQwOTRhM2VjZmFiYmUzNTk=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-14T11:07:56Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-14T11:07:56Z"}, "message": "Address small nit", "tree": {"sha": "9a6050ddbc95d7b707ecdcd4d0b8e7621779e1c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a6050ddbc95d7b707ecdcd4d0b8e7621779e1c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbe2de7fd273d25e6fc37abb4094a3ecfabbe359", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbe2de7fd273d25e6fc37abb4094a3ecfabbe359", "html_url": "https://github.com/rust-lang/rust/commit/cbe2de7fd273d25e6fc37abb4094a3ecfabbe359", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbe2de7fd273d25e6fc37abb4094a3ecfabbe359/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4562040d6b640fa448fedcb7db9124b6abcaba5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4562040d6b640fa448fedcb7db9124b6abcaba5b", "html_url": "https://github.com/rust-lang/rust/commit/4562040d6b640fa448fedcb7db9124b6abcaba5b"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2754f743caa9585b81d1262576b0f43efc3fab64", "filename": "src/loops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cbe2de7fd273d25e6fc37abb4094a3ecfabbe359/src%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbe2de7fd273d25e6fc37abb4094a3ecfabbe359/src%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Floops.rs?ref=cbe2de7fd273d25e6fc37abb4094a3ecfabbe359", "patch": "@@ -9,7 +9,7 @@ use rustc::middle::ty;\n use rustc_front::hir::*;\n use rustc_front::intravisit::{Visitor, walk_expr, walk_block, walk_decl};\n use std::borrow::Cow;\n-use std::collections::{HashSet, HashMap};\n+use std::collections::HashMap;\n \n use utils::{snippet, span_lint, get_parent_expr, match_trait_method, match_type, in_external_macro, expr_block,\n             span_help_and_lint, is_integer_literal, get_enclosing_block, span_lint_and_then, walk_ptrs_ty};\n@@ -353,7 +353,7 @@ fn check_for_loop_range(cx: &LateContext, pat: &Pat, arg: &Expr, body: &Expr, ex\n                 let (indexed, indexed_extent) = visitor.indexed\n                                      .into_iter()\n                                      .next()\n-                                     .expect(\"Len was nonzero, but no contents found\");\n+                                     .unwrap_or_else(|| unreachable!() /* len == 1 */);\n \n                 // ensure that the indexed variable was declared before the loop, see #601\n                 let pat_extent = cx.tcx.region_maps.var_scope(pat.id);"}]}