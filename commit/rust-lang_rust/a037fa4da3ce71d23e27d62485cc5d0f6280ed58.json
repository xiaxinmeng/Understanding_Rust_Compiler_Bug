{"sha": "a037fa4da3ce71d23e27d62485cc5d0f6280ed58", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwMzdmYTRkYTNjZTcxZDIzZTI3ZDYyNDg1Y2M1ZDBmNjI4MGVkNTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-29T15:49:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-29T15:49:53Z"}, "message": "auto merge of #6796 : sfackler/rust/FromBase64-type-fix, r=bstrie\n\nPreviously, FromBase64 was only implemented on ~[u8] and ~str when\r\nany pointer would do. The implementations of FromBase64 are now\r\nconsistent with the implementations of ToBase64.", "tree": {"sha": "a4946edd61d9cbed35ebd941ee6e41a6a9a042e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4946edd61d9cbed35ebd941ee6e41a6a9a042e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a037fa4da3ce71d23e27d62485cc5d0f6280ed58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a037fa4da3ce71d23e27d62485cc5d0f6280ed58", "html_url": "https://github.com/rust-lang/rust/commit/a037fa4da3ce71d23e27d62485cc5d0f6280ed58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a037fa4da3ce71d23e27d62485cc5d0f6280ed58/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "844b5cff363cdb4ca2baa9152263a5f14a0dcdb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/844b5cff363cdb4ca2baa9152263a5f14a0dcdb0", "html_url": "https://github.com/rust-lang/rust/commit/844b5cff363cdb4ca2baa9152263a5f14a0dcdb0"}, {"sha": "b1e7d49b11a51fb3d6b41c0ec677d0d40e1d2c26", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1e7d49b11a51fb3d6b41c0ec677d0d40e1d2c26", "html_url": "https://github.com/rust-lang/rust/commit/b1e7d49b11a51fb3d6b41c0ec677d0d40e1d2c26"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "7829eb50a68dd7c089211055a36e60849d4c4eae", "filename": "src/libextra/base64.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a037fa4da3ce71d23e27d62485cc5d0f6280ed58/src%2Flibextra%2Fbase64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a037fa4da3ce71d23e27d62485cc5d0f6280ed58/src%2Flibextra%2Fbase64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fbase64.rs?ref=a037fa4da3ce71d23e27d62485cc5d0f6280ed58", "patch": "@@ -113,7 +113,7 @@ pub trait FromBase64 {\n     fn from_base64(&self) -> ~[u8];\n }\n \n-impl FromBase64 for ~[u8] {\n+impl<'self> FromBase64 for &'self [u8] {\n     /**\n      * Convert base64 `u8` vector into u8 byte values.\n      * Every 4 encoded characters is converted into 3 octets, modulo padding.\n@@ -188,7 +188,7 @@ impl FromBase64 for ~[u8] {\n     }\n }\n \n-impl FromBase64 for ~str {\n+impl<'self> FromBase64 for &'self str {\n     /**\n      * Convert any base64 encoded string (literal, `@`, `&`, or `~`)\n      * to the byte values it encodes.\n@@ -227,23 +227,23 @@ mod tests {\n \n     #[test]\n     fn test_to_base64() {\n-        assert_eq!((~\"\").to_base64(), ~\"\");\n-        assert!((~\"f\").to_base64()      == ~\"Zg==\");\n-        assert_eq!((~\"fo\").to_base64(), ~\"Zm8=\");\n-        assert_eq!((~\"foo\").to_base64(), ~\"Zm9v\");\n-        assert!((~\"foob\").to_base64()   == ~\"Zm9vYg==\");\n-        assert_eq!((~\"fooba\").to_base64(), ~\"Zm9vYmE=\");\n-        assert_eq!((~\"foobar\").to_base64(), ~\"Zm9vYmFy\");\n+        assert_eq!(\"\".to_base64(), ~\"\");\n+        assert_eq!(\"f\".to_base64(), ~\"Zg==\");\n+        assert_eq!(\"fo\".to_base64(), ~\"Zm8=\");\n+        assert_eq!(\"foo\".to_base64(), ~\"Zm9v\");\n+        assert_eq!(\"foob\".to_base64(), ~\"Zm9vYg==\");\n+        assert_eq!(\"fooba\".to_base64(), ~\"Zm9vYmE=\");\n+        assert_eq!(\"foobar\".to_base64(), ~\"Zm9vYmFy\");\n     }\n \n     #[test]\n     fn test_from_base64() {\n-        assert_eq!((~\"\").from_base64(), str::to_bytes(\"\"));\n-        assert!((~\"Zg==\").from_base64() == str::to_bytes(\"f\"));\n-        assert_eq!((~\"Zm8=\").from_base64(), str::to_bytes(\"fo\"));\n-        assert_eq!((~\"Zm9v\").from_base64(), str::to_bytes(\"foo\"));\n-        assert!((~\"Zm9vYg==\").from_base64() == str::to_bytes(\"foob\"));\n-        assert_eq!((~\"Zm9vYmE=\").from_base64(), str::to_bytes(\"fooba\"))\n-        assert_eq!((~\"Zm9vYmFy\").from_base64(), str::to_bytes(\"foobar\"));\n+        assert_eq!(\"\".from_base64(), str::to_bytes(\"\"));\n+        assert_eq!(\"Zg==\".from_base64(), str::to_bytes(\"f\"));\n+        assert_eq!(\"Zm8=\".from_base64(), str::to_bytes(\"fo\"));\n+        assert_eq!(\"Zm9v\".from_base64(), str::to_bytes(\"foo\"));\n+        assert_eq!(\"Zm9vYg==\".from_base64(), str::to_bytes(\"foob\"));\n+        assert_eq!(\"Zm9vYmE=\".from_base64(), str::to_bytes(\"fooba\"))\n+        assert_eq!(\"Zm9vYmFy\".from_base64(), str::to_bytes(\"foobar\"));\n     }\n }"}]}