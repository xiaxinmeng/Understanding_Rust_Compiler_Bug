{"sha": "f1db420317a53eacf3dfb08b8121ea06ad1ca5b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxZGI0MjAzMTdhNTNlYWNmM2RmYjA4YjgxMjFlYTA2YWQxY2E1YjU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-19T19:03:58Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-19T19:03:58Z"}, "message": "Fix over-optimistic resolution of self-methods within obj scopes. There is no such feature in the language at present. Add test to prevent regression. Closes #114.", "tree": {"sha": "401a0a20769491e13f125a81f282ed5962ddb4cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/401a0a20769491e13f125a81f282ed5962ddb4cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1db420317a53eacf3dfb08b8121ea06ad1ca5b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1db420317a53eacf3dfb08b8121ea06ad1ca5b5", "html_url": "https://github.com/rust-lang/rust/commit/f1db420317a53eacf3dfb08b8121ea06ad1ca5b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1db420317a53eacf3dfb08b8121ea06ad1ca5b5/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bacb8e6b7995e242145871c8228cae4dbda7b891", "url": "https://api.github.com/repos/rust-lang/rust/commits/bacb8e6b7995e242145871c8228cae4dbda7b891", "html_url": "https://github.com/rust-lang/rust/commit/bacb8e6b7995e242145871c8228cae4dbda7b891"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "1992bf932e974df925095243cc2a509d27c51530", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f1db420317a53eacf3dfb08b8121ea06ad1ca5b5/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/f1db420317a53eacf3dfb08b8121ea06ad1ca5b5/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=f1db420317a53eacf3dfb08b8121ea06ad1ca5b5", "patch": "@@ -1758,11 +1758,7 @@ and lookup_by_ident\n                     check_slots scopes f.Ast.fn_input_slots\n \n                 | Ast.MOD_ITEM_obj obj ->\n-                    begin\n-                      match htab_search obj.Ast.obj_fns ident with\n-                          Some fn -> found cx scopes fn.id\n-                        | None -> check_slots scopes obj.Ast.obj_state\n-                    end\n+                    check_slots scopes obj.Ast.obj_state\n \n                 | Ast.MOD_ITEM_mod md ->\n                     project_ident_from_items cx lchk"}, {"sha": "be90c12fec2906e7929c3d0a6da895e9af9abbc6", "filename": "src/test/compile-fail/no-self-dispatch.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f1db420317a53eacf3dfb08b8121ea06ad1ca5b5/src%2Ftest%2Fcompile-fail%2Fno-self-dispatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1db420317a53eacf3dfb08b8121ea06ad1ca5b5/src%2Ftest%2Fcompile-fail%2Fno-self-dispatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-self-dispatch.rs?ref=f1db420317a53eacf3dfb08b8121ea06ad1ca5b5", "patch": "@@ -0,0 +1,11 @@\n+// error-pattern: unresolved identifier\n+obj oT() {\n+  fn get() -> int {\n+    ret 3;\n+  }\n+  fn foo() {\n+    auto c = get();\n+  }\n+}\n+fn main() {\n+}"}]}