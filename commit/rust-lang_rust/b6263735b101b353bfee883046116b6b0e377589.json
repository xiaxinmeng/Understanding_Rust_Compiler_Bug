{"sha": "b6263735b101b353bfee883046116b6b0e377589", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2MjYzNzM1YjEwMWIzNTNiZmVlODgzMDQ2MTE2YjZiMGUzNzc1ODk=", "commit": {"author": {"name": "lqd", "email": "remy.rakic@gmail.com", "date": "2016-05-31T17:48:49Z"}, "committer": {"name": "Marcus Klaas de Vries", "email": "mail@marcusklaas.nl", "date": "2016-05-31T17:48:49Z"}, "message": "Add support for the `default` keyword (#1025)\n\nAdds support for Defaultness on impl methods.\r\nFixes #945", "tree": {"sha": "bd3a53fe3f9f2b4debe6078ab9f33117bd6e38bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd3a53fe3f9f2b4debe6078ab9f33117bd6e38bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6263735b101b353bfee883046116b6b0e377589", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6263735b101b353bfee883046116b6b0e377589", "html_url": "https://github.com/rust-lang/rust/commit/b6263735b101b353bfee883046116b6b0e377589", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6263735b101b353bfee883046116b6b0e377589/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d19844d49242f7e28f96576fd49660446452c405", "url": "https://api.github.com/repos/rust-lang/rust/commits/d19844d49242f7e28f96576fd49660446452c405", "html_url": "https://github.com/rust-lang/rust/commit/d19844d49242f7e28f96576fd49660446452c405"}], "stats": {"total": 45, "additions": 41, "deletions": 4}, "files": [{"sha": "7c73d1a6787dd494064058195de627e27ccede24", "filename": "src/items.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b6263735b101b353bfee883046116b6b0e377589/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6263735b101b353bfee883046116b6b0e377589/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=b6263735b101b353bfee883046116b6b0e377589", "patch": "@@ -120,6 +120,7 @@ impl<'a> FmtVisitor<'a> {\n                                               generics,\n                                               ast::Unsafety::Normal,\n                                               ast::Constness::NotConst,\n+                                              ast::Defaultness::Final,\n                                               // These are not actually rust functions,\n                                               // but we format them as such.\n                                               abi::Abi::Rust,\n@@ -168,6 +169,7 @@ impl<'a> FmtVisitor<'a> {\n                       generics: &ast::Generics,\n                       unsafety: ast::Unsafety,\n                       constness: ast::Constness,\n+                      defaultness: ast::Defaultness,\n                       abi: abi::Abi,\n                       vis: &ast::Visibility,\n                       span: Span,\n@@ -187,6 +189,7 @@ impl<'a> FmtVisitor<'a> {\n                                                                          generics,\n                                                                          unsafety,\n                                                                          constness,\n+                                                                         defaultness,\n                                                                          abi,\n                                                                          vis,\n                                                                          span,\n@@ -231,6 +234,7 @@ impl<'a> FmtVisitor<'a> {\n                                                        &sig.generics,\n                                                        sig.unsafety,\n                                                        sig.constness,\n+                                                       ast::Defaultness::Final,\n                                                        sig.abi,\n                                                        &ast::Visibility::Inherited,\n                                                        span,\n@@ -1220,6 +1224,7 @@ fn rewrite_fn_base(context: &RewriteContext,\n                    generics: &ast::Generics,\n                    unsafety: ast::Unsafety,\n                    constness: ast::Constness,\n+                   defaultness: ast::Defaultness,\n                    abi: abi::Abi,\n                    vis: &ast::Visibility,\n                    span: Span,\n@@ -1236,6 +1241,10 @@ fn rewrite_fn_base(context: &RewriteContext,\n     // Vis unsafety abi.\n     result.push_str(&*format_visibility(vis));\n \n+    if let ast::Defaultness::Default = defaultness {\n+        result.push_str(\"default \");\n+    }\n+\n     if let ast::Constness::Const = constness {\n         result.push_str(\"const \");\n     }"}, {"sha": "c5962e986b506c5850c4e497906a9225cd577e86", "filename": "src/visitor.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b6263735b101b353bfee883046116b6b0e377589/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6263735b101b353bfee883046116b6b0e377589/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=b6263735b101b353bfee883046116b6b0e377589", "patch": "@@ -141,7 +141,8 @@ impl<'a> FmtVisitor<'a> {\n                 fd: &ast::FnDecl,\n                 b: &ast::Block,\n                 s: Span,\n-                _: ast::NodeId) {\n+                _: ast::NodeId,\n+                defaultness: ast::Defaultness) {\n         let indent = self.block_indent;\n         let rewrite = match fk {\n             visit::FnKind::ItemFn(ident, ref generics, unsafety, constness, abi, vis) => {\n@@ -151,6 +152,7 @@ impl<'a> FmtVisitor<'a> {\n                                 generics,\n                                 unsafety,\n                                 constness,\n+                                defaultness,\n                                 abi,\n                                 vis,\n                                 codemap::mk_sp(s.lo, b.span.lo),\n@@ -163,6 +165,7 @@ impl<'a> FmtVisitor<'a> {\n                                 &sig.generics,\n                                 sig.unsafety,\n                                 sig.constness,\n+                                defaultness,\n                                 sig.abi,\n                                 vis.unwrap_or(&ast::Visibility::Inherited),\n                                 codemap::mk_sp(s.lo, b.span.lo),\n@@ -332,7 +335,8 @@ impl<'a> FmtVisitor<'a> {\n                               decl,\n                               body,\n                               item.span,\n-                              item.id)\n+                              item.id,\n+                              ast::Defaultness::Final)\n             }\n             ast::ItemKind::Ty(ref ty, ref generics) => {\n                 let rewrite = rewrite_type_alias(&self.get_context(),\n@@ -373,7 +377,8 @@ impl<'a> FmtVisitor<'a> {\n                               &sig.decl,\n                               &body,\n                               ti.span,\n-                              ti.id);\n+                              ti.id,\n+                              ast::Defaultness::Final);\n             }\n             ast::TraitItemKind::Type(ref type_param_bounds, _) => {\n                 let rewrite = rewrite_associated_type(ti.ident,\n@@ -397,7 +402,8 @@ impl<'a> FmtVisitor<'a> {\n                               &sig.decl,\n                               body,\n                               ii.span,\n-                              ii.id);\n+                              ii.id,\n+                              ii.defaultness);\n             }\n             ast::ImplItemKind::Const(ref ty, ref expr) => {\n                 let rewrite = rewrite_static(\"const\","}, {"sha": "37d703c4679f826122dc0edc45ffc59785662b66", "filename": "tests/source/issue-945.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b6263735b101b353bfee883046116b6b0e377589/tests%2Fsource%2Fissue-945.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6263735b101b353bfee883046116b6b0e377589/tests%2Fsource%2Fissue-945.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-945.rs?ref=b6263735b101b353bfee883046116b6b0e377589", "patch": "@@ -0,0 +1,5 @@\n+impl Bar { default const unsafe fn foo() { \"hi\" } }\n+\n+impl Baz { default unsafe extern \"C\" fn foo() { \"hi\" } }\n+\n+impl Foo for Bar { default fn foo() { \"hi\" } }"}, {"sha": "d46c69a4f093440aa2c7b7de852ed05ce86f0da6", "filename": "tests/target/issue-945.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b6263735b101b353bfee883046116b6b0e377589/tests%2Ftarget%2Fissue-945.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6263735b101b353bfee883046116b6b0e377589/tests%2Ftarget%2Fissue-945.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-945.rs?ref=b6263735b101b353bfee883046116b6b0e377589", "patch": "@@ -0,0 +1,17 @@\n+impl Bar {\n+    default const unsafe fn foo() {\n+        \"hi\"\n+    }\n+}\n+\n+impl Baz {\n+    default unsafe extern \"C\" fn foo() {\n+        \"hi\"\n+    }\n+}\n+\n+impl Foo for Bar {\n+    default fn foo() {\n+        \"hi\"\n+    }\n+}"}]}