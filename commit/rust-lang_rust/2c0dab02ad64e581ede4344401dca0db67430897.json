{"sha": "2c0dab02ad64e581ede4344401dca0db67430897", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMGRhYjAyYWQ2NGU1ODFlZGU0MzQ0NDAxZGNhMGRiNjc0MzA4OTc=", "commit": {"author": {"name": "Jesse Jones", "email": "jesse9jones@gmail.com", "date": "2012-11-17T17:27:03Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-18T21:25:25Z"}, "message": "Made the time to string functions pure as well as empty_tm.\n\nThis closes #3919.", "tree": {"sha": "2233f0aa67e4b47abd6a0dcf9f0f723bb0ee7766", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2233f0aa67e4b47abd6a0dcf9f0f723bb0ee7766"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c0dab02ad64e581ede4344401dca0db67430897", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c0dab02ad64e581ede4344401dca0db67430897", "html_url": "https://github.com/rust-lang/rust/commit/2c0dab02ad64e581ede4344401dca0db67430897", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c0dab02ad64e581ede4344401dca0db67430897/comments", "author": {"login": "jesse99", "id": 425055, "node_id": "MDQ6VXNlcjQyNTA1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/425055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jesse99", "html_url": "https://github.com/jesse99", "followers_url": "https://api.github.com/users/jesse99/followers", "following_url": "https://api.github.com/users/jesse99/following{/other_user}", "gists_url": "https://api.github.com/users/jesse99/gists{/gist_id}", "starred_url": "https://api.github.com/users/jesse99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jesse99/subscriptions", "organizations_url": "https://api.github.com/users/jesse99/orgs", "repos_url": "https://api.github.com/users/jesse99/repos", "events_url": "https://api.github.com/users/jesse99/events{/privacy}", "received_events_url": "https://api.github.com/users/jesse99/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c58951ea7d70bfab8c9a0a3ad6540d829c59b585", "url": "https://api.github.com/repos/rust-lang/rust/commits/c58951ea7d70bfab8c9a0a3ad6540d829c59b585", "html_url": "https://github.com/rust-lang/rust/commit/c58951ea7d70bfab8c9a0a3ad6540d829c59b585"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "912df9c7558dd18d51155f28595e27c6c5d25450", "filename": "src/libstd/time.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2c0dab02ad64e581ede4344401dca0db67430897/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c0dab02ad64e581ede4344401dca0db67430897/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=2c0dab02ad64e581ede4344401dca0db67430897", "patch": "@@ -107,7 +107,7 @@ impl Tm : Eq {\n     pure fn ne(other: &Tm) -> bool { *self != *(*other) }\n }\n \n-pub fn empty_tm() -> Tm {\n+pub pure fn empty_tm() -> Tm {\n     Tm_({\n         tm_sec: 0_i32,\n         tm_min: 0_i32,\n@@ -151,13 +151,17 @@ pub fn now() -> Tm {\n }\n \n /// Parses the time from the string according to the format string.\n-pub fn strptime(s: &str, format: &str) -> Result<Tm, ~str> {\n-    do_strptime(s, format)\n+pub pure fn strptime(s: &str, format: &str) -> Result<Tm, ~str> {\n+    // unsafe only because do_strptime is annoying to make pure\n+    // (it does IO with a str_reader)\n+    unsafe {do_strptime(s, format)}\n }\n \n /// Formats the time according to the format string.\n-pub fn strftime(format: &str, tm: Tm) -> ~str {\n-    do_strftime(format, tm)\n+pub pure fn strftime(format: &str, tm: Tm) -> ~str {\n+    // unsafe only because do_strftime is annoying to make pure\n+    // (it does IO with a str_reader)\n+    unsafe {do_strftime(format, tm)}\n }\n \n impl Tm {\n@@ -186,18 +190,18 @@ impl Tm {\n      * Return a string of the current time in the form\n      * \"Thu Jan  1 00:00:00 1970\".\n      */\n-    fn ctime() -> ~str { self.strftime(~\"%c\") }\n+    pure fn ctime() -> ~str { self.strftime(~\"%c\") }\n \n     /// Formats the time according to the format string.\n-    fn strftime(format: &str) -> ~str { strftime(format, self) }\n+    pure fn strftime(format: &str) -> ~str { strftime(format, self) }\n \n     /**\n      * Returns a time string formatted according to RFC 822.\n      *\n      * local: \"Thu, 22 Mar 2012 07:53:18 PST\"\n      * utc:   \"Thu, 22 Mar 2012 14:53:18 UTC\"\n      */\n-    fn rfc822() -> ~str {\n+    pure fn rfc822() -> ~str {\n         if self.tm_gmtoff == 0_i32 {\n             self.strftime(~\"%a, %d %b %Y %T GMT\")\n         } else {\n@@ -211,7 +215,7 @@ impl Tm {\n      * local: \"Thu, 22 Mar 2012 07:53:18 -0700\"\n      * utc:   \"Thu, 22 Mar 2012 14:53:18 -0000\"\n      */\n-    fn rfc822z() -> ~str {\n+    pure fn rfc822z() -> ~str {\n         self.strftime(~\"%a, %d %b %Y %T %z\")\n     }\n \n@@ -221,7 +225,7 @@ impl Tm {\n      * local: \"2012-02-22T07:53:18-07:00\"\n      * utc:   \"2012-02-22T14:53:18Z\"\n      */\n-    fn rfc3339() -> ~str {\n+    pure fn rfc3339() -> ~str {\n         if self.tm_gmtoff == 0_i32 {\n             self.strftime(~\"%Y-%m-%dT%H:%M:%SZ\")\n         } else {"}]}