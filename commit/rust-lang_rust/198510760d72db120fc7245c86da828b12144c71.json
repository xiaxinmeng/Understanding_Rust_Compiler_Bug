{"sha": "198510760d72db120fc7245c86da828b12144c71", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5ODUxMDc2MGQ3MmRiMTIwZmM3MjQ1Yzg2ZGE4MjhiMTIxNDRjNzE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-18T15:49:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-18T15:49:08Z"}, "message": "Merge #3636\n\n3636: Reduce visibility r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "6c366e6b98f577ec9b9b3e9504a0907bae5a68e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c366e6b98f577ec9b9b3e9504a0907bae5a68e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/198510760d72db120fc7245c86da828b12144c71", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeckL0CRBK7hj4Ov3rIwAAdHIIAFErj6CuA6DcyN9fiVEk59/y\n8gPnAXtQO7/PPrFe6U8hIBUjwWR07nqUO3QOF7kVBWyKAQlC/2wChEHRX23lpbb7\n9z4mBF1UcJZNHxi6IcCKAlX+XoeDg99WzB/xlebjmucBsxgqyfuZbbI9c29GYxtw\ngYWk8muUGSr91gkG4rV5GNLN5pnfUpiP/tv6EMH4BUKHHCuBYJ4tQLuuHcHNZWpk\n4l32Xy7aTWUC9ceCYrNw7BSMKpUqAV+Y80uaF7VfRE/EYeYRn7GuoshMTWYKfjv3\njzklhY10R4waubgph5zibIXyOtlivypYQ3/Hq1tw4b2fYr1KN/+1IKiqNr3Qwuo=\n=vccv\n-----END PGP SIGNATURE-----\n", "payload": "tree 6c366e6b98f577ec9b9b3e9504a0907bae5a68e9\nparent f0a1b64d7ee3baa7ccf980b35b85f0a4a3b85b1a\nparent 3c88ef76d63925e4277d1e5b053a3223d6c2608c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1584546548 +0000\ncommitter GitHub <noreply@github.com> 1584546548 +0000\n\nMerge #3636\n\n3636: Reduce visibility r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/198510760d72db120fc7245c86da828b12144c71", "html_url": "https://github.com/rust-lang/rust/commit/198510760d72db120fc7245c86da828b12144c71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/198510760d72db120fc7245c86da828b12144c71/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0a1b64d7ee3baa7ccf980b35b85f0a4a3b85b1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0a1b64d7ee3baa7ccf980b35b85f0a4a3b85b1a", "html_url": "https://github.com/rust-lang/rust/commit/f0a1b64d7ee3baa7ccf980b35b85f0a4a3b85b1a"}, {"sha": "3c88ef76d63925e4277d1e5b053a3223d6c2608c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c88ef76d63925e4277d1e5b053a3223d6c2608c", "html_url": "https://github.com/rust-lang/rust/commit/3c88ef76d63925e4277d1e5b053a3223d6c2608c"}], "stats": {"total": 56, "additions": 28, "deletions": 28}, "files": [{"sha": "260ada716edef69d35a5bd1ff4df55e6e0c26d3d", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/198510760d72db120fc7245c86da828b12144c71/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198510760d72db120fc7245c86da828b12144c71/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=198510760d72db120fc7245c86da828b12144c71", "patch": "@@ -93,66 +93,66 @@ pub fn resolved_assists(db: &RootDatabase, range: FileRange) -> Vec<ResolvedAssi\n mod handlers {\n     use crate::AssistHandler;\n \n+    mod add_custom_impl;\n     mod add_derive;\n     mod add_explicit_type;\n     mod add_impl;\n-    mod add_custom_impl;\n+    mod add_missing_impl_members;\n     mod add_new;\n     mod apply_demorgan;\n     mod auto_import;\n-    mod invert_if;\n-    mod flip_comma;\n-    mod flip_binexpr;\n-    mod flip_trait_bound;\n     mod change_visibility;\n+    mod early_return;\n     mod fill_match_arms;\n-    mod merge_match_arms;\n-    mod introduce_variable;\n+    mod flip_binexpr;\n+    mod flip_comma;\n+    mod flip_trait_bound;\n     mod inline_local_variable;\n+    mod introduce_variable;\n+    mod invert_if;\n+    mod merge_match_arms;\n+    mod move_bounds;\n+    mod move_guard;\n     mod raw_string;\n+    mod remove_dbg;\n     mod remove_mut;\n     mod replace_if_let_with_match;\n+    mod replace_qualified_name_with_use;\n     mod split_import;\n-    mod remove_dbg;\n-    pub(crate) mod replace_qualified_name_with_use;\n-    mod add_missing_impl_members;\n-    mod move_guard;\n-    mod move_bounds;\n-    mod early_return;\n \n     pub(crate) fn all() -> &'static [AssistHandler] {\n         &[\n+            add_custom_impl::add_custom_impl,\n             add_derive::add_derive,\n             add_explicit_type::add_explicit_type,\n             add_impl::add_impl,\n-            add_custom_impl::add_custom_impl,\n+            add_missing_impl_members::add_missing_default_members,\n+            add_missing_impl_members::add_missing_impl_members,\n             add_new::add_new,\n             apply_demorgan::apply_demorgan,\n-            invert_if::invert_if,\n+            auto_import::auto_import,\n             change_visibility::change_visibility,\n+            early_return::convert_to_guarded_return,\n             fill_match_arms::fill_match_arms,\n-            merge_match_arms::merge_match_arms,\n-            flip_comma::flip_comma,\n             flip_binexpr::flip_binexpr,\n+            flip_comma::flip_comma,\n             flip_trait_bound::flip_trait_bound,\n-            introduce_variable::introduce_variable,\n-            replace_if_let_with_match::replace_if_let_with_match,\n-            split_import::split_import,\n-            remove_dbg::remove_dbg,\n-            replace_qualified_name_with_use::replace_qualified_name_with_use,\n-            add_missing_impl_members::add_missing_impl_members,\n-            add_missing_impl_members::add_missing_default_members,\n             inline_local_variable::inline_local_variable,\n-            move_guard::move_guard_to_arm_body,\n-            move_guard::move_arm_cond_to_match_guard,\n+            introduce_variable::introduce_variable,\n+            invert_if::invert_if,\n+            merge_match_arms::merge_match_arms,\n             move_bounds::move_bounds_to_where_clause,\n+            move_guard::move_arm_cond_to_match_guard,\n+            move_guard::move_guard_to_arm_body,\n             raw_string::add_hash,\n             raw_string::make_raw_string,\n             raw_string::make_usual_string,\n             raw_string::remove_hash,\n+            remove_dbg::remove_dbg,\n             remove_mut::remove_mut,\n-            early_return::convert_to_guarded_return,\n-            auto_import::auto_import,\n+            replace_if_let_with_match::replace_if_let_with_match,\n+            replace_qualified_name_with_use::replace_qualified_name_with_use,\n+            split_import::split_import,\n         ]\n     }\n }"}]}