{"sha": "8ff0fd1fa94c6e238a2baab4e2ff86a08e77dbe1", "node_id": "C_kwDOAAsO6NoAKDhmZjBmZDFmYTk0YzZlMjM4YTJiYWFiNGUyZmY4NmEwOGU3N2RiZTE", "commit": {"author": {"name": "Noa", "email": "coolreader18@gmail.com", "date": "2022-03-27T05:50:24Z"}, "committer": {"name": "Noa", "email": "coolreader18@gmail.com", "date": "2022-03-31T02:35:42Z"}, "message": "Add ExitCode::exit_process()", "tree": {"sha": "4fdc1ec47165883464e9cd787c3cb344364e1856", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fdc1ec47165883464e9cd787c3cb344364e1856"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ff0fd1fa94c6e238a2baab4e2ff86a08e77dbe1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEtojRJkPnkSUwmWPDf599sXaMWc8FAmJFE34ACgkQf599sXaM\nWc+9yBAAq8aMS/FUn3day/EW2fJXh2W8gzzj6ByYLrlwZbqAPyNBRS8f1xdJr7a/\nShMLVyTrmBxr1416ThkKL9m8lpydKbHLKmyMzWOanUob/4hBl9gQbCPPVPExwo/W\nrfg5bNM+4fxs65DIwTFlPmyVq2UwzO6xVy7l+vZVZDUA/BsQqvK4a17w+QEgPRxm\nX24iAyVTTTTzKq9bAuXsBQscNV6X5ILFLCUiQ0nWtfyHUeNyUkF8Y6myttad85uW\nVN89KQXrPM7HQ+E0sHpARYY7WSurgeOEhxIxRwoxt6EHVVQHaW5yZmpyXj7ejMIt\nIPjdZiJARyJ5Yv6LL9dsVZ6/25GQ2sl/pZ7XTw+b9OaSDgLpkjrZc0k+A4FFJPHu\nc57/WC6EpuuA0RKSJ9xPLs3Uq83/OV+SvTfv5hiZZ77IP6tK962JjFBUHQqJWGML\nvUVKcDnzrHNakF0CmzTps3hStWrPq/YUDslkFWtK5sPzyKzR3PmgAMwTxYNmHQYY\nRECUIkirxxuHC39nW4X4YB8szOYEmlFZTwkpedBCe3t0jXkg2L6BNSX8ZCRjxztb\nayybEofCasM0Vqhk0LGILBSxQQU/rSOmpy6KxiaMFxlQJXkaP4aLNNkKrcknnCfs\nPwk6TZ8ERzIuMXVjdfNORyR3t+CRDkj5qB4avYtpLKnnhCdxfV8=\n=8mvj\n-----END PGP SIGNATURE-----", "payload": "tree 4fdc1ec47165883464e9cd787c3cb344364e1856\nparent 1446d17b8f4bd3ff8dbfb129a7674165e06f9f4c\nauthor Noa <coolreader18@gmail.com> 1648360224 -0500\ncommitter Noa <coolreader18@gmail.com> 1648694142 -0500\n\nAdd ExitCode::exit_process()\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ff0fd1fa94c6e238a2baab4e2ff86a08e77dbe1", "html_url": "https://github.com/rust-lang/rust/commit/8ff0fd1fa94c6e238a2baab4e2ff86a08e77dbe1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ff0fd1fa94c6e238a2baab4e2ff86a08e77dbe1/comments", "author": {"login": "coolreader18", "id": 33094578, "node_id": "MDQ6VXNlcjMzMDk0NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/33094578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coolreader18", "html_url": "https://github.com/coolreader18", "followers_url": "https://api.github.com/users/coolreader18/followers", "following_url": "https://api.github.com/users/coolreader18/following{/other_user}", "gists_url": "https://api.github.com/users/coolreader18/gists{/gist_id}", "starred_url": "https://api.github.com/users/coolreader18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coolreader18/subscriptions", "organizations_url": "https://api.github.com/users/coolreader18/orgs", "repos_url": "https://api.github.com/users/coolreader18/repos", "events_url": "https://api.github.com/users/coolreader18/events{/privacy}", "received_events_url": "https://api.github.com/users/coolreader18/received_events", "type": "User", "site_admin": false}, "committer": {"login": "coolreader18", "id": 33094578, "node_id": "MDQ6VXNlcjMzMDk0NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/33094578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coolreader18", "html_url": "https://github.com/coolreader18", "followers_url": "https://api.github.com/users/coolreader18/followers", "following_url": "https://api.github.com/users/coolreader18/following{/other_user}", "gists_url": "https://api.github.com/users/coolreader18/gists{/gist_id}", "starred_url": "https://api.github.com/users/coolreader18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coolreader18/subscriptions", "organizations_url": "https://api.github.com/users/coolreader18/orgs", "repos_url": "https://api.github.com/users/coolreader18/repos", "events_url": "https://api.github.com/users/coolreader18/events{/privacy}", "received_events_url": "https://api.github.com/users/coolreader18/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1446d17b8f4bd3ff8dbfb129a7674165e06f9f4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1446d17b8f4bd3ff8dbfb129a7674165e06f9f4c", "html_url": "https://github.com/rust-lang/rust/commit/1446d17b8f4bd3ff8dbfb129a7674165e06f9f4c"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "d2994e56b13ceb6aad750b6997e5cdf037cadb29", "filename": "library/std/src/process.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8ff0fd1fa94c6e238a2baab4e2ff86a08e77dbe1/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ff0fd1fa94c6e238a2baab4e2ff86a08e77dbe1/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=8ff0fd1fa94c6e238a2baab4e2ff86a08e77dbe1", "patch": "@@ -1725,6 +1725,26 @@ impl ExitCode {\n     /// return the same codes (but will also `eprintln!` the error).\n     #[stable(feature = \"process_exitcode\", since = \"1.60.0\")]\n     pub const FAILURE: ExitCode = ExitCode(imp::ExitCode::FAILURE);\n+\n+    /// Exit the current process with the given `ExitCode`.\n+    ///\n+    /// Note that this has the same caveats as [`process::exit()`][exit], namely that this function\n+    /// terminates the process immediately, so no destructors on the current stack or any other\n+    /// thread's stack will be run. If a clean shutdown is needed, it is recommended to simply\n+    /// return this ExitCode from the `main` function, as demonstrated in the [type\n+    /// documentation](#examples).\n+    ///\n+    /// # Differences from `process::exit()`\n+    ///\n+    /// `process::exit()` accepts any `i32` value as the exit code for the process; however, there\n+    /// are platforms that only use a subset of that value (see [`process::exit` platform-specific\n+    /// behavior][exit#platform-specific-behavior]). `ExitCode` exists because of this; only\n+    /// `ExitCode`s that are valid on all platforms can be created, so those problems don't exist\n+    /// with this method.\n+    #[unstable(feature = \"exitcode_exit_method\", issue = \"none\")]\n+    pub fn exit_process(self) -> ! {\n+        exit(self.to_i32())\n+    }\n }\n \n impl ExitCode {"}]}