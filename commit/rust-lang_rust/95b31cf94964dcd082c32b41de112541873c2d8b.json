{"sha": "95b31cf94964dcd082c32b41de112541873c2d8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1YjMxY2Y5NDk2NGRjZDA4MmMzMmI0MWRlMTEyNTQxODczYzJkOGI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-02-27T01:34:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-27T01:34:35Z"}, "message": "Rollup merge of #82494 - estebank:issue-82455, r=petrochenkov\n\nSubstitute erased lifetimes on bad placeholder type\n\nFix #82455.", "tree": {"sha": "59c6d8c32cb9915f5ef2e461cda52c68ad4d87ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59c6d8c32cb9915f5ef2e461cda52c68ad4d87ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95b31cf94964dcd082c32b41de112541873c2d8b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgOaGrCRBK7hj4Ov3rIwAAdHIIAGX+NKJeHdCH2eVnQEPNN/qH\nUCNC+vp//9Y1kYcdsh3bHeM9CuDNIe4FAcjy25Re8ASk3SmiT1C8OT91aq3gyf4B\nqVZ+4sgvA8ElUhGmJCcAXcSanYKc2d8zzNVEvPBRObareTBjvmEwZAr5uDUPYTnO\n1SwR9/1Fx1DloYEeWomU9XeD2YGzSWIby2f0R+iCP5uTGOZicjBpVO2uhLS2Tkk2\n8QVSp6NINA8s031Yfdw2lR9Ak5idPcnzLnQci4KhVW554aVpOvGv1pBF/XITw9bM\ntKGRTbgROiFCXJgr802y3iwVpgnbyKyuTfdjKB5lw2+gQsdoE2cHs/Dy41vinwQ=\n=k6bz\n-----END PGP SIGNATURE-----\n", "payload": "tree 59c6d8c32cb9915f5ef2e461cda52c68ad4d87ba\nparent a1f75409a6e324064e74ae9efccb48d6d2075cff\nparent 5ad60888275852136adea38aebc7fcce69b52474\nauthor Dylan DPC <dylan.dpc@gmail.com> 1614389675 +0100\ncommitter GitHub <noreply@github.com> 1614389675 +0100\n\nRollup merge of #82494 - estebank:issue-82455, r=petrochenkov\n\nSubstitute erased lifetimes on bad placeholder type\n\nFix #82455.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95b31cf94964dcd082c32b41de112541873c2d8b", "html_url": "https://github.com/rust-lang/rust/commit/95b31cf94964dcd082c32b41de112541873c2d8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95b31cf94964dcd082c32b41de112541873c2d8b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1f75409a6e324064e74ae9efccb48d6d2075cff", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1f75409a6e324064e74ae9efccb48d6d2075cff", "html_url": "https://github.com/rust-lang/rust/commit/a1f75409a6e324064e74ae9efccb48d6d2075cff"}, {"sha": "5ad60888275852136adea38aebc7fcce69b52474", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ad60888275852136adea38aebc7fcce69b52474", "html_url": "https://github.com/rust-lang/rust/commit/5ad60888275852136adea38aebc7fcce69b52474"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "3881d55ef916930f4f49db5efc23b82889dd6e55", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/95b31cf94964dcd082c32b41de112541873c2d8b/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95b31cf94964dcd082c32b41de112541873c2d8b/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=95b31cf94964dcd082c32b41de112541873c2d8b", "patch": "@@ -371,6 +371,11 @@ impl AstConv<'tcx> for ItemCtxt<'tcx> {\n         span: Span,\n     ) -> &'tcx Const<'tcx> {\n         bad_placeholder_type(self.tcx(), vec![span]).emit();\n+        // Typeck doesn't expect erased regions to be returned from `type_of`.\n+        let ty = self.tcx.fold_regions(ty, &mut false, |r, _| match r {\n+            ty::ReErased => self.tcx.lifetimes.re_static,\n+            _ => r,\n+        });\n         self.tcx().const_error(ty)\n     }\n \n@@ -1647,6 +1652,12 @@ fn fn_sig(tcx: TyCtxt<'_>, def_id: DefId) -> ty::PolyFnSig<'_> {\n             match get_infer_ret_ty(&sig.decl.output) {\n                 Some(ty) => {\n                     let fn_sig = tcx.typeck(def_id).liberated_fn_sigs()[hir_id];\n+                    // Typeck doesn't expect erased regions to be returned from `type_of`.\n+                    let fn_sig = tcx.fold_regions(fn_sig, &mut false, |r, _| match r {\n+                        ty::ReErased => tcx.lifetimes.re_static,\n+                        _ => r,\n+                    });\n+\n                     let mut visitor = PlaceholderHirTyCollector::default();\n                     visitor.visit_ty(ty);\n                     let mut diag = bad_placeholder_type(tcx, visitor.0);\n@@ -1675,6 +1686,7 @@ fn fn_sig(tcx: TyCtxt<'_>, def_id: DefId) -> ty::PolyFnSig<'_> {\n                         }\n                     }\n                     diag.emit();\n+\n                     ty::Binder::bind(fn_sig)\n                 }\n                 None => AstConv::ty_of_fn("}, {"sha": "2523362fdc4b6637127f22ce983977642eab32f7", "filename": "src/test/ui/typeck/typeck_type_placeholder_item.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/95b31cf94964dcd082c32b41de112541873c2d8b/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95b31cf94964dcd082c32b41de112541873c2d8b/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs?ref=95b31cf94964dcd082c32b41de112541873c2d8b", "patch": "@@ -208,3 +208,15 @@ impl Qux for Struct {\n     const D: _ = 42;\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n }\n+\n+fn map<T>(_: fn() -> Option<&'static T>) -> Option<T> {\n+    None\n+}\n+\n+fn value() -> Option<&'static _> {\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    Option::<&'static u8>::None\n+}\n+\n+const _: Option<_> = map(value);\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures"}, {"sha": "1034402bfb08d00ee67ecf490cfb5b13358ab07c", "filename": "src/test/ui/typeck/typeck_type_placeholder_item.stderr", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/95b31cf94964dcd082c32b41de112541873c2d8b/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/95b31cf94964dcd082c32b41de112541873c2d8b/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr?ref=95b31cf94964dcd082c32b41de112541873c2d8b", "patch": "@@ -158,7 +158,7 @@ LL | fn test11(x: &usize) -> &_ {\n    |                         -^\n    |                         ||\n    |                         |not allowed in type signatures\n-   |                         help: replace with the correct return type: `&&usize`\n+   |                         help: replace with the correct return type: `&'static &'static usize`\n \n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n   --> $DIR/typeck_type_placeholder_item.rs:52:52\n@@ -410,6 +410,24 @@ error[E0121]: the type placeholder `_` is not allowed within types on item signa\n LL | type Y = impl Trait<_>;\n    |                     ^ not allowed in type signatures\n \n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+  --> $DIR/typeck_type_placeholder_item.rs:216:31\n+   |\n+LL | fn value() -> Option<&'static _> {\n+   |               ----------------^-\n+   |               |               |\n+   |               |               not allowed in type signatures\n+   |               help: replace with the correct return type: `Option<&'static u8>`\n+\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+  --> $DIR/typeck_type_placeholder_item.rs:221:10\n+   |\n+LL | const _: Option<_> = map(value);\n+   |          ^^^^^^^^^\n+   |          |\n+   |          not allowed in type signatures\n+   |          help: replace `_` with the correct type: `Option<u8>`\n+\n error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n   --> $DIR/typeck_type_placeholder_item.rs:140:31\n    |\n@@ -614,7 +632,7 @@ LL |     const D: _ = 42;\n    |              not allowed in type signatures\n    |              help: replace `_` with the correct type: `i32`\n \n-error: aborting due to 67 previous errors\n+error: aborting due to 69 previous errors\n \n Some errors have detailed explanations: E0121, E0282, E0403.\n For more information about an error, try `rustc --explain E0121`."}]}