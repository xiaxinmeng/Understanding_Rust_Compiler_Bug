{"sha": "cd4b3ac379a862325d7eefeca6d7d460f344594e", "node_id": "C_kwDOAAsO6NoAKGNkNGIzYWMzNzlhODYyMzI1ZDdlZWZlY2E2ZDdkNDYwZjM0NDU5NGU", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-11-12T16:25:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-12T16:25:03Z"}, "message": "Rollup merge of #104263 - albertlarsan68:add-ilog2-to-leading-zeroes-docs, r=scottmcm\n\nAdd a reference to ilog2 in leading_zeros integer docs\n\nFixes #104248", "tree": {"sha": "bbb9ea602054102e2a104630aeb68ae66716cb72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbb9ea602054102e2a104630aeb68ae66716cb72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd4b3ac379a862325d7eefeca6d7d460f344594e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjb8jfCRBK7hj4Ov3rIwAAFNEIABScPzPAz+nUAgIMFqYvBRQa\nFqsULauMpWpaJtxlAu5pr9B3pbQfE0HoJoDYVwwNKSsF6IKEuBfjbzQdW1vbPd9R\neFRcji38KqkCDeBesjqRhzXHsGdBwQnrD8JV0QntRqqkGbNj5YNAa2+qnZxJDwGJ\nbgN9hHIfJaEjk8CzpanEGm0bd6Gi7PbC8OX5t3M6gs4gBc1l9hxRv8OY8JaPB9rk\n3ckRLwVND5AuPCuLwQLnKe0EIJdOAN4w/R70x72z/aU8y6Fm0p4Wc/IYtdHU+yAH\nRDnuytbiPWB8LUROizCz+ba/mh7QM0IGymkKukAAqUbrPx9Ft1LRTK+qhBCYVQI=\n=+QlI\n-----END PGP SIGNATURE-----\n", "payload": "tree bbb9ea602054102e2a104630aeb68ae66716cb72\nparent fe803645005d190fd0bb147ccdee07d6d607cc68\nparent a1909b7b07105a9237883634f33b723bfab43dc1\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1668270303 +0100\ncommitter GitHub <noreply@github.com> 1668270303 +0100\n\nRollup merge of #104263 - albertlarsan68:add-ilog2-to-leading-zeroes-docs, r=scottmcm\n\nAdd a reference to ilog2 in leading_zeros integer docs\n\nFixes #104248\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd4b3ac379a862325d7eefeca6d7d460f344594e", "html_url": "https://github.com/rust-lang/rust/commit/cd4b3ac379a862325d7eefeca6d7d460f344594e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd4b3ac379a862325d7eefeca6d7d460f344594e/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe803645005d190fd0bb147ccdee07d6d607cc68", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe803645005d190fd0bb147ccdee07d6d607cc68", "html_url": "https://github.com/rust-lang/rust/commit/fe803645005d190fd0bb147ccdee07d6d607cc68"}, {"sha": "a1909b7b07105a9237883634f33b723bfab43dc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1909b7b07105a9237883634f33b723bfab43dc1", "html_url": "https://github.com/rust-lang/rust/commit/a1909b7b07105a9237883634f33b723bfab43dc1"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "c2f6b60375e9a3283d6e5651e485f4f94b3824f0", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd4b3ac379a862325d7eefeca6d7d460f344594e/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd4b3ac379a862325d7eefeca6d7d460f344594e/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=cd4b3ac379a862325d7eefeca6d7d460f344594e", "patch": "@@ -107,6 +107,9 @@ macro_rules! int_impl {\n \n         /// Returns the number of leading zeros in the binary representation of `self`.\n         ///\n+        /// Depending on what you're doing with the value, you might also be interested in the\n+        /// [`ilog2`] function which returns a consistent number, even if the type widens.\n+        ///\n         /// # Examples\n         ///\n         /// Basic usage:\n@@ -116,6 +119,7 @@ macro_rules! int_impl {\n         ///\n         /// assert_eq!(n.leading_zeros(), 0);\n         /// ```\n+        #[doc = concat!(\"[`ilog2`]: \", stringify!($SelfT), \"::ilog2\")]\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         #[rustc_const_stable(feature = \"const_int_methods\", since = \"1.32.0\")]\n         #[must_use = \"this returns the result of the operation, \\"}, {"sha": "d3ba79a2e64dda870edd5f56a1bbb522733133f0", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd4b3ac379a862325d7eefeca6d7d460f344594e/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd4b3ac379a862325d7eefeca6d7d460f344594e/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=cd4b3ac379a862325d7eefeca6d7d460f344594e", "patch": "@@ -109,6 +109,9 @@ macro_rules! uint_impl {\n \n         /// Returns the number of leading zeros in the binary representation of `self`.\n         ///\n+        /// Depending on what you're doing with the value, you might also be interested in the\n+        /// [`ilog2`] function which returns a consistent number, even if the type widens.\n+        ///\n         /// # Examples\n         ///\n         /// Basic usage:\n@@ -118,6 +121,7 @@ macro_rules! uint_impl {\n         ///\n         /// assert_eq!(n.leading_zeros(), 2);\n         /// ```\n+        #[doc = concat!(\"[`ilog2`]: \", stringify!($SelfT), \"::ilog2\")]\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         #[rustc_const_stable(feature = \"const_math\", since = \"1.32.0\")]\n         #[must_use = \"this returns the result of the operation, \\"}]}