{"sha": "dffc1b32820d740b3e2b3cf8e98b4d0511a62163", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmZmMxYjMyODIwZDc0MGIzZTJiM2NmOGU5OGI0ZDA1MTFhNjIxNjM=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "matti@marinelayer.io", "date": "2019-09-05T10:23:56Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2019-10-22T17:14:22Z"}, "message": "Apply clippy::useless_let_if_seq suggestion", "tree": {"sha": "12cff598c5d5f5b0c36187839cbcf195da1eec08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12cff598c5d5f5b0c36187839cbcf195da1eec08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dffc1b32820d740b3e2b3cf8e98b4d0511a62163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dffc1b32820d740b3e2b3cf8e98b4d0511a62163", "html_url": "https://github.com/rust-lang/rust/commit/dffc1b32820d740b3e2b3cf8e98b4d0511a62163", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dffc1b32820d740b3e2b3cf8e98b4d0511a62163/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57bfb8096295150c06559da10adc5629e445a4ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/57bfb8096295150c06559da10adc5629e445a4ac", "html_url": "https://github.com/rust-lang/rust/commit/57bfb8096295150c06559da10adc5629e445a4ac"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "ed89852dc48da63010be52885842dbac543a2a82", "filename": "src/libcore/num/dec2flt/algorithm.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dffc1b32820d740b3e2b3cf8e98b4d0511a62163/src%2Flibcore%2Fnum%2Fdec2flt%2Falgorithm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dffc1b32820d740b3e2b3cf8e98b4d0511a62163/src%2Flibcore%2Fnum%2Fdec2flt%2Falgorithm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fdec2flt%2Falgorithm.rs?ref=dffc1b32820d740b3e2b3cf8e98b4d0511a62163", "patch": "@@ -143,13 +143,12 @@ pub fn fast_path<T: RawFloat>(integral: &[u8], fractional: &[u8], e: i64) -> Opt\n /// > not a bound for the true error, but bounds the difference between the approximation z and\n /// > the best possible approximation that uses p bits of significand.)\n pub fn bellerophon<T: RawFloat>(f: &Big, e: i16) -> T {\n-    let slop;\n-    if f <= &Big::from_u64(T::MAX_SIG) {\n+    let slop = if f <= &Big::from_u64(T::MAX_SIG) {\n         // The cases abs(e) < log5(2^N) are in fast_path()\n-        slop = if e >= 0 { 0 } else { 3 };\n+        if e >= 0 { 0 } else { 3 }\n     } else {\n-        slop = if e >= 0 { 1 } else { 4 };\n-    }\n+        if e >= 0 { 1 } else { 4 }\n+    };\n     let z = rawfp::big_to_fp(f).mul(&power_of_ten(e)).normalize();\n     let exp_p_n = 1 << (P - T::SIG_BITS as u32);\n     let lowbits: i64 = (z.f % exp_p_n) as i64;"}]}