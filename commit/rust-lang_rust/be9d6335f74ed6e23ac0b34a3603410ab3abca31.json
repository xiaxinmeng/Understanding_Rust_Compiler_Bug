{"sha": "be9d6335f74ed6e23ac0b34a3603410ab3abca31", "node_id": "C_kwDOAAsO6NoAKGJlOWQ2MzM1Zjc0ZWQ2ZTIzYWMwYjM0YTM2MDM0MTBhYjNhYmNhMzE", "commit": {"author": {"name": "zredb", "email": "zredb@163.com", "date": "2022-01-13T06:05:52Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-01-17T12:41:59Z"}, "message": "fix #90187: Replace all def_id_no_primitives with def_id", "tree": {"sha": "5b416576f40097233a0f32abeccde00ca9fd0968", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b416576f40097233a0f32abeccde00ca9fd0968"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be9d6335f74ed6e23ac0b34a3603410ab3abca31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be9d6335f74ed6e23ac0b34a3603410ab3abca31", "html_url": "https://github.com/rust-lang/rust/commit/be9d6335f74ed6e23ac0b34a3603410ab3abca31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be9d6335f74ed6e23ac0b34a3603410ab3abca31/comments", "author": {"login": "zredb", "id": 8102504, "node_id": "MDQ6VXNlcjgxMDI1MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8102504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zredb", "html_url": "https://github.com/zredb", "followers_url": "https://api.github.com/users/zredb/followers", "following_url": "https://api.github.com/users/zredb/following{/other_user}", "gists_url": "https://api.github.com/users/zredb/gists{/gist_id}", "starred_url": "https://api.github.com/users/zredb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zredb/subscriptions", "organizations_url": "https://api.github.com/users/zredb/orgs", "repos_url": "https://api.github.com/users/zredb/repos", "events_url": "https://api.github.com/users/zredb/events{/privacy}", "received_events_url": "https://api.github.com/users/zredb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dd2703f8a3f8022da1943cdfc3e53df93f5c896", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dd2703f8a3f8022da1943cdfc3e53df93f5c896", "html_url": "https://github.com/rust-lang/rust/commit/0dd2703f8a3f8022da1943cdfc3e53df93f5c896"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "53159709586c6826987c39284ba1d4756ed43cc1", "filename": "src/librustdoc/formats/cache.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be9d6335f74ed6e23ac0b34a3603410ab3abca31/src%2Flibrustdoc%2Fformats%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be9d6335f74ed6e23ac0b34a3603410ab3abca31/src%2Flibrustdoc%2Fformats%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fformats%2Fcache.rs?ref=be9d6335f74ed6e23ac0b34a3603410ab3abca31", "patch": "@@ -25,7 +25,7 @@ use crate::html::render::IndexItem;\n /// to be a fairly large and expensive structure to clone. Instead this adheres\n /// to `Send` so it may be stored in an `Arc` instance and shared among the various\n /// rendering threads.\n-#[derive(Default, Debug)]\n+#[derive(Default)]\n crate struct Cache {\n     /// Maps a type ID to all known implementations for that type. This is only\n     /// recognized for intra-crate [`clean::Type::Path`]s, and is used to print"}, {"sha": "af14efe8aa0ff2b60141a858c090ab0b43c8c5e1", "filename": "src/librustdoc/html/render/search_index.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be9d6335f74ed6e23ac0b34a3603410ab3abca31/src%2Flibrustdoc%2Fhtml%2Frender%2Fsearch_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be9d6335f74ed6e23ac0b34a3603410ab3abca31/src%2Flibrustdoc%2Fhtml%2Frender%2Fsearch_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fsearch_index.rs?ref=be9d6335f74ed6e23ac0b34a3603410ab3abca31", "patch": "@@ -241,7 +241,7 @@ fn get_index_type_name(clean_type: &clean::Type) -> Option<Symbol> {\n ///\n /// Important note: It goes through generics recursively. So if you have\n /// `T: Option<Result<(), ()>>`, it'll go into `Option` and then into `Result`.\n-#[instrument(level = \"trace\", skip(tcx, res))]\n+#[instrument(level = \"trace\", skip(tcx, res, cache))]\n fn add_generics_and_bounds_as_types<'tcx>(\n     generics: &Generics,\n     arg: &Type,"}]}