{"sha": "1ac9bf65b6f8ab4da07a039127d8dae11b31acc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhYzliZjY1YjZmOGFiNGRhMDdhMDM5MTI3ZDhkYWUxMWIzMWFjYzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-28T05:46:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-28T05:46:33Z"}, "message": "auto merge of #11738 : dmanescu/rust/11721, r=alexcrichton\n\nFixes #11721", "tree": {"sha": "df7d3fd5dfd149616022723fbe52853777a77a08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df7d3fd5dfd149616022723fbe52853777a77a08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9", "html_url": "https://github.com/rust-lang/rust/commit/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d21b18306cd3679e94c58d9d5c1c4a3d291167fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/d21b18306cd3679e94c58d9d5c1c4a3d291167fe", "html_url": "https://github.com/rust-lang/rust/commit/d21b18306cd3679e94c58d9d5c1c4a3d291167fe"}, {"sha": "28b987b99a32dfac004643200a9414ee832afa1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/28b987b99a32dfac004643200a9414ee832afa1c", "html_url": "https://github.com/rust-lang/rust/commit/28b987b99a32dfac004643200a9414ee832afa1c"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "a0d7b1dee120be956dbbbd586af63a654932468d", "filename": "src/librustc/front/feature_gate.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/src%2Flibrustc%2Ffront%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/src%2Flibrustc%2Ffront%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ffeature_gate.rs?ref=1ac9bf65b6f8ab4da07a039127d8dae11b31acc9", "patch": "@@ -47,6 +47,7 @@ static KNOWN_FEATURES: &'static [(&'static str, Status)] = &[\n     (\"macro_registrar\", Active),\n     (\"log_syntax\", Active),\n     (\"trace_macros\", Active),\n+    (\"simd\", Active),\n \n     // These are used to test this portion of the compiler, they don't actually\n     // mean anything\n@@ -171,6 +172,13 @@ impl Visitor<()> for Context {\n                 }\n             }\n \n+            ast::ItemStruct(..) => {\n+                if attr::contains_name(i.attrs, \"simd\") {\n+                    self.gate_feature(\"simd\", i.span,\n+                                      \"SIMD types are experimental and possibly buggy\");\n+                }\n+            }\n+\n             _ => {}\n         }\n "}, {"sha": "17b6c24773a6e9b7bfa3de16ab65e3da3db2e855", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=1ac9bf65b6f8ab4da07a039127d8dae11b31acc9", "patch": "@@ -52,13 +52,14 @@\n       html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n \n-#[feature(macro_rules, globs, asm, managed_boxes, thread_local, link_args)];\n+#[feature(macro_rules, globs, asm, managed_boxes, thread_local, link_args, simd)];\n \n // Don't link to std. We are std.\n #[no_std];\n \n #[deny(non_camel_case_types)];\n #[deny(missing_doc)];\n+#[allow(unknown_features)];\n \n // When testing libstd, bring in libuv as the I/O backend so tests can print\n // things and all of the std::io tests have an I/O interface to run on top"}, {"sha": "1029e5fdbd3592f87e312ebb0e7f252eaf3ebeb5", "filename": "src/libstd/unstable/simd.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/src%2Flibstd%2Funstable%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/src%2Flibstd%2Funstable%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fsimd.rs?ref=1ac9bf65b6f8ab4da07a039127d8dae11b31acc9", "patch": "@@ -12,32 +12,42 @@\n \n #[allow(non_camel_case_types)];\n \n+#[experimental]\n #[simd]\n pub struct i8x16(i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8);\n \n+#[experimental]\n #[simd]\n pub struct i16x8(i16, i16, i16, i16, i16, i16, i16, i16);\n \n+#[experimental]\n #[simd]\n pub struct i32x4(i32, i32, i32, i32);\n \n+#[experimental]\n #[simd]\n pub struct i64x2(i64, i64);\n \n+#[experimental]\n #[simd]\n pub struct u8x16(u8, u8, u8, u8, u8, u8, u8, u8, u8, u8, u8, u8, u8, u8, u8, u8);\n \n+#[experimental]\n #[simd]\n pub struct u16x8(u16, u16, u16, u16, u16, u16, u16, u16);\n \n+#[experimental]\n #[simd]\n pub struct u32x4(u32, u32, u32, u32);\n \n+#[experimental]\n #[simd]\n pub struct u64x2(u64, u64);\n \n+#[experimental]\n #[simd]\n pub struct f32x4(f32, f32, f32, f32);\n \n+#[experimental]\n #[simd]\n pub struct f64x2(f64, f64);"}, {"sha": "a000b91dfdea31b182ad0deb5f2a09e78c424a5d", "filename": "src/test/compile-fail/gated-simd.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/src%2Ftest%2Fcompile-fail%2Fgated-simd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/src%2Ftest%2Fcompile-fail%2Fgated-simd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-simd.rs?ref=1ac9bf65b6f8ab4da07a039127d8dae11b31acc9", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[simd]\n+pub struct i64x2(i64, i64); //~ ERROR: SIMD types are experimental\n+\n+fn main() {}\n\\ No newline at end of file"}, {"sha": "2ed4317d52dea5d216057e77bb35c432a3d342d9", "filename": "src/test/compile-fail/simd-experimental.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/src%2Ftest%2Fcompile-fail%2Fsimd-experimental.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/src%2Ftest%2Fcompile-fail%2Fsimd-experimental.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsimd-experimental.rs?ref=1ac9bf65b6f8ab4da07a039127d8dae11b31acc9", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-test FIXME #11741 tuple structs ignore stability attributes\n+\n+#[deny(experimental)];\n+\n+use std::unstable::simd;\n+\n+fn main() {\n+    let _ = simd::i64x2(0, 0); //~ ERROR: experimental\n+}"}, {"sha": "266c2a9c4537244dd959984af825a20636ef1c2d", "filename": "src/test/compile-fail/simd-type.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/src%2Ftest%2Fcompile-fail%2Fsimd-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/src%2Ftest%2Fcompile-fail%2Fsimd-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsimd-type.rs?ref=1ac9bf65b6f8ab4da07a039127d8dae11b31acc9", "patch": "@@ -1,3 +1,5 @@\n+#[feature(simd)];\n+\n #[simd]\n struct vec4<T>(T, T, T, T); //~ ERROR SIMD vector cannot be generic\n "}, {"sha": "ed75924fe894cb80887d95f457ff503e6a94d679", "filename": "src/test/run-pass/simd-binop.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/src%2Ftest%2Frun-pass%2Fsimd-binop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/src%2Ftest%2Frun-pass%2Fsimd-binop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-binop.rs?ref=1ac9bf65b6f8ab4da07a039127d8dae11b31acc9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(experimental)];\n+\n use std::unstable::simd::{i32x4, f32x4};\n \n fn test_int(e: i32) -> i32 {"}, {"sha": "029478b4d59653f6d2dfa3b513f913835168428a", "filename": "src/test/run-pass/simd-type.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/src%2Ftest%2Frun-pass%2Fsimd-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac9bf65b6f8ab4da07a039127d8dae11b31acc9/src%2Ftest%2Frun-pass%2Fsimd-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-type.rs?ref=1ac9bf65b6f8ab4da07a039127d8dae11b31acc9", "patch": "@@ -1,3 +1,7 @@\n+// xfail-fast feature doesn't work\n+\n+#[feature(simd)];\n+\n #[simd]\n struct RGBA {\n     r: f32,"}]}