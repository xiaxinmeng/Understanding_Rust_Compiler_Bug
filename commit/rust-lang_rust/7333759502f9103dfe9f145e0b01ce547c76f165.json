{"sha": "7333759502f9103dfe9f145e0b01ce547c76f165", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczMzM3NTk1MDJmOTEwM2RmZTlmMTQ1ZTBiMDFjZTU0N2M3NmYxNjU=", "commit": {"author": {"name": "Beno\u00eet du Garreau", "email": "bdgdlm@outlook.com", "date": "2021-02-16T08:02:13Z"}, "committer": {"name": "Beno\u00eet du Garreau", "email": "bdgdlm@outlook.com", "date": "2021-02-16T08:02:13Z"}, "message": "Fix run-make-fulldeps test", "tree": {"sha": "63f62e9780fee115cf18d288ed17f047adbc6d10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63f62e9780fee115cf18d288ed17f047adbc6d10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7333759502f9103dfe9f145e0b01ce547c76f165", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7333759502f9103dfe9f145e0b01ce547c76f165", "html_url": "https://github.com/rust-lang/rust/commit/7333759502f9103dfe9f145e0b01ce547c76f165", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7333759502f9103dfe9f145e0b01ce547c76f165/comments", "author": {"login": "a1phyr", "id": 47725341, "node_id": "MDQ6VXNlcjQ3NzI1MzQx", "avatar_url": "https://avatars.githubusercontent.com/u/47725341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a1phyr", "html_url": "https://github.com/a1phyr", "followers_url": "https://api.github.com/users/a1phyr/followers", "following_url": "https://api.github.com/users/a1phyr/following{/other_user}", "gists_url": "https://api.github.com/users/a1phyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/a1phyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a1phyr/subscriptions", "organizations_url": "https://api.github.com/users/a1phyr/orgs", "repos_url": "https://api.github.com/users/a1phyr/repos", "events_url": "https://api.github.com/users/a1phyr/events{/privacy}", "received_events_url": "https://api.github.com/users/a1phyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "a1phyr", "id": 47725341, "node_id": "MDQ6VXNlcjQ3NzI1MzQx", "avatar_url": "https://avatars.githubusercontent.com/u/47725341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a1phyr", "html_url": "https://github.com/a1phyr", "followers_url": "https://api.github.com/users/a1phyr/followers", "following_url": "https://api.github.com/users/a1phyr/following{/other_user}", "gists_url": "https://api.github.com/users/a1phyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/a1phyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a1phyr/subscriptions", "organizations_url": "https://api.github.com/users/a1phyr/orgs", "repos_url": "https://api.github.com/users/a1phyr/repos", "events_url": "https://api.github.com/users/a1phyr/events{/privacy}", "received_events_url": "https://api.github.com/users/a1phyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a357d86b7c2c4a5089a8669a9c238af547743c8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a357d86b7c2c4a5089a8669a9c238af547743c8a", "html_url": "https://github.com/rust-lang/rust/commit/a357d86b7c2c4a5089a8669a9c238af547743c8a"}], "stats": {"total": 220, "additions": 65, "deletions": 155}, "files": [{"sha": "db72a5306ff709d81d1068d94a0ae5353b37d75e", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.assert/assert.might_fail_assert.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7333759502f9103dfe9f145e0b01ce547c76f165/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/7333759502f9103dfe9f145e0b01ce547c76f165/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html?ref=7333759502f9103dfe9f145e0b01ce547c76f165", "patch": "@@ -70,8 +70,8 @@\n </head>\n <body>\n <div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>fn might_fail_assert(one_plus_one: u32) <span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:32: @0[6]: _73 = const might_fail_assert::promoted[4]\n-5:14-5:32: @0[7]: _7 = &amp;(*_73)\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:32: @0[6]: _53 = const might_fail_assert::promoted[3]\n+5:14-5:32: @0[7]: _7 = &amp;(*_53)\n 5:14-5:32: @0[8]: _6 = &amp;(*_7)\n 5:14-5:32: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n 5:34-5:46: @0[17]: _14 = &amp;_1\n@@ -80,18 +80,18 @@\n 5:5-5:48: @0[22]: _15 = (_13.0: &amp;u32)\n 5:5-5:48: @0[25]: _17 = &amp;(*_15)\n 5:5-5:48: @0[27]: _18 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-5:5-5:48: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb12]\n+5:5-5:48: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb8]\n 5:5-5:48: @1[2]: _12 = [move _16]\n 5:5-5:48: @1[5]: _11 = &amp;_12\n 5:5-5:48: @1[6]: _10 = &amp;(*_11)\n 5:5-5:48: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-5:5-5:48: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb12]\n-5:5-5:48: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb12]\n+5:5-5:48: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb8]\n+5:5-5:48: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb8]\n 5:5-5:48: @3[6]: _2 = const ()\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>println!(\"does 1 + 1 = {}?\", one_plus_one);<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    assert_eq!(</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:16-6:21: @3[11]: _23 = CheckedAdd(const 1_u32, const 1_u32)\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>1 + 1<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">, one_plus_one, </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:37-6:61: @5[28]: _70 = const might_fail_assert::promoted[1]\n-6:37-6:61: @5[29]: _50 = &amp;(*_70)\n-6:37-6:61: @5[30]: _49 = &amp;(*_50)\n-6:37-6:61: @5[31]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\"><span class=\"annotation\">@5,7,8,9,10,11\u298a</span>\"the argument was wrong\"<span class=\"annotation\">\u2989@5,7,8,9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\">);</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    assert_eq!(</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:16-6:21: @3[11]: _23 = CheckedAdd(const 1_u32, const 1_u32)\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>1 + 1<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">, one_plus_one, </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:37-6:61: @5[19]: _51 = const might_fail_assert::promoted[1]\n+6:37-6:61: @5[20]: _43 = &amp;(*_51)\n+6:37-6:61: @5[21]: _42 = &amp;(*_43)\n+6:37-6:61: @5[22]: _41 = move _42 as &amp;[&amp;str] (Pointer(Unsize))\"><span class=\"annotation\">@5,7\u298a</span>\"the argument was wrong\"<span class=\"annotation\">\u2989@5,7</span></span></span><span class=\"code\" style=\"--layer: 0\">);</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:2-7:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "95813decf9f6a1d7b0648f9e0aa0dba7e176ab41", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.doctest/doctest.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 19, "deletions": 49, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/7333759502f9103dfe9f145e0b01ce547c76f165/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest%2Fdoctest.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/7333759502f9103dfe9f145e0b01ce547c76f165/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest%2Fdoctest.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest%2Fdoctest.main.-------.InstrumentCoverage.0.html?ref=7333759502f9103dfe9f145e0b01ce547c76f165", "patch": "@@ -71,56 +71,26 @@\n <body>\n <div class=\"code\" style=\"counter-reset: line 72\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0\u298a</span>fn main() <span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"74:8-74:12: @0[1]: _1 = const true\"><span class=\"annotation\">@0\u298a</span>true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"75:9-75:26: @4[0]: _2 = const ()\"><span class=\"annotation\">@4\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"75:9-75:26: @3[5]: _75 = const main::promoted[3]\n-75:9-75:26: @3[6]: _18 = &amp;(*_75)\n-75:9-75:26: @3[7]: _17 = &amp;(*_18)\n-75:9-75:26: @3[8]: _16 = move _17 as &amp;[&amp;str] (Pointer(Unsize))\n-75:9-75:26: @3[17]: _26 = &amp;(*_8)\n-75:9-75:26: @3[18]: _25 = &amp;_26\n-75:9-75:26: @3[21]: _28 = &amp;(*_9)\n-75:9-75:26: @3[22]: _27 = &amp;_28\n-75:9-75:26: @3[23]: _24 = (move _25, move _27)\n-75:9-75:26: @3[26]: FakeRead(ForMatchedPlace, _24)\n-75:9-75:26: @3[28]: _29 = (_24.0: &amp;&amp;i32)\n-75:9-75:26: @3[30]: _30 = (_24.1: &amp;&amp;i32)\n-75:9-75:26: @3[33]: _32 = &amp;(*_29)\n-75:9-75:26: @3[35]: _33 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-75:9-75:26: @3.Call: _31 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _32, move _33) -&gt; [return: bb5, unwind: bb14]\n-75:9-75:26: @5[4]: _35 = &amp;(*_30)\n-75:9-75:26: @5[6]: _36 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-75:9-75:26: @5.Call: _34 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _35, move _36) -&gt; [return: bb6, unwind: bb14]\n-75:9-75:26: @6[2]: _23 = [move _31, move _34]\n-75:9-75:26: @6[7]: _22 = &amp;_23\n-75:9-75:26: @6[8]: _21 = &amp;(*_22)\n-75:9-75:26: @6[9]: _20 = move _21 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-75:9-75:26: @6.Call: _15 = std::fmt::Arguments::new_v1(move _16, move _20) -&gt; [return: bb7, unwind: bb14]\n-75:9-75:26: @7.Call: core::panicking::panic_fmt(move _15) -&gt; bb14\"><span class=\"annotation\">@3,5,6,7\u298a</span>assert_eq!(1, 1);<span class=\"annotation\">\u2989@3,5,6,7</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"75:9-75:26: @4[0]: _2 = const ()\"><span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"75:9-75:26: @4[0]: _2 = const ()\"><span class=\"annotation\">@4\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"75:9-75:26: @3[1]: _15 = core::panicking::AssertKind::Eq\n+75:9-75:26: @3[2]: FakeRead(ForLet, _15)\n+75:9-75:26: @3[5]: _17 = move _15\n+75:9-75:26: @3[8]: _19 = &amp;(*_8)\n+75:9-75:26: @3[9]: _18 = &amp;(*_19)\n+75:9-75:26: @3[12]: _21 = &amp;(*_9)\n+75:9-75:26: @3[13]: _20 = &amp;(*_21)\n+75:9-75:26: @3[15]: _22 = std::option::Option::&lt;std::fmt::Arguments&gt;::None\n+75:9-75:26: @3.Call: core::panicking::assert_failed::&lt;i32, i32&gt;(move _17, move _18, move _20, move _22) -&gt; bb8\"><span class=\"annotation\">@3\u298a</span>assert_eq!(1, 1);<span class=\"annotation\">\u2989@3</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"75:9-75:26: @4[0]: _2 = const ()\"><span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:26: @9[0]: _37 = const ()\"><span class=\"annotation\">@9\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"77:9-77:26: @8[5]: _72 = const main::promoted[0]\n-77:9-77:26: @8[6]: _53 = &amp;(*_72)\n-77:9-77:26: @8[7]: _52 = &amp;(*_53)\n-77:9-77:26: @8[8]: _51 = move _52 as &amp;[&amp;str] (Pointer(Unsize))\n-77:9-77:26: @8[17]: _61 = &amp;(*_43)\n-77:9-77:26: @8[18]: _60 = &amp;_61\n-77:9-77:26: @8[21]: _63 = &amp;(*_44)\n-77:9-77:26: @8[22]: _62 = &amp;_63\n-77:9-77:26: @8[23]: _59 = (move _60, move _62)\n-77:9-77:26: @8[26]: FakeRead(ForMatchedPlace, _59)\n-77:9-77:26: @8[28]: _64 = (_59.0: &amp;&amp;i32)\n-77:9-77:26: @8[30]: _65 = (_59.1: &amp;&amp;i32)\n-77:9-77:26: @8[33]: _67 = &amp;(*_64)\n-77:9-77:26: @8[35]: _68 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-77:9-77:26: @8.Call: _66 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _67, move _68) -&gt; [return: bb10, unwind: bb14]\n-77:9-77:26: @10[4]: _70 = &amp;(*_65)\n-77:9-77:26: @10[6]: _71 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-77:9-77:26: @10.Call: _69 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _70, move _71) -&gt; [return: bb11, unwind: bb14]\n-77:9-77:26: @11[2]: _58 = [move _66, move _69]\n-77:9-77:26: @11[7]: _57 = &amp;_58\n-77:9-77:26: @11[8]: _56 = &amp;(*_57)\n-77:9-77:26: @11[9]: _55 = move _56 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-77:9-77:26: @11.Call: _50 = std::fmt::Arguments::new_v1(move _51, move _55) -&gt; [return: bb12, unwind: bb14]\n-77:9-77:26: @12.Call: core::panicking::panic_fmt(move _50) -&gt; bb14\"><span class=\"annotation\">@8,10,11,12\u298a</span>assert_eq!(1, 2);<span class=\"annotation\">\u2989@8,10,11,12</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:26: @9[0]: _37 = const ()\"><span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:26: @6[0]: _23 = const ()\"><span class=\"annotation\">@6\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"77:9-77:26: @5[1]: _36 = core::panicking::AssertKind::Eq\n+77:9-77:26: @5[2]: FakeRead(ForLet, _36)\n+77:9-77:26: @5[5]: _38 = move _36\n+77:9-77:26: @5[8]: _40 = &amp;(*_29)\n+77:9-77:26: @5[9]: _39 = &amp;(*_40)\n+77:9-77:26: @5[12]: _42 = &amp;(*_30)\n+77:9-77:26: @5[13]: _41 = &amp;(*_42)\n+77:9-77:26: @5[15]: _43 = std::option::Option::&lt;std::fmt::Arguments&gt;::None\n+77:9-77:26: @5.Call: core::panicking::assert_failed::&lt;i32, i32&gt;(move _38, move _39, move _41, move _43) -&gt; bb8\"><span class=\"annotation\">@5\u298a</span>assert_eq!(1, 2);<span class=\"annotation\">\u2989@5</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:26: @6[0]: _23 = const ()\"><span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:2-79:2: @13.Return: return\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:2-79:2: @7.Return: return\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "3a41d3482b0b97d7113b843a78c4116aa2613a3b", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.doctest_crate/doctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 37, "deletions": 97, "changes": 134, "blob_url": "https://github.com/rust-lang/rust/blob/7333759502f9103dfe9f145e0b01ce547c76f165/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest_crate%2Fdoctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/7333759502f9103dfe9f145e0b01ce547c76f165/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest_crate%2Fdoctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest_crate%2Fdoctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html?ref=7333759502f9103dfe9f145e0b01ce547c76f165", "patch": "@@ -71,103 +71,43 @@\n <body>\n <div class=\"code\" style=\"counter-reset: line 1\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0\u298a</span>pub fn fn_run_in_doctests(conditional: usize) <span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"3:11-3:22: @0[0]: FakeRead(ForMatchedPlace, _1)\"><span class=\"annotation\">@0\u298a</span>conditional<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        1 =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:14-4:30: @7[0]: _0 = const ()\"><span class=\"annotation\">@7\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:14-4:30: @6[5]: _138 = const fn_run_in_doctests::promoted[0]\n-4:14-4:30: @6[6]: _17 = &amp;(*_138)\n-4:14-4:30: @6[7]: _16 = &amp;(*_17)\n-4:14-4:30: @6[8]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n-4:14-4:30: @6[17]: _25 = &amp;(*_7)\n-4:14-4:30: @6[18]: _24 = &amp;_25\n-4:14-4:30: @6[21]: _27 = &amp;(*_8)\n-4:14-4:30: @6[22]: _26 = &amp;_27\n-4:14-4:30: @6[23]: _23 = (move _24, move _26)\n-4:14-4:30: @6[26]: FakeRead(ForMatchedPlace, _23)\n-4:14-4:30: @6[28]: _28 = (_23.0: &amp;&amp;i32)\n-4:14-4:30: @6[30]: _29 = (_23.1: &amp;&amp;i32)\n-4:14-4:30: @6[33]: _31 = &amp;(*_28)\n-4:14-4:30: @6[35]: _32 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-4:14-4:30: @6.Call: _30 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _31, move _32) -&gt; [return: bb8, unwind: bb29]\n-4:14-4:30: @8[4]: _34 = &amp;(*_29)\n-4:14-4:30: @8[6]: _35 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-4:14-4:30: @8.Call: _33 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _34, move _35) -&gt; [return: bb9, unwind: bb29]\n-4:14-4:30: @9[2]: _22 = [move _30, move _33]\n-4:14-4:30: @9[7]: _21 = &amp;_22\n-4:14-4:30: @9[8]: _20 = &amp;(*_21)\n-4:14-4:30: @9[9]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-4:14-4:30: @9.Call: _14 = std::fmt::Arguments::new_v1(move _15, move _19) -&gt; [return: bb10, unwind: bb29]\n-4:14-4:30: @10.Call: core::panicking::panic_fmt(move _14) -&gt; bb29\"><span class=\"annotation\">@6,8,9,10\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@6,8,9,10</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:14-4:30: @7[0]: _0 = const ()\"><span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\">, // this is run,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        2 =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:30: @13[0]: _0 = const ()\"><span class=\"annotation\">@13\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"5:14-5:30: @12[5]: _141 = const fn_run_in_doctests::promoted[3]\n-5:14-5:30: @12[6]: _51 = &amp;(*_141)\n-5:14-5:30: @12[7]: _50 = &amp;(*_51)\n-5:14-5:30: @12[8]: _49 = move _50 as &amp;[&amp;str] (Pointer(Unsize))\n-5:14-5:30: @12[17]: _59 = &amp;(*_41)\n-5:14-5:30: @12[18]: _58 = &amp;_59\n-5:14-5:30: @12[21]: _61 = &amp;(*_42)\n-5:14-5:30: @12[22]: _60 = &amp;_61\n-5:14-5:30: @12[23]: _57 = (move _58, move _60)\n-5:14-5:30: @12[26]: FakeRead(ForMatchedPlace, _57)\n-5:14-5:30: @12[28]: _62 = (_57.0: &amp;&amp;i32)\n-5:14-5:30: @12[30]: _63 = (_57.1: &amp;&amp;i32)\n-5:14-5:30: @12[33]: _65 = &amp;(*_62)\n-5:14-5:30: @12[35]: _66 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-5:14-5:30: @12.Call: _64 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _65, move _66) -&gt; [return: bb14, unwind: bb29]\n-5:14-5:30: @14[4]: _68 = &amp;(*_63)\n-5:14-5:30: @14[6]: _69 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-5:14-5:30: @14.Call: _67 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _68, move _69) -&gt; [return: bb15, unwind: bb29]\n-5:14-5:30: @15[2]: _56 = [move _64, move _67]\n-5:14-5:30: @15[7]: _55 = &amp;_56\n-5:14-5:30: @15[8]: _54 = &amp;(*_55)\n-5:14-5:30: @15[9]: _53 = move _54 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-5:14-5:30: @15.Call: _48 = std::fmt::Arguments::new_v1(move _49, move _53) -&gt; [return: bb16, unwind: bb29]\n-5:14-5:30: @16.Call: core::panicking::panic_fmt(move _48) -&gt; bb29\"><span class=\"annotation\">@12,14,15,16\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@12,14,15,16</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:30: @13[0]: _0 = const ()\"><span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\">, // this,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        3 =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:14-6:30: @19[0]: _0 = const ()\"><span class=\"annotation\">@19\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"6:14-6:30: @18[5]: _144 = const fn_run_in_doctests::promoted[6]\n-6:14-6:30: @18[6]: _85 = &amp;(*_144)\n-6:14-6:30: @18[7]: _84 = &amp;(*_85)\n-6:14-6:30: @18[8]: _83 = move _84 as &amp;[&amp;str] (Pointer(Unsize))\n-6:14-6:30: @18[17]: _93 = &amp;(*_75)\n-6:14-6:30: @18[18]: _92 = &amp;_93\n-6:14-6:30: @18[21]: _95 = &amp;(*_76)\n-6:14-6:30: @18[22]: _94 = &amp;_95\n-6:14-6:30: @18[23]: _91 = (move _92, move _94)\n-6:14-6:30: @18[26]: FakeRead(ForMatchedPlace, _91)\n-6:14-6:30: @18[28]: _96 = (_91.0: &amp;&amp;i32)\n-6:14-6:30: @18[30]: _97 = (_91.1: &amp;&amp;i32)\n-6:14-6:30: @18[33]: _99 = &amp;(*_96)\n-6:14-6:30: @18[35]: _100 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-6:14-6:30: @18.Call: _98 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _99, move _100) -&gt; [return: bb20, unwind: bb29]\n-6:14-6:30: @20[4]: _102 = &amp;(*_97)\n-6:14-6:30: @20[6]: _103 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-6:14-6:30: @20.Call: _101 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _102, move _103) -&gt; [return: bb21, unwind: bb29]\n-6:14-6:30: @21[2]: _90 = [move _98, move _101]\n-6:14-6:30: @21[7]: _89 = &amp;_90\n-6:14-6:30: @21[8]: _88 = &amp;(*_89)\n-6:14-6:30: @21[9]: _87 = move _88 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:14-6:30: @21.Call: _82 = std::fmt::Arguments::new_v1(move _83, move _87) -&gt; [return: bb22, unwind: bb29]\n-6:14-6:30: @22.Call: core::panicking::panic_fmt(move _82) -&gt; bb29\"><span class=\"annotation\">@18,20,21,22\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@18,20,21,22</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:14-6:30: @19[0]: _0 = const ()\"><span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\">, // and this too</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:14-7:30: @24[0]: _0 = const ()\"><span class=\"annotation\">@24\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"7:14-7:30: @23[5]: _147 = const fn_run_in_doctests::promoted[9]\n-7:14-7:30: @23[6]: _119 = &amp;(*_147)\n-7:14-7:30: @23[7]: _118 = &amp;(*_119)\n-7:14-7:30: @23[8]: _117 = move _118 as &amp;[&amp;str] (Pointer(Unsize))\n-7:14-7:30: @23[17]: _127 = &amp;(*_109)\n-7:14-7:30: @23[18]: _126 = &amp;_127\n-7:14-7:30: @23[21]: _129 = &amp;(*_110)\n-7:14-7:30: @23[22]: _128 = &amp;_129\n-7:14-7:30: @23[23]: _125 = (move _126, move _128)\n-7:14-7:30: @23[26]: FakeRead(ForMatchedPlace, _125)\n-7:14-7:30: @23[28]: _130 = (_125.0: &amp;&amp;i32)\n-7:14-7:30: @23[30]: _131 = (_125.1: &amp;&amp;i32)\n-7:14-7:30: @23[33]: _133 = &amp;(*_130)\n-7:14-7:30: @23[35]: _134 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-7:14-7:30: @23.Call: _132 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _133, move _134) -&gt; [return: bb25, unwind: bb29]\n-7:14-7:30: @25[4]: _136 = &amp;(*_131)\n-7:14-7:30: @25[6]: _137 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-7:14-7:30: @25.Call: _135 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _136, move _137) -&gt; [return: bb26, unwind: bb29]\n-7:14-7:30: @26[2]: _124 = [move _132, move _135]\n-7:14-7:30: @26[7]: _123 = &amp;_124\n-7:14-7:30: @26[8]: _122 = &amp;(*_123)\n-7:14-7:30: @26[9]: _121 = move _122 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-7:14-7:30: @26.Call: _116 = std::fmt::Arguments::new_v1(move _117, move _121) -&gt; [return: bb27, unwind: bb29]\n-7:14-7:30: @27.Call: core::panicking::panic_fmt(move _116) -&gt; bb29\"><span class=\"annotation\">@23,25,26,27\u298a</span>assert_eq!(1, 2)<span class=\"annotation\">\u2989@23,25,26,27</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:14-7:30: @24[0]: _0 = const ()\"><span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\">, // however this is not</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        1 =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:14-4:30: @7[0]: _0 = const ()\"><span class=\"annotation\">@7\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:14-4:30: @6[1]: _14 = core::panicking::AssertKind::Eq\n+4:14-4:30: @6[2]: FakeRead(ForLet, _14)\n+4:14-4:30: @6[5]: _16 = move _14\n+4:14-4:30: @6[8]: _18 = &amp;(*_7)\n+4:14-4:30: @6[9]: _17 = &amp;(*_18)\n+4:14-4:30: @6[12]: _20 = &amp;(*_8)\n+4:14-4:30: @6[13]: _19 = &amp;(*_20)\n+4:14-4:30: @6[15]: _21 = std::option::Option::&lt;std::fmt::Arguments&gt;::None\n+4:14-4:30: @6.Call: core::panicking::assert_failed::&lt;i32, i32&gt;(move _16, move _17, move _19, move _21) -&gt; bb17\"><span class=\"annotation\">@6\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@6</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:14-4:30: @7[0]: _0 = const ()\"><span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\">, // this is run,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        2 =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:30: @10[0]: _0 = const ()\"><span class=\"annotation\">@10\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"5:14-5:30: @9[1]: _34 = core::panicking::AssertKind::Eq\n+5:14-5:30: @9[2]: FakeRead(ForLet, _34)\n+5:14-5:30: @9[5]: _36 = move _34\n+5:14-5:30: @9[8]: _38 = &amp;(*_27)\n+5:14-5:30: @9[9]: _37 = &amp;(*_38)\n+5:14-5:30: @9[12]: _40 = &amp;(*_28)\n+5:14-5:30: @9[13]: _39 = &amp;(*_40)\n+5:14-5:30: @9[15]: _41 = std::option::Option::&lt;std::fmt::Arguments&gt;::None\n+5:14-5:30: @9.Call: core::panicking::assert_failed::&lt;i32, i32&gt;(move _36, move _37, move _39, move _41) -&gt; bb17\"><span class=\"annotation\">@9\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@9</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:30: @10[0]: _0 = const ()\"><span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\">, // this,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        3 =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:14-6:30: @13[0]: _0 = const ()\"><span class=\"annotation\">@13\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"6:14-6:30: @12[1]: _54 = core::panicking::AssertKind::Eq\n+6:14-6:30: @12[2]: FakeRead(ForLet, _54)\n+6:14-6:30: @12[5]: _56 = move _54\n+6:14-6:30: @12[8]: _58 = &amp;(*_47)\n+6:14-6:30: @12[9]: _57 = &amp;(*_58)\n+6:14-6:30: @12[12]: _60 = &amp;(*_48)\n+6:14-6:30: @12[13]: _59 = &amp;(*_60)\n+6:14-6:30: @12[15]: _61 = std::option::Option::&lt;std::fmt::Arguments&gt;::None\n+6:14-6:30: @12.Call: core::panicking::assert_failed::&lt;i32, i32&gt;(move _56, move _57, move _59, move _61) -&gt; bb17\"><span class=\"annotation\">@12\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@12</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:14-6:30: @13[0]: _0 = const ()\"><span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\">, // and this too</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:14-7:30: @15[0]: _0 = const ()\"><span class=\"annotation\">@15\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"7:14-7:30: @14[1]: _74 = core::panicking::AssertKind::Eq\n+7:14-7:30: @14[2]: FakeRead(ForLet, _74)\n+7:14-7:30: @14[5]: _76 = move _74\n+7:14-7:30: @14[8]: _78 = &amp;(*_67)\n+7:14-7:30: @14[9]: _77 = &amp;(*_78)\n+7:14-7:30: @14[12]: _80 = &amp;(*_68)\n+7:14-7:30: @14[13]: _79 = &amp;(*_80)\n+7:14-7:30: @14[15]: _81 = std::option::Option::&lt;std::fmt::Arguments&gt;::None\n+7:14-7:30: @14.Call: core::panicking::assert_failed::&lt;i32, i32&gt;(move _76, move _77, move _79, move _81) -&gt; bb17\"><span class=\"annotation\">@14\u298a</span>assert_eq!(1, 2)<span class=\"annotation\">\u2989@14</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:14-7:30: @15[0]: _0 = const ()\"><span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\">, // however this is not</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"9:2-9:2: @28.Return: return\"><span class=\"annotation\">@28\u298a</span>\u2038<span class=\"annotation\">\u2989@28</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"9:2-9:2: @16.Return: return\"><span class=\"annotation\">@16\u298a</span>\u2038<span class=\"annotation\">\u2989@16</span></span></span></span></div>\n </body>\n </html>"}]}