{"sha": "a283dedd44f5e426f01d24a447fbf4cb7d5dc41a", "node_id": "C_kwDOAAsO6NoAKGEyODNkZWRkNDRmNWU0MjZmMDFkMjRhNDQ3ZmJmNGNiN2Q1ZGM0MWE", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-25T09:08:04Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2023-02-28T23:57:14Z"}, "message": "Change `FnAbi::args` to a boxed slice.", "tree": {"sha": "b9758b4b1017823bce1270b806f17424833f0ae7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9758b4b1017823bce1270b806f17424833f0ae7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a283dedd44f5e426f01d24a447fbf4cb7d5dc41a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a283dedd44f5e426f01d24a447fbf4cb7d5dc41a", "html_url": "https://github.com/rust-lang/rust/commit/a283dedd44f5e426f01d24a447fbf4cb7d5dc41a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a283dedd44f5e426f01d24a447fbf4cb7d5dc41a/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d01d0d1f76a9ff51681d079916073ad33ba190d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d01d0d1f76a9ff51681d079916073ad33ba190d4", "html_url": "https://github.com/rust-lang/rust/commit/d01d0d1f76a9ff51681d079916073ad33ba190d4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "7f313583c82c8eb0885fefae342b56301f097d96", "filename": "src/abi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a283dedd44f5e426f01d24a447fbf4cb7d5dc41a/src%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a283dedd44f5e426f01d24a447fbf4cb7d5dc41a/src%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi.rs?ref=a283dedd44f5e426f01d24a447fbf4cb7d5dc41a", "patch": "@@ -140,7 +140,7 @@ impl<'gcc, 'tcx> FnAbiGccExt<'gcc, 'tcx> for FnAbi<'tcx, Ty<'tcx>> {\n                 }\n             };\n \n-        for arg in &self.args {\n+        for arg in self.args.iter() {\n             // add padding\n             if let Some(ty) = arg.pad {\n                 argument_tys.push(ty.gcc_type(cx));"}]}