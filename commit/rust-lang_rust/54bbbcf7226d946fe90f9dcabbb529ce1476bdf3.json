{"sha": "54bbbcf7226d946fe90f9dcabbb529ce1476bdf3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0YmJiY2Y3MjI2ZDk0NmZlOTBmOWRjYWJiYjUyOWNlMTQ3NmJkZjM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-05-27T10:21:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-27T10:21:31Z"}, "message": "Merge #4632\n\n4632: Document inlay hints and runnables r=matklad a=matklad\n\nWe want to change those, but let's document what we have in meantime\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "d5d4bc690c503c5f31118b1136d0437a30385265", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5d4bc690c503c5f31118b1136d0437a30385265"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54bbbcf7226d946fe90f9dcabbb529ce1476bdf3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJezj8rCRBK7hj4Ov3rIwAAdHIIAAFzP508BO8WDInsxj4lEyFl\nHqM2E4DhwZv6nPio3ZyrJR3Dybdm7uA4/YsyfXtJWiqWA8jLYhOgP5HuESXkPozn\nNj/rqTS93OfHLouKf+cFUoI1zPzMB+eKwZrjxP2a7+bNZKV83sRx4D6tv1WTitUY\nDuonMBit6+6PeWk2LorpEHLgHG1pXuBGiG2oABIniMnS2rU3GcmaIt9teX20Mz7e\n9N3vOL0LLe0OA1t5j6rbAKFBg7anLWru9JHC45noLAP7xzrSfpuOEaLrBTO78O+P\nDl69zV34syBRFL0BYmEwn6fx6C9OimiFg8l2UV/dQtru/dNwOhnF/1c0NXrGi5A=\n=kN6L\n-----END PGP SIGNATURE-----\n", "payload": "tree d5d4bc690c503c5f31118b1136d0437a30385265\nparent 64a1c77ab279a2baddab25ae86698ece2bc146da\nparent bb415c1818fe75badbd70a87a4ae23923a3d3984\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1590574891 +0000\ncommitter GitHub <noreply@github.com> 1590574891 +0000\n\nMerge #4632\n\n4632: Document inlay hints and runnables r=matklad a=matklad\n\nWe want to change those, but let's document what we have in meantime\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54bbbcf7226d946fe90f9dcabbb529ce1476bdf3", "html_url": "https://github.com/rust-lang/rust/commit/54bbbcf7226d946fe90f9dcabbb529ce1476bdf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54bbbcf7226d946fe90f9dcabbb529ce1476bdf3/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64a1c77ab279a2baddab25ae86698ece2bc146da", "url": "https://api.github.com/repos/rust-lang/rust/commits/64a1c77ab279a2baddab25ae86698ece2bc146da", "html_url": "https://github.com/rust-lang/rust/commit/64a1c77ab279a2baddab25ae86698ece2bc146da"}, {"sha": "bb415c1818fe75badbd70a87a4ae23923a3d3984", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb415c1818fe75badbd70a87a4ae23923a3d3984", "html_url": "https://github.com/rust-lang/rust/commit/bb415c1818fe75badbd70a87a4ae23923a3d3984"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "c898f3e93a8bed14b9891b056f2658d7c3806843", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/54bbbcf7226d946fe90f9dcabbb529ce1476bdf3/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/54bbbcf7226d946fe90f9dcabbb529ce1476bdf3/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=54bbbcf7226d946fe90f9dcabbb529ce1476bdf3", "patch": "@@ -362,3 +362,66 @@ interface ExpandedMacro {\n ```\n \n Expands macro call at a given position.\n+\n+## Inlay Hints\n+\n+**Method:** `rust-analyzer/inlayHints`\n+\n+This request is send from client to server to render \"inlay hints\" -- virtual text inserted into editor to show things like inferred types.\n+Generally, the client should re-query inlay hints after every modification.\n+Note that we plan to move this request to `experimental/inlayHints`, as it is not really Rust-specific, but the current API is not necessary the right one.\n+Upstream issue: https://github.com/microsoft/language-server-protocol/issues/956\n+\n+**Request:**\n+\n+```typescript\n+interface InlayHintsParams {\n+    textDocument: TextDocumentIdentifier,\n+}\n+```\n+\n+**Response:** `InlayHint[]`\n+\n+```typescript\n+interface InlayHint {\n+    kind: \"TypeHint\" | \"ParameterHint\" | \"ChainingHints\",\n+    range: Range,\n+    label: string,\n+}\n+```\n+\n+## Runnables\n+\n+**Method:** `rust-analyzer/runnables`\n+\n+This request is send from client to server to get the list of things that can be run (tests, binaries, `cargo check -p`).\n+Note that we plan to move this request to `experimental/runnables`, as it is not really Rust-specific, but the current API is not necessary the right one.\n+Upstream issue: https://github.com/microsoft/language-server-protocol/issues/944\n+\n+**Request:**\n+\n+```typescript\n+interface RunnablesParams {\n+    textDocument: TextDocumentIdentifier;\n+    /// If null, compute runnables for the whole file.\n+    position?: Position;\n+}\n+```\n+\n+**Response:** `Runnable[]`\n+\n+```typescript\n+interface Runnable {\n+    /// The range this runnable is applicable for.\n+    range: lc.Range;\n+    /// The label to show in the UI.\n+    label: string;\n+    /// The following fields describe a process to spawn.\n+    bin: string;\n+    args: string[];\n+    /// Args for cargo after `--`.\n+    extraArgs: string[];\n+    env: { [key: string]: string };\n+    cwd: string | null;\n+}\n+```"}]}