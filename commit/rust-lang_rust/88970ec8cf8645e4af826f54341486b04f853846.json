{"sha": "88970ec8cf8645e4af826f54341486b04f853846", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4OTcwZWM4Y2Y4NjQ1ZTRhZjgyNmY1NDM0MTQ4NmIwNGY4NTM4NDY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-02-09T13:22:41Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-02-09T14:24:31Z"}, "message": "Remove rarely used `type_size` helper function", "tree": {"sha": "bfacc1c54240f02ff1760b3d722c81da12a6faf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfacc1c54240f02ff1760b3d722c81da12a6faf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88970ec8cf8645e4af826f54341486b04f853846", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlp9rx8ACgkQpp+NIls6\n19kZoBAAi0QlXFZix2l+OrmzR1hIdH0zeaMPTiPpIq69O9His+minSJAdjC3t+oK\nIpVwraurEb0XXWxkqbb2g/wzDe91uG3NrUatcDzP+bh/y2wDXaLDJb/jFsISDnDo\nwxi5nfHL4jeYKG5asMUwodXLRi1Bl5HDl6bgGoFkwKlh2EdB+36q1eqvdG/jiv7J\n4E9MlYygYoLVvk+YdzphXCpg2asSAgN6+G/5aYEjiVimrg5rFEs67XXGkDRvURKj\ntypPJvY422VggupG7BNox4Q39ehDj40cL7p8DPsNL9vfqqPqVwFZCvw7hJGxR3TL\n0RIhlWvChQDJyny+QgpENwBb7OtDVUFDJuEGjJCsWNkVet0T2Ys0dga/rpt09HIr\nGIOnzWQckLexV29f/zHNiul7ojL5A+vV80cEgLg92idrQrbr34ZaIQS0YMS1btoe\n/In8UUYGX0BlQ8Tg9a15juIOXtro1ThjCJqyUECFlJv7MgkB6tWQczggVqtkXSKW\nFGpbWtLPAgIPe7RzxqCx0T15pRUeG8Woni8RAuaPbCCVVGVkFP2y+lYHZvtOfKTr\niSO5nJiIRDoL2pEcqMqSWenPUM3BKu5tvTBsfjLMu8UacuND/COTqfzUDs0TU6cz\nscj2/kANY4nNC/JnEp0axjuyOVQsShB5PozS0aw+XLqTRUrXxEg=\n=FH2U\n-----END PGP SIGNATURE-----", "payload": "tree bfacc1c54240f02ff1760b3d722c81da12a6faf7\nparent fc7b3955f8dacf1158930e4ddadb248bc0c9feff\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1518182561 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1518186271 +0100\n\nRemove rarely used `type_size` helper function\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88970ec8cf8645e4af826f54341486b04f853846", "html_url": "https://github.com/rust-lang/rust/commit/88970ec8cf8645e4af826f54341486b04f853846", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88970ec8cf8645e4af826f54341486b04f853846/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc7b3955f8dacf1158930e4ddadb248bc0c9feff", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc7b3955f8dacf1158930e4ddadb248bc0c9feff", "html_url": "https://github.com/rust-lang/rust/commit/fc7b3955f8dacf1158930e4ddadb248bc0c9feff"}], "stats": {"total": 31, "additions": 12, "deletions": 19}, "files": [{"sha": "d4c91eab1c3d9fefd6921194ef3e86986294c18f", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/88970ec8cf8645e4af826f54341486b04f853846/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88970ec8cf8645e4af826f54341486b04f853846/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=88970ec8cf8645e4af826f54341486b04f853846", "patch": "@@ -5,10 +5,11 @@ use rustc::lint::*;\n use rustc::middle::expr_use_visitor::*;\n use rustc::middle::mem_categorization::{cmt, Categorization};\n use rustc::ty::{self, Ty};\n+use rustc::ty::layout::LayoutOf;\n use rustc::util::nodemap::NodeSet;\n use syntax::ast::NodeId;\n use syntax::codemap::Span;\n-use utils::{span_lint, type_size};\n+use utils::span_lint;\n \n pub struct Pass {\n     pub too_large_for_stack: u64,\n@@ -164,7 +165,7 @@ impl<'a, 'tcx> EscapeDelegate<'a, 'tcx> {\n         // Large types need to be boxed to avoid stack\n         // overflows.\n         if ty.is_box() {\n-            type_size(self.cx, ty.boxed_ty()).unwrap_or(0) > self.too_large_for_stack\n+            self.cx.layout_of(ty.boxed_ty()).ok().map_or(0, |l| l.size.bytes()) > self.too_large_for_stack\n         } else {\n             false\n         }"}, {"sha": "e13b771cf24a38df0e522e2922a114f821297859", "filename": "clippy_lints/src/large_enum_variant.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/88970ec8cf8645e4af826f54341486b04f853846/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88970ec8cf8645e4af826f54341486b04f853846/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_enum_variant.rs?ref=88970ec8cf8645e4af826f54341486b04f853846", "patch": "@@ -2,8 +2,8 @@\n \n use rustc::lint::*;\n use rustc::hir::*;\n-use utils::{snippet_opt, span_lint_and_then, type_size};\n-use rustc::ty::TypeFoldable;\n+use utils::{snippet_opt, span_lint_and_then};\n+use rustc::ty::layout::LayoutOf;\n \n /// **What it does:** Checks for large size differences between variants on\n /// `enum`s.\n@@ -61,13 +61,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LargeEnumVariant {\n                 let size: u64 = variant\n                     .fields\n                     .iter()\n-                    .map(|f| {\n+                    .filter_map(|f| {\n                         let ty = cx.tcx.type_of(f.did);\n-                        if ty.needs_subst() {\n-                            0 // we can't reason about generics, so we treat them as zero sized\n-                        } else {\n-                            type_size(cx, ty).expect(\"size should be computable for concrete type\")\n-                        }\n+                        // don't count generics by filtering out everything\n+                        // that does not have a layout\n+                        cx.layout_of(ty).ok().map(|l| l.size.bytes())\n                     })\n                     .sum();\n "}, {"sha": "ba79bf4407bde374d150c884ec8989008b9666ef", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/88970ec8cf8645e4af826f54341486b04f853846/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88970ec8cf8645e4af826f54341486b04f853846/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=88970ec8cf8645e4af826f54341486b04f853846", "patch": "@@ -4,6 +4,7 @@ use rustc::hir::*;\n use rustc::hir::intravisit::{walk_body, walk_expr, walk_ty, FnKind, NestedVisitorMap, Visitor};\n use rustc::lint::*;\n use rustc::ty::{self, Ty, TyCtxt, TypeckTables};\n+use rustc::ty::layout::LayoutOf;\n use rustc::ty::subst::Substs;\n use rustc_typeck::hir_ty_to_ty;\n use std::cmp::Ordering;\n@@ -15,7 +16,7 @@ use syntax::codemap::Span;\n use syntax::errors::DiagnosticBuilder;\n use utils::{comparisons, higher, in_constant, in_external_macro, in_macro, last_path_segment, match_def_path, match_path,\n             multispan_sugg, opt_def_id, same_tys, snippet, snippet_opt, span_help_and_lint, span_lint,\n-            span_lint_and_sugg, span_lint_and_then, type_size};\n+            span_lint_and_sugg, span_lint_and_then};\n use utils::paths;\n \n /// Handles all the linting of funky types\n@@ -1478,7 +1479,7 @@ fn numeric_cast_precast_bounds<'a>(cx: &LateContext, expr: &'a Expr) -> Option<(\n         let pre_cast_ty = cx.tables.expr_ty(cast_exp);\n         let cast_ty = cx.tables.expr_ty(expr);\n         // if it's a cast from i32 to u32 wrapping will invalidate all these checks\n-        if type_size(cx, pre_cast_ty) == type_size(cx, cast_ty) {\n+        if cx.layout_of(pre_cast_ty).ok().map(|l| l.size) == cx.layout_of(cast_ty).ok().map(|l| l.size) {\n             return None;\n         }\n         match pre_cast_ty.sty {"}, {"sha": "c501dadeb79335692e87d9103be7dccb4a28bf4e", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/88970ec8cf8645e4af826f54341486b04f853846/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88970ec8cf8645e4af826f54341486b04f853846/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=88970ec8cf8645e4af826f54341486b04f853846", "patch": "@@ -9,7 +9,6 @@ use rustc::lint::{LateContext, Level, Lint, LintContext};\n use rustc::session::Session;\n use rustc::traits;\n use rustc::ty::{self, Ty, TyCtxt};\n-use rustc::ty::layout::LayoutOf;\n use rustc_errors;\n use std::borrow::Cow;\n use std::env;\n@@ -1048,12 +1047,6 @@ pub fn is_try(expr: &Expr) -> Option<&Expr> {\n     None\n }\n \n-pub fn type_size<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, ty: Ty<'tcx>) -> Option<u64> {\n-    cx.layout_of(ty)\n-        .ok()\n-        .map(|layout| layout.size.bytes())\n-}\n-\n /// Returns true if the lint is allowed in the current context\n ///\n /// Useful for skipping long running code when it's unnecessary"}]}