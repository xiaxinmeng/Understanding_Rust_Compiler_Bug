{"sha": "16bf2783b5cd5f0a6155094f885890f4c0834477", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2YmYyNzgzYjVjZDVmMGE2MTU1MDk0Zjg4NTg5MGY0YzA4MzQ0Nzc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-09T05:08:07Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-11T06:42:26Z"}, "message": "inline maybe_lint_level_root", "tree": {"sha": "7828d4c5b960891b2ae43ae5186861f5ba33d7de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7828d4c5b960891b2ae43ae5186861f5ba33d7de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16bf2783b5cd5f0a6155094f885890f4c0834477", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16bf2783b5cd5f0a6155094f885890f4c0834477", "html_url": "https://github.com/rust-lang/rust/commit/16bf2783b5cd5f0a6155094f885890f4c0834477", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16bf2783b5cd5f0a6155094f885890f4c0834477/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eee84fe3960f0bb79f8bf02577bf00aa44302e00", "url": "https://api.github.com/repos/rust-lang/rust/commits/eee84fe3960f0bb79f8bf02577bf00aa44302e00", "html_url": "https://github.com/rust-lang/rust/commit/eee84fe3960f0bb79f8bf02577bf00aa44302e00"}], "stats": {"total": 20, "additions": 6, "deletions": 14}, "files": [{"sha": "6eec77d1d9075da07a5a4f5881c25d6d8d58420d", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/16bf2783b5cd5f0a6155094f885890f4c0834477/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16bf2783b5cd5f0a6155094f885890f4c0834477/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=16bf2783b5cd5f0a6155094f885890f4c0834477", "patch": "@@ -21,7 +21,6 @@\n pub use self::levels::LintSource::{self, *};\n pub use self::Level::*;\n \n-use crate::ty::TyCtxt;\n use rustc_data_structures::sync;\n use rustc_hir as hir;\n use rustc_session::lint::builtin::HardwiredLints;\n@@ -315,8 +314,3 @@ pub mod internal;\n mod levels;\n \n pub use self::levels::{struct_lint_level, LintLevelMap, LintLevelSets, LintLevelsBuilder};\n-\n-pub fn maybe_lint_level_root(tcx: TyCtxt<'_>, id: hir::HirId) -> bool {\n-    let attrs = tcx.hir().attrs(id);\n-    attrs.iter().any(|attr| Level::from_symbol(attr.name_or_empty()).is_some())\n-}"}, {"sha": "c28631b9825774b91e205dde3a3bedbef75528f6", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/16bf2783b5cd5f0a6155094f885890f4c0834477/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16bf2783b5cd5f0a6155094f885890f4c0834477/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=16bf2783b5cd5f0a6155094f885890f4c0834477", "patch": "@@ -8,7 +8,7 @@ use crate::hir::map as hir_map;\n use crate::hir::map::DefPathHash;\n use crate::ich::{NodeIdHashingMode, StableHashingContext};\n use crate::infer::canonical::{Canonical, CanonicalVarInfo, CanonicalVarInfos};\n-use crate::lint::{maybe_lint_level_root, struct_lint_level, LintSource};\n+use crate::lint::{struct_lint_level, LintSource};\n use crate::middle;\n use crate::middle::cstore::CrateStoreDyn;\n use crate::middle::cstore::EncodedMetadata;\n@@ -2568,19 +2568,17 @@ impl<'tcx> TyCtxt<'tcx> {\n \n     /// Walks upwards from `id` to find a node which might change lint levels with attributes.\n     /// It stops at `bound` and just returns it if reached.\n-    pub fn maybe_lint_level_root_bounded(\n-        self,\n-        mut id: hir::HirId,\n-        bound: hir::HirId,\n-    ) -> hir::HirId {\n+    pub fn maybe_lint_level_root_bounded(self, mut id: HirId, bound: HirId) -> HirId {\n+        let hir = self.hir();\n         loop {\n             if id == bound {\n                 return bound;\n             }\n-            if maybe_lint_level_root(self, id) {\n+\n+            if hir.attrs(id).iter().any(|attr| Level::from_symbol(attr.name_or_empty()).is_some()) {\n                 return id;\n             }\n-            let next = self.hir().get_parent_node(id);\n+            let next = hir.get_parent_node(id);\n             if next == id {\n                 bug!(\"lint traversal reached the root of the crate\");\n             }"}]}