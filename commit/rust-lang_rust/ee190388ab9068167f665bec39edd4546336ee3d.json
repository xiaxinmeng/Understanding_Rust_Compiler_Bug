{"sha": "ee190388ab9068167f665bec39edd4546336ee3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMTkwMzg4YWI5MDY4MTY3ZjY2NWJlYzM5ZWRkNDU0NjMzNmVlM2Q=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-11-16T12:21:51Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-11-16T12:25:54Z"}, "message": "Upgrade Chalk again", "tree": {"sha": "4d269ae6c82662854f254e8446ae8835da78c334", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d269ae6c82662854f254e8446ae8835da78c334"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee190388ab9068167f665bec39edd4546336ee3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee190388ab9068167f665bec39edd4546336ee3d", "html_url": "https://github.com/rust-lang/rust/commit/ee190388ab9068167f665bec39edd4546336ee3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee190388ab9068167f665bec39edd4546336ee3d/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "351c29d859d74f7a61e654bdbcad634bfb136225", "url": "https://api.github.com/repos/rust-lang/rust/commits/351c29d859d74f7a61e654bdbcad634bfb136225", "html_url": "https://github.com/rust-lang/rust/commit/351c29d859d74f7a61e654bdbcad634bfb136225"}], "stats": {"total": 119, "additions": 65, "deletions": 54}, "files": [{"sha": "16fbe750202c153e702a9a671149595cb6f37f1a", "filename": "Cargo.lock", "status": "modified", "additions": 28, "deletions": 27, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/ee190388ab9068167f665bec39edd4546336ee3d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ee190388ab9068167f665bec39edd4546336ee3d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ee190388ab9068167f665bec39edd4546336ee3d", "patch": "@@ -123,7 +123,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n [[package]]\n name = \"chalk-derive\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d#102eba3659fc26a2451ed845f9ca4ceb8f79c22d\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478#a88cad7f0a69e05ba8f40b74c58a1c229c1b2478\"\n dependencies = [\n  \"proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -133,52 +133,53 @@ dependencies = [\n [[package]]\n name = \"chalk-engine\"\n version = \"0.9.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d#102eba3659fc26a2451ed845f9ca4ceb8f79c22d\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478#a88cad7f0a69e05ba8f40b74c58a1c229c1b2478\"\n dependencies = [\n- \"chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\",\n+ \"chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"stacker 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"chalk-ir\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d#102eba3659fc26a2451ed845f9ca4ceb8f79c22d\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478#a88cad7f0a69e05ba8f40b74c58a1c229c1b2478\"\n dependencies = [\n- \"chalk-derive 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\",\n- \"chalk-engine 0.9.0 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\",\n- \"chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\",\n+ \"chalk-derive 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\",\n+ \"chalk-engine 0.9.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\",\n+ \"chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\",\n  \"lalrpop-intern 0.15.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"chalk-macros\"\n version = \"0.1.1\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d#102eba3659fc26a2451ed845f9ca4ceb8f79c22d\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478#a88cad7f0a69e05ba8f40b74c58a1c229c1b2478\"\n dependencies = [\n  \"lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"chalk-rust-ir\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d#102eba3659fc26a2451ed845f9ca4ceb8f79c22d\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478#a88cad7f0a69e05ba8f40b74c58a1c229c1b2478\"\n dependencies = [\n- \"chalk-derive 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\",\n- \"chalk-engine 0.9.0 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\",\n- \"chalk-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\",\n- \"chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\",\n+ \"chalk-derive 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\",\n+ \"chalk-engine 0.9.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\",\n+ \"chalk-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\",\n+ \"chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\",\n ]\n \n [[package]]\n name = \"chalk-solve\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d#102eba3659fc26a2451ed845f9ca4ceb8f79c22d\"\n+source = \"git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478#a88cad7f0a69e05ba8f40b74c58a1c229c1b2478\"\n dependencies = [\n- \"chalk-engine 0.9.0 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\",\n- \"chalk-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\",\n- \"chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\",\n- \"chalk-rust-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\",\n+ \"chalk-derive 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\",\n+ \"chalk-engine 0.9.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\",\n+ \"chalk-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\",\n+ \"chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\",\n+ \"chalk-rust-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\",\n  \"ena 0.13.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"petgraph 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1016,9 +1017,9 @@ name = \"ra_hir\"\n version = \"0.1.0\"\n dependencies = [\n  \"arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"chalk-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\",\n- \"chalk-rust-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\",\n- \"chalk-solve 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\",\n+ \"chalk-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\",\n+ \"chalk-rust-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\",\n+ \"chalk-solve 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\",\n  \"ena 0.13.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"insta 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lalrpop-intern 0.15.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1873,12 +1874,12 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum cargo_metadata 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8d2d1617e838936c0d2323a65cc151e03ae19a7678dd24f72bccf27119b90a5d\"\n \"checksum cc 1.0.47 (registry+https://github.com/rust-lang/crates.io-index)\" = \"aa87058dce70a3ff5621797f1506cb837edd02ac4c0ae642b4542dce802908b8\"\n \"checksum cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822\"\n-\"checksum chalk-derive 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\" = \"<none>\"\n-\"checksum chalk-engine 0.9.0 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\" = \"<none>\"\n-\"checksum chalk-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\" = \"<none>\"\n-\"checksum chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\" = \"<none>\"\n-\"checksum chalk-rust-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\" = \"<none>\"\n-\"checksum chalk-solve 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=102eba3659fc26a2451ed845f9ca4ceb8f79c22d)\" = \"<none>\"\n+\"checksum chalk-derive 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\" = \"<none>\"\n+\"checksum chalk-engine 0.9.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\" = \"<none>\"\n+\"checksum chalk-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\" = \"<none>\"\n+\"checksum chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\" = \"<none>\"\n+\"checksum chalk-rust-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\" = \"<none>\"\n+\"checksum chalk-solve 0.1.0 (git+https://github.com/rust-lang/chalk.git?rev=a88cad7f0a69e05ba8f40b74c58a1c229c1b2478)\" = \"<none>\"\n \"checksum chrono 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e8493056968583b0193c1bb04d6f7684586f3726992d6c573261941a895dbd68\"\n \"checksum clicolors-control 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"90082ee5dcdd64dc4e9e0d37fbf3ee325419e39c0092191e0393df65518f741e\"\n \"checksum cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f\""}, {"sha": "20f6e3649b2c1407a896bc336de0cd5d757b80fc", "filename": "crates/ra_hir/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee190388ab9068167f665bec39edd4546336ee3d/crates%2Fra_hir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ee190388ab9068167f665bec39edd4546336ee3d/crates%2Fra_hir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2FCargo.toml?ref=ee190388ab9068167f665bec39edd4546336ee3d", "patch": "@@ -23,9 +23,9 @@ hir_def = { path = \"../ra_hir_def\", package = \"ra_hir_def\" }\n test_utils = { path = \"../test_utils\" }\n ra_prof = { path = \"../ra_prof\" }\n \n-chalk-solve = { git = \"https://github.com/rust-lang/chalk.git\", rev = \"102eba3659fc26a2451ed845f9ca4ceb8f79c22d\" }\n-chalk-rust-ir = { git = \"https://github.com/rust-lang/chalk.git\", rev = \"102eba3659fc26a2451ed845f9ca4ceb8f79c22d\" }\n-chalk-ir = { git = \"https://github.com/rust-lang/chalk.git\", rev = \"102eba3659fc26a2451ed845f9ca4ceb8f79c22d\" }\n+chalk-solve = { git = \"https://github.com/rust-lang/chalk.git\", rev = \"a88cad7f0a69e05ba8f40b74c58a1c229c1b2478\" }\n+chalk-rust-ir = { git = \"https://github.com/rust-lang/chalk.git\", rev = \"a88cad7f0a69e05ba8f40b74c58a1c229c1b2478\" }\n+chalk-ir = { git = \"https://github.com/rust-lang/chalk.git\", rev = \"a88cad7f0a69e05ba8f40b74c58a1c229c1b2478\" }\n lalrpop-intern = \"0.15.1\"\n \n [dev-dependencies]"}, {"sha": "d75d71d6659344e3ab480dadfe337a97f03f0716", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ee190388ab9068167f665bec39edd4546336ee3d/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee190388ab9068167f665bec39edd4546336ee3d/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=ee190388ab9068167f665bec39edd4546336ee3d", "patch": "@@ -125,31 +125,38 @@ pub trait HirDatabase: DefDatabase + AstDatabase {\n     fn intern_assoc_ty_value(&self, assoc_ty_value: AssocTyValue) -> ids::AssocTyValueId;\n \n     #[salsa::invoke(crate::ty::traits::chalk::associated_ty_data_query)]\n-    fn associated_ty_data(&self, id: chalk_ir::TypeId) -> Arc<chalk_rust_ir::AssociatedTyDatum>;\n+    fn associated_ty_data(\n+        &self,\n+        id: chalk_ir::TypeId,\n+    ) -> Arc<chalk_rust_ir::AssociatedTyDatum<chalk_ir::family::ChalkIr>>;\n \n     #[salsa::invoke(crate::ty::traits::chalk::trait_datum_query)]\n     fn trait_datum(\n         &self,\n         krate: Crate,\n         trait_id: chalk_ir::TraitId,\n-    ) -> Arc<chalk_rust_ir::TraitDatum>;\n+    ) -> Arc<chalk_rust_ir::TraitDatum<chalk_ir::family::ChalkIr>>;\n \n     #[salsa::invoke(crate::ty::traits::chalk::struct_datum_query)]\n     fn struct_datum(\n         &self,\n         krate: Crate,\n         struct_id: chalk_ir::StructId,\n-    ) -> Arc<chalk_rust_ir::StructDatum>;\n+    ) -> Arc<chalk_rust_ir::StructDatum<chalk_ir::family::ChalkIr>>;\n \n     #[salsa::invoke(crate::ty::traits::chalk::impl_datum_query)]\n-    fn impl_datum(&self, krate: Crate, impl_id: chalk_ir::ImplId) -> Arc<chalk_rust_ir::ImplDatum>;\n+    fn impl_datum(\n+        &self,\n+        krate: Crate,\n+        impl_id: chalk_ir::ImplId,\n+    ) -> Arc<chalk_rust_ir::ImplDatum<chalk_ir::family::ChalkIr>>;\n \n     #[salsa::invoke(crate::ty::traits::chalk::associated_ty_value_query)]\n     fn associated_ty_value(\n         &self,\n         krate: Crate,\n         id: chalk_rust_ir::AssociatedTyValueId,\n-    ) -> Arc<chalk_rust_ir::AssociatedTyValue>;\n+    ) -> Arc<chalk_rust_ir::AssociatedTyValue<chalk_ir::family::ChalkIr>>;\n \n     #[salsa::invoke(crate::ty::traits::trait_solve_query)]\n     fn trait_solve("}, {"sha": "45f72543808791b062749e9e29d13254f1b3a4ba", "filename": "crates/ra_hir/src/ty/traits.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ee190388ab9068167f665bec39edd4546336ee3d/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee190388ab9068167f665bec39edd4546336ee3d/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs?ref=ee190388ab9068167f665bec39edd4546336ee3d", "patch": "@@ -17,7 +17,7 @@ pub(crate) mod chalk;\n #[derive(Debug, Clone)]\n pub struct TraitSolver {\n     krate: Crate,\n-    inner: Arc<Mutex<chalk_solve::Solver>>,\n+    inner: Arc<Mutex<chalk_solve::Solver<ChalkIr>>>,\n }\n \n /// We need eq for salsa\n@@ -34,7 +34,7 @@ impl TraitSolver {\n         &self,\n         db: &impl HirDatabase,\n         goal: &chalk_ir::UCanonical<chalk_ir::InEnvironment<chalk_ir::Goal<ChalkIr>>>,\n-    ) -> Option<chalk_solve::Solution> {\n+    ) -> Option<chalk_solve::Solution<ChalkIr>> {\n         let context = ChalkContext { db, krate: self.krate };\n         debug!(\"solve goal: {:?}\", goal);\n         let mut solver = match self.inner.lock() {\n@@ -196,7 +196,10 @@ pub(crate) fn trait_solve_query(\n     solution.map(|solution| solution_from_chalk(db, solution))\n }\n \n-fn solution_from_chalk(db: &impl HirDatabase, solution: chalk_solve::Solution) -> Solution {\n+fn solution_from_chalk(\n+    db: &impl HirDatabase,\n+    solution: chalk_solve::Solution<ChalkIr>,\n+) -> Solution {\n     let convert_subst = |subst: chalk_ir::Canonical<chalk_ir::Substitution<ChalkIr>>| {\n         let value = subst\n             .value"}, {"sha": "9bf93981a08c3133fed5f0e0b06f8b23881b84d2", "filename": "crates/ra_hir/src/ty/traits/chalk.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ee190388ab9068167f665bec39edd4546336ee3d/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee190388ab9068167f665bec39edd4546336ee3d/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs?ref=ee190388ab9068167f665bec39edd4546336ee3d", "patch": "@@ -418,20 +418,20 @@ fn convert_where_clauses(\n     result\n }\n \n-impl<'a, DB> chalk_solve::RustIrDatabase for ChalkContext<'a, DB>\n+impl<'a, DB> chalk_solve::RustIrDatabase<ChalkIr> for ChalkContext<'a, DB>\n where\n     DB: HirDatabase,\n {\n-    fn associated_ty_data(&self, id: TypeId) -> Arc<AssociatedTyDatum> {\n+    fn associated_ty_data(&self, id: TypeId) -> Arc<AssociatedTyDatum<ChalkIr>> {\n         self.db.associated_ty_data(id)\n     }\n-    fn trait_datum(&self, trait_id: chalk_ir::TraitId) -> Arc<TraitDatum> {\n+    fn trait_datum(&self, trait_id: chalk_ir::TraitId) -> Arc<TraitDatum<ChalkIr>> {\n         self.db.trait_datum(self.krate, trait_id)\n     }\n-    fn struct_datum(&self, struct_id: chalk_ir::StructId) -> Arc<StructDatum> {\n+    fn struct_datum(&self, struct_id: chalk_ir::StructId) -> Arc<StructDatum<ChalkIr>> {\n         self.db.struct_datum(self.krate, struct_id)\n     }\n-    fn impl_datum(&self, impl_id: ImplId) -> Arc<ImplDatum> {\n+    fn impl_datum(&self, impl_id: ImplId) -> Arc<ImplDatum<ChalkIr>> {\n         self.db.impl_datum(self.krate, impl_id)\n     }\n     fn impls_for_trait(\n@@ -484,7 +484,7 @@ where\n     fn associated_ty_value(\n         &self,\n         id: chalk_rust_ir::AssociatedTyValueId,\n-    ) -> Arc<AssociatedTyValue> {\n+    ) -> Arc<AssociatedTyValue<ChalkIr>> {\n         self.db.associated_ty_value(self.krate, id)\n     }\n     fn custom_clauses(&self) -> Vec<chalk_ir::ProgramClause<ChalkIr>> {\n@@ -502,7 +502,7 @@ where\n pub(crate) fn associated_ty_data_query(\n     db: &impl HirDatabase,\n     id: TypeId,\n-) -> Arc<AssociatedTyDatum> {\n+) -> Arc<AssociatedTyDatum<ChalkIr>> {\n     debug!(\"associated_ty_data {:?}\", id);\n     let type_alias: TypeAlias = from_chalk(db, id);\n     let trait_ = match type_alias.container(db) {\n@@ -528,7 +528,7 @@ pub(crate) fn trait_datum_query(\n     db: &impl HirDatabase,\n     krate: Crate,\n     trait_id: chalk_ir::TraitId,\n-) -> Arc<TraitDatum> {\n+) -> Arc<TraitDatum<ChalkIr>> {\n     debug!(\"trait_datum {:?}\", trait_id);\n     if trait_id == UNKNOWN_TRAIT {\n         let trait_datum_bound = chalk_rust_ir::TraitDatumBound { where_clauses: Vec::new() };\n@@ -585,7 +585,7 @@ pub(crate) fn struct_datum_query(\n     db: &impl HirDatabase,\n     krate: Crate,\n     struct_id: chalk_ir::StructId,\n-) -> Arc<StructDatum> {\n+) -> Arc<StructDatum<ChalkIr>> {\n     debug!(\"struct_datum {:?}\", struct_id);\n     let type_ctor: TypeCtor = from_chalk(db, struct_id);\n     debug!(\"struct {:?} = {:?}\", struct_id, type_ctor);\n@@ -617,7 +617,7 @@ pub(crate) fn impl_datum_query(\n     db: &impl HirDatabase,\n     krate: Crate,\n     impl_id: ImplId,\n-) -> Arc<ImplDatum> {\n+) -> Arc<ImplDatum<ChalkIr>> {\n     let _p = ra_prof::profile(\"impl_datum\");\n     debug!(\"impl_datum {:?}\", impl_id);\n     let impl_: Impl = from_chalk(db, impl_id);\n@@ -633,7 +633,7 @@ fn impl_block_datum(\n     krate: Crate,\n     impl_id: ImplId,\n     impl_block: ImplBlock,\n-) -> Option<Arc<ImplDatum>> {\n+) -> Option<Arc<ImplDatum<ChalkIr>>> {\n     let generic_params = impl_block.generic_params(db);\n     let bound_vars = Substs::bound_vars(&generic_params);\n     let trait_ref = impl_block.target_trait_ref(db)?.subst(&bound_vars);\n@@ -684,7 +684,7 @@ fn impl_block_datum(\n     Some(Arc::new(impl_datum))\n }\n \n-fn invalid_impl_datum() -> Arc<ImplDatum> {\n+fn invalid_impl_datum() -> Arc<ImplDatum<ChalkIr>> {\n     let trait_ref = chalk_ir::TraitRef {\n         trait_id: UNKNOWN_TRAIT,\n         parameters: vec![chalk_ir::TyData::BoundVar(0).cast().intern().cast()],\n@@ -703,7 +703,7 @@ fn closure_fn_trait_impl_datum(\n     db: &impl HirDatabase,\n     krate: Crate,\n     data: super::ClosureFnTraitImplData,\n-) -> Option<Arc<ImplDatum>> {\n+) -> Option<Arc<ImplDatum<ChalkIr>>> {\n     // for some closure |X, Y| -> Z:\n     // impl<T, U, V> Fn<(T, U)> for closure<fn(T, U) -> V> { Output = V }\n \n@@ -760,7 +760,7 @@ pub(crate) fn associated_ty_value_query(\n     db: &impl HirDatabase,\n     krate: Crate,\n     id: chalk_rust_ir::AssociatedTyValueId,\n-) -> Arc<chalk_rust_ir::AssociatedTyValue> {\n+) -> Arc<chalk_rust_ir::AssociatedTyValue<ChalkIr>> {\n     let data: AssocTyValue = from_chalk(db, id);\n     match data {\n         AssocTyValue::TypeAlias(type_alias) => {\n@@ -776,7 +776,7 @@ fn type_alias_associated_ty_value(\n     db: &impl HirDatabase,\n     _krate: Crate,\n     type_alias: TypeAlias,\n-) -> Arc<AssociatedTyValue> {\n+) -> Arc<AssociatedTyValue<ChalkIr>> {\n     let impl_block = type_alias.impl_block(db).expect(\"assoc ty value should be in impl\");\n     let impl_id = Impl::ImplBlock(impl_block).to_chalk(db);\n     let trait_ = impl_block\n@@ -802,7 +802,7 @@ fn closure_fn_trait_output_assoc_ty_value(\n     db: &impl HirDatabase,\n     krate: Crate,\n     data: super::ClosureFnTraitImplData,\n-) -> Arc<AssociatedTyValue> {\n+) -> Arc<AssociatedTyValue<ChalkIr>> {\n     let impl_id = Impl::ClosureFnTraitImpl(data.clone()).to_chalk(db);\n \n     let num_args: u16 = match &data.def.body(db)[data.expr] {"}]}