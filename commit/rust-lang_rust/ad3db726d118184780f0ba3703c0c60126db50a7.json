{"sha": "ad3db726d118184780f0ba3703c0c60126db50a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkM2RiNzI2ZDExODE4NDc4MGYwYmEzNzAzYzBjNjAxMjZkYjUwYTc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-27T23:06:33Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-05T06:33:09Z"}, "message": "or-patterns: syntax: adjust parser removing a hack.\n\nFuse `parse_top_pat` and `parse_top_pat_unpack` into just `parse_top_pat`.", "tree": {"sha": "795b1fa8c14913ba8554c7404a20683eb9648c48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/795b1fa8c14913ba8554c7404a20683eb9648c48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad3db726d118184780f0ba3703c0c60126db50a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad3db726d118184780f0ba3703c0c60126db50a7", "html_url": "https://github.com/rust-lang/rust/commit/ad3db726d118184780f0ba3703c0c60126db50a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad3db726d118184780f0ba3703c0c60126db50a7/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "998060ba3f7149145db095bc01e7bd2e396f3f2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/998060ba3f7149145db095bc01e7bd2e396f3f2f", "html_url": "https://github.com/rust-lang/rust/commit/998060ba3f7149145db095bc01e7bd2e396f3f2f"}], "stats": {"total": 18, "additions": 3, "deletions": 15}, "files": [{"sha": "3db9c899dba40f12696cf01649ad28721d55d17d", "filename": "src/libsyntax/parse/parser/expr.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ad3db726d118184780f0ba3703c0c60126db50a7/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad3db726d118184780f0ba3703c0c60126db50a7/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs?ref=ad3db726d118184780f0ba3703c0c60126db50a7", "patch": "@@ -1250,8 +1250,7 @@ impl<'a> Parser<'a> {\n     /// The `let` token has already been eaten.\n     fn parse_let_expr(&mut self, attrs: ThinVec<Attribute>) -> PResult<'a, P<Expr>> {\n         let lo = self.prev_span;\n-        // FIXME(or_patterns, Centril | dlrobertson): use `parse_top_pat` instead.\n-        let pat = self.parse_top_pat_unpack(GateOr::No)?;\n+        let pat = self.parse_top_pat(GateOr::No)?;\n         self.expect(&token::Eq)?;\n         let expr = self.with_res(\n             Restrictions::NO_STRUCT_LITERAL,\n@@ -1393,8 +1392,7 @@ impl<'a> Parser<'a> {\n     crate fn parse_arm(&mut self) -> PResult<'a, Arm> {\n         let attrs = self.parse_outer_attributes()?;\n         let lo = self.token.span;\n-        // FIXME(or_patterns, Centril | dlrobertson): use `parse_top_pat` instead.\n-        let pat = self.parse_top_pat_unpack(GateOr::No)?;\n+        let pat = self.parse_top_pat(GateOr::No)?;\n         let guard = if self.eat_keyword(kw::If) {\n             Some(self.parse_expr()?)\n         } else {\n@@ -1455,7 +1453,7 @@ impl<'a> Parser<'a> {\n \n         Ok(ast::Arm {\n             attrs,\n-            pats: pat, // FIXME(or_patterns, Centril | dlrobertson): this should just be `pat,`.\n+            pat,\n             guard,\n             body: expr,\n             span: lo.to(hi),"}, {"sha": "669f657160b3e75c8fef3297f23d2da0ff2e7ec4", "filename": "src/libsyntax/parse/parser/pat.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ad3db726d118184780f0ba3703c0c60126db50a7/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad3db726d118184780f0ba3703c0c60126db50a7/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs?ref=ad3db726d118184780f0ba3703c0c60126db50a7", "patch": "@@ -36,16 +36,6 @@ impl<'a> Parser<'a> {\n         self.parse_pat_with_range_pat(true, expected)\n     }\n \n-    // FIXME(or_patterns, Centril | dlrobertson):\n-    // remove this and use `parse_top_pat` everywhere it is used instead.\n-    pub(super) fn parse_top_pat_unpack(&mut self, gate_or: GateOr) -> PResult<'a, Vec<P<Pat>>> {\n-        self.parse_top_pat(gate_or)\n-            .map(|pat| pat.and_then(|pat| match pat.node {\n-                PatKind::Or(pats) => pats,\n-                node => vec![self.mk_pat(pat.span, node)],\n-            }))\n-    }\n-\n     /// Entry point to the main pattern parser.\n     /// Corresponds to `top_pat` in RFC 2535 and allows or-pattern at the top level.\n     pub(super) fn parse_top_pat(&mut self, gate_or: GateOr) -> PResult<'a, P<Pat>> {"}]}