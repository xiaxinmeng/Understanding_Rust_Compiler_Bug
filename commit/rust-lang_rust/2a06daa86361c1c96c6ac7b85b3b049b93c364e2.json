{"sha": "2a06daa86361c1c96c6ac7b85b3b049b93c364e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhMDZkYWE4NjM2MWMxYzk2YzZhYzdiODViM2IwNDliOTNjMzY0ZTI=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-30T18:17:12Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-31T14:25:51Z"}, "message": "Pull Span::find_ancestor_inside loop into its own function.", "tree": {"sha": "8e16699f0df0a068f23676493a3c72d5c4e2aa5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e16699f0df0a068f23676493a3c72d5c4e2aa5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a06daa86361c1c96c6ac7b85b3b049b93c364e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a06daa86361c1c96c6ac7b85b3b049b93c364e2", "html_url": "https://github.com/rust-lang/rust/commit/2a06daa86361c1c96c6ac7b85b3b049b93c364e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a06daa86361c1c96c6ac7b85b3b049b93c364e2/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76d18cfb8945f824c8777e04981e930d2037954e", "url": "https://api.github.com/repos/rust-lang/rust/commits/76d18cfb8945f824c8777e04981e930d2037954e", "html_url": "https://github.com/rust-lang/rust/commit/76d18cfb8945f824c8777e04981e930d2037954e"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "10e9bde0d972be2b904373b8e93291943a7eb42f", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2a06daa86361c1c96c6ac7b85b3b049b93c364e2/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a06daa86361c1c96c6ac7b85b3b049b93c364e2/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=2a06daa86361c1c96c6ac7b85b3b049b93c364e2", "patch": "@@ -597,6 +597,14 @@ impl Span {\n         if !expn_data.is_root() { Some(expn_data.call_site) } else { None }\n     }\n \n+    /// Walk down the expansion ancestors to find a span that's contained within `outer`.\n+    pub fn find_ancestor_inside(mut self, outer: Span) -> Option<Span> {\n+        while !outer.contains(self) {\n+            self = self.parent()?;\n+        }\n+        Some(self)\n+    }\n+\n     /// Edition of the crate from which this span came.\n     pub fn edition(self) -> edition::Edition {\n         self.ctxt().edition()"}, {"sha": "a25d0f8064404783d96d6912cbc90e2980136c59", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2a06daa86361c1c96c6ac7b85b3b049b93c364e2/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a06daa86361c1c96c6ac7b85b3b049b93c364e2/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=2a06daa86361c1c96c6ac7b85b3b049b93c364e2", "patch": "@@ -680,15 +680,13 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         migrated_variables_concat\n                     );\n \n-                    let mut closure_body_span = self.tcx.hir().span(body_id.hir_id);\n-\n                     // If the body was entirely expanded from a macro\n                     // invocation, i.e. the body is not contained inside the\n                     // closure span, then we walk up the expansion until we\n                     // find the span before the expansion.\n-                    while !closure_body_span.is_dummy() && !closure_span.contains(closure_body_span) {\n-                        closure_body_span = closure_body_span.parent().unwrap_or(DUMMY_SP);\n-                    }\n+                    let closure_body_span = self.tcx.hir().span(body_id.hir_id)\n+                        .find_ancestor_inside(closure_span)\n+                        .unwrap_or(DUMMY_SP);\n \n                     if let Ok(s) = self.tcx.sess.source_map().span_to_snippet(closure_body_span) {\n                         let mut lines = s.lines();"}]}