{"sha": "247d74f207633a5aeceb1e0ede878427465c5093", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0N2Q3NGYyMDc2MzNhNWFlY2ViMWUwZWRlODc4NDI3NDY1YzUwOTM=", "commit": {"author": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2021-04-16T02:23:40Z"}, "committer": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2021-04-16T02:23:40Z"}, "message": "StyledBuffer::set_style: check overwrite first", "tree": {"sha": "a3e910069e933201cc9a7e21bace6a91c8360f4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3e910069e933201cc9a7e21bace6a91c8360f4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/247d74f207633a5aeceb1e0ede878427465c5093", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/247d74f207633a5aeceb1e0ede878427465c5093", "html_url": "https://github.com/rust-lang/rust/commit/247d74f207633a5aeceb1e0ede878427465c5093", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/247d74f207633a5aeceb1e0ede878427465c5093/comments", "author": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e9d3c6f6cf3956dbf2a7870cebe89ebeb5d9ea5", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e9d3c6f6cf3956dbf2a7870cebe89ebeb5d9ea5", "html_url": "https://github.com/rust-lang/rust/commit/7e9d3c6f6cf3956dbf2a7870cebe89ebeb5d9ea5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "01d2a8de39d50617c255cf889e4f6e00b0ad2e5f", "filename": "compiler/rustc_errors/src/styled_buffer.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/247d74f207633a5aeceb1e0ede878427465c5093/compiler%2Frustc_errors%2Fsrc%2Fstyled_buffer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/247d74f207633a5aeceb1e0ede878427465c5093/compiler%2Frustc_errors%2Fsrc%2Fstyled_buffer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fstyled_buffer.rs?ref=247d74f207633a5aeceb1e0ede878427465c5093", "patch": "@@ -148,11 +148,11 @@ impl StyledBuffer {\n \n     /// Set `style` for `line`, `col` if:\n     /// 1. That line and column exist in `StyledBuffer`\n-    /// 2. Existing style is `Style::NoStyle` or `Style::Quotation` or `overwrite` is `true`\n+    /// 2. `overwrite` is `true` or existing style is `Style::NoStyle` or `Style::Quotation`\n     pub fn set_style(&mut self, line: usize, col: usize, style: Style, overwrite: bool) {\n         if let Some(ref mut line) = self.text.get_mut(line) {\n             if let Some(StyledChar { style: s, .. }) = line.get_mut(col) {\n-                if *s == Style::NoStyle || *s == Style::Quotation || overwrite {\n+                if overwrite || *s == Style::NoStyle || *s == Style::Quotation {\n                     *s = style;\n                 }\n             }"}]}