{"sha": "cd6829382dee139818d3d7203fe4ec169d01d938", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkNjgyOTM4MmRlZTEzOTgxOGQzZDcyMDNmZTRlYzE2OWQwMWQ5Mzg=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-09-03T00:22:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-03T00:22:14Z"}, "message": "Rollup merge of #76245 - tmiasko:inline-generators, r=ecstatic-morse\n\ninliner: Avoid query cycles when optimizing generators\n\nThe HIR Id trick is insufficient to prevent query cycles when optimizing\ngenerators, since merely requesting a layout of a generator also\ncomputes its `optimized_mir`.\n\nMake no attempts to inline functions into generators within the same\ncrate to avoid query cycles.\n\nFixes #76181.", "tree": {"sha": "98cb9aad144ec363783cc441efc4219da2997ac6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98cb9aad144ec363783cc441efc4219da2997ac6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd6829382dee139818d3d7203fe4ec169d01d938", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfUDc3CRBK7hj4Ov3rIwAAdHIIABZSrXhvEDhQrdXC/lZ2CX5l\n2Tz7Se97LG4txpjILjIcT0dvBUWfgnc/25AzzDQa4ebtwv5L+zRrkpighnkVJsJM\n1UjFVH3uASqkdatBr6iCZeFvp4kJI13IzOytzDNLbl6IijQCN2ba0PDYhJy+9ReW\n7wOycfeIrDpX54wXdcc0sabZlgxfD4WvtSYsPDoeaj81Oeeyx+q0NRORwfh75bj/\n4vW1aJ9Qyui9ysEWaE0zx9FL8USWiffiEzDw+GGkl1Ffn9gAOsS2lKPJyS2REhmm\nTS2FqGV2lqMgckstlUJ5v1VQJew4+vYzcDkoOKslV+vBmSNpvt+KFozM0qaF/qU=\n=SrWc\n-----END PGP SIGNATURE-----\n", "payload": "tree 98cb9aad144ec363783cc441efc4219da2997ac6\nparent 3368f5c820f5fc1700eb22ea2ed45fa057eab83a\nparent 6c51ec96bb5b6679645be1651d4ff1d079412af6\nauthor Dylan DPC <dylan.dpc@gmail.com> 1599092534 +0200\ncommitter GitHub <noreply@github.com> 1599092534 +0200\n\nRollup merge of #76245 - tmiasko:inline-generators, r=ecstatic-morse\n\ninliner: Avoid query cycles when optimizing generators\n\nThe HIR Id trick is insufficient to prevent query cycles when optimizing\ngenerators, since merely requesting a layout of a generator also\ncomputes its `optimized_mir`.\n\nMake no attempts to inline functions into generators within the same\ncrate to avoid query cycles.\n\nFixes #76181.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd6829382dee139818d3d7203fe4ec169d01d938", "html_url": "https://github.com/rust-lang/rust/commit/cd6829382dee139818d3d7203fe4ec169d01d938", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd6829382dee139818d3d7203fe4ec169d01d938/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3368f5c820f5fc1700eb22ea2ed45fa057eab83a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3368f5c820f5fc1700eb22ea2ed45fa057eab83a", "html_url": "https://github.com/rust-lang/rust/commit/3368f5c820f5fc1700eb22ea2ed45fa057eab83a"}, {"sha": "6c51ec96bb5b6679645be1651d4ff1d079412af6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c51ec96bb5b6679645be1651d4ff1d079412af6", "html_url": "https://github.com/rust-lang/rust/commit/6c51ec96bb5b6679645be1651d4ff1d079412af6"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "428f4e138c7f986860e3154f0d70135b1bfa8e7f", "filename": "compiler/rustc_mir/src/transform/inline.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cd6829382dee139818d3d7203fe4ec169d01d938/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6829382dee139818d3d7203fe4ec169d01d938/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs?ref=cd6829382dee139818d3d7203fe4ec169d01d938", "patch": "@@ -107,8 +107,14 @@ impl Inliner<'tcx> {\n                     // Avoid a cycle here by only using `optimized_mir` only if we have\n                     // a lower `HirId` than the callee. This ensures that the callee will\n                     // not inline us. This trick only works without incremental compilation.\n-                    // So don't do it if that is enabled.\n-                    if !self.tcx.dep_graph.is_fully_enabled() && self_hir_id < callee_hir_id {\n+                    // So don't do it if that is enabled. Also avoid inlining into generators,\n+                    // since their `optimized_mir` is used for layout computation, which can\n+                    // create a cycle, even when no attempt is made to inline the function\n+                    // in the other direction.\n+                    if !self.tcx.dep_graph.is_fully_enabled()\n+                        && self_hir_id < callee_hir_id\n+                        && caller_body.generator_kind.is_none()\n+                    {\n                         self.tcx.optimized_mir(callsite.callee)\n                     } else {\n                         continue;"}, {"sha": "5c838159b986c55d5c934a0bbccb6ea0ba00cf65", "filename": "src/test/mir-opt/inline/inline-async.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/cd6829382dee139818d3d7203fe4ec169d01d938/src%2Ftest%2Fmir-opt%2Finline%2Finline-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6829382dee139818d3d7203fe4ec169d01d938/src%2Ftest%2Fmir-opt%2Finline%2Finline-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline-async.rs?ref=cd6829382dee139818d3d7203fe4ec169d01d938", "patch": "@@ -0,0 +1,18 @@\n+// Checks that inliner doesn't introduce cycles when optimizing generators.\n+// The outcome of optimization is not verfied, just the absence of the cycle.\n+// Regression test for #76181.\n+//\n+// edition:2018\n+\n+#![crate_type = \"lib\"]\n+\n+pub struct S;\n+\n+impl S {\n+    pub async fn g(&mut self) {\n+        self.h();\n+    }\n+    pub fn h(&mut self) {\n+        let _ = self.g();\n+    }\n+}"}]}