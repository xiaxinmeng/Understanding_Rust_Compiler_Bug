{"sha": "e4362a59b940073569c05b7e2ae2c6f686ed0bb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0MzYyYTU5Yjk0MDA3MzU2OWMwNWI3ZTJhZTJjNmY2ODZlZDBiYjc=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-10T02:43:06Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-10T22:12:13Z"}, "message": "Remove the empty tuple of tydescs from closures. Closes #2531.", "tree": {"sha": "436a3e76a152f9991c0a7989cdcaf982db17f979", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/436a3e76a152f9991c0a7989cdcaf982db17f979"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4362a59b940073569c05b7e2ae2c6f686ed0bb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4362a59b940073569c05b7e2ae2c6f686ed0bb7", "html_url": "https://github.com/rust-lang/rust/commit/e4362a59b940073569c05b7e2ae2c6f686ed0bb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4362a59b940073569c05b7e2ae2c6f686ed0bb7/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95dd9f320498faf5e6bb86dbe256cd5646398961", "url": "https://api.github.com/repos/rust-lang/rust/commits/95dd9f320498faf5e6bb86dbe256cd5646398961", "html_url": "https://github.com/rust-lang/rust/commit/95dd9f320498faf5e6bb86dbe256cd5646398961"}], "stats": {"total": 17, "additions": 5, "deletions": 12}, "files": [{"sha": "385d3c7cb316709aeb50702d34e77f8a2fc46b5b", "filename": "src/rustc/back/abi.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e4362a59b940073569c05b7e2ae2c6f686ed0bb7/src%2Frustc%2Fback%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4362a59b940073569c05b7e2ae2c6f686ed0bb7/src%2Frustc%2Fback%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fback%2Fabi.rs?ref=e4362a59b940073569c05b7e2ae2c6f686ed0bb7", "patch": "@@ -60,10 +60,6 @@ const cmp_glue_op_le: uint = 2u;\n const fn_field_code: uint = 0u;\n const fn_field_box: uint = 1u;\n \n-// closures, see trans_closure.rs\n-const closure_body_ty_params: uint = 0u;\n-const closure_body_bindings: uint = 1u;\n-\n const vec_elt_fill: uint = 0u;\n \n const vec_elt_alloc: uint = 1u;"}, {"sha": "e04af18eec9610ce9bb30e793c88f6599a5e87f3", "filename": "src/rustc/middle/trans/closure.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e4362a59b940073569c05b7e2ae2c6f686ed0bb7/src%2Frustc%2Fmiddle%2Ftrans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4362a59b940073569c05b7e2ae2c6f686ed0bb7/src%2Frustc%2Fmiddle%2Ftrans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fclosure.rs?ref=e4362a59b940073569c05b7e2ae2c6f686ed0bb7", "patch": "@@ -130,10 +130,7 @@ fn mk_closure_tys(tcx: ty::ctxt,\n             env_ref(_, t, _) { t }\n         });\n     }\n-    let bound_data_ty = ty::mk_tup(tcx, bound_tys);\n-    // FIXME[mono] remove tuple of tydescs from closure types (#2531)\n-    let cdata_ty = ty::mk_tup(tcx, ~[ty::mk_tup(tcx, ~[]),\n-                                    bound_data_ty]);\n+    let cdata_ty = ty::mk_tup(tcx, bound_tys);\n     #debug[\"cdata_ty=%s\", ty_to_str(tcx, cdata_ty)];\n     ret cdata_ty;\n }\n@@ -217,7 +214,7 @@ fn store_environment(bcx: block,\n         }\n \n         let bound_data = GEPi(bcx, llbox,\n-             ~[0u, abi::box_field_body, abi::closure_body_bindings, i]);\n+             ~[0u, abi::box_field_body, i]);\n         alt bv {\n           env_copy(val, ty, owned) {\n             let val1 = load_if_immediate(bcx, val, ty);\n@@ -334,7 +331,7 @@ fn load_environment(fcx: fn_ctxt,\n           capture::cap_drop { /* ignore */ }\n           _ {\n             let mut upvarptr =\n-                GEPi(bcx, llcdata, ~[0u, abi::closure_body_bindings, i]);\n+                GEPi(bcx, llcdata, ~[0u, i]);\n             alt ck {\n               ty::ck_block { upvarptr = Load(bcx, upvarptr); }\n               ty::ck_uniq | ty::ck_box { }\n@@ -347,10 +344,10 @@ fn load_environment(fcx: fn_ctxt,\n     }\n     if load_ret_handle {\n         let flagptr = Load(bcx, GEPi(bcx, llcdata,\n-                                     ~[0u, abi::closure_body_bindings, i]));\n+                                     ~[0u, i]));\n         let retptr = Load(bcx,\n                           GEPi(bcx, llcdata,\n-                               ~[0u, abi::closure_body_bindings, i+1u]));\n+                               ~[0u, i+1u]));\n         fcx.loop_ret = some({flagptr: flagptr, retptr: retptr});\n     }\n }"}]}