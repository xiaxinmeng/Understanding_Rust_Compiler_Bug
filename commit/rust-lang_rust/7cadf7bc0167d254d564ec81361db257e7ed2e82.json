{"sha": "7cadf7bc0167d254d564ec81361db257e7ed2e82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjYWRmN2JjMDE2N2QyNTRkNTY0ZWM4MTM2MWRiMjU3ZTdlZDJlODI=", "commit": {"author": {"name": "Rupert Rutledge", "email": "1982481+Eosis@users.noreply.github.com", "date": "2021-06-17T10:02:16Z"}, "committer": {"name": "Rupert Rutledge", "email": "1982481+Eosis@users.noreply.github.com", "date": "2021-06-17T10:02:16Z"}, "message": "Alter std::cell::Cell::get_mut documentation\n\nI find this more consistent with RefCell's equivalent method.", "tree": {"sha": "7b4aa37745b7fcaebc5f8835159610c7e3ddb88a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b4aa37745b7fcaebc5f8835159610c7e3ddb88a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cadf7bc0167d254d564ec81361db257e7ed2e82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cadf7bc0167d254d564ec81361db257e7ed2e82", "html_url": "https://github.com/rust-lang/rust/commit/7cadf7bc0167d254d564ec81361db257e7ed2e82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cadf7bc0167d254d564ec81361db257e7ed2e82/comments", "author": {"login": "Eosis", "id": 1982481, "node_id": "MDQ6VXNlcjE5ODI0ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/1982481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eosis", "html_url": "https://github.com/Eosis", "followers_url": "https://api.github.com/users/Eosis/followers", "following_url": "https://api.github.com/users/Eosis/following{/other_user}", "gists_url": "https://api.github.com/users/Eosis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eosis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eosis/subscriptions", "organizations_url": "https://api.github.com/users/Eosis/orgs", "repos_url": "https://api.github.com/users/Eosis/repos", "events_url": "https://api.github.com/users/Eosis/events{/privacy}", "received_events_url": "https://api.github.com/users/Eosis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Eosis", "id": 1982481, "node_id": "MDQ6VXNlcjE5ODI0ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/1982481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eosis", "html_url": "https://github.com/Eosis", "followers_url": "https://api.github.com/users/Eosis/followers", "following_url": "https://api.github.com/users/Eosis/following{/other_user}", "gists_url": "https://api.github.com/users/Eosis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eosis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eosis/subscriptions", "organizations_url": "https://api.github.com/users/Eosis/orgs", "repos_url": "https://api.github.com/users/Eosis/repos", "events_url": "https://api.github.com/users/Eosis/events{/privacy}", "received_events_url": "https://api.github.com/users/Eosis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb3c4ee7187b045683cb9b86135dbbb766471091", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb3c4ee7187b045683cb9b86135dbbb766471091", "html_url": "https://github.com/rust-lang/rust/commit/cb3c4ee7187b045683cb9b86135dbbb766471091"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "6fd49361585891e07ea6940e396d869a06f76bae", "filename": "library/core/src/cell.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7cadf7bc0167d254d564ec81361db257e7ed2e82/library%2Fcore%2Fsrc%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cadf7bc0167d254d564ec81361db257e7ed2e82/library%2Fcore%2Fsrc%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcell.rs?ref=7cadf7bc0167d254d564ec81361db257e7ed2e82", "patch": "@@ -488,6 +488,13 @@ impl<T: ?Sized> Cell<T> {\n     /// This call borrows `Cell` mutably (at compile-time) which guarantees\n     /// that we possess the only reference.\n     ///\n+    /// However be cautious: this method expects `self` to be mutable, which is\n+    /// generally not the case when using a `Cell`. If you require interior\n+    /// mutability by reference, consider using `RefCell` which provides\n+    /// run-time checked mutable borrows through its [`borrow_mut`] method.\n+    ///\n+    /// [`borrow_mut`]: RefCell::borrow_mut()\n+    ///\n     /// # Examples\n     ///\n     /// ```"}]}