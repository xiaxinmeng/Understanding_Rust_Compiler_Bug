{"sha": "91f7d761e762d0d9f47cf61cf5d942fd93eaf2a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxZjdkNzYxZTc2MmQwZDlmNDdjZjYxY2Y1ZDk0MmZkOTNlYWYyYTg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-12T08:33:49Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-12T08:33:49Z"}, "message": "also assert ScalarMaybeUninit size", "tree": {"sha": "dfc2d0801695609d36784907c32ff8502a1e05f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfc2d0801695609d36784907c32ff8502a1e05f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91f7d761e762d0d9f47cf61cf5d942fd93eaf2a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91f7d761e762d0d9f47cf61cf5d942fd93eaf2a8", "html_url": "https://github.com/rust-lang/rust/commit/91f7d761e762d0d9f47cf61cf5d942fd93eaf2a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91f7d761e762d0d9f47cf61cf5d942fd93eaf2a8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f5c76951327b912c8e92e83235430ebd9b349d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f5c76951327b912c8e92e83235430ebd9b349d9", "html_url": "https://github.com/rust-lang/rust/commit/0f5c76951327b912c8e92e83235430ebd9b349d9"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "7741c76ff3e4517bfe23deba370d05727d619d69", "filename": "compiler/rustc_middle/src/mir/interpret/value.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/91f7d761e762d0d9f47cf61cf5d942fd93eaf2a8/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f7d761e762d0d9f47cf61cf5d942fd93eaf2a8/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fvalue.rs?ref=91f7d761e762d0d9f47cf61cf5d942fd93eaf2a8", "patch": "@@ -578,6 +578,9 @@ pub enum ScalarMaybeUninit<Tag = ()> {\n     Uninit,\n }\n \n+#[cfg(target_arch = \"x86_64\")]\n+static_assert_size!(ScalarMaybeUninit, 24);\n+\n impl<Tag> From<Scalar<Tag>> for ScalarMaybeUninit<Tag> {\n     #[inline(always)]\n     fn from(s: Scalar<Tag>) -> Self {"}]}