{"sha": "9306e9a4df2e6f8ed577fff3c82006c532ca51d2", "node_id": "C_kwDOAAsO6NoAKDkzMDZlOWE0ZGYyZTZmOGVkNTc3ZmZmM2M4MjAwNmM1MzJjYTUxZDI", "commit": {"author": {"name": "Dany Marcoux", "email": "dmarcoux@posteo.de", "date": "2022-05-18T18:28:11Z"}, "committer": {"name": "kyoto7250", "email": "50972773+kyoto7250@users.noreply.github.com", "date": "2022-06-15T15:36:56Z"}, "message": "Ignore bodies containing `todo!()` in `clippy::if_same_then_else`", "tree": {"sha": "6f31e94734c3fa6937e9c19bb36f44e0182ad384", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f31e94734c3fa6937e9c19bb36f44e0182ad384"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9306e9a4df2e6f8ed577fff3c82006c532ca51d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9306e9a4df2e6f8ed577fff3c82006c532ca51d2", "html_url": "https://github.com/rust-lang/rust/commit/9306e9a4df2e6f8ed577fff3c82006c532ca51d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9306e9a4df2e6f8ed577fff3c82006c532ca51d2/comments", "author": {"login": "dmarcoux", "id": 1102934, "node_id": "MDQ6VXNlcjExMDI5MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1102934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmarcoux", "html_url": "https://github.com/dmarcoux", "followers_url": "https://api.github.com/users/dmarcoux/followers", "following_url": "https://api.github.com/users/dmarcoux/following{/other_user}", "gists_url": "https://api.github.com/users/dmarcoux/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmarcoux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmarcoux/subscriptions", "organizations_url": "https://api.github.com/users/dmarcoux/orgs", "repos_url": "https://api.github.com/users/dmarcoux/repos", "events_url": "https://api.github.com/users/dmarcoux/events{/privacy}", "received_events_url": "https://api.github.com/users/dmarcoux/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kyoto7250", "id": 50972773, "node_id": "MDQ6VXNlcjUwOTcyNzcz", "avatar_url": "https://avatars.githubusercontent.com/u/50972773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyoto7250", "html_url": "https://github.com/kyoto7250", "followers_url": "https://api.github.com/users/kyoto7250/followers", "following_url": "https://api.github.com/users/kyoto7250/following{/other_user}", "gists_url": "https://api.github.com/users/kyoto7250/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyoto7250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyoto7250/subscriptions", "organizations_url": "https://api.github.com/users/kyoto7250/orgs", "repos_url": "https://api.github.com/users/kyoto7250/repos", "events_url": "https://api.github.com/users/kyoto7250/events{/privacy}", "received_events_url": "https://api.github.com/users/kyoto7250/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "844c06a7c7c01c6d0f6fc36e34eb5d630a8d1380", "url": "https://api.github.com/repos/rust-lang/rust/commits/844c06a7c7c01c6d0f6fc36e34eb5d630a8d1380", "html_url": "https://github.com/rust-lang/rust/commit/844c06a7c7c01c6d0f6fc36e34eb5d630a8d1380"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "6f92caf73917386ec32a1408b74d82d57f0b4772", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9306e9a4df2e6f8ed577fff3c82006c532ca51d2/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9306e9a4df2e6f8ed577fff3c82006c532ca51d2/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=9306e9a4df2e6f8ed577fff3c82006c532ca51d2", "patch": "@@ -12,7 +12,7 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::hygiene::walk_chain;\n use rustc_span::source_map::SourceMap;\n-use rustc_span::{BytePos, Span, Symbol};\n+use rustc_span::{sym, BytePos, Span, Symbol};\n use std::borrow::Cow;\n \n declare_clippy_lint! {\n@@ -365,6 +365,21 @@ fn eq_stmts(\n         .all(|b| get_stmt(b).map_or(false, |s| eq.eq_stmt(s, stmt)))\n }\n \n+fn block_contains_todo_macro(cx: &LateContext<'_>, block: &Block<'_>) -> bool {\n+    dbg!(block);\n+    if let Some(macro_def_id) = block.span.ctxt().outer_expn_data().macro_def_id {\n+        dbg!(macro_def_id);\n+        if let Some(diagnostic_name) = cx.tcx.get_diagnostic_name(macro_def_id) {\n+            dbg!(diagnostic_name);\n+            diagnostic_name == sym::todo_macro\n+        } else {\n+            false\n+        }\n+    } else {\n+        false\n+    }\n+}\n+\n fn scan_block_for_eq(cx: &LateContext<'_>, _conds: &[&Expr<'_>], block: &Block<'_>, blocks: &[&Block<'_>]) -> BlockEq {\n     let mut eq = SpanlessEq::new(cx);\n     let mut eq = eq.inter_expr();\n@@ -398,6 +413,7 @@ fn scan_block_for_eq(cx: &LateContext<'_>, _conds: &[&Expr<'_>], block: &Block<'\n             moved_locals,\n         };\n     }\n+\n     let end_search_start = block.stmts[start_end_eq..]\n         .iter()\n         .rev()"}, {"sha": "767185c207b3f947d5dc26d6544b247dc247a8f1", "filename": "tests/ui/if_same_then_else.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9306e9a4df2e6f8ed577fff3c82006c532ca51d2/tests%2Fui%2Fif_same_then_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9306e9a4df2e6f8ed577fff3c82006c532ca51d2/tests%2Fui%2Fif_same_then_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else.rs?ref=9306e9a4df2e6f8ed577fff3c82006c532ca51d2", "patch": "@@ -126,6 +126,9 @@ fn if_same_then_else() {\n             _ => 4,\n         };\n     }\n+\n+    // Issue #8836\n+    if true { todo!() } else { todo!() }\n }\n \n // Issue #2423. This was causing an ICE."}]}