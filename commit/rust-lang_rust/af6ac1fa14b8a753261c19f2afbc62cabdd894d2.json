{"sha": "af6ac1fa14b8a753261c19f2afbc62cabdd894d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmNmFjMWZhMTRiOGE3NTMyNjFjMTlmMmFmYmM2MmNhYmRkODk0ZDI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-04-11T09:12:47Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-05-25T08:07:01Z"}, "message": "Refactor string constant printing to prep for byte string printing", "tree": {"sha": "7a0dcce5b9c8cedb13bbfdd1d195beceaf1db8c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a0dcce5b9c8cedb13bbfdd1d195beceaf1db8c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af6ac1fa14b8a753261c19f2afbc62cabdd894d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af6ac1fa14b8a753261c19f2afbc62cabdd894d2", "html_url": "https://github.com/rust-lang/rust/commit/af6ac1fa14b8a753261c19f2afbc62cabdd894d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af6ac1fa14b8a753261c19f2afbc62cabdd894d2/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "264c149c8945b714a2922d412dde07b7651a5ea1", "url": "https://api.github.com/repos/rust-lang/rust/commits/264c149c8945b714a2922d412dde07b7651a5ea1", "html_url": "https://github.com/rust-lang/rust/commit/264c149c8945b714a2922d412dde07b7651a5ea1"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "817205af1b341e0cd6917e29e751a404e9a391dc", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/af6ac1fa14b8a753261c19f2afbc62cabdd894d2/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af6ac1fa14b8a753261c19f2afbc62cabdd894d2/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=af6ac1fa14b8a753261c19f2afbc62cabdd894d2", "patch": "@@ -1570,18 +1570,18 @@ define_print_and_forward_display! {\n                 ConstValue::Slice(place, len),\n                 ty::Ref(_, &ty::TyS { sty: ty::Str, .. }, _),\n             ) => {\n-                let s = match (place, len) {\n+                match (place, len) {\n                     (_, 0) => \"\",\n                     (Scalar::Ptr(ptr), len) => {\n                         let alloc = cx.tcx().alloc_map.lock().unwrap_memory(ptr.alloc_id);\n                         assert_eq!(len as usize as u64, len);\n                         let slice =\n                             &alloc.bytes[(ptr.offset.bytes() as usize)..][..(len as usize)];\n-                        ::std::str::from_utf8(slice).expect(\"non utf8 str from miri\")\n+                        let s = ::std::str::from_utf8(slice).expect(\"non utf8 str from miri\");\n+                        p!(write(\"{:?}\", s))\n                     },\n                     _ => bug!(\"invalid slice: {:#?}\", self),\n                 };\n-                p!(write(\"{:?}\", s))\n             },\n             _ => p!(write(\"{:?} : \", self.val), print(self.ty)),\n         }"}]}