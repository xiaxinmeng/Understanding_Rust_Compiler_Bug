{"sha": "90459e8173875f6faffbebfa150143c6e39980a5", "node_id": "C_kwDOAAsO6NoAKDkwNDU5ZTgxNzM4NzVmNmZhZmZiZWJmYTE1MDE0M2M2ZTM5OTgwYTU", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-05-23T07:25:16Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-05-23T07:25:16Z"}, "message": "Update to latest clippy", "tree": {"sha": "c655efff83b5af918990c381b831a3f779b01ced", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c655efff83b5af918990c381b831a3f779b01ced"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90459e8173875f6faffbebfa150143c6e39980a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90459e8173875f6faffbebfa150143c6e39980a5", "html_url": "https://github.com/rust-lang/rust/commit/90459e8173875f6faffbebfa150143c6e39980a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90459e8173875f6faffbebfa150143c6e39980a5/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32e52e8fdd5a469f2121538804bed4c392e837c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/32e52e8fdd5a469f2121538804bed4c392e837c0", "html_url": "https://github.com/rust-lang/rust/commit/32e52e8fdd5a469f2121538804bed4c392e837c0"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "323991249d3a7a4bd9630b87c1c4e75775381179", "filename": "src/tools/miri/src/shims/backtrace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fbacktrace.rs?ref=90459e8173875f6faffbebfa150143c6e39980a5", "patch": "@@ -102,7 +102,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n                 let ptr_layout = this.layout_of(ptr_ty)?;\n \n                 for (i, ptr) in ptrs.into_iter().enumerate() {\n-                    let offset = ptr_layout.size * i.try_into().unwrap();\n+                    let offset = ptr_layout.size.checked_mul(i.try_into().unwrap(), this).unwrap();\n \n                     let op_place = buf_place.offset(offset, ptr_layout, this)?;\n "}, {"sha": "aa0794c00bee5cbde54cf6cb039b26526c548e42", "filename": "src/tools/miri/src/shims/foreign_items.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fforeign_items.rs?ref=90459e8173875f6faffbebfa150143c6e39980a5", "patch": "@@ -166,7 +166,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n                     dependency_format.1.iter().enumerate().filter_map(|(num, &linkage)| {\n                         // We add 1 to the number because that's what rustc also does everywhere it\n                         // calls `CrateNum::new`...\n-                        #[allow(clippy::integer_arithmetic)]\n+                        #[allow(clippy::arithmetic_side_effects)]\n                         (linkage != Linkage::NotLinked).then_some(CrateNum::new(num + 1))\n                     }),\n                 ) {\n@@ -707,7 +707,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n                     .position(|&c| c == val)\n                 {\n                     let idx = u64::try_from(idx).unwrap();\n-                    #[allow(clippy::integer_arithmetic)] // idx < num, so this never wraps\n+                    #[allow(clippy::arithmetic_side_effects)] // idx < num, so this never wraps\n                     let new_ptr = ptr.offset(Size::from_bytes(num - idx - 1), this)?;\n                     this.write_pointer(new_ptr, dest)?;\n                 } else {\n@@ -916,10 +916,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n                 let a = this.read_scalar(a)?.to_u64()?;\n                 let b = this.read_scalar(b)?.to_u64()?;\n \n-                #[allow(clippy::integer_arithmetic)]\n+                #[allow(clippy::arithmetic_side_effects)]\n                 // adding two u64 and a u8 cannot wrap in a u128\n                 let wide_sum = u128::from(c_in) + u128::from(a) + u128::from(b);\n-                #[allow(clippy::integer_arithmetic)] // it's a u128, we can shift by 64\n+                #[allow(clippy::arithmetic_side_effects)] // it's a u128, we can shift by 64\n                 let (c_out, sum) = ((wide_sum >> 64).truncate::<u8>(), wide_sum.truncate::<u64>());\n \n                 let c_out_field = this.place_field(dest, 0)?;"}, {"sha": "1995db715e8dacdb0383a6211ace15545603183b", "filename": "src/tools/miri/src/shims/intrinsics/simd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fintrinsics%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fintrinsics%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fintrinsics%2Fsimd.rs?ref=90459e8173875f6faffbebfa150143c6e39980a5", "patch": "@@ -612,7 +612,7 @@ fn simd_bitmask_index(idx: u32, vec_len: u32, endianness: Endian) -> u32 {\n     assert!(idx < vec_len);\n     match endianness {\n         Endian::Little => idx,\n-        #[allow(clippy::integer_arithmetic)] // idx < vec_len\n+        #[allow(clippy::arithmetic_side_effects)] // idx < vec_len\n         Endian::Big => vec_len - 1 - idx, // reverse order of bits\n     }\n }"}, {"sha": "a423a0786b7510979a0ad6f860f171fa74ad082c", "filename": "src/tools/miri/src/shims/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fmod.rs?ref=90459e8173875f6faffbebfa150143c6e39980a5", "patch": "@@ -1,4 +1,4 @@\n-#![warn(clippy::integer_arithmetic)]\n+#![warn(clippy::arithmetic_side_effects)]\n \n mod backtrace;\n #[cfg(target_os = \"linux\")]"}, {"sha": "756dec1beca45ad326651614fa7e8ea534753ef1", "filename": "src/tools/miri/src/shims/time.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Ftime.rs?ref=90459e8173875f6faffbebfa150143c6e39980a5", "patch": "@@ -108,7 +108,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n         Ok(0)\n     }\n \n-    #[allow(non_snake_case, clippy::integer_arithmetic)]\n+    #[allow(non_snake_case, clippy::arithmetic_side_effects)]\n     fn GetSystemTimeAsFileTime(\n         &mut self,\n         LPFILETIME_op: &OpTy<'tcx, Provenance>,"}, {"sha": "62bd087e7e82d62e19cf1bfa2daeda387dc995d2", "filename": "src/tools/miri/src/shims/tls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Ftls.rs?ref=90459e8173875f6faffbebfa150143c6e39980a5", "patch": "@@ -56,7 +56,7 @@ impl<'tcx> Default for TlsData<'tcx> {\n impl<'tcx> TlsData<'tcx> {\n     /// Generate a new TLS key with the given destructor.\n     /// `max_size` determines the integer size the key has to fit in.\n-    #[allow(clippy::integer_arithmetic)]\n+    #[allow(clippy::arithmetic_side_effects)]\n     pub fn create_tls_key(\n         &mut self,\n         dtor: Option<ty::Instance<'tcx>>,"}, {"sha": "d1b09cd7b558b27da8267c76efe599cc11624429", "filename": "src/tools/miri/src/shims/unix/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Ffs.rs?ref=90459e8173875f6faffbebfa150143c6e39980a5", "patch": "@@ -458,7 +458,7 @@ pub struct DirHandler {\n }\n \n impl DirHandler {\n-    #[allow(clippy::integer_arithmetic)]\n+    #[allow(clippy::arithmetic_side_effects)]\n     fn insert_new(&mut self, read_dir: ReadDir) -> u64 {\n         let id = self.next_id;\n         self.next_id += 1;"}, {"sha": "6889c43004224336cf18a9eb896ec3e06aa035da", "filename": "src/tools/miri/src/shims/unix/linux/sync.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Flinux%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Flinux%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Flinux%2Fsync.rs?ref=90459e8173875f6faffbebfa150143c6e39980a5", "patch": "@@ -247,7 +247,7 @@ pub fn futex<'tcx>(\n             // before doing the syscall.\n             this.atomic_fence(AtomicFenceOrd::SeqCst)?;\n             let mut n = 0;\n-            #[allow(clippy::integer_arithmetic)]\n+            #[allow(clippy::arithmetic_side_effects)]\n             for _ in 0..val {\n                 if let Some(thread) = this.futex_wake(addr_usize, bitset) {\n                     this.unblock_thread(thread);"}, {"sha": "b8bb7f6245210c1cadbbbb1a05a43dc42e739ea2", "filename": "src/tools/miri/src/shims/windows/foreign_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fwindows%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fwindows%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fwindows%2Fforeign_items.rs?ref=90459e8173875f6faffbebfa150143c6e39980a5", "patch": "@@ -219,7 +219,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n                     .copied()\n                     .scan(Size::ZERO, |a, x| {\n                         let res = Some(*a);\n-                        *a += x;\n+                        *a = a.checked_add(x, this).unwrap();\n                         res\n                     })\n                     .collect();"}, {"sha": "d9ae1b22409ddd1b9b69a3a134270a3e35c62353", "filename": "src/tools/miri/src/shims/windows/handle.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fwindows%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90459e8173875f6faffbebfa150143c6e39980a5/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fwindows%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fwindows%2Fhandle.rs?ref=90459e8173875f6faffbebfa150143c6e39980a5", "patch": "@@ -62,7 +62,7 @@ impl Handle {\n         let floor_log2 = variant_count.ilog2();\n \n         // we need to add one for non powers of two to compensate for the difference\n-        #[allow(clippy::integer_arithmetic)] // cannot overflow\n+        #[allow(clippy::arithmetic_side_effects)] // cannot overflow\n         if variant_count.is_power_of_two() { floor_log2 } else { floor_log2 + 1 }\n     }\n \n@@ -87,7 +87,7 @@ impl Handle {\n \n         // packs the data into the lower `data_size` bits\n         // and packs the discriminant right above the data\n-        #[allow(clippy::integer_arithmetic)] // cannot overflow\n+        #[allow(clippy::arithmetic_side_effects)] // cannot overflow\n         return discriminant << data_size | data;\n     }\n \n@@ -106,11 +106,11 @@ impl Handle {\n         let data_size = u32::BITS.checked_sub(disc_size).unwrap();\n \n         // the lower `data_size` bits of this mask are 1\n-        #[allow(clippy::integer_arithmetic)] // cannot overflow\n+        #[allow(clippy::arithmetic_side_effects)] // cannot overflow\n         let data_mask = 2u32.pow(data_size) - 1;\n \n         // the discriminant is stored right above the lower `data_size` bits\n-        #[allow(clippy::integer_arithmetic)] // cannot overflow\n+        #[allow(clippy::arithmetic_side_effects)] // cannot overflow\n         let discriminant = handle >> data_size;\n \n         // the data is stored in the lower `data_size` bits"}]}