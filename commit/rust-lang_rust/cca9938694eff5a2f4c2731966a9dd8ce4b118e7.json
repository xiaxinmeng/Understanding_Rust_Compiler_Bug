{"sha": "cca9938694eff5a2f4c2731966a9dd8ce4b118e7", "node_id": "C_kwDOAAsO6NoAKGNjYTk5Mzg2OTRlZmY1YTJmNGMyNzMxOTY2YTlkZDhjZTRiMTE4ZTc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-29T12:22:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-29T12:22:02Z"}, "message": "Auto merge of #9714 - Alexendoo:bool-to-int-if-let, r=xFrednet\n\nFix `bool_to_int_with_if` false positive with `if let`\n\nFixes #9706\n\nchangelog: FP: [`bool_to_int_with_if`]: Now ignores `if let` statements", "tree": {"sha": "109234ec340cf294c375409df85b7632d91245db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/109234ec340cf294c375409df85b7632d91245db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cca9938694eff5a2f4c2731966a9dd8ce4b118e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cca9938694eff5a2f4c2731966a9dd8ce4b118e7", "html_url": "https://github.com/rust-lang/rust/commit/cca9938694eff5a2f4c2731966a9dd8ce4b118e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cca9938694eff5a2f4c2731966a9dd8ce4b118e7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e19251366887fe132bc7ba7593bff9358ad0291", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e19251366887fe132bc7ba7593bff9358ad0291", "html_url": "https://github.com/rust-lang/rust/commit/8e19251366887fe132bc7ba7593bff9358ad0291"}, {"sha": "ad5dfcd123a236fd588cd83fb4aba29be5535bc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad5dfcd123a236fd588cd83fb4aba29be5535bc4", "html_url": "https://github.com/rust-lang/rust/commit/ad5dfcd123a236fd588cd83fb4aba29be5535bc4"}], "stats": {"total": 65, "additions": 53, "deletions": 12}, "files": [{"sha": "40ded4056696e09172cd91f7172647013e946762", "filename": "clippy_lints/src/bool_to_int_with_if.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cca9938694eff5a2f4c2731966a9dd8ce4b118e7/clippy_lints%2Fsrc%2Fbool_to_int_with_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cca9938694eff5a2f4c2731966a9dd8ce4b118e7/clippy_lints%2Fsrc%2Fbool_to_int_with_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbool_to_int_with_if.rs?ref=cca9938694eff5a2f4c2731966a9dd8ce4b118e7", "patch": "@@ -1,3 +1,4 @@\n+use clippy_utils::higher::If;\n use rustc_ast::LitKind;\n use rustc_hir::{Block, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n@@ -52,9 +53,9 @@ impl<'tcx> LateLintPass<'tcx> for BoolToIntWithIf {\n }\n \n fn check_if_else<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx rustc_hir::Expr<'tcx>) {\n-    if let ExprKind::If(check, then, Some(else_)) = expr.kind\n+    if let Some(If { cond, then, r#else: Some(r#else) }) = If::hir(expr)\n         && let Some(then_lit) = int_literal(then)\n-        && let Some(else_lit) = int_literal(else_)\n+        && let Some(else_lit) = int_literal(r#else)\n     {\n         let inverted = if is_integer_literal(then_lit, 1) && is_integer_literal(else_lit, 0) {\n             false\n@@ -66,7 +67,7 @@ fn check_if_else<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx rustc_hir::Expr<'tcx>\n         };\n         let mut applicability = Applicability::MachineApplicable;\n         let snippet = {\n-            let mut sugg = Sugg::hir_with_applicability(cx, check, \"..\", &mut applicability);\n+            let mut sugg = Sugg::hir_with_applicability(cx, cond, \"..\", &mut applicability);\n             if inverted {\n                 sugg = !sugg;\n             }"}, {"sha": "37d3e3286a4b899772341fedfa0b24638b140b2d", "filename": "tests/ui/bool_to_int_with_if.fixed", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/cca9938694eff5a2f4c2731966a9dd8ce4b118e7/tests%2Fui%2Fbool_to_int_with_if.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/cca9938694eff5a2f4c2731966a9dd8ce4b118e7/tests%2Fui%2Fbool_to_int_with_if.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_to_int_with_if.fixed?ref=cca9938694eff5a2f4c2731966a9dd8ce4b118e7", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n \n+#![feature(let_chains)]\n #![warn(clippy::bool_to_int_with_if)]\n #![allow(unused, dead_code, clippy::unnecessary_operation, clippy::no_effect)]\n \n@@ -91,3 +92,22 @@ fn side_effect() {}\n fn cond(a: bool, b: bool) -> bool {\n     a || b\n }\n+\n+enum Enum {\n+    A,\n+    B,\n+}\n+\n+fn if_let(a: Enum, b: Enum) {\n+    if let Enum::A = a {\n+        1\n+    } else {\n+        0\n+    };\n+\n+    if let Enum::A = a && let Enum::B = b {\n+        1\n+    } else {\n+        0\n+    };\n+}"}, {"sha": "ebdf86fd185607529a6564951fee9a1ff284e60a", "filename": "tests/ui/bool_to_int_with_if.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/cca9938694eff5a2f4c2731966a9dd8ce4b118e7/tests%2Fui%2Fbool_to_int_with_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cca9938694eff5a2f4c2731966a9dd8ce4b118e7/tests%2Fui%2Fbool_to_int_with_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_to_int_with_if.rs?ref=cca9938694eff5a2f4c2731966a9dd8ce4b118e7", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n \n+#![feature(let_chains)]\n #![warn(clippy::bool_to_int_with_if)]\n #![allow(unused, dead_code, clippy::unnecessary_operation, clippy::no_effect)]\n \n@@ -123,3 +124,22 @@ fn side_effect() {}\n fn cond(a: bool, b: bool) -> bool {\n     a || b\n }\n+\n+enum Enum {\n+    A,\n+    B,\n+}\n+\n+fn if_let(a: Enum, b: Enum) {\n+    if let Enum::A = a {\n+        1\n+    } else {\n+        0\n+    };\n+\n+    if let Enum::A = a && let Enum::B = b {\n+        1\n+    } else {\n+        0\n+    };\n+}"}, {"sha": "5cfb75cc0dfcb2bc92741849e88a96d27cc73a99", "filename": "tests/ui/bool_to_int_with_if.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/cca9938694eff5a2f4c2731966a9dd8ce4b118e7/tests%2Fui%2Fbool_to_int_with_if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cca9938694eff5a2f4c2731966a9dd8ce4b118e7/tests%2Fui%2Fbool_to_int_with_if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_to_int_with_if.stderr?ref=cca9938694eff5a2f4c2731966a9dd8ce4b118e7", "patch": "@@ -1,5 +1,5 @@\n error: boolean to int conversion using if\n-  --> $DIR/bool_to_int_with_if.rs:15:5\n+  --> $DIR/bool_to_int_with_if.rs:16:5\n    |\n LL | /     if a {\n LL | |         1\n@@ -12,7 +12,7 @@ LL | |     };\n    = note: `-D clippy::bool-to-int-with-if` implied by `-D warnings`\n \n error: boolean to int conversion using if\n-  --> $DIR/bool_to_int_with_if.rs:20:5\n+  --> $DIR/bool_to_int_with_if.rs:21:5\n    |\n LL | /     if a {\n LL | |         0\n@@ -24,7 +24,7 @@ LL | |     };\n    = note: `!a as i32` or `(!a).into()` can also be valid options\n \n error: boolean to int conversion using if\n-  --> $DIR/bool_to_int_with_if.rs:25:5\n+  --> $DIR/bool_to_int_with_if.rs:26:5\n    |\n LL | /     if !a {\n LL | |         1\n@@ -36,7 +36,7 @@ LL | |     };\n    = note: `!a as i32` or `(!a).into()` can also be valid options\n \n error: boolean to int conversion using if\n-  --> $DIR/bool_to_int_with_if.rs:30:5\n+  --> $DIR/bool_to_int_with_if.rs:31:5\n    |\n LL | /     if a || b {\n LL | |         1\n@@ -48,7 +48,7 @@ LL | |     };\n    = note: `(a || b) as i32` or `(a || b).into()` can also be valid options\n \n error: boolean to int conversion using if\n-  --> $DIR/bool_to_int_with_if.rs:35:5\n+  --> $DIR/bool_to_int_with_if.rs:36:5\n    |\n LL | /     if cond(a, b) {\n LL | |         1\n@@ -60,7 +60,7 @@ LL | |     };\n    = note: `cond(a, b) as i32` or `cond(a, b).into()` can also be valid options\n \n error: boolean to int conversion using if\n-  --> $DIR/bool_to_int_with_if.rs:40:5\n+  --> $DIR/bool_to_int_with_if.rs:41:5\n    |\n LL | /     if x + y < 4 {\n LL | |         1\n@@ -72,7 +72,7 @@ LL | |     };\n    = note: `(x + y < 4) as i32` or `(x + y < 4).into()` can also be valid options\n \n error: boolean to int conversion using if\n-  --> $DIR/bool_to_int_with_if.rs:49:12\n+  --> $DIR/bool_to_int_with_if.rs:50:12\n    |\n LL |       } else if b {\n    |  ____________^\n@@ -85,7 +85,7 @@ LL | |     };\n    = note: `b as i32` or `b.into()` can also be valid options\n \n error: boolean to int conversion using if\n-  --> $DIR/bool_to_int_with_if.rs:58:12\n+  --> $DIR/bool_to_int_with_if.rs:59:12\n    |\n LL |       } else if b {\n    |  ____________^\n@@ -98,7 +98,7 @@ LL | |     };\n    = note: `!b as i32` or `(!b).into()` can also be valid options\n \n error: boolean to int conversion using if\n-  --> $DIR/bool_to_int_with_if.rs:118:5\n+  --> $DIR/bool_to_int_with_if.rs:119:5\n    |\n LL |     if a { 1 } else { 0 }\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: replace with from: `u8::from(a)`"}]}