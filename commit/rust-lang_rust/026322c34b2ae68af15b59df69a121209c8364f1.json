{"sha": "026322c34b2ae68af15b59df69a121209c8364f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyNjMyMmMzNGIyYWU2OGFmMTViNTlkZjY5YTEyMTIwOWM4MzY0ZjE=", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-08-31T05:11:25Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-08-31T05:15:11Z"}, "message": "fix(rustc_typeck): produce better errors for dyn auto trait\n\nFixes #85026", "tree": {"sha": "9bc22678665e2d4190773040a4909cbc2e7e2418", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bc22678665e2d4190773040a4909cbc2e7e2418"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/026322c34b2ae68af15b59df69a121209c8364f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/026322c34b2ae68af15b59df69a121209c8364f1", "html_url": "https://github.com/rust-lang/rust/commit/026322c34b2ae68af15b59df69a121209c8364f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/026322c34b2ae68af15b59df69a121209c8364f1/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56ea5e0ee948999a916ff5f3d78ed79716d1006b", "url": "https://api.github.com/repos/rust-lang/rust/commits/56ea5e0ee948999a916ff5f3d78ed79716d1006b", "html_url": "https://github.com/rust-lang/rust/commit/56ea5e0ee948999a916ff5f3d78ed79716d1006b"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "45d91c2047d4193857e2d6569b0593d6becd8c03", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/026322c34b2ae68af15b59df69a121209c8364f1/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/026322c34b2ae68af15b59df69a121209c8364f1/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=026322c34b2ae68af15b59df69a121209c8364f1", "patch": "@@ -480,6 +480,7 @@ E0781: include_str!(\"./error_codes/E0781.md\"),\n E0782: include_str!(\"./error_codes/E0782.md\"),\n E0783: include_str!(\"./error_codes/E0783.md\"),\n E0784: include_str!(\"./error_codes/E0784.md\"),\n+E0785: include_str!(\"./error_codes/E0785.md\"),\n ;\n //  E0006, // merged with E0005\n //  E0008, // cannot bind by-move into a pattern guard"}, {"sha": "b8a03cd109d872532bd9088aa8057fcd0e8a1493", "filename": "compiler/rustc_error_codes/src/error_codes/E0785.md", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/026322c34b2ae68af15b59df69a121209c8364f1/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0785.md", "raw_url": "https://github.com/rust-lang/rust/raw/026322c34b2ae68af15b59df69a121209c8364f1/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0785.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0785.md?ref=026322c34b2ae68af15b59df69a121209c8364f1", "patch": "@@ -0,0 +1,30 @@\n+An inherent `impl` was written on a dyn auto trait.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0785\n+#![feature(auto_traits)]\n+\n+auto trait AutoTrait {}\n+\n+impl dyn AutoTrait {}\n+```\n+\n+Dyn objects allow any number of auto traits, plus at most one non-auto trait.\n+The non-auto trait becomes the \"principal trait\".\n+\n+When checking if an impl on a dyn trait is coherent, the principal trait is\n+normally the only one considered. Since the erroneous code has no principal\n+trait, it cannot be implemented at all.\n+\n+Working example:\n+\n+```\n+#![feature(auto_traits)]\n+\n+trait PrincipalTrait {}\n+\n+auto trait AutoTrait {}\n+\n+impl dyn (PrincipalTrait + AutoTrait + Send) {}\n+```"}, {"sha": "05d7dfb9c8ffae49b68bd39849ba7a474d81bec1", "filename": "compiler/rustc_typeck/src/coherence/inherent_impls.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/026322c34b2ae68af15b59df69a121209c8364f1/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/026322c34b2ae68af15b59df69a121209c8364f1/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Finherent_impls.rs?ref=026322c34b2ae68af15b59df69a121209c8364f1", "patch": "@@ -60,6 +60,17 @@ impl ItemLikeVisitor<'v> for InherentCollect<'tcx> {\n             ty::Dynamic(ref data, ..) if data.principal_def_id().is_some() => {\n                 self.check_def_id(item, data.principal_def_id().unwrap());\n             }\n+            ty::Dynamic(..) => {\n+                struct_span_err!(\n+                    self.tcx.sess,\n+                    ty.span,\n+                    E0785,\n+                    \"cannot define inherent `impl` for a dyn auto trait\"\n+                )\n+                .span_label(ty.span, \"impl requires a principal trait\")\n+                .note(\"define and implement a new trait or type instead\")\n+                .emit();\n+            }\n             ty::Bool => {\n                 self.check_primitive_impl(\n                     item.def_id,"}, {"sha": "8b116545aa696e27dd35275c11148d27214d85e2", "filename": "src/test/ui/coherence/issue-85026.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/026322c34b2ae68af15b59df69a121209c8364f1/src%2Ftest%2Fui%2Fcoherence%2Fissue-85026.rs", "raw_url": "https://github.com/rust-lang/rust/raw/026322c34b2ae68af15b59df69a121209c8364f1/src%2Ftest%2Fui%2Fcoherence%2Fissue-85026.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fissue-85026.rs?ref=026322c34b2ae68af15b59df69a121209c8364f1", "patch": "@@ -0,0 +1,10 @@\n+#![feature(auto_traits)]\n+auto trait AutoTrait {}\n+\n+// You cannot impl your own `dyn AutoTrait`.\n+impl dyn AutoTrait {} //~ERROR E0785\n+\n+// You cannot impl someone else's `dyn AutoTrait`\n+impl dyn Unpin {} //~ERROR E0785\n+\n+fn main() {}"}, {"sha": "cf9cd52d2bfdd8b42111ba3f2951e7ac0504f2eb", "filename": "src/test/ui/coherence/issue-85026.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/026322c34b2ae68af15b59df69a121209c8364f1/src%2Ftest%2Fui%2Fcoherence%2Fissue-85026.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/026322c34b2ae68af15b59df69a121209c8364f1/src%2Ftest%2Fui%2Fcoherence%2Fissue-85026.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fissue-85026.stderr?ref=026322c34b2ae68af15b59df69a121209c8364f1", "patch": "@@ -0,0 +1,19 @@\n+error[E0785]: cannot define inherent `impl` for a dyn auto trait\n+  --> $DIR/issue-85026.rs:5:6\n+   |\n+LL | impl dyn AutoTrait {}\n+   |      ^^^^^^^^^^^^^ impl requires a principal trait\n+   |\n+   = note: define and implement a new trait or type instead\n+\n+error[E0785]: cannot define inherent `impl` for a dyn auto trait\n+  --> $DIR/issue-85026.rs:8:6\n+   |\n+LL | impl dyn Unpin {}\n+   |      ^^^^^^^^^ impl requires a principal trait\n+   |\n+   = note: define and implement a new trait or type instead\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0785`."}]}