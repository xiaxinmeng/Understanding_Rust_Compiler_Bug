{"sha": "72f096b6288f00d14a47d7fc1dff7c4939ad2e2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyZjA5NmI2Mjg4ZjAwZDE0YTQ3ZDdmYzFkZmY3YzQ5MzlhZDJlMmE=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-07-12T16:59:56Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-07-12T16:59:56Z"}, "message": "Resolve FIXME(#27942)", "tree": {"sha": "2280e6cf475c4bc9eec71eb88218c0ad97f3d075", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2280e6cf475c4bc9eec71eb88218c0ad97f3d075"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72f096b6288f00d14a47d7fc1dff7c4939ad2e2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72f096b6288f00d14a47d7fc1dff7c4939ad2e2a", "html_url": "https://github.com/rust-lang/rust/commit/72f096b6288f00d14a47d7fc1dff7c4939ad2e2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72f096b6288f00d14a47d7fc1dff7c4939ad2e2a/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d334027c58060449cc45b8e5cc37dd51ca077d30", "url": "https://api.github.com/repos/rust-lang/rust/commits/d334027c58060449cc45b8e5cc37dd51ca077d30", "html_url": "https://github.com/rust-lang/rust/commit/d334027c58060449cc45b8e5cc37dd51ca077d30"}], "stats": {"total": 22, "additions": 1, "deletions": 21}, "files": [{"sha": "c1849c63a7df34486d42a451f270020f146888ce", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/72f096b6288f00d14a47d7fc1dff7c4939ad2e2a/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72f096b6288f00d14a47d7fc1dff7c4939ad2e2a/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=72f096b6288f00d14a47d7fc1dff7c4939ad2e2a", "patch": "@@ -193,32 +193,12 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n \n         let scope = region.free_region_binding_scope(self);\n         let node = self.hir.as_local_node_id(scope).unwrap_or(DUMMY_NODE_ID);\n-        let unknown;\n         let tag = match self.hir.find(node) {\n             Some(hir_map::NodeBlock(_)) | Some(hir_map::NodeExpr(_)) => \"body\",\n             Some(hir_map::NodeItem(it)) => Self::item_scope_tag(&it),\n             Some(hir_map::NodeTraitItem(it)) => Self::trait_item_scope_tag(&it),\n             Some(hir_map::NodeImplItem(it)) => Self::impl_item_scope_tag(&it),\n-\n-            // this really should not happen, but it does:\n-            // FIXME(#27942)\n-            Some(_) => {\n-                unknown = format!(\n-                    \"unexpected node ({}) for scope {:?}.  \\\n-                     Please report a bug.\",\n-                    self.hir.node_to_string(node),\n-                    scope\n-                );\n-                &unknown\n-            }\n-            None => {\n-                unknown = format!(\n-                    \"unknown node for scope {:?}.  \\\n-                     Please report a bug.\",\n-                    scope\n-                );\n-                &unknown\n-            }\n+            _ => unreachable!()\n         };\n         let (prefix, span) = match *region {\n             ty::ReEarlyBound(ref br) => {"}]}