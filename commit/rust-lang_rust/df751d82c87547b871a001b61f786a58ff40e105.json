{"sha": "df751d82c87547b871a001b61f786a58ff40e105", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmNzUxZDgyYzg3NTQ3Yjg3MWEwMDFiNjFmNzg2YTU4ZmY0MGUxMDU=", "commit": {"author": {"name": "DC", "email": "devnexen@gmail.com", "date": "2021-08-14T09:37:07Z"}, "committer": {"name": "DC", "email": "devnexen@gmail.com", "date": "2021-08-14T09:37:07Z"}, "message": "freebsd arm64 add supported sanitizers.", "tree": {"sha": "3df83fea7a2be8d18bcec253455162e94abccefb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3df83fea7a2be8d18bcec253455162e94abccefb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df751d82c87547b871a001b61f786a58ff40e105", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df751d82c87547b871a001b61f786a58ff40e105", "html_url": "https://github.com/rust-lang/rust/commit/df751d82c87547b871a001b61f786a58ff40e105", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df751d82c87547b871a001b61f786a58ff40e105/comments", "author": {"login": "devnexen", "id": 4922778, "node_id": "MDQ6VXNlcjQ5MjI3Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4922778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devnexen", "html_url": "https://github.com/devnexen", "followers_url": "https://api.github.com/users/devnexen/followers", "following_url": "https://api.github.com/users/devnexen/following{/other_user}", "gists_url": "https://api.github.com/users/devnexen/gists{/gist_id}", "starred_url": "https://api.github.com/users/devnexen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devnexen/subscriptions", "organizations_url": "https://api.github.com/users/devnexen/orgs", "repos_url": "https://api.github.com/users/devnexen/repos", "events_url": "https://api.github.com/users/devnexen/events{/privacy}", "received_events_url": "https://api.github.com/users/devnexen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devnexen", "id": 4922778, "node_id": "MDQ6VXNlcjQ5MjI3Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4922778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devnexen", "html_url": "https://github.com/devnexen", "followers_url": "https://api.github.com/users/devnexen/followers", "following_url": "https://api.github.com/users/devnexen/following{/other_user}", "gists_url": "https://api.github.com/users/devnexen/gists{/gist_id}", "starred_url": "https://api.github.com/users/devnexen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devnexen/subscriptions", "organizations_url": "https://api.github.com/users/devnexen/orgs", "repos_url": "https://api.github.com/users/devnexen/repos", "events_url": "https://api.github.com/users/devnexen/events{/privacy}", "received_events_url": "https://api.github.com/users/devnexen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99efc51dae1dbe9d741707a7ddef84c29e654df5", "url": "https://api.github.com/repos/rust-lang/rust/commits/99efc51dae1dbe9d741707a7ddef84c29e654df5", "html_url": "https://github.com/rust-lang/rust/commit/99efc51dae1dbe9d741707a7ddef84c29e654df5"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "0caecd2987bd52e845430949f43f9b466112ed4b", "filename": "compiler/rustc_target/src/spec/aarch64_unknown_freebsd.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/df751d82c87547b871a001b61f786a58ff40e105/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df751d82c87547b871a001b61f786a58ff40e105/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_freebsd.rs?ref=df751d82c87547b871a001b61f786a58ff40e105", "patch": "@@ -1,11 +1,17 @@\n-use crate::spec::{Target, TargetOptions};\n+use crate::spec::{SanitizerSet, Target, TargetOptions};\n \n pub fn target() -> Target {\n     Target {\n         llvm_target: \"aarch64-unknown-freebsd\".to_string(),\n         pointer_width: 64,\n         data_layout: \"e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128\".to_string(),\n         arch: \"aarch64\".to_string(),\n-        options: TargetOptions { max_atomic_width: Some(128), ..super::freebsd_base::opts() },\n+        options: TargetOptions {\n+            max_atomic_width: Some(128),\n+            supported_sanitizers: SanitizerSet::ADDRESS\n+                | SanitizerSet::MEMORY\n+                | SanitizerSet::THREAD,\n+            ..super::freebsd_base::opts()\n+        },\n     }\n }"}]}