{"sha": "58e338a72996edc4b29f4fdada9d5b33c54ad608", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ZTMzOGE3Mjk5NmVkYzRiMjlmNGZkYWRhOWQ1YjMzYzU0YWQ2MDg=", "commit": {"author": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2020-07-13T20:03:26Z"}, "committer": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2020-08-14T09:43:10Z"}, "message": "Print chalk programs in debug output", "tree": {"sha": "8a2a25734dada3284ecc8434ab756c7c7a222e90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a2a25734dada3284ecc8434ab756c7c7a222e90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58e338a72996edc4b29f4fdada9d5b33c54ad608", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58e338a72996edc4b29f4fdada9d5b33c54ad608", "html_url": "https://github.com/rust-lang/rust/commit/58e338a72996edc4b29f4fdada9d5b33c54ad608", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58e338a72996edc4b29f4fdada9d5b33c54ad608/comments", "author": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1f73649a686dc6e6449afc35e0fa6fed00e225d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1f73649a686dc6e6449afc35e0fa6fed00e225d", "html_url": "https://github.com/rust-lang/rust/commit/f1f73649a686dc6e6449afc35e0fa6fed00e225d"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "6a012cd6a35ebdbc93b5d10fb70bfa6e25cc4445", "filename": "crates/hir_ty/src/traits.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/58e338a72996edc4b29f4fdada9d5b33c54ad608/crates%2Fhir_ty%2Fsrc%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58e338a72996edc4b29f4fdada9d5b33c54ad608/crates%2Fhir_ty%2Fsrc%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits.rs?ref=58e338a72996edc4b29f4fdada9d5b33c54ad608", "patch": "@@ -3,7 +3,7 @@ use std::sync::Arc;\n \n use base_db::CrateId;\n use chalk_ir::cast::Cast;\n-use chalk_solve::Solver;\n+use chalk_solve::{logging_db::LoggingRustIrDatabase, Solver};\n use hir_def::{lang_item::LangItemTarget, TraitId};\n \n use crate::{db::HirDatabase, DebruijnIndex, Substs};\n@@ -152,6 +152,9 @@ fn solve(\n     goal: &chalk_ir::UCanonical<chalk_ir::InEnvironment<chalk_ir::Goal<Interner>>>,\n ) -> Option<chalk_solve::Solution<Interner>> {\n     let context = ChalkContext { db, krate };\n+\n+    let logging_db = LoggingRustIrDatabase::new(context);\n+\n     log::debug!(\"solve goal: {:?}\", goal);\n     let mut solver = create_chalk_solver();\n \n@@ -167,7 +170,7 @@ fn solve(\n         remaining > 0\n     };\n     let mut solve = || {\n-        let solution = solver.solve_limited(&context, goal, should_continue);\n+        let solution = solver.solve_limited(&logging_db, goal, should_continue);\n         log::debug!(\"solve({:?}) => {:?}\", goal, solution);\n         solution\n     };\n@@ -176,6 +179,8 @@ fn solve(\n     let solution =\n         if is_chalk_debug() { chalk::tls::set_current_program(db, solve) } else { solve() };\n \n+    log::debug!(\"chalk program:\\n{}\", logging_db);\n+\n     solution\n }\n "}, {"sha": "08c2c9a3e3d4ec1efbab97dd35f7014e5a1e0178", "filename": "crates/hir_ty/src/traits/chalk.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/58e338a72996edc4b29f4fdada9d5b33c54ad608/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58e338a72996edc4b29f4fdada9d5b33c54ad608/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs?ref=58e338a72996edc4b29f4fdada9d5b33c54ad608", "patch": "@@ -240,20 +240,22 @@ impl<'a> chalk_solve::RustIrDatabase<Interner> for ChalkContext<'a> {\n         Substs::empty().to_chalk(self.db)\n     }\n \n-    fn trait_name(&self, _trait_id: chalk_ir::TraitId<Interner>) -> String {\n-        unimplemented!()\n+    fn trait_name(&self, trait_id: chalk_ir::TraitId<Interner>) -> String {\n+        let id = from_chalk(self.db, trait_id);\n+        self.db.trait_data(id).name.to_string()\n     }\n-    fn adt_name(&self, _struct_id: chalk_ir::AdtId<Interner>) -> String {\n-        unimplemented!()\n+    // FIXME: lookup names\n+    fn adt_name(&self, struct_id: chalk_ir::AdtId<Interner>) -> String {\n+        format!(\"Adt_{:?}\", struct_id.0).replace(\"TypeCtorId(\", \"\").replace(\")\", \"\")\n     }\n-    fn assoc_type_name(&self, _assoc_ty_id: chalk_ir::AssocTypeId<Interner>) -> String {\n-        unimplemented!()\n+    fn assoc_type_name(&self, assoc_ty_id: chalk_ir::AssocTypeId<Interner>) -> String {\n+        format!(\"Assoc_{}\", assoc_ty_id.0)\n     }\n-    fn opaque_type_name(&self, _opaque_ty_id: chalk_ir::OpaqueTyId<Interner>) -> String {\n-        unimplemented!()\n+    fn opaque_type_name(&self, opaque_ty_id: chalk_ir::OpaqueTyId<Interner>) -> String {\n+        format!(\"Opaque_{}\", opaque_ty_id.0)\n     }\n-    fn fn_def_name(&self, _fn_def_id: chalk_ir::FnDefId<Interner>) -> String {\n-        unimplemented!()\n+    fn fn_def_name(&self, fn_def_id: chalk_ir::FnDefId<Interner>) -> String {\n+        format!(\"fn_{}\", fn_def_id.0)\n     }\n }\n "}]}