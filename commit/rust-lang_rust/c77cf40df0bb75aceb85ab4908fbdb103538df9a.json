{"sha": "c77cf40df0bb75aceb85ab4908fbdb103538df9a", "node_id": "C_kwDOAAsO6NoAKGM3N2NmNDBkZjBiYjc1YWNlYjg1YWI0OTA4ZmJkYjEwMzUzOGRmOWE", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-02-24T06:32:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-24T06:32:45Z"}, "message": "Rollup merge of #108401 - notriddle:notriddle/diagnostics-article, r=compiler-errors\n\ndiagnostics: remove inconsistent English article \"this\" from E0107\n\nConsider [`tests/ui/const-generics/generic_const_exprs/issue-102768.stderr`][issue-102768.stderr], the error message where it gives additional notes about where the associated type is defined, and how the dead code lint doesn't have an article, like in [`tests/ui/lint/dead-code/issue-85255.stderr`][issue-85255.stderr]. They don't have articles, so it seems unnecessary to have one here.\n\n[issue-102768.stderr]: https://github.com/rust-lang/rust/blob/07c993eba8b76eae497e98433ae075b00f01be10/tests/ui/const-generics/generic_const_exprs/issue-102768.stderr\n[issue-85255.stderr]: https://github.com/rust-lang/rust/blob/07c993eba8b76eae497e98433ae075b00f01be10/tests/ui/lint/dead-code/issue-85255.stderr", "tree": {"sha": "49c2d2c3260c227c8505e60f115981e27183caef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49c2d2c3260c227c8505e60f115981e27183caef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c77cf40df0bb75aceb85ab4908fbdb103538df9a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj+FoNCRBK7hj4Ov3rIwAAoV0IAENPEpeai+DBAyMdpVvmg69v\nUo+DhBK9HmCR2FXIixcANU9+AHYe/Bqus6fhDIeNlL9zOVtooTKhTpwMgZNLbWzX\nJsknr9lHhlXFWZxmq06O4kqGDC80+qm3IvU6QCI90+XSVKsdm5vjlHJkotcDuYzV\nTP/kx2eAIoSbO3T69CgVwjumZTeSfJjnhGmDyYvGurVHgBoJOTWSeCv3Bpy934Sb\nLa+X0M8UzS6J4hLt1wbnja7TV18zu4mfZ2tDeXsbjol0FngKArWwbQCoqAIM8aP8\nj4XF8bb64m6iOEeWY9ib87txSg1NTO/33JM77tLGiAJyjy37SCtQ2CaNKd5Ykbc=\n=6aZW\n-----END PGP SIGNATURE-----\n", "payload": "tree 49c2d2c3260c227c8505e60f115981e27183caef\nparent 353827a044be71ae0ce73c9eba2a361a43cfc61c\nparent 0241e493b1b611d5279e8dddb771492bd04b0236\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1677220365 +0530\ncommitter GitHub <noreply@github.com> 1677220365 +0530\n\nRollup merge of #108401 - notriddle:notriddle/diagnostics-article, r=compiler-errors\n\ndiagnostics: remove inconsistent English article \"this\" from E0107\n\nConsider [`tests/ui/const-generics/generic_const_exprs/issue-102768.stderr`][issue-102768.stderr], the error message where it gives additional notes about where the associated type is defined, and how the dead code lint doesn't have an article, like in [`tests/ui/lint/dead-code/issue-85255.stderr`][issue-85255.stderr]. They don't have articles, so it seems unnecessary to have one here.\n\n[issue-102768.stderr]: https://github.com/rust-lang/rust/blob/07c993eba8b76eae497e98433ae075b00f01be10/tests/ui/const-generics/generic_const_exprs/issue-102768.stderr\n[issue-85255.stderr]: https://github.com/rust-lang/rust/blob/07c993eba8b76eae497e98433ae075b00f01be10/tests/ui/lint/dead-code/issue-85255.stderr\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c77cf40df0bb75aceb85ab4908fbdb103538df9a", "html_url": "https://github.com/rust-lang/rust/commit/c77cf40df0bb75aceb85ab4908fbdb103538df9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c77cf40df0bb75aceb85ab4908fbdb103538df9a/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "353827a044be71ae0ce73c9eba2a361a43cfc61c", "url": "https://api.github.com/repos/rust-lang/rust/commits/353827a044be71ae0ce73c9eba2a361a43cfc61c", "html_url": "https://github.com/rust-lang/rust/commit/353827a044be71ae0ce73c9eba2a361a43cfc61c"}, {"sha": "0241e493b1b611d5279e8dddb771492bd04b0236", "url": "https://api.github.com/repos/rust-lang/rust/commits/0241e493b1b611d5279e8dddb771492bd04b0236", "html_url": "https://github.com/rust-lang/rust/commit/0241e493b1b611d5279e8dddb771492bd04b0236"}], "stats": {"total": 680, "additions": 340, "deletions": 340}, "files": [{"sha": "cae884ae8fb73c47d721305ef985a1f7cf751875", "filename": "compiler/rustc_hir_analysis/src/structured_errors/wrong_number_of_generic_args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -462,7 +462,7 @@ impl<'a, 'tcx> WrongNumberOfGenericArgs<'a, 'tcx> {\n \n         if self.gen_args.span_ext().is_some() {\n             format!(\n-                \"this {} takes {}{} {} argument{} but {} {} supplied\",\n+                \"{} takes {}{} {} argument{} but {} {} supplied\",\n                 def_kind,\n                 quantifier,\n                 bound,"}, {"sha": "72f35cb922445f2c62e358d7b1c178e50843ad89", "filename": "tests/rustdoc-ui/unable-fulfill-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Frustdoc-ui%2Funable-fulfill-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Frustdoc-ui%2Funable-fulfill-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Funable-fulfill-trait.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: trait takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/unable-fulfill-trait.rs:4:17\n    |\n LL |     field1: dyn Bar<'a, 'b,>,"}, {"sha": "2504f616fb7e1924cd75c31d7c39bb46618274b2", "filename": "tests/ui/argument-suggestions/issue-100154.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fargument-suggestions%2Fissue-100154.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fargument-suggestions%2Fissue-100154.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fargument-suggestions%2Fissue-100154.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this function takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: function takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/issue-100154.rs:4:5\n    |\n LL |     foo::<()>(());"}, {"sha": "6e547508bd469dd73f1eb3d27d8370d751198d52", "filename": "tests/ui/async-await/issues/issue-65159.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fasync-await%2Fissues%2Fissue-65159.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fasync-await%2Fissues%2Fissue-65159.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fissues%2Fissue-65159.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -3,7 +3,7 @@\n // edition:2018\n \n async fn copy() -> Result<()>\n-//~^ ERROR this enum takes 2 generic arguments\n+//~^ ERROR enum takes 2 generic arguments\n {\n     Ok(())\n }"}, {"sha": "b8741333c328345f705922684c4a595420b3aa1e", "filename": "tests/ui/async-await/issues/issue-65159.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fasync-await%2Fissues%2Fissue-65159.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fasync-await%2Fissues%2Fissue-65159.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fissues%2Fissue-65159.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this enum takes 2 generic arguments but 1 generic argument was supplied\n+error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied\n   --> $DIR/issue-65159.rs:5:20\n    |\n LL | async fn copy() -> Result<()>"}, {"sha": "d067ff44704c75324c5d3afc637d711d11f2964c", "filename": "tests/ui/borrowck/issue-82126-mismatched-subst-and-hir.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fborrowck%2Fissue-82126-mismatched-subst-and-hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fborrowck%2Fissue-82126-mismatched-subst-and-hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fissue-82126-mismatched-subst-and-hir.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -14,8 +14,8 @@ impl MarketMultiplier {\n }\n \n async fn buy_lock(generator: &Mutex<MarketMultiplier>) -> LockedMarket<'_> {\n-    //~^ ERROR this struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n-    //~^^ ERROR this struct takes 1 generic argument but 0 generic arguments were supplied\n+    //~^ ERROR struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n+    //~^^ ERROR struct takes 1 generic argument but 0 generic arguments were supplied\n     LockedMarket(generator.lock().unwrap().buy())\n }\n "}, {"sha": "73e0aaf1e45cc7beb8b2c412de35fc7230d3f177", "filename": "tests/ui/borrowck/issue-82126-mismatched-subst-and-hir.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fborrowck%2Fissue-82126-mismatched-subst-and-hir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fborrowck%2Fissue-82126-mismatched-subst-and-hir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fissue-82126-mismatched-subst-and-hir.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/issue-82126-mismatched-subst-and-hir.rs:16:59\n    |\n LL | async fn buy_lock(generator: &Mutex<MarketMultiplier>) -> LockedMarket<'_> {\n@@ -12,7 +12,7 @@ note: struct defined here, with 0 lifetime parameters\n LL | struct LockedMarket<T>(T);\n    |        ^^^^^^^^^^^^\n \n-error[E0107]: this struct takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: struct takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/issue-82126-mismatched-subst-and-hir.rs:16:59\n    |\n LL | async fn buy_lock(generator: &Mutex<MarketMultiplier>) -> LockedMarket<'_> {"}, {"sha": "18a9b53cf7681fe52e6abc355d2cbf06b0e969dc", "filename": "tests/ui/const-generics/generic_const_exprs/issue-102768.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-102768.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-102768.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-102768.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -7,8 +7,8 @@ trait X {\n \n const _: () = {\n     fn f2<'a>(arg: Box<dyn X<Y<1> = &'a ()>>) {}\n-    //~^ ERROR this associated type takes 1 lifetime argument but 0 lifetime arguments\n-    //~| ERROR this associated type takes 0 generic arguments but 1 generic argument\n+    //~^ ERROR associated type takes 1 lifetime argument but 0 lifetime arguments\n+    //~| ERROR associated type takes 0 generic arguments but 1 generic argument\n };\n \n fn main() {}"}, {"sha": "175d54e41848b91afa8abad953218d6fe61c5b57", "filename": "tests/ui/const-generics/generic_const_exprs/issue-102768.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-102768.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-102768.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-102768.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this associated type takes 1 lifetime argument but 0 lifetime arguments were supplied\n+error[E0107]: associated type takes 1 lifetime argument but 0 lifetime arguments were supplied\n   --> $DIR/issue-102768.rs:9:30\n    |\n LL |     fn f2<'a>(arg: Box<dyn X<Y<1> = &'a ()>>) {}\n@@ -14,7 +14,7 @@ help: add missing lifetime argument\n LL |     fn f2<'a>(arg: Box<dyn X<Y<'_, 1> = &'a ()>>) {}\n    |                                +++\n \n-error[E0107]: this associated type takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: associated type takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/issue-102768.rs:9:30\n    |\n LL |     fn f2<'a>(arg: Box<dyn X<Y<1> = &'a ()>>) {}"}, {"sha": "302da59651ccbb3d62e2ce41939ebb89614f4111", "filename": "tests/ui/const-generics/generic_const_exprs/issue-76595.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-76595.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-76595.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-76595.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this function takes 2 generic arguments but 1 generic argument was supplied\n+error[E0107]: function takes 2 generic arguments but 1 generic argument was supplied\n   --> $DIR/issue-76595.rs:15:5\n    |\n LL |     test::<2>();"}, {"sha": "01ac4e69a057e35726676f5ecb5009b61c0de478", "filename": "tests/ui/const-generics/incorrect-number-of-const-args.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fincorrect-number-of-const-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fincorrect-number-of-const-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fincorrect-number-of-const-args.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this function takes 2 generic arguments but 1 generic argument was supplied\n+error[E0107]: function takes 2 generic arguments but 1 generic argument was supplied\n   --> $DIR/incorrect-number-of-const-args.rs:6:5\n    |\n LL |     foo::<0>();\n@@ -16,7 +16,7 @@ help: add missing generic argument\n LL |     foo::<0, Y>();\n    |            +++\n \n-error[E0107]: this function takes 2 generic arguments but 3 generic arguments were supplied\n+error[E0107]: function takes 2 generic arguments but 3 generic arguments were supplied\n   --> $DIR/incorrect-number-of-const-args.rs:9:5\n    |\n LL |     foo::<0, 0, 0>();"}, {"sha": "bf10f471dc51cda47a4a4e57efb8a25e236c9e87", "filename": "tests/ui/const-generics/invalid-const-arg-for-type-param.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -4,11 +4,11 @@ struct S;\n \n fn main() {\n     let _: u32 = 5i32.try_into::<32>().unwrap();\n-    //~^ ERROR this method takes\n+    //~^ ERROR method takes\n \n     S.f::<0>();\n     //~^ ERROR no method named `f`\n \n     S::<0>;\n-    //~^ ERROR this struct takes 0\n+    //~^ ERROR struct takes 0\n }"}, {"sha": "4a649d8a7e881f382dcf945dc2382a9a6e30189a", "filename": "tests/ui/const-generics/invalid-const-arg-for-type-param.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this method takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: method takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/invalid-const-arg-for-type-param.rs:6:23\n    |\n LL |     let _: u32 = 5i32.try_into::<32>().unwrap();\n@@ -23,7 +23,7 @@ LL | struct S;\n LL |     S.f::<0>();\n    |       ^ method not found in `S`\n \n-error[E0107]: this struct takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: struct takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/invalid-const-arg-for-type-param.rs:12:5\n    |\n LL |     S::<0>;"}, {"sha": "fd259197d29826180f27a69064d34c602ba58fc3", "filename": "tests/ui/const-generics/invalid-constant-in-args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Finvalid-constant-in-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Finvalid-constant-in-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Finvalid-constant-in-args.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -2,5 +2,5 @@ use std::cell::Cell;\n \n fn main() {\n     let _: Cell<&str, \"a\"> = Cell::new(\"\");\n-    //~^ ERROR this struct takes 1 generic argument but 2 generic arguments were supplied\n+    //~^ ERROR struct takes 1 generic argument but 2 generic arguments were supplied\n }"}, {"sha": "2545cc6f39644bd52db3a27d316b12474766a10a", "filename": "tests/ui/const-generics/invalid-constant-in-args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Finvalid-constant-in-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Finvalid-constant-in-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Finvalid-constant-in-args.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this struct takes 1 generic argument but 2 generic arguments were supplied\n+error[E0107]: struct takes 1 generic argument but 2 generic arguments were supplied\n   --> $DIR/invalid-constant-in-args.rs:4:12\n    |\n LL |     let _: Cell<&str, \"a\"> = Cell::new(\"\");"}, {"sha": "80472e6bd9c52c532eb224b1d2faa069accbe9a0", "filename": "tests/ui/const-generics/issues/issue-87493.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -7,7 +7,7 @@ where\n     S: MyTrait,\n     T: MyTrait<Assoc == S::Assoc>,\n     //~^ ERROR: expected one of `,` or `>`, found `==`\n-    //~| ERROR: this trait takes 0 generic arguments but 1 generic argument was supplied\n+    //~| ERROR: trait takes 0 generic arguments but 1 generic argument was supplied\n {\n }\n "}, {"sha": "73bd6ed73e674d017a0b577b8bb92117dc1ab21d", "filename": "tests/ui/const-generics/issues/issue-87493.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -9,7 +9,7 @@ help: if you meant to use an associated type binding, replace `==` with `=`\n LL |     T: MyTrait<Assoc = S::Assoc>,\n    |                      ~\n \n-error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/issue-87493.rs:8:8\n    |\n LL |     T: MyTrait<Assoc == S::Assoc>,"}, {"sha": "79743abe40935b7bcdb0076f632fbb6c27d164de", "filename": "tests/ui/const-generics/parser-error-recovery/issue-89013-no-kw.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013-no-kw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013-no-kw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013-no-kw.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -7,7 +7,7 @@ struct Bar;\n const T: usize = 42;\n \n impl Foo<N = 3> for Bar {\n-//~^ ERROR this trait takes 1 generic argument but 0 generic arguments were supplied\n+//~^ ERROR trait takes 1 generic argument but 0 generic arguments were supplied\n //~| ERROR associated type bindings are not allowed here\n //~| ERROR associated const equality is incomplete\n     fn do_x(&self) -> [u8; 3] {"}, {"sha": "4f4e1aa3a046ff1ee1106b66fe807126887bba8d", "filename": "tests/ui/const-generics/parser-error-recovery/issue-89013-no-kw.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013-no-kw.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013-no-kw.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013-no-kw.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -7,7 +7,7 @@ LL | impl Foo<N = 3> for Bar {\n    = note: see issue #92827 <https://github.com/rust-lang/rust/issues/92827> for more information\n    = help: add `#![feature(associated_const_equality)]` to the crate attributes to enable\n \n-error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: trait takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/issue-89013-no-kw.rs:9:6\n    |\n LL | impl Foo<N = 3> for Bar {"}, {"sha": "335d0d94e83c5dcad5e21c7d56b729d16aaf13ba", "filename": "tests/ui/const-generics/parser-error-recovery/issue-89013.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -8,7 +8,7 @@ const T: usize = 42;\n \n impl Foo<N = const 3> for Bar {\n //~^ ERROR expected lifetime, type, or constant, found keyword `const`\n-//~| ERROR this trait takes 1 generic\n+//~| ERROR trait takes 1 generic\n //~| ERROR associated type bindings are not allowed here\n //~| ERROR associated const equality is incomplete\n     fn do_x(&self) -> [u8; 3] {"}, {"sha": "3d2b98feb39c0352dca46d6db77b3633b46e0026", "filename": "tests/ui/const-generics/parser-error-recovery/issue-89013.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -19,7 +19,7 @@ LL | impl Foo<N = const 3> for Bar {\n    = note: see issue #92827 <https://github.com/rust-lang/rust/issues/92827> for more information\n    = help: add `#![feature(associated_const_equality)]` to the crate attributes to enable\n \n-error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: trait takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/issue-89013.rs:9:6\n    |\n LL | impl Foo<N = const 3> for Bar {"}, {"sha": "f5802e7d8b11876be46d6634eb4c8e470dcc2f28", "filename": "tests/ui/constructor-lifetime-args.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconstructor-lifetime-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconstructor-lifetime-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconstructor-lifetime-args.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -15,12 +15,12 @@ enum E<'a, 'b> {\n fn main() {\n     S(&0, &0); // OK\n     S::<'static>(&0, &0);\n-    //~^ ERROR this struct takes 2 lifetime arguments\n+    //~^ ERROR struct takes 2 lifetime arguments\n     S::<'static, 'static, 'static>(&0, &0);\n-    //~^ ERROR this struct takes 2 lifetime arguments\n+    //~^ ERROR struct takes 2 lifetime arguments\n     E::V(&0); // OK\n     E::V::<'static>(&0);\n-    //~^ ERROR this enum takes 2 lifetime arguments\n+    //~^ ERROR enum takes 2 lifetime arguments\n     E::V::<'static, 'static, 'static>(&0);\n-    //~^ ERROR this enum takes 2 lifetime arguments\n+    //~^ ERROR enum takes 2 lifetime arguments\n }"}, {"sha": "a18123fe19cbaf71e94c3354c6666a797d37b4dd", "filename": "tests/ui/constructor-lifetime-args.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconstructor-lifetime-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fconstructor-lifetime-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconstructor-lifetime-args.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this struct takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: struct takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/constructor-lifetime-args.rs:17:5\n    |\n LL |     S::<'static>(&0, &0);\n@@ -16,7 +16,7 @@ help: add missing lifetime argument\n LL |     S::<'static, 'static>(&0, &0);\n    |                +++++++++\n \n-error[E0107]: this struct takes 2 lifetime arguments but 3 lifetime arguments were supplied\n+error[E0107]: struct takes 2 lifetime arguments but 3 lifetime arguments were supplied\n   --> $DIR/constructor-lifetime-args.rs:19:5\n    |\n LL |     S::<'static, 'static, 'static>(&0, &0);\n@@ -30,7 +30,7 @@ note: struct defined here, with 2 lifetime parameters: `'a`, `'b`\n LL | struct S<'a, 'b>(&'a u8, &'b u8);\n    |        ^ --  --\n \n-error[E0107]: this enum takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: enum takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/constructor-lifetime-args.rs:22:8\n    |\n LL |     E::V::<'static>(&0);\n@@ -48,7 +48,7 @@ help: add missing lifetime argument\n LL |     E::V::<'static, 'static>(&0);\n    |                   +++++++++\n \n-error[E0107]: this enum takes 2 lifetime arguments but 3 lifetime arguments were supplied\n+error[E0107]: enum takes 2 lifetime arguments but 3 lifetime arguments were supplied\n   --> $DIR/constructor-lifetime-args.rs:24:8\n    |\n LL |     E::V::<'static, 'static, 'static>(&0);"}, {"sha": "fd23e7c00f2bf77d73619ce7eadb443131915bb0", "filename": "tests/ui/error-codes/E0107.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ferror-codes%2FE0107.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ferror-codes%2FE0107.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0107.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -11,39 +11,39 @@ enum Bar {\n \n struct Baz<'a, 'b, 'c> {\n     buzz: Buzz<'a>,\n-    //~^ ERROR this struct takes 2 lifetime arguments\n+    //~^ ERROR struct takes 2 lifetime arguments\n     //~| HELP add missing lifetime argument\n \n     bar: Bar<'a>,\n-    //~^ ERROR this enum takes 0 lifetime arguments\n+    //~^ ERROR enum takes 0 lifetime arguments\n     //~| HELP remove these generics\n \n     foo2: Foo<'a, 'b, 'c>,\n-    //~^ ERROR this struct takes 1 lifetime argument\n+    //~^ ERROR struct takes 1 lifetime argument\n     //~| HELP remove these lifetime arguments\n \n     qux1: Qux<'a, 'b, i32>,\n-    //~^ ERROR this struct takes 1 lifetime argument\n+    //~^ ERROR struct takes 1 lifetime argument\n     //~| HELP remove this lifetime argument\n \n     qux2: Qux<'a, i32, 'b>,\n-    //~^ ERROR this struct takes 1 lifetime argument\n+    //~^ ERROR struct takes 1 lifetime argument\n     //~| HELP remove this lifetime argument\n \n     qux3: Qux<'a, 'b, 'c, i32>,\n-    //~^ ERROR this struct takes 1 lifetime argument\n+    //~^ ERROR struct takes 1 lifetime argument\n     //~| HELP remove these lifetime arguments\n \n     qux4: Qux<'a, i32, 'b, 'c>,\n-    //~^ ERROR this struct takes 1 lifetime argument\n+    //~^ ERROR struct takes 1 lifetime argument\n     //~| HELP remove these lifetime arguments\n \n     qux5: Qux<'a, 'b, i32, 'c>,\n-    //~^ ERROR this struct takes 1 lifetime argument\n+    //~^ ERROR struct takes 1 lifetime argument\n     //~| HELP remove this lifetime argument\n \n     quux: Quux<'a, i32, 'b>,\n-    //~^ ERROR this struct takes 0 lifetime arguments\n+    //~^ ERROR struct takes 0 lifetime arguments\n     //~| HELP remove this lifetime argument\n }\n \n@@ -53,7 +53,7 @@ pub trait T {\n }\n \n fn trait_bound_generic<I: T<u8, u16>>(_i: I) {\n-    //~^ ERROR this trait takes 0 generic arguments\n+    //~^ ERROR trait takes 0 generic arguments\n     //~| HELP replace the generic bounds with the associated types\n }\n "}, {"sha": "3f540eb08bc7ccc5fad4381df494cb080ce7bffd", "filename": "tests/ui/error-codes/E0107.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ferror-codes%2FE0107.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ferror-codes%2FE0107.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0107.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this struct takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: struct takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/E0107.rs:13:11\n    |\n LL |     buzz: Buzz<'a>,\n@@ -16,7 +16,7 @@ help: add missing lifetime argument\n LL |     buzz: Buzz<'a, 'a>,\n    |                  ++++\n \n-error[E0107]: this enum takes 0 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: enum takes 0 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/E0107.rs:17:10\n    |\n LL |     bar: Bar<'a>,\n@@ -30,7 +30,7 @@ note: enum defined here, with 0 lifetime parameters\n LL | enum Bar {\n    |      ^^^\n \n-error[E0107]: this struct takes 1 lifetime argument but 3 lifetime arguments were supplied\n+error[E0107]: struct takes 1 lifetime argument but 3 lifetime arguments were supplied\n   --> $DIR/E0107.rs:21:11\n    |\n LL |     foo2: Foo<'a, 'b, 'c>,\n@@ -44,7 +44,7 @@ note: struct defined here, with 1 lifetime parameter: `'a`\n LL | struct Foo<'a>(&'a str);\n    |        ^^^ --\n \n-error[E0107]: this struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n+error[E0107]: struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n   --> $DIR/E0107.rs:25:11\n    |\n LL |     qux1: Qux<'a, 'b, i32>,\n@@ -58,7 +58,7 @@ note: struct defined here, with 1 lifetime parameter: `'a`\n LL | struct Qux<'a, T>(&'a T);\n    |        ^^^ --\n \n-error[E0107]: this struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n+error[E0107]: struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n   --> $DIR/E0107.rs:29:11\n    |\n LL |     qux2: Qux<'a, i32, 'b>,\n@@ -72,7 +72,7 @@ note: struct defined here, with 1 lifetime parameter: `'a`\n LL | struct Qux<'a, T>(&'a T);\n    |        ^^^ --\n \n-error[E0107]: this struct takes 1 lifetime argument but 3 lifetime arguments were supplied\n+error[E0107]: struct takes 1 lifetime argument but 3 lifetime arguments were supplied\n   --> $DIR/E0107.rs:33:11\n    |\n LL |     qux3: Qux<'a, 'b, 'c, i32>,\n@@ -86,7 +86,7 @@ note: struct defined here, with 1 lifetime parameter: `'a`\n LL | struct Qux<'a, T>(&'a T);\n    |        ^^^ --\n \n-error[E0107]: this struct takes 1 lifetime argument but 3 lifetime arguments were supplied\n+error[E0107]: struct takes 1 lifetime argument but 3 lifetime arguments were supplied\n   --> $DIR/E0107.rs:37:11\n    |\n LL |     qux4: Qux<'a, i32, 'b, 'c>,\n@@ -100,7 +100,7 @@ note: struct defined here, with 1 lifetime parameter: `'a`\n LL | struct Qux<'a, T>(&'a T);\n    |        ^^^ --\n \n-error[E0107]: this struct takes 1 lifetime argument but 3 lifetime arguments were supplied\n+error[E0107]: struct takes 1 lifetime argument but 3 lifetime arguments were supplied\n   --> $DIR/E0107.rs:41:11\n    |\n LL |     qux5: Qux<'a, 'b, i32, 'c>,\n@@ -114,7 +114,7 @@ note: struct defined here, with 1 lifetime parameter: `'a`\n LL | struct Qux<'a, T>(&'a T);\n    |        ^^^ --\n \n-error[E0107]: this struct takes 0 lifetime arguments but 2 lifetime arguments were supplied\n+error[E0107]: struct takes 0 lifetime arguments but 2 lifetime arguments were supplied\n   --> $DIR/E0107.rs:45:11\n    |\n LL |     quux: Quux<'a, i32, 'b>,\n@@ -128,7 +128,7 @@ note: struct defined here, with 0 lifetime parameters\n LL | struct Quux<T>(T);\n    |        ^^^^\n \n-error[E0107]: this trait takes 0 generic arguments but 2 generic arguments were supplied\n+error[E0107]: trait takes 0 generic arguments but 2 generic arguments were supplied\n   --> $DIR/E0107.rs:55:27\n    |\n LL | fn trait_bound_generic<I: T<u8, u16>>(_i: I) {"}, {"sha": "5738dfa83eeabb1b610674094062559eca2d3e11", "filename": "tests/ui/generic-associated-types/gat-trait-path-parenthesised-args.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fgat-trait-path-parenthesised-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fgat-trait-path-parenthesised-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fgat-trait-path-parenthesised-args.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -5,12 +5,12 @@ trait X {\n fn foo<'a>(arg: Box<dyn X<Y('a) = &'a ()>>) {}\n   //~^ ERROR: lifetime in trait object type must be followed by `+`\n   //~| ERROR: parenthesized generic arguments cannot be used\n-  //~| ERROR this associated type takes 0 generic arguments but 1 generic argument\n-  //~| ERROR this associated type takes 1 lifetime argument but 0 lifetime arguments\n+  //~| ERROR associated type takes 0 generic arguments but 1 generic argument\n+  //~| ERROR associated type takes 1 lifetime argument but 0 lifetime arguments\n \n \n fn bar<'a>(arg: Box<dyn X<Y() = ()>>) {}\n   //~^ ERROR: parenthesized generic arguments cannot be used\n-  //~| ERROR this associated type takes 1 lifetime argument but 0 lifetime arguments\n+  //~| ERROR associated type takes 1 lifetime argument but 0 lifetime arguments\n \n fn main() {}"}, {"sha": "461853379b5625182071259ff89d92ea9124cb58", "filename": "tests/ui/generic-associated-types/gat-trait-path-parenthesised-args.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fgat-trait-path-parenthesised-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fgat-trait-path-parenthesised-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fgat-trait-path-parenthesised-args.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -23,7 +23,7 @@ LL | fn bar<'a>(arg: Box<dyn X<Y() = ()>>) {}\n    |                            |\n    |                            help: remove these parentheses\n \n-error[E0107]: this associated type takes 1 lifetime argument but 0 lifetime arguments were supplied\n+error[E0107]: associated type takes 1 lifetime argument but 0 lifetime arguments were supplied\n   --> $DIR/gat-trait-path-parenthesised-args.rs:5:27\n    |\n LL | fn foo<'a>(arg: Box<dyn X<Y('a) = &'a ()>>) {}\n@@ -39,7 +39,7 @@ help: add missing lifetime argument\n LL | fn foo<'a>(arg: Box<dyn X<Y('_, 'a) = &'a ()>>) {}\n    |                             +++\n \n-error[E0107]: this associated type takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: associated type takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/gat-trait-path-parenthesised-args.rs:5:27\n    |\n LL | fn foo<'a>(arg: Box<dyn X<Y('a) = &'a ()>>) {}\n@@ -53,7 +53,7 @@ note: associated type defined here, with 0 generic parameters\n LL |   type Y<'a>;\n    |        ^\n \n-error[E0107]: this associated type takes 1 lifetime argument but 0 lifetime arguments were supplied\n+error[E0107]: associated type takes 1 lifetime argument but 0 lifetime arguments were supplied\n   --> $DIR/gat-trait-path-parenthesised-args.rs:12:27\n    |\n LL | fn bar<'a>(arg: Box<dyn X<Y() = ()>>) {}"}, {"sha": "331511ba61a489914b5d93fb0bf69be114163397", "filename": "tests/ui/generic-associated-types/missing_lifetime_args.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fmissing_lifetime_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fmissing_lifetime_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fmissing_lifetime_args.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -12,9 +12,9 @@ fn foo<'c, 'd>(_arg: Box<dyn X<Y = (&'c u32, &'d u32)>>) {}\n //~^ ERROR missing generics for associated type\n \n fn bar<'a, 'b, 'c>(_arg: Foo<'a, 'b>) {}\n-//~^ ERROR this struct takes 3 lifetime arguments but 2 lifetime\n+//~^ ERROR struct takes 3 lifetime arguments but 2 lifetime\n \n fn f<'a>(_arg: Foo<'a>) {}\n-//~^ ERROR this struct takes 3 lifetime arguments but 1 lifetime\n+//~^ ERROR struct takes 3 lifetime arguments but 1 lifetime\n \n fn main() {}"}, {"sha": "1a7a2e787a1a9101fb67d47a9290a723cbaf6995", "filename": "tests/ui/generic-associated-types/missing_lifetime_args.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fmissing_lifetime_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fmissing_lifetime_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fmissing_lifetime_args.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -14,7 +14,7 @@ help: add missing lifetime arguments\n LL | fn foo<'c, 'd>(_arg: Box<dyn X<Y<'_, '_> = (&'c u32, &'d u32)>>) {}\n    |                                 ++++++++\n \n-error[E0107]: this struct takes 3 lifetime arguments but 2 lifetime arguments were supplied\n+error[E0107]: struct takes 3 lifetime arguments but 2 lifetime arguments were supplied\n   --> $DIR/missing_lifetime_args.rs:14:26\n    |\n LL | fn bar<'a, 'b, 'c>(_arg: Foo<'a, 'b>) {}\n@@ -32,7 +32,7 @@ help: add missing lifetime argument\n LL | fn bar<'a, 'b, 'c>(_arg: Foo<'a, 'b, 'a>) {}\n    |                                    ++++\n \n-error[E0107]: this struct takes 3 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: struct takes 3 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/missing_lifetime_args.rs:17:16\n    |\n LL | fn f<'a>(_arg: Foo<'a>) {}"}, {"sha": "6e395dfdec1fa59108bef24496a02e07228da6a6", "filename": "tests/ui/generic-associated-types/missing_lifetime_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fmissing_lifetime_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fmissing_lifetime_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fmissing_lifetime_const.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -4,7 +4,7 @@ trait Foo {\n \n fn foo<T: Foo>() {\n     let _: <T as Foo>::Assoc<3>;\n-      //~^ ERROR  this associated type\n+      //~^ ERROR  associated type\n }\n \n fn main() {}"}, {"sha": "41945aabfb58c47d6c367dfd01c0920ea05a26bb", "filename": "tests/ui/generic-associated-types/missing_lifetime_const.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fmissing_lifetime_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fmissing_lifetime_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fmissing_lifetime_const.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this associated type takes 1 lifetime argument but 0 lifetime arguments were supplied\n+error[E0107]: associated type takes 1 lifetime argument but 0 lifetime arguments were supplied\n   --> $DIR/missing_lifetime_const.rs:6:24\n    |\n LL |     let _: <T as Foo>::Assoc<3>;"}, {"sha": "ae2f7c00ea4196c334603c17e2117f5822000a17", "filename": "tests/ui/generic-associated-types/parameter_number_and_kind.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fparameter_number_and_kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fparameter_number_and_kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fparameter_number_and_kind.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -9,10 +9,10 @@ trait Foo {\n     // Test parameters in default values\n     type FOk<T> = Self::E<'static, T>;\n     type FErr1 = Self::E<'static, 'static>;\n-    //~^ ERROR this associated type takes 1 lifetime argument but 2 lifetime arguments were supplied\n-    //~| ERROR this associated type takes 1\n+    //~^ ERROR associated type takes 1 lifetime argument but 2 lifetime arguments were supplied\n+    //~| ERROR associated type takes 1\n     type FErr2<T> = Self::E<'static, T, u32>;\n-    //~^ ERROR this associated type takes 1\n+    //~^ ERROR associated type takes 1\n }\n \n fn main() {}"}, {"sha": "4523044b5886bb98e3f03d37d3e9f729d543b176", "filename": "tests/ui/generic-associated-types/parameter_number_and_kind.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fparameter_number_and_kind.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fparameter_number_and_kind.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fparameter_number_and_kind.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this associated type takes 1 lifetime argument but 2 lifetime arguments were supplied\n+error[E0107]: associated type takes 1 lifetime argument but 2 lifetime arguments were supplied\n   --> $DIR/parameter_number_and_kind.rs:11:24\n    |\n LL |     type FErr1 = Self::E<'static, 'static>;\n@@ -12,7 +12,7 @@ note: associated type defined here, with 1 lifetime parameter: `'a`\n LL |     type E<'a, T>;\n    |          ^ --\n \n-error[E0107]: this associated type takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: associated type takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/parameter_number_and_kind.rs:11:24\n    |\n LL |     type FErr1 = Self::E<'static, 'static>;\n@@ -28,7 +28,7 @@ help: add missing generic argument\n LL |     type FErr1 = Self::E<'static, 'static, T>;\n    |                                          +++\n \n-error[E0107]: this associated type takes 1 generic argument but 2 generic arguments were supplied\n+error[E0107]: associated type takes 1 generic argument but 2 generic arguments were supplied\n   --> $DIR/parameter_number_and_kind.rs:14:27\n    |\n LL |     type FErr2<T> = Self::E<'static, T, u32>;"}, {"sha": "c58f9cf1dfc8e837993dcefb97b37ebfa788f4c0", "filename": "tests/ui/generic-associated-types/parse/trait-path-type-error-once-implemented.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-type-error-once-implemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-type-error-once-implemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-type-error-once-implemented.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -4,8 +4,8 @@ trait X {\n \n const _: () = {\n   fn f2<'a>(arg : Box<dyn X<Y<1> = &'a ()>>) {}\n-      //~^ ERROR this associated type takes 1 lifetime argument but 0 lifetime arguments\n-      //~| ERROR this associated type takes 0 generic arguments but 1 generic argument\n+      //~^ ERROR associated type takes 1 lifetime argument but 0 lifetime arguments\n+      //~| ERROR associated type takes 0 generic arguments but 1 generic argument\n };\n \n fn main() {}"}, {"sha": "fab5b474d92830233e48bd8a6f401117898e3b74", "filename": "tests/ui/generic-associated-types/parse/trait-path-type-error-once-implemented.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-type-error-once-implemented.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-type-error-once-implemented.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fparse%2Ftrait-path-type-error-once-implemented.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this associated type takes 1 lifetime argument but 0 lifetime arguments were supplied\n+error[E0107]: associated type takes 1 lifetime argument but 0 lifetime arguments were supplied\n   --> $DIR/trait-path-type-error-once-implemented.rs:6:29\n    |\n LL |   fn f2<'a>(arg : Box<dyn X<Y<1> = &'a ()>>) {}\n@@ -14,7 +14,7 @@ help: add missing lifetime argument\n LL |   fn f2<'a>(arg : Box<dyn X<Y<'_, 1> = &'a ()>>) {}\n    |                               +++\n \n-error[E0107]: this associated type takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: associated type takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/trait-path-type-error-once-implemented.rs:6:29\n    |\n LL |   fn f2<'a>(arg : Box<dyn X<Y<1> = &'a ()>>) {}"}, {"sha": "37d484cba0bd73855af7e8025862811ecb71bac9", "filename": "tests/ui/generics/bad-mid-path-type-params.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fbad-mid-path-type-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fbad-mid-path-type-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerics%2Fbad-mid-path-type-params.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -28,17 +28,17 @@ impl Trait<isize> for S2 {\n \n fn foo<'a>() {\n     let _ = S::new::<isize,f64>(1, 1.0);\n-    //~^ ERROR this associated function takes 1\n+    //~^ ERROR associated function takes 1\n \n     let _ = S::<'a,isize>::new::<f64>(1, 1.0);\n-    //~^ ERROR this struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n+    //~^ ERROR struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n \n     let _: S2 = Trait::new::<isize,f64>(1, 1.0);\n-    //~^ ERROR this associated function takes 1\n+    //~^ ERROR associated function takes 1\n \n     let _: S2 = Trait::<'a,isize>::new::<f64,f64>(1, 1.0);\n-    //~^ ERROR this trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n-    //~| ERROR this associated function takes 1\n+    //~^ ERROR trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n+    //~| ERROR associated function takes 1\n }\n \n fn main() {}"}, {"sha": "71e15dd4c92642502fb3867129917aa538148c53", "filename": "tests/ui/generics/bad-mid-path-type-params.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fbad-mid-path-type-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fbad-mid-path-type-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerics%2Fbad-mid-path-type-params.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this associated function takes 1 generic argument but 2 generic arguments were supplied\n+error[E0107]: associated function takes 1 generic argument but 2 generic arguments were supplied\n   --> $DIR/bad-mid-path-type-params.rs:30:16\n    |\n LL |     let _ = S::new::<isize,f64>(1, 1.0);\n@@ -12,7 +12,7 @@ note: associated function defined here, with 1 generic parameter: `U`\n LL |     fn new<U>(x: T, _: U) -> S<T> {\n    |        ^^^ -\n \n-error[E0107]: this struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/bad-mid-path-type-params.rs:33:13\n    |\n LL |     let _ = S::<'a,isize>::new::<f64>(1, 1.0);\n@@ -26,7 +26,7 @@ note: struct defined here, with 0 lifetime parameters\n LL | struct S<T> {\n    |        ^\n \n-error[E0107]: this associated function takes 1 generic argument but 2 generic arguments were supplied\n+error[E0107]: associated function takes 1 generic argument but 2 generic arguments were supplied\n   --> $DIR/bad-mid-path-type-params.rs:36:24\n    |\n LL |     let _: S2 = Trait::new::<isize,f64>(1, 1.0);\n@@ -40,7 +40,7 @@ note: associated function defined here, with 1 generic parameter: `U`\n LL |     fn new<U>(x: T, y: U) -> Self;\n    |        ^^^ -\n \n-error[E0107]: this trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/bad-mid-path-type-params.rs:39:17\n    |\n LL |     let _: S2 = Trait::<'a,isize>::new::<f64,f64>(1, 1.0);\n@@ -54,7 +54,7 @@ note: trait defined here, with 0 lifetime parameters\n LL | trait Trait<T> {\n    |       ^^^^^\n \n-error[E0107]: this associated function takes 1 generic argument but 2 generic arguments were supplied\n+error[E0107]: associated function takes 1 generic argument but 2 generic arguments were supplied\n   --> $DIR/bad-mid-path-type-params.rs:39:36\n    |\n LL |     let _: S2 = Trait::<'a,isize>::new::<f64,f64>(1, 1.0);"}, {"sha": "947f33414dbb9f459ee12223ba8708ce5178c91e", "filename": "tests/ui/generics/generic-arg-mismatch-recover.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fgeneric-arg-mismatch-recover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fgeneric-arg-mismatch-recover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerics%2Fgeneric-arg-mismatch-recover.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -4,9 +4,9 @@ struct Bar<'a>(&'a ());\n \n fn main() {\n     Foo::<'static, 'static, ()>(&0);\n-    //~^ ERROR this struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n+    //~^ ERROR struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n \n     Bar::<'static, 'static, ()>(&());\n-    //~^ ERROR this struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n-    //~| ERROR this struct takes 0\n+    //~^ ERROR struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n+    //~| ERROR struct takes 0\n }"}, {"sha": "f549a7180fc6634c9b80d335c8820b09d99e189d", "filename": "tests/ui/generics/generic-arg-mismatch-recover.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fgeneric-arg-mismatch-recover.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fgeneric-arg-mismatch-recover.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerics%2Fgeneric-arg-mismatch-recover.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n+error[E0107]: struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n   --> $DIR/generic-arg-mismatch-recover.rs:6:5\n    |\n LL |     Foo::<'static, 'static, ()>(&0);\n@@ -12,7 +12,7 @@ note: struct defined here, with 1 lifetime parameter: `'a`\n LL | struct Foo<'a, T: 'a>(&'a T);\n    |        ^^^ --\n \n-error[E0107]: this struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n+error[E0107]: struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n   --> $DIR/generic-arg-mismatch-recover.rs:9:5\n    |\n LL |     Bar::<'static, 'static, ()>(&());\n@@ -26,7 +26,7 @@ note: struct defined here, with 1 lifetime parameter: `'a`\n LL | struct Bar<'a>(&'a ());\n    |        ^^^ --\n \n-error[E0107]: this struct takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: struct takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/generic-arg-mismatch-recover.rs:9:5\n    |\n LL |     Bar::<'static, 'static, ()>(&());"}, {"sha": "6c00411561e3270c3151077e29f02984b3c2255f", "filename": "tests/ui/generics/generic-impl-less-params-with-defaults.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fgeneric-impl-less-params-with-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fgeneric-impl-less-params-with-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerics%2Fgeneric-impl-less-params-with-defaults.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -9,5 +9,5 @@ impl<A, B, C> Foo<A, B, C> {\n \n fn main() {\n     Foo::<isize>::new();\n-    //~^ ERROR this struct takes at least 2 generic arguments but 1 generic argument\n+    //~^ ERROR struct takes at least 2 generic arguments but 1 generic argument\n }"}, {"sha": "262561fa81e6c750a3775da35c9e27ee22a509aa", "filename": "tests/ui/generics/generic-impl-less-params-with-defaults.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fgeneric-impl-less-params-with-defaults.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fgeneric-impl-less-params-with-defaults.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerics%2Fgeneric-impl-less-params-with-defaults.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this struct takes at least 2 generic arguments but 1 generic argument was supplied\n+error[E0107]: struct takes at least 2 generic arguments but 1 generic argument was supplied\n   --> $DIR/generic-impl-less-params-with-defaults.rs:11:5\n    |\n LL |     Foo::<isize>::new();"}, {"sha": "be633ec464f8b56e475fcf3743cc2f559112ccae", "filename": "tests/ui/generics/generic-impl-more-params-with-defaults.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fgeneric-impl-more-params-with-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fgeneric-impl-more-params-with-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerics%2Fgeneric-impl-more-params-with-defaults.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -11,5 +11,5 @@ impl<T, A> Vec<T, A> {\n \n fn main() {\n     Vec::<isize, Heap, bool>::new();\n-    //~^ ERROR this struct takes at most 2 generic arguments but 3 generic arguments were supplied\n+    //~^ ERROR struct takes at most 2 generic arguments but 3 generic arguments were supplied\n }"}, {"sha": "2f4682c4e5a97048bf6003a74b4d95b7c9585a6d", "filename": "tests/ui/generics/generic-impl-more-params-with-defaults.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fgeneric-impl-more-params-with-defaults.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fgeneric-impl-more-params-with-defaults.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerics%2Fgeneric-impl-more-params-with-defaults.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this struct takes at most 2 generic arguments but 3 generic arguments were supplied\n+error[E0107]: struct takes at most 2 generic arguments but 3 generic arguments were supplied\n   --> $DIR/generic-impl-more-params-with-defaults.rs:13:5\n    |\n LL |     Vec::<isize, Heap, bool>::new();"}, {"sha": "b83fdb5c455a71ad37b9dfc48844bf7193d216cb", "filename": "tests/ui/generics/generic-type-more-params-with-defaults.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fgeneric-type-more-params-with-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fgeneric-type-more-params-with-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerics%2Fgeneric-type-more-params-with-defaults.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -7,5 +7,5 @@ struct Vec<T, A = Heap>(\n \n fn main() {\n     let _: Vec<isize, Heap, bool>;\n-    //~^ ERROR this struct takes at most 2 generic arguments but 3 generic arguments\n+    //~^ ERROR struct takes at most 2 generic arguments but 3 generic arguments\n }"}, {"sha": "4d01ba1f453d8d9bc4385099bb99ee432dc429aa", "filename": "tests/ui/generics/generic-type-more-params-with-defaults.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fgeneric-type-more-params-with-defaults.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fgeneric-type-more-params-with-defaults.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerics%2Fgeneric-type-more-params-with-defaults.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this struct takes at most 2 generic arguments but 3 generic arguments were supplied\n+error[E0107]: struct takes at most 2 generic arguments but 3 generic arguments were supplied\n   --> $DIR/generic-type-more-params-with-defaults.rs:9:12\n    |\n LL |     let _: Vec<isize, Heap, bool>;"}, {"sha": "e4eaff21af1dae276be3b87121c43d75f092b4c3", "filename": "tests/ui/generics/wrong-number-of-args.rs", "status": "modified", "additions": 53, "deletions": 53, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fwrong-number-of-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fwrong-number-of-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerics%2Fwrong-number-of-args.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -4,18 +4,18 @@ mod no_generics {\n     type A = Ty;\n \n     type B = Ty<'static>;\n-    //~^ ERROR this struct takes 0 lifetime arguments but 1 lifetime argument\n+    //~^ ERROR struct takes 0 lifetime arguments but 1 lifetime argument\n     //~| HELP remove these generics\n \n     type C = Ty<'static, usize>;\n-    //~^ ERROR this struct takes 0 lifetime arguments but 1 lifetime argument\n-    //~| ERROR this struct takes 0 generic arguments but 1 generic argument\n+    //~^ ERROR struct takes 0 lifetime arguments but 1 lifetime argument\n+    //~| ERROR struct takes 0 generic arguments but 1 generic argument\n     //~| HELP remove this lifetime argument\n     //~| HELP remove this generic argument\n \n     type D = Ty<'static, usize, { 0 }>;\n-    //~^ ERROR this struct takes 0 lifetime arguments but 1 lifetime argument\n-    //~| ERROR this struct takes 0 generic arguments but 2 generic arguments\n+    //~^ ERROR struct takes 0 lifetime arguments but 1 lifetime argument\n+    //~| ERROR struct takes 0 generic arguments but 2 generic arguments\n     //~| HELP remove this lifetime argument\n     //~| HELP remove these generic arguments\n }\n@@ -28,17 +28,17 @@ mod type_and_type {\n     //~| HELP add missing\n \n     type B = Ty<usize>;\n-    //~^ ERROR this struct takes 2 generic arguments but 1 generic argument\n+    //~^ ERROR struct takes 2 generic arguments but 1 generic argument\n     //~| HELP add missing\n \n     type C = Ty<usize, String>;\n \n     type D = Ty<usize, String, char>;\n-    //~^ ERROR this struct takes 2 generic arguments but 3 generic arguments\n+    //~^ ERROR struct takes 2 generic arguments but 3 generic arguments\n     //~| HELP remove this\n \n     type E = Ty<>;\n-    //~^ ERROR this struct takes 2 generic arguments but 0 generic arguments were supplied\n+    //~^ ERROR struct takes 2 generic arguments but 0 generic arguments were supplied\n     //~| HELP add missing\n }\n \n@@ -52,7 +52,7 @@ mod lifetime_and_type {\n     //~| HELP consider introducing\n \n     type B = Ty<'static>;\n-    //~^ ERROR this struct takes 1 generic argument but 0 generic arguments\n+    //~^ ERROR struct takes 1 generic argument but 0 generic arguments\n     //~| HELP add missing\n \n     type C = Ty<usize>;\n@@ -62,14 +62,14 @@ mod lifetime_and_type {\n     type D = Ty<'static, usize>;\n \n     type E = Ty<>;\n-    //~^ ERROR this struct takes 1 generic argument but 0 generic arguments\n+    //~^ ERROR struct takes 1 generic argument but 0 generic arguments\n     //~| ERROR missing lifetime specifier\n     //~| HELP consider introducing\n     //~| HELP add missing\n \n     type F = Ty<'static, usize, 'static, usize>;\n-    //~^ ERROR this struct takes 1 lifetime argument but 2 lifetime arguments\n-    //~| ERROR this struct takes 1 generic argument but 2 generic arguments\n+    //~^ ERROR struct takes 1 lifetime argument but 2 lifetime arguments\n+    //~| ERROR struct takes 1 generic argument but 2 generic arguments\n     //~| HELP remove this lifetime argument\n     //~| HELP remove this generic argument\n }\n@@ -82,19 +82,19 @@ mod type_and_type_and_type {\n     //~| HELP add missing\n \n     type B = Ty<usize>;\n-    //~^ ERROR this struct takes at least 2\n+    //~^ ERROR struct takes at least 2\n     //~| HELP add missing\n \n     type C = Ty<usize, String>;\n \n     type D = Ty<usize, String, char>;\n \n     type E = Ty<usize, String, char, f64>;\n-    //~^ ERROR this struct takes at most 3\n+    //~^ ERROR struct takes at most 3\n     //~| HELP remove\n \n     type F = Ty<>;\n-    //~^ ERROR this struct takes at least 2 generic arguments but 0 generic arguments\n+    //~^ ERROR struct takes at least 2 generic arguments but 0 generic arguments\n     //~| HELP add missing\n }\n \n@@ -114,7 +114,7 @@ mod r#trait {\n     }\n \n     type A = Box<dyn NonGeneric<usize>>;\n-    //~^ ERROR this trait takes 0 generic arguments but 1 generic argument\n+    //~^ ERROR trait takes 0 generic arguments but 1 generic argument\n     //~| HELP remove\n \n     type B = Box<dyn GenericLifetime>;\n@@ -123,15 +123,15 @@ mod r#trait {\n     //~| HELP consider making the bound lifetime-generic\n \n     type C = Box<dyn GenericLifetime<'static, 'static>>;\n-    //~^ ERROR this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n+    //~^ ERROR trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n     //~| HELP remove\n \n     type D = Box<dyn GenericType>;\n     //~^ ERROR missing generics for trait `GenericType`\n     //~| HELP add missing\n \n     type E = Box<dyn GenericType<String, usize>>;\n-    //~^ ERROR this trait takes 1 generic argument but 2 generic arguments\n+    //~^ ERROR trait takes 1 generic argument but 2 generic arguments\n     //~| HELP remove\n \n     type F = Box<dyn GenericLifetime<>>;\n@@ -140,7 +140,7 @@ mod r#trait {\n     //~| HELP consider making the bound lifetime-generic\n \n     type G = Box<dyn GenericType<>>;\n-    //~^ ERROR this trait takes 1 generic argument but 0 generic arguments\n+    //~^ ERROR trait takes 1 generic argument but 0 generic arguments\n     //~| HELP add missing\n }\n \n@@ -151,7 +151,7 @@ mod associated_item {\n         }\n \n         type A = Box<dyn NonGenericAT<usize, AssocTy=()>>;\n-        //~^ ERROR this trait takes 0 generic arguments but 1 generic argument\n+        //~^ ERROR trait takes 0 generic arguments but 1 generic argument\n         //~| HELP remove\n     }\n \n@@ -166,14 +166,14 @@ mod associated_item {\n         //~| HELP consider making the bound lifetime-generic\n \n         type B = Box<dyn GenericLifetimeAT<'static, 'static, AssocTy=()>>;\n-        //~^ ERROR this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n+        //~^ ERROR trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n         //~| HELP remove\n \n         type C = Box<dyn GenericLifetimeAT<(), AssocTy=()>>;\n         //~^ ERROR missing lifetime specifier\n         //~| HELP consider introducing\n         //~| HELP consider making the bound lifetime-generic\n-        //~| ERROR this trait takes 0 generic arguments but 1 generic argument\n+        //~| ERROR trait takes 0 generic arguments but 1 generic argument\n         //~| HELP remove\n     }\n \n@@ -183,17 +183,17 @@ mod associated_item {\n         }\n \n         type A = Box<dyn GenericTypeAT<AssocTy=()>>;\n-        //~^ ERROR this trait takes 1 generic argument but 0 generic arguments\n+        //~^ ERROR trait takes 1 generic argument but 0 generic arguments\n         //~| HELP add missing\n \n         type B = Box<dyn GenericTypeAT<(), (), AssocTy=()>>;\n-        //~^ ERROR this trait takes 1 generic argument but 2 generic arguments\n+        //~^ ERROR trait takes 1 generic argument but 2 generic arguments\n         //~| HELP remove\n \n         type C = Box<dyn GenericTypeAT<'static, AssocTy=()>>;\n-        //~^ ERROR this trait takes 1 generic argument but 0 generic arguments\n+        //~^ ERROR trait takes 1 generic argument but 0 generic arguments\n         //~| HELP add missing\n-        //~| ERROR this trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n+        //~| ERROR trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n         //~| HELP remove\n     }\n \n@@ -203,20 +203,20 @@ mod associated_item {\n         }\n \n         type A = Box<dyn GenericLifetimeTypeAT<AssocTy=()>>;\n-        //~^ ERROR this trait takes 1 generic argument but 0 generic arguments\n+        //~^ ERROR trait takes 1 generic argument but 0 generic arguments\n         //~| HELP add missing\n         //~| ERROR missing lifetime specifier\n         //~| HELP consider introducing\n         //~| HELP consider making the bound lifetime-generic\n \n         type B = Box<dyn GenericLifetimeTypeAT<'static, AssocTy=()>>;\n-        //~^ ERROR this trait takes 1 generic argument but 0 generic arguments were supplied\n+        //~^ ERROR trait takes 1 generic argument but 0 generic arguments were supplied\n         //~| HELP add missing\n \n         type C = Box<dyn GenericLifetimeTypeAT<'static, 'static, AssocTy=()>>;\n-        //~^ ERROR this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n+        //~^ ERROR trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n         //~| HELP remove\n-        //~| ERROR this trait takes 1 generic argument but 0 generic arguments\n+        //~| ERROR trait takes 1 generic argument but 0 generic arguments\n         //~| HELP add missing\n \n         type D = Box<dyn GenericLifetimeTypeAT<(), AssocTy=()>>;\n@@ -228,21 +228,21 @@ mod associated_item {\n         //~^ ERROR missing lifetime specifier\n         //~| HELP consider introducing\n         //~| HELP consider making the bound lifetime-generic\n-        //~| ERROR this trait takes 1 generic argument but 2 generic arguments\n+        //~| ERROR trait takes 1 generic argument but 2 generic arguments\n         //~| HELP remove\n \n         type F = Box<dyn GenericLifetimeTypeAT<'static, 'static, (), AssocTy=()>>;\n-        //~^ ERROR this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n+        //~^ ERROR trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n         //~| HELP remove\n \n         type G = Box<dyn GenericLifetimeTypeAT<'static, (), (), AssocTy=()>>;\n-        //~^ ERROR this trait takes 1 generic argument but 2 generic arguments\n+        //~^ ERROR trait takes 1 generic argument but 2 generic arguments\n         //~| HELP remove\n \n         type H = Box<dyn GenericLifetimeTypeAT<'static, 'static, (), (), AssocTy=()>>;\n-        //~^ ERROR this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n+        //~^ ERROR trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n         //~| HELP remove\n-        //~| ERROR this trait takes 1 generic argument but 2 generic arguments\n+        //~| ERROR trait takes 1 generic argument but 2 generic arguments\n         //~| HELP remove\n     }\n \n@@ -252,15 +252,15 @@ mod associated_item {\n         }\n \n         type A = Box<dyn GenericTypeTypeAT<AssocTy=()>>;\n-        //~^ ERROR this trait takes 2 generic arguments but 0 generic arguments\n+        //~^ ERROR trait takes 2 generic arguments but 0 generic arguments\n         //~| HELP add missing\n \n         type B = Box<dyn GenericTypeTypeAT<(), AssocTy=()>>;\n-        //~^ ERROR this trait takes 2 generic arguments but 1 generic argument\n+        //~^ ERROR trait takes 2 generic arguments but 1 generic argument\n         //~| HELP add missing\n \n         type C = Box<dyn GenericTypeTypeAT<(), (), (), AssocTy=()>>;\n-        //~^ ERROR this trait takes 2 generic arguments but 3 generic arguments\n+        //~^ ERROR trait takes 2 generic arguments but 3 generic arguments\n         //~| HELP remove\n     }\n \n@@ -275,7 +275,7 @@ mod associated_item {\n         //~| HELP consider making the bound lifetime-generic\n \n         type B = Box<dyn GenericLifetimeLifetimeAT<'static, AssocTy=()>>;\n-        //~^ ERROR this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+        //~^ ERROR trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n         //~| HELP add missing lifetime argument\n     }\n \n@@ -288,17 +288,17 @@ mod associated_item {\n         //~^ ERROR missing lifetime specifier\n         //~| HELP consider introducing\n         //~| HELP consider making the bound lifetime-generic\n-        //~| ERROR this trait takes 1 generic argument but 0 generic arguments\n+        //~| ERROR trait takes 1 generic argument but 0 generic arguments\n         //~| HELP add missing\n \n         type B = Box<dyn GenericLifetimeLifetimeTypeAT<'static, AssocTy=()>>;\n-        //~^ ERROR this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+        //~^ ERROR trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n         //~| HELP add missing lifetime argument\n-        //~| ERROR this trait takes 1 generic argument but 0 generic arguments\n+        //~| ERROR trait takes 1 generic argument but 0 generic arguments\n         //~| HELP add missing\n \n         type C = Box<dyn GenericLifetimeLifetimeTypeAT<'static, (), AssocTy=()>>;\n-        //~^ ERROR this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+        //~^ ERROR trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n         //~| HELP add missing lifetime argument\n     }\n }\n@@ -312,21 +312,21 @@ mod stdlib {\n         //~| HELP add missing\n \n         type B = HashMap<String>;\n-        //~^ ERROR this struct takes at least\n+        //~^ ERROR struct takes at least\n         //~| HELP add missing\n \n         type C = HashMap<'static>;\n-        //~^ ERROR this struct takes 0 lifetime arguments but 1 lifetime argument\n+        //~^ ERROR struct takes 0 lifetime arguments but 1 lifetime argument\n         //~| HELP remove these generics\n-        //~| ERROR this struct takes at least 2\n+        //~| ERROR struct takes at least 2\n         //~| HELP add missing\n \n         type D = HashMap<usize, String, char, f64>;\n-        //~^ ERROR this struct takes at most 3\n+        //~^ ERROR struct takes at most 3\n         //~| HELP remove this\n \n         type E = HashMap<>;\n-        //~^ ERROR this struct takes at least 2 generic arguments but 0 generic arguments\n+        //~^ ERROR struct takes at least 2 generic arguments but 0 generic arguments\n         //~| HELP add missing\n     }\n \n@@ -336,21 +336,21 @@ mod stdlib {\n         //~| HELP add missing\n \n         type B = Result<String>;\n-        //~^ ERROR this enum takes 2 generic arguments but 1 generic argument\n+        //~^ ERROR enum takes 2 generic arguments but 1 generic argument\n         //~| HELP add missing\n \n         type C = Result<'static>;\n-        //~^ ERROR this enum takes 0 lifetime arguments but 1 lifetime argument\n+        //~^ ERROR enum takes 0 lifetime arguments but 1 lifetime argument\n         //~| HELP remove these generics\n-        //~| ERROR this enum takes 2 generic arguments but 0 generic arguments\n+        //~| ERROR enum takes 2 generic arguments but 0 generic arguments\n         //~| HELP add missing\n \n         type D = Result<usize, String, char>;\n-        //~^ ERROR this enum takes 2 generic arguments but 3 generic arguments\n+        //~^ ERROR enum takes 2 generic arguments but 3 generic arguments\n         //~| HELP remove\n \n         type E = Result<>;\n-        //~^ ERROR this enum takes 2 generic arguments but 0 generic arguments\n+        //~^ ERROR enum takes 2 generic arguments but 0 generic arguments\n         //~| HELP add missing\n     }\n }"}, {"sha": "9006fb10b67fa64551ad358527fa77f21a991977", "filename": "tests/ui/generics/wrong-number-of-args.stderr", "status": "modified", "additions": 53, "deletions": 53, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fwrong-number-of-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fgenerics%2Fwrong-number-of-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerics%2Fwrong-number-of-args.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -167,7 +167,7 @@ help: consider introducing a named lifetime parameter\n LL |         type A<'a> = Box<dyn GenericLifetimeLifetimeTypeAT<'a, 'a, AssocTy=()>>;\n    |               ++++                                         +++++++\n \n-error[E0107]: this struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/wrong-number-of-args.rs:6:14\n    |\n LL |     type B = Ty<'static>;\n@@ -181,7 +181,7 @@ note: struct defined here, with 0 lifetime parameters\n LL |     struct Ty;\n    |            ^^\n \n-error[E0107]: this struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/wrong-number-of-args.rs:10:14\n    |\n LL |     type C = Ty<'static, usize>;\n@@ -195,7 +195,7 @@ note: struct defined here, with 0 lifetime parameters\n LL |     struct Ty;\n    |            ^^\n \n-error[E0107]: this struct takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: struct takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/wrong-number-of-args.rs:10:14\n    |\n LL |     type C = Ty<'static, usize>;\n@@ -209,7 +209,7 @@ note: struct defined here, with 0 generic parameters\n LL |     struct Ty;\n    |            ^^\n \n-error[E0107]: this struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/wrong-number-of-args.rs:16:14\n    |\n LL |     type D = Ty<'static, usize, { 0 }>;\n@@ -223,7 +223,7 @@ note: struct defined here, with 0 lifetime parameters\n LL |     struct Ty;\n    |            ^^\n \n-error[E0107]: this struct takes 0 generic arguments but 2 generic arguments were supplied\n+error[E0107]: struct takes 0 generic arguments but 2 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:16:14\n    |\n LL |     type D = Ty<'static, usize, { 0 }>;\n@@ -253,7 +253,7 @@ help: add missing generic arguments\n LL |     type A = Ty<A, B>;\n    |                ++++++\n \n-error[E0107]: this struct takes 2 generic arguments but 1 generic argument was supplied\n+error[E0107]: struct takes 2 generic arguments but 1 generic argument was supplied\n   --> $DIR/wrong-number-of-args.rs:30:14\n    |\n LL |     type B = Ty<usize>;\n@@ -271,7 +271,7 @@ help: add missing generic argument\n LL |     type B = Ty<usize, B>;\n    |                      +++\n \n-error[E0107]: this struct takes 2 generic arguments but 3 generic arguments were supplied\n+error[E0107]: struct takes 2 generic arguments but 3 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:36:14\n    |\n LL |     type D = Ty<usize, String, char>;\n@@ -285,7 +285,7 @@ note: struct defined here, with 2 generic parameters: `A`, `B`\n LL |     struct Ty<A, B>;\n    |            ^^ -  -\n \n-error[E0107]: this struct takes 2 generic arguments but 0 generic arguments were supplied\n+error[E0107]: struct takes 2 generic arguments but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:40:14\n    |\n LL |     type E = Ty<>;\n@@ -317,7 +317,7 @@ help: add missing generic argument\n LL |     type A = Ty<T>;\n    |                +++\n \n-error[E0107]: this struct takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: struct takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:54:14\n    |\n LL |     type B = Ty<'static>;\n@@ -333,7 +333,7 @@ help: add missing generic argument\n LL |     type B = Ty<'static, T>;\n    |                        +++\n \n-error[E0107]: this struct takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: struct takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:64:14\n    |\n LL |     type E = Ty<>;\n@@ -349,7 +349,7 @@ help: add missing generic argument\n LL |     type E = Ty<T>;\n    |                 +\n \n-error[E0107]: this struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n+error[E0107]: struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:70:14\n    |\n LL |     type F = Ty<'static, usize, 'static, usize>;\n@@ -363,7 +363,7 @@ note: struct defined here, with 1 lifetime parameter: `'a`\n LL |     struct Ty<'a, T>;\n    |            ^^ --\n \n-error[E0107]: this struct takes 1 generic argument but 2 generic arguments were supplied\n+error[E0107]: struct takes 1 generic argument but 2 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:70:14\n    |\n LL |     type F = Ty<'static, usize, 'static, usize>;\n@@ -393,7 +393,7 @@ help: add missing generic arguments\n LL |     type A = Ty<A, B>;\n    |                ++++++\n \n-error[E0107]: this struct takes at least 2 generic arguments but 1 generic argument was supplied\n+error[E0107]: struct takes at least 2 generic arguments but 1 generic argument was supplied\n   --> $DIR/wrong-number-of-args.rs:84:14\n    |\n LL |     type B = Ty<usize>;\n@@ -411,7 +411,7 @@ help: add missing generic argument\n LL |     type B = Ty<usize, B>;\n    |                      +++\n \n-error[E0107]: this struct takes at most 3 generic arguments but 4 generic arguments were supplied\n+error[E0107]: struct takes at most 3 generic arguments but 4 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:92:14\n    |\n LL |     type E = Ty<usize, String, char, f64>;\n@@ -425,7 +425,7 @@ note: struct defined here, with at most 3 generic parameters: `A`, `B`, `C`\n LL |     struct Ty<A, B, C = &'static str>;\n    |            ^^ -  -  ----------------\n \n-error[E0107]: this struct takes at least 2 generic arguments but 0 generic arguments were supplied\n+error[E0107]: struct takes at least 2 generic arguments but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:96:14\n    |\n LL |     type F = Ty<>;\n@@ -441,7 +441,7 @@ help: add missing generic arguments\n LL |     type F = Ty<A, B>;\n    |                 ++++\n \n-error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/wrong-number-of-args.rs:116:22\n    |\n LL |     type A = Box<dyn NonGeneric<usize>>;\n@@ -455,7 +455,7 @@ note: trait defined here, with 0 generic parameters\n LL |     trait NonGeneric {\n    |           ^^^^^^^^^^\n \n-error[E0107]: this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n+error[E0107]: trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:125:22\n    |\n LL |     type C = Box<dyn GenericLifetime<'static, 'static>>;\n@@ -485,7 +485,7 @@ help: add missing generic argument\n LL |     type D = Box<dyn GenericType<A>>;\n    |                                 +++\n \n-error[E0107]: this trait takes 1 generic argument but 2 generic arguments were supplied\n+error[E0107]: trait takes 1 generic argument but 2 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:133:22\n    |\n LL |     type E = Box<dyn GenericType<String, usize>>;\n@@ -499,7 +499,7 @@ note: trait defined here, with 1 generic parameter: `A`\n LL |     trait GenericType<A> {\n    |           ^^^^^^^^^^^ -\n \n-error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: trait takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:142:22\n    |\n LL |     type G = Box<dyn GenericType<>>;\n@@ -515,7 +515,7 @@ help: add missing generic argument\n LL |     type G = Box<dyn GenericType<A>>;\n    |                                  +\n \n-error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/wrong-number-of-args.rs:153:26\n    |\n LL |         type A = Box<dyn NonGenericAT<usize, AssocTy=()>>;\n@@ -529,7 +529,7 @@ note: trait defined here, with 0 generic parameters\n LL |         trait NonGenericAT {\n    |               ^^^^^^^^^^^^\n \n-error[E0107]: this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n+error[E0107]: trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:168:26\n    |\n LL |         type B = Box<dyn GenericLifetimeAT<'static, 'static, AssocTy=()>>;\n@@ -543,7 +543,7 @@ note: trait defined here, with 1 lifetime parameter: `'a`\n LL |         trait GenericLifetimeAT<'a> {\n    |               ^^^^^^^^^^^^^^^^^ --\n \n-error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/wrong-number-of-args.rs:172:26\n    |\n LL |         type C = Box<dyn GenericLifetimeAT<(), AssocTy=()>>;\n@@ -557,7 +557,7 @@ note: trait defined here, with 0 generic parameters\n LL |         trait GenericLifetimeAT<'a> {\n    |               ^^^^^^^^^^^^^^^^^\n \n-error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: trait takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:185:26\n    |\n LL |         type A = Box<dyn GenericTypeAT<AssocTy=()>>;\n@@ -573,7 +573,7 @@ help: add missing generic argument\n LL |         type A = Box<dyn GenericTypeAT<A, AssocTy=()>>;\n    |                                        ++\n \n-error[E0107]: this trait takes 1 generic argument but 2 generic arguments were supplied\n+error[E0107]: trait takes 1 generic argument but 2 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:189:26\n    |\n LL |         type B = Box<dyn GenericTypeAT<(), (), AssocTy=()>>;\n@@ -587,7 +587,7 @@ note: trait defined here, with 1 generic parameter: `A`\n LL |         trait GenericTypeAT<A> {\n    |               ^^^^^^^^^^^^^ -\n \n-error[E0107]: this trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/wrong-number-of-args.rs:193:26\n    |\n LL |         type C = Box<dyn GenericTypeAT<'static, AssocTy=()>>;\n@@ -601,7 +601,7 @@ note: trait defined here, with 0 lifetime parameters\n LL |         trait GenericTypeAT<A> {\n    |               ^^^^^^^^^^^^^\n \n-error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: trait takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:193:26\n    |\n LL |         type C = Box<dyn GenericTypeAT<'static, AssocTy=()>>;\n@@ -617,7 +617,7 @@ help: add missing generic argument\n LL |         type C = Box<dyn GenericTypeAT<'static, A, AssocTy=()>>;\n    |                                               +++\n \n-error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: trait takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:205:26\n    |\n LL |         type A = Box<dyn GenericLifetimeTypeAT<AssocTy=()>>;\n@@ -633,7 +633,7 @@ help: add missing generic argument\n LL |         type A = Box<dyn GenericLifetimeTypeAT<A, AssocTy=()>>;\n    |                                                ++\n \n-error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: trait takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:212:26\n    |\n LL |         type B = Box<dyn GenericLifetimeTypeAT<'static, AssocTy=()>>;\n@@ -649,7 +649,7 @@ help: add missing generic argument\n LL |         type B = Box<dyn GenericLifetimeTypeAT<'static, A, AssocTy=()>>;\n    |                                                       +++\n \n-error[E0107]: this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n+error[E0107]: trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:216:26\n    |\n LL |         type C = Box<dyn GenericLifetimeTypeAT<'static, 'static, AssocTy=()>>;\n@@ -663,7 +663,7 @@ note: trait defined here, with 1 lifetime parameter: `'a`\n LL |         trait GenericLifetimeTypeAT<'a, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^ --\n \n-error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: trait takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:216:26\n    |\n LL |         type C = Box<dyn GenericLifetimeTypeAT<'static, 'static, AssocTy=()>>;\n@@ -679,7 +679,7 @@ help: add missing generic argument\n LL |         type C = Box<dyn GenericLifetimeTypeAT<'static, 'static, A, AssocTy=()>>;\n    |                                                                +++\n \n-error[E0107]: this trait takes 1 generic argument but 2 generic arguments were supplied\n+error[E0107]: trait takes 1 generic argument but 2 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:227:26\n    |\n LL |         type E = Box<dyn GenericLifetimeTypeAT<(), (), AssocTy=()>>;\n@@ -693,7 +693,7 @@ note: trait defined here, with 1 generic parameter: `A`\n LL |         trait GenericLifetimeTypeAT<'a, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^     -\n \n-error[E0107]: this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n+error[E0107]: trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:234:26\n    |\n LL |         type F = Box<dyn GenericLifetimeTypeAT<'static, 'static, (), AssocTy=()>>;\n@@ -707,7 +707,7 @@ note: trait defined here, with 1 lifetime parameter: `'a`\n LL |         trait GenericLifetimeTypeAT<'a, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^ --\n \n-error[E0107]: this trait takes 1 generic argument but 2 generic arguments were supplied\n+error[E0107]: trait takes 1 generic argument but 2 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:238:26\n    |\n LL |         type G = Box<dyn GenericLifetimeTypeAT<'static, (), (), AssocTy=()>>;\n@@ -721,7 +721,7 @@ note: trait defined here, with 1 generic parameter: `A`\n LL |         trait GenericLifetimeTypeAT<'a, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^     -\n \n-error[E0107]: this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n+error[E0107]: trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:242:26\n    |\n LL |         type H = Box<dyn GenericLifetimeTypeAT<'static, 'static, (), (), AssocTy=()>>;\n@@ -735,7 +735,7 @@ note: trait defined here, with 1 lifetime parameter: `'a`\n LL |         trait GenericLifetimeTypeAT<'a, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^ --\n \n-error[E0107]: this trait takes 1 generic argument but 2 generic arguments were supplied\n+error[E0107]: trait takes 1 generic argument but 2 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:242:26\n    |\n LL |         type H = Box<dyn GenericLifetimeTypeAT<'static, 'static, (), (), AssocTy=()>>;\n@@ -749,7 +749,7 @@ note: trait defined here, with 1 generic parameter: `A`\n LL |         trait GenericLifetimeTypeAT<'a, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^     -\n \n-error[E0107]: this trait takes 2 generic arguments but 0 generic arguments were supplied\n+error[E0107]: trait takes 2 generic arguments but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:254:26\n    |\n LL |         type A = Box<dyn GenericTypeTypeAT<AssocTy=()>>;\n@@ -765,7 +765,7 @@ help: add missing generic arguments\n LL |         type A = Box<dyn GenericTypeTypeAT<A, B, AssocTy=()>>;\n    |                                            +++++\n \n-error[E0107]: this trait takes 2 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 2 generic arguments but 1 generic argument was supplied\n   --> $DIR/wrong-number-of-args.rs:258:26\n    |\n LL |         type B = Box<dyn GenericTypeTypeAT<(), AssocTy=()>>;\n@@ -783,7 +783,7 @@ help: add missing generic argument\n LL |         type B = Box<dyn GenericTypeTypeAT<(), B, AssocTy=()>>;\n    |                                              +++\n \n-error[E0107]: this trait takes 2 generic arguments but 3 generic arguments were supplied\n+error[E0107]: trait takes 2 generic arguments but 3 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:262:26\n    |\n LL |         type C = Box<dyn GenericTypeTypeAT<(), (), (), AssocTy=()>>;\n@@ -797,7 +797,7 @@ note: trait defined here, with 2 generic parameters: `A`, `B`\n LL |         trait GenericTypeTypeAT<A, B> {\n    |               ^^^^^^^^^^^^^^^^^ -  -\n \n-error[E0107]: this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/wrong-number-of-args.rs:277:26\n    |\n LL |         type B = Box<dyn GenericLifetimeLifetimeAT<'static, AssocTy=()>>;\n@@ -815,7 +815,7 @@ help: add missing lifetime argument\n LL |         type B = Box<dyn GenericLifetimeLifetimeAT<'static, 'static, AssocTy=()>>;\n    |                                                           +++++++++\n \n-error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: trait takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:287:26\n    |\n LL |         type A = Box<dyn GenericLifetimeLifetimeTypeAT<AssocTy=()>>;\n@@ -831,7 +831,7 @@ help: add missing generic argument\n LL |         type A = Box<dyn GenericLifetimeLifetimeTypeAT<A, AssocTy=()>>;\n    |                                                        ++\n \n-error[E0107]: this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/wrong-number-of-args.rs:294:26\n    |\n LL |         type B = Box<dyn GenericLifetimeLifetimeTypeAT<'static, AssocTy=()>>;\n@@ -849,7 +849,7 @@ help: add missing lifetime argument\n LL |         type B = Box<dyn GenericLifetimeLifetimeTypeAT<'static, 'static, AssocTy=()>>;\n    |                                                               +++++++++\n \n-error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: trait takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:294:26\n    |\n LL |         type B = Box<dyn GenericLifetimeLifetimeTypeAT<'static, AssocTy=()>>;\n@@ -865,7 +865,7 @@ help: add missing generic argument\n LL |         type B = Box<dyn GenericLifetimeLifetimeTypeAT<'static, A, AssocTy=()>>;\n    |                                                               +++\n \n-error[E0107]: this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/wrong-number-of-args.rs:300:26\n    |\n LL |         type C = Box<dyn GenericLifetimeLifetimeTypeAT<'static, (), AssocTy=()>>;\n@@ -894,7 +894,7 @@ help: add missing generic arguments\n LL |         type A = HashMap<K, V>;\n    |                         ++++++\n \n-error[E0107]: this struct takes at least 2 generic arguments but 1 generic argument was supplied\n+error[E0107]: struct takes at least 2 generic arguments but 1 generic argument was supplied\n   --> $DIR/wrong-number-of-args.rs:314:18\n    |\n LL |         type B = HashMap<String>;\n@@ -907,15 +907,15 @@ help: add missing generic argument\n LL |         type B = HashMap<String, V>;\n    |                                +++\n \n-error[E0107]: this struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/wrong-number-of-args.rs:318:18\n    |\n LL |         type C = HashMap<'static>;\n    |                  ^^^^^^^--------- help: remove these generics\n    |                  |\n    |                  expected 0 lifetime arguments\n \n-error[E0107]: this struct takes at least 2 generic arguments but 0 generic arguments were supplied\n+error[E0107]: struct takes at least 2 generic arguments but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:318:18\n    |\n LL |         type C = HashMap<'static>;\n@@ -926,15 +926,15 @@ help: add missing generic arguments\n LL |         type C = HashMap<'static, K, V>;\n    |                                 ++++++\n \n-error[E0107]: this struct takes at most 3 generic arguments but 4 generic arguments were supplied\n+error[E0107]: struct takes at most 3 generic arguments but 4 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:324:18\n    |\n LL |         type D = HashMap<usize, String, char, f64>;\n    |                  ^^^^^^^                      --- help: remove this generic argument\n    |                  |\n    |                  expected at most 3 generic arguments\n \n-error[E0107]: this struct takes at least 2 generic arguments but 0 generic arguments were supplied\n+error[E0107]: struct takes at least 2 generic arguments but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:328:18\n    |\n LL |         type E = HashMap<>;\n@@ -956,7 +956,7 @@ help: add missing generic arguments\n LL |         type A = Result<T, E>;\n    |                        ++++++\n \n-error[E0107]: this enum takes 2 generic arguments but 1 generic argument was supplied\n+error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied\n   --> $DIR/wrong-number-of-args.rs:338:18\n    |\n LL |         type B = Result<String>;\n@@ -969,15 +969,15 @@ help: add missing generic argument\n LL |         type B = Result<String, E>;\n    |                               +++\n \n-error[E0107]: this enum takes 0 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: enum takes 0 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/wrong-number-of-args.rs:342:18\n    |\n LL |         type C = Result<'static>;\n    |                  ^^^^^^--------- help: remove these generics\n    |                  |\n    |                  expected 0 lifetime arguments\n \n-error[E0107]: this enum takes 2 generic arguments but 0 generic arguments were supplied\n+error[E0107]: enum takes 2 generic arguments but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:342:18\n    |\n LL |         type C = Result<'static>;\n@@ -988,15 +988,15 @@ help: add missing generic arguments\n LL |         type C = Result<'static, T, E>;\n    |                                ++++++\n \n-error[E0107]: this enum takes 2 generic arguments but 3 generic arguments were supplied\n+error[E0107]: enum takes 2 generic arguments but 3 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:348:18\n    |\n LL |         type D = Result<usize, String, char>;\n    |                  ^^^^^^                ---- help: remove this generic argument\n    |                  |\n    |                  expected 2 generic arguments\n \n-error[E0107]: this enum takes 2 generic arguments but 0 generic arguments were supplied\n+error[E0107]: enum takes 2 generic arguments but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:352:18\n    |\n LL |         type E = Result<>;"}, {"sha": "9c1011018704264f57390a229efccfae44cba80b", "filename": "tests/ui/impl-trait/explicit-generic-args-with-impl-trait/explicit-generic-args-for-impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fimpl-trait%2Fexplicit-generic-args-with-impl-trait%2Fexplicit-generic-args-for-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fimpl-trait%2Fexplicit-generic-args-with-impl-trait%2Fexplicit-generic-args-for-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fexplicit-generic-args-with-impl-trait%2Fexplicit-generic-args-for-impl.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this function takes 1 generic argument but 2 generic arguments were supplied\n+error[E0107]: function takes 1 generic argument but 2 generic arguments were supplied\n   --> $DIR/explicit-generic-args-for-impl.rs:4:5\n    |\n LL |     foo::<str, String>(\"\".to_string());"}, {"sha": "a26460c8ecc3ad6ce440035771c615894109e5f8", "filename": "tests/ui/impl-trait/explicit-generic-args-with-impl-trait/not-enough-args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fimpl-trait%2Fexplicit-generic-args-with-impl-trait%2Fnot-enough-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fimpl-trait%2Fexplicit-generic-args-with-impl-trait%2Fnot-enough-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fexplicit-generic-args-with-impl-trait%2Fnot-enough-args.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this function takes 2 generic arguments but 1 generic argument was supplied\n+error[E0107]: function takes 2 generic arguments but 1 generic argument was supplied\n   --> $DIR/not-enough-args.rs:4:5\n    |\n LL |     f::<[u8]>(\"a\", b\"a\");"}, {"sha": "675fd041154beb6b56b823154f8d39a212c48bdb", "filename": "tests/ui/issues/issue-18423.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fissues%2Fissue-18423.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fissues%2Fissue-18423.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-18423.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -2,7 +2,7 @@\n \n struct Foo<'a> {\n     x: Box<'a, isize>\n-    //~^ ERROR this struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n+    //~^ ERROR struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n }\n \n fn main() { }"}, {"sha": "5d154dbbbdd6edf20546dcb1d4a241c948256ab9", "filename": "tests/ui/issues/issue-18423.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fissues%2Fissue-18423.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fissues%2Fissue-18423.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-18423.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/issue-18423.rs:4:8\n    |\n LL |     x: Box<'a, isize>"}, {"sha": "e3c07bb3f724fee797de9e79fd1a99a727abdb6f", "filename": "tests/ui/issues/issue-3214.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fissues%2Fissue-3214.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fissues%2Fissue-3214.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-3214.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -4,7 +4,7 @@ fn foo<T>() {\n     }\n \n     impl<T> Drop for Foo<T> {\n-        //~^ ERROR this struct takes 0 generic arguments but 1 generic argument\n+        //~^ ERROR struct takes 0 generic arguments but 1 generic argument\n         fn drop(&mut self) {}\n     }\n }"}, {"sha": "7a2d772f0a1b55a9dce4734a96873afd12565fc2", "filename": "tests/ui/issues/issue-3214.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fissues%2Fissue-3214.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fissues%2Fissue-3214.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-3214.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -8,7 +8,7 @@ LL |     struct Foo {\n LL |         x: T,\n    |            ^ use of generic parameter from outer function\n \n-error[E0107]: this struct takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: struct takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/issue-3214.rs:6:22\n    |\n LL |     impl<T> Drop for Foo<T> {"}, {"sha": "da3ba63ef67d1b9aa4efe0dfac48c0ced890ac50", "filename": "tests/ui/issues/issue-53251.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fissues%2Fissue-53251.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fissues%2Fissue-53251.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-53251.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -9,8 +9,8 @@ macro_rules! impl_add {\n         $(\n             fn $n() {\n                 S::f::<i64>();\n-                //~^ ERROR this associated function takes 0 generic\n-                //~| ERROR this associated function takes 0 generic\n+                //~^ ERROR associated function takes 0 generic\n+                //~| ERROR associated function takes 0 generic\n             }\n         )*\n     }"}, {"sha": "d5f14e8deb90a264721232d45321ae588a0db19d", "filename": "tests/ui/issues/issue-53251.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fissues%2Fissue-53251.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fissues%2Fissue-53251.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-53251.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this associated function takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: associated function takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/issue-53251.rs:11:20\n    |\n LL |                 S::f::<i64>();\n@@ -16,7 +16,7 @@ LL |     fn f() {}\n    |        ^\n    = note: this error originates in the macro `impl_add` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0107]: this associated function takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: associated function takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/issue-53251.rs:11:20\n    |\n LL |                 S::f::<i64>();"}, {"sha": "7b9443eee5013d1590f1e5528d5ff12ab544181b", "filename": "tests/ui/issues/issue-60622.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fissues%2Fissue-60622.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fissues%2Fissue-60622.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-60622.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -9,7 +9,7 @@ impl Borked {\n fn run_wild<T>(b: &Borked) {\n     b.a::<'_, T>();\n     //~^ ERROR cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-    //~| ERROR this method takes 0 generic arguments but 1 generic argument\n+    //~| ERROR method takes 0 generic arguments but 1 generic argument\n     //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n }\n "}, {"sha": "43da2773940e58e47c12ac8926d6eb41ca585b5a", "filename": "tests/ui/issues/issue-60622.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fissues%2Fissue-60622.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fissues%2Fissue-60622.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-60622.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -16,7 +16,7 @@ LL | #![deny(warnings)]\n    |         ^^^^^^^^\n    = note: `#[deny(late_bound_lifetime_arguments)]` implied by `#[deny(warnings)]`\n \n-error[E0107]: this method takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: method takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/issue-60622.rs:10:7\n    |\n LL |     b.a::<'_, T>();"}, {"sha": "792563fd82b35e67790e66d44caa381948c77877", "filename": "tests/ui/late-bound-lifetimes/mismatched_arg_count.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Flate-bound-lifetimes%2Fmismatched_arg_count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Flate-bound-lifetimes%2Fmismatched_arg_count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flate-bound-lifetimes%2Fmismatched_arg_count.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -7,6 +7,6 @@ trait Trait<'a> {\n type Alias<'a, T> = <T as Trait<'a>>::Assoc;\n \n fn bar<'a, T: Trait<'a>>(_: Alias<'a, 'a, T>) {}\n-//~^ error: this type alias takes 1 lifetime argument but 2 lifetime arguments were supplied\n+//~^ error: type alias takes 1 lifetime argument but 2 lifetime arguments were supplied\n \n fn main() {}"}, {"sha": "de58a014ee8fa6bff949e17e38ea989f4206423d", "filename": "tests/ui/late-bound-lifetimes/mismatched_arg_count.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Flate-bound-lifetimes%2Fmismatched_arg_count.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Flate-bound-lifetimes%2Fmismatched_arg_count.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flate-bound-lifetimes%2Fmismatched_arg_count.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this type alias takes 1 lifetime argument but 2 lifetime arguments were supplied\n+error[E0107]: type alias takes 1 lifetime argument but 2 lifetime arguments were supplied\n   --> $DIR/mismatched_arg_count.rs:9:29\n    |\n LL | fn bar<'a, T: Trait<'a>>(_: Alias<'a, 'a, T>) {}"}, {"sha": "1f13de094bbf80d1f600724fe7210d71229afb34", "filename": "tests/ui/methods/method-call-lifetime-args-fail.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fmethods%2Fmethod-call-lifetime-args-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fmethods%2Fmethod-call-lifetime-args-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods%2Fmethod-call-lifetime-args-fail.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -14,9 +14,9 @@ impl S {\n fn method_call() {\n     S.early(); // OK\n     S.early::<'static>();\n-    //~^ ERROR this method takes 2 lifetime arguments but 1 lifetime argument\n+    //~^ ERROR method takes 2 lifetime arguments but 1 lifetime argument\n     S.early::<'static, 'static, 'static>();\n-    //~^ ERROR this method takes 2 lifetime arguments but 3 lifetime arguments were supplied\n+    //~^ ERROR method takes 2 lifetime arguments but 3 lifetime arguments were supplied\n     let _: &u8 = S.life_and_type::<'static>();\n     S.life_and_type::<u8>();\n     S.life_and_type::<'static, u8>();\n@@ -61,9 +61,9 @@ fn ufcs() {\n \n     S::early(S); // OK\n     S::early::<'static>(S);\n-    //~^ ERROR this method takes 2 lifetime arguments but 1 lifetime argument\n+    //~^ ERROR method takes 2 lifetime arguments but 1 lifetime argument\n     S::early::<'static, 'static, 'static>(S);\n-    //~^ ERROR this method takes 2 lifetime arguments but 3 lifetime arguments were supplied\n+    //~^ ERROR method takes 2 lifetime arguments but 3 lifetime arguments were supplied\n     let _: &u8 = S::life_and_type::<'static>(S);\n     S::life_and_type::<u8>(S);\n     S::life_and_type::<'static, u8>(S);"}, {"sha": "34526256f9975b9250c116ac06d6f64f75ba36c4", "filename": "tests/ui/methods/method-call-lifetime-args-fail.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fmethods%2Fmethod-call-lifetime-args-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fmethods%2Fmethod-call-lifetime-args-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods%2Fmethod-call-lifetime-args-fail.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this method takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: method takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/method-call-lifetime-args-fail.rs:16:7\n    |\n LL |     S.early::<'static>();\n@@ -16,7 +16,7 @@ help: add missing lifetime argument\n LL |     S.early::<'static, 'static>();\n    |                      +++++++++\n \n-error[E0107]: this method takes 2 lifetime arguments but 3 lifetime arguments were supplied\n+error[E0107]: method takes 2 lifetime arguments but 3 lifetime arguments were supplied\n   --> $DIR/method-call-lifetime-args-fail.rs:18:7\n    |\n LL |     S.early::<'static, 'static, 'static>();\n@@ -198,7 +198,7 @@ note: the late bound lifetime parameter is introduced here\n LL |     fn late_unused_early<'a, 'b>(self) -> &'b u8 { loop {} }\n    |                          ^^\n \n-error[E0107]: this method takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: method takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/method-call-lifetime-args-fail.rs:63:8\n    |\n LL |     S::early::<'static>(S);\n@@ -216,7 +216,7 @@ help: add missing lifetime argument\n LL |     S::early::<'static, 'static>(S);\n    |                       +++++++++\n \n-error[E0107]: this method takes 2 lifetime arguments but 3 lifetime arguments were supplied\n+error[E0107]: method takes 2 lifetime arguments but 3 lifetime arguments were supplied\n   --> $DIR/method-call-lifetime-args-fail.rs:65:8\n    |\n LL |     S::early::<'static, 'static, 'static>(S);"}, {"sha": "627dfcc31986a3ca1620f3a56f1d950e5b62f404", "filename": "tests/ui/seq-args.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fseq-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fseq-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fseq-args.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -2,12 +2,12 @@ fn main() {\n     trait Seq { }\n \n     impl<T> Seq<T> for Vec<T> {\n-        //~^ ERROR this trait takes 0 generic arguments but 1 generic argument\n+        //~^ ERROR trait takes 0 generic arguments but 1 generic argument\n         /* ... */\n     }\n \n     impl Seq<bool> for u32 {\n-        //~^ ERROR this trait takes 0 generic arguments but 1 generic argument\n+        //~^ ERROR trait takes 0 generic arguments but 1 generic argument\n         /* Treat the integer as a sequence of bits */\n     }\n }"}, {"sha": "a5b0f8e98dca06cb9af5a61d796a5f88c7b884c1", "filename": "tests/ui/seq-args.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fseq-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fseq-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fseq-args.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/seq-args.rs:4:13\n    |\n LL |     impl<T> Seq<T> for Vec<T> {\n@@ -12,7 +12,7 @@ note: trait defined here, with 0 generic parameters\n LL |     trait Seq { }\n    |           ^^^\n \n-error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/seq-args.rs:9:10\n    |\n LL |     impl Seq<bool> for u32 {"}, {"sha": "74d9705d4b89d4ef7393e4e405d379444493ae61", "filename": "tests/ui/structs/struct-path-associated-type.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fstructs%2Fstruct-path-associated-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fstructs%2Fstruct-path-associated-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstructs%2Fstruct-path-associated-type.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -13,7 +13,7 @@ fn f<T: Tr>() {\n     //~^ ERROR expected struct, variant or union type, found associated type\n     let z = T::A::<u8> {};\n     //~^ ERROR expected struct, variant or union type, found associated type\n-    //~| ERROR this associated type takes 0 generic arguments but 1 generic argument was supplied\n+    //~| ERROR associated type takes 0 generic arguments but 1 generic argument was supplied\n     match S {\n         T::A {} => {}\n         //~^ ERROR expected struct, variant or union type, found associated type\n@@ -22,7 +22,7 @@ fn f<T: Tr>() {\n \n fn g<T: Tr<A = S>>() {\n     let s = T::A {}; // OK\n-    let z = T::A::<u8> {}; //~ ERROR this associated type takes 0 generic arguments but 1 generic argument was supplied\n+    let z = T::A::<u8> {}; //~ ERROR associated type takes 0 generic arguments but 1 generic argument was supplied\n     match S {\n         T::A {} => {} // OK\n     }"}, {"sha": "acfddaf37607d236aa764a27da22d64be7b551b5", "filename": "tests/ui/structs/struct-path-associated-type.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fstructs%2Fstruct-path-associated-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fstructs%2Fstruct-path-associated-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstructs%2Fstruct-path-associated-type.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -4,7 +4,7 @@ error[E0071]: expected struct, variant or union type, found associated type\n LL |     let s = T::A {};\n    |             ^^^^ not a struct\n \n-error[E0107]: this associated type takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: associated type takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/struct-path-associated-type.rs:14:16\n    |\n LL |     let z = T::A::<u8> {};\n@@ -30,7 +30,7 @@ error[E0071]: expected struct, variant or union type, found associated type\n LL |         T::A {} => {}\n    |         ^^^^ not a struct\n \n-error[E0107]: this associated type takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: associated type takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/struct-path-associated-type.rs:25:16\n    |\n LL |     let z = T::A::<u8> {};"}, {"sha": "21cd9d08b21d1dc548185e0a383a7eabe1682f1d", "filename": "tests/ui/structs/structure-constructor-type-mismatch.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fstructs%2Fstructure-constructor-type-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fstructs%2Fstructure-constructor-type-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstructs%2Fstructure-constructor-type-mismatch.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -45,13 +45,13 @@ fn main() {\n         y: 8,\n     };\n \n-    let pt3 = PointF::<i32> { //~ ERROR this type alias takes 0 generic arguments but 1 generic argument\n+    let pt3 = PointF::<i32> { //~ ERROR type alias takes 0 generic arguments but 1 generic argument\n         x: 9,  //~ ERROR mismatched types\n         y: 10, //~ ERROR mismatched types\n     };\n \n     match (Point { x: 1, y: 2 }) {\n-        PointF::<u32> { .. } => {} //~ ERROR this type alias takes 0 generic arguments but 1 generic argument\n+        PointF::<u32> { .. } => {} //~ ERROR type alias takes 0 generic arguments but 1 generic argument\n         //~^ ERROR mismatched types\n     }\n "}, {"sha": "63dda459396b8e04bd50d76e5e7696505b730897", "filename": "tests/ui/structs/structure-constructor-type-mismatch.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fstructs%2Fstructure-constructor-type-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fstructs%2Fstructure-constructor-type-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstructs%2Fstructure-constructor-type-mismatch.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -52,7 +52,7 @@ LL |         x: 7,\n    |            expected `f32`, found integer\n    |            help: use a float literal: `7.0`\n \n-error[E0107]: this type alias takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: type alias takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/structure-constructor-type-mismatch.rs:48:15\n    |\n LL |     let pt3 = PointF::<i32> {\n@@ -84,7 +84,7 @@ LL |         y: 10,\n    |            expected `f32`, found integer\n    |            help: use a float literal: `10.0`\n \n-error[E0107]: this type alias takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: type alias takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/structure-constructor-type-mismatch.rs:54:9\n    |\n LL |         PointF::<u32> { .. } => {}"}, {"sha": "1407ebd277cb685f8b7ecba43ee91824e88f564e", "filename": "tests/ui/suggestions/issue-101421.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fissue-101421.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fissue-101421.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-101421.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -8,5 +8,5 @@ impl Ice for () {\n \n fn main() {\n     ().f::<()>(());\n-    //~^ ERROR this method takes 0 generic arguments but 1 generic argument was supplied\n+    //~^ ERROR method takes 0 generic arguments but 1 generic argument was supplied\n }"}, {"sha": "2656ab3db0bc382620ecca56e0ba0241aa54e212", "filename": "tests/ui/suggestions/issue-101421.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fissue-101421.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fissue-101421.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-101421.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this method takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: method takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/issue-101421.rs:10:8\n    |\n LL |     ().f::<()>(());"}, {"sha": "37b3339fa923edd8cc1fa93296d41f39a0dd5e9f", "filename": "tests/ui/suggestions/issue-104287.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fissue-104287.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fissue-104287.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-104287.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -8,6 +8,6 @@ impl S {\n fn main() {\n     let x = S;\n     foo::<()>(x);\n-    //~^ ERROR this method takes 0 generic arguments but 1 generic argument was supplied\n+    //~^ ERROR method takes 0 generic arguments but 1 generic argument was supplied\n     //~| ERROR cannot find function `foo` in this scope\n }"}, {"sha": "ed59b2e7a2d3bd3a5507c2345cff04791cb7af07", "filename": "tests/ui/suggestions/issue-104287.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fissue-104287.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fissue-104287.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-104287.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this method takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: method takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/issue-104287.rs:10:5\n    |\n LL |     foo::<()>(x);"}, {"sha": "04d4c47d8e5833abce7819e817068988f8f5e9ea", "filename": "tests/ui/suggestions/issue-85347.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fissue-85347.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fissue-85347.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-85347.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,7 +1,7 @@\n use std::ops::Deref;\n trait Foo {\n     type Bar<'a>: Deref<Target = <Self>::Bar<Target = Self>>;\n-    //~^ ERROR this associated type takes 1 lifetime argument but 0 lifetime arguments were supplied\n+    //~^ ERROR associated type takes 1 lifetime argument but 0 lifetime arguments were supplied\n     //~| ERROR associated type bindings are not allowed here\n     //~| HELP add missing\n }"}, {"sha": "f330b3c1faded7e8ec648e4cfcd96fe7ce587e3f", "filename": "tests/ui/suggestions/issue-85347.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fissue-85347.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fissue-85347.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-85347.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this associated type takes 1 lifetime argument but 0 lifetime arguments were supplied\n+error[E0107]: associated type takes 1 lifetime argument but 0 lifetime arguments were supplied\n   --> $DIR/issue-85347.rs:3:42\n    |\n LL |     type Bar<'a>: Deref<Target = <Self>::Bar<Target = Self>>;"}, {"sha": "be09dd895120803ebfbe96fc93e8de023648cdd1", "filename": "tests/ui/suggestions/issue-89064.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fissue-89064.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fissue-89064.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-89064.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this associated function takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: associated function takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/issue-89064.rs:17:16\n    |\n LL |     let _ = A::foo::<S>();\n@@ -20,7 +20,7 @@ LL -     let _ = A::foo::<S>();\n LL +     let _ = A::foo();\n    |\n \n-error[E0107]: this associated function takes 0 generic arguments but 2 generic arguments were supplied\n+error[E0107]: associated function takes 0 generic arguments but 2 generic arguments were supplied\n   --> $DIR/issue-89064.rs:22:16\n    |\n LL |     let _ = B::bar::<S, S>();\n@@ -42,7 +42,7 @@ LL -     let _ = B::bar::<S, S>();\n LL +     let _ = B::bar();\n    |\n \n-error[E0107]: this associated function takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: associated function takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/issue-89064.rs:27:21\n    |\n LL |     let _ = A::<S>::foo::<S>();\n@@ -56,7 +56,7 @@ note: associated function defined here, with 0 generic parameters\n LL |     fn foo() {}\n    |        ^^^\n \n-error[E0107]: this method takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: method takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/issue-89064.rs:31:16\n    |\n LL |     let _ = 42.into::<Option<_>>();"}, {"sha": "cb734e8ba857f13323e1338445e16e57542da8b6", "filename": "tests/ui/suggestions/missing-lifetime-specifier.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fmissing-lifetime-specifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fmissing-lifetime-specifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fmissing-lifetime-specifier.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -37,19 +37,19 @@ thread_local! {\n \n thread_local! {\n     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, i32>>>>> = RefCell::new(HashMap::new());\n-    //~^ ERROR this union takes 2 lifetime arguments but 1 lifetime argument\n-    //~| ERROR this union takes 2 lifetime arguments but 1 lifetime argument was supplied\n-    //~| ERROR this union takes 2 lifetime arguments but 1 lifetime argument was supplied\n-    //~| ERROR this union takes 2 lifetime arguments but 1 lifetime argument was supplied\n-    //~| ERROR this union takes 2 lifetime arguments but 1 lifetime argument was supplied\n+    //~^ ERROR union takes 2 lifetime arguments but 1 lifetime argument\n+    //~| ERROR union takes 2 lifetime arguments but 1 lifetime argument was supplied\n+    //~| ERROR union takes 2 lifetime arguments but 1 lifetime argument was supplied\n+    //~| ERROR union takes 2 lifetime arguments but 1 lifetime argument was supplied\n+    //~| ERROR union takes 2 lifetime arguments but 1 lifetime argument was supplied\n }\n thread_local! {\n     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());\n-    //~^ ERROR this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n-    //~| ERROR this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n-    //~| ERROR this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n-    //~| ERROR this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n-    //~| ERROR this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+    //~^ ERROR trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+    //~| ERROR trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+    //~| ERROR trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+    //~| ERROR trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+    //~| ERROR trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n     //~| ERROR missing lifetime\n     //~| ERROR missing lifetime\n }"}, {"sha": "21d2378382cbabd6f34eab12406b163b98450ada", "filename": "tests/ui/suggestions/missing-lifetime-specifier.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fmissing-lifetime-specifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fmissing-lifetime-specifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fmissing-lifetime-specifier.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -133,7 +133,7 @@ LL | | }\n    |\n    = help: this function's return type contains a borrowed value, but the signature does not say which one of `init`'s 3 lifetimes it is borrowed from\n \n-error[E0107]: this union takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: union takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/missing-lifetime-specifier.rs:39:44\n    |\n LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, i32>>>>> = RefCell::new(HashMap::new());\n@@ -151,7 +151,7 @@ help: add missing lifetime argument\n LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());\n    |                                                       +++++++++\n \n-error[E0107]: this union takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: union takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/missing-lifetime-specifier.rs:39:44\n    |\n LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, i32>>>>> = RefCell::new(HashMap::new());\n@@ -169,7 +169,7 @@ help: add missing lifetime argument\n LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());\n    |                                                       +++++++++\n \n-error[E0107]: this union takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: union takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/missing-lifetime-specifier.rs:39:44\n    |\n LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, i32>>>>> = RefCell::new(HashMap::new());\n@@ -187,7 +187,7 @@ help: add missing lifetime argument\n LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());\n    |                                                       +++++++++\n \n-error[E0107]: this union takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: union takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/missing-lifetime-specifier.rs:39:44\n    |\n LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, i32>>>>> = RefCell::new(HashMap::new());\n@@ -205,7 +205,7 @@ help: add missing lifetime argument\n LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());\n    |                                                       +++++++++\n \n-error[E0107]: this union takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: union takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/missing-lifetime-specifier.rs:39:44\n    |\n LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, i32>>>>> = RefCell::new(HashMap::new());\n@@ -223,7 +223,7 @@ help: add missing lifetime argument\n LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());\n    |                                                       +++++++++\n \n-error[E0107]: this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/missing-lifetime-specifier.rs:47:45\n    |\n LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());\n@@ -241,7 +241,7 @@ help: add missing lifetime argument\n LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());\n    |                                                        +++++++++\n \n-error[E0107]: this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/missing-lifetime-specifier.rs:47:45\n    |\n LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());\n@@ -259,7 +259,7 @@ help: add missing lifetime argument\n LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());\n    |                                                        +++++++++\n \n-error[E0107]: this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/missing-lifetime-specifier.rs:47:45\n    |\n LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());\n@@ -277,7 +277,7 @@ help: add missing lifetime argument\n LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());\n    |                                                        +++++++++\n \n-error[E0107]: this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/missing-lifetime-specifier.rs:47:45\n    |\n LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());\n@@ -295,7 +295,7 @@ help: add missing lifetime argument\n LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());\n    |                                                        +++++++++\n \n-error[E0107]: this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/missing-lifetime-specifier.rs:47:45\n    |\n LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());"}, {"sha": "3116c5a0a1cd758bd279a7f29355dd203c7dd54d", "filename": "tests/ui/suggestions/missing-type-param-used-in-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fmissing-type-param-used-in-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fmissing-type-param-used-in-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fmissing-type-param-used-in-param.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this function takes 2 generic arguments but 1 generic argument was supplied\n+error[E0107]: function takes 2 generic arguments but 1 generic argument was supplied\n   --> $DIR/missing-type-param-used-in-param.rs:6:5\n    |\n LL |     two_type_params::<String>(100);"}, {"sha": "4066cd3b11a382b0d253d302c11eb70aad905187", "filename": "tests/ui/suggestions/move-generic-to-trait-in-method-with-params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fmove-generic-to-trait-in-method-with-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fmove-generic-to-trait-in-method-with-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fmove-generic-to-trait-in-method-with-params.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -12,7 +12,7 @@ impl Foo<i32> for i32 {\n \n fn main() {\n     1.bar::<i32>(0);\n-    //~^ ERROR this method takes 0 generic arguments but 1 generic argument was supplied\n+    //~^ ERROR method takes 0 generic arguments but 1 generic argument was supplied\n     //~| HELP consider moving this generic argument to the `Foo` trait, which takes up to 1 argument\n     //~| HELP remove these generics\n }"}, {"sha": "bfdb35947ef5a4d8c9d360b87646defbbc09b558", "filename": "tests/ui/suggestions/move-generic-to-trait-in-method-with-params.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fmove-generic-to-trait-in-method-with-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fmove-generic-to-trait-in-method-with-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fmove-generic-to-trait-in-method-with-params.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this method takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: method takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/move-generic-to-trait-in-method-with-params.rs:14:7\n    |\n LL |     1.bar::<i32>(0);"}, {"sha": "4e3180e84d2dc0105141185be01e28a7c7ae0d30", "filename": "tests/ui/suggestions/type-ascription-instead-of-path-in-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-path-in-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-path-in-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-path-in-type.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -18,7 +18,7 @@ LL |     let _: Vec<A:B> = A::B;\n    = note: see issue #52662 <https://github.com/rust-lang/rust/issues/52662> for more information\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n-error[E0107]: this struct takes at least 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: struct takes at least 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/type-ascription-instead-of-path-in-type.rs:6:12\n    |\n LL |     let _: Vec<A:B> = A::B;"}, {"sha": "ed262fd39a5a98371629338f6e7b044c1de31aae", "filename": "tests/ui/suggestions/use-type-argument-instead-of-assoc-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fuse-type-argument-instead-of-assoc-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fuse-type-argument-instead-of-assoc-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fuse-type-argument-instead-of-assoc-type.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -6,7 +6,7 @@ pub trait T<X, Y> {\n pub struct Foo {\n     i: Box<dyn T<usize, usize, usize, usize, B=usize>>,\n     //~^ ERROR must be specified\n-    //~| ERROR this trait takes 2 generic arguments but 4 generic arguments were supplied\n+    //~| ERROR trait takes 2 generic arguments but 4 generic arguments were supplied\n }\n \n "}, {"sha": "175a5fbba610c3a46f7a984b75da77fd31212dc9", "filename": "tests/ui/suggestions/use-type-argument-instead-of-assoc-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fuse-type-argument-instead-of-assoc-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fsuggestions%2Fuse-type-argument-instead-of-assoc-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fuse-type-argument-instead-of-assoc-type.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this trait takes 2 generic arguments but 4 generic arguments were supplied\n+error[E0107]: trait takes 2 generic arguments but 4 generic arguments were supplied\n   --> $DIR/use-type-argument-instead-of-assoc-type.rs:7:16\n    |\n LL |     i: Box<dyn T<usize, usize, usize, usize, B=usize>>,"}, {"sha": "d3e6c0b217c9866cb95eab0f712f9a6139a89fee", "filename": "tests/ui/traits/object/vs-lifetime.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftraits%2Fobject%2Fvs-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftraits%2Fobject%2Fvs-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fobject%2Fvs-lifetime.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -9,8 +9,8 @@ fn main() {\n     let _: S<'static, dyn 'static +>;\n     //~^ at least one trait is required for an object type\n     let _: S<'static, 'static>;\n-    //~^ ERROR this struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n-    //~| ERROR this struct takes 1 generic argument but 0 generic arguments were supplied\n+    //~^ ERROR struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n+    //~| ERROR struct takes 1 generic argument but 0 generic arguments were supplied\n     let _: S<dyn 'static +, 'static>;\n     //~^ ERROR type provided when a lifetime was expected\n     //~| ERROR at least one trait is required for an object type"}, {"sha": "a69cd140807ffd6657d8a75da552e9acdb60c247", "filename": "tests/ui/traits/object/vs-lifetime.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftraits%2Fobject%2Fvs-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftraits%2Fobject%2Fvs-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fobject%2Fvs-lifetime.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -4,7 +4,7 @@ error[E0224]: at least one trait is required for an object type\n LL |     let _: S<'static, dyn 'static +>;\n    |                       ^^^^^^^^^^^^^\n \n-error[E0107]: this struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n+error[E0107]: struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n   --> $DIR/vs-lifetime.rs:11:12\n    |\n LL |     let _: S<'static, 'static>;\n@@ -18,7 +18,7 @@ note: struct defined here, with 1 lifetime parameter: `'a`\n LL | struct S<'a, T>(&'a u8, T);\n    |        ^ --\n \n-error[E0107]: this struct takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: struct takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/vs-lifetime.rs:11:12\n    |\n LL |     let _: S<'static, 'static>;"}, {"sha": "ffb778a01414085c955ec144959d17500c2678fa", "filename": "tests/ui/traits/test-2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftraits%2Ftest-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftraits%2Ftest-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Ftest-2.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -7,9 +7,9 @@ impl bar for u32 { fn dup(&self) -> u32 { *self } fn blah<X>(&self) {} }\n \n fn main() {\n     10.dup::<i32>();\n-    //~^ ERROR this method takes 0 generic arguments but 1\n+    //~^ ERROR method takes 0 generic arguments but 1\n     10.blah::<i32, i32>();\n-    //~^ ERROR this method takes 1 generic argument but 2\n+    //~^ ERROR method takes 1 generic argument but 2\n     (Box::new(10) as Box<dyn bar>).dup();\n     //~^ ERROR E0038\n     //~| ERROR E0038"}, {"sha": "6c0e8b8af4b7a888fff8a1a9bf9cf853c1991503", "filename": "tests/ui/traits/test-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftraits%2Ftest-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftraits%2Ftest-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Ftest-2.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this method takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: method takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/test-2.rs:9:8\n    |\n LL |     10.dup::<i32>();\n@@ -12,7 +12,7 @@ note: method defined here, with 0 generic parameters\n LL | trait bar { fn dup(&self) -> Self; fn blah<X>(&self); }\n    |                ^^^\n \n-error[E0107]: this method takes 1 generic argument but 2 generic arguments were supplied\n+error[E0107]: method takes 1 generic argument but 2 generic arguments were supplied\n   --> $DIR/test-2.rs:11:8\n    |\n LL |     10.blah::<i32, i32>();"}, {"sha": "e5a56ccc9e0377a829c6621b12e338b2b902623d", "filename": "tests/ui/transmutability/issue-101739-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftransmutability%2Fissue-101739-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftransmutability%2Fissue-101739-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Fissue-101739-2.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -15,7 +15,7 @@ mod assert {\n         const ASSUME_VISIBILITY: bool,\n     >()\n     where\n-        Dst: BikeshedIntrinsicFrom< //~ ERROR this trait takes at most 3 generic arguments but 6 generic arguments were supplied\n+        Dst: BikeshedIntrinsicFrom< //~ ERROR trait takes at most 3 generic arguments but 6 generic arguments were supplied\n             Src,\n             Context,\n             ASSUME_ALIGNMENT,"}, {"sha": "420a9f33008380be66405c691862ef0e4d646b90", "filename": "tests/ui/transmutability/issue-101739-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftransmutability%2Fissue-101739-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftransmutability%2Fissue-101739-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Fissue-101739-2.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this trait takes at most 3 generic arguments but 6 generic arguments were supplied\n+error[E0107]: trait takes at most 3 generic arguments but 6 generic arguments were supplied\n   --> $DIR/issue-101739-2.rs:18:14\n    |\n LL |           Dst: BikeshedIntrinsicFrom<"}, {"sha": "759a7fd7e05a9da52759954b05e9418a5f9547c7", "filename": "tests/ui/type-alias-enum-variants/enum-variant-generic-args.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-generic-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-generic-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-generic-args.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -62,10 +62,10 @@ fn main() {\n     AliasFixed::TSVariant::<()>(());\n     //~^ ERROR type arguments are not allowed on this type [E0109]\n     AliasFixed::<()>::TSVariant(());\n-    //~^ ERROR this type alias takes 0 generic arguments but 1 generic argument was supplied [E0107]\n+    //~^ ERROR type alias takes 0 generic arguments but 1 generic argument was supplied [E0107]\n     AliasFixed::<()>::TSVariant::<()>(());\n     //~^ ERROR type arguments are not allowed on this type [E0109]\n-    //~| ERROR this type alias takes 0 generic arguments but 1 generic argument was supplied [E0107]\n+    //~| ERROR type alias takes 0 generic arguments but 1 generic argument was supplied [E0107]\n \n     // Struct variant\n \n@@ -80,10 +80,10 @@ fn main() {\n     AliasFixed::SVariant::<()> { v: () };\n     //~^ ERROR type arguments are not allowed on this type [E0109]\n     AliasFixed::<()>::SVariant { v: () };\n-    //~^ ERROR this type alias takes 0 generic arguments but 1 generic argument was supplied [E0107]\n+    //~^ ERROR type alias takes 0 generic arguments but 1 generic argument was supplied [E0107]\n     AliasFixed::<()>::SVariant::<()> { v: () };\n     //~^ ERROR type arguments are not allowed on this type [E0109]\n-    //~| ERROR this type alias takes 0 generic arguments but 1 generic argument was supplied [E0107]\n+    //~| ERROR type alias takes 0 generic arguments but 1 generic argument was supplied [E0107]\n \n     // Unit variant\n \n@@ -98,8 +98,8 @@ fn main() {\n     AliasFixed::UVariant::<()>;\n     //~^ ERROR type arguments are not allowed on this type [E0109]\n     AliasFixed::<()>::UVariant;\n-    //~^ ERROR this type alias takes 0 generic arguments but 1 generic argument was supplied [E0107]\n+    //~^ ERROR type alias takes 0 generic arguments but 1 generic argument was supplied [E0107]\n     AliasFixed::<()>::UVariant::<()>;\n     //~^ ERROR type arguments are not allowed on this type [E0109]\n-    //~| ERROR this type alias takes 0 generic arguments but 1 generic argument was supplied [E0107]\n+    //~| ERROR type alias takes 0 generic arguments but 1 generic argument was supplied [E0107]\n }"}, {"sha": "758ff31ff7022f654a21e3d06de820a59db7cf51", "filename": "tests/ui/type-alias-enum-variants/enum-variant-generic-args.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-generic-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-generic-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-generic-args.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -304,7 +304,7 @@ LL |     AliasFixed::TSVariant::<()>(());\n    |                 |\n    |                 not allowed on this type\n \n-error[E0107]: this type alias takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: type alias takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/enum-variant-generic-args.rs:64:5\n    |\n LL |     AliasFixed::<()>::TSVariant(());\n@@ -318,7 +318,7 @@ note: type alias defined here, with 0 generic parameters\n LL | type AliasFixed = Enum<()>;\n    |      ^^^^^^^^^^\n \n-error[E0107]: this type alias takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: type alias takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/enum-variant-generic-args.rs:66:5\n    |\n LL |     AliasFixed::<()>::TSVariant::<()>(());\n@@ -395,7 +395,7 @@ LL -     AliasFixed::SVariant::<()> { v: () };\n LL +     AliasFixed::<()>::SVariant { v: () };\n    |\n \n-error[E0107]: this type alias takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: type alias takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/enum-variant-generic-args.rs:82:5\n    |\n LL |     AliasFixed::<()>::SVariant { v: () };\n@@ -409,7 +409,7 @@ note: type alias defined here, with 0 generic parameters\n LL | type AliasFixed = Enum<()>;\n    |      ^^^^^^^^^^\n \n-error[E0107]: this type alias takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: type alias takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/enum-variant-generic-args.rs:84:5\n    |\n LL |     AliasFixed::<()>::SVariant::<()> { v: () };\n@@ -470,7 +470,7 @@ LL |     AliasFixed::UVariant::<()>;\n    |                 |\n    |                 not allowed on this type\n \n-error[E0107]: this type alias takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: type alias takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/enum-variant-generic-args.rs:100:5\n    |\n LL |     AliasFixed::<()>::UVariant;\n@@ -484,7 +484,7 @@ note: type alias defined here, with 0 generic parameters\n LL | type AliasFixed = Enum<()>;\n    |      ^^^^^^^^^^\n \n-error[E0107]: this type alias takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: type alias takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/enum-variant-generic-args.rs:102:5\n    |\n LL |     AliasFixed::<()>::UVariant::<()>;"}, {"sha": "c50ea0a086b14561a4af977034911ca276fd0deb", "filename": "tests/ui/typeck/issue-75883.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftypeck%2Fissue-75883.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftypeck%2Fissue-75883.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fissue-75883.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -4,7 +4,7 @@ pub struct UI {}\n \n impl UI {\n     pub fn run() -> Result<_> {\n-        //~^ ERROR: this enum takes 2 generic arguments but 1 generic argument was supplied\n+        //~^ ERROR: enum takes 2 generic arguments but 1 generic argument was supplied\n         //~| ERROR: the placeholder `_` is not allowed within types on item signatures for return types\n         let mut ui = UI {};\n         ui.interact();\n@@ -13,7 +13,7 @@ impl UI {\n     }\n \n     pub fn interact(&mut self) -> Result<_> {\n-        //~^ ERROR: this enum takes 2 generic arguments but 1 generic argument was supplied\n+        //~^ ERROR: enum takes 2 generic arguments but 1 generic argument was supplied\n         //~| ERROR: the placeholder `_` is not allowed within types on item signatures for return types\n         unimplemented!();\n     }"}, {"sha": "a1ed0840675f59e506b7f5b283cb04d67491363a", "filename": "tests/ui/typeck/issue-75883.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftypeck%2Fissue-75883.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftypeck%2Fissue-75883.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fissue-75883.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this enum takes 2 generic arguments but 1 generic argument was supplied\n+error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied\n   --> $DIR/issue-75883.rs:6:21\n    |\n LL |     pub fn run() -> Result<_> {\n@@ -11,7 +11,7 @@ help: add missing generic argument\n LL |     pub fn run() -> Result<_, E> {\n    |                             +++\n \n-error[E0107]: this enum takes 2 generic arguments but 1 generic argument was supplied\n+error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied\n   --> $DIR/issue-75883.rs:15:35\n    |\n LL |     pub fn interact(&mut self) -> Result<_> {"}, {"sha": "7ff9199f63c5c71c038802680bb4ee3f221834d1", "filename": "tests/ui/typeck/typeck-builtin-bound-type-parameters.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftypeck%2Ftypeck-builtin-bound-type-parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftypeck%2Ftypeck-builtin-bound-type-parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Ftypeck-builtin-bound-type-parameters.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,17 +1,17 @@\n fn foo1<T:Copy<U>, U>(x: T) {}\n-//~^ ERROR this trait takes 0 generic arguments but 1 generic argument was supplied\n+//~^ ERROR trait takes 0 generic arguments but 1 generic argument was supplied\n \n trait Trait: Copy<dyn Send> {}\n-//~^ ERROR this trait takes 0 generic arguments but 1 generic argument was supplied\n+//~^ ERROR trait takes 0 generic arguments but 1 generic argument was supplied\n \n struct MyStruct1<T: Copy<T>>;\n-//~^ ERROR this trait takes 0 generic arguments but 1 generic argument was supplied\n+//~^ ERROR trait takes 0 generic arguments but 1 generic argument was supplied\n \n struct MyStruct2<'a, T: Copy<'a>>;\n-//~^ ERROR this trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n+//~^ ERROR trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n \n fn foo2<'a, T:Copy<'a, U>, U>(x: T) {}\n-//~^ ERROR this trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n-//~| ERROR this trait takes 0 generic arguments but 1 generic argument was supplied\n+//~^ ERROR trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n+//~| ERROR trait takes 0 generic arguments but 1 generic argument was supplied\n \n fn main() { }"}, {"sha": "a71fd9536582073c66b214f2719ec50c48f3b5fd", "filename": "tests/ui/typeck/typeck-builtin-bound-type-parameters.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftypeck%2Ftypeck-builtin-bound-type-parameters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftypeck%2Ftypeck-builtin-bound-type-parameters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Ftypeck-builtin-bound-type-parameters.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,44 +1,44 @@\n-error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/typeck-builtin-bound-type-parameters.rs:1:11\n    |\n LL | fn foo1<T:Copy<U>, U>(x: T) {}\n    |           ^^^^--- help: remove these generics\n    |           |\n    |           expected 0 generic arguments\n \n-error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/typeck-builtin-bound-type-parameters.rs:4:14\n    |\n LL | trait Trait: Copy<dyn Send> {}\n    |              ^^^^---------- help: remove these generics\n    |              |\n    |              expected 0 generic arguments\n \n-error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/typeck-builtin-bound-type-parameters.rs:7:21\n    |\n LL | struct MyStruct1<T: Copy<T>>;\n    |                     ^^^^--- help: remove these generics\n    |                     |\n    |                     expected 0 generic arguments\n \n-error[E0107]: this trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/typeck-builtin-bound-type-parameters.rs:10:25\n    |\n LL | struct MyStruct2<'a, T: Copy<'a>>;\n    |                         ^^^^---- help: remove these generics\n    |                         |\n    |                         expected 0 lifetime arguments\n \n-error[E0107]: this trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n+error[E0107]: trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/typeck-builtin-bound-type-parameters.rs:13:15\n    |\n LL | fn foo2<'a, T:Copy<'a, U>, U>(x: T) {}\n    |               ^^^^ -- help: remove this lifetime argument\n    |               |\n    |               expected 0 lifetime arguments\n \n-error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/typeck-builtin-bound-type-parameters.rs:13:15\n    |\n LL | fn foo2<'a, T:Copy<'a, U>, U>(x: T) {}"}, {"sha": "90b12ffdf772e239c2a808b57f3ff2d47db81c15", "filename": "tests/ui/typeck/typeck_type_placeholder_lifetime_1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_lifetime_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_lifetime_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_lifetime_1.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -7,5 +7,5 @@ struct Foo<'a, T:'a> {\n \n pub fn main() {\n     let c: Foo<_, _> = Foo { r: &5 };\n-    //~^ ERROR this struct takes 1 generic argument but 2 generic arguments were supplied\n+    //~^ ERROR struct takes 1 generic argument but 2 generic arguments were supplied\n }"}, {"sha": "c4e4aed20673e07adccf671f077f94893e08c6b8", "filename": "tests/ui/typeck/typeck_type_placeholder_lifetime_1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_lifetime_1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_lifetime_1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_lifetime_1.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this struct takes 1 generic argument but 2 generic arguments were supplied\n+error[E0107]: struct takes 1 generic argument but 2 generic arguments were supplied\n   --> $DIR/typeck_type_placeholder_lifetime_1.rs:9:12\n    |\n LL |     let c: Foo<_, _> = Foo { r: &5 };"}, {"sha": "e361312ddba200c272c1aeecd5effc49f98f06a7", "filename": "tests/ui/typeck/typeck_type_placeholder_lifetime_2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_lifetime_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_lifetime_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_lifetime_2.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -7,5 +7,5 @@ struct Foo<'a, T:'a> {\n \n pub fn main() {\n     let c: Foo<_, usize> = Foo { r: &5 };\n-    //~^ ERROR this struct takes 1 generic argument but 2 generic arguments were supplied\n+    //~^ ERROR struct takes 1 generic argument but 2 generic arguments were supplied\n }"}, {"sha": "302231777bdfcaa9daea3361e9547aa9b602808e", "filename": "tests/ui/typeck/typeck_type_placeholder_lifetime_2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_lifetime_2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_lifetime_2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_lifetime_2.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this struct takes 1 generic argument but 2 generic arguments were supplied\n+error[E0107]: struct takes 1 generic argument but 2 generic arguments were supplied\n   --> $DIR/typeck_type_placeholder_lifetime_2.rs:9:12\n    |\n LL |     let c: Foo<_, usize> = Foo { r: &5 };"}, {"sha": "6ab6580c0e606ecdd42d8107bfa13ad8e4066e9b", "filename": "tests/ui/ufcs/ufcs-qpath-missing-params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fufcs%2Fufcs-qpath-missing-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fufcs%2Fufcs-qpath-missing-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fufcs%2Fufcs-qpath-missing-params.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -15,6 +15,6 @@ fn main() {\n       //~^ ERROR missing generics for\n \n     <String as IntoCow>::into_cow::<str>(\"foo\".to_string());\n-    //~^ ERROR this method takes 0 generic arguments but 1\n+    //~^ ERROR method takes 0 generic arguments but 1\n     //~| ERROR missing generics for\n }"}, {"sha": "2338871218b1cb00441d98c99d58c2b5148085b2", "filename": "tests/ui/ufcs/ufcs-qpath-missing-params.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fufcs%2Fufcs-qpath-missing-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Fufcs%2Fufcs-qpath-missing-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fufcs%2Fufcs-qpath-missing-params.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -30,7 +30,7 @@ help: add missing generic argument\n LL |     <String as IntoCow<B>>::into_cow::<str>(\"foo\".to_string());\n    |                       +++\n \n-error[E0107]: this method takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: method takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/ufcs-qpath-missing-params.rs:17:26\n    |\n LL |     <String as IntoCow>::into_cow::<str>(\"foo\".to_string());"}, {"sha": "c575f507704eb413d786f7bac0cb69ba682e555c", "filename": "tests/ui/unboxed-closures/unboxed-closure-sugar-region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-region.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -28,7 +28,7 @@ fn test<'a,'b>() {\n }\n \n fn test2(x: &dyn Foo<(isize,),Output=()>, y: &dyn Foo(isize)) {\n-    //~^ ERROR this trait takes 1 lifetime argument but 0 lifetime arguments were supplied\n+    //~^ ERROR trait takes 1 lifetime argument but 0 lifetime arguments were supplied\n     // Here, the omitted lifetimes are expanded to distinct things.\n     same_type(x, y)\n }"}, {"sha": "8814617814c902418217611b1cadf83229fe1815", "filename": "tests/ui/unboxed-closures/unboxed-closure-sugar-region.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-region.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-region.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-region.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this trait takes 1 lifetime argument but 0 lifetime arguments were supplied\n+error[E0107]: trait takes 1 lifetime argument but 0 lifetime arguments were supplied\n   --> $DIR/unboxed-closure-sugar-region.rs:30:51\n    |\n LL | fn test2(x: &dyn Foo<(isize,),Output=()>, y: &dyn Foo(isize)) {"}, {"sha": "14d5646b50865bdf1478dfcdedd3dc5d7e6e9935", "filename": "tests/ui/unboxed-closures/unboxed-closure-sugar-used-on-struct-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -7,7 +7,7 @@ struct Bar<A> {\n fn bar() {\n     let x: Box<Bar()> = panic!();\n     //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n-    //~| ERROR this struct takes 1 generic argument but 0 generic arguments\n+    //~| ERROR struct takes 1 generic argument but 0 generic arguments\n }\n \n fn main() { }"}, {"sha": "27b22c2127b9f1bac519ac55deefdb0fee79dbd2", "filename": "tests/ui/unboxed-closures/unboxed-closure-sugar-used-on-struct-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -4,7 +4,7 @@ error[E0214]: parenthesized type parameters may only be used with a `Fn` trait\n LL |     let x: Box<Bar()> = panic!();\n    |                ^^^^^ only `Fn` traits may use parentheses\n \n-error[E0107]: this struct takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: struct takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/unboxed-closure-sugar-used-on-struct-1.rs:8:16\n    |\n LL |     let x: Box<Bar()> = panic!();"}, {"sha": "657b29204cda71354ce8e844289793b9d33ff639", "filename": "tests/ui/unboxed-closures/unboxed-closure-sugar-used-on-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -6,7 +6,7 @@ struct Bar<A> {\n \n fn foo(b: Box<Bar()>) {\n     //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n-    //~| ERROR this struct takes 1 generic argument but 0 generic arguments\n+    //~| ERROR struct takes 1 generic argument but 0 generic arguments\n }\n \n fn main() { }"}, {"sha": "94e42a66c9e2fb1a8f5be76166ef918de819b3d3", "filename": "tests/ui/unboxed-closures/unboxed-closure-sugar-used-on-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -4,7 +4,7 @@ error[E0214]: parenthesized type parameters may only be used with a `Fn` trait\n LL | fn foo(b: Box<Bar()>) {\n    |               ^^^^^ only `Fn` traits may use parentheses\n \n-error[E0107]: this struct takes 1 generic argument but 0 generic arguments were supplied\n+error[E0107]: struct takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/unboxed-closure-sugar-used-on-struct.rs:7:15\n    |\n LL | fn foo(b: Box<Bar()>) {"}, {"sha": "dd47ae73a3835ba57af45c3ecd37b0e1b06e9604", "filename": "tests/ui/unboxed-closures/unboxed-closure-sugar-wrong-number-number-type-parameters-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-number-number-type-parameters-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-number-number-type-parameters-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-number-number-type-parameters-3.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -3,7 +3,7 @@\n trait Three<A,B,C> { fn dummy(&self) -> (A,B,C); }\n \n fn foo(_: &dyn Three())\n-//~^ ERROR this trait takes 3 generic arguments but 1 generic argument\n+//~^ ERROR trait takes 3 generic arguments but 1 generic argument\n //~| ERROR associated type `Output` not found\n {}\n "}, {"sha": "5d7fe3fa533c261bd8ab42528afbffb8403fc2a6", "filename": "tests/ui/unboxed-closures/unboxed-closure-sugar-wrong-number-number-type-parameters-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-number-number-type-parameters-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-number-number-type-parameters-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-number-number-type-parameters-3.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this trait takes 3 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 3 generic arguments but 1 generic argument was supplied\n   --> $DIR/unboxed-closure-sugar-wrong-number-number-type-parameters-3.rs:5:16\n    |\n LL | fn foo(_: &dyn Three())"}, {"sha": "2c7e12f3257597f58b0ca802a041ba11ba8d2c44", "filename": "tests/ui/unboxed-closures/unboxed-closure-sugar-wrong-number-number-type-parameters.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-number-number-type-parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-number-number-type-parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-number-number-type-parameters.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -3,25 +3,25 @@\n trait Zero { fn dummy(&self); }\n \n fn foo1(_: dyn Zero()) {\n-    //~^ ERROR this trait takes 0 generic arguments but 1 generic argument\n+    //~^ ERROR trait takes 0 generic arguments but 1 generic argument\n     //~| ERROR associated type `Output` not found for `Zero`\n }\n \n fn foo2(_: dyn Zero<usize>) {\n-    //~^ ERROR this trait takes 0 generic arguments but 1 generic argument\n+    //~^ ERROR trait takes 0 generic arguments but 1 generic argument\n }\n \n fn foo3(_: dyn Zero <   usize   >) {\n-    //~^ ERROR this trait takes 0 generic arguments but 1 generic argument\n+    //~^ ERROR trait takes 0 generic arguments but 1 generic argument\n }\n \n fn foo4(_: dyn Zero(usize)) {\n-    //~^ ERROR this trait takes 0 generic arguments but 1 generic argument\n+    //~^ ERROR trait takes 0 generic arguments but 1 generic argument\n     //~| ERROR associated type `Output` not found for `Zero`\n }\n \n fn foo5(_: dyn Zero (   usize   )) {\n-    //~^ ERROR this trait takes 0 generic arguments but 1 generic argument\n+    //~^ ERROR trait takes 0 generic arguments but 1 generic argument\n     //~| ERROR associated type `Output` not found for `Zero`\n }\n "}, {"sha": "50b90553aa7180cd8b7007a3e9060cfbaf8813ac", "filename": "tests/ui/unboxed-closures/unboxed-closure-sugar-wrong-number-number-type-parameters.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-number-number-type-parameters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-number-number-type-parameters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-number-number-type-parameters.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/unboxed-closure-sugar-wrong-number-number-type-parameters.rs:5:16\n    |\n LL | fn foo1(_: dyn Zero()) {\n@@ -18,7 +18,7 @@ error[E0220]: associated type `Output` not found for `Zero`\n LL | fn foo1(_: dyn Zero()) {\n    |                ^^^^^^ associated type `Output` not found\n \n-error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/unboxed-closure-sugar-wrong-number-number-type-parameters.rs:10:16\n    |\n LL | fn foo2(_: dyn Zero<usize>) {\n@@ -32,7 +32,7 @@ note: trait defined here, with 0 generic parameters\n LL | trait Zero { fn dummy(&self); }\n    |       ^^^^\n \n-error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/unboxed-closure-sugar-wrong-number-number-type-parameters.rs:14:16\n    |\n LL | fn foo3(_: dyn Zero <   usize   >) {\n@@ -46,7 +46,7 @@ note: trait defined here, with 0 generic parameters\n LL | trait Zero { fn dummy(&self); }\n    |       ^^^^\n \n-error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/unboxed-closure-sugar-wrong-number-number-type-parameters.rs:18:16\n    |\n LL | fn foo4(_: dyn Zero(usize)) {\n@@ -66,7 +66,7 @@ error[E0220]: associated type `Output` not found for `Zero`\n LL | fn foo4(_: dyn Zero(usize)) {\n    |                ^^^^^^^^^^^ associated type `Output` not found\n \n-error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/unboxed-closure-sugar-wrong-number-number-type-parameters.rs:23:16\n    |\n LL | fn foo5(_: dyn Zero (   usize   )) {"}, {"sha": "ad60b0a0c7753faa2e6e07f718b90c0e47e2d392", "filename": "tests/ui/unboxed-closures/unboxed-closure-sugar-wrong-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-trait.rs?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -3,7 +3,7 @@\n trait Trait {}\n \n fn f<F:Trait(isize) -> isize>(x: F) {}\n-//~^ ERROR this trait takes 0 generic arguments but 1 generic argument\n+//~^ ERROR trait takes 0 generic arguments but 1 generic argument\n //~| ERROR associated type `Output` not found for `Trait`\n \n fn main() {}"}, {"sha": "130b193d69c93890e37e1010a24c66290ae8db83", "filename": "tests/ui/unboxed-closures/unboxed-closure-sugar-wrong-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c77cf40df0bb75aceb85ab4908fbdb103538df9a/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-trait.stderr?ref=c77cf40df0bb75aceb85ab4908fbdb103538df9a", "patch": "@@ -1,4 +1,4 @@\n-error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+error[E0107]: trait takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/unboxed-closure-sugar-wrong-trait.rs:5:8\n    |\n LL | fn f<F:Trait(isize) -> isize>(x: F) {}"}]}