{"sha": "1b62bb67da5f771008e23346b0c77750ef7f8c18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiNjJiYjY3ZGE1Zjc3MTAwOGUyMzM0NmIwYzc3NzUwZWY3ZjhjMTg=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-04-30T22:23:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-30T22:23:19Z"}, "message": "Rollup merge of #71691 - ecstatic-morse:const-unreachable, r=oli-obk,RalfJung\n\nAllow `Unreachable` terminators unconditionally in const-checking\n\nIf we ever actually reach an `Unreachable` terminator while executing, the MIR is ill-formed or the user's program is UB due to something like `unreachable_unchecked`. I don't think we need to forbid these in `qualify_min_const_fn`.\n\nr? @oli-obk", "tree": {"sha": "3c97b72a937b7f536c3be0d7a139f6ed423a184b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c97b72a937b7f536c3be0d7a139f6ed423a184b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b62bb67da5f771008e23346b0c77750ef7f8c18", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeq0/XCRBK7hj4Ov3rIwAAdHIIAEE/nQyz41wyTUGoHr1RzegX\nd1XkzR6rkFOHD8mMqBYP2dz3ut6FQXwdbYYVhdPQ9XJ76z71DEvCvrybs3oeJ6b0\ntoR0AjvA79IQ0FSe8wCsp1+kbflPqyjpvrBN36Uq70JLvVO9FptyS9X9kdeOuryd\nZgcdo6d3T/vtpZxP32a0QfBbuvKDWl4GJmOvKAULS4NI3I+ymVg97PTWbwZDILiM\nTE6/vMaUboZGRc2XjnqJHuC67IgfKU+K+qOZafxwKRoZWauKs0Jp1s+RKyWuLclA\nGqA8/DrEabOoMkbACvs1pA3qNkx3ofM/mP5WITv59MC3A4lbGzfsxsxDbi6hItk=\n=sCBz\n-----END PGP SIGNATURE-----\n", "payload": "tree 3c97b72a937b7f536c3be0d7a139f6ed423a184b\nparent a8e0511b3288f40570812fe6524e0d80cf630f2c\nparent a1aff18689470d733c5d9bdf1982a5ac3d4eb566\nauthor Tyler Mandry <tmandry@gmail.com> 1588285399 -0700\ncommitter GitHub <noreply@github.com> 1588285399 -0700\n\nRollup merge of #71691 - ecstatic-morse:const-unreachable, r=oli-obk,RalfJung\n\nAllow `Unreachable` terminators unconditionally in const-checking\n\nIf we ever actually reach an `Unreachable` terminator while executing, the MIR is ill-formed or the user's program is UB due to something like `unreachable_unchecked`. I don't think we need to forbid these in `qualify_min_const_fn`.\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b62bb67da5f771008e23346b0c77750ef7f8c18", "html_url": "https://github.com/rust-lang/rust/commit/1b62bb67da5f771008e23346b0c77750ef7f8c18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b62bb67da5f771008e23346b0c77750ef7f8c18/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8e0511b3288f40570812fe6524e0d80cf630f2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8e0511b3288f40570812fe6524e0d80cf630f2c", "html_url": "https://github.com/rust-lang/rust/commit/a8e0511b3288f40570812fe6524e0d80cf630f2c"}, {"sha": "a1aff18689470d733c5d9bdf1982a5ac3d4eb566", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1aff18689470d733c5d9bdf1982a5ac3d4eb566", "html_url": "https://github.com/rust-lang/rust/commit/a1aff18689470d733c5d9bdf1982a5ac3d4eb566"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "c9982aeaa0839636c40b290b4e625627fc66dba9", "filename": "src/librustc_mir/transform/qualify_min_const_fn.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1b62bb67da5f771008e23346b0c77750ef7f8c18/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b62bb67da5f771008e23346b0c77750ef7f8c18/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs?ref=1b62bb67da5f771008e23346b0c77750ef7f8c18", "patch": "@@ -340,7 +340,8 @@ fn check_terminator(\n         | TerminatorKind::FalseUnwind { .. }\n         | TerminatorKind::Goto { .. }\n         | TerminatorKind::Return\n-        | TerminatorKind::Resume => Ok(()),\n+        | TerminatorKind::Resume\n+        | TerminatorKind::Unreachable => Ok(()),\n \n         TerminatorKind::Drop { location, .. } => check_place(tcx, *location, span, def_id, body),\n         TerminatorKind::DropAndReplace { location, value, .. } => {\n@@ -356,12 +357,7 @@ fn check_terminator(\n             check_operand(tcx, discr, span, def_id, body)\n         }\n \n-        // FIXME(ecstaticmorse): We probably want to allow `Unreachable` unconditionally.\n-        TerminatorKind::Unreachable if feature_allowed(tcx, def_id, sym::const_if_match) => Ok(()),\n-\n-        TerminatorKind::Abort | TerminatorKind::Unreachable => {\n-            Err((span, \"const fn with unreachable code is not stable\".into()))\n-        }\n+        TerminatorKind::Abort => Err((span, \"abort is not stable in const fn\".into())),\n         TerminatorKind::GeneratorDrop | TerminatorKind::Yield { .. } => {\n             Err((span, \"const fn generators are unstable\".into()))\n         }"}]}