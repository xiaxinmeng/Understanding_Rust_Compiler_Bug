{"sha": "1cd8d1e2b95e95d4fb7e3340d174532d1aee9d7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjZDhkMWUyYjk1ZTk1ZDRmYjdlMzM0MGQxNzQ1MzJkMWFlZTlkN2M=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-04-18T21:44:02Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-04-18T21:44:02Z"}, "message": "core::iter: Move ExactSizeIterator impls to each struct definition", "tree": {"sha": "a587d44d9b343cdd2a722b88dbc080ab359b40bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a587d44d9b343cdd2a722b88dbc080ab359b40bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cd8d1e2b95e95d4fb7e3340d174532d1aee9d7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cd8d1e2b95e95d4fb7e3340d174532d1aee9d7c", "html_url": "https://github.com/rust-lang/rust/commit/1cd8d1e2b95e95d4fb7e3340d174532d1aee9d7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cd8d1e2b95e95d4fb7e3340d174532d1aee9d7c/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "085fddac50a808d2013a86b5ae11297cd31adcb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/085fddac50a808d2013a86b5ae11297cd31adcb3", "html_url": "https://github.com/rust-lang/rust/commit/085fddac50a808d2013a86b5ae11297cd31adcb3"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "abc199cd1828baf2915c7706306faf45c0779927", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/1cd8d1e2b95e95d4fb7e3340d174532d1aee9d7c/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cd8d1e2b95e95d4fb7e3340d174532d1aee9d7c/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=1cd8d1e2b95e95d4fb7e3340d174532d1aee9d7c", "patch": "@@ -333,25 +333,6 @@ mod range;\n mod sources;\n mod traits;\n \n-// All adaptors that preserve the size of the wrapped iterator are fine\n-// Adaptors that may overflow in `size_hint` are not, i.e. `Chain`.\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<I> ExactSizeIterator for Enumerate<I> where I: ExactSizeIterator {}\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<I: ExactSizeIterator, F> ExactSizeIterator for Inspect<I, F> where\n-    F: FnMut(&I::Item),\n-{}\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<I> ExactSizeIterator for Rev<I>\n-    where I: ExactSizeIterator + DoubleEndedIterator {}\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<B, I: ExactSizeIterator, F> ExactSizeIterator for Map<I, F> where\n-    F: FnMut(I::Item) -> B,\n-{}\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<A, B> ExactSizeIterator for Zip<A, B>\n-    where A: ExactSizeIterator, B: ExactSizeIterator {}\n-\n /// An double-ended iterator with the direction inverted.\n ///\n /// This `struct` is created by the [`rev()`] method on [`Iterator`]. See its\n@@ -382,6 +363,10 @@ impl<I> DoubleEndedIterator for Rev<I> where I: DoubleEndedIterator {\n     fn next_back(&mut self) -> Option<<I as Iterator>::Item> { self.iter.next() }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<I> ExactSizeIterator for Rev<I>\n+    where I: ExactSizeIterator + DoubleEndedIterator {}\n+\n /// An iterator that clones the elements of an underlying iterator.\n ///\n /// This `struct` is created by the [`cloned()`] method on [`Iterator`]. See its\n@@ -679,6 +664,10 @@ impl<A, B> DoubleEndedIterator for Zip<A, B> where\n     }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<A, B> ExactSizeIterator for Zip<A, B>\n+    where A: ExactSizeIterator, B: ExactSizeIterator {}\n+\n /// An iterator that maps the values of `iter` with `f`.\n ///\n /// This `struct` is created by the [`map()`] method on [`Iterator`]. See its\n@@ -771,6 +760,10 @@ impl<B, I: DoubleEndedIterator, F> DoubleEndedIterator for Map<I, F> where\n     }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<B, I: ExactSizeIterator, F> ExactSizeIterator for Map<I, F>\n+    where F: FnMut(I::Item) -> B {}\n+\n /// An iterator that filters the elements of `iter` with `predicate`.\n ///\n /// This `struct` is created by the [`filter()`] method on [`Iterator`]. See its\n@@ -966,6 +959,9 @@ impl<I> DoubleEndedIterator for Enumerate<I> where\n     }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<I> ExactSizeIterator for Enumerate<I> where I: ExactSizeIterator {}\n+\n /// An iterator with a `peek()` that returns an optional reference to the next\n /// element.\n ///\n@@ -1655,3 +1651,7 @@ impl<I: DoubleEndedIterator, F> DoubleEndedIterator for Inspect<I, F>\n         self.do_inspect(next)\n     }\n }\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<I: ExactSizeIterator, F> ExactSizeIterator for Inspect<I, F>\n+    where F: FnMut(&I::Item) {}"}]}