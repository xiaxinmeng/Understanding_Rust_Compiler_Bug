{"sha": "ce86f907ef647ff4cb8c733ec6aae63b69e444a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlODZmOTA3ZWY2NDdmZjRjYjhjNzMzZWM2YWFlNjNiNjllNDQ0YTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-22T13:00:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-22T13:00:38Z"}, "message": "Auto merge of #5632 - flip1995:rustup, r=phansch\n\nRustup\n\nchangelog: none", "tree": {"sha": "015327a85cce9a2a1abdfc05ff3533a926b097bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/015327a85cce9a2a1abdfc05ff3533a926b097bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce86f907ef647ff4cb8c733ec6aae63b69e444a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce86f907ef647ff4cb8c733ec6aae63b69e444a7", "html_url": "https://github.com/rust-lang/rust/commit/ce86f907ef647ff4cb8c733ec6aae63b69e444a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce86f907ef647ff4cb8c733ec6aae63b69e444a7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "780572bc8df23d7141545e06cccc561fd586f2b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/780572bc8df23d7141545e06cccc561fd586f2b7", "html_url": "https://github.com/rust-lang/rust/commit/780572bc8df23d7141545e06cccc561fd586f2b7"}, {"sha": "6b3cf63bf568cab4f8e05ea483ad97d5ea0e2eec", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b3cf63bf568cab4f8e05ea483ad97d5ea0e2eec", "html_url": "https://github.com/rust-lang/rust/commit/6b3cf63bf568cab4f8e05ea483ad97d5ea0e2eec"}], "stats": {"total": 31, "additions": 14, "deletions": 17}, "files": [{"sha": "0a02aa7533c176e4ebd13ec012f192e379a599f0", "filename": "clippy_lints/src/future_not_send.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce86f907ef647ff4cb8c733ec6aae63b69e444a7/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce86f907ef647ff4cb8c733ec6aae63b69e444a7/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffuture_not_send.rs?ref=ce86f907ef647ff4cb8c733ec6aae63b69e444a7", "patch": "@@ -3,7 +3,7 @@ use rustc_hir::intravisit::FnKind;\n use rustc_hir::{Body, FnDecl, HirId};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_middle::ty::{Opaque, Predicate::Trait, ToPolyTraitRef};\n+use rustc_middle::ty::{Opaque, PredicateKind::Trait, ToPolyTraitRef};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::{sym, Span};\n use rustc_trait_selection::traits::error_reporting::suggestions::InferCtxtExt;\n@@ -91,7 +91,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for FutureNotSend {\n                             cx.tcx.infer_ctxt().enter(|infcx| {\n                                 for FulfillmentError { obligation, .. } in send_errors {\n                                     infcx.maybe_note_obligation_cause_for_async_await(db, &obligation);\n-                                    if let Trait(trait_pred, _) = obligation.predicate {\n+                                    if let Trait(trait_pred, _) = obligation.predicate.kind() {\n                                         let trait_ref = trait_pred.to_poly_trait_ref();\n                                         db.note(&*format!(\n                                             \"`{}` doesn't implement `{}`\","}, {"sha": "32b3b7f7947f695eca2b3d4df94c8cd64f238ddc", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ce86f907ef647ff4cb8c733ec6aae63b69e444a7/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce86f907ef647ff4cb8c733ec6aae63b69e444a7/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=ce86f907ef647ff4cb8c733ec6aae63b69e444a7", "patch": "@@ -18,7 +18,7 @@ use rustc_lint::{LateContext, LateLintPass, Lint, LintContext};\n use rustc_middle::hir::map::Map;\n use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::subst::GenericArgKind;\n-use rustc_middle::ty::{self, Predicate, Ty};\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{sym, SymbolStr};\n@@ -1496,17 +1496,14 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Methods {\n             if let ty::Opaque(def_id, _) = ret_ty.kind {\n                 // one of the associated types must be Self\n                 for predicate in cx.tcx.predicates_of(def_id).predicates {\n-                    match predicate {\n-                        (Predicate::Projection(poly_projection_predicate), _) => {\n-                            let binder = poly_projection_predicate.ty();\n-                            let associated_type = binder.skip_binder();\n-\n-                            // walk the associated type and check for Self\n-                            if contains_self_ty(associated_type) {\n-                                return;\n-                            }\n-                        },\n-                        (_, _) => {},\n+                    if let ty::PredicateKind::Projection(poly_projection_predicate) = predicate.0.kind() {\n+                        let binder = poly_projection_predicate.ty();\n+                        let associated_type = binder.skip_binder();\n+\n+                        // walk the associated type and check for Self\n+                        if contains_self_ty(associated_type) {\n+                            return;\n+                        }\n                     }\n                 }\n             }"}, {"sha": "0edc402e4b2f0ae2b7e5c4ba638e3f4573a87103", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce86f907ef647ff4cb8c733ec6aae63b69e444a7/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce86f907ef647ff4cb8c733ec6aae63b69e444a7/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=ce86f907ef647ff4cb8c733ec6aae63b69e444a7", "patch": "@@ -114,7 +114,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n         let preds = traits::elaborate_predicates(cx.tcx, cx.param_env.caller_bounds.iter().copied())\n             .filter(|p| !p.is_global())\n             .filter_map(|obligation| {\n-                if let ty::Predicate::Trait(poly_trait_ref, _) = obligation.predicate {\n+                if let ty::PredicateKind::Trait(poly_trait_ref, _) = obligation.predicate.kind() {\n                     if poly_trait_ref.def_id() == sized_trait || poly_trait_ref.skip_binder().has_escaping_bound_vars()\n                     {\n                         return None;"}, {"sha": "6c1488664bf0086d9faf2b8a5e049aef450a57c2", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce86f907ef647ff4cb8c733ec6aae63b69e444a7/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce86f907ef647ff4cb8c733ec6aae63b69e444a7/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=ce86f907ef647ff4cb8c733ec6aae63b69e444a7", "patch": "@@ -1299,7 +1299,7 @@ pub fn is_must_use_ty<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, ty: Ty<'tcx>) -> boo\n         ty::Tuple(ref substs) => substs.types().any(|ty| is_must_use_ty(cx, ty)),\n         ty::Opaque(ref def_id, _) => {\n             for (predicate, _) in cx.tcx.predicates_of(*def_id).predicates {\n-                if let ty::Predicate::Trait(ref poly_trait_predicate, _) = predicate {\n+                if let ty::PredicateKind::Trait(ref poly_trait_predicate, _) = predicate.kind() {\n                     if must_use_attr(&cx.tcx.get_attrs(poly_trait_predicate.skip_binder().trait_ref.def_id)).is_some() {\n                         return true;\n                     }"}, {"sha": "191ea4315a6b5a8a29e56f6440f88115c466e8b9", "filename": "setup-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce86f907ef647ff4cb8c733ec6aae63b69e444a7/setup-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ce86f907ef647ff4cb8c733ec6aae63b69e444a7/setup-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/setup-toolchain.sh?ref=ce86f907ef647ff4cb8c733ec6aae63b69e444a7", "patch": "@@ -32,5 +32,5 @@ else\n     TOOLCHAIN=()\n fi\n \n-rustup-toolchain-install-master -f -n master \"${TOOLCHAIN[@]}\" -c rustc-dev -- \"$RUST_COMMIT\"\n+rustup-toolchain-install-master -f -n master \"${TOOLCHAIN[@]}\" -c rustc-dev -c llvm-tools -- \"$RUST_COMMIT\"\n rustup override set master"}]}