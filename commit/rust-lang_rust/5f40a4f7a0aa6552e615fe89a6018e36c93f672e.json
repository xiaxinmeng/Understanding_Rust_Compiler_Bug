{"sha": "5f40a4f7a0aa6552e615fe89a6018e36c93f672e", "node_id": "C_kwDOAAsO6NoAKDVmNDBhNGY3YTBhYTY1NTJlNjE1ZmU4OWE2MDE4ZTM2YzkzZjY3MmU", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-07-25T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-07-25T12:14:49Z"}, "message": "Remove reachable coverage without counters\n\nRemove reachable coverage without counters to maintain invariant that\neither there is no coverage at all or there is a live coverage counter\nleft that provides the function source hash.\n\nThe motivating example would be a following closure:\n\n```rust\n    let f = |x: bool| {\n        debug_assert!(x);\n    };\n```\n\nWhich, with span changes from #93967, with disabled debug assertions,\nafter the final CFG simplifications but before removal of dead blocks,\ngives rise to MIR:\n\n```rust\nfn main::{closure#0}(_1: &[closure@a.rs:2:13: 2:22], _2: bool) -> () {\n    debug x => _2;\n    let mut _0: ();\n\n    bb0: {\n        Coverage::Expression(4294967295) = 1 - 2;\n        return;\n    }\n\n    ...\n}\n```", "tree": {"sha": "9b60a65fee4fb440a11b88cb7edeaa0836b5bfb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b60a65fee4fb440a11b88cb7edeaa0836b5bfb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f40a4f7a0aa6552e615fe89a6018e36c93f672e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f40a4f7a0aa6552e615fe89a6018e36c93f672e", "html_url": "https://github.com/rust-lang/rust/commit/5f40a4f7a0aa6552e615fe89a6018e36c93f672e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f40a4f7a0aa6552e615fe89a6018e36c93f672e/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f320a224e827b400be25966755a621779f797cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f320a224e827b400be25966755a621779f797cc", "html_url": "https://github.com/rust-lang/rust/commit/2f320a224e827b400be25966755a621779f797cc"}], "stats": {"total": 60, "additions": 42, "deletions": 18}, "files": [{"sha": "180f4c7dcd6e80d1a1dac8e1c0f7c0623147ebff", "filename": "compiler/rustc_mir_transform/src/simplify.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5f40a4f7a0aa6552e615fe89a6018e36c93f672e/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f40a4f7a0aa6552e615fe89a6018e36c93f672e/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify.rs?ref=5f40a4f7a0aa6552e615fe89a6018e36c93f672e", "patch": "@@ -315,7 +315,7 @@ pub fn remove_dead_blocks<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n /// with `0` executions.\n ///\n /// If there are no live `Counter` `Coverage` statements remaining, we remove\n-/// dead `Coverage` statements along with the dead blocks. Since at least one\n+/// `Coverage` statements along with the dead blocks. Since at least one\n /// counter per function is required by LLVM (and necessary, to add the\n /// `function_hash` to the counter's call to the LLVM intrinsic\n /// `instrprof.increment()`).\n@@ -342,6 +342,16 @@ fn save_unreachable_coverage(\n         }\n     }\n \n+    for block in &mut basic_blocks.raw[..first_dead_block] {\n+        for statement in &mut block.statements {\n+            let StatementKind::Coverage(_) = &statement.kind else { continue };\n+            let instance = statement.source_info.scope.inlined_instance(source_scopes);\n+            if !live.contains(&instance) {\n+                statement.make_nop();\n+            }\n+        }\n+    }\n+\n     if live.is_empty() {\n         return;\n     }"}, {"sha": "effdef80e8eb65628a784f09a9865d4c86d4f77c", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.inline-dead.txt", "status": "modified", "additions": 23, "deletions": 16, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/5f40a4f7a0aa6552e615fe89a6018e36c93f672e/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.inline-dead.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5f40a4f7a0aa6552e615fe89a6018e36c93f672e/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.inline-dead.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.inline-dead.txt?ref=5f40a4f7a0aa6552e615fe89a6018e36c93f672e", "patch": "@@ -1,21 +1,28 @@\n     1|       |// Regression test for issue #98833.\n-    2|       |// compile-flags: -Zinline-mir\n+    2|       |// compile-flags: -Zinline-mir -Cdebug-assertions=off\n     3|       |\n     4|      1|fn main() {\n     5|      1|    println!(\"{}\", live::<false>());\n-    6|      1|}\n-    7|       |\n-    8|       |#[inline]\n-    9|      1|fn live<const B: bool>() -> u32 {\n-   10|      1|    if B {\n-   11|      0|        dead()\n-   12|       |    } else {\n-   13|      1|        0\n-   14|       |    }\n-   15|      1|}\n-   16|       |\n-   17|       |#[inline]\n-   18|      0|fn dead() -> u32 {\n-   19|      0|    42\n-   20|      0|}\n+    6|      1|\n+    7|      1|    let f = |x: bool| {\n+    8|       |        debug_assert!(\n+    9|       |            x\n+   10|       |        );\n+   11|      1|    };\n+   12|      1|    f(false);\n+   13|      1|}\n+   14|       |\n+   15|       |#[inline]\n+   16|      1|fn live<const B: bool>() -> u32 {\n+   17|      1|    if B {\n+   18|      0|        dead()\n+   19|       |    } else {\n+   20|      1|        0\n+   21|       |    }\n+   22|      1|}\n+   23|       |\n+   24|       |#[inline]\n+   25|      0|fn dead() -> u32 {\n+   26|      0|    42\n+   27|      0|}\n "}, {"sha": "854fa062967526a5b530b4f68ca7883c1907f73a", "filename": "src/test/run-make-fulldeps/coverage/inline-dead.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5f40a4f7a0aa6552e615fe89a6018e36c93f672e/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Finline-dead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f40a4f7a0aa6552e615fe89a6018e36c93f672e/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Finline-dead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Finline-dead.rs?ref=5f40a4f7a0aa6552e615fe89a6018e36c93f672e", "patch": "@@ -1,8 +1,15 @@\n // Regression test for issue #98833.\n-// compile-flags: -Zinline-mir\n+// compile-flags: -Zinline-mir -Cdebug-assertions=off\n \n fn main() {\n     println!(\"{}\", live::<false>());\n+\n+    let f = |x: bool| {\n+        debug_assert!(\n+            x\n+        );\n+    };\n+    f(false);\n }\n \n #[inline]"}]}