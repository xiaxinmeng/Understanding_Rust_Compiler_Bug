{"sha": "c7039dbb2b601cff4a929e01c4941b00becadab2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3MDM5ZGJiMmI2MDFjZmY0YTkyOWUwMWM0OTQxYjAwYmVjYWRhYjI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-20T16:01:35Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-20T16:01:35Z"}, "message": "simplify the masked rhs computation", "tree": {"sha": "21a2f09a036d1a89020498725da368771bafb169", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21a2f09a036d1a89020498725da368771bafb169"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7039dbb2b601cff4a929e01c4941b00becadab2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXaBNfAAoJEFbW7qD8Z6xG1JkP/2slSDFs9ja3CApVjDtLIHVH\nw50eXCQAu0dtR69S/wxQsoZ/fhll9OzeKnClub1N8im/0m9pLueRHrdAKzfYQvrZ\nNJCEWXKlHjjy4vxCUaO1/xwkv6tZaqORxu4yIOwiuT+r7DrQ8gCdCs6taS7aVR1R\nahFcIpqOzKgofQ2ddwgrQ0LFFYV9Eudn+yf/evJ3QVIl+ihIRRo8PA4lleLByGk7\nqf7DDByQOx0/kDtyDc+jrHK7HAhR0os97UEMbnqGH0xtIQXs6ZlYCGaPj9mUO8gf\noRTYyZ2RSNh3yA/haGIcV58sXfCGnW4RfEdjKTbXZdXs3cH7auXUia2mIIoCzTu0\n+EbhGqoeCQmPXMAugIHcFMUMpIw82duu9mxT7IVNphKm3ayBA5BNnARuKf5xP+qr\nLy5MRnvA2Vo5iVY7KwZj0AT5+R0m/VPBh4GA45hLJZgeohvvj82vBTQhisfyYNhX\nOL4AZ5Z82Cx+iZYto2teKXgnJcIjO/1SvsTh8OYHwlRaqnG9/Nm739j86zmsASKd\njn9bGu96o+pDzCiwHCvqDWr9oqgHO1bFiMUT7DXpiflOKK0o+AvaLnrehZ7YagjG\nBQqbDWR+StEVnYlzaBF8oB3XNUz1voi6EsbF+tgSlGaQDzJy+JryXAZc+/nKUjaZ\nU3uKBsWFENerSzqJQNW6\n=GubB\n-----END PGP SIGNATURE-----", "payload": "tree 21a2f09a036d1a89020498725da368771bafb169\nparent 001ae69212a58766c007bf8464927e18fe406d0f\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466438495 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466438495 +0200\n\nsimplify the masked rhs computation"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7039dbb2b601cff4a929e01c4941b00becadab2", "html_url": "https://github.com/rust-lang/rust/commit/c7039dbb2b601cff4a929e01c4941b00becadab2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7039dbb2b601cff4a929e01c4941b00becadab2/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "001ae69212a58766c007bf8464927e18fe406d0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/001ae69212a58766c007bf8464927e18fe406d0f", "html_url": "https://github.com/rust-lang/rust/commit/001ae69212a58766c007bf8464927e18fe406d0f"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "3399d697ed480cdafe1182ebcf828ddae843868a", "filename": "src/primval.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c7039dbb2b601cff4a929e01c4941b00becadab2/src%2Fprimval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7039dbb2b601cff4a929e01c4941b00becadab2/src%2Fprimval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fprimval.rs?ref=c7039dbb2b601cff4a929e01c4941b00becadab2", "patch": "@@ -82,17 +82,19 @@ pub fn binary_op<'tcx>(bin_op: mir::BinOp, left: PrimVal, right: PrimVal) -> Eva\n                 U64(_) => 6,\n                 _ => unreachable!(),\n             };\n+            let mask = (1 << mask_bits) - 1;\n             let r = match right {\n-                I8(i) => (i & ((1 << mask_bits) - 1)) as u32,\n-                I16(i) => (i & ((1 << mask_bits) - 1)) as u32,\n-                I32(i) => (i & ((1 << mask_bits) - 1)) as u32,\n-                I64(i) => (i & ((1 << mask_bits) - 1)) as u32,\n-                U8(i) => (i & ((1 << mask_bits) - 1)) as u32,\n-                U16(i) => (i & ((1 << mask_bits) - 1)) as u32,\n-                U32(i) => (i & ((1 << mask_bits) - 1)) as u32,\n-                U64(i) => (i & ((1 << mask_bits) - 1)) as u32,\n+                I8(i) => i as u8 & mask,\n+                I16(i) => i as u8 & mask,\n+                I32(i) => i as u8 & mask,\n+                I64(i) => i as u8 & mask,\n+                U8(i) => i as u8 & mask,\n+                U16(i) => i as u8 & mask,\n+                U32(i) => i as u8 & mask,\n+                U64(i) => i as u8 & mask,\n                 _ => panic!(\"bad MIR: bitshift rhs is not integral\"),\n             };\n+            let r = r as u32;\n             macro_rules! shift {\n                 ($v:ident, $l:ident, $r:ident) => ({\n                     match bin_op {"}]}