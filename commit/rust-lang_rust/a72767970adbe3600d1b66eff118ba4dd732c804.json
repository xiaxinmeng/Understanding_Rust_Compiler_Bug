{"sha": "a72767970adbe3600d1b66eff118ba4dd732c804", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3Mjc2Nzk3MGFkYmUzNjAwZDFiNjZlZmYxMThiYTRkZDczMmM4MDQ=", "commit": {"author": {"name": "Panashe M. Fundira", "email": "fundirap@gmail.com", "date": "2016-07-27T17:12:35Z"}, "committer": {"name": "Panashe M. Fundira", "email": "fundirap@gmail.com", "date": "2016-07-27T17:12:35Z"}, "message": "Update docs for assert! and debug_assert!", "tree": {"sha": "27df2a5fa3fdefcf512752e33b0fa8fe45e59a58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27df2a5fa3fdefcf512752e33b0fa8fe45e59a58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a72767970adbe3600d1b66eff118ba4dd732c804", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCAAGBQJXmOuSAAoJEKvW6Q9Rv3S1OwgIAIW8xfmc0PhOXfm6sfKYmp4G\nsFw2MPB8NmfADWXa3Qfxw1RZuXUNLpc4TUEyRlBgM9PBwXsd0k3eo52HijHf/rN+\nBj8abqQzubNqZ0puaQ5Xv1061tDbwAyxJYmAtO+o7+7OBIoq8a8qAoWL/sTa7Xy6\nN9CELCDnxO9mVG9I0FtZC7UoceA38bFasM4dCMZVvmZORDMwSYQh1GTYI4KOjZsY\nA8jAIajuoxS4ot1g4CZ0AKCDYaI+tBac4zmIHZVzKbskZ3jrEsTvciGjB31eqbLN\n8NAljNTmzAWHWDYh3RpkeUJx0QJgIxpQmXktRAYZUvfCtkrJb3WUkO+vOzm5lv8=\n=jcNY\n-----END PGP SIGNATURE-----", "payload": "tree 27df2a5fa3fdefcf512752e33b0fa8fe45e59a58\nparent 422ebd5328e485462c675af9304f3b5b86e5b893\nauthor Panashe M. Fundira <fundirap@gmail.com> 1469639555 -0400\ncommitter Panashe M. Fundira <fundirap@gmail.com> 1469639555 -0400\n\nUpdate docs for assert! and debug_assert!\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a72767970adbe3600d1b66eff118ba4dd732c804", "html_url": "https://github.com/rust-lang/rust/commit/a72767970adbe3600d1b66eff118ba4dd732c804", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a72767970adbe3600d1b66eff118ba4dd732c804/comments", "author": {"login": "munyari", "id": 5841072, "node_id": "MDQ6VXNlcjU4NDEwNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5841072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munyari", "html_url": "https://github.com/munyari", "followers_url": "https://api.github.com/users/munyari/followers", "following_url": "https://api.github.com/users/munyari/following{/other_user}", "gists_url": "https://api.github.com/users/munyari/gists{/gist_id}", "starred_url": "https://api.github.com/users/munyari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munyari/subscriptions", "organizations_url": "https://api.github.com/users/munyari/orgs", "repos_url": "https://api.github.com/users/munyari/repos", "events_url": "https://api.github.com/users/munyari/events{/privacy}", "received_events_url": "https://api.github.com/users/munyari/received_events", "type": "User", "site_admin": false}, "committer": {"login": "munyari", "id": 5841072, "node_id": "MDQ6VXNlcjU4NDEwNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5841072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munyari", "html_url": "https://github.com/munyari", "followers_url": "https://api.github.com/users/munyari/followers", "following_url": "https://api.github.com/users/munyari/following{/other_user}", "gists_url": "https://api.github.com/users/munyari/gists{/gist_id}", "starred_url": "https://api.github.com/users/munyari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munyari/subscriptions", "organizations_url": "https://api.github.com/users/munyari/orgs", "repos_url": "https://api.github.com/users/munyari/repos", "events_url": "https://api.github.com/users/munyari/events{/privacy}", "received_events_url": "https://api.github.com/users/munyari/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "422ebd5328e485462c675af9304f3b5b86e5b893", "url": "https://api.github.com/repos/rust-lang/rust/commits/422ebd5328e485462c675af9304f3b5b86e5b893", "html_url": "https://github.com/rust-lang/rust/commit/422ebd5328e485462c675af9304f3b5b86e5b893"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "e3207a0a86c4ff1ecea0fe016dfc92a4924832ac", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a72767970adbe3600d1b66eff118ba4dd732c804/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a72767970adbe3600d1b66eff118ba4dd732c804/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=a72767970adbe3600d1b66eff118ba4dd732c804", "patch": "@@ -32,8 +32,19 @@ macro_rules! panic {\n \n /// Ensure that a boolean expression is `true` at runtime.\n ///\n-/// This will invoke the `panic!` macro if the provided expression cannot be\n-/// evaluated to `true` at runtime.\n+/// This will ensure the termination of the program if the provided expression\n+/// cannot be evaluated to `true` at runtime by means of an unrecoverable error\n+/// (not necessarily a `panic!`, can also be an `abort`).\n+///\n+/// Assertions are always checked in both debug and release builds, and cannot\n+/// be disabled.\n+///\n+/// Unsafe code relies on `assert!` to enforce run-time invariants that, if\n+/// violated could lead to unsafety.\n+///\n+/// Other use-cases of `assert!` include\n+/// [testing](https://doc.rust-lang.org/book/testing.html) and enforcing\n+/// run-time invariants in safe code (whose violation cannot result in unsafety).\n ///\n /// This macro has a second version, where a custom panic message can be provided.\n ///\n@@ -123,6 +134,13 @@ macro_rules! assert_eq {\n /// expensive to be present in a release build but may be helpful during\n /// development.\n ///\n+/// An unchecked assertion allows a program in an inconsistent state to keep\n+/// running, which might have unexpected consequences but does not introduce\n+/// unsafety as long as this only happens in safe code. The performance cost\n+/// of assertions, is however, not measurable in general. Replacing `assert!`\n+/// with `debug_assert!` is thus only encourage after thorough profiling, and\n+/// more importantly, only in safe code!\n+///\n /// # Examples\n ///\n /// ```"}]}