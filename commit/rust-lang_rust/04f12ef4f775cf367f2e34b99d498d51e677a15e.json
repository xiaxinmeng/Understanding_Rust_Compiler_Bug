{"sha": "04f12ef4f775cf367f2e34b99d498d51e677a15e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZjEyZWY0Zjc3NWNmMzY3ZjJlMzRiOTlkNDk4ZDUxZTY3N2ExNWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-08T14:56:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-08T14:56:24Z"}, "message": "Auto merge of #31442 - pnkfelix:issue-30438-sidestep-dummy-node-during-expand-givens-dfs, r=nikomatsakis\n\nSplit dummy-idx node to fix expand_givens DFS\n\n(Much more detail in commit comments.)\n\nFix #30438.", "tree": {"sha": "2eb09583d36143f05cf2d53bd4eae466176574ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2eb09583d36143f05cf2d53bd4eae466176574ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04f12ef4f775cf367f2e34b99d498d51e677a15e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04f12ef4f775cf367f2e34b99d498d51e677a15e", "html_url": "https://github.com/rust-lang/rust/commit/04f12ef4f775cf367f2e34b99d498d51e677a15e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04f12ef4f775cf367f2e34b99d498d51e677a15e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e06f6928cb840a018706cabf75ab2bf3807551b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e06f6928cb840a018706cabf75ab2bf3807551b1", "html_url": "https://github.com/rust-lang/rust/commit/e06f6928cb840a018706cabf75ab2bf3807551b1"}, {"sha": "77c8850e6f03d9e2b7efcdf57abc5786440e3fd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/77c8850e6f03d9e2b7efcdf57abc5786440e3fd7", "html_url": "https://github.com/rust-lang/rust/commit/77c8850e6f03d9e2b7efcdf57abc5786440e3fd7"}], "stats": {"total": 110, "additions": 107, "deletions": 3}, "files": [{"sha": "bfc770d53aaba5c8b5dae220ae268e56dae3f3e1", "filename": "src/librustc/middle/infer/region_inference/mod.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/04f12ef4f775cf367f2e34b99d498d51e677a15e/src%2Flibrustc%2Fmiddle%2Finfer%2Fregion_inference%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04f12ef4f775cf367f2e34b99d498d51e677a15e/src%2Flibrustc%2Fmiddle%2Finfer%2Fregion_inference%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fregion_inference%2Fmod.rs?ref=04f12ef4f775cf367f2e34b99d498d51e677a15e", "patch": "@@ -1105,7 +1105,14 @@ impl<'a, 'tcx> RegionVarBindings<'a, 'tcx> {\n         for _ in 0..num_vars {\n             graph.add_node(());\n         }\n-        let dummy_idx = graph.add_node(());\n+\n+        // Issue #30438: two distinct dummy nodes, one for incoming\n+        // edges (dummy_source) and another for outgoing edges\n+        // (dummy_sink). In `dummy -> a -> b -> dummy`, using one\n+        // dummy node leads one to think (erroneously) there exists a\n+        // path from `b` to `a`. Two dummy nodes sidesteps the issue.\n+        let dummy_source = graph.add_node(());\n+        let dummy_sink = graph.add_node(());\n \n         for (constraint, _) in constraints.iter() {\n             match *constraint {\n@@ -1115,10 +1122,10 @@ impl<'a, 'tcx> RegionVarBindings<'a, 'tcx> {\n                                    *constraint);\n                 }\n                 ConstrainRegSubVar(_, b_id) => {\n-                    graph.add_edge(dummy_idx, NodeIndex(b_id.index as usize), *constraint);\n+                    graph.add_edge(dummy_source, NodeIndex(b_id.index as usize), *constraint);\n                 }\n                 ConstrainVarSubReg(a_id, _) => {\n-                    graph.add_edge(NodeIndex(a_id.index as usize), dummy_idx, *constraint);\n+                    graph.add_edge(NodeIndex(a_id.index as usize), dummy_sink, *constraint);\n                 }\n             }\n         }"}, {"sha": "441815de81d30b54f04ee649b97ca62b1fa3636f", "filename": "src/test/compile-fail/issue-30438-a.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/04f12ef4f775cf367f2e34b99d498d51e677a15e/src%2Ftest%2Fcompile-fail%2Fissue-30438-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04f12ef4f775cf367f2e34b99d498d51e677a15e/src%2Ftest%2Fcompile-fail%2Fissue-30438-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-30438-a.rs?ref=04f12ef4f775cf367f2e34b99d498d51e677a15e", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Original regression test for Issue #30438.\n+\n+use std::ops::Index;\n+\n+struct Test<'a> {\n+    s: &'a String\n+}\n+\n+impl <'a> Index<usize> for Test<'a> {\n+    type Output = Test<'a>;\n+    fn index(&self, _: usize) -> &Self::Output {\n+        return &Test { s: &self.s};\n+        //~^ ERROR: borrowed value does not live long enough\n+    }\n+}\n+\n+fn main() {\n+    let s = \"Hello World\".to_string();\n+    let test = Test{s: &s};\n+    let r = &test[0];\n+    println!(\"{}\", test.s); // OK since test is valid\n+    println!(\"{}\", r.s); // Segfault since value pointed by r has already been dropped\n+}"}, {"sha": "981b196c4aeb2e20acc03c4e4a439aab8759a6cf", "filename": "src/test/compile-fail/issue-30438-b.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/04f12ef4f775cf367f2e34b99d498d51e677a15e/src%2Ftest%2Fcompile-fail%2Fissue-30438-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04f12ef4f775cf367f2e34b99d498d51e677a15e/src%2Ftest%2Fcompile-fail%2Fissue-30438-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-30438-b.rs?ref=04f12ef4f775cf367f2e34b99d498d51e677a15e", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Modified regression test for Issue #30438 that exposed an\n+// independent issue (see discussion on ticket).\n+\n+use std::ops::Index;\n+\n+struct Test<'a> {\n+    s: &'a String\n+}\n+\n+impl <'a> Index<usize> for Test<'a> {\n+    type Output = Test<'a>;\n+    fn index(&self, _: usize) -> &Self::Output {\n+        &Test { s: &self.s}\n+        //~^ ERROR: borrowed value does not live long enough\n+    }\n+}\n+\n+fn main() {\n+    let s = \"Hello World\".to_string();\n+    let test = Test{s: &s};\n+    let r = &test[0];\n+    println!(\"{}\", test.s); // OK since test is valid\n+    println!(\"{}\", r.s); // Segfault since value pointed by r has already been dropped\n+}"}, {"sha": "06d391af559cce42836f46770ff8e893ad69e1f9", "filename": "src/test/compile-fail/issue-30438-c.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/04f12ef4f775cf367f2e34b99d498d51e677a15e/src%2Ftest%2Fcompile-fail%2Fissue-30438-c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04f12ef4f775cf367f2e34b99d498d51e677a15e/src%2Ftest%2Fcompile-fail%2Fissue-30438-c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-30438-c.rs?ref=04f12ef4f775cf367f2e34b99d498d51e677a15e", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Simplfied regression test for #30438, inspired by arielb1.\n+\n+trait Trait { type Out; }\n+\n+struct Test<'a> { s: &'a str }\n+\n+fn silly<'y, 'z>(_s: &'y Test<'z>) -> &'y <Test<'z> as Trait>::Out where 'z: 'static {\n+    let x = Test { s: \"this cannot last\" };\n+    &x\n+    //~^ ERROR: `x` does not live long enough\n+}\n+\n+impl<'b> Trait for Test<'b> { type Out = Test<'b>; }\n+\n+fn main() {\n+    let orig = Test { s: \"Hello World\" };\n+    let r = silly(&orig);\n+    println!(\"{}\", orig.s); // OK since `orig` is valid\n+    println!(\"{}\", r.s); // Segfault (method does not return a sane value)\n+}"}]}