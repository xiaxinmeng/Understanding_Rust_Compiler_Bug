{"sha": "a7c0336a7516e4973a9efb86bfb97cf290441413", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3YzAzMzZhNzUxNmU0OTczYTllZmI4NmJmYjk3Y2YyOTA0NDE0MTM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-24T16:12:11Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-24T16:16:25Z"}, "message": "macro-generate froms", "tree": {"sha": "8f442637075b9ba72ffe26b9e5426a0faab45e36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f442637075b9ba72ffe26b9e5426a0faab45e36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7c0336a7516e4973a9efb86bfb97cf290441413", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7c0336a7516e4973a9efb86bfb97cf290441413", "html_url": "https://github.com/rust-lang/rust/commit/a7c0336a7516e4973a9efb86bfb97cf290441413", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7c0336a7516e4973a9efb86bfb97cf290441413/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aea1f95a665b56da5953907a122475db0c9a9c44", "url": "https://api.github.com/repos/rust-lang/rust/commits/aea1f95a665b56da5953907a122475db0c9a9c44", "html_url": "https://github.com/rust-lang/rust/commit/aea1f95a665b56da5953907a122475db0c9a9c44"}], "stats": {"total": 95, "additions": 17, "deletions": 78}, "files": [{"sha": "4b79358e4b86aae446965cf887862d281b033716", "filename": "crates/ra_hir/src/code_model_api.rs", "status": "modified", "additions": 1, "deletions": 24, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a7c0336a7516e4973a9efb86bfb97cf290441413/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c0336a7516e4973a9efb86bfb97cf290441413/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs?ref=a7c0336a7516e4973a9efb86bfb97cf290441413", "patch": "@@ -70,30 +70,7 @@ pub enum ModuleDef {\n     Enum(Enum),\n     Def(DefId),\n }\n-//FIXME: change to from\n-impl From<Module> for ModuleDef {\n-    fn from(it: Module) -> ModuleDef {\n-        ModuleDef::Module(it)\n-    }\n-}\n-\n-impl From<Function> for ModuleDef {\n-    fn from(it: Function) -> ModuleDef {\n-        ModuleDef::Function(it)\n-    }\n-}\n-\n-impl From<Struct> for ModuleDef {\n-    fn from(it: Struct) -> ModuleDef {\n-        ModuleDef::Struct(it)\n-    }\n-}\n-\n-impl From<Enum> for ModuleDef {\n-    fn from(it: Enum) -> ModuleDef {\n-        ModuleDef::Enum(it)\n-    }\n-}\n+impl_froms!(ModuleDef: Module, Function, Struct, Enum);\n \n impl From<DefId> for ModuleDef {\n     fn from(it: DefId) -> ModuleDef {"}, {"sha": "a8cacbb4ad7b54150b07585024016dfb1aa63558", "filename": "crates/ra_hir/src/generics.rs", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a7c0336a7516e4973a9efb86bfb97cf290441413/crates%2Fra_hir%2Fsrc%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c0336a7516e4973a9efb86bfb97cf290441413/crates%2Fra_hir%2Fsrc%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fgenerics.rs?ref=a7c0336a7516e4973a9efb86bfb97cf290441413", "patch": "@@ -29,24 +29,7 @@ pub enum GenericDef {\n     Enum(Enum),\n     Def(DefId),\n }\n-\n-impl From<Function> for GenericDef {\n-    fn from(func: Function) -> GenericDef {\n-        GenericDef::Function(func)\n-    }\n-}\n-\n-impl From<Struct> for GenericDef {\n-    fn from(s: Struct) -> GenericDef {\n-        GenericDef::Struct(s)\n-    }\n-}\n-\n-impl From<Enum> for GenericDef {\n-    fn from(e: Enum) -> GenericDef {\n-        GenericDef::Enum(e)\n-    }\n-}\n+impl_froms!(GenericDef: Function, Struct, Enum);\n \n impl From<DefId> for GenericDef {\n     fn from(def_id: DefId) -> GenericDef {"}, {"sha": "33438509c7218a05826db5140828dbff2619c089", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a7c0336a7516e4973a9efb86bfb97cf290441413/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c0336a7516e4973a9efb86bfb97cf290441413/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=a7c0336a7516e4973a9efb86bfb97cf290441413", "patch": "@@ -5,6 +5,18 @@\n //! to a particular crate instance. That is, it has cfg flags and features\n //! applied. So, the relation between syntax and HIR is many-to-one.\n \n+macro_rules! impl_froms {\n+    ($e:ident: $($v:ident), *) => {\n+        $(\n+            impl From<$v> for $e {\n+                fn from(it: $v) -> $e {\n+                    $e::$v(it)\n+                }\n+            }\n+        )*\n+    }\n+}\n+\n pub mod db;\n #[cfg(test)]\n mod mock;"}, {"sha": "fcf8a1dbb091472caa429a48510d4a5bd671a507", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 3, "deletions": 36, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/a7c0336a7516e4973a9efb86bfb97cf290441413/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c0336a7516e4973a9efb86bfb97cf290441413/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=a7c0336a7516e4973a9efb86bfb97cf290441413", "patch": "@@ -168,18 +168,7 @@ pub enum AdtDef {\n     Struct(Struct),\n     Enum(Enum),\n }\n-\n-impl From<Struct> for AdtDef {\n-    fn from(s: Struct) -> AdtDef {\n-        AdtDef::Struct(s)\n-    }\n-}\n-\n-impl From<Enum> for AdtDef {\n-    fn from(e: Enum) -> AdtDef {\n-        AdtDef::Enum(e)\n-    }\n-}\n+impl_froms!(AdtDef: Struct, Enum);\n \n impl AdtDef {\n     fn krate(self, db: &impl HirDatabase) -> Option<Crate> {\n@@ -701,24 +690,7 @@ pub enum TypableDef {\n     Enum(Enum),\n     Def(DefId),\n }\n-\n-impl From<Function> for TypableDef {\n-    fn from(func: Function) -> TypableDef {\n-        TypableDef::Function(func)\n-    }\n-}\n-\n-impl From<Struct> for TypableDef {\n-    fn from(s: Struct) -> TypableDef {\n-        TypableDef::Struct(s)\n-    }\n-}\n-\n-impl From<Enum> for TypableDef {\n-    fn from(e: Enum) -> TypableDef {\n-        TypableDef::Enum(e)\n-    }\n-}\n+impl_froms!(TypableDef: Function, Struct, Enum);\n \n impl From<DefId> for TypableDef {\n     fn from(func: DefId) -> TypableDef {\n@@ -763,12 +735,7 @@ pub enum VariantDef {\n     Struct(Struct),\n     Def(DefId), // EnumVariant\n }\n-\n-impl From<Struct> for VariantDef {\n-    fn from(struct_: Struct) -> VariantDef {\n-        VariantDef::Struct(struct_)\n-    }\n-}\n+impl_froms!(VariantDef: Struct);\n \n impl From<DefId> for VariantDef {\n     fn from(def_id: DefId) -> VariantDef {"}]}