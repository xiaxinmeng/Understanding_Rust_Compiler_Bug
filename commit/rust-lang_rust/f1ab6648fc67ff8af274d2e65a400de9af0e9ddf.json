{"sha": "f1ab6648fc67ff8af274d2e65a400de9af0e9ddf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxYWI2NjQ4ZmM2N2ZmOGFmMjc0ZDJlNjVhNDAwZGU5YWYwZTlkZGY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-05-09T05:37:49Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-05-12T18:06:11Z"}, "message": "rustc_back: Only use archive member filenames\n\nI've been working with some archives generated by MSVC's `lib.exe` tool lately,\nand it looks like the embedded name of the members in those archives sometimes\nhave slahes in the name (e.g. `foo/bar/baz.obj`). Currently the compiler chokes\non these paths as it assumes that each file in the archive is only the filename\n(which is what unix does).\n\nThis commit interprets the name of each file in all archives as a path and then\nonly uses the `file_name` portion of the path to extract the file to a separate\nlocation and then reassemble it back into a new archive later. Note that\nduplicate filenames are already handled, so this won't introduce any conflicts.", "tree": {"sha": "27f06f28bd15903946b1a343be12dce95957f3f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27f06f28bd15903946b1a343be12dce95957f3f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1ab6648fc67ff8af274d2e65a400de9af0e9ddf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1ab6648fc67ff8af274d2e65a400de9af0e9ddf", "html_url": "https://github.com/rust-lang/rust/commit/f1ab6648fc67ff8af274d2e65a400de9af0e9ddf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1ab6648fc67ff8af274d2e65a400de9af0e9ddf/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7132092ce6e954eb58d490fa886d0865c5cfba38", "url": "https://api.github.com/repos/rust-lang/rust/commits/7132092ce6e954eb58d490fa886d0865c5cfba38", "html_url": "https://github.com/rust-lang/rust/commit/7132092ce6e954eb58d490fa886d0865c5cfba38"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "cad1522ee1344b22b81a7382d18fe7104c83be49", "filename": "src/librustc_back/archive.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f1ab6648fc67ff8af274d2e65a400de9af0e9ddf/src%2Flibrustc_back%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1ab6648fc67ff8af274d2e65a400de9af0e9ddf/src%2Flibrustc_back%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Farchive.rs?ref=f1ab6648fc67ff8af274d2e65a400de9af0e9ddf", "patch": "@@ -306,6 +306,21 @@ impl<'a> ArchiveBuilder<'a> {\n             if filename.contains(\".SYMDEF\") { continue }\n             if skip(filename) { continue }\n \n+            // Archives on unix systems typically do not have slashes in\n+            // filenames as the `ar` utility generally only uses the last\n+            // component of a path for the filename list in the archive. On\n+            // Windows, however, archives assembled with `lib.exe` will preserve\n+            // the full path to the file that was placed in the archive,\n+            // including path separators.\n+            //\n+            // The code below is munging paths so it'll go wrong pretty quickly\n+            // if there's some unexpected slashes in the filename, so here we\n+            // just chop off everything but the filename component. Note that\n+            // this can cause duplicate filenames, but that's also handled below\n+            // as well.\n+            let filename = Path::new(filename).file_name().unwrap()\n+                                              .to_str().unwrap();\n+\n             // An archive can contain files of the same name multiple times, so\n             // we need to be sure to not have them overwrite one another when we\n             // extract them. Consequently we need to find a truly unique file"}]}