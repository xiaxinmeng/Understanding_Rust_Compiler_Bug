{"sha": "4a21082da22f6ff48a77f1ded2a6b5f02f31aa78", "node_id": "C_kwDOAAsO6NoAKDRhMjEwODJkYTIyZjZmZjQ4YTc3ZjFkZWQyYTZiNWYwMmYzMWFhNzg", "commit": {"author": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2022-04-11T17:54:44Z"}, "committer": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2022-04-11T17:54:44Z"}, "message": "Fix subtraction overflow in `cast_possible_truncation`", "tree": {"sha": "4363dbd7914fb345e16f903f252621a480a3554f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4363dbd7914fb345e16f903f252621a480a3554f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a21082da22f6ff48a77f1ded2a6b5f02f31aa78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a21082da22f6ff48a77f1ded2a6b5f02f31aa78", "html_url": "https://github.com/rust-lang/rust/commit/4a21082da22f6ff48a77f1ded2a6b5f02f31aa78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a21082da22f6ff48a77f1ded2a6b5f02f31aa78/comments", "author": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7e68638431b2a6639fcbeb44de790619de3b9b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7e68638431b2a6639fcbeb44de790619de3b9b1", "html_url": "https://github.com/rust-lang/rust/commit/c7e68638431b2a6639fcbeb44de790619de3b9b1"}], "stats": {"total": 48, "additions": 33, "deletions": 15}, "files": [{"sha": "64f87c80f8d147a5e3e21aed776582434d465fee", "filename": "clippy_lints/src/casts/cast_possible_truncation.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4a21082da22f6ff48a77f1ded2a6b5f02f31aa78/clippy_lints%2Fsrc%2Fcasts%2Fcast_possible_truncation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a21082da22f6ff48a77f1ded2a6b5f02f31aa78/clippy_lints%2Fsrc%2Fcasts%2Fcast_possible_truncation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Fcast_possible_truncation.rs?ref=4a21082da22f6ff48a77f1ded2a6b5f02f31aa78", "patch": "@@ -29,21 +29,19 @@ fn apply_reductions(cx: &LateContext<'_>, nbits: u64, expr: &Expr<'_>, signed: b\n         ExprKind::Block(block, _) => block.expr.map_or(nbits, |e| apply_reductions(cx, nbits, e, signed)),\n         ExprKind::Binary(op, left, right) => match op.node {\n             BinOpKind::Div => {\n-                apply_reductions(cx, nbits, left, signed)\n-                    - (if signed {\n-                        0 // let's be conservative here\n-                    } else {\n-                        // by dividing by 1, we remove 0 bits, etc.\n-                        get_constant_bits(cx, right).map_or(0, |b| b.saturating_sub(1))\n-                    })\n+                apply_reductions(cx, nbits, left, signed).saturating_sub(if signed {\n+                    // let's be conservative here\n+                    0\n+                } else {\n+                    // by dividing by 1, we remove 0 bits, etc.\n+                    get_constant_bits(cx, right).map_or(0, |b| b.saturating_sub(1))\n+                })\n             },\n             BinOpKind::Rem | BinOpKind::BitAnd => get_constant_bits(cx, right)\n                 .unwrap_or(u64::max_value())\n                 .min(apply_reductions(cx, nbits, left, signed)),\n-            BinOpKind::Shr => {\n-                apply_reductions(cx, nbits, left, signed)\n-                    - constant_int(cx, right).map_or(0, |s| u64::try_from(s).expect(\"shift too high\"))\n-            },\n+            BinOpKind::Shr => apply_reductions(cx, nbits, left, signed)\n+                .saturating_sub(constant_int(cx, right).map_or(0, |s| u64::try_from(s).expect(\"shift too high\"))),\n             _ => nbits,\n         },\n         ExprKind::MethodCall(method, [left, right], _) => {"}, {"sha": "e6031e9adaeb66c084d8c96cb421d9d5ee186d91", "filename": "tests/ui/cast.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4a21082da22f6ff48a77f1ded2a6b5f02f31aa78/tests%2Fui%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a21082da22f6ff48a77f1ded2a6b5f02f31aa78/tests%2Fui%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.rs?ref=4a21082da22f6ff48a77f1ded2a6b5f02f31aa78", "patch": "@@ -1,13 +1,13 @@\n #![feature(repr128)]\n #![allow(incomplete_features)]\n-\n-#[warn(\n+#![warn(\n     clippy::cast_precision_loss,\n     clippy::cast_possible_truncation,\n     clippy::cast_sign_loss,\n     clippy::cast_possible_wrap\n )]\n-#[allow(clippy::cast_abs_to_unsigned, clippy::no_effect, clippy::unnecessary_operation)]\n+#![allow(clippy::cast_abs_to_unsigned, clippy::no_effect, clippy::unnecessary_operation)]\n+\n fn main() {\n     // Test clippy::cast_precision_loss\n     let x0 = 1i32;\n@@ -252,3 +252,11 @@ fn main() {\n         }\n     }\n }\n+\n+fn avoid_subtract_overflow(q: u32) {\n+    let c = (q >> 16) as u8;\n+    c as usize;\n+\n+    let c = (q / 1000) as u8;\n+    c as usize;\n+}"}, {"sha": "0c63b4af30865da871c4d9b241fd9f6d9dc979aa", "filename": "tests/ui/cast.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4a21082da22f6ff48a77f1ded2a6b5f02f31aa78/tests%2Fui%2Fcast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4a21082da22f6ff48a77f1ded2a6b5f02f31aa78/tests%2Fui%2Fcast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.stderr?ref=4a21082da22f6ff48a77f1ded2a6b5f02f31aa78", "patch": "@@ -194,5 +194,17 @@ error: casting `main::E10` to `u16` may truncate the value\n LL |             let _ = self as u16;\n    |                     ^^^^^^^^^^^\n \n-error: aborting due to 31 previous errors\n+error: casting `u32` to `u8` may truncate the value\n+  --> $DIR/cast.rs:257:13\n+   |\n+LL |     let c = (q >> 16) as u8;\n+   |             ^^^^^^^^^^^^^^^\n+\n+error: casting `u32` to `u8` may truncate the value\n+  --> $DIR/cast.rs:260:13\n+   |\n+LL |     let c = (q / 1000) as u8;\n+   |             ^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 33 previous errors\n "}]}