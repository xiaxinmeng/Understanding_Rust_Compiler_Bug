{"sha": "ca9b07bbc974414e2b9055c5e50e38a1973401d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhOWIwN2JiYzk3NDQxNGUyYjkwNTVjNWU1MGUzOGExOTczNDAxZDI=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2016-12-28T22:47:10Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2016-12-28T22:47:10Z"}, "message": "Replace uses of `#[unsafe_destructor_blind_to_params]` with `#[may_dangle]`\n\nCC #34761", "tree": {"sha": "ef605bc894cee8fef58f326ea8a3b097275d1dcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef605bc894cee8fef58f326ea8a3b097275d1dcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca9b07bbc974414e2b9055c5e50e38a1973401d2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdBQJYZEEVFhxhcGFzZWx0aW5lckBnbWFpbC5jb20ACgkQ2lzcFfm+\n2ysi0xAAiSsAg4Pgyp5AsIExx+Ve9WXJzzRz+Z157FGcljCkEH7jrL1IxGYJ4pQz\nkxbrimYybUsQAF953gCZmQ6O1ZGgwinCPFIhOPEspdE28+Tooi8HoqRmny5PcHiY\nEIJzTu8FyvWDdKYDM16AnXCQ3LOR1miQjPgCLQwf22AV2bXY2/X5kiJXGVarx5X1\nTkStAiMOjA1ONg89+B8XpBQ43SZn/dWxIQHuyBxzJbeCD0shbVwAVNL8lwSIc8VR\nKSJragKwV1ZgXid/rFBz1L4NQ0H4ISBsi3jk0K0a1E7R5dKSw2heyaQ5xy4XpzvP\nX4mCTygGh1aNS2U7YzkZ/wx3sCIjJvzL/Op8ed8aRaxO0jqL3RGy6cJljJhLeTvj\nM8O64eAZ8MVFw/f858IEqZ+utprjcNjpeuofu6aE23D1FHsYRNl+ioqUhTqeVIvF\nhtLsM9d0QIoFqDAX2MxsxteU7+1Nvw/+/CZ1GMFJjhk0vxQcv3P1WipZFUl3D4xl\nPz9oqTxpy88t2JsW8e4AknbbzY/E6a+zUhXXwK973VF9QS/XlkC9Kspx5b2zVSaQ\nzfuQVYjs4QSUiCzuN4t4M3n5uo61b7kUtCpSfBXT98mNXzFrv8Pc04Q7Fs+Qa6d3\nLb9WVbfPfqPoi66q70uK4vTB/fchW7hrESNddHHUIj/LELkR+xk=\n=9iTG\n-----END PGP SIGNATURE-----", "payload": "tree ef605bc894cee8fef58f326ea8a3b097275d1dcb\nparent 02b22ec7bd8fa542dd3b08a8497ad5cd3a20c417\nauthor Andrew Paseltiner <apaseltiner@gmail.com> 1482965230 -0500\ncommitter Andrew Paseltiner <apaseltiner@gmail.com> 1482965230 -0500\n\nReplace uses of `#[unsafe_destructor_blind_to_params]` with `#[may_dangle]`\n\nCC #34761\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca9b07bbc974414e2b9055c5e50e38a1973401d2", "html_url": "https://github.com/rust-lang/rust/commit/ca9b07bbc974414e2b9055c5e50e38a1973401d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca9b07bbc974414e2b9055c5e50e38a1973401d2/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02b22ec7bd8fa542dd3b08a8497ad5cd3a20c417", "url": "https://api.github.com/repos/rust-lang/rust/commits/02b22ec7bd8fa542dd3b08a8497ad5cd3a20c417", "html_url": "https://github.com/rust-lang/rust/commit/02b22ec7bd8fa542dd3b08a8497ad5cd3a20c417"}], "stats": {"total": 49, "additions": 20, "deletions": 29}, "files": [{"sha": "393a6a315ca73926eeb5a31cd1be2f73b46ba791", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=ca9b07bbc974414e2b9055c5e50e38a1973401d2", "patch": "@@ -706,7 +706,7 @@ impl<T: ?Sized> Arc<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: ?Sized> Drop for Arc<T> {\n+unsafe impl<#[may_dangle] T: ?Sized> Drop for Arc<T> {\n     /// Drops the `Arc`.\n     ///\n     /// This will decrement the strong reference count. If the strong reference\n@@ -734,7 +734,6 @@ impl<T: ?Sized> Drop for Arc<T> {\n     /// drop(foo);    // Doesn't print anything\n     /// drop(foo2);   // Prints \"dropped!\"\n     /// ```\n-    #[unsafe_destructor_blind_to_params]\n     #[inline]\n     fn drop(&mut self) {\n         // Because `fetch_sub` is already atomic, we do not need to synchronize"}, {"sha": "3a487ca7b9df4df66b09947f9096009e0b149f96", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=ca9b07bbc974414e2b9055c5e50e38a1973401d2", "patch": "@@ -79,9 +79,10 @@\n #![feature(const_fn)]\n #![feature(core_intrinsics)]\n #![feature(custom_attribute)]\n-#![feature(dropck_parametricity)]\n+#![feature(dropck_eyepatch)]\n #![cfg_attr(not(test), feature(exact_size_is_empty))]\n #![feature(fundamental)]\n+#![feature(generic_param_attrs)]\n #![feature(lang_items)]\n #![feature(needs_allocator)]\n #![feature(optin_builtin_traits)]"}, {"sha": "357a2724e0020cff95807f63246af3f52ecd4691", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=ca9b07bbc974414e2b9055c5e50e38a1973401d2", "patch": "@@ -539,8 +539,7 @@ impl<T> RawVec<T> {\n     }\n }\n \n-impl<T> Drop for RawVec<T> {\n-    #[unsafe_destructor_blind_to_params]\n+unsafe impl<#[may_dangle] T> Drop for RawVec<T> {\n     /// Frees the memory owned by the RawVec *without* trying to Drop its contents.\n     fn drop(&mut self) {\n         let elem_size = mem::size_of::<T>();"}, {"sha": "010e378ef2f48238ea3880be935b6e2f1f25e737", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=ca9b07bbc974414e2b9055c5e50e38a1973401d2", "patch": "@@ -644,7 +644,7 @@ impl<T: ?Sized> Deref for Rc<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: ?Sized> Drop for Rc<T> {\n+unsafe impl<#[may_dangle] T: ?Sized> Drop for Rc<T> {\n     /// Drops the `Rc`.\n     ///\n     /// This will decrement the strong reference count. If the strong reference\n@@ -672,7 +672,6 @@ impl<T: ?Sized> Drop for Rc<T> {\n     /// drop(foo);    // Doesn't print anything\n     /// drop(foo2);   // Prints \"dropped!\"\n     /// ```\n-    #[unsafe_destructor_blind_to_params]\n     fn drop(&mut self) {\n         unsafe {\n             let ptr = *self.ptr;"}, {"sha": "bf7333b4936adab12c794d4152534f57287d053d", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=ca9b07bbc974414e2b9055c5e50e38a1973401d2", "patch": "@@ -30,10 +30,10 @@\n \n #![feature(alloc)]\n #![feature(core_intrinsics)]\n+#![feature(dropck_eyepatch)]\n #![feature(heap_api)]\n-#![feature(heap_api)]\n+#![feature(generic_param_attrs)]\n #![feature(staged_api)]\n-#![feature(dropck_parametricity)]\n #![cfg_attr(test, feature(test))]\n \n #![allow(deprecated)]\n@@ -258,8 +258,7 @@ impl<T> TypedArena<T> {\n     }\n }\n \n-impl<T> Drop for TypedArena<T> {\n-    #[unsafe_destructor_blind_to_params]\n+unsafe impl<#[may_dangle] T> Drop for TypedArena<T> {\n     fn drop(&mut self) {\n         unsafe {\n             // Determine how much was filled."}, {"sha": "98c71967f3c394ee0d9642bca82f1bd2b24337f7", "filename": "src/libcollections/btree/map.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fmap.rs?ref=ca9b07bbc974414e2b9055c5e50e38a1973401d2", "patch": "@@ -137,8 +137,7 @@ pub struct BTreeMap<K, V> {\n }\n \n #[stable(feature = \"btree_drop\", since = \"1.7.0\")]\n-impl<K, V> Drop for BTreeMap<K, V> {\n-    #[unsafe_destructor_blind_to_params]\n+unsafe impl<#[may_dangle] K, #[may_dangle] V> Drop for BTreeMap<K, V> {\n     fn drop(&mut self) {\n         unsafe {\n             for _ in ptr::read(self).into_iter() {"}, {"sha": "9ca56d0aea675d69c4c0c628c2ad92e44971c879", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=ca9b07bbc974414e2b9055c5e50e38a1973401d2", "patch": "@@ -35,10 +35,11 @@\n #![feature(box_syntax)]\n #![cfg_attr(not(test), feature(char_escape_debug))]\n #![feature(core_intrinsics)]\n-#![feature(dropck_parametricity)]\n+#![feature(dropck_eyepatch)]\n #![feature(exact_size_is_empty)]\n #![feature(fmt_internals)]\n #![feature(fused)]\n+#![feature(generic_param_attrs)]\n #![feature(heap_api)]\n #![feature(inclusive_range)]\n #![feature(lang_items)]"}, {"sha": "7f913d4afe476aeea2c8611f3e87062f9bbb76fd", "filename": "src/libcollections/linked_list.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flinked_list.rs?ref=ca9b07bbc974414e2b9055c5e50e38a1973401d2", "patch": "@@ -726,8 +726,7 @@ impl<T> LinkedList<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T> Drop for LinkedList<T> {\n-    #[unsafe_destructor_blind_to_params]\n+unsafe impl<#[may_dangle] T> Drop for LinkedList<T> {\n     fn drop(&mut self) {\n         while let Some(_) = self.pop_front_node() {}\n     }"}, {"sha": "48a432943d2be77535a77328ef50b18d77caee6b", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=ca9b07bbc974414e2b9055c5e50e38a1973401d2", "patch": "@@ -1763,8 +1763,7 @@ impl<T: Ord> Ord for Vec<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T> Drop for Vec<T> {\n-    #[unsafe_destructor_blind_to_params]\n+unsafe impl<#[may_dangle] T> Drop for Vec<T> {\n     fn drop(&mut self) {\n         unsafe {\n             // use drop for [T]\n@@ -2033,8 +2032,7 @@ impl<T: Clone> Clone for IntoIter<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T> Drop for IntoIter<T> {\n-    #[unsafe_destructor_blind_to_params]\n+unsafe impl<#[may_dangle] T> Drop for IntoIter<T> {\n     fn drop(&mut self) {\n         // destroy the remaining elements\n         for _x in self.by_ref() {}"}, {"sha": "f3a95fa92916987207913432a8ba8a1de10ca93e", "filename": "src/libcollections/vec_deque.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec_deque.rs?ref=ca9b07bbc974414e2b9055c5e50e38a1973401d2", "patch": "@@ -69,8 +69,7 @@ impl<T: Clone> Clone for VecDeque<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T> Drop for VecDeque<T> {\n-    #[unsafe_destructor_blind_to_params]\n+unsafe impl<#[may_dangle] T> Drop for VecDeque<T> {\n     fn drop(&mut self) {\n         let (front, back) = self.as_mut_slices();\n         unsafe {"}, {"sha": "1ab62130cd3ddecedce8d39dbc58c9ebe8a3fcef", "filename": "src/libstd/collections/hash/table.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs?ref=ca9b07bbc974414e2b9055c5e50e38a1973401d2", "patch": "@@ -1061,8 +1061,7 @@ impl<K: Clone, V: Clone> Clone for RawTable<K, V> {\n     }\n }\n \n-impl<K, V> Drop for RawTable<K, V> {\n-    #[unsafe_destructor_blind_to_params]\n+unsafe impl<#[may_dangle] K, #[may_dangle] V> Drop for RawTable<K, V> {\n     fn drop(&mut self) {\n         if self.capacity == 0 {\n             return;"}, {"sha": "3f1975525e47e893595d361f6f3d995a8129eb19", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=ca9b07bbc974414e2b9055c5e50e38a1973401d2", "patch": "@@ -250,13 +250,14 @@\n #![feature(const_fn)]\n #![feature(core_float)]\n #![feature(core_intrinsics)]\n-#![feature(dropck_parametricity)]\n+#![feature(dropck_eyepatch)]\n #![feature(exact_size_is_empty)]\n #![feature(float_extras)]\n #![feature(float_from_str_radix)]\n #![feature(fn_traits)]\n #![feature(fnbox)]\n #![feature(fused)]\n+#![feature(generic_param_attrs)]\n #![feature(hashmap_hasher)]\n #![feature(heap_api)]\n #![feature(inclusive_range)]"}, {"sha": "f8426e3b5782fab3fa40fa4e1642991db0828716", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=ca9b07bbc974414e2b9055c5e50e38a1973401d2", "patch": "@@ -280,8 +280,7 @@ impl<T: ?Sized> Mutex<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: ?Sized> Drop for Mutex<T> {\n-    #[unsafe_destructor_blind_to_params]\n+unsafe impl<#[may_dangle] T: ?Sized> Drop for Mutex<T> {\n     fn drop(&mut self) {\n         // This is actually safe b/c we know that there is no further usage of\n         // this mutex (it's up to the user to arrange for a mutex to get"}, {"sha": "adbb98e4b1f4f664a99ab278c06a517639e091de", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9b07bbc974414e2b9055c5e50e38a1973401d2/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=ca9b07bbc974414e2b9055c5e50e38a1973401d2", "patch": "@@ -310,8 +310,7 @@ impl<T: ?Sized> RwLock<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: ?Sized> Drop for RwLock<T> {\n-    #[unsafe_destructor_blind_to_params]\n+unsafe impl<#[may_dangle] T: ?Sized> Drop for RwLock<T> {\n     fn drop(&mut self) {\n         // IMPORTANT: This code needs to be kept in sync with `RwLock::into_inner`.\n         unsafe { self.inner.destroy() }"}]}