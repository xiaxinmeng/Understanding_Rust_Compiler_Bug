{"sha": "0b2fd9b1329a41702ff2db51426003a37c1db510", "node_id": "C_kwDOAAsO6NoAKDBiMmZkOWIxMzI5YTQxNzAyZmYyZGI1MTQyNjAwM2EzN2MxZGI1MTA", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-12-23T22:23:51Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-12-24T05:03:49Z"}, "message": "Fix static async closure qualifier order", "tree": {"sha": "bb4e0bc3396931a6170a59aaca8450a01f5f3d68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb4e0bc3396931a6170a59aaca8450a01f5f3d68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b2fd9b1329a41702ff2db51426003a37c1db510", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b2fd9b1329a41702ff2db51426003a37c1db510", "html_url": "https://github.com/rust-lang/rust/commit/0b2fd9b1329a41702ff2db51426003a37c1db510", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b2fd9b1329a41702ff2db51426003a37c1db510/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b8303d47968a0e1fcad4b143e0ff4b5e512f37b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b8303d47968a0e1fcad4b143e0ff4b5e512f37b", "html_url": "https://github.com/rust-lang/rust/commit/7b8303d47968a0e1fcad4b143e0ff4b5e512f37b"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "e688db1c39d7c79209178ef2c1ae108fa909647d", "filename": "src/closures.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0b2fd9b1329a41702ff2db51426003a37c1db510/src%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b2fd9b1329a41702ff2db51426003a37c1db510/src%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclosures.rs?ref=0b2fd9b1329a41702ff2db51426003a37c1db510", "patch": "@@ -236,21 +236,21 @@ fn rewrite_closure_fn_decl(\n     context: &RewriteContext<'_>,\n     shape: Shape,\n ) -> Option<(String, usize)> {\n-    let is_async = if asyncness.is_async() { \"async \" } else { \"\" };\n-    let mover = if capture == ast::CaptureBy::Value {\n-        \"move \"\n+    let immovable = if movability == ast::Movability::Static {\n+        \"static \"\n     } else {\n         \"\"\n     };\n-    let immovable = if movability == ast::Movability::Static {\n-        \"static \"\n+    let is_async = if asyncness.is_async() { \"async \" } else { \"\" };\n+    let mover = if capture == ast::CaptureBy::Value {\n+        \"move \"\n     } else {\n         \"\"\n     };\n     // 4 = \"|| {\".len(), which is overconservative when the closure consists of\n     // a single expression.\n     let nested_shape = shape\n-        .shrink_left(is_async.len() + mover.len() + immovable.len())?\n+        .shrink_left(immovable.len() + is_async.len() + mover.len())?\n         .sub_width(4)?;\n \n     // 1 = |\n@@ -288,7 +288,7 @@ fn rewrite_closure_fn_decl(\n         .tactic(tactic)\n         .preserve_newline(true);\n     let list_str = write_list(&item_vec, &fmt)?;\n-    let mut prefix = format!(\"{}{}{}|{}|\", is_async, immovable, mover, list_str);\n+    let mut prefix = format!(\"{}{}{}|{}|\", immovable, is_async, mover, list_str);\n \n     if !ret_str.is_empty() {\n         if prefix.contains('\\n') {"}, {"sha": "18cb4fb5f5cc53bcc15db4b349c40419e249895b", "filename": "tests/source/async_block.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0b2fd9b1329a41702ff2db51426003a37c1db510/tests%2Fsource%2Fasync_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b2fd9b1329a41702ff2db51426003a37c1db510/tests%2Fsource%2Fasync_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fasync_block.rs?ref=0b2fd9b1329a41702ff2db51426003a37c1db510", "patch": "@@ -32,4 +32,20 @@ fn baz() {\n             Ok(())\n         },\n     );\n+\n+    spawn(\n+        a,\n+        static async || {\n+            action();\n+            Ok(())\n+        },\n+    );\n+\n+    spawn(\n+        a,\n+        static async move || {\n+            action();\n+            Ok(())\n+        },\n+    );\n }"}, {"sha": "137d849c9ee027b0c4debb44e729176311d08e9b", "filename": "tests/target/async_block.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0b2fd9b1329a41702ff2db51426003a37c1db510/tests%2Ftarget%2Fasync_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b2fd9b1329a41702ff2db51426003a37c1db510/tests%2Ftarget%2Fasync_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fasync_block.rs?ref=0b2fd9b1329a41702ff2db51426003a37c1db510", "patch": "@@ -22,4 +22,14 @@ fn baz() {\n         action();\n         Ok(())\n     });\n+\n+    spawn(a, static async || {\n+        action();\n+        Ok(())\n+    });\n+\n+    spawn(a, static async move || {\n+        action();\n+        Ok(())\n+    });\n }"}]}