{"sha": "f15a1ec45dbc0f24bdc2eef3e4d7d5a16fa4af1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNWExZWM0NWRiYzBmMjRiZGMyZWVmM2U0ZDdkNWExNmZhNGFmMWE=", "commit": {"author": {"name": "iirelu", "email": "anna@bawk.space", "date": "2018-09-06T18:44:29Z"}, "committer": {"name": "iirelu", "email": "anna@bawk.space", "date": "2018-09-06T18:44:29Z"}, "message": "Add keyword docs on `enum`", "tree": {"sha": "56ba6df027ddda5af68623ce04efbec95de3f25b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56ba6df027ddda5af68623ce04efbec95de3f25b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f15a1ec45dbc0f24bdc2eef3e4d7d5a16fa4af1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f15a1ec45dbc0f24bdc2eef3e4d7d5a16fa4af1a", "html_url": "https://github.com/rust-lang/rust/commit/f15a1ec45dbc0f24bdc2eef3e4d7d5a16fa4af1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f15a1ec45dbc0f24bdc2eef3e4d7d5a16fa4af1a/comments", "author": {"login": "iirelu", "id": 3432543, "node_id": "MDQ6VXNlcjM0MzI1NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3432543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iirelu", "html_url": "https://github.com/iirelu", "followers_url": "https://api.github.com/users/iirelu/followers", "following_url": "https://api.github.com/users/iirelu/following{/other_user}", "gists_url": "https://api.github.com/users/iirelu/gists{/gist_id}", "starred_url": "https://api.github.com/users/iirelu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iirelu/subscriptions", "organizations_url": "https://api.github.com/users/iirelu/orgs", "repos_url": "https://api.github.com/users/iirelu/repos", "events_url": "https://api.github.com/users/iirelu/events{/privacy}", "received_events_url": "https://api.github.com/users/iirelu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iirelu", "id": 3432543, "node_id": "MDQ6VXNlcjM0MzI1NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3432543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iirelu", "html_url": "https://github.com/iirelu", "followers_url": "https://api.github.com/users/iirelu/followers", "following_url": "https://api.github.com/users/iirelu/following{/other_user}", "gists_url": "https://api.github.com/users/iirelu/gists{/gist_id}", "starred_url": "https://api.github.com/users/iirelu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iirelu/subscriptions", "organizations_url": "https://api.github.com/users/iirelu/orgs", "repos_url": "https://api.github.com/users/iirelu/repos", "events_url": "https://api.github.com/users/iirelu/events{/privacy}", "received_events_url": "https://api.github.com/users/iirelu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8d6261f9bc3ae9d11a34f194d8593556965a537", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8d6261f9bc3ae9d11a34f194d8593556965a537", "html_url": "https://github.com/rust-lang/rust/commit/f8d6261f9bc3ae9d11a34f194d8593556965a537"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "5026ca4d72264b478e15051ea7539253e6a416e0", "filename": "src/libstd/keyword_docs.rs", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/f15a1ec45dbc0f24bdc2eef3e4d7d5a16fa4af1a/src%2Flibstd%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f15a1ec45dbc0f24bdc2eef3e4d7d5a16fa4af1a/src%2Flibstd%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkeyword_docs.rs?ref=f15a1ec45dbc0f24bdc2eef3e4d7d5a16fa4af1a", "patch": "@@ -124,6 +124,61 @@ mod const_keyword { }\n /// [`pub`]: keyword.pub.html\n mod crate_keyword { }\n \n+#[doc(keyword = \"enum\")]\n+//\n+/// For defining enumerations.\n+///\n+/// Enums in Rust are similar to those of other compiled languages like C, but have important\n+/// differences that make them considerably more powerful. What Rust calls enums are more commonly\n+/// known as Algebraic Data Types if you're coming from a functional programming background, but\n+/// the important part is that data can go with the enum variants.\n+///\n+/// ```rust\n+/// # struct Coord;\n+/// enum SimpleEnum {\n+///     FirstVariant,\n+///     SecondVariant,\n+///     ThirdVariant,\n+/// }\n+///\n+/// enum Location {\n+///     Unknown,\n+///     Anonymous,\n+///     Known(Coord),\n+/// }\n+///\n+/// enum ComplexEnum {\n+///     Nothing,\n+///     Something(u32),\n+///     LotsOfThings {\n+///         usual_struct_stuff: bool,\n+///         blah: String,\n+///     }\n+/// }\n+///\n+/// enum EmptyEnum { }\n+/// ```\n+///\n+/// The first enum shown is the usual kind of enum you'd find in a C-style language. The second\n+/// shows off a hypothetical example of something storing location data, with Coord being any other\n+/// type that's needed, for example a struct. The third example demonstrates the kind of variant a\n+/// variant can store, ranging from nothing, to a tuple, to an anonymous struct.\n+///\n+/// Instantiating enum variants involves explicitly using the enum's name as its namespace,\n+/// followed by one of its variants. `SimpleEnum::SecondVariant` would be an example from above.\n+/// When data follows along with a variant, such as with rust's built-in [`Option`] type, the data\n+/// is added as the type describes, for example `Option::Some(123)`. The same follows with\n+/// struct-like variants, with things looking like `ComplexEnum::LotsOfThings { usual_struct_stuff:\n+/// true, blah: \"hello!\".to_string(), }`. Empty Enums are similar to () in that they cannot be\n+/// instantiated at all, and are used mainly to mess with the type system in interesting ways.\n+///\n+/// For more information, take a look at the [Rust Book] or the [Reference]\n+///\n+/// [`Option`]: option/enum.Option.html\n+/// [Rust Book]: https://doc.rust-lang.org/book/second-edition/ch06-01-defining-an-enum.html\n+/// [Reference]: https://doc.rust-lang.org/reference/items/enumerations.html\n+mod enum_keyword { }\n+\n #[doc(keyword = \"fn\")]\n //\n /// The `fn` keyword."}]}