{"sha": "eceb173de9ee0cad205a139249a4d043fe251e0e", "node_id": "C_kwDOAAsO6NoAKGVjZWIxNzNkZTllZTBjYWQyMDVhMTM5MjQ5YTRkMDQzZmUyNTFlMGU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-03-29T15:11:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-29T15:11:52Z"}, "message": "Rollup merge of #95415 - notriddle:notriddle/issue-82081, r=Dylan-DPC\n\ndiagnostics: regression test for HashMap iter_mut suggestion\n\nCloses #82081", "tree": {"sha": "ab7e1a8ba4ce55e655ee959959059a42248ba82b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab7e1a8ba4ce55e655ee959959059a42248ba82b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eceb173de9ee0cad205a139249a4d043fe251e0e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiQyG4CRBK7hj4Ov3rIwAA5wgIAJlZC5fVFk230aPwdQdbPajE\nt5SE166D4+sFN3/AYz0whrxV4cBiXG1hHKVg/D8GQp+WcCrr3g1ayQVDzOWIbUdX\npNfWwp7Hc+1iK/vVAZem79CS6uyCDPQVkfLaW5FWB4Ols57+11/WkxkMCWLEbYoK\n3zXx8WT65Ubl8w6EnlS28mmUWchTRLkV9RY8ncjHk3F0gS2j9s9wA4uNbt1iZTqP\nUcD6QoXdJWS8GQyvvZFhxAaRI+LjXATNH/7pwiZfFE/3TeQJ+a5acyks8s734553\nFYzyWpmf3BTzm88LaEhMu0dCIRti+4kABZToEWTDidQdUfa5o9n8niXU4GORubQ=\n=OsRN\n-----END PGP SIGNATURE-----\n", "payload": "tree ab7e1a8ba4ce55e655ee959959059a42248ba82b\nparent 1830e8fdcd047c986e4d7fcdf3a1f8ae1a53deeb\nparent 757ab6b55c1e06689d457550afe5da3955a22c3a\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1648566712 +0200\ncommitter GitHub <noreply@github.com> 1648566712 +0200\n\nRollup merge of #95415 - notriddle:notriddle/issue-82081, r=Dylan-DPC\n\ndiagnostics: regression test for HashMap iter_mut suggestion\n\nCloses #82081\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eceb173de9ee0cad205a139249a4d043fe251e0e", "html_url": "https://github.com/rust-lang/rust/commit/eceb173de9ee0cad205a139249a4d043fe251e0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eceb173de9ee0cad205a139249a4d043fe251e0e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1830e8fdcd047c986e4d7fcdf3a1f8ae1a53deeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1830e8fdcd047c986e4d7fcdf3a1f8ae1a53deeb", "html_url": "https://github.com/rust-lang/rust/commit/1830e8fdcd047c986e4d7fcdf3a1f8ae1a53deeb"}, {"sha": "757ab6b55c1e06689d457550afe5da3955a22c3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/757ab6b55c1e06689d457550afe5da3955a22c3a", "html_url": "https://github.com/rust-lang/rust/commit/757ab6b55c1e06689d457550afe5da3955a22c3a"}], "stats": {"total": 66, "additions": 64, "deletions": 2}, "files": [{"sha": "6e551e95cbb437cecff93540e6cd40b24d4e687c", "filename": "compiler/rustc_borrowck/src/diagnostics/mutability_errors.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/eceb173de9ee0cad205a139249a4d043fe251e0e/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eceb173de9ee0cad205a139249a4d043fe251e0e/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs?ref=eceb173de9ee0cad205a139249a4d043fe251e0e", "patch": "@@ -787,7 +787,12 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                                                         _,\n                                                         [\n                                                             Expr {\n-                                                                kind: MethodCall(path_segment, ..),\n+                                                                kind:\n+                                                                    MethodCall(\n+                                                                        path_segment,\n+                                                                        _args,\n+                                                                        span,\n+                                                                    ),\n                                                                 hir_id,\n                                                                 ..\n                                                             },\n@@ -831,7 +836,7 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                 if let Some(mut suggestions) = opt_suggestions {\n                     if suggestions.peek().is_some() {\n                         err.span_suggestions(\n-                            path_segment.ident.span,\n+                            *span,\n                             \"use mutable method\",\n                             suggestions,\n                             Applicability::MaybeIncorrect,"}, {"sha": "b69bad98888e38eb65ac7ccdf1f289576a7408ea", "filename": "src/test/ui/suggestions/suggest-mut-method-for-loop-hashmap.fixed", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/eceb173de9ee0cad205a139249a4d043fe251e0e/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-mut-method-for-loop-hashmap.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eceb173de9ee0cad205a139249a4d043fe251e0e/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-mut-method-for-loop-hashmap.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-mut-method-for-loop-hashmap.fixed?ref=eceb173de9ee0cad205a139249a4d043fe251e0e", "patch": "@@ -0,0 +1,21 @@\n+// run-rustfix\n+// https://github.com/rust-lang/rust/issues/82081\n+\n+use std::collections::HashMap;\n+\n+struct Test {\n+    v: u32,\n+}\n+\n+fn main() {\n+    let mut map = HashMap::new();\n+    map.insert(\"a\", Test { v: 0 });\n+\n+    for (_k, mut v) in map.iter_mut() {\n+        //~^ HELP use mutable method\n+        //~| NOTE this iterator yields `&` references\n+        v.v += 1;\n+        //~^ ERROR cannot assign to `v.v`\n+        //~| NOTE `v` is a `&` reference\n+    }\n+}"}, {"sha": "9284410dfa383f9c44ee4ef9d7a027ad4cbd4329", "filename": "src/test/ui/suggestions/suggest-mut-method-for-loop-hashmap.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/eceb173de9ee0cad205a139249a4d043fe251e0e/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-mut-method-for-loop-hashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eceb173de9ee0cad205a139249a4d043fe251e0e/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-mut-method-for-loop-hashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-mut-method-for-loop-hashmap.rs?ref=eceb173de9ee0cad205a139249a4d043fe251e0e", "patch": "@@ -0,0 +1,21 @@\n+// run-rustfix\n+// https://github.com/rust-lang/rust/issues/82081\n+\n+use std::collections::HashMap;\n+\n+struct Test {\n+    v: u32,\n+}\n+\n+fn main() {\n+    let mut map = HashMap::new();\n+    map.insert(\"a\", Test { v: 0 });\n+\n+    for (_k, mut v) in map.iter() {\n+        //~^ HELP use mutable method\n+        //~| NOTE this iterator yields `&` references\n+        v.v += 1;\n+        //~^ ERROR cannot assign to `v.v`\n+        //~| NOTE `v` is a `&` reference\n+    }\n+}"}, {"sha": "74433daa6acf234fba783887588ce70aa50def13", "filename": "src/test/ui/suggestions/suggest-mut-method-for-loop-hashmap.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/eceb173de9ee0cad205a139249a4d043fe251e0e/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-mut-method-for-loop-hashmap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eceb173de9ee0cad205a139249a4d043fe251e0e/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-mut-method-for-loop-hashmap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-mut-method-for-loop-hashmap.stderr?ref=eceb173de9ee0cad205a139249a4d043fe251e0e", "patch": "@@ -0,0 +1,15 @@\n+error[E0594]: cannot assign to `v.v`, which is behind a `&` reference\n+  --> $DIR/suggest-mut-method-for-loop-hashmap.rs:17:9\n+   |\n+LL |     for (_k, mut v) in map.iter() {\n+   |                        ----------\n+   |                        |   |\n+   |                        |   help: use mutable method: `iter_mut()`\n+   |                        this iterator yields `&` references\n+...\n+LL |         v.v += 1;\n+   |         ^^^^^^^^ `v` is a `&` reference, so the data it refers to cannot be written\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0594`."}]}