{"sha": "d7b46e0527cd7b52845f37cffc57cbae4ba0b945", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3YjQ2ZTA1MjdjZDdiNTI4NDVmMzdjZmZjNTdjYmFlNGJhMGI5NDU=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-03-14T00:01:28Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-03-14T00:01:46Z"}, "message": "vscode-postrefactor: enforcing more reentrancy", "tree": {"sha": "b00b65495dd255bcc7376abd13eeed035cdd9ac2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b00b65495dd255bcc7376abd13eeed035cdd9ac2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7b46e0527cd7b52845f37cffc57cbae4ba0b945", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7b46e0527cd7b52845f37cffc57cbae4ba0b945", "html_url": "https://github.com/rust-lang/rust/commit/d7b46e0527cd7b52845f37cffc57cbae4ba0b945", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7b46e0527cd7b52845f37cffc57cbae4ba0b945/comments", "author": null, "committer": null, "parents": [{"sha": "7f02d4657b796a438e441e107d4fb1906ec1ed7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f02d4657b796a438e441e107d4fb1906ec1ed7b", "html_url": "https://github.com/rust-lang/rust/commit/7f02d4657b796a438e441e107d4fb1906ec1ed7b"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "f6dd20d82d1064821768fc45004041b369f21b1a", "filename": "editors/code/src/installation/extension.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7b46e0527cd7b52845f37cffc57cbae4ba0b945/editors%2Fcode%2Fsrc%2Finstallation%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/d7b46e0527cd7b52845f37cffc57cbae4ba0b945/editors%2Fcode%2Fsrc%2Finstallation%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fextension.ts?ref=d7b46e0527cd7b52845f37cffc57cbae4ba0b945", "patch": "@@ -97,7 +97,7 @@ async function askToDownloadProperExtensionVersion(config: Config, reason = \"\")\n  *\n  * ACHTUNG!: this function has a crazy amount of state transitions, handling errors during\n  * each of them would result in a ton of code (especially accounting for cross-process\n- * shared mutable `globalState` access). Enforcing reentrancy for this is best-effort.\n+ * shared mutable `globalState` access). Enforcing no reentrancy for this is best-effort.\n  */\n const tryDownloadNightlyExtension = notReentrant(async function tryDownloadNightlyExtension(\n     config: Config,"}, {"sha": "f359584744bac09bdf5da063fd03b4c28ec6fa86", "filename": "editors/code/src/installation/server.ts", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d7b46e0527cd7b52845f37cffc57cbae4ba0b945/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/d7b46e0527cd7b52845f37cffc57cbae4ba0b945/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts?ref=d7b46e0527cd7b52845f37cffc57cbae4ba0b945", "patch": "@@ -5,7 +5,7 @@ import { spawnSync } from \"child_process\";\n import { ArtifactSource } from \"./interfaces\";\n import { fetchArtifactReleaseInfo } from \"./fetch_artifact_release_info\";\n import { downloadArtifactWithProgressUi } from \"./downloads\";\n-import { log, assert } from \"../util\";\n+import { log, assert, notReentrant } from \"../util\";\n import { Config, NIGHTLY_TAG } from \"../config\";\n \n export async function ensureServerBinary(config: Config): Promise<null | string> {\n@@ -82,7 +82,10 @@ function shouldDownloadServer(\n     return installed.date.getTime() !== required.date.getTime();\n }\n \n-async function downloadServer(\n+/**\n+ * Enforcing no reentrancy for this is best-effort.\n+ */\n+const downloadServer = notReentrant(async function downloadServer(\n     source: ArtifactSource.GithubRelease,\n     config: Config,\n ): Promise<null | string> {\n@@ -112,7 +115,7 @@ async function downloadServer(\n     );\n \n     return binaryPath;\n-}\n+});\n \n function isBinaryAvailable(binaryPath: string): boolean {\n     const res = spawnSync(binaryPath, [\"--version\"]);"}]}