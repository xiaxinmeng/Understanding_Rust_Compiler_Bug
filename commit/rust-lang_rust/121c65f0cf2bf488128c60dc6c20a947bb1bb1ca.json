{"sha": "121c65f0cf2bf488128c60dc6c20a947bb1bb1ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMWM2NWYwY2YyYmY0ODgxMjhjNjBkYzZjMjBhOTQ3YmIxYmIxY2E=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2020-12-29T21:40:55Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-01-08T18:13:06Z"}, "message": "Add keywords to interning defined symbol lint", "tree": {"sha": "40d079b8dd5c020a630078ec0e6cdcd1fe3ceb65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40d079b8dd5c020a630078ec0e6cdcd1fe3ceb65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/121c65f0cf2bf488128c60dc6c20a947bb1bb1ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/121c65f0cf2bf488128c60dc6c20a947bb1bb1ca", "html_url": "https://github.com/rust-lang/rust/commit/121c65f0cf2bf488128c60dc6c20a947bb1bb1ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/121c65f0cf2bf488128c60dc6c20a947bb1bb1ca/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24c700b5d70f063521435c450ae1b48720b5f991", "url": "https://api.github.com/repos/rust-lang/rust/commits/24c700b5d70f063521435c450ae1b48720b5f991", "html_url": "https://github.com/rust-lang/rust/commit/24c700b5d70f063521435c450ae1b48720b5f991"}], "stats": {"total": 38, "additions": 27, "deletions": 11}, "files": [{"sha": "c0b6688fa151358a568f6c9cdf175e0ac2050f15", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/121c65f0cf2bf488128c60dc6c20a947bb1bb1ca/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/121c65f0cf2bf488128c60dc6c20a947bb1bb1ca/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=121c65f0cf2bf488128c60dc6c20a947bb1bb1ca", "patch": "@@ -881,16 +881,18 @@ impl<'tcx> LateLintPass<'tcx> for InterningDefinedSymbol {\n             return;\n         }\n \n-        if let Some(Res::Def(_, def_id)) = path_to_res(cx, &paths::SYM_MODULE) {\n-            for item in cx.tcx.item_children(def_id).iter() {\n-                if_chain! {\n-                    if let Res::Def(DefKind::Const, item_def_id) = item.res;\n-                    let ty = cx.tcx.type_of(item_def_id);\n-                    if match_type(cx, ty, &paths::SYMBOL);\n-                    if let Ok(ConstValue::Scalar(value)) = cx.tcx.const_eval_poly(item_def_id);\n-                    if let Ok(value) = value.to_u32();\n-                    then {\n-                        self.symbol_map.insert(value, item_def_id);\n+        for &module in &[&paths::KW_MODULE, &paths::SYM_MODULE] {\n+            if let Some(Res::Def(_, def_id)) = path_to_res(cx, module) {\n+                for item in cx.tcx.item_children(def_id).iter() {\n+                    if_chain! {\n+                        if let Res::Def(DefKind::Const, item_def_id) = item.res;\n+                        let ty = cx.tcx.type_of(item_def_id);\n+                        if match_type(cx, ty, &paths::SYMBOL);\n+                        if let Ok(ConstValue::Scalar(value)) = cx.tcx.const_eval_poly(item_def_id);\n+                        if let Ok(value) = value.to_u32();\n+                        then {\n+                            self.symbol_map.insert(value, item_def_id);\n+                        }\n                     }\n                 }\n             }"}, {"sha": "3179be6af2a535fc10542785326f0f4d7693a93e", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/121c65f0cf2bf488128c60dc6c20a947bb1bb1ca/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/121c65f0cf2bf488128c60dc6c20a947bb1bb1ca/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=121c65f0cf2bf488128c60dc6c20a947bb1bb1ca", "patch": "@@ -65,6 +65,8 @@ pub const IPADDR_V4: [&str; 4] = [\"std\", \"net\", \"IpAddr\", \"V4\"];\n pub const IPADDR_V6: [&str; 4] = [\"std\", \"net\", \"IpAddr\", \"V6\"];\n pub const ITERATOR: [&str; 5] = [\"core\", \"iter\", \"traits\", \"iterator\", \"Iterator\"];\n #[cfg(feature = \"internal-lints\")]\n+pub const KW_MODULE: [&str; 3] = [\"rustc_span\", \"symbol\", \"kw\"];\n+#[cfg(feature = \"internal-lints\")]\n pub const LATE_CONTEXT: [&str; 2] = [\"rustc_lint\", \"LateContext\"];\n pub const LINKED_LIST: [&str; 4] = [\"alloc\", \"collections\", \"linked_list\", \"LinkedList\"];\n #[cfg(feature = \"internal-lints\")]"}, {"sha": "9ab845a573aca66fc880008bee4c0a9f791bda90", "filename": "tests/ui-internal/interning_defined_symbol.fixed", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/121c65f0cf2bf488128c60dc6c20a947bb1bb1ca/tests%2Fui-internal%2Finterning_defined_symbol.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/121c65f0cf2bf488128c60dc6c20a947bb1bb1ca/tests%2Fui-internal%2Finterning_defined_symbol.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Finterning_defined_symbol.fixed?ref=121c65f0cf2bf488128c60dc6c20a947bb1bb1ca", "patch": "@@ -22,6 +22,9 @@ fn main() {\n     // Correct suggestion when symbol isn't stringified constant name\n     let _ = rustc_span::sym::proc_dash_macro;\n \n+    // interning a keyword\n+    let _ = rustc_span::symbol::kw::SelfLower;\n+\n     // Interning a symbol that is not defined\n     let _ = Symbol::intern(\"xyz123\");\n     let _ = sym!(xyz123);"}, {"sha": "a58e182971d7323e63b595a9e501f0abb63a63f6", "filename": "tests/ui-internal/interning_defined_symbol.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/121c65f0cf2bf488128c60dc6c20a947bb1bb1ca/tests%2Fui-internal%2Finterning_defined_symbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/121c65f0cf2bf488128c60dc6c20a947bb1bb1ca/tests%2Fui-internal%2Finterning_defined_symbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Finterning_defined_symbol.rs?ref=121c65f0cf2bf488128c60dc6c20a947bb1bb1ca", "patch": "@@ -22,6 +22,9 @@ fn main() {\n     // Correct suggestion when symbol isn't stringified constant name\n     let _ = Symbol::intern(\"proc-macro\");\n \n+    // interning a keyword\n+    let _ = Symbol::intern(\"self\");\n+\n     // Interning a symbol that is not defined\n     let _ = Symbol::intern(\"xyz123\");\n     let _ = sym!(xyz123);"}, {"sha": "50c1c268eb132e9fdaaab784fae4861be227eb9e", "filename": "tests/ui-internal/interning_defined_symbol.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/121c65f0cf2bf488128c60dc6c20a947bb1bb1ca/tests%2Fui-internal%2Finterning_defined_symbol.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/121c65f0cf2bf488128c60dc6c20a947bb1bb1ca/tests%2Fui-internal%2Finterning_defined_symbol.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Finterning_defined_symbol.stderr?ref=121c65f0cf2bf488128c60dc6c20a947bb1bb1ca", "patch": "@@ -23,5 +23,11 @@ error: interning a defined symbol\n LL |     let _ = Symbol::intern(\"proc-macro\");\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `rustc_span::sym::proc_dash_macro`\n \n-error: aborting due to 3 previous errors\n+error: interning a defined symbol\n+  --> $DIR/interning_defined_symbol.rs:26:13\n+   |\n+LL |     let _ = Symbol::intern(\"self\");\n+   |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `rustc_span::symbol::kw::SelfLower`\n+\n+error: aborting due to 4 previous errors\n "}]}