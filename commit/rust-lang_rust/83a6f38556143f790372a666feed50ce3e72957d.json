{"sha": "83a6f38556143f790372a666feed50ce3e72957d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzYTZmMzg1NTYxNDNmNzkwMzcyYTY2NmZlZWQ1MGNlM2U3Mjk1N2Q=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-27T19:16:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-27T19:16:50Z"}, "message": "Rollup merge of #46285 - SimonSapin:twos-complement, r=GuillaumeGomez\n\nDocument non-obvious behavior of fmt::UpperHex & co for negative integers\n\nBefore stabilization I\u2019d have suggested changing the behavior,  but that time is past.", "tree": {"sha": "e8567427e31b0183586951308b1f19f1de337ea1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8567427e31b0183586951308b1f19f1de337ea1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83a6f38556143f790372a666feed50ce3e72957d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83a6f38556143f790372a666feed50ce3e72957d", "html_url": "https://github.com/rust-lang/rust/commit/83a6f38556143f790372a666feed50ce3e72957d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83a6f38556143f790372a666feed50ce3e72957d/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dd10e62ccf44f9542261060147177918afd6611", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dd10e62ccf44f9542261060147177918afd6611", "html_url": "https://github.com/rust-lang/rust/commit/8dd10e62ccf44f9542261060147177918afd6611"}, {"sha": "a326d8d1ba6286b1641b8c89d5ae1383fbfac76a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a326d8d1ba6286b1641b8c89d5ae1383fbfac76a", "html_url": "https://github.com/rust-lang/rust/commit/a326d8d1ba6286b1641b8c89d5ae1383fbfac76a"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "551aa929ce457d44f195e8215da80820a6dddbdd", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/83a6f38556143f790372a666feed50ce3e72957d/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83a6f38556143f790372a666feed50ce3e72957d/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=83a6f38556143f790372a666feed50ce3e72957d", "patch": "@@ -624,6 +624,9 @@ pub trait Display {\n ///\n /// The `Octal` trait should format its output as a number in base-8.\n ///\n+/// For primitive signed integers (`i8` to `i128`, and `isize`),\n+/// negative values are formatted as the two\u2019s complement representation.\n+///\n /// The alternate flag, `#`, adds a `0o` in front of the output.\n ///\n /// For more information on formatters, see [the module-level documentation][module].\n@@ -639,6 +642,8 @@ pub trait Display {\n ///\n /// assert_eq!(format!(\"{:o}\", x), \"52\");\n /// assert_eq!(format!(\"{:#o}\", x), \"0o52\");\n+///\n+/// assert_eq!(format!(\"{:o}\", -16), \"37777777760\");\n /// ```\n ///\n /// Implementing `Octal` on a type:\n@@ -671,6 +676,9 @@ pub trait Octal {\n ///\n /// The `Binary` trait should format its output as a number in binary.\n ///\n+/// For primitive signed integers (`i8` to `i128`, and `isize`),\n+/// negative values are formatted as the two\u2019s complement representation.\n+///\n /// The alternate flag, `#`, adds a `0b` in front of the output.\n ///\n /// For more information on formatters, see [the module-level documentation][module].\n@@ -686,6 +694,8 @@ pub trait Octal {\n ///\n /// assert_eq!(format!(\"{:b}\", x), \"101010\");\n /// assert_eq!(format!(\"{:#b}\", x), \"0b101010\");\n+///\n+/// assert_eq!(format!(\"{:b}\", -16), \"11111111111111111111111111110000\");\n /// ```\n ///\n /// Implementing `Binary` on a type:\n@@ -719,6 +729,9 @@ pub trait Binary {\n /// The `LowerHex` trait should format its output as a number in hexadecimal, with `a` through `f`\n /// in lower case.\n ///\n+/// For primitive signed integers (`i8` to `i128`, and `isize`),\n+/// negative values are formatted as the two\u2019s complement representation.\n+///\n /// The alternate flag, `#`, adds a `0x` in front of the output.\n ///\n /// For more information on formatters, see [the module-level documentation][module].\n@@ -734,6 +747,8 @@ pub trait Binary {\n ///\n /// assert_eq!(format!(\"{:x}\", x), \"2a\");\n /// assert_eq!(format!(\"{:#x}\", x), \"0x2a\");\n+///\n+/// assert_eq!(format!(\"{:x}\", -16), \"fffffff0\");\n /// ```\n ///\n /// Implementing `LowerHex` on a type:\n@@ -767,6 +782,9 @@ pub trait LowerHex {\n /// The `UpperHex` trait should format its output as a number in hexadecimal, with `A` through `F`\n /// in upper case.\n ///\n+/// For primitive signed integers (`i8` to `i128`, and `isize`),\n+/// negative values are formatted as the two\u2019s complement representation.\n+///\n /// The alternate flag, `#`, adds a `0x` in front of the output.\n ///\n /// For more information on formatters, see [the module-level documentation][module].\n@@ -782,6 +800,8 @@ pub trait LowerHex {\n ///\n /// assert_eq!(format!(\"{:X}\", x), \"2A\");\n /// assert_eq!(format!(\"{:#X}\", x), \"0x2A\");\n+///\n+/// assert_eq!(format!(\"{:X}\", -16), \"FFFFFFF0\");\n /// ```\n ///\n /// Implementing `UpperHex` on a type:"}]}