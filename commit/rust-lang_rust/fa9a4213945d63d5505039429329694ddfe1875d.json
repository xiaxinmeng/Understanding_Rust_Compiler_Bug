{"sha": "fa9a4213945d63d5505039429329694ddfe1875d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhOWE0MjEzOTQ1ZDYzZDU1MDUwMzk0MjkzMjk2OTRkZGZlMTg3NWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-15T07:11:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-15T07:11:33Z"}, "message": "Auto merge of #28921 - petrochenkov:intconv, r=alexcrichton\n\nPart of https://github.com/rust-lang/rfcs/pull/1218#issuecomment-146615171\r\n\r\nr? @aturon", "tree": {"sha": "57a374f83ce06d7dde102aea2f95a7f331325451", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57a374f83ce06d7dde102aea2f95a7f331325451"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa9a4213945d63d5505039429329694ddfe1875d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa9a4213945d63d5505039429329694ddfe1875d", "html_url": "https://github.com/rust-lang/rust/commit/fa9a4213945d63d5505039429329694ddfe1875d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa9a4213945d63d5505039429329694ddfe1875d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99dc12472a3e4f194b33829339701205bf3afcf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/99dc12472a3e4f194b33829339701205bf3afcf5", "html_url": "https://github.com/rust-lang/rust/commit/99dc12472a3e4f194b33829339701205bf3afcf5"}, {"sha": "6f3e84dbe9434b020da73d66275c3609a2b7bb1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f3e84dbe9434b020da73d66275c3609a2b7bb1b", "html_url": "https://github.com/rust-lang/rust/commit/6f3e84dbe9434b020da73d66275c3609a2b7bb1b"}], "stats": {"total": 83, "additions": 83, "deletions": 0}, "files": [{"sha": "8b005b2f8ba7e233b3ebd9755e465b05ae506c98", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/fa9a4213945d63d5505039429329694ddfe1875d/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa9a4213945d63d5505039429329694ddfe1875d/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=fa9a4213945d63d5505039429329694ddfe1875d", "patch": "@@ -17,6 +17,7 @@ use self::wrapping::OverflowingOps;\n \n use char::CharExt;\n use cmp::{Eq, PartialOrd};\n+use convert::From;\n use fmt;\n use intrinsics;\n use marker::{Copy, Sized};\n@@ -1471,3 +1472,45 @@ impl fmt::Display for ParseIntError {\n }\n \n pub use num::dec2flt::ParseFloatError;\n+\n+// Conversion traits for primitive integer types\n+// Conversions T -> T are covered by a blanket impl and therefore excluded\n+// Some conversions from and to usize/isize are not implemented due to portability concerns\n+macro_rules! impl_from {\n+    ($Small: ty, $Large: ty) => {\n+        #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")]\n+        impl From<$Small> for $Large {\n+            #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")]\n+            #[inline]\n+            fn from(small: $Small) -> $Large {\n+                small as $Large\n+            }\n+        }\n+    }\n+}\n+\n+// Unsigned -> Unsigned\n+impl_from! { u8, u16 }\n+impl_from! { u8, u32 }\n+impl_from! { u8, u64 }\n+impl_from! { u8, usize }\n+impl_from! { u16, u32 }\n+impl_from! { u16, u64 }\n+impl_from! { u32, u64 }\n+\n+// Signed -> Signed\n+impl_from! { i8, i16 }\n+impl_from! { i8, i32 }\n+impl_from! { i8, i64 }\n+impl_from! { i8, isize }\n+impl_from! { i16, i32 }\n+impl_from! { i16, i64 }\n+impl_from! { i32, i64 }\n+\n+// Unsigned -> Signed\n+impl_from! { u8, i16 }\n+impl_from! { u8, i32 }\n+impl_from! { u8, i64 }\n+impl_from! { u16, i32 }\n+impl_from! { u16, i64 }\n+impl_from! { u32, i64 }"}, {"sha": "5e2ec66bababebb362cce97e36ff38adcbbf730f", "filename": "src/libcoretest/num/mod.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/fa9a4213945d63d5505039429329694ddfe1875d/src%2Flibcoretest%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa9a4213945d63d5505039429329694ddfe1875d/src%2Flibcoretest%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fnum%2Fmod.rs?ref=fa9a4213945d63d5505039429329694ddfe1875d", "patch": "@@ -137,4 +137,44 @@ mod tests {\n         assert_eq!(\"+\".parse::<i8>().ok(), None);\n         assert_eq!(\"\".parse::<u8>().ok(), None);\n     }\n+\n+    macro_rules! test_impl_from {\n+        ($fn_name: ident, $Small: ty, $Large: ty) => {\n+            #[test]\n+            fn $fn_name() {\n+                let small_max = <$Small>::max_value();\n+                let small_min = <$Small>::min_value();\n+                let large_max: $Large = small_max.into();\n+                let large_min: $Large = small_min.into();\n+                assert_eq!(large_max as $Small, small_max);\n+                assert_eq!(large_min as $Small, small_min);\n+            }\n+        }\n+    }\n+\n+    // Unsigned -> Unsigned\n+    test_impl_from! { test_u8u16, u8, u16 }\n+    test_impl_from! { test_u8u32, u8, u32 }\n+    test_impl_from! { test_u8u64, u8, u64 }\n+    test_impl_from! { test_u8usize, u8, usize }\n+    test_impl_from! { test_u16u32, u16, u32 }\n+    test_impl_from! { test_u16u64, u16, u64 }\n+    test_impl_from! { test_u32u64, u32, u64 }\n+\n+    // Signed -> Signed\n+    test_impl_from! { test_i8i16, i8, i16 }\n+    test_impl_from! { test_i8i32, i8, i32 }\n+    test_impl_from! { test_i8i64, i8, i64 }\n+    test_impl_from! { test_i8isize, i8, isize }\n+    test_impl_from! { test_i16i32, i16, i32 }\n+    test_impl_from! { test_i16i64, i16, i64 }\n+    test_impl_from! { test_i32i64, i32, i64 }\n+\n+    // Unsigned -> Signed\n+    test_impl_from! { test_u8i16, u8, i16 }\n+    test_impl_from! { test_u8i32, u8, i32 }\n+    test_impl_from! { test_u8i64, u8, i64 }\n+    test_impl_from! { test_u16i32, u16, i32 }\n+    test_impl_from! { test_u16i64, u16, i64 }\n+    test_impl_from! { test_u32i64, u32, i64 }\n }"}]}