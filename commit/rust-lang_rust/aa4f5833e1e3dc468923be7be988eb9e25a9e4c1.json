{"sha": "aa4f5833e1e3dc468923be7be988eb9e25a9e4c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhNGY1ODMzZTFlM2RjNDY4OTIzYmU3YmU5ODhlYjllMjVhOWU0YzE=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2021-01-22T17:19:27Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2021-01-22T17:36:33Z"}, "message": "Only query associated_items once", "tree": {"sha": "2d1271b4c7fc2f3d7281767b80af9d6dd2297b29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d1271b4c7fc2f3d7281767b80af9d6dd2297b29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa4f5833e1e3dc468923be7be988eb9e25a9e4c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa4f5833e1e3dc468923be7be988eb9e25a9e4c1", "html_url": "https://github.com/rust-lang/rust/commit/aa4f5833e1e3dc468923be7be988eb9e25a9e4c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa4f5833e1e3dc468923be7be988eb9e25a9e4c1/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee639de007e952c006cee53278f9bc1fd773e7d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee639de007e952c006cee53278f9bc1fd773e7d9", "html_url": "https://github.com/rust-lang/rust/commit/ee639de007e952c006cee53278f9bc1fd773e7d9"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "fa630bb2b52e3908c27b72882d032a4cede15c30", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aa4f5833e1e3dc468923be7be988eb9e25a9e4c1/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa4f5833e1e3dc468923be7be988eb9e25a9e4c1/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=aa4f5833e1e3dc468923be7be988eb9e25a9e4c1", "patch": "@@ -921,14 +921,13 @@ pub(super) fn check_impl_items_against_trait<'tcx>(\n \n     // Locate trait definition and items\n     let trait_def = tcx.trait_def(impl_trait_ref.def_id);\n-\n     let impl_items = impl_item_refs.iter().map(|iiref| tcx.hir().impl_item(iiref.id));\n+    let associated_items = tcx.associated_items(impl_trait_ref.def_id);\n \n     // Check existing impl methods to see if they are both present in trait\n     // and compatible with trait signature\n     for impl_item in impl_items {\n         let ty_impl_item = tcx.associated_item(tcx.hir().local_def_id(impl_item.hir_id));\n-        let associated_items = tcx.associated_items(impl_trait_ref.def_id);\n \n         let mut items = associated_items.filter_by_name(tcx, ty_impl_item.ident, impl_trait_ref.def_id);\n \n@@ -1010,7 +1009,7 @@ pub(super) fn check_impl_items_against_trait<'tcx>(\n \n     if let Ok(ancestors) = trait_def.ancestors(tcx, impl_id.to_def_id()) {\n         let impl_span = tcx.sess.source_map().guess_head_span(full_impl_span);\n-        \n+\n         // Check for missing items from trait\n         let mut missing_items = Vec::new();\n         for trait_item in tcx.associated_items(impl_trait_ref.def_id).in_definition_order() {"}]}