{"sha": "1523de34a2267b624f1b920c1b4496568bd8c16b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1MjNkZTM0YTIyNjdiNjI0ZjFiOTIwYzFiNDQ5NjU2OGJkOGMxNmI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-27T20:17:49Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-27T20:30:38Z"}, "message": "rustfmt various files", "tree": {"sha": "e3529271b087e0cdb41be6662661c50f3e463c99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3529271b087e0cdb41be6662661c50f3e463c99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1523de34a2267b624f1b920c1b4496568bd8c16b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1523de34a2267b624f1b920c1b4496568bd8c16b", "html_url": "https://github.com/rust-lang/rust/commit/1523de34a2267b624f1b920c1b4496568bd8c16b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1523de34a2267b624f1b920c1b4496568bd8c16b/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b1d2229ff7f408b923c26943d8492a71ea91740", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b1d2229ff7f408b923c26943d8492a71ea91740", "html_url": "https://github.com/rust-lang/rust/commit/9b1d2229ff7f408b923c26943d8492a71ea91740"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "b8b13e03afaf93d29b897d85fdee16644132261e", "filename": "src/librustc/infer/canonical/query_result.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1523de34a2267b624f1b920c1b4496568bd8c16b/src%2Flibrustc%2Finfer%2Fcanonical%2Fquery_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1523de34a2267b624f1b920c1b4496568bd8c16b/src%2Flibrustc%2Finfer%2Fcanonical%2Fquery_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fcanonical%2Fquery_result.rs?ref=1523de34a2267b624f1b920c1b4496568bd8c16b", "patch": "@@ -56,7 +56,8 @@ impl<'cx, 'gcx, 'tcx> InferCtxtBuilder<'cx, 'gcx, 'tcx> {\n     pub fn enter_canonical_trait_query<K, R>(\n         &'tcx mut self,\n         canonical_key: &Canonical<'tcx, K>,\n-        op: impl FnOnce(&InferCtxt<'_, 'gcx, 'tcx>, &mut FulfillmentContext<'tcx>, K) -> Fallible<R>,\n+        operation: impl FnOnce(&InferCtxt<'_, 'gcx, 'tcx>, &mut FulfillmentContext<'tcx>, K)\n+            -> Fallible<R>,\n     ) -> Fallible<CanonicalizedQueryResult<'gcx, R>>\n     where\n         K: TypeFoldable<'tcx>,\n@@ -66,7 +67,7 @@ impl<'cx, 'gcx, 'tcx> InferCtxtBuilder<'cx, 'gcx, 'tcx> {\n             let (key, canonical_inference_vars) =\n                 infcx.instantiate_canonical_with_fresh_inference_vars(DUMMY_SP, &canonical_key);\n             let fulfill_cx = &mut FulfillmentContext::new();\n-            let value = op(infcx, fulfill_cx, key)?;\n+            let value = operation(infcx, fulfill_cx, key)?;\n             infcx.make_canonicalized_query_result(canonical_inference_vars, value, fulfill_cx)\n         })\n     }"}, {"sha": "52a087cbc80699fc374f7cdc74a0345b3c15b0f8", "filename": "src/librustc/traits/query/type_op/eq.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1523de34a2267b624f1b920c1b4496568bd8c16b/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1523de34a2267b624f1b920c1b4496568bd8c16b/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Feq.rs?ref=1523de34a2267b624f1b920c1b4496568bd8c16b", "patch": "@@ -27,7 +27,10 @@ impl<'tcx> Eq<'tcx> {\n impl<'gcx: 'tcx, 'tcx> super::QueryTypeOp<'gcx, 'tcx> for Eq<'tcx> {\n     type QueryResult = ();\n \n-    fn try_fast_path(_tcx: TyCtxt<'_, 'gcx, 'tcx>, key: &ParamEnvAnd<'tcx, Eq<'tcx>>) -> Option<Self::QueryResult> {\n+    fn try_fast_path(\n+        _tcx: TyCtxt<'_, 'gcx, 'tcx>,\n+        key: &ParamEnvAnd<'tcx, Eq<'tcx>>,\n+    ) -> Option<Self::QueryResult> {\n         if key.value.a == key.value.b {\n             Some(())\n         } else {"}, {"sha": "33dc3210f08813802f896b681608922aa0253cc3", "filename": "src/librustc/traits/query/type_op/prove_predicate.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1523de34a2267b624f1b920c1b4496568bd8c16b/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fprove_predicate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1523de34a2267b624f1b920c1b4496568bd8c16b/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fprove_predicate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fprove_predicate.rs?ref=1523de34a2267b624f1b920c1b4496568bd8c16b", "patch": "@@ -19,16 +19,17 @@ pub struct ProvePredicate<'tcx> {\n \n impl<'tcx> ProvePredicate<'tcx> {\n     pub fn new(predicate: Predicate<'tcx>) -> Self {\n-        ProvePredicate {\n-            predicate,\n-        }\n+        ProvePredicate { predicate }\n     }\n }\n \n impl<'gcx: 'tcx, 'tcx> super::QueryTypeOp<'gcx, 'tcx> for ProvePredicate<'tcx> {\n     type QueryResult = ();\n \n-    fn try_fast_path(_tcx: TyCtxt<'_, 'gcx, 'tcx>, _key: &ParamEnvAnd<'tcx, Self>) -> Option<Self::QueryResult> {\n+    fn try_fast_path(\n+        _tcx: TyCtxt<'_, 'gcx, 'tcx>,\n+        _key: &ParamEnvAnd<'tcx, Self>,\n+    ) -> Option<Self::QueryResult> {\n         None\n     }\n "}, {"sha": "8fe4290528e74d280fe4e2986b7351f6400cc18a", "filename": "src/librustc_traits/type_op.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1523de34a2267b624f1b920c1b4496568bd8c16b/src%2Flibrustc_traits%2Ftype_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1523de34a2267b624f1b920c1b4496568bd8c16b/src%2Flibrustc_traits%2Ftype_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Ftype_op.rs?ref=1523de34a2267b624f1b920c1b4496568bd8c16b", "patch": "@@ -15,7 +15,8 @@ use rustc::traits::query::type_op::normalize::Normalize;\n use rustc::traits::query::type_op::prove_predicate::ProvePredicate;\n use rustc::traits::query::type_op::subtype::Subtype;\n use rustc::traits::query::{Fallible, NoSolution};\n-use rustc::traits::{FulfillmentContext, Normalized, Obligation, ObligationCause, TraitEngine, TraitEngineExt};\n+use rustc::traits::{FulfillmentContext, Normalized, Obligation, ObligationCause, TraitEngine,\n+                    TraitEngineExt};\n use rustc::ty::query::Providers;\n use rustc::ty::{FnSig, Lift, ParamEnvAnd, PolyFnSig, Predicate, Ty, TyCtxt, TypeFoldable};\n use rustc_data_structures::sync::Lrc;"}]}