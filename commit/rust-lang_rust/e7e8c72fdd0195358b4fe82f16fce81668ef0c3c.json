{"sha": "e7e8c72fdd0195358b4fe82f16fce81668ef0c3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ZThjNzJmZGQwMTk1MzU4YjRmZTgyZjE2ZmNlODE2NjhlZjBjM2M=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-07-05T09:38:44Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-07-05T09:38:44Z"}, "message": "update test", "tree": {"sha": "f29fc688b74f6bad3bbcafa9cdc00736cb8b313d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f29fc688b74f6bad3bbcafa9cdc00736cb8b313d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c", "html_url": "https://github.com/rust-lang/rust/commit/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37228fe63286a920ad18cf72d37dfe69c7e8dc2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/37228fe63286a920ad18cf72d37dfe69c7e8dc2d", "html_url": "https://github.com/rust-lang/rust/commit/37228fe63286a920ad18cf72d37dfe69c7e8dc2d"}], "stats": {"total": 87, "additions": 43, "deletions": 44}, "files": [{"sha": "32a9783e9c213137c4ec9064c12aaa6586d26ca5", "filename": "src/test/ui/issue-47184.stderr", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c/src%2Ftest%2Fui%2Fissue-47184.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c/src%2Ftest%2Fui%2Fissue-47184.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47184.stderr?ref=e7e8c72fdd0195358b4fe82f16fce81668ef0c3c", "patch": "@@ -2,10 +2,9 @@ error[E0597]: borrowed value does not live long enough\n   --> $DIR/issue-47184.rs:14:44\n    |\n LL |     let _vec: Vec<&'static String> = vec![&String::new()];\n-   |                                            ^^^^^^^^^^^^^ temporary value does not live long enough\n-LL |     //~^ ERROR borrowed value does not live long enough [E0597]\n-LL | }\n-   | - temporary value only lives until here\n+   |                                            ^^^^^^^^^^^^^ - temporary value only lives until here\n+   |                                            |\n+   |                                            temporary value does not live long enough\n    |\n    = note: borrowed value must be valid for the static lifetime...\n "}, {"sha": "75194bf55bc9f1a3b9864d3648790578ea782852", "filename": "src/test/ui/nll/get_default.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c/src%2Ftest%2Fui%2Fnll%2Fget_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c/src%2Ftest%2Fui%2Fnll%2Fget_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fget_default.stderr?ref=e7e8c72fdd0195358b4fe82f16fce81668ef0c3c", "patch": "@@ -55,6 +55,18 @@ LL | |     }\n LL | | }\n    | |_^\n \n+error[E0502]: cannot borrow `*map` as mutable because it is also borrowed as immutable (Mir)\n+  --> $DIR/get_default.rs:45:17\n+   |\n+LL |         match map.get() {\n+   |               --- immutable borrow occurs here\n+LL |             Some(v) => {\n+LL |                 map.set(String::new()); // Both AST and MIR error here\n+   |                 ^^^ mutable borrow occurs here\n+...\n+LL |                 return v;\n+   |                        - borrow later used here\n+\n error[E0502]: cannot borrow `*map` as mutable because it is also borrowed as immutable (Mir)\n   --> $DIR/get_default.rs:51:17\n    |\n@@ -76,18 +88,6 @@ LL | |     }\n LL | | }\n    | |_^\n \n-error[E0502]: cannot borrow `*map` as mutable because it is also borrowed as immutable (Mir)\n-  --> $DIR/get_default.rs:45:17\n-   |\n-LL |         match map.get() {\n-   |               --- immutable borrow occurs here\n-LL |             Some(v) => {\n-LL |                 map.set(String::new()); // Both AST and MIR error here\n-   |                 ^^^ mutable borrow occurs here\n-...\n-LL |                 return v;\n-   |                        - borrow later used here\n-\n error: aborting due to 6 previous errors\n \n For more information about this error, try `rustc --explain E0502`."}, {"sha": "cbb9d0429c616350bcf11d035b5a382bf0cfa39d", "filename": "src/test/ui/span/dropck_arr_cycle_checked.nll.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c/src%2Ftest%2Fui%2Fspan%2Fdropck_arr_cycle_checked.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c/src%2Ftest%2Fui%2Fspan%2Fdropck_arr_cycle_checked.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_arr_cycle_checked.nll.stderr?ref=e7e8c72fdd0195358b4fe82f16fce81668ef0c3c", "patch": "@@ -1,7 +1,7 @@\n-error[E0597]: `b1` does not live long enough\n-  --> $DIR/dropck_arr_cycle_checked.rs:111:24\n+error[E0597]: `b3` does not live long enough\n+  --> $DIR/dropck_arr_cycle_checked.rs:105:24\n    |\n-LL |     b3.a[0].v.set(Some(&b1));\n+LL |     b1.a[1].v.set(Some(&b3));\n    |                        ^^^ borrowed value does not live long enough\n ...\n LL | }\n@@ -22,10 +22,10 @@ LL | }\n    | borrowed value only lives until here\n    | borrow later used here, when `b1` is dropped\n \n-error[E0597]: `b3` does not live long enough\n-  --> $DIR/dropck_arr_cycle_checked.rs:105:24\n+error[E0597]: `b1` does not live long enough\n+  --> $DIR/dropck_arr_cycle_checked.rs:111:24\n    |\n-LL |     b1.a[1].v.set(Some(&b3));\n+LL |     b3.a[0].v.set(Some(&b1));\n    |                        ^^^ borrowed value does not live long enough\n ...\n LL | }"}, {"sha": "37fffe886e30950cc2882aec517ece53f6b9812a", "filename": "src/test/ui/span/dropck_direct_cycle_with_drop.nll.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c/src%2Ftest%2Fui%2Fspan%2Fdropck_direct_cycle_with_drop.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c/src%2Ftest%2Fui%2Fspan%2Fdropck_direct_cycle_with_drop.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_direct_cycle_with_drop.nll.stderr?ref=e7e8c72fdd0195358b4fe82f16fce81668ef0c3c", "patch": "@@ -1,9 +1,9 @@\n-error[E0597]: `d1` does not live long enough\n-  --> $DIR/dropck_direct_cycle_with_drop.rs:48:19\n+error[E0597]: `d2` does not live long enough\n+  --> $DIR/dropck_direct_cycle_with_drop.rs:46:19\n    |\n-LL |     d2.p.set(Some(&d1));\n+LL |     d1.p.set(Some(&d2));\n    |                   ^^^ borrowed value does not live long enough\n-LL |     //~^ ERROR `d1` does not live long enough\n+...\n LL | }\n    | -\n    | |\n@@ -12,12 +12,12 @@ LL | }\n    |\n    = note: values in a scope are dropped in the opposite order they are defined\n \n-error[E0597]: `d2` does not live long enough\n-  --> $DIR/dropck_direct_cycle_with_drop.rs:46:19\n+error[E0597]: `d1` does not live long enough\n+  --> $DIR/dropck_direct_cycle_with_drop.rs:48:19\n    |\n-LL |     d1.p.set(Some(&d2));\n+LL |     d2.p.set(Some(&d1));\n    |                   ^^^ borrowed value does not live long enough\n-...\n+LL |     //~^ ERROR `d1` does not live long enough\n LL | }\n    | -\n    | |"}, {"sha": "13bd1f54198212077863744198898998f925bef6", "filename": "src/test/ui/span/dropck_vec_cycle_checked.nll.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c/src%2Ftest%2Fui%2Fspan%2Fdropck_vec_cycle_checked.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c/src%2Ftest%2Fui%2Fspan%2Fdropck_vec_cycle_checked.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_vec_cycle_checked.nll.stderr?ref=e7e8c72fdd0195358b4fe82f16fce81668ef0c3c", "patch": "@@ -1,7 +1,7 @@\n-error[E0597]: `c1` does not live long enough\n-  --> $DIR/dropck_vec_cycle_checked.rs:121:24\n+error[E0597]: `c3` does not live long enough\n+  --> $DIR/dropck_vec_cycle_checked.rs:115:24\n    |\n-LL |     c3.v[0].v.set(Some(&c1));\n+LL |     c1.v[1].v.set(Some(&c3));\n    |                        ^^^ borrowed value does not live long enough\n ...\n LL | }\n@@ -22,10 +22,10 @@ LL | }\n    | borrowed value only lives until here\n    | borrow later used here, when `c1` is dropped\n \n-error[E0597]: `c3` does not live long enough\n-  --> $DIR/dropck_vec_cycle_checked.rs:115:24\n+error[E0597]: `c1` does not live long enough\n+  --> $DIR/dropck_vec_cycle_checked.rs:121:24\n    |\n-LL |     c1.v[1].v.set(Some(&c3));\n+LL |     c3.v[0].v.set(Some(&c1));\n    |                        ^^^ borrowed value does not live long enough\n ...\n LL | }"}, {"sha": "100b4c1292f44ad73c36be2c8ea02c36fb600d69", "filename": "src/test/ui/span/vec-must-not-hide-type-from-dropck.nll.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c/src%2Ftest%2Fui%2Fspan%2Fvec-must-not-hide-type-from-dropck.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c/src%2Ftest%2Fui%2Fspan%2Fvec-must-not-hide-type-from-dropck.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fvec-must-not-hide-type-from-dropck.nll.stderr?ref=e7e8c72fdd0195358b4fe82f16fce81668ef0c3c", "patch": "@@ -1,21 +1,21 @@\n-error[E0597]: `c1` does not live long enough\n-  --> $DIR/vec-must-not-hide-type-from-dropck.rs:129:24\n+error[E0597]: `c2` does not live long enough\n+  --> $DIR/vec-must-not-hide-type-from-dropck.rs:127:24\n    |\n-LL |     c2.v[0].v.set(Some(&c1));\n+LL |     c1.v[0].v.set(Some(&c2));\n    |                        ^^^ borrowed value does not live long enough\n-LL |     //~^ ERROR `c1` does not live long enough\n+...\n LL | }\n    | -\n    | |\n    | borrowed value only lives until here\n    | borrow later used here, when `c1` is dropped\n \n-error[E0597]: `c2` does not live long enough\n-  --> $DIR/vec-must-not-hide-type-from-dropck.rs:127:24\n+error[E0597]: `c1` does not live long enough\n+  --> $DIR/vec-must-not-hide-type-from-dropck.rs:129:24\n    |\n-LL |     c1.v[0].v.set(Some(&c2));\n+LL |     c2.v[0].v.set(Some(&c1));\n    |                        ^^^ borrowed value does not live long enough\n-...\n+LL |     //~^ ERROR `c1` does not live long enough\n LL | }\n    | -\n    | |"}]}