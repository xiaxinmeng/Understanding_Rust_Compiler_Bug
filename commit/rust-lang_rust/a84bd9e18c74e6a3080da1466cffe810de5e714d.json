{"sha": "a84bd9e18c74e6a3080da1466cffe810de5e714d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NGJkOWUxOGM3NGU2YTMwODBkYTE0NjZjZmZlODEwZGU1ZTcxNGQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-05-13T09:25:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-13T09:25:01Z"}, "message": "Merge #4434\n\n4434: add more specific match postfix for Result and Option r=matklad a=bnjjj\n\nIn order to have the same behavior than `if let` and `while let`\n\nCo-authored-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "9685b925b757aeb306f3e1a633da0d261988f984", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9685b925b757aeb306f3e1a633da0d261988f984"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a84bd9e18c74e6a3080da1466cffe810de5e714d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeu7ztCRBK7hj4Ov3rIwAAdHIIAC37oGxBrt8gC3R/v+owdEsS\np2lZDDvll7S3VNI/fWs2hkt1Gy+OYF6fdhZvHyCuXC4DnvqmP8tRU1ZC8PKiEAPs\nXVK6VboNCEkszNGabVmBX8NbhUtnVGpgC5DxuXZBuy6wuNLjFVjQG4Nc48C21Akv\nApCgYKIoIIFjHYdcZZ3XnMEtbzTLgEPWeYQUopLwlEJB1f+VWv0DCDESyMXHN2OK\n4h5LQpRR87ymX9ebH+F/5XYRalEgBaeKYpoA17eKo9ZPaAmrtZMIkaw7L5DvYu2P\nCZ1VX0HwjAdMg+4ezOri96CSZuI20cWd2saDguGr2GInC3ldnxtWEHGxvtZld6Y=\n=CatX\n-----END PGP SIGNATURE-----\n", "payload": "tree 9685b925b757aeb306f3e1a633da0d261988f984\nparent 9594fe33fabeb2f97afad86c3a5d5ed79e3d54d8\nparent df330224080fca5eafa3327f082d18857a839dfe\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1589361901 +0000\ncommitter GitHub <noreply@github.com> 1589361901 +0000\n\nMerge #4434\n\n4434: add more specific match postfix for Result and Option r=matklad a=bnjjj\n\nIn order to have the same behavior than `if let` and `while let`\n\nCo-authored-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a84bd9e18c74e6a3080da1466cffe810de5e714d", "html_url": "https://github.com/rust-lang/rust/commit/a84bd9e18c74e6a3080da1466cffe810de5e714d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a84bd9e18c74e6a3080da1466cffe810de5e714d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9594fe33fabeb2f97afad86c3a5d5ed79e3d54d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9594fe33fabeb2f97afad86c3a5d5ed79e3d54d8", "html_url": "https://github.com/rust-lang/rust/commit/9594fe33fabeb2f97afad86c3a5d5ed79e3d54d8"}, {"sha": "df330224080fca5eafa3327f082d18857a839dfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/df330224080fca5eafa3327f082d18857a839dfe", "html_url": "https://github.com/rust-lang/rust/commit/df330224080fca5eafa3327f082d18857a839dfe"}], "stats": {"total": 58, "additions": 43, "deletions": 15}, "files": [{"sha": "f2a52a407a973d3aecbb0433afdb473de417405b", "filename": "crates/ra_ide/src/completion/complete_postfix.rs", "status": "modified", "additions": 43, "deletions": 15, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/a84bd9e18c74e6a3080da1466cffe810de5e714d/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84bd9e18c74e6a3080da1466cffe810de5e714d/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs?ref=a84bd9e18c74e6a3080da1466cffe810de5e714d", "patch": "@@ -38,8 +38,8 @@ pub(super) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n         Some(it) => it,\n         None => return,\n     };\n-\n-    if let Some(try_enum) = TryEnum::from_ty(&ctx.sema, &receiver_ty) {\n+    let try_enum = TryEnum::from_ty(&ctx.sema, &receiver_ty);\n+    if let Some(try_enum) = &try_enum {\n         match try_enum {\n             TryEnum::Result => {\n                 postfix_snippet(\n@@ -104,7 +104,6 @@ pub(super) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n         )\n         .add_to(acc);\n     }\n-\n     // !&&&42 is a compiler error, ergo process it before considering the references\n     postfix_snippet(ctx, cap, &dot_receiver, \"not\", \"!expr\", &format!(\"!{}\", receiver_text))\n         .add_to(acc);\n@@ -126,16 +125,45 @@ pub(super) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n     let dot_receiver = include_references(dot_receiver);\n     let receiver_text =\n         get_receiver_text(&dot_receiver, ctx.dot_receiver_is_ambiguous_float_literal);\n-\n-    postfix_snippet(\n-        ctx,\n-        cap,\n-        &dot_receiver,\n-        \"match\",\n-        \"match expr {}\",\n-        &format!(\"match {} {{\\n    ${{1:_}} => {{$0\\\\}},\\n}}\", receiver_text),\n-    )\n-    .add_to(acc);\n+    match try_enum {\n+        Some(try_enum) => {\n+            match try_enum {\n+                TryEnum::Result => {\n+                    postfix_snippet(\n+                    ctx,\n+                    cap,\n+                    &dot_receiver,\n+                    \"match\",\n+                    \"match expr {}\",\n+                    &format!(\"match {} {{\\n    Ok(${{1:_}}) => {{$2\\\\}},\\n    Err(${{3:_}}) => {{$0\\\\}},\\n}}\", receiver_text),\n+                )\n+                .add_to(acc);\n+                }\n+                TryEnum::Option => {\n+                    postfix_snippet(\n+                    ctx,\n+                    cap,\n+                    &dot_receiver,\n+                    \"match\",\n+                    \"match expr {}\",\n+                    &format!(\"match {} {{\\n    Some(${{1:_}}) => {{$2\\\\}},\\n    None => {{$0\\\\}},\\n}}\", receiver_text),\n+                )\n+                .add_to(acc);\n+                }\n+            }\n+        }\n+        None => {\n+            postfix_snippet(\n+                ctx,\n+                cap,\n+                &dot_receiver,\n+                \"match\",\n+                \"match expr {}\",\n+                &format!(\"match {} {{\\n    ${{1:_}} => {{$0\\\\}},\\n}}\", receiver_text),\n+            )\n+            .add_to(acc);\n+        }\n+    }\n \n     postfix_snippet(\n         ctx,\n@@ -324,7 +352,7 @@ mod tests {\n                 label: \"match\",\n                 source_range: 210..210,\n                 delete: 206..210,\n-                insert: \"match bar {\\n    ${1:_} => {$0\\\\},\\n}\",\n+                insert: \"match bar {\\n    Some(${1:_}) => {$2\\\\},\\n    None => {$0\\\\},\\n}\",\n                 detail: \"match expr {}\",\n             },\n             CompletionItem {\n@@ -403,7 +431,7 @@ mod tests {\n                 label: \"match\",\n                 source_range: 211..211,\n                 delete: 207..211,\n-                insert: \"match bar {\\n    ${1:_} => {$0\\\\},\\n}\",\n+                insert: \"match bar {\\n    Ok(${1:_}) => {$2\\\\},\\n    Err(${3:_}) => {$0\\\\},\\n}\",\n                 detail: \"match expr {}\",\n             },\n             CompletionItem {"}]}