{"sha": "dd7a60e0c3090488041788256f211e2d02636b73", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkN2E2MGUwYzMwOTA0ODgwNDE3ODgyNTZmMjExZTJkMDI2MzZiNzM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-03-21T22:15:45Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-03-24T21:29:17Z"}, "message": "mk: Fix distcheck\n\nAlso, add more distcheck tests", "tree": {"sha": "6c0e58b12b019a71b5a6ae8f37c9fea227aabbc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c0e58b12b019a71b5a6ae8f37c9fea227aabbc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd7a60e0c3090488041788256f211e2d02636b73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd7a60e0c3090488041788256f211e2d02636b73", "html_url": "https://github.com/rust-lang/rust/commit/dd7a60e0c3090488041788256f211e2d02636b73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd7a60e0c3090488041788256f211e2d02636b73/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae0e47a6ebd5d9f371ebef4b10658ffbd4817cbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae0e47a6ebd5d9f371ebef4b10658ffbd4817cbb", "html_url": "https://github.com/rust-lang/rust/commit/ae0e47a6ebd5d9f371ebef4b10658ffbd4817cbb"}], "stats": {"total": 66, "additions": 43, "deletions": 23}, "files": [{"sha": "60855ab58a30ef2d7215fee29f0e41de368e958e", "filename": "mk/dist.mk", "status": "modified", "additions": 39, "deletions": 21, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/dd7a60e0c3090488041788256f211e2d02636b73/mk%2Fdist.mk", "raw_url": "https://github.com/rust-lang/rust/raw/dd7a60e0c3090488041788256f211e2d02636b73/mk%2Fdist.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdist.mk?ref=dd7a60e0c3090488041788256f211e2d02636b73", "patch": "@@ -25,7 +25,6 @@\n PKG_NAME = $(CFG_PACKAGE_NAME)\n \n PKG_GITMODULES := $(S)src/libuv $(S)src/llvm $(S)src/gyp $(S)src/compiler-rt\n-\n PKG_FILES := \\\n     $(S)COPYRIGHT                              \\\n     $(S)LICENSE-APACHE                         \\\n@@ -48,8 +47,8 @@ PKG_FILES := \\\n       snapshots.txt                            \\\n       test)                                    \\\n     $(PKG_GITMODULES)                          \\\n-    $(filter-out Makefile config.stamp config.mk, \\\n-                 $(MKFILE_DEPS))\n+    $(filter-out config.stamp, \\\n+                 $(MKFILES_FOR_TARBALL))\n \n UNROOTED_PKG_FILES := $(patsubst $(S)%,./%,$(PKG_FILES))\n \n@@ -83,6 +82,23 @@ $(PKG_TAR): $(PKG_FILES)\n \n dist-tar-src: $(PKG_TAR)\n \n+distcheck-tar-src: $(PKG_TAR)\n+\t$(Q)rm -Rf tmp/distcheck/$(PKG_NAME)\n+\t$(Q)rm -Rf tmp/distcheck/srccheck\n+\t$(Q)mkdir -p tmp/distcheck\n+\t@$(call E, unpacking $(PKG_TAR) in tmp/distcheck/$(PKG_NAME))\n+\t$(Q)cd tmp/distcheck && tar -xzf ../../$(PKG_TAR)\n+\t@$(call E, configuring in tmp/distcheck/srccheck)\n+\t$(Q)mkdir -p tmp/distcheck/srccheck\n+\t$(Q)cd tmp/distcheck/srccheck && ../$(PKG_NAME)/configure\n+\t@$(call E, making 'check' in tmp/distcheck/srccheck)\n+\t$(Q)+make -C tmp/distcheck/srccheck check\n+\t@$(call E, making 'clean' in tmp/distcheck/srccheck)\n+\t$(Q)+make -C tmp/distcheck/srccheck clean\n+\t$(Q)rm -Rf tmp/distcheck/$(PKG_NAME)\n+\t$(Q)rm -Rf tmp/distcheck/srccheck\n+\n+\n ######################################################################\n # Windows .exe installer\n ######################################################################\n@@ -100,7 +116,7 @@ PKG_EXE = dist/$(PKG_NAME)-install.exe\n \tcp $< $@\n \n $(PKG_EXE): rust.iss modpath.iss LICENSE.txt rust-logo.ico \\\n-            $(PKG_FILES) $(CSREQ3_T_$(CFG_BUILD)_H_$(CFG_BUILD)) \\\n+            $(CSREQ3_T_$(CFG_BUILD)_H_$(CFG_BUILD)) \\\n             dist-prepare-win\n \t$(CFG_PYTHON) $(S)src/etc/copy-runtime-deps.py tmp/dist/win/bin\n \t@$(call E, ISCC: $@)\n@@ -156,10 +172,6 @@ endif\n # Unix binary installer tarballs\n ######################################################################\n \n-dist-install-dirs: $(foreach host,$(CFG_HOST),dist-install-dir-$(host))\n-\n-dist-tar-bins: $(foreach host,$(CFG_HOST),dist/$(PKG_NAME)-$(host).tar.gz)\n-\n define DEF_INSTALLER\n dist-install-dir-$(1): PREPARE_HOST=$(1)\n dist-install-dir-$(1): PREPARE_TARGETS=$(1)\n@@ -187,6 +199,22 @@ endef\n $(foreach host,$(CFG_HOST),\\\n   $(eval $(call DEF_INSTALLER,$(host))))\n \n+dist-install-dirs: $(foreach host,$(CFG_HOST),dist-install-dir-$(host))\n+\n+dist-tar-bins: $(foreach host,$(CFG_HOST),dist/$(PKG_NAME)-$(host).tar.gz)\n+\n+# Just try to run the compiler for the build host\n+distcheck-tar-bins: dist-tar-bins\n+\t@$(call E, checking binary tarball)\n+\t$(Q)rm -Rf tmp/distcheck/$(PKG_NAME)-$(CFG_BUILD)\n+\t$(Q)rm -Rf tmp/distcheck/tarbininstall\n+\t$(Q)mkdir -p tmp/distcheck\n+\t$(Q)cd tmp/distcheck && tar -xzf ../../dist/$(PKG_NAME)-$(CFG_BUILD).tar.gz\n+\t$(Q)mkdir -p tmp/distcheck/tarbininstall\n+\t$(Q)sh tmp/distcheck/$(PKG_NAME)-$(CFG_BUILD)/install.sh --prefix=tmp/distcheck/tarbininstall\n+\t$(Q)tmp/distcheck/tarbininstall/bin/rustc --version\n+\t$(Q)rm -Rf tmp/distcheck/$(PKG_NAME)-$(CFG_BUILD)\n+\t$(Q)rm -Rf tmp/distcheck/tarbininstall\n \n ######################################################################\n # Docs\n@@ -208,6 +236,7 @@ ifdef CFG_WINDOWSY_$(CFG_BUILD)\n dist: dist-win\n \n distcheck: dist\n+\t$(Q)rm -Rf tmp/distcheck\n \t@echo\n \t@echo -----------------------------------------------\n \t@echo Rust ready for distribution (see ./dist)\n@@ -217,19 +246,8 @@ else\n \n dist: dist-tar-src\n \n-distcheck: $(PKG_TAR)\n-\t$(Q)rm -Rf dist\n-\t$(Q)mkdir -p dist\n-\t@$(call E, unpacking $(PKG_TAR) in dist/$(PKG_NAME))\n-\t$(Q)cd dist && tar -xzf ../$(PKG_TAR)\n-\t@$(call E, configuring in dist/$(PKG_NAME)-build)\n-\t$(Q)mkdir -p dist/$(PKG_NAME)-build\n-\t$(Q)cd dist/$(PKG_NAME)-build && ../$(PKG_NAME)/configure\n-\t@$(call E, making 'check' in dist/$(PKG_NAME)-build)\n-\t$(Q)+make -C dist/$(PKG_NAME)-build check\n-\t@$(call E, making 'clean' in dist/$(PKG_NAME)-build)\n-\t$(Q)+make -C dist/$(PKG_NAME)-build clean\n-\t$(Q)rm -Rf dist\n+distcheck: dist distcheck-tar-src\n+\t$(Q)rm -Rf tmp/distcheck\n \t@echo\n \t@echo -----------------------------------------------\n \t@echo Rust ready for distribution (see ./dist)"}, {"sha": "7ccc6e74a1d13de382b52d99bc14a8bd55c265cc", "filename": "mk/main.mk", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dd7a60e0c3090488041788256f211e2d02636b73/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/dd7a60e0c3090488041788256f211e2d02636b73/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=dd7a60e0c3090488041788256f211e2d02636b73", "patch": "@@ -61,10 +61,11 @@ CFG_VERSION_WIN = $(CFG_RELEASE_NUM)\n # and include all of the .d files in one fell swoop.\n ALL_OBJ_FILES :=\n \n+MKFILE_DEPS := config.stamp $(call rwildcard,$(CFG_SRC_DIR)mk/,*)\n+MKFILES_FOR_TARBALL:=$(MKFILE_DEPS)\n+$(info $(MKFILES_FOR_TARBALL))\n ifneq ($(NO_MKFILE_DEPS),)\n MKFILE_DEPS :=\n-else\n-MKFILE_DEPS := config.stamp $(call rwildcard,$(CFG_SRC_DIR)mk/,*)\n endif\n NON_BUILD_HOST = $(filter-out $(CFG_BUILD),$(CFG_HOST))\n NON_BUILD_TARGET = $(filter-out $(CFG_BUILD),$(CFG_TARGET))"}, {"sha": "19e61251dc20befb79dd2d7e933cd9ed569e44f6", "filename": "src/etc/install.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd7a60e0c3090488041788256f211e2d02636b73/src%2Fetc%2Finstall.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dd7a60e0c3090488041788256f211e2d02636b73/src%2Fetc%2Finstall.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstall.sh?ref=dd7a60e0c3090488041788256f211e2d02636b73", "patch": "@@ -224,6 +224,7 @@ step_msg \"validating $CFG_SELF args\"\n validate_opt\n \n # Sanity check: can we can write to the destination?\n+mkdir -p \"${CFG_PREFIX}/lib\"\n touch \"${CFG_PREFIX}/lib/rust-install-probe\" 2> /dev/null\n if [ $? -ne 0 ]\n then"}]}