{"sha": "ebf95836e3cfc8c442cc71239324d947aafa3eac", "node_id": "C_kwDOAAsO6NoAKGViZjk1ODM2ZTNjZmM4YzQ0MmNjNzEyMzkzMjRkOTQ3YWFmYTNlYWM", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-05-10T10:02:20Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-05-10T10:07:36Z"}, "message": "fix typo", "tree": {"sha": "82162f1c5f5fc4ec3f0233e29999e7c823e12aab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82162f1c5f5fc4ec3f0233e29999e7c823e12aab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebf95836e3cfc8c442cc71239324d947aafa3eac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebf95836e3cfc8c442cc71239324d947aafa3eac", "html_url": "https://github.com/rust-lang/rust/commit/ebf95836e3cfc8c442cc71239324d947aafa3eac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebf95836e3cfc8c442cc71239324d947aafa3eac/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cf9f1ab91736e27e812849a5bac0feb9fae38a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cf9f1ab91736e27e812849a5bac0feb9fae38a9", "html_url": "https://github.com/rust-lang/rust/commit/7cf9f1ab91736e27e812849a5bac0feb9fae38a9"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ed694eb0e327a1f247b15b8c2bbfcda89f5f7d5e", "filename": "compiler/rustc_passes/src/diagnostic_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ebf95836e3cfc8c442cc71239324d947aafa3eac/compiler%2Frustc_passes%2Fsrc%2Fdiagnostic_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebf95836e3cfc8c442cc71239324d947aafa3eac/compiler%2Frustc_passes%2Fsrc%2Fdiagnostic_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdiagnostic_items.rs?ref=ebf95836e3cfc8c442cc71239324d947aafa3eac", "patch": "@@ -83,7 +83,7 @@ fn collect_item(tcx: TyCtxt<'_>, items: &mut DiagnosticItems, name: Symbol, item\n     }\n }\n \n-/// Extract the first `rustc_diagnostic_item = \"$name\"` out of a list of attributes.p\n+/// Extract the first `rustc_diagnostic_item = \"$name\"` out of a list of attributes.\n fn extract(attrs: &[ast::Attribute]) -> Option<Symbol> {\n     attrs.iter().find_map(|attr| {\n         if attr.has_name(sym::rustc_diagnostic_item) { attr.value_str() } else { None }"}]}