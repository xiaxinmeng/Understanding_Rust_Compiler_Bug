{"sha": "852dfd7a17bffadfd79f323d3291808dd10c854e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1MmRmZDdhMTdiZmZhZGZkNzlmMzIzZDMyOTE4MDhkZDEwYzg1NGU=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-10-07T16:48:50Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-10-25T14:08:27Z"}, "message": "ci: extract installing msys2 into a script", "tree": {"sha": "18f6f0d58c37c6099bb73bea1159e4979c3bd4df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18f6f0d58c37c6099bb73bea1159e4979c3bd4df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/852dfd7a17bffadfd79f323d3291808dd10c854e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl2zAdsACgkQPgar6Auq\n8ZwB7g//ZZXA9CtERUifNXw52vs7ohksP5jrzk4pnWM4ZCPZaJrNHa/SzwsIh1P+\nyP0pJQzaMm1RdB1x23Gru6Nld9d94hsksL2cOlXg5v6K+gpIX4GccZyf5AysLDFK\n8r7P1cTq43k7Bsx0DvqPkXcpAl9YkZH7JjqTT3df+hf+bYuyYkON2+d31d6q9Yrw\nwMzwSOo6XZq7dDeS+0n4jxelIlU2gqxTeuauFB8rTXN7gbK3MwDtGTcB7UiNPGN2\nO1vQDAafTZJPd4u6gwQt3IwRqCsYKj483P8GwSpSIr6acKqtaRkmP5sPfDK8zt24\nmHpj1XOHofymvmPCgChBaGkeu7Px65QLkjnp9FwU2Ra7iuqP8Z0VDm04gxLxvOp3\n94vzU3xBJnElOcYOsFX5Bf9d+T66XtVw77Arc6S7aos+J+spk3BhMHCgvxYYe3o1\n0rjXHacECv2CVZB1WY7yTOtn+SVb2DB6VahvvZwLVkg8xkSRIdBplJSGsHiB99r9\nQqN17hQ2z/ZY3dqNIVQ0VUo2WR7Bo/agZu1fdPIQJQIB0dEhqh7uodOf959JedCn\nukSMbyLsoJZqxZg+fQOXnaHDS1GfYB5RI7B2S/564t+Jo+Mx7PA2d4aHMx3N5fN0\nLjsdXhclPLjxTk8K+YiKQGwAyx0zE8sYwvL4pX8AKeSOf1F3n2U=\n=J8mT\n-----END PGP SIGNATURE-----", "payload": "tree 18f6f0d58c37c6099bb73bea1159e4979c3bd4df\nparent e0b1b3bbc1c796e3a35a723e875ec82c8ad371c0\nauthor Pietro Albini <pietro@pietroalbini.org> 1570466930 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1572012507 +0200\n\nci: extract installing msys2 into a script\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/852dfd7a17bffadfd79f323d3291808dd10c854e", "html_url": "https://github.com/rust-lang/rust/commit/852dfd7a17bffadfd79f323d3291808dd10c854e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/852dfd7a17bffadfd79f323d3291808dd10c854e/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0b1b3bbc1c796e3a35a723e875ec82c8ad371c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0b1b3bbc1c796e3a35a723e875ec82c8ad371c0", "html_url": "https://github.com/rust-lang/rust/commit/e0b1b3bbc1c796e3a35a723e875ec82c8ad371c0"}], "stats": {"total": 99, "additions": 47, "deletions": 52}, "files": [{"sha": "1a5b14d66aa0f0d6bf02d9c5fb8d46bec51f4227", "filename": "src/ci/azure-pipelines/steps/install-windows-build-deps.yml", "status": "modified", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/852dfd7a17bffadfd79f323d3291808dd10c854e/src%2Fci%2Fazure-pipelines%2Fsteps%2Finstall-windows-build-deps.yml", "raw_url": "https://github.com/rust-lang/rust/raw/852dfd7a17bffadfd79f323d3291808dd10c854e/src%2Fci%2Fazure-pipelines%2Fsteps%2Finstall-windows-build-deps.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fsteps%2Finstall-windows-build-deps.yml?ref=852dfd7a17bffadfd79f323d3291808dd10c854e", "patch": "@@ -1,22 +1,4 @@\n steps:\n-# Download and install MSYS2, needed primarily for the test suite (run-make) but\n-# also used by the MinGW toolchain for assembling things.\n-#\n-# FIXME: we should probe the default azure image and see if we can use the MSYS2\n-# toolchain there. (if there's even one there). For now though this gets the job\n-# done.\n-- bash: |\n-    set -e\n-    choco install msys2 --params=\"/InstallDir:$(System.Workfolder)/msys2 /NoPath\" -y --no-progress\n-    echo \"##vso[task.prependpath]$(System.Workfolder)/msys2/usr/bin\"\n-    mkdir -p \"$(System.Workfolder)/msys2/home/$USERNAME\"\n-  displayName: Install msys2\n-  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))\n-\n-- bash: pacman -S --noconfirm --needed base-devel ca-certificates make diffutils tar\n-  displayName: Install msys2 base deps\n-  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))\n-\n # If we need to download a custom MinGW, do so here and set the path\n # appropriately.\n #\n@@ -46,17 +28,6 @@ steps:\n   condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'), ne(variables['MINGW_URL'],''))\n   displayName: Download custom MinGW\n \n-# FIXME(#65767): workaround msys bug, step 1\n-- bash: |\n-    set -e\n-    arch=i686\n-    if [ \"$MSYS_BITS\" = \"64\" ]; then\n-      arch=x86_64\n-    fi\n-    curl -O https://ci-mirrors.rust-lang.org/rustc/msys2-repo/mingw/$arch/mingw-w64-$arch-ca-certificates-20180409-1-any.pkg.tar.xz\n-  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))\n-  displayName: Download working ca-certificates for msys\n-\n # Otherwise install MinGW through `pacman`\n - bash: |\n     set -e\n@@ -69,29 +40,6 @@ steps:\n   condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['MINGW_URL'],''))\n   displayName: Download standard MinGW\n \n-# FIXME(#65767): workaround msys bug, step 2\n-- bash: |\n-    set -e\n-    arch=i686\n-    if [ \"$MSYS_BITS\" = \"64\" ]; then\n-      arch=x86_64\n-    fi\n-    pacman -U --noconfirm --noprogressbar mingw-w64-$arch-ca-certificates-20180409-1-any.pkg.tar.xz\n-    rm mingw-w64-$arch-ca-certificates-20180409-1-any.pkg.tar.xz\n-  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))\n-  displayName: Install working ca-certificates for msys\n-\n-# Make sure we use the native python interpreter instead of some msys equivalent\n-# one way or another. The msys interpreters seem to have weird path conversions\n-# baked in which break LLVM's build system one way or another, so let's use the\n-# native version which keeps everything as native as possible.\n-- bash: |\n-    set -e\n-    cp C:/Python27amd64/python.exe C:/Python27amd64/python2.7.exe\n-    echo \"##vso[task.prependpath]C:/Python27amd64\"\n-  displayName: Prefer the \"native\" Python as LLVM has trouble building with MSYS sometimes\n-  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))\n-\n # Note that this is originally from the github releases patch of Ninja\n - bash: |\n     set -e"}, {"sha": "4700af0148e556dcf0f1efb28d6ce94af3d91524", "filename": "src/ci/azure-pipelines/steps/run.yml", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/852dfd7a17bffadfd79f323d3291808dd10c854e/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml", "raw_url": "https://github.com/rust-lang/rust/raw/852dfd7a17bffadfd79f323d3291808dd10c854e/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml?ref=852dfd7a17bffadfd79f323d3291808dd10c854e", "patch": "@@ -91,6 +91,13 @@ steps:\n   displayName: \"Disable git automatic line ending conversion (on C:/)\"\n   condition: and(succeeded(), not(variables.SKIP_JOB))\n \n+- bash: src/ci/scripts/install-msys2.sh\n+  env:\n+    AGENT_OS: $(Agent.OS)\n+    SYSTEM_WORKFOLDER: $(System.Workfolder)\n+  displayName: Install msys2\n+  condition: and(succeeded(), not(variables.SKIP_JOB))\n+\n - template: install-windows-build-deps.yml\n \n # Looks like docker containers have IPv6 disabled by default, so let's turn it"}, {"sha": "bfd3f2c1edb78583ea5171937700c7a8c5ca2e78", "filename": "src/ci/scripts/install-msys2.sh", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/852dfd7a17bffadfd79f323d3291808dd10c854e/src%2Fci%2Fscripts%2Finstall-msys2.sh", "raw_url": "https://github.com/rust-lang/rust/raw/852dfd7a17bffadfd79f323d3291808dd10c854e/src%2Fci%2Fscripts%2Finstall-msys2.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Finstall-msys2.sh?ref=852dfd7a17bffadfd79f323d3291808dd10c854e", "patch": "@@ -0,0 +1,40 @@\n+#!/bin/bash\n+# Download and install MSYS2, needed primarily for the test suite (run-make) but\n+# also used by the MinGW toolchain for assembling things.\n+#\n+# FIXME: we should probe the default azure image and see if we can use the MSYS2\n+# toolchain there. (if there's even one there). For now though this gets the job\n+# done.\n+\n+set -euo pipefail\n+IFS=$'\\n\\t'\n+\n+source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n+\n+if isWindows; then\n+    # FIXME(#65767): workaround msys bug, step 1\n+    arch=i686\n+    if [ \"$MSYS_BITS\" = \"64\" ]; then\n+      arch=x86_64\n+    fi\n+    curl -O \"${MIRRORS_BASE}/msys2-repo/mingw/$arch/mingw-w64-$arch-ca-certificates-20180409-1-any.pkg.tar.xz\"\n+\n+    choco install msys2 --params=\"/InstallDir:${SYSTEM_WORKFOLDER}/msys2 /NoPath\" -y --no-progress\n+    mkdir -p \"${SYSTEM_WORKFOLDER}/msys2/home/${USERNAME}\"\n+\n+    ciCommandAddPath \"${SYSTEM_WORKFOLDER}/msys2/usr/bin\"\n+    export PATH=\"${SYSTEM_WORKFOLDER}/msys2/usr/bin\"\n+\n+    pacman -S --noconfirm --needed base-devel ca-certificates make diffutils tar\n+\n+    # FIXME(#65767): workaround msys bug, step 2\n+    pacman -U --noconfirm --noprogressbar mingw-w64-$arch-ca-certificates-20180409-1-any.pkg.tar.xz\n+    rm mingw-w64-$arch-ca-certificates-20180409-1-any.pkg.tar.xz\n+\n+    # Make sure we use the native python interpreter instead of some msys equivalent\n+    # one way or another. The msys interpreters seem to have weird path conversions\n+    # baked in which break LLVM's build system one way or another, so let's use the\n+    # native version which keeps everything as native as possible.\n+    cp C:/Python27amd64/python.exe C:/Python27amd64/python2.7.exe\n+    ciCommandAddPath \"C:\\\\Python27amd64\"\n+fi"}]}