{"sha": "45e52a13e818f8822e40e8dbc775fa86acac2269", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1ZTUyYTEzZTgxOGY4ODIyZTQwZThkYmM3NzVmYTg2YWNhYzIyNjk=", "commit": {"author": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2014-07-04T20:36:27Z"}, "committer": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2014-07-04T20:39:50Z"}, "message": "Removed unnecessary method in test", "tree": {"sha": "3fbb4040aa0c10935a34312e786b108acb613b8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fbb4040aa0c10935a34312e786b108acb613b8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45e52a13e818f8822e40e8dbc775fa86acac2269", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45e52a13e818f8822e40e8dbc775fa86acac2269", "html_url": "https://github.com/rust-lang/rust/commit/45e52a13e818f8822e40e8dbc775fa86acac2269", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45e52a13e818f8822e40e8dbc775fa86acac2269/comments", "author": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25e8b6ed9c9cf60448eb95a0e8a42330ed44f479", "url": "https://api.github.com/repos/rust-lang/rust/commits/25e8b6ed9c9cf60448eb95a0e8a42330ed44f479", "html_url": "https://github.com/rust-lang/rust/commit/25e8b6ed9c9cf60448eb95a0e8a42330ed44f479"}], "stats": {"total": 18, "additions": 2, "deletions": 16}, "files": [{"sha": "fb4a23cf326ec10b7beabc4b4f632b94f243f7f1", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/45e52a13e818f8822e40e8dbc775fa86acac2269/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45e52a13e818f8822e40e8dbc775fa86acac2269/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=45e52a13e818f8822e40e8dbc775fa86acac2269", "patch": "@@ -278,11 +278,7 @@ pub fn maybe_aborted<T>(result: T, mut p: Parser) -> T {\n #[cfg(test)]\n mod test {\n     use super::*;\n-    use serialize::{json, Encodable};\n-    use std::io;\n-    use std::io::MemWriter;\n-    use std::mem::transmute;\n-    use std::str;\n+    use serialize::json;\n     use std::gc::GC;\n     use codemap::{Span, BytePos, Spanned};\n     use owned_slice::OwnedSlice;\n@@ -296,16 +292,6 @@ mod test {\n     use util::parser_testing::{string_to_expr, string_to_item};\n     use util::parser_testing::string_to_stmt;\n \n-    fn to_json_str<'a, E: Encodable<json::Encoder<'a>, io::IoError>>(val: &E) -> String {\n-        let mut writer = MemWriter::new();\n-        // FIXME(14302) remove the transmute and unsafe block.\n-        unsafe {\n-            let mut encoder = json::Encoder::new(&mut writer as &mut io::Writer);\n-            let _ = val.encode(transmute(&mut encoder));\n-        }\n-        str::from_utf8(writer.unwrap().as_slice()).unwrap().to_string()\n-    }\n-\n     // produce a codemap::span\n     fn sp(a: u32, b: u32) -> Span {\n         Span{lo:BytePos(a),hi:BytePos(b),expn_info:None}\n@@ -415,7 +401,7 @@ mod test {\n \n     #[test] fn string_to_tts_1 () {\n         let tts = string_to_tts(\"fn a (b : int) { b; }\".to_string());\n-        assert_eq!(to_json_str(&tts),\n+        assert_eq!(json::encode(&tts),\n         \"[\\\n     {\\\n         \\\"variant\\\":\\\"TTTok\\\",\\"}]}