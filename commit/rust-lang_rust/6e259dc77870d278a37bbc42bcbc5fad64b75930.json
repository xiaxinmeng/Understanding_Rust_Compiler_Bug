{"sha": "6e259dc77870d278a37bbc42bcbc5fad64b75930", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlMjU5ZGM3Nzg3MGQyNzhhMzdiYmM0MmJjYmM1ZmFkNjRiNzU5MzA=", "commit": {"author": {"name": "Alex Burka", "email": "alex@alexburka.com", "date": "2017-02-28T18:18:54Z"}, "committer": {"name": "Alex Burka", "email": "alex@alexburka.com", "date": "2017-03-02T07:11:22Z"}, "message": "note -> help", "tree": {"sha": "9e7faf0e65f3b6f9be7c7a2d74d2d8b67d4304f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e7faf0e65f3b6f9be7c7a2d74d2d8b67d4304f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e259dc77870d278a37bbc42bcbc5fad64b75930", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e259dc77870d278a37bbc42bcbc5fad64b75930", "html_url": "https://github.com/rust-lang/rust/commit/6e259dc77870d278a37bbc42bcbc5fad64b75930", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e259dc77870d278a37bbc42bcbc5fad64b75930/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4993ec8635a48d4467a69482f77c6370a9709df", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4993ec8635a48d4467a69482f77c6370a9709df", "html_url": "https://github.com/rust-lang/rust/commit/b4993ec8635a48d4467a69482f77c6370a9709df"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "6ba593da51e8fd498a31c453c0b34e8d8e2e8dbd", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e259dc77870d278a37bbc42bcbc5fad64b75930/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e259dc77870d278a37bbc42bcbc5fad64b75930/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=6e259dc77870d278a37bbc42bcbc5fad64b75930", "patch": "@@ -995,7 +995,7 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n     fn suggest_new_overflow_limit(&self, err: &mut DiagnosticBuilder) {\n         let current_limit = self.tcx.sess.recursion_limit.get();\n         let suggested_limit = current_limit * 2;\n-        err.note(&format!(\n+        err.help(&format!(\n                           \"consider adding a `#![recursion_limit=\\\"{}\\\"]` attribute to your crate\",\n                           suggested_limit));\n     }"}, {"sha": "7085d0440d3c7a931a19422ca71fb93a7596c9ab", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e259dc77870d278a37bbc42bcbc5fad64b75930/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e259dc77870d278a37bbc42bcbc5fad64b75930/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=6e259dc77870d278a37bbc42bcbc5fad64b75930", "patch": "@@ -678,7 +678,7 @@ impl<'a> ExtCtxt<'a> {\n             let mut err = self.struct_span_fatal(ei.call_site,\n                 &format!(\"recursion limit reached while expanding the macro `{}`\",\n                          ei.callee.name()));\n-            err.note(&format!(\n+            err.help(&format!(\n                 \"consider adding a `#![recursion_limit=\\\"{}\\\"]` attribute to your crate\",\n                 suggested_limit));\n             err.emit();"}, {"sha": "d157c5de6c7f57f98fd213b5da51db9a6015e9be", "filename": "src/test/ui/did_you_mean/recursion_limit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e259dc77870d278a37bbc42bcbc5fad64b75930/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6e259dc77870d278a37bbc42bcbc5fad64b75930/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit.stderr?ref=6e259dc77870d278a37bbc42bcbc5fad64b75930", "patch": "@@ -4,7 +4,7 @@ error[E0275]: overflow evaluating the requirement `K: std::marker::Send`\n 44 |     is_send::<A>();\n    |     ^^^^^^^^^^^^\n    |\n-   = note: consider adding a `#![recursion_limit=\"20\"]` attribute to your crate\n+   = help: consider adding a `#![recursion_limit=\"20\"]` attribute to your crate\n    = note: required because it appears within the type `J`\n    = note: required because it appears within the type `I`\n    = note: required because it appears within the type `H`"}, {"sha": "19aac1f77e7c1888891c7971992b8055a1d1b825", "filename": "src/test/ui/did_you_mean/recursion_limit_macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e259dc77870d278a37bbc42bcbc5fad64b75930/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6e259dc77870d278a37bbc42bcbc5fad64b75930/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_macro.stderr?ref=6e259dc77870d278a37bbc42bcbc5fad64b75930", "patch": "@@ -7,5 +7,5 @@ error: recursion limit reached while expanding the macro `recurse`\n 24 |     recurse!(0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9);\n    |     -------------------------------------------------- in this macro invocation\n    |\n-   = note: consider adding a `#![recursion_limit=\"20\"]` attribute to your crate\n+   = help: consider adding a `#![recursion_limit=\"20\"]` attribute to your crate\n "}]}