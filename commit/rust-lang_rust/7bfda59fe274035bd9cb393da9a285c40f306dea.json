{"sha": "7bfda59fe274035bd9cb393da9a285c40f306dea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiZmRhNTlmZTI3NDAzNWJkOWNiMzkzZGE5YTI4NWM0MGYzMDZkZWE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-06T00:14:48Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-06T00:17:16Z"}, "message": "don't bother inserting integer relocations into the relocation table", "tree": {"sha": "4eb194e07ccb2f2267e8ac5a33b35ae4a23609fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4eb194e07ccb2f2267e8ac5a33b35ae4a23609fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bfda59fe274035bd9cb393da9a285c40f306dea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bfda59fe274035bd9cb393da9a285c40f306dea", "html_url": "https://github.com/rust-lang/rust/commit/7bfda59fe274035bd9cb393da9a285c40f306dea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bfda59fe274035bd9cb393da9a285c40f306dea/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36505c7b40b461744061c9da49a1c76996d46c4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/36505c7b40b461744061c9da49a1c76996d46c4c", "html_url": "https://github.com/rust-lang/rust/commit/36505c7b40b461744061c9da49a1c76996d46c4c"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "32763d47d170e4911f1f97ee09796981fc381170", "filename": "src/memory.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7bfda59fe274035bd9cb393da9a285c40f306dea/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfda59fe274035bd9cb393da9a285c40f306dea/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=7bfda59fe274035bd9cb393da9a285c40f306dea", "patch": "@@ -620,7 +620,7 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n         if size == 0 {\n             return Ok(&[]);\n         }\n-        if self.has_non_int_relocations(ptr, size)? {\n+        if self.relocations(ptr, size)?.count() != 0 {\n             return Err(EvalError::ReadPointerAsBytes);\n         }\n         self.check_defined(ptr, size)?;\n@@ -718,7 +718,7 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n         let offset = ptr.offset as usize;\n         match alloc.bytes[offset..].iter().position(|&c| c == 0) {\n             Some(size) => {\n-                if self.has_non_int_relocations(ptr, (size + 1) as u64)? {\n+                if self.relocations(ptr, (size + 1) as u64)?.count() != 0 {\n                     return Err(EvalError::ReadPointerAsBytes);\n                 }\n                 self.check_defined(ptr, (size + 1) as u64)?;\n@@ -761,7 +761,9 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n \n     pub fn write_ptr(&mut self, dest: Pointer, ptr: Pointer) -> EvalResult<'tcx> {\n         self.write_usize(dest, ptr.offset as u64)?;\n-        self.get_mut(dest.alloc_id)?.relocations.insert(dest.offset, ptr.alloc_id);\n+        if ptr.alloc_id != NEVER_ALLOC_ID {\n+            self.get_mut(dest.alloc_id)?.relocations.insert(dest.offset, ptr.alloc_id);\n+        }\n         Ok(())\n     }\n \n@@ -902,12 +904,6 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n         Ok(self.get(ptr.alloc_id)?.relocations.range(start..end))\n     }\n \n-    fn has_non_int_relocations(&self, ptr: Pointer, size: u64)\n-        -> EvalResult<'tcx, bool>\n-    {\n-        Ok(self.relocations(ptr, size)?.any(|(_, &alloc_id)| alloc_id != NEVER_ALLOC_ID))\n-    }\n-\n     fn clear_relocations(&mut self, ptr: Pointer, size: u64) -> EvalResult<'tcx> {\n         // Find all relocations overlapping the given range.\n         let keys: Vec<_> = self.relocations(ptr, size)?.map(|(&k, _)| k).collect();"}]}