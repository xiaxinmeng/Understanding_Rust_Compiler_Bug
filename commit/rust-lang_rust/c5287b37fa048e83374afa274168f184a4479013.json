{"sha": "c5287b37fa048e83374afa274168f184a4479013", "node_id": "C_kwDOAAsO6NoAKGM1Mjg3YjM3ZmEwNDhlODMzNzRhZmEyNzQxNjhmMTg0YTQ0NzkwMTM", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-12-10T17:20:57Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-12-13T17:09:16Z"}, "message": "fix clippy tests", "tree": {"sha": "9a31ba1f3c99284f989a8c2c55b00123cc20beec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a31ba1f3c99284f989a8c2c55b00123cc20beec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5287b37fa048e83374afa274168f184a4479013", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5287b37fa048e83374afa274168f184a4479013", "html_url": "https://github.com/rust-lang/rust/commit/c5287b37fa048e83374afa274168f184a4479013", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5287b37fa048e83374afa274168f184a4479013/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c3747e7dd3f423c8540a3b950bbcb61b3c7942c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c3747e7dd3f423c8540a3b950bbcb61b3c7942c", "html_url": "https://github.com/rust-lang/rust/commit/1c3747e7dd3f423c8540a3b950bbcb61b3c7942c"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "a9f2ad36d0aba06294010d71216093977cba5319", "filename": "tests/ui/future_not_send.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c5287b37fa048e83374afa274168f184a4479013/tests%2Fui%2Ffuture_not_send.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c5287b37fa048e83374afa274168f184a4479013/tests%2Fui%2Ffuture_not_send.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffuture_not_send.stderr?ref=c5287b37fa048e83374afa274168f184a4479013", "patch": "@@ -6,22 +6,22 @@ LL | async fn private_future(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n    |\n    = note: `-D clippy::future-not-send` implied by `-D warnings`\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:8:5\n+  --> $DIR/future_not_send.rs:8:19\n    |\n LL | async fn private_future(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n    |                         -- has type `std::rc::Rc<[u8]>` which is not `Send`\n LL |     async { true }.await\n-   |     ^^^^^^^^^^^^^^^^^^^^ await occurs here, with `rc` maybe used later\n+   |                   ^^^^^^ await occurs here, with `rc` maybe used later\n LL | }\n    | - `rc` is later dropped here\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Send`\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:8:5\n+  --> $DIR/future_not_send.rs:8:19\n    |\n LL | async fn private_future(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n    |                                       ---- has type `&std::cell::Cell<usize>` which is not `Send`\n LL |     async { true }.await\n-   |     ^^^^^^^^^^^^^^^^^^^^ await occurs here, with `cell` maybe used later\n+   |                   ^^^^^^ await occurs here, with `cell` maybe used later\n LL | }\n    | - `cell` is later dropped here\n    = note: `std::cell::Cell<usize>` doesn't implement `std::marker::Sync`\n@@ -33,12 +33,12 @@ LL | pub async fn public_future(rc: Rc<[u8]>) {\n    |                                          ^ future returned by `public_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:12:5\n+  --> $DIR/future_not_send.rs:12:19\n    |\n LL | pub async fn public_future(rc: Rc<[u8]>) {\n    |                            -- has type `std::rc::Rc<[u8]>` which is not `Send`\n LL |     async { true }.await;\n-   |     ^^^^^^^^^^^^^^^^^^^^ await occurs here, with `rc` maybe used later\n+   |                   ^^^^^^ await occurs here, with `rc` maybe used later\n LL | }\n    | - `rc` is later dropped here\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Send`\n@@ -82,12 +82,12 @@ LL |     async fn private_future(&self) -> usize {\n    |                                       ^^^^^ future returned by `private_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:35:9\n+  --> $DIR/future_not_send.rs:35:23\n    |\n LL |     async fn private_future(&self) -> usize {\n    |                             ----- has type `&Dummy` which is not `Send`\n LL |         async { true }.await;\n-   |         ^^^^^^^^^^^^^^^^^^^^ await occurs here, with `&self` maybe used later\n+   |                       ^^^^^^ await occurs here, with `&self` maybe used later\n LL |         self.rc.len()\n LL |     }\n    |     - `&self` is later dropped here\n@@ -100,12 +100,12 @@ LL |     pub async fn public_future(&self) {\n    |                                       ^ future returned by `public_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:40:9\n+  --> $DIR/future_not_send.rs:40:30\n    |\n LL |     pub async fn public_future(&self) {\n    |                                ----- has type `&Dummy` which is not `Send`\n LL |         self.private_future().await;\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ await occurs here, with `&self` maybe used later\n+   |                              ^^^^^^ await occurs here, with `&self` maybe used later\n LL |     }\n    |     - `&self` is later dropped here\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Sync`\n@@ -117,12 +117,12 @@ LL | async fn generic_future<T>(t: T) -> T\n    |                                     ^ future returned by `generic_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:54:5\n+  --> $DIR/future_not_send.rs:54:19\n    |\n LL |     let rt = &t;\n    |         -- has type `&T` which is not `Send`\n LL |     async { true }.await;\n-   |     ^^^^^^^^^^^^^^^^^^^^ await occurs here, with `rt` maybe used later\n+   |                   ^^^^^^ await occurs here, with `rt` maybe used later\n LL |     t\n LL | }\n    | - `rt` is later dropped here"}]}