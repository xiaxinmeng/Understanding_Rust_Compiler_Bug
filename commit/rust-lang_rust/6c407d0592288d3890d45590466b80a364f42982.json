{"sha": "6c407d0592288d3890d45590466b80a364f42982", "node_id": "C_kwDOAAsO6NoAKDZjNDA3ZDA1OTIyODhkMzg5MGQ0NTU5MDQ2NmI4MGEzNjRmNDI5ODI", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-03-20T22:54:03Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-03-20T22:56:25Z"}, "message": "Add a testcase.", "tree": {"sha": "6e73c9547c8b633708297446bbeba7e9a6bb0d1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e73c9547c8b633708297446bbeba7e9a6bb0d1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c407d0592288d3890d45590466b80a364f42982", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c407d0592288d3890d45590466b80a364f42982", "html_url": "https://github.com/rust-lang/rust/commit/6c407d0592288d3890d45590466b80a364f42982", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c407d0592288d3890d45590466b80a364f42982/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95e170228440011bc6ac2eb5c689eda2f75ac586", "url": "https://api.github.com/repos/rust-lang/rust/commits/95e170228440011bc6ac2eb5c689eda2f75ac586", "html_url": "https://github.com/rust-lang/rust/commit/95e170228440011bc6ac2eb5c689eda2f75ac586"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "3fa731c95298347931ebaef3fd6202100dfd9823", "filename": "library/std/src/fs/tests.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c407d0592288d3890d45590466b80a364f42982/library%2Fstd%2Fsrc%2Ffs%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c407d0592288d3890d45590466b80a364f42982/library%2Fstd%2Fsrc%2Ffs%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs%2Ftests.rs?ref=6c407d0592288d3890d45590466b80a364f42982", "patch": "@@ -1359,6 +1359,12 @@ fn read_dir_not_found() {\n     assert_eq!(res.err().unwrap().kind(), ErrorKind::NotFound);\n }\n \n+#[test]\n+fn file_open_not_found() {\n+    let res = File::open(\"/path/that/does/not/exist\");\n+    assert_eq!(res.err().unwrap().kind(), ErrorKind::NotFound);\n+}\n+\n #[test]\n fn create_dir_all_with_junctions() {\n     let tmpdir = tmpdir();"}]}