{"sha": "7253ce73bb17d1dc872f66b5ed9a02ea68ca0060", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNTNjZTczYmIxN2QxZGM4NzJmNjZiNWVkOWEwMmVhNjhjYTAwNjA=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-10T14:14:36Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-16T10:17:15Z"}, "message": "only lint public stutter namings", "tree": {"sha": "83c9844152d32910d142606523a00d7ba616bdff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83c9844152d32910d142606523a00d7ba616bdff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7253ce73bb17d1dc872f66b5ed9a02ea68ca0060", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXYnysAAoJEFbW7qD8Z6xGHLQP/02U1HdPtavH8HU99Ecb6pCE\nupNdSUf2Ek8Bxf2TZmXGTZToq97RZgHxWq/VznwDM0JjEkkC+qCGIxFfmr7sqDA3\naJwq8CWM9G3T2mE3DFY7MkcWE7BOazFg5Dancr/NSTbPDV2bbvgyp3+9breMLGDC\nEhlMvN/JC/egIkdGQy9uaxkKW0+Qtz2Fx+bUQKMIQ6ARp9hXif2ezMQOFINgJ9H8\nbPtT4GXBcdjjpnpkpgilsE4A5XJWufDTjjiqk+cxhmLOKFEkpvKrVmAzdBANs2W4\ndWaGSY+evqvA2hV9ZZmBepHYtzt7J4IHEm5HXJbNA7J+PPVOgUenEE0EprdU77RG\nzicjRCgGeNawkk/CYeMt8QVx/PfZQd8vQAsAMyz/8992BOdDaUPMYWGVN1Cs3o08\nFaG/l0nfqZfEgmVnGmcBuIYdR7sFQlFlbS9b89OQlw/OwlggN6pNE0PzN0h1lhRU\nfcYk/Fp5sJyFscattjSSGs4dM7YaI0cbaNEg9m262HKmbb+minobIHJwmvbNcmQk\nFcL9epjW++lsteY34xKi9+MJnnUBzzxcdz6HoWAsombtdcxdtK3Q+iGTCiHGdgb5\nQ51YmuZdzCnXMGBp9RQJDHOmwN6Fx4wgtX7sRBH6GvB4DrOUnruMP8icNL8smZcP\nX71UxeAxf9cPeoraYDkc\n=dyJY\n-----END PGP SIGNATURE-----", "payload": "tree 83c9844152d32910d142606523a00d7ba616bdff\nparent 8356d2fb2170bf10ecc29edff2a4c0deb569af74\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465568076 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466072235 +0200\n\nonly lint public stutter namings"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7253ce73bb17d1dc872f66b5ed9a02ea68ca0060", "html_url": "https://github.com/rust-lang/rust/commit/7253ce73bb17d1dc872f66b5ed9a02ea68ca0060", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7253ce73bb17d1dc872f66b5ed9a02ea68ca0060/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8356d2fb2170bf10ecc29edff2a4c0deb569af74", "url": "https://api.github.com/repos/rust-lang/rust/commits/8356d2fb2170bf10ecc29edff2a4c0deb569af74", "html_url": "https://github.com/rust-lang/rust/commit/8356d2fb2170bf10ecc29edff2a4c0deb569af74"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "d03afde013252db357e65581912b23745d722d11", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7253ce73bb17d1dc872f66b5ed9a02ea68ca0060/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7253ce73bb17d1dc872f66b5ed9a02ea68ca0060/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=7253ce73bb17d1dc872f66b5ed9a02ea68ca0060", "patch": "@@ -135,18 +135,20 @@ impl EarlyLintPass for EnumVariantNames {\n         let item_name = item.ident.name.as_str();\n         let item_name_chars = item_name.chars().count();\n         let item_camel = to_camel_case(&item_name);\n-        if !in_macro(cx, item.span) {\n-            if let Some(mod_camel) = self.modules.last() {\n-                // constants don't have surrounding modules\n-                if !mod_camel.is_empty() {\n-                    let matching = partial_match(mod_camel, &item_camel);\n-                    let rmatching = partial_rmatch(mod_camel, &item_camel);\n-                    let nchars = mod_camel.chars().count();\n-                    if matching == nchars {\n-                        span_lint(cx, ENUM_VARIANT_NAMES, item.span, &format!(\"Item name ({}) starts with its containing module's name ({})\", item_camel, mod_camel));\n-                    }\n-                    if rmatching == nchars {\n-                        span_lint(cx, ENUM_VARIANT_NAMES, item.span, &format!(\"Item name ({}) ends with its containing module's name ({})\", item_camel, mod_camel));\n+        if item.vis == Visibility::Public {\n+            if !in_macro(cx, item.span) {\n+                if let Some(mod_camel) = self.modules.last() {\n+                    // constants don't have surrounding modules\n+                    if !mod_camel.is_empty() {\n+                        let matching = partial_match(mod_camel, &item_camel);\n+                        let rmatching = partial_rmatch(mod_camel, &item_camel);\n+                        let nchars = mod_camel.chars().count();\n+                        if matching == nchars {\n+                            span_lint(cx, ENUM_VARIANT_NAMES, item.span, &format!(\"Item name ({}) starts with its containing module's name ({})\", item_camel, mod_camel));\n+                        }\n+                        if rmatching == nchars {\n+                            span_lint(cx, ENUM_VARIANT_NAMES, item.span, &format!(\"Item name ({}) ends with its containing module's name ({})\", item_camel, mod_camel));\n+                        }\n                     }\n                 }\n             }"}]}