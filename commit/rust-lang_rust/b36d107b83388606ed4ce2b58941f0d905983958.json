{"sha": "b36d107b83388606ed4ce2b58941f0d905983958", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNmQxMDdiODMzODg2MDZlZDRjZTJiNTg5NDFmMGQ5MDU5ODM5NTg=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-07-21T21:04:23Z"}, "committer": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-07-21T21:04:23Z"}, "message": "Assign proper span to range expression", "tree": {"sha": "7d25ae24ed4151dedb89d4ad66ca043a9758cfb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d25ae24ed4151dedb89d4ad66ca043a9758cfb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b36d107b83388606ed4ce2b58941f0d905983958", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b36d107b83388606ed4ce2b58941f0d905983958", "html_url": "https://github.com/rust-lang/rust/commit/b36d107b83388606ed4ce2b58941f0d905983958", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b36d107b83388606ed4ce2b58941f0d905983958/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fe870a5a7449643f5cf79c0d14d47888472c6ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fe870a5a7449643f5cf79c0d14d47888472c6ca", "html_url": "https://github.com/rust-lang/rust/commit/2fe870a5a7449643f5cf79c0d14d47888472c6ca"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "be13f9a130e923b0a96cbe08b9e70ff4006497bc", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b36d107b83388606ed4ce2b58941f0d905983958/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b36d107b83388606ed4ce2b58941f0d905983958/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=b36d107b83388606ed4ce2b58941f0d905983958", "patch": "@@ -2738,14 +2738,15 @@ impl<'a> Parser<'a> {\n             // (much lower than other prefix expressions) to be consistent\n             // with the postfix-form 'expr..'\n             let lo = self.span.lo;\n+            let mut hi = self.span.hi;\n             try!(self.bump());\n             let opt_end = if self.is_at_start_of_range_notation_rhs() {\n                 let end = try!(self.parse_binops());\n+                hi = end.span.hi;\n                 Some(end)\n             } else {\n                 None\n             };\n-            let hi = self.span.hi;\n             let ex = self.mk_range(None, opt_end);\n             Ok(self.mk_expr(lo, hi, ex))\n           }\n@@ -2787,17 +2788,17 @@ impl<'a> Parser<'a> {\n           }\n           // A range expression, either `expr..expr` or `expr..`.\n           token::DotDot => {\n+            let lo = lhs.span.lo;\n+            let mut hi = self.span.hi;\n             try!(self.bump());\n \n             let opt_end = if self.is_at_start_of_range_notation_rhs() {\n                 let end = try!(self.parse_binops());\n+                hi = end.span.hi;\n                 Some(end)\n             } else {\n                 None\n             };\n-\n-            let lo = lhs.span.lo;\n-            let hi = self.span.hi;\n             let range = self.mk_range(Some(lhs), opt_end);\n             return Ok(self.mk_expr(lo, hi, range));\n           }"}]}