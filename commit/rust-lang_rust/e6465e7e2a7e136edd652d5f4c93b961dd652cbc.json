{"sha": "e6465e7e2a7e136edd652d5f4c93b961dd652cbc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NDY1ZTdlMmE3ZTEzNmVkZDY1MmQ1ZjRjOTNiOTYxZGQ2NTJjYmM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-19T13:13:16Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-20T09:15:38Z"}, "message": "index all local crates", "tree": {"sha": "4e82bd6b881d322936f7528a95d87763dca2e18c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e82bd6b881d322936f7528a95d87763dca2e18c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6465e7e2a7e136edd652d5f4c93b961dd652cbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6465e7e2a7e136edd652d5f4c93b961dd652cbc", "html_url": "https://github.com/rust-lang/rust/commit/e6465e7e2a7e136edd652d5f4c93b961dd652cbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6465e7e2a7e136edd652d5f4c93b961dd652cbc/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51fec4ef844d7fe83bf96c74e02e5f820837ff2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/51fec4ef844d7fe83bf96c74e02e5f820837ff2d", "html_url": "https://github.com/rust-lang/rust/commit/51fec4ef844d7fe83bf96c74e02e5f820837ff2d"}], "stats": {"total": 70, "additions": 37, "deletions": 33}, "files": [{"sha": "3d0f13f3410b89bbc197a6660944ef6f4c687834", "filename": "crates/ra_analysis/src/db.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e6465e7e2a7e136edd652d5f4c93b961dd652cbc/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6465e7e2a7e136edd652d5f4c93b961dd652cbc/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb.rs?ref=e6465e7e2a7e136edd652d5f4c93b961dd652cbc", "patch": "@@ -30,11 +30,11 @@ impl Default for RootDatabase {\n             runtime: salsa::Runtime::default(),\n             id_maps: Default::default(),\n         };\n-        db.query_mut(ra_db::SourceRootQuery)\n-            .set(ra_db::WORKSPACE, Default::default());\n         db.query_mut(ra_db::CrateGraphQuery)\n             .set((), Default::default());\n-        db.query_mut(ra_db::LibrariesQuery)\n+        db.query_mut(ra_db::LocalRootsQuery)\n+            .set((), Default::default());\n+        db.query_mut(ra_db::LibraryRootsQuery)\n             .set((), Default::default());\n         db\n     }\n@@ -64,7 +64,8 @@ salsa::database_storage! {\n             fn file_relative_path() for ra_db::FileRelativePathQuery;\n             fn file_source_root() for ra_db::FileSourceRootQuery;\n             fn source_root() for ra_db::SourceRootQuery;\n-            fn libraries() for ra_db::LibrariesQuery;\n+            fn local_roots() for ra_db::LocalRootsQuery;\n+            fn library_roots() for ra_db::LibraryRootsQuery;\n             fn crate_graph() for ra_db::CrateGraphQuery;\n         }\n         impl ra_db::SyntaxDatabase {"}, {"sha": "46169d8631fe28f037d7d28f072bb7ca15f204e6", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 19, "deletions": 20, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/e6465e7e2a7e136edd652d5f4c93b961dd652cbc/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6465e7e2a7e136edd652d5f4c93b961dd652cbc/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=e6465e7e2a7e136edd652d5f4c93b961dd652cbc", "patch": "@@ -10,7 +10,7 @@ use ra_syntax::{\n     SyntaxKind::*,\n     SyntaxNodeRef, TextRange, TextUnit,\n };\n-use ra_db::{FilesDatabase, SourceRoot, SourceRootId, WORKSPACE, SyntaxDatabase};\n+use ra_db::{FilesDatabase, SourceRoot, SourceRootId, SyntaxDatabase};\n use rayon::prelude::*;\n use salsa::{Database, ParallelDatabase};\n use hir::{\n@@ -56,7 +56,7 @@ impl AnalysisHostImpl {\n             self.db.query_mut(ra_db::FileTextQuery).set(file_id, text)\n         }\n         if !change.libraries_added.is_empty() {\n-            let mut libraries = Vec::clone(&self.db.libraries());\n+            let mut libraries = Vec::clone(&self.db.library_roots());\n             for library in change.libraries_added {\n                 libraries.push(library.root_id);\n                 self.db\n@@ -65,7 +65,7 @@ impl AnalysisHostImpl {\n                 self.apply_root_change(library.root_id, library.root_change);\n             }\n             self.db\n-                .query_mut(ra_db::LibrariesQuery)\n+                .query_mut(ra_db::LibraryRootsQuery)\n                 .set((), Arc::new(libraries));\n         }\n         if let Some(crate_graph) = change.crate_graph {\n@@ -142,27 +142,26 @@ impl AnalysisImpl {\n         self.db.file_lines(file_id)\n     }\n     pub fn world_symbols(&self, query: Query) -> Cancelable<Vec<(FileId, FileSymbol)>> {\n+        /// Need to wrap Snapshot to provide `Clone` impl for `map_with`\n+        struct Snap(salsa::Snapshot<db::RootDatabase>);\n+        impl Clone for Snap {\n+            fn clone(&self) -> Snap {\n+                Snap(self.0.snapshot())\n+            }\n+        }\n+\n         let buf: Vec<Arc<SymbolIndex>> = if query.libs {\n+            let snap = Snap(self.db.snapshot());\n             self.db\n-                .libraries()\n-                .iter()\n-                .map(|&lib_id| self.db.library_symbols(lib_id))\n+                .library_roots()\n+                .par_iter()\n+                .map_with(snap, |db, &lib_id| db.0.library_symbols(lib_id))\n                 .collect()\n         } else {\n-            let files: Vec<FileId> = self\n-                .db\n-                .source_root(WORKSPACE)\n-                .files\n-                .values()\n-                .map(|&it| it)\n-                .collect();\n-\n-            /// Need to wrap Snapshot to provide `Clone` impl for `map_with`\n-            struct Snap(salsa::Snapshot<db::RootDatabase>);\n-            impl Clone for Snap {\n-                fn clone(&self) -> Snap {\n-                    Snap(self.0.snapshot())\n-                }\n+            let mut files = Vec::new();\n+            for &root in self.db.local_roots().iter() {\n+                let sr = self.db.source_root(root);\n+                files.extend(sr.files.values().map(|&it| it))\n             }\n \n             let snap = Snap(self.db.snapshot());"}, {"sha": "0db3c3479407f6ced4b47fca0292615e8d1bbf22", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6465e7e2a7e136edd652d5f4c93b961dd652cbc/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6465e7e2a7e136edd652d5f4c93b961dd652cbc/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=e6465e7e2a7e136edd652d5f4c93b961dd652cbc", "patch": "@@ -39,7 +39,7 @@ pub use hir::FnSignatureInfo;\n \n pub use ra_db::{\n     Canceled, Cancelable, FilePosition,\n-    CrateGraph, CrateId, SourceRootId, FileId, WORKSPACE\n+    CrateGraph, CrateId, SourceRootId, FileId\n };\n \n #[derive(Default)]"}, {"sha": "0c042e672d1f11c8b2b07aae6e0bbbf61889f1e4", "filename": "crates/ra_analysis/src/mock_analysis.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e6465e7e2a7e136edd652d5f4c93b961dd652cbc/crates%2Fra_analysis%2Fsrc%2Fmock_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6465e7e2a7e136edd652d5f4c93b961dd652cbc/crates%2Fra_analysis%2Fsrc%2Fmock_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fmock_analysis.rs?ref=e6465e7e2a7e136edd652d5f4c93b961dd652cbc", "patch": "@@ -4,7 +4,7 @@ use relative_path::{RelativePathBuf};\n use test_utils::{extract_offset, parse_fixture, CURSOR_MARKER};\n use ra_db::mock::FileMap;\n \n-use crate::{Analysis, AnalysisChange, AnalysisHost, FileId, FilePosition, WORKSPACE};\n+use crate::{Analysis, AnalysisChange, AnalysisHost, FileId, FilePosition, SourceRootId};\n \n /// Mock analysis is used in test to bootstrap an AnalysisHost/Analysis\n /// from a set of in-memory files.\n@@ -78,12 +78,14 @@ impl MockAnalysis {\n     pub fn analysis_host(self) -> AnalysisHost {\n         let mut host = AnalysisHost::default();\n         let mut file_map = FileMap::default();\n+        let source_root = SourceRootId(0);\n         let mut change = AnalysisChange::new();\n+        change.add_root(source_root);\n         for (path, contents) in self.files.into_iter() {\n             assert!(path.starts_with('/'));\n             let path = RelativePathBuf::from_path(&path[1..]).unwrap();\n             let file_id = file_map.add(path.clone());\n-            change.add_file(WORKSPACE, file_id, path, Arc::new(contents));\n+            change.add_file(source_root, file_id, path, Arc::new(contents));\n         }\n         // change.set_file_resolver(Arc::new(file_map));\n         host.apply_change(change);"}, {"sha": "cccf37cc28c434318b1c9348e9e957c614ef1172", "filename": "crates/ra_db/src/input.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e6465e7e2a7e136edd652d5f4c93b961dd652cbc/crates%2Fra_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6465e7e2a7e136edd652d5f4c93b961dd652cbc/crates%2Fra_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Finput.rs?ref=e6465e7e2a7e136edd652d5f4c93b961dd652cbc", "patch": "@@ -8,8 +8,6 @@ use salsa;\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]\n pub struct SourceRootId(pub u32);\n \n-pub const WORKSPACE: SourceRootId = SourceRootId(0);\n-\n #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct FileId(pub u32);\n \n@@ -102,8 +100,12 @@ salsa::query_group! {\n             type SourceRootQuery;\n             storage input;\n         }\n-        fn libraries() -> Arc<Vec<SourceRootId>> {\n-            type LibrariesQuery;\n+        fn local_roots() -> Arc<Vec<SourceRootId>> {\n+            type LocalRootsQuery;\n+            storage input;\n+        }\n+        fn library_roots() -> Arc<Vec<SourceRootId>> {\n+            type LibraryRootsQuery;\n             storage input;\n         }\n         fn crate_graph() -> Arc<CrateGraph> {"}, {"sha": "65fa3cbfa43702308d4baddfa673df720d0627e4", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e6465e7e2a7e136edd652d5f4c93b961dd652cbc/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6465e7e2a7e136edd652d5f4c93b961dd652cbc/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=e6465e7e2a7e136edd652d5f4c93b961dd652cbc", "patch": "@@ -24,8 +24,8 @@ impl std::error::Error for Canceled {}\n pub use crate::{\n     syntax_ptr::LocalSyntaxPtr,\n     input::{\n-        FilesDatabase, FileId, CrateId, SourceRoot, SourceRootId, CrateGraph, WORKSPACE,\n-        FileTextQuery, FileSourceRootQuery, SourceRootQuery, LibrariesQuery, CrateGraphQuery,\n+        FilesDatabase, FileId, CrateId, SourceRoot, SourceRootId, CrateGraph,\n+        FileTextQuery, FileSourceRootQuery, SourceRootQuery, LocalRootsQuery, LibraryRootsQuery, CrateGraphQuery,\n         FileRelativePathQuery\n     },\n     loc2id::{LocationIntener, NumericId},"}]}