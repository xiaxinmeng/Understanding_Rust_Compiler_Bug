{"sha": "2e9ed6fb936f422bbb6be70468d8cd6b9b23495c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlOWVkNmZiOTM2ZjQyMmJiYjZiZTcwNDY4ZDhjZDZiOWIyMzQ5NWM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-12-17T23:30:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-17T23:30:11Z"}, "message": "Rollup merge of #80003 - Stupremee:fix-zst-vecdeque-conversion-panic, r=dtolnay\n\nFix overflow when converting ZST Vec to VecDeque\n\n```rust\nlet v = vec![(); 100];\nlet queue = VecDeque::from(v);\nprintln!(\"{:?}\", queue);\n```\nThis code will currently panic with a capacity overflow.\nThis PR resolves this issue and makes the code run fine.\n\nResolves #78532", "tree": {"sha": "02127dabaa25feaf290eb339596615533312ce11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02127dabaa25feaf290eb339596615533312ce11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e9ed6fb936f422bbb6be70468d8cd6b9b23495c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf2+oECRBK7hj4Ov3rIwAAdHIIAHSkHu3imUicc24THvoDiXLS\nvu2VacpKU37WilzJ+zYcaMr2Naqr8VcsepEs+N0D+F2iy3nICCUTWXb+fl3I/+X1\nhig8vHuAbtEmT4EeEUAZ3Y0N8XFXGC3VpahA4F50+qH4hikN91AEiWWsAeR8T1hG\nji02Xo4Ypf6wllK3WSNYs0W5mCDdAkPm1ruECXk+dZROIqH0AHCl6AIGdU/+ugsB\nevyw9jgS0PLv0bYrjJoLIlIDLD0vSXOo15sGz2B36h3SFCsrUKA+gO85GCs9v8Xp\nx2dlaJx7N2LmLi5qymL7I6LAuKfTpHc8bzL9djWggql9uMSzmSeC6vTNe46yqAA=\n=hGW5\n-----END PGP SIGNATURE-----\n", "payload": "tree 02127dabaa25feaf290eb339596615533312ce11\nparent 720b6941dff18896bcab36bec8e905fdb462d7d8\nparent 09d528ec155f77349001fa7eb6c3ae3363f41412\nauthor Dylan DPC <dylan.dpc@gmail.com> 1608247811 +0100\ncommitter GitHub <noreply@github.com> 1608247811 +0100\n\nRollup merge of #80003 - Stupremee:fix-zst-vecdeque-conversion-panic, r=dtolnay\n\nFix overflow when converting ZST Vec to VecDeque\n\n```rust\nlet v = vec![(); 100];\nlet queue = VecDeque::from(v);\nprintln!(\"{:?}\", queue);\n```\nThis code will currently panic with a capacity overflow.\nThis PR resolves this issue and makes the code run fine.\n\nResolves #78532\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e9ed6fb936f422bbb6be70468d8cd6b9b23495c", "html_url": "https://github.com/rust-lang/rust/commit/2e9ed6fb936f422bbb6be70468d8cd6b9b23495c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e9ed6fb936f422bbb6be70468d8cd6b9b23495c/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "720b6941dff18896bcab36bec8e905fdb462d7d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/720b6941dff18896bcab36bec8e905fdb462d7d8", "html_url": "https://github.com/rust-lang/rust/commit/720b6941dff18896bcab36bec8e905fdb462d7d8"}, {"sha": "09d528ec155f77349001fa7eb6c3ae3363f41412", "url": "https://api.github.com/repos/rust-lang/rust/commits/09d528ec155f77349001fa7eb6c3ae3363f41412", "html_url": "https://github.com/rust-lang/rust/commit/09d528ec155f77349001fa7eb6c3ae3363f41412"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "9e54c15ea6a0b3a5f2bfed00d985187600801889", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2e9ed6fb936f422bbb6be70468d8cd6b9b23495c/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e9ed6fb936f422bbb6be70468d8cd6b9b23495c/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=2e9ed6fb936f422bbb6be70468d8cd6b9b23495c", "patch": "@@ -2793,8 +2793,12 @@ impl<T> From<Vec<T>> for VecDeque<T> {\n             let len = other.len();\n \n             // We need to extend the buf if it's not a power of two, too small\n-            // or doesn't have at least one free space\n-            if !buf.capacity().is_power_of_two()\n+            // or doesn't have at least one free space.\n+            // We check if `T` is a ZST in the first condition,\n+            // because `usize::MAX` (the capacity returned by `capacity()` for ZST)\n+            // is not a power of two and thus it'll always try\n+            // to reserve more memory which will panic for ZST (rust-lang/rust#78532)\n+            if (!buf.capacity().is_power_of_two() && mem::size_of::<T>() != 0)\n                 || (buf.capacity() < (MINIMUM_CAPACITY + 1))\n                 || (buf.capacity() == len)\n             {"}, {"sha": "0919b1325bceba6b4609589fb41d17c9fba4eac7", "filename": "library/alloc/tests/vec_deque.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2e9ed6fb936f422bbb6be70468d8cd6b9b23495c/library%2Falloc%2Ftests%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e9ed6fb936f422bbb6be70468d8cd6b9b23495c/library%2Falloc%2Ftests%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fvec_deque.rs?ref=2e9ed6fb936f422bbb6be70468d8cd6b9b23495c", "patch": "@@ -1728,3 +1728,10 @@ fn test_zero_sized_push() {\n         }\n     }\n }\n+\n+#[test]\n+fn test_from_zero_sized_vec() {\n+    let v = vec![(); 100];\n+    let queue = VecDeque::from(v);\n+    assert_eq!(queue.len(), 100);\n+}"}]}