{"sha": "1cf6d6940c6e1368c76d2565ce13aeaa7e70a4b7", "node_id": "C_kwDOAAsO6NoAKDFjZjZkNjk0MGM2ZTEzNjhjNzZkMjU2NWNlMTNhZWFhN2U3MGE0Yjc", "commit": {"author": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-04-05T19:38:03Z"}, "committer": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-04-05T19:38:03Z"}, "message": "kill temp early", "tree": {"sha": "1d977e3f96cdf8e321a2de11fd5838e9bc507525", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d977e3f96cdf8e321a2de11fd5838e9bc507525"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cf6d6940c6e1368c76d2565ce13aeaa7e70a4b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cf6d6940c6e1368c76d2565ce13aeaa7e70a4b7", "html_url": "https://github.com/rust-lang/rust/commit/1cf6d6940c6e1368c76d2565ce13aeaa7e70a4b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cf6d6940c6e1368c76d2565ce13aeaa7e70a4b7/comments", "author": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72070d8103ee2085129075852d318c91e0fcd292", "url": "https://api.github.com/repos/rust-lang/rust/commits/72070d8103ee2085129075852d318c91e0fcd292", "html_url": "https://github.com/rust-lang/rust/commit/72070d8103ee2085129075852d318c91e0fcd292"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "79aac163550612d0fc7f65d516ae9beaac8df474", "filename": "compiler/rustc_mir_transform/src/deref_separator.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1cf6d6940c6e1368c76d2565ce13aeaa7e70a4b7/compiler%2Frustc_mir_transform%2Fsrc%2Fderef_separator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cf6d6940c6e1368c76d2565ce13aeaa7e70a4b7/compiler%2Frustc_mir_transform%2Fsrc%2Fderef_separator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fderef_separator.rs?ref=1cf6d6940c6e1368c76d2565ce13aeaa7e70a4b7", "patch": "@@ -8,7 +8,6 @@ pub fn deref_finder<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n     let mut patch = MirPatch::new(body);\n     let (basic_blocks, local_decl) = body.basic_blocks_and_local_decls_mut();\n     for (block, data) in basic_blocks.iter_enumerated_mut() {\n-        let statement_len = data.statements.len();\n         for (i, stmt) in data.statements.iter_mut().enumerate() {\n             match stmt.kind {\n                 StatementKind::Assign(box (og_place, Rvalue::Ref(region, borrow_knd, place))) => {\n@@ -49,7 +48,7 @@ pub fn deref_finder<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n                             *stmt = new_stmt;\n \n                             // Since our job with the temp is done it should be gone\n-                            let loc = Location { block: block, statement_index: statement_len };\n+                            let loc = Location { block: block, statement_index: i + 1 };\n                             patch.add_statement(loc, StatementKind::StorageDead(temp));\n \n                             // As all projections are off the base projection, if there are"}, {"sha": "e9a45656ebf8def5f8a39f68eb0391f1b640a8f0", "filename": "src/test/mir-opt/derefer_test.main.Derefer.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1cf6d6940c6e1368c76d2565ce13aeaa7e70a4b7/src%2Ftest%2Fmir-opt%2Fderefer_test.main.Derefer.diff", "raw_url": "https://github.com/rust-lang/rust/raw/1cf6d6940c6e1368c76d2565ce13aeaa7e70a4b7/src%2Ftest%2Fmir-opt%2Fderefer_test.main.Derefer.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderefer_test.main.Derefer.diff?ref=1cf6d6940c6e1368c76d2565ce13aeaa7e70a4b7", "patch": "@@ -38,18 +38,18 @@\n +         StorageLive(_6);                 // scope 2 at $DIR/derefer_test.rs:5:13: 5:26\n +         _6 = move (_2.1: &mut (i32, i32)); // scope 2 at $DIR/derefer_test.rs:5:13: 5:26\n +         _4 = &mut ((*_6).0: i32);        // scope 2 at $DIR/derefer_test.rs:5:13: 5:26\n++         StorageDead(_6);                 // scope 3 at $DIR/derefer_test.rs:6:9: 6:10\n           StorageLive(_5);                 // scope 3 at $DIR/derefer_test.rs:6:9: 6:10\n -         _5 = &mut ((*(_2.1: &mut (i32, i32))).1: i32); // scope 3 at $DIR/derefer_test.rs:6:13: 6:26\n +         StorageLive(_7);                 // scope 3 at $DIR/derefer_test.rs:6:13: 6:26\n +         _7 = move (_2.1: &mut (i32, i32)); // scope 3 at $DIR/derefer_test.rs:6:13: 6:26\n +         _5 = &mut ((*_7).1: i32);        // scope 3 at $DIR/derefer_test.rs:6:13: 6:26\n++         StorageDead(_7);                 // scope 0 at $DIR/derefer_test.rs:2:11: 7:2\n           _0 = const ();                   // scope 0 at $DIR/derefer_test.rs:2:11: 7:2\n           StorageDead(_5);                 // scope 3 at $DIR/derefer_test.rs:7:1: 7:2\n           StorageDead(_4);                 // scope 2 at $DIR/derefer_test.rs:7:1: 7:2\n           StorageDead(_2);                 // scope 1 at $DIR/derefer_test.rs:7:1: 7:2\n           StorageDead(_1);                 // scope 0 at $DIR/derefer_test.rs:7:1: 7:2\n-+         StorageDead(_6);                 // scope 0 at $DIR/derefer_test.rs:7:2: 7:2\n-+         StorageDead(_7);                 // scope 0 at $DIR/derefer_test.rs:7:2: 7:2\n           return;                          // scope 0 at $DIR/derefer_test.rs:7:2: 7:2\n +     }\n + "}, {"sha": "a18ff0e35fe9a0c2f834596b9817539bf5cab550", "filename": "src/test/mir-opt/inline/issue_58867_inline_as_ref_as_mut.b.Inline.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cf6d6940c6e1368c76d2565ce13aeaa7e70a4b7/src%2Ftest%2Fmir-opt%2Finline%2Fissue_58867_inline_as_ref_as_mut.b.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/1cf6d6940c6e1368c76d2565ce13aeaa7e70a4b7/src%2Ftest%2Fmir-opt%2Finline%2Fissue_58867_inline_as_ref_as_mut.b.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fissue_58867_inline_as_ref_as_mut.b.Inline.after.mir?ref=1cf6d6940c6e1368c76d2565ce13aeaa7e70a4b7", "patch": "@@ -23,11 +23,11 @@ fn b(_1: &mut Box<T>) -> &mut T {\n         StorageLive(_7);                 // scope 1 at $SRC_DIR/alloc/src/boxed.rs:LL:COL\n         _7 = move (*_4);                 // scope 1 at $SRC_DIR/alloc/src/boxed.rs:LL:COL\n         _6 = &mut (*_7);                 // scope 1 at $SRC_DIR/alloc/src/boxed.rs:LL:COL\n+        StorageDead(_7);                 // scope 1 at $SRC_DIR/alloc/src/boxed.rs:LL:COL\n         _5 = &mut (*_6);                 // scope 1 at $SRC_DIR/alloc/src/boxed.rs:LL:COL\n         _3 = &mut (*_5);                 // scope 1 at $SRC_DIR/alloc/src/boxed.rs:LL:COL\n         StorageDead(_6);                 // scope 1 at $SRC_DIR/alloc/src/boxed.rs:LL:COL\n         StorageDead(_5);                 // scope 1 at $SRC_DIR/alloc/src/boxed.rs:LL:COL\n-        StorageDead(_7);                 // scope 1 at $SRC_DIR/alloc/src/boxed.rs:LL:COL\n         _2 = &mut (*_3);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:15\n         StorageDead(_4);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:14: 8:15\n         _0 = &mut (*_2);                 // scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:15"}]}