{"sha": "e62c26e39d5a6ffda051aa956efde35226262951", "node_id": "C_kwDOAAsO6NoAKGU2MmMyNmUzOWQ1YTZmZmRhMDUxYWE5NTZlZmRlMzUyMjYyNjI5NTE", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-02-17T14:16:52Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-02-21T18:28:22Z"}, "message": "On ARM, use relocation_model to detect whether r9 should be reserved\n\nThe previous approach of checking for the reserve-r9 target feature\ndidn't actually work because LLVM only sets this feature very late when\ninitializing the per-function subtarget.", "tree": {"sha": "4731d60e52b97ae92d5164c176471b2920afc5a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4731d60e52b97ae92d5164c176471b2920afc5a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e62c26e39d5a6ffda051aa956efde35226262951", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e62c26e39d5a6ffda051aa956efde35226262951", "html_url": "https://github.com/rust-lang/rust/commit/e62c26e39d5a6ffda051aa956efde35226262951", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e62c26e39d5a6ffda051aa956efde35226262951/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e80bc3c8d8ab353ae498b10ad91049db5d3dbca", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e80bc3c8d8ab353ae498b10ad91049db5d3dbca", "html_url": "https://github.com/rust-lang/rust/commit/7e80bc3c8d8ab353ae498b10ad91049db5d3dbca"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "10c2f06faf3ee6f18e6e07700d730cc9d24bf0c2", "filename": "src/inline_asm.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e62c26e39d5a6ffda051aa956efde35226262951/src%2Finline_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e62c26e39d5a6ffda051aa956efde35226262951/src%2Finline_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finline_asm.rs?ref=e62c26e39d5a6ffda051aa956efde35226262951", "patch": "@@ -182,7 +182,12 @@ struct InlineAssemblyGenerator<'a, 'tcx> {\n impl<'tcx> InlineAssemblyGenerator<'_, 'tcx> {\n     fn allocate_registers(&mut self) {\n         let sess = self.tcx.sess;\n-        let map = allocatable_registers(self.arch, &sess.target_features, &sess.target);\n+        let map = allocatable_registers(\n+            self.arch,\n+            sess.relocation_model(),\n+            &sess.target_features,\n+            &sess.target,\n+        );\n         let mut allocated = FxHashMap::<_, (bool, bool)>::default();\n         let mut regs = vec![None; self.operands.len()];\n \n@@ -315,6 +320,7 @@ impl<'tcx> InlineAssemblyGenerator<'_, 'tcx> {\n         // Allocate stack slots for saving clobbered registers\n         let abi_clobber = InlineAsmClobberAbi::parse(\n             self.arch,\n+            self.tcx.sess.relocation_model(),\n             &self.tcx.sess.target_features,\n             &self.tcx.sess.target,\n             sym::C,"}]}