{"sha": "71415ef9bd697a49db34742172aacb792ce8d116", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxNDE1ZWY5YmQ2OTdhNDlkYjM0NzQyMTcyYWFjYjc5MmNlOGQxMTY=", "commit": {"author": {"name": "nathanwhit", "email": "nathan.whitaker01@gmail.com", "date": "2019-07-25T15:51:05Z"}, "committer": {"name": "nathanwhit", "email": "nathan.whitaker01@gmail.com", "date": "2019-08-12T14:14:07Z"}, "message": "Parse excess semicolons as empty stmts for linting", "tree": {"sha": "28e3f48268a710a98049eb6c8bd7c81c9d325787", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28e3f48268a710a98049eb6c8bd7c81c9d325787"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71415ef9bd697a49db34742172aacb792ce8d116", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71415ef9bd697a49db34742172aacb792ce8d116", "html_url": "https://github.com/rust-lang/rust/commit/71415ef9bd697a49db34742172aacb792ce8d116", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71415ef9bd697a49db34742172aacb792ce8d116/comments", "author": {"login": "nathanwhit", "id": 17734409, "node_id": "MDQ6VXNlcjE3NzM0NDA5", "avatar_url": "https://avatars.githubusercontent.com/u/17734409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanwhit", "html_url": "https://github.com/nathanwhit", "followers_url": "https://api.github.com/users/nathanwhit/followers", "following_url": "https://api.github.com/users/nathanwhit/following{/other_user}", "gists_url": "https://api.github.com/users/nathanwhit/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanwhit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanwhit/subscriptions", "organizations_url": "https://api.github.com/users/nathanwhit/orgs", "repos_url": "https://api.github.com/users/nathanwhit/repos", "events_url": "https://api.github.com/users/nathanwhit/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanwhit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanwhit", "id": 17734409, "node_id": "MDQ6VXNlcjE3NzM0NDA5", "avatar_url": "https://avatars.githubusercontent.com/u/17734409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanwhit", "html_url": "https://github.com/nathanwhit", "followers_url": "https://api.github.com/users/nathanwhit/followers", "following_url": "https://api.github.com/users/nathanwhit/following{/other_user}", "gists_url": "https://api.github.com/users/nathanwhit/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanwhit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanwhit/subscriptions", "organizations_url": "https://api.github.com/users/nathanwhit/orgs", "repos_url": "https://api.github.com/users/nathanwhit/repos", "events_url": "https://api.github.com/users/nathanwhit/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanwhit/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c01be67ea40266d6a4c3289654a07ddd7ce2a172", "url": "https://api.github.com/repos/rust-lang/rust/commits/c01be67ea40266d6a4c3289654a07ddd7ce2a172", "html_url": "https://github.com/rust-lang/rust/commit/c01be67ea40266d6a4c3289654a07ddd7ce2a172"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "750d8fbbddc001e7f5421ec3a281efa9aeb77d29", "filename": "src/libsyntax/parse/parser/stmt.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/71415ef9bd697a49db34742172aacb792ce8d116/src%2Flibsyntax%2Fparse%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71415ef9bd697a49db34742172aacb792ce8d116/src%2Flibsyntax%2Fparse%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fstmt.rs?ref=71415ef9bd697a49db34742172aacb792ce8d116", "patch": "@@ -167,7 +167,22 @@ impl<'a> Parser<'a> {\n                     if self.token == token::Semi {\n                         unused_attrs(&attrs, self);\n                         self.bump();\n-                        return Ok(None);\n+                        let mut last_semi = lo;\n+                        while self.token == token::Semi {\n+                            last_semi = self.token.span;\n+                            self.bump();\n+                        }\n+                        // We are encoding a string of semicolons as an\n+                        // an empty tuple that spans the excess semicolons\n+                        // to preserve this info until the lint stage\n+                        return Ok(Some(Stmt {\n+                            id: ast::DUMMY_NODE_ID,\n+                            span: lo.to(last_semi),\n+                            node: StmtKind::Semi(self.mk_expr(lo.to(last_semi),\n+                                ExprKind::Tup(Vec::new()),\n+                                ThinVec::new()\n+                            )),\n+                        }));\n                     }\n \n                     if self.token == token::CloseDelim(token::Brace) {"}]}