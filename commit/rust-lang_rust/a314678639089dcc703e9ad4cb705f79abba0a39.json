{"sha": "a314678639089dcc703e9ad4cb705f79abba0a39", "node_id": "C_kwDOAAsO6NoAKGEzMTQ2Nzg2MzkwODlkY2M3MDNlOWFkNGNiNzA1Zjc5YWJiYTBhMzk", "commit": {"author": {"name": "Fe\u0301lix Saparelli", "email": "felix@passcod.name", "date": "2021-10-27T13:35:39Z"}, "committer": {"name": "Fe\u0301lix Saparelli", "email": "felix@passcod.name", "date": "2021-10-27T13:38:56Z"}, "message": "Expose HashMap:VacantEntry:insert_entry", "tree": {"sha": "210e95e1acf963ed908f4f90fa8525fec1628431", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/210e95e1acf963ed908f4f90fa8525fec1628431"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a314678639089dcc703e9ad4cb705f79abba0a39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a314678639089dcc703e9ad4cb705f79abba0a39", "html_url": "https://github.com/rust-lang/rust/commit/a314678639089dcc703e9ad4cb705f79abba0a39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a314678639089dcc703e9ad4cb705f79abba0a39/comments", "author": {"login": "passcod", "id": 155787, "node_id": "MDQ6VXNlcjE1NTc4Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/155787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/passcod", "html_url": "https://github.com/passcod", "followers_url": "https://api.github.com/users/passcod/followers", "following_url": "https://api.github.com/users/passcod/following{/other_user}", "gists_url": "https://api.github.com/users/passcod/gists{/gist_id}", "starred_url": "https://api.github.com/users/passcod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/passcod/subscriptions", "organizations_url": "https://api.github.com/users/passcod/orgs", "repos_url": "https://api.github.com/users/passcod/repos", "events_url": "https://api.github.com/users/passcod/events{/privacy}", "received_events_url": "https://api.github.com/users/passcod/received_events", "type": "User", "site_admin": false}, "committer": {"login": "passcod", "id": 155787, "node_id": "MDQ6VXNlcjE1NTc4Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/155787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/passcod", "html_url": "https://github.com/passcod", "followers_url": "https://api.github.com/users/passcod/followers", "following_url": "https://api.github.com/users/passcod/following{/other_user}", "gists_url": "https://api.github.com/users/passcod/gists{/gist_id}", "starred_url": "https://api.github.com/users/passcod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/passcod/subscriptions", "organizations_url": "https://api.github.com/users/passcod/orgs", "repos_url": "https://api.github.com/users/passcod/repos", "events_url": "https://api.github.com/users/passcod/events{/privacy}", "received_events_url": "https://api.github.com/users/passcod/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5ec9dfa5cd7dbd6fbd0685c44c3e38c5754192d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5ec9dfa5cd7dbd6fbd0685c44c3e38c5754192d", "html_url": "https://github.com/rust-lang/rust/commit/d5ec9dfa5cd7dbd6fbd0685c44c3e38c5754192d"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "fd56a311e50d53c3b731fa4cf55c31daa154e754", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a314678639089dcc703e9ad4cb705f79abba0a39/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a314678639089dcc703e9ad4cb705f79abba0a39/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=a314678639089dcc703e9ad4cb705f79abba0a39", "patch": "@@ -2793,6 +2793,7 @@ impl<'a, K: 'a, V: 'a> VacantEntry<'a, K, V> {\n     /// # Examples\n     ///\n     /// ```\n+    /// #![feature(entry_insert)]\n     /// use std::collections::HashMap;\n     /// use std::collections::hash_map::Entry;\n     ///\n@@ -2804,7 +2805,8 @@ impl<'a, K: 'a, V: 'a> VacantEntry<'a, K, V> {\n     /// assert_eq!(map[\"poneyland\"], 37);\n     /// ```\n     #[inline]\n-    fn insert_entry(self, value: V) -> OccupiedEntry<'a, K, V> {\n+    #[unstable(feature = \"entry_insert\", issue = \"65225\")]\n+    pub fn insert_entry(self, value: V) -> OccupiedEntry<'a, K, V> {\n         let base = self.base.insert_entry(value);\n         OccupiedEntry { base }\n     }"}]}