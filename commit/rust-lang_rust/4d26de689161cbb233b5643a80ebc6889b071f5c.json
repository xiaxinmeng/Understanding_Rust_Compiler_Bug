{"sha": "4d26de689161cbb233b5643a80ebc6889b071f5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkMjZkZTY4OTE2MWNiYjIzM2I1NjQzYTgwZWJjNjg4OWIwNzFmNWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-06T03:38:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-06T03:38:56Z"}, "message": "Auto merge of #79729 - matthiaskrgr:clones_, r=jyn514\n\nremove redundant clones", "tree": {"sha": "886910e8abddba8f6b819235c880a294eecbe447", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/886910e8abddba8f6b819235c880a294eecbe447"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d26de689161cbb233b5643a80ebc6889b071f5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d26de689161cbb233b5643a80ebc6889b071f5c", "html_url": "https://github.com/rust-lang/rust/commit/4d26de689161cbb233b5643a80ebc6889b071f5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d26de689161cbb233b5643a80ebc6889b071f5c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddafcc0b66e04ac4793361d3bd604c8c8a9d16a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddafcc0b66e04ac4793361d3bd604c8c8a9d16a8", "html_url": "https://github.com/rust-lang/rust/commit/ddafcc0b66e04ac4793361d3bd604c8c8a9d16a8"}, {"sha": "1734f9c29129b832f499ffdb9a782ff8ccf66187", "url": "https://api.github.com/repos/rust-lang/rust/commits/1734f9c29129b832f499ffdb9a782ff8ccf66187", "html_url": "https://github.com/rust-lang/rust/commit/1734f9c29129b832f499ffdb9a782ff8ccf66187"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "8a60b196e5e6e3a13ddf1c480e2f6aafd34b8017", "filename": "compiler/rustc_infer/src/infer/canonical/canonicalizer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d26de689161cbb233b5643a80ebc6889b071f5c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d26de689161cbb233b5643a80ebc6889b071f5c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fcanonicalizer.rs?ref=4d26de689161cbb233b5643a80ebc6889b071f5c", "patch": "@@ -505,7 +505,7 @@ impl<'cx, 'tcx> Canonicalizer<'cx, 'tcx> {\n             let canon_value = Canonical {\n                 max_universe: ty::UniverseIndex::ROOT,\n                 variables: List::empty(),\n-                value: value.clone(),\n+                value,\n             };\n             return canon_value;\n         }"}, {"sha": "13c8d6b2bccb822b92e82c5e0946b5c17c6c80c4", "filename": "compiler/rustc_middle/src/ty/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d26de689161cbb233b5643a80ebc6889b071f5c/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d26de689161cbb233b5643a80ebc6889b071f5c/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffold.rs?ref=4d26de689161cbb233b5643a80ebc6889b071f5c", "patch": "@@ -581,7 +581,7 @@ impl<'tcx> TyCtxt<'tcx> {\n         let mut const_map = FxHashMap::default();\n \n         if !value.has_escaping_bound_vars() {\n-            (value.clone(), region_map)\n+            (value, region_map)\n         } else {\n             let mut real_fld_r = |br| *region_map.entry(br).or_insert_with(|| fld_r(br));\n "}, {"sha": "33cd509cbb8df12b6f4deedb14cddf55942b3355", "filename": "compiler/rustc_trait_selection/src/traits/query/normalize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d26de689161cbb233b5643a80ebc6889b071f5c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d26de689161cbb233b5643a80ebc6889b071f5c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs?ref=4d26de689161cbb233b5643a80ebc6889b071f5c", "patch": "@@ -49,7 +49,7 @@ impl<'cx, 'tcx> AtExt<'tcx> for At<'cx, 'tcx> {\n             self.param_env,\n         );\n         if !value.has_projections() {\n-            return Ok(Normalized { value: value.clone(), obligations: vec![] });\n+            return Ok(Normalized { value, obligations: vec![] });\n         }\n \n         let mut normalizer = QueryNormalizer {"}]}