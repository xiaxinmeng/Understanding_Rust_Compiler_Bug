{"sha": "0a3a2eebfc4ecac7d43af86679ffc36eff83988c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhM2EyZWViZmM0ZWNhYzdkNDNhZjg2Njc5ZmZjMzZlZmY4Mzk4OGM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-29T22:43:33Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-29T22:43:33Z"}, "message": "Long lines", "tree": {"sha": "4b51d8364ac91fd2e0df09e7e9e20d3abf848b17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b51d8364ac91fd2e0df09e7e9e20d3abf848b17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a3a2eebfc4ecac7d43af86679ffc36eff83988c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a3a2eebfc4ecac7d43af86679ffc36eff83988c", "html_url": "https://github.com/rust-lang/rust/commit/0a3a2eebfc4ecac7d43af86679ffc36eff83988c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a3a2eebfc4ecac7d43af86679ffc36eff83988c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f459acc45d97bb139a9694cf1f8f4fea0e9844f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f459acc45d97bb139a9694cf1f8f4fea0e9844f9", "html_url": "https://github.com/rust-lang/rust/commit/f459acc45d97bb139a9694cf1f8f4fea0e9844f9"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "c9ebf55b57cf48115e709d12a7cfc61d64cdedd6", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0a3a2eebfc4ecac7d43af86679ffc36eff83988c/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a3a2eebfc4ecac7d43af86679ffc36eff83988c/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=0a3a2eebfc4ecac7d43af86679ffc36eff83988c", "patch": "@@ -141,16 +141,16 @@ enum Namespace {\n     ValueNS\n }\n \n-/// A NamespaceResult represents the result of resolving an import in a\n-/// particular namespace. The result is either definitely-resolved, definitely-\n-/// unresolved, or unknown.\n+/// A NamespaceResult represents the result of resolving an import in\n+/// a particular namespace. The result is either definitely-resolved,\n+/// definitely- unresolved, or unknown.\n enum NamespaceResult {\n     /// Means that resolve hasn't gathered enough information yet to determine\n     /// whether the name is bound in this namespace. (That is, it hasn't\n     /// resolved all `use` directives yet.)\n     UnknownResult,\n-    /// Means that resolve has determined that the name is definitely not bound in\n-    /// the namespace.\n+    /// Means that resolve has determined that the name is definitely\n+    /// not bound in the namespace.\n     UnboundResult,\n     /// Means that resolve has determined that the name is bound in the Module\n     /// argument, and specified by the NameBindings argument.\n@@ -1205,7 +1205,8 @@ impl Resolver {\n                     self.build_reduced_graph_for_variant(*variant,\n                         local_def(item.id),\n                         // inherited => privacy of the enum item\n-                        self.visibility_to_privacy(variant.node.vis, privacy == Public),\n+                        self.visibility_to_privacy(variant.node.vis,\n+                                                   privacy == Public),\n                         new_parent, visitor);\n                 }\n             }"}]}