{"sha": "714a5b7f5e960c885030fac4b357ec1304f539f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxNGE1YjdmNWU5NjBjODg1MDMwZmFjNGIzNTdlYzEzMDRmNTM5Zjk=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-04T14:51:37Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-05T22:22:15Z"}, "message": "remove TyClosure", "tree": {"sha": "350ba54b254f93ffb466f5a9e17d77389211ad2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/350ba54b254f93ffb466f5a9e17d77389211ad2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/714a5b7f5e960c885030fac4b357ec1304f539f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/714a5b7f5e960c885030fac4b357ec1304f539f9", "html_url": "https://github.com/rust-lang/rust/commit/714a5b7f5e960c885030fac4b357ec1304f539f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/714a5b7f5e960c885030fac4b357ec1304f539f9/comments", "author": null, "committer": null, "parents": [{"sha": "5f7f2c9a0592bc1627781767ec8228aaad3e5364", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f7f2c9a0592bc1627781767ec8228aaad3e5364", "html_url": "https://github.com/rust-lang/rust/commit/5f7f2c9a0592bc1627781767ec8228aaad3e5364"}], "stats": {"total": 104, "additions": 3, "deletions": 101}, "files": [{"sha": "68cb8ca39b492c323c833f5a1069daaa05cf05c0", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=714a5b7f5e960c885030fac4b357ec1304f539f9", "patch": "@@ -136,18 +136,6 @@ impl<'a, 'v> Visitor<'v> for LifetimeContext<'a> {\n \n     fn visit_ty(&mut self, ty: &ast::Ty) {\n         match ty.node {\n-            ast::TyClosure(ref c)  => {\n-                // Careful, the bounds on a closure/proc are *not* within its binder.\n-                visit::walk_ty_param_bounds_helper(self, &c.bounds);\n-                visit::walk_lifetime_decls_helper(self, &c.lifetimes);\n-                self.with(LateScope(&c.lifetimes, self.scope), |old_scope, this| {\n-                    this.check_lifetime_defs(old_scope, &c.lifetimes);\n-                    for argument in c.decl.inputs.iter() {\n-                        this.visit_ty(&*argument.ty)\n-                    }\n-                    visit::walk_fn_ret_ty(this, &c.decl.output);\n-                });\n-            }\n             ast::TyBareFn(ref c) => {\n                 visit::walk_lifetime_decls_helper(self, &c.lifetimes);\n                 self.with(LateScope(&c.lifetimes, self.scope), |old_scope, this| {"}, {"sha": "a2c86c3cdb7563a71a0e0905cd469c141ef67596", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=714a5b7f5e960c885030fac4b357ec1304f539f9", "patch": "@@ -71,7 +71,7 @@ use syntax::ast::{PatRange, PatStruct, Path};\n use syntax::ast::{PolyTraitRef, PrimTy, SelfExplicit};\n use syntax::ast::{RegionTyParamBound, StructField};\n use syntax::ast::{TraitRef, TraitTyParamBound};\n-use syntax::ast::{Ty, TyBool, TyChar, TyClosure, TyF32};\n+use syntax::ast::{Ty, TyBool, TyChar, TyF32};\n use syntax::ast::{TyF64, TyFloat, TyI, TyI8, TyI16, TyI32, TyI64, TyInt, TyObjectSum};\n use syntax::ast::{TyParam, TyParamBound, TyPath, TyPtr, TyPolyTraitRef, TyQPath};\n use syntax::ast::{TyRptr, TyStr, TyU, TyU8, TyU16, TyU32, TyU64, TyUint};\n@@ -3606,14 +3606,6 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                 self.resolve_trait_reference(ty.id, &*qpath.trait_ref, TraitQPath);\n             }\n \n-            TyClosure(ref c) => {\n-                self.resolve_type_parameter_bounds(\n-                    ty.id,\n-                    &c.bounds,\n-                    TraitBoundingTypeParameter);\n-                visit::walk_ty(self, ty);\n-            }\n-\n             TyPolyTraitRef(ref bounds) => {\n                 self.resolve_type_parameter_bounds(\n                     ty.id,"}, {"sha": "bde834c2ff899d4c4cf15f2f473049e11fc4faac", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=714a5b7f5e960c885030fac4b357ec1304f539f9", "patch": "@@ -1112,28 +1112,6 @@ pub fn ast_ty_to_ty<'tcx>(\n                 let bare_fn = ty_of_bare_fn(this, bf.unsafety, bf.abi, &*bf.decl);\n                 ty::mk_bare_fn(tcx, None, tcx.mk_bare_fn(bare_fn))\n             }\n-            ast::TyClosure(ref f) => {\n-                // Use corresponding trait store to figure out default bounds\n-                // if none were specified.\n-                let bounds = conv_existential_bounds(this,\n-                                                     rscope,\n-                                                     ast_ty.span,\n-                                                     None,\n-                                                     Vec::new(),\n-                                                     f.bounds.as_slice());\n-                let region_bound = bounds.region_bound;\n-                let fn_decl = ty_of_closure(this,\n-                                            f.unsafety,\n-                                            f.onceness,\n-                                            bounds,\n-                                            ty::RegionTraitStore(\n-                                                region_bound,\n-                                                ast::MutMutable),\n-                                            &*f.decl,\n-                                            abi::Rust,\n-                                            None);\n-                ty::mk_closure(tcx, fn_decl)\n-            }\n             ast::TyPolyTraitRef(ref bounds) => {\n                 conv_ty_poly_trait_ref(this, rscope, ast_ty.span, bounds[])\n             }"}, {"sha": "e01dbac68ee8d8ff6ae82a84c995519914a9fee9", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=714a5b7f5e960c885030fac4b357ec1304f539f9", "patch": "@@ -1366,7 +1366,6 @@ impl Clean<Type> for ast::Ty {\n                     }\n                 }\n             }\n-            TyClosure(ref c) => Closure(box c.clean(cx)),\n             TyBareFn(ref barefn) => BareFunction(box barefn.clean(cx)),\n             TyParen(ref ty) => ty.clean(cx),\n             TyQPath(ref qp) => qp.clean(cx),"}, {"sha": "e779821342a17dc76650d62d1794ba0da6762a82", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=714a5b7f5e960c885030fac4b357ec1304f539f9", "patch": "@@ -1220,8 +1220,6 @@ pub enum Ty_ {\n     TyPtr(MutTy),\n     /// A reference (`&'a T` or `&'a mut T`)\n     TyRptr(Option<Lifetime>, MutTy),\n-    /// A closure (e.g. `|uint| -> bool`)\n-    TyClosure(P<ClosureTy>),\n     /// A bare function (e.g. `fn(uint) -> bool`)\n     TyBareFn(P<BareFnTy>),\n     /// A tuple (`(A, B, C, D,...)`)"}, {"sha": "cf09e2777f7c69a0410d7e33275e42e1c37e5d11", "filename": "src/libsyntax/ast_map/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibsyntax%2Fast_map%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibsyntax%2Fast_map%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_map%2Fmod.rs?ref=714a5b7f5e960c885030fac4b357ec1304f539f9", "patch": "@@ -859,9 +859,6 @@ impl<'ast> Visitor<'ast> for NodeCollector<'ast> {\n \n     fn visit_ty(&mut self, ty: &'ast Ty) {\n         match ty.node {\n-            TyClosure(ref fd) => {\n-                self.visit_fn_decl(&*fd.decl);\n-            }\n             TyBareFn(ref fd) => {\n                 self.visit_fn_decl(&*fd.decl);\n             }"}, {"sha": "cb6277069e1a2b4ccbf3078c7ee23c04eed185df", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=714a5b7f5e960c885030fac4b357ec1304f539f9", "patch": "@@ -364,12 +364,6 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n     }\n \n     fn visit_ty(&mut self, t: &ast::Ty) {\n-        if let ast::TyClosure(ref closure) =  t.node {\n-            // this used to be blocked by a feature gate, but it should just\n-            // be plain impossible right now\n-            assert!(closure.onceness != ast::Once);\n-        }\n-\n         visit::walk_ty(self, t);\n     }\n "}, {"sha": "396b0033b815fcc58dc9c837bf6e5415d302d8c7", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=714a5b7f5e960c885030fac4b357ec1304f539f9", "patch": "@@ -414,17 +414,6 @@ pub fn noop_fold_ty<T: Folder>(t: P<Ty>, fld: &mut T) -> P<Ty> {\n             TyRptr(region, mt) => {\n                 TyRptr(fld.fold_opt_lifetime(region), fld.fold_mt(mt))\n             }\n-            TyClosure(f) => {\n-                TyClosure(f.map(|ClosureTy {unsafety, onceness, bounds, decl, lifetimes}| {\n-                    ClosureTy {\n-                        unsafety: unsafety,\n-                        onceness: onceness,\n-                        bounds: fld.fold_bounds(bounds),\n-                        decl: fld.fold_fn_decl(decl),\n-                        lifetimes: fld.fold_lifetime_defs(lifetimes)\n-                    }\n-                }))\n-            }\n             TyBareFn(f) => {\n                 TyBareFn(f.map(|BareFnTy {lifetimes, unsafety, abi, decl}| BareFnTy {\n                     lifetimes: fld.fold_lifetime_defs(lifetimes),"}, {"sha": "9bc91a95841a5592e0ca9bbfbba0c464d2a77128", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=714a5b7f5e960c885030fac4b357ec1304f539f9", "patch": "@@ -55,7 +55,7 @@ use ast::{SelfExplicit, SelfRegion, SelfStatic, SelfValue};\n use ast::{Delimited, SequenceRepetition, TokenTree, TraitItem, TraitRef};\n use ast::{TtDelimited, TtSequence, TtToken};\n use ast::{TupleVariantKind, Ty, Ty_, TypeBinding};\n-use ast::{TypeField, TyFixedLengthVec, TyClosure, TyBareFn};\n+use ast::{TypeField, TyFixedLengthVec, TyBareFn};\n use ast::{TyTypeof, TyInfer, TypeMethod};\n use ast::{TyParam, TyParamBound, TyParen, TyPath, TyPolyTraitRef, TyPtr, TyQPath};\n use ast::{TyRptr, TyTup, TyU32, TyVec, UnUniq};\n@@ -1252,13 +1252,7 @@ impl<'a> Parser<'a> {\n             variadic: false\n         });\n \n-        TyClosure(P(ClosureTy {\n-            unsafety: unsafety,\n-            onceness: Many,\n-            bounds: bounds,\n-            decl: decl,\n-            lifetimes: lifetime_defs,\n-        }))\n+        panic!(\"stub\");\n     }\n \n     pub fn parse_unsafety(&mut self) -> Unsafety {"}, {"sha": "e44cc2257c24c990a1915baf26d08d5dd29c7f4b", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=714a5b7f5e960c885030fac4b357ec1304f539f9", "patch": "@@ -714,25 +714,6 @@ impl<'a> State<'a> {\n                                       Some(&generics),\n                                       None));\n             }\n-            ast::TyClosure(ref f) => {\n-                let generics = ast::Generics {\n-                    lifetimes: f.lifetimes.clone(),\n-                    ty_params: OwnedSlice::empty(),\n-                    where_clause: ast::WhereClause {\n-                        id: ast::DUMMY_NODE_ID,\n-                        predicates: Vec::new(),\n-                    },\n-                };\n-                try!(self.print_ty_fn(None,\n-                                      Some('&'),\n-                                      f.unsafety,\n-                                      f.onceness,\n-                                      &*f.decl,\n-                                      None,\n-                                      &f.bounds,\n-                                      Some(&generics),\n-                                      None));\n-            }\n             ast::TyPath(ref path, _) => {\n                 try!(self.print_path(path, false));\n             }"}, {"sha": "737f1b73b32907eba034eb585e9ae33e6c278288", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/714a5b7f5e960c885030fac4b357ec1304f539f9/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=714a5b7f5e960c885030fac4b357ec1304f539f9", "patch": "@@ -404,14 +404,6 @@ pub fn walk_ty<'v, V: Visitor<'v>>(visitor: &mut V, typ: &'v Ty) {\n                 visitor.visit_ty(&**tuple_element_type)\n             }\n         }\n-        TyClosure(ref function_declaration) => {\n-            for argument in function_declaration.decl.inputs.iter() {\n-                visitor.visit_ty(&*argument.ty)\n-            }\n-            walk_fn_ret_ty(visitor, &function_declaration.decl.output);\n-            walk_ty_param_bounds_helper(visitor, &function_declaration.bounds);\n-            walk_lifetime_decls_helper(visitor, &function_declaration.lifetimes);\n-        }\n         TyBareFn(ref function_declaration) => {\n             for argument in function_declaration.decl.inputs.iter() {\n                 visitor.visit_ty(&*argument.ty)"}]}