{"sha": "16033d1e58d134d3f3932bd3ba9726deef24f4b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MDMzZDFlNThkMTM0ZDNmMzkzMmJkM2JhOTcyNmRlZWYyNGY0YjE=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-08-01T23:09:38Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-08-02T01:44:36Z"}, "message": "Rename `OpaqueTyOrigin` variants", "tree": {"sha": "ddcb896c301710678c9d597d1c9439ba36e6d5f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddcb896c301710678c9d597d1c9439ba36e6d5f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16033d1e58d134d3f3932bd3ba9726deef24f4b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16033d1e58d134d3f3932bd3ba9726deef24f4b1", "html_url": "https://github.com/rust-lang/rust/commit/16033d1e58d134d3f3932bd3ba9726deef24f4b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16033d1e58d134d3f3932bd3ba9726deef24f4b1/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4fe5557963b8737d2d40e2517c5a90358691c03", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4fe5557963b8737d2d40e2517c5a90358691c03", "html_url": "https://github.com/rust-lang/rust/commit/b4fe5557963b8737d2d40e2517c5a90358691c03"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "20ec7b1f3868ff4a3f684c3d5d7488edd817c067", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16033d1e58d134d3f3932bd3ba9726deef24f4b1/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16033d1e58d134d3f3932bd3ba9726deef24f4b1/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=16033d1e58d134d3f3932bd3ba9726deef24f4b1", "patch": "@@ -1763,7 +1763,7 @@ impl<'a> LoweringContext<'a> {\n                 },\n                 bounds: hir_bounds,\n                 impl_trait_fn: fn_def_id,\n-                origin: hir::OpaqueTyOrigin::ReturnImplTrait,\n+                origin: hir::OpaqueTyOrigin::FnReturn,\n             };\n \n             trace!(\"exist ty from impl trait def-index: {:#?}\", opaque_ty_def_index);\n@@ -3451,7 +3451,7 @@ impl<'a> LoweringContext<'a> {\n                     bounds: self.lower_param_bounds(b,\n                         ImplTraitContext::OpaqueTy(None)),\n                     impl_trait_fn: None,\n-                    origin: hir::OpaqueTyOrigin::TraitAliasImplTrait,\n+                    origin: hir::OpaqueTyOrigin::TypeAlias,\n                 },\n             ),\n             ItemKind::Enum(ref enum_definition, ref generics) => {"}, {"sha": "d954484533ac6a85c6784d34acff67941ec1b144", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16033d1e58d134d3f3932bd3ba9726deef24f4b1/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16033d1e58d134d3f3932bd3ba9726deef24f4b1/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=16033d1e58d134d3f3932bd3ba9726deef24f4b1", "patch": "@@ -1933,9 +1933,9 @@ pub struct OpaqueTy {\n #[derive(Copy, Clone, RustcEncodable, RustcDecodable, Debug, HashStable)]\n pub enum OpaqueTyOrigin {\n     /// `type Foo = impl Trait;`\n-    TraitAliasImplTrait,\n+    TypeAlias,\n     /// `-> impl Trait`\n-    ReturnImplTrait,\n+    FnReturn,\n     /// `async fn`\n     AsyncFn,\n }"}, {"sha": "5c62f76e3bb31e5b1912cf62d59ff891ac4fe46f", "filename": "src/librustc/infer/opaque_types/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/16033d1e58d134d3f3932bd3ba9726deef24f4b1/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16033d1e58d134d3f3932bd3ba9726deef24f4b1/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs?ref=16033d1e58d134d3f3932bd3ba9726deef24f4b1", "patch": "@@ -495,8 +495,8 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             hir::OpaqueTyOrigin::AsyncFn => return false,\n \n             // Otherwise, generate the label we'll use in the error message.\n-            hir::OpaqueTyOrigin::TraitAliasImplTrait => \"impl Trait\",\n-            hir::OpaqueTyOrigin::ReturnImplTrait => \"impl Trait\",\n+            hir::OpaqueTyOrigin::TypeAlias => \"impl Trait\",\n+            hir::OpaqueTyOrigin::FnReturn => \"impl Trait\",\n         };\n         let msg = format!(\"ambiguous lifetime bound in `{}`\", context_name);\n         let mut err = self.tcx.sess.struct_span_err(span, &msg);\n@@ -1052,7 +1052,7 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n                                     origin,\n                                 ),\n                                 _ => {\n-                                    (def_scope_default(), hir::OpaqueTyOrigin::TraitAliasImplTrait)\n+                                    (def_scope_default(), hir::OpaqueTyOrigin::TypeAlias)\n                                 }\n                             },\n                             Some(Node::ImplItem(item)) => match item.node {\n@@ -1062,10 +1062,10 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n                                         self.parent_def_id,\n                                         opaque_hir_id,\n                                     ),\n-                                    hir::OpaqueTyOrigin::TraitAliasImplTrait,\n+                                    hir::OpaqueTyOrigin::TypeAlias,\n                                 ),\n                                 _ => {\n-                                    (def_scope_default(), hir::OpaqueTyOrigin::TraitAliasImplTrait)\n+                                    (def_scope_default(), hir::OpaqueTyOrigin::TypeAlias)\n                                 }\n                             },\n                             _ => bug!("}]}