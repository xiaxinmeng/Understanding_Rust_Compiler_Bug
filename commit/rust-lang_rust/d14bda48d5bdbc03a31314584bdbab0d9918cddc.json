{"sha": "d14bda48d5bdbc03a31314584bdbab0d9918cddc", "node_id": "C_kwDOAAsO6NoAKGQxNGJkYTQ4ZDViZGJjMDNhMzEzMTQ1ODRiZGJhYjBkOTkxOGNkZGM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-16T05:12:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-16T05:12:42Z"}, "message": "Rollup merge of #93969 - bjorn3:codegen_backend_dep_info, r=pnkfelix\n\nOnly add codegen backend to dep info if -Zbinary-dep-depinfo is used\n\nI am currently migrating the cg_clif build system from using a binary linked to the codegen backend as rustc replacement to passing `-Zcodegen-backend` instead. Without this PR this would force cargo to rebuild the sysroot on any change to the codegen backend even if I explicitly specify that I want it to be preserved, which would make development of cg_clif a lot slower. If you still want to have changes to the codegen backend invalidate the cargo build cache you can explicitly specify `-Zbinary-dep-depinfo`.\n\ncc ``@eddyb`` as the codegen backend was initially added to the depinfo for rust-gpu.", "tree": {"sha": "6102907f3bdfb8ecd5f9f42c371c6643145c9083", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6102907f3bdfb8ecd5f9f42c371c6643145c9083"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d14bda48d5bdbc03a31314584bdbab0d9918cddc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiWlBKCRBK7hj4Ov3rIwAAHD8IAHdEMhtFR9+T8pbbOaK+fjLV\nuOqe6ZgaTHnXslaSXilNxyzC84dHbjLiFuLuIb+vjc1it2XR/MQ46F/nPf2TBx9x\ncpKqcxzQksN7cvO7YggTEpcGKnpqKBEfvp6sPBo0LIJ9HgeLgJq8XPCfLR5cfYw4\nM1Qfvh2ZOT8LyDzBmptOwfHraf+XJLvq3Cki+2BQa3r6GT6m7OqnVl8c/ptBWEL4\nBYxYDtq6GWhjeYVXeJyUrnM0RHFUaE5mWKQstTr4jWyDUPkdPIsSPLpfYlLtooHZ\nBX6oWoTUF9JzSHXWmhLr75A6s9+CP4y4ZQ++bEieGO+eKnhTzecoKBdd/rE07qA=\n=JTA0\n-----END PGP SIGNATURE-----\n", "payload": "tree 6102907f3bdfb8ecd5f9f42c371c6643145c9083\nparent 27490eb4232ceebc4f5e1e11b529b55994cf0333\nparent 147e5da9e34b86cd213900748a9da12bceb33de2\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1650085962 +0200\ncommitter GitHub <noreply@github.com> 1650085962 +0200\n\nRollup merge of #93969 - bjorn3:codegen_backend_dep_info, r=pnkfelix\n\nOnly add codegen backend to dep info if -Zbinary-dep-depinfo is used\n\nI am currently migrating the cg_clif build system from using a binary linked to the codegen backend as rustc replacement to passing `-Zcodegen-backend` instead. Without this PR this would force cargo to rebuild the sysroot on any change to the codegen backend even if I explicitly specify that I want it to be preserved, which would make development of cg_clif a lot slower. If you still want to have changes to the codegen backend invalidate the cargo build cache you can explicitly specify `-Zbinary-dep-depinfo`.\n\ncc ``@eddyb`` as the codegen backend was initially added to the depinfo for rust-gpu.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d14bda48d5bdbc03a31314584bdbab0d9918cddc", "html_url": "https://github.com/rust-lang/rust/commit/d14bda48d5bdbc03a31314584bdbab0d9918cddc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d14bda48d5bdbc03a31314584bdbab0d9918cddc/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27490eb4232ceebc4f5e1e11b529b55994cf0333", "url": "https://api.github.com/repos/rust-lang/rust/commits/27490eb4232ceebc4f5e1e11b529b55994cf0333", "html_url": "https://github.com/rust-lang/rust/commit/27490eb4232ceebc4f5e1e11b529b55994cf0333"}, {"sha": "147e5da9e34b86cd213900748a9da12bceb33de2", "url": "https://api.github.com/repos/rust-lang/rust/commits/147e5da9e34b86cd213900748a9da12bceb33de2", "html_url": "https://github.com/rust-lang/rust/commit/147e5da9e34b86cd213900748a9da12bceb33de2"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "08987dff660a4d78391280df384aa6a6430375f7", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d14bda48d5bdbc03a31314584bdbab0d9918cddc/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d14bda48d5bdbc03a31314584bdbab0d9918cddc/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=d14bda48d5bdbc03a31314584bdbab0d9918cddc", "patch": "@@ -629,11 +629,15 @@ fn write_out_deps(\n         });\n         files.extend(extra_tracked_files);\n \n-        if let Some(ref backend) = sess.opts.debugging_opts.codegen_backend {\n-            files.push(backend.to_string());\n-        }\n-\n         if sess.binary_dep_depinfo() {\n+            if let Some(ref backend) = sess.opts.debugging_opts.codegen_backend {\n+                if backend.contains('.') {\n+                    // If the backend name contain a `.`, it is the path to an external dynamic\n+                    // library. If not, it is not a path.\n+                    files.push(backend.to_string());\n+                }\n+            }\n+\n             boxed_resolver.borrow_mut().access(|resolver| {\n                 for cnum in resolver.cstore().crates_untracked() {\n                     let source = resolver.cstore().crate_source_untracked(cnum);"}, {"sha": "4cda243ffb5a3d255dcea63e345650b42d861f89", "filename": "src/test/run-make-fulldeps/hotplug_codegen_backend/Makefile", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d14bda48d5bdbc03a31314584bdbab0d9918cddc/src%2Ftest%2Frun-make-fulldeps%2Fhotplug_codegen_backend%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d14bda48d5bdbc03a31314584bdbab0d9918cddc/src%2Ftest%2Frun-make-fulldeps%2Fhotplug_codegen_backend%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fhotplug_codegen_backend%2FMakefile?ref=d14bda48d5bdbc03a31314584bdbab0d9918cddc", "patch": "@@ -2,10 +2,25 @@ include ../tools.mk\n \n # ignore-stage1\n \n+# This test both exists as a check that -Zcodegen-backend is capable of loading external codegen\n+# backends and that this external codegen backend is only included in the dep info if\n+# -Zbinary-dep-depinfo is used.\n+\n all:\n \t/bin/echo || exit 0 # This test requires /bin/echo to exist\n \t$(RUSTC) the_backend.rs --crate-name the_backend --crate-type dylib \\\n \t\t-o $(TMPDIR)/the_backend.dylib\n+\n+\t$(RUSTC) some_crate.rs --crate-name some_crate --crate-type lib -o $(TMPDIR)/some_crate \\\n+\t\t-Z codegen-backend=$(TMPDIR)/the_backend.dylib -Z unstable-options \\\n+\t\t--emit link,dep-info\n+\tgrep -x \"This has been \\\"compiled\\\" successfully.\" $(TMPDIR)/libsome_crate.rlib\n+\t# don't declare a dependency on the codegen backend if -Zbinary-dep-depinfo isn't used.\n+\tgrep -v \"the_backend.dylib\" $(TMPDIR)/some_crate.d\n+\t\n \t$(RUSTC) some_crate.rs --crate-name some_crate --crate-type lib -o $(TMPDIR)/some_crate \\\n-\t\t-Z codegen-backend=$(TMPDIR)/the_backend.dylib -Z unstable-options\n-\tgrep -x \"This has been \\\"compiled\\\" successfully.\" $(TMPDIR)/some_crate\n+\t\t-Z codegen-backend=$(TMPDIR)/the_backend.dylib -Z unstable-options \\\n+\t\t--emit link,dep-info -Zbinary-dep-depinfo\n+\tgrep -x \"This has been \\\"compiled\\\" successfully.\" $(TMPDIR)/libsome_crate.rlib\n+\t# but declare a dependency on the codegen backend if -Zbinary-dep-depinfo it used.\n+\tgrep \"the_backend.dylib\" $(TMPDIR)/some_crate.d"}]}