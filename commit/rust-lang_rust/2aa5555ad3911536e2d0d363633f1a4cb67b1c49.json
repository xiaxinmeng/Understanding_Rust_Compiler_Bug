{"sha": "2aa5555ad3911536e2d0d363633f1a4cb67b1c49", "node_id": "C_kwDOAAsO6NoAKDJhYTU1NTVhZDM5MTE1MzZlMmQwZDM2MzYzM2YxYTRjYjY3YjFjNDk", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-01-22T16:42:20Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-01-22T16:42:20Z"}, "message": "Fix #106496, suggest remove deref for type mismatch", "tree": {"sha": "6bca24333e6ec38e2575b8033bbba844a4c82738", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bca24333e6ec38e2575b8033bbba844a4c82738"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2aa5555ad3911536e2d0d363633f1a4cb67b1c49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2aa5555ad3911536e2d0d363633f1a4cb67b1c49", "html_url": "https://github.com/rust-lang/rust/commit/2aa5555ad3911536e2d0d363633f1a4cb67b1c49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2aa5555ad3911536e2d0d363633f1a4cb67b1c49/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04a41f889f563b2384c63c990b5423d201d62ebd", "url": "https://api.github.com/repos/rust-lang/rust/commits/04a41f889f563b2384c63c990b5423d201d62ebd", "html_url": "https://github.com/rust-lang/rust/commit/04a41f889f563b2384c63c990b5423d201d62ebd"}], "stats": {"total": 149, "additions": 144, "deletions": 5}, "files": [{"sha": "bd1626dff79515908687a64fd667223ab24ca127", "filename": "compiler/rustc_hir_typeck/src/demand.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2aa5555ad3911536e2d0d363633f1a4cb67b1c49/compiler%2Frustc_hir_typeck%2Fsrc%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aa5555ad3911536e2d0d363633f1a4cb67b1c49/compiler%2Frustc_hir_typeck%2Fsrc%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fdemand.rs?ref=2aa5555ad3911536e2d0d363633f1a4cb67b1c49", "patch": "@@ -1233,6 +1233,22 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             sugg_sp = receiver.span;\n                         }\n                     }\n+\n+                    if let hir::ExprKind::Unary(hir::UnOp::Deref, ref inner) = expr.kind\n+                        && let Some(1) = self.deref_steps(expected, checked_ty) {\n+                        // We have `*&T`, check if what was expected was `&T`.\n+                        // If so, we may want to suggest removing a `*`.\n+                        sugg_sp = sugg_sp.with_hi(inner.span.lo());\n+                        return Some((\n+                            sugg_sp,\n+                            \"consider removing deref here\".to_string(),\n+                            \"\".to_string(),\n+                            Applicability::MachineApplicable,\n+                            true,\n+                            false,\n+                        ));\n+                    }\n+\n                     if let Ok(src) = sm.span_to_snippet(sugg_sp) {\n                         let needs_parens = match expr.kind {\n                             // parenthesize if needed (Issue #46756)"}, {"sha": "3dea8bf7ac81db5f7dbc7c63c4a221f000f2e4bf", "filename": "tests/ui/generic-associated-types/issue-88360.fixed", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2aa5555ad3911536e2d0d363633f1a4cb67b1c49/tests%2Fui%2Fgeneric-associated-types%2Fissue-88360.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/2aa5555ad3911536e2d0d363633f1a4cb67b1c49/tests%2Fui%2Fgeneric-associated-types%2Fissue-88360.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fissue-88360.fixed?ref=2aa5555ad3911536e2d0d363633f1a4cb67b1c49", "patch": "@@ -0,0 +1,20 @@\n+// run-rustfix\n+\n+trait GatTrait {\n+    type Gat<'a> where Self: 'a;\n+\n+    fn test(&self) -> Self::Gat<'_>;\n+}\n+\n+trait SuperTrait<T>\n+where\n+    Self: 'static,\n+    for<'a> Self: GatTrait<Gat<'a> = &'a T>,\n+{\n+    fn copy(&self) -> Self::Gat<'_> where T: Copy {\n+        self.test()\n+        //~^ mismatched types\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "4d4c7ea318078ff3412312e010bfa0872e0488ca", "filename": "tests/ui/generic-associated-types/issue-88360.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2aa5555ad3911536e2d0d363633f1a4cb67b1c49/tests%2Fui%2Fgeneric-associated-types%2Fissue-88360.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aa5555ad3911536e2d0d363633f1a4cb67b1c49/tests%2Fui%2Fgeneric-associated-types%2Fissue-88360.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fissue-88360.rs?ref=2aa5555ad3911536e2d0d363633f1a4cb67b1c49", "patch": "@@ -1,3 +1,5 @@\n+// run-rustfix\n+\n trait GatTrait {\n     type Gat<'a> where Self: 'a;\n "}, {"sha": "520aeff1894835c966b31a3fb1ad01c7ac399442", "filename": "tests/ui/generic-associated-types/issue-88360.stderr", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2aa5555ad3911536e2d0d363633f1a4cb67b1c49/tests%2Fui%2Fgeneric-associated-types%2Fissue-88360.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2aa5555ad3911536e2d0d363633f1a4cb67b1c49/tests%2Fui%2Fgeneric-associated-types%2Fissue-88360.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fissue-88360.stderr?ref=2aa5555ad3911536e2d0d363633f1a4cb67b1c49", "patch": "@@ -1,19 +1,21 @@\n error[E0308]: mismatched types\n-  --> $DIR/issue-88360.rs:13:9\n+  --> $DIR/issue-88360.rs:15:9\n    |\n LL | trait SuperTrait<T>\n    |                  - this type parameter\n ...\n LL |     fn copy(&self) -> Self::Gat<'_> where T: Copy {\n    |                       ------------- expected `&T` because of return type\n LL |         *self.test()\n-   |         ^^^^^^^^^^^^\n-   |         |\n-   |         expected `&T`, found type parameter `T`\n-   |         help: consider borrowing here: `&*self.test()`\n+   |         ^^^^^^^^^^^^ expected `&T`, found type parameter `T`\n    |\n    = note:   expected reference `&T`\n            found type parameter `T`\n+help: consider removing deref here\n+   |\n+LL -         *self.test()\n+LL +         self.test()\n+   |\n \n error: aborting due to previous error\n "}, {"sha": "4dc12da03dd023535d701946b98f57e84036b838", "filename": "tests/ui/suggestions/suggest-remove-deref.fixed", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2aa5555ad3911536e2d0d363633f1a4cb67b1c49/tests%2Fui%2Fsuggestions%2Fsuggest-remove-deref.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/2aa5555ad3911536e2d0d363633f1a4cb67b1c49/tests%2Fui%2Fsuggestions%2Fsuggest-remove-deref.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fsuggest-remove-deref.fixed?ref=2aa5555ad3911536e2d0d363633f1a4cb67b1c49", "patch": "@@ -0,0 +1,28 @@\n+// run-rustfix\n+\n+//issue #106496\n+\n+struct S;\n+\n+trait X {}\n+impl X for S {}\n+\n+fn foo<T: X>(_: &T) {}\n+fn test_foo() {\n+    let hello = &S;\n+    foo(hello);\n+    //~^ ERROR mismatched types\n+}\n+\n+fn bar(_: &String) {}\n+fn test_bar() {\n+    let v = String::from(\"hello\");\n+    let s = &v;\n+    bar(s);\n+    //~^ ERROR mismatched types\n+}\n+\n+fn main() {\n+    test_foo();\n+    test_bar();\n+}"}, {"sha": "c2d385cbdc378ac56bb09ce20b54d83936579cda", "filename": "tests/ui/suggestions/suggest-remove-deref.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2aa5555ad3911536e2d0d363633f1a4cb67b1c49/tests%2Fui%2Fsuggestions%2Fsuggest-remove-deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aa5555ad3911536e2d0d363633f1a4cb67b1c49/tests%2Fui%2Fsuggestions%2Fsuggest-remove-deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fsuggest-remove-deref.rs?ref=2aa5555ad3911536e2d0d363633f1a4cb67b1c49", "patch": "@@ -0,0 +1,28 @@\n+// run-rustfix\n+\n+//issue #106496\n+\n+struct S;\n+\n+trait X {}\n+impl X for S {}\n+\n+fn foo<T: X>(_: &T) {}\n+fn test_foo() {\n+    let hello = &S;\n+    foo(*hello);\n+    //~^ ERROR mismatched types\n+}\n+\n+fn bar(_: &String) {}\n+fn test_bar() {\n+    let v = String::from(\"hello\");\n+    let s = &v;\n+    bar(*s);\n+    //~^ ERROR mismatched types\n+}\n+\n+fn main() {\n+    test_foo();\n+    test_bar();\n+}"}, {"sha": "f5d810e36f035935913a11faea3c8669b493b166", "filename": "tests/ui/suggestions/suggest-remove-deref.stderr", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/2aa5555ad3911536e2d0d363633f1a4cb67b1c49/tests%2Fui%2Fsuggestions%2Fsuggest-remove-deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2aa5555ad3911536e2d0d363633f1a4cb67b1c49/tests%2Fui%2Fsuggestions%2Fsuggest-remove-deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fsuggest-remove-deref.stderr?ref=2aa5555ad3911536e2d0d363633f1a4cb67b1c49", "patch": "@@ -0,0 +1,43 @@\n+error[E0308]: mismatched types\n+  --> $DIR/suggest-remove-deref.rs:13:9\n+   |\n+LL |     foo(*hello);\n+   |     --- ^^^^^^ expected reference, found struct `S`\n+   |     |\n+   |     arguments to this function are incorrect\n+   |\n+   = note: expected reference `&_`\n+                 found struct `S`\n+note: function defined here\n+  --> $DIR/suggest-remove-deref.rs:10:4\n+   |\n+LL | fn foo<T: X>(_: &T) {}\n+   |    ^^^       -----\n+help: consider removing deref here\n+   |\n+LL -     foo(*hello);\n+LL +     foo(hello);\n+   |\n+\n+error[E0308]: mismatched types\n+  --> $DIR/suggest-remove-deref.rs:21:9\n+   |\n+LL |     bar(*s);\n+   |     --- ^^ expected `&String`, found struct `String`\n+   |     |\n+   |     arguments to this function are incorrect\n+   |\n+note: function defined here\n+  --> $DIR/suggest-remove-deref.rs:17:4\n+   |\n+LL | fn bar(_: &String) {}\n+   |    ^^^ ----------\n+help: consider removing deref here\n+   |\n+LL -     bar(*s);\n+LL +     bar(s);\n+   |\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}