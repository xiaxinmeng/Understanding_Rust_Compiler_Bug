{"sha": "62caad2c1addd49c350bad98e67f525a5cc82469", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyY2FhZDJjMWFkZGQ0OWMzNTBiYWQ5OGU2N2Y1MjVhNWNjODI0Njk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-03T03:11:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-03T03:11:27Z"}, "message": "auto merge of #12003 : bnoordhuis/rust/sizeof-epoll-event-fixup, r=brson\n\nMake the definition of epoll_event use natural alignment on all\r\narchitectures except x86_64.\r\n\r\nBefore this commit, the struct was always 12 bytes big, which works okay\r\non x86 and x86_64 but not on ARM and MIPS, where it should be 16 bytes\r\nbig with the `data` field aligned on an 8 byte boundary.", "tree": {"sha": "6af9dd0bf33366eedfcc3ad93aa56815f7c32eb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6af9dd0bf33366eedfcc3ad93aa56815f7c32eb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62caad2c1addd49c350bad98e67f525a5cc82469", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62caad2c1addd49c350bad98e67f525a5cc82469", "html_url": "https://github.com/rust-lang/rust/commit/62caad2c1addd49c350bad98e67f525a5cc82469", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62caad2c1addd49c350bad98e67f525a5cc82469/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7db6bca7aaa26686b70eefe49d40948010cffda4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7db6bca7aaa26686b70eefe49d40948010cffda4", "html_url": "https://github.com/rust-lang/rust/commit/7db6bca7aaa26686b70eefe49d40948010cffda4"}, {"sha": "6121acf97d94193a653acce7d9baf81c59d20eab", "url": "https://api.github.com/repos/rust-lang/rust/commits/6121acf97d94193a653acce7d9baf81c59d20eab", "html_url": "https://github.com/rust-lang/rust/commit/6121acf97d94193a653acce7d9baf81c59d20eab"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "ca20314997e8c7c180ebfad8f3b5dcece3db1872", "filename": "src/libnative/io/timer_timerfd.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/62caad2c1addd49c350bad98e67f525a5cc82469/src%2Flibnative%2Fio%2Ftimer_timerfd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62caad2c1addd49c350bad98e67f525a5cc82469/src%2Flibnative%2Fio%2Ftimer_timerfd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ftimer_timerfd.rs?ref=62caad2c1addd49c350bad98e67f525a5cc82469", "patch": "@@ -59,17 +59,15 @@ fn helper(input: libc::c_int, messages: Port<Req>) {\n     fn add(efd: libc::c_int, fd: libc::c_int) {\n         let event = imp::epoll_event {\n             events: imp::EPOLLIN as u32,\n-            data: imp::epoll_data_t { fd: fd, pad: 0, }\n+            data: fd as i64,\n         };\n         let ret = unsafe {\n             imp::epoll_ctl(efd, imp::EPOLL_CTL_ADD, fd, &event)\n         };\n         assert_eq!(ret, 0);\n     }\n     fn del(efd: libc::c_int, fd: libc::c_int) {\n-        let event = imp::epoll_event {\n-            events: 0, data: imp::epoll_data_t { fd: 0, pad: 0, }\n-        };\n+        let event = imp::epoll_event { events: 0, data: 0 };\n         let ret = unsafe {\n             imp::epoll_ctl(efd, imp::EPOLL_CTL_DEL, fd, &event)\n         };\n@@ -93,7 +91,7 @@ fn helper(input: libc::c_int, messages: Port<Req>) {\n         let mut incoming = false;\n         debug!(\"{} events to process\", n);\n         for event in events.slice_to(n as uint).iter() {\n-            let fd = event.data.fd;\n+            let fd = event.data as libc::c_int;\n             debug!(\"data on fd {} (input = {})\", fd, input);\n             if fd == input {\n                 let mut buf = [0, ..1];\n@@ -261,14 +259,17 @@ mod imp {\n     pub static EPOLLHUP: libc::c_int = 0x010;\n     pub static EPOLLONESHOT: libc::c_int = 1 << 30;\n \n+    #[cfg(target_arch = \"x86_64\")]\n+    #[packed]\n     pub struct epoll_event {\n         events: u32,\n-        data: epoll_data_t,\n+        data: i64,\n     }\n \n-    pub struct epoll_data_t {\n-        fd: i32,\n-        pad: u32,\n+    #[cfg(not(target_arch = \"x86_64\"))]\n+    pub struct epoll_event {\n+        events: u32,\n+        data: i64,\n     }\n \n     pub struct timespec {"}]}