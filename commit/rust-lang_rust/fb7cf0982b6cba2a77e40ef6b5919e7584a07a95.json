{"sha": "fb7cf0982b6cba2a77e40ef6b5919e7584a07a95", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiN2NmMDk4MmI2Y2JhMmE3N2U0MGVmNmI1OTE5ZTc1ODRhMDdhOTU=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-04-01T22:07:16Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-04-02T17:50:06Z"}, "message": "Don't suggest dereferencing an `else if` expression", "tree": {"sha": "088e1f494e907a5c11fd4e0a1f3cde08525f9cdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/088e1f494e907a5c11fd4e0a1f3cde08525f9cdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb7cf0982b6cba2a77e40ef6b5919e7584a07a95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb7cf0982b6cba2a77e40ef6b5919e7584a07a95", "html_url": "https://github.com/rust-lang/rust/commit/fb7cf0982b6cba2a77e40ef6b5919e7584a07a95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb7cf0982b6cba2a77e40ef6b5919e7584a07a95/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08879449c645c224d3628bebb3e5b5a50a88cc3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/08879449c645c224d3628bebb3e5b5a50a88cc3f", "html_url": "https://github.com/rust-lang/rust/commit/08879449c645c224d3628bebb3e5b5a50a88cc3f"}], "stats": {"total": 34, "additions": 19, "deletions": 15}, "files": [{"sha": "d879b6e97dcfb884098a9915144e3167bd50c90b", "filename": "compiler/rustc_typeck/src/check/demand.rs", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fb7cf0982b6cba2a77e40ef6b5919e7584a07a95/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb7cf0982b6cba2a77e40ef6b5919e7584a07a95/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs?ref=fb7cf0982b6cba2a77e40ef6b5919e7584a07a95", "patch": "@@ -374,6 +374,21 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n     }\n \n+    /// Returns whether the given expression is an `else if`.\n+    crate fn is_else_if_block(&self, expr: &hir::Expr<'_>) -> bool {\n+        if let hir::ExprKind::If(..) = expr.kind {\n+            let parent_id = self.tcx.hir().get_parent_node(expr.hir_id);\n+            if let Some(Node::Expr(hir::Expr {\n+                kind: hir::ExprKind::If(_, _, Some(else_expr)),\n+                ..\n+            })) = self.tcx.hir().find(parent_id)\n+            {\n+                return else_expr.hir_id == expr.hir_id;\n+            }\n+        }\n+        false\n+    }\n+\n     /// This function is used to determine potential \"simple\" improvements or users' errors and\n     /// provide them useful help. For example:\n     ///\n@@ -660,12 +675,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 };\n                                 let suggestion = if is_struct_pat_shorthand_field {\n                                     format!(\"{}: *{}\", code, code)\n+                                } else if self.is_else_if_block(expr) {\n+                                    // Don't suggest nonsense like `else *if`\n+                                    return None;\n                                 } else if let Some(expr) = self.maybe_get_block_expr(expr.hir_id) {\n-                                    if let Ok(inner_code) = sm.span_to_snippet(expr.span) {\n-                                        format!(\"*{}\", inner_code)\n-                                    } else {\n-                                        format!(\"*{}\", code)\n-                                    }\n+                                    format!(\"*{}\", sm.span_to_snippet(expr.span).unwrap_or(code))\n                                 } else {\n                                     format!(\"*{}\", code)\n                                 };"}, {"sha": "632a279d79623b92d8bd87c3cc50c707e08991ea", "filename": "src/test/ui/deref-suggestion.stderr", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fb7cf0982b6cba2a77e40ef6b5919e7584a07a95/src%2Ftest%2Fui%2Fderef-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fb7cf0982b6cba2a77e40ef6b5919e7584a07a95/src%2Ftest%2Fui%2Fderef-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderef-suggestion.stderr?ref=fb7cf0982b6cba2a77e40ef6b5919e7584a07a95", "patch": "@@ -125,16 +125,6 @@ LL | ||     };\n    | ||_____|\n    | |______`if` and `else` have incompatible types\n    |        expected `i32`, found `&{integer}`\n-   |\n-help: consider dereferencing the borrow\n-   |\n-LL |     } else *if true {\n-LL |\n-LL |         b\n-LL |     } else {\n-LL |         &0\n-LL |     };\n-   |\n \n error: aborting due to 13 previous errors\n "}]}