{"sha": "31b6a750f8e37d011060a17ffd816d721d087844", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxYjZhNzUwZjhlMzdkMDExMDYwYTE3ZmZkODE2ZDcyMWQwODc4NDQ=", "commit": {"author": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-05-24T12:03:36Z"}, "committer": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-05-31T19:49:44Z"}, "message": "fix: panic on extra fields in a pattern", "tree": {"sha": "249bff6e47d0fdcd5ebc02e655c246b74e1f897e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/249bff6e47d0fdcd5ebc02e655c246b74e1f897e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31b6a750f8e37d011060a17ffd816d721d087844", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31b6a750f8e37d011060a17ffd816d721d087844", "html_url": "https://github.com/rust-lang/rust/commit/31b6a750f8e37d011060a17ffd816d721d087844", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31b6a750f8e37d011060a17ffd816d721d087844/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4899ac8c053ef782c25c87b12b54dbcbfdb5e0fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4899ac8c053ef782c25c87b12b54dbcbfdb5e0fb", "html_url": "https://github.com/rust-lang/rust/commit/4899ac8c053ef782c25c87b12b54dbcbfdb5e0fb"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "a9a99f57a249522e82e955a6b35d18f03119d817", "filename": "crates/hir_ty/src/diagnostics/match_check.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/31b6a750f8e37d011060a17ffd816d721d087844/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31b6a750f8e37d011060a17ffd816d721d087844/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs?ref=31b6a750f8e37d011060a17ffd816d721d087844", "patch": "@@ -25,6 +25,7 @@ pub(crate) enum PatternError {\n     Unimplemented,\n     UnresolvedVariant,\n     MissingField,\n+    ExtraFields,\n }\n \n #[derive(Clone, Debug, PartialEq)]\n@@ -182,6 +183,11 @@ impl<'a> PatCtxt<'a> {\n         expected_len: usize,\n         ellipsis: Option<usize>,\n     ) -> Vec<FieldPat> {\n+        if pats.len() > expected_len {\n+            self.errors.push(PatternError::ExtraFields);\n+            return Vec::new();\n+        }\n+\n         pats.iter()\n             .enumerate_and_adjust(expected_len, ellipsis)\n             .map(|(i, &subpattern)| FieldPat {\n@@ -702,6 +708,25 @@ fn main() {\n         );\n     }\n \n+    #[test]\n+    fn malformed_match_arm_extra_fields() {\n+        check_diagnostics(\n+            r#\"\n+enum A { B(isize, isize), C }\n+fn main() {\n+    match A::B(1, 2) {\n+        A::B(_, _, _) => (),\n+    //  ^^^^^^^^^^^^^ Internal: match check bailed out\n+    }\n+    match A::B(1, 2) {\n+        A::C(_) => (),\n+    //  ^^^^^^^ Internal: match check bailed out\n+    }\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn expr_diverges() {\n         check_diagnostics("}]}