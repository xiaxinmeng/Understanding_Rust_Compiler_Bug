{"sha": "8ea53624c9a2c4aa6bd207dd25b8d2b19610c99f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlYTUzNjI0YzlhMmM0YWE2YmQyMDdkZDI1YjhkMmIxOTYxMGM5OWY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-06-30T23:26:20Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-07-01T18:19:31Z"}, "message": "Avoid ICE on type error recovery\n\nFix #86756", "tree": {"sha": "c3e14ff180fb21df6a58d718267def6e2ecc2bc0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3e14ff180fb21df6a58d718267def6e2ecc2bc0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ea53624c9a2c4aa6bd207dd25b8d2b19610c99f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ea53624c9a2c4aa6bd207dd25b8d2b19610c99f", "html_url": "https://github.com/rust-lang/rust/commit/8ea53624c9a2c4aa6bd207dd25b8d2b19610c99f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ea53624c9a2c4aa6bd207dd25b8d2b19610c99f/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cb1c1134050c059a15d9ca7a00d4dd89111a373", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cb1c1134050c059a15d9ca7a00d4dd89111a373", "html_url": "https://github.com/rust-lang/rust/commit/3cb1c1134050c059a15d9ca7a00d4dd89111a373"}], "stats": {"total": 70, "additions": 68, "deletions": 2}, "files": [{"sha": "e44a48cdf09c3a62b371b323209d66153f160b59", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8ea53624c9a2c4aa6bd207dd25b8d2b19610c99f/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ea53624c9a2c4aa6bd207dd25b8d2b19610c99f/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=8ea53624c9a2c4aa6bd207dd25b8d2b19610c99f", "patch": "@@ -21,7 +21,7 @@ use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_hir::intravisit::{walk_generics, Visitor as _};\n use rustc_hir::lang_items::LangItem;\n use rustc_hir::{Constness, GenericArg, GenericArgs};\n-use rustc_middle::ty::subst::{self, InternalSubsts, Subst, SubstsRef};\n+use rustc_middle::ty::subst::{self, GenericArgKind, InternalSubsts, Subst, SubstsRef};\n use rustc_middle::ty::GenericParamDefKind;\n use rustc_middle::ty::{self, Const, DefIdTree, Ty, TyCtxt, TypeFoldable};\n use rustc_session::lint::builtin::AMBIGUOUS_ASSOCIATED_ITEMS;\n@@ -488,12 +488,20 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                                 tcx.ty_error().into()\n                             } else {\n                                 // This is a default type parameter.\n+                                let substs = substs.unwrap();\n+                                if substs.iter().any(|arg| match arg.unpack() {\n+                                    GenericArgKind::Type(ty) => ty.references_error(),\n+                                    _ => false,\n+                                }) {\n+                                    // Avoid ICE #86756 when type error recovery goes awry.\n+                                    return tcx.ty_error().into();\n+                                }\n                                 self.astconv\n                                     .normalize_ty(\n                                         self.span,\n                                         tcx.at(self.span).type_of(param.def_id).subst_spanned(\n                                             tcx,\n-                                            substs.unwrap(),\n+                                            substs,\n                                             Some(self.span),\n                                         ),\n                                     )"}, {"sha": "7f864eb2850743a4005e10c46ca7bcb8c50a01b3", "filename": "src/test/ui/issues/issue-86756.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8ea53624c9a2c4aa6bd207dd25b8d2b19610c99f/src%2Ftest%2Fui%2Fissues%2Fissue-86756.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ea53624c9a2c4aa6bd207dd25b8d2b19610c99f/src%2Ftest%2Fui%2Fissues%2Fissue-86756.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-86756.rs?ref=8ea53624c9a2c4aa6bd207dd25b8d2b19610c99f", "patch": "@@ -0,0 +1,12 @@\n+trait Foo<T, T = T> {}\n+//~^ ERROR the name `T` is already used for a generic parameter in this item's generic parameters\n+\n+fn eq<A, B>() {\n+    eq::<dyn, Foo>\n+    //~^ ERROR cannot find type `dyn` in this scope\n+    //~| ERROR missing generics for trait `Foo`\n+    //~| WARN trait objects without an explicit `dyn` are deprecated\n+    //~| WARN this is accepted in the current edition\n+}\n+\n+fn main() {}"}, {"sha": "1ef219867266036d51b80bfdc8101a02e3c6e8ed", "filename": "src/test/ui/issues/issue-86756.stderr", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/8ea53624c9a2c4aa6bd207dd25b8d2b19610c99f/src%2Ftest%2Fui%2Fissues%2Fissue-86756.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8ea53624c9a2c4aa6bd207dd25b8d2b19610c99f/src%2Ftest%2Fui%2Fissues%2Fissue-86756.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-86756.stderr?ref=8ea53624c9a2c4aa6bd207dd25b8d2b19610c99f", "patch": "@@ -0,0 +1,46 @@\n+error[E0403]: the name `T` is already used for a generic parameter in this item's generic parameters\n+  --> $DIR/issue-86756.rs:1:14\n+   |\n+LL | trait Foo<T, T = T> {}\n+   |           -  ^ already used\n+   |           |\n+   |           first use of `T`\n+\n+error[E0412]: cannot find type `dyn` in this scope\n+  --> $DIR/issue-86756.rs:5:10\n+   |\n+LL | fn eq<A, B>() {\n+   |           - help: you might be missing a type parameter: `, dyn`\n+LL |     eq::<dyn, Foo>\n+   |          ^^^ not found in this scope\n+\n+warning: trait objects without an explicit `dyn` are deprecated\n+  --> $DIR/issue-86756.rs:5:15\n+   |\n+LL |     eq::<dyn, Foo>\n+   |               ^^^ help: use `dyn`: `dyn Foo`\n+   |\n+   = note: `#[warn(bare_trait_objects)]` on by default\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n+   = note: for more information, see issue #80165 <https://github.com/rust-lang/rust/issues/80165>\n+\n+error[E0107]: missing generics for trait `Foo`\n+  --> $DIR/issue-86756.rs:5:15\n+   |\n+LL |     eq::<dyn, Foo>\n+   |               ^^^ expected at least 1 generic argument\n+   |\n+note: trait defined here, with at least 1 generic parameter: `T`\n+  --> $DIR/issue-86756.rs:1:7\n+   |\n+LL | trait Foo<T, T = T> {}\n+   |       ^^^ -\n+help: add missing generic argument\n+   |\n+LL |     eq::<dyn, Foo<T>>\n+   |               ^^^^^^\n+\n+error: aborting due to 3 previous errors; 1 warning emitted\n+\n+Some errors have detailed explanations: E0107, E0403, E0412.\n+For more information about an error, try `rustc --explain E0107`."}]}