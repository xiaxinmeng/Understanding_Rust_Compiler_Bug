{"sha": "644c383f65324b5fe1ada42680923c2529accb26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0NGMzODNmNjUzMjRiNWZlMWFkYTQyNjgwOTIzYzI1MjlhY2NiMjY=", "commit": {"author": {"name": "Michal Terepeta", "email": "michal.terepeta@gmail.com", "date": "2020-01-29T19:55:35Z"}, "committer": {"name": "Michal Terepeta", "email": "michal.terepeta@gmail.com", "date": "2020-01-29T19:55:35Z"}, "message": "A couple of small improvements to ra_prof printing\n\nBased on suggestions from @matklad.\n\nSigned-off-by: Michal Terepeta <michal.terepeta@gmail.com>", "tree": {"sha": "9cd60268cc0b03db87c955043c805307d126ee50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cd60268cc0b03db87c955043c805307d126ee50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/644c383f65324b5fe1ada42680923c2529accb26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/644c383f65324b5fe1ada42680923c2529accb26", "html_url": "https://github.com/rust-lang/rust/commit/644c383f65324b5fe1ada42680923c2529accb26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/644c383f65324b5fe1ada42680923c2529accb26/comments", "author": {"login": "michalt", "id": 119711, "node_id": "MDQ6VXNlcjExOTcxMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/119711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michalt", "html_url": "https://github.com/michalt", "followers_url": "https://api.github.com/users/michalt/followers", "following_url": "https://api.github.com/users/michalt/following{/other_user}", "gists_url": "https://api.github.com/users/michalt/gists{/gist_id}", "starred_url": "https://api.github.com/users/michalt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michalt/subscriptions", "organizations_url": "https://api.github.com/users/michalt/orgs", "repos_url": "https://api.github.com/users/michalt/repos", "events_url": "https://api.github.com/users/michalt/events{/privacy}", "received_events_url": "https://api.github.com/users/michalt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michalt", "id": 119711, "node_id": "MDQ6VXNlcjExOTcxMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/119711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michalt", "html_url": "https://github.com/michalt", "followers_url": "https://api.github.com/users/michalt/followers", "following_url": "https://api.github.com/users/michalt/following{/other_user}", "gists_url": "https://api.github.com/users/michalt/gists{/gist_id}", "starred_url": "https://api.github.com/users/michalt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michalt/subscriptions", "organizations_url": "https://api.github.com/users/michalt/orgs", "repos_url": "https://api.github.com/users/michalt/repos", "events_url": "https://api.github.com/users/michalt/events{/privacy}", "received_events_url": "https://api.github.com/users/michalt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39cbb6b620244fcf921f45669ed40cc6ebdf6520", "url": "https://api.github.com/repos/rust-lang/rust/commits/39cbb6b620244fcf921f45669ed40cc6ebdf6520", "html_url": "https://github.com/rust-lang/rust/commit/39cbb6b620244fcf921f45669ed40cc6ebdf6520"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e2c32c130900d681b9b1a87e121580cdbb68cccd", "filename": "crates/ra_prof/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/644c383f65324b5fe1ada42680923c2529accb26/crates%2Fra_prof%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/644c383f65324b5fe1ada42680923c2529accb26/crates%2Fra_prof%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Flib.rs?ref=644c383f65324b5fe1ada42680923c2529accb26", "patch": "@@ -271,10 +271,10 @@ fn print_for_idx(\n /// In other words, a postorder of the call graph. In particular, the root is the last element of\n /// `msgs`.\n fn idx_to_children(msgs: &[Message]) -> Vec<Vec<usize>> {\n-    // Initialize with the index of the root; `ancestors` should be never empty.\n+    // Initialize with the index of the root; `msgs` and `ancestors` should be never empty.\n+    assert!(!msgs.is_empty());\n     let mut ancestors = vec![msgs.len() - 1];\n-    let mut result: Vec<Vec<usize>> = vec![];\n-    result.resize_with(msgs.len(), Default::default);\n+    let mut result: Vec<Vec<usize>> = vec![vec![]; msgs.len()];\n     for (idx, msg) in msgs[..msgs.len() - 1].iter().enumerate().rev() {\n         // We need to find the parent of the current message, i.e., the last ancestor that has a\n         // level lower than the current message."}]}