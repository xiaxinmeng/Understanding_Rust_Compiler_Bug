{"sha": "98847e4d5b77208a45869a93c56fec647e9f3bd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ODQ3ZTRkNWI3NzIwOGE0NTg2OWE5M2M1NmZlYzY0N2U5ZjNiZDI=", "commit": {"author": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-08-18T13:08:14Z"}, "committer": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-08-18T13:08:14Z"}, "message": "internal: use the new `edit_in_place::Indent` API", "tree": {"sha": "e00cb801a449e49509815338aff3e78fb917e287", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e00cb801a449e49509815338aff3e78fb917e287"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98847e4d5b77208a45869a93c56fec647e9f3bd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98847e4d5b77208a45869a93c56fec647e9f3bd2", "html_url": "https://github.com/rust-lang/rust/commit/98847e4d5b77208a45869a93c56fec647e9f3bd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98847e4d5b77208a45869a93c56fec647e9f3bd2/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6c4165182a8825a317604b549e6aa19bbf75680", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6c4165182a8825a317604b549e6aa19bbf75680", "html_url": "https://github.com/rust-lang/rust/commit/d6c4165182a8825a317604b549e6aa19bbf75680"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "5150cc9a6f144c4615ea3bae6e98d6bb4b8e357a", "filename": "crates/ide_assists/src/handlers/convert_iter_for_each_to_for.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/98847e4d5b77208a45869a93c56fec647e9f3bd2/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_iter_for_each_to_for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98847e4d5b77208a45869a93c56fec647e9f3bd2/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_iter_for_each_to_for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_iter_for_each_to_for.rs?ref=98847e4d5b77208a45869a93c56fec647e9f3bd2", "patch": "@@ -1,6 +1,6 @@\n use ide_db::helpers::FamousDefs;\n use syntax::{\n-    ast::{self, edit::AstNodeEdit, make, ArgListOwner},\n+    ast::{self, edit_in_place::Indent, make, ArgListOwner},\n     AstNode,\n };\n \n@@ -46,24 +46,25 @@ pub(crate) fn convert_iter_for_each_to_for(acc: &mut Assists, ctx: &AssistContex\n     let body = closure.body()?;\n \n     let stmt = method.syntax().parent().and_then(ast::ExprStmt::cast);\n-    let syntax = stmt.as_ref().map_or(method.syntax(), |stmt| stmt.syntax());\n+    let range = stmt.as_ref().map_or_else(|| method.syntax(), AstNode::syntax).text_range();\n \n     acc.add(\n         AssistId(\"convert_iter_for_each_to_for\", AssistKind::RefactorRewrite),\n         \"Replace this `Iterator::for_each` with a for loop\",\n-        syntax.text_range(),\n+        range,\n         |builder| {\n-            let indent = stmt.as_ref().map_or(method.indent_level(), |stmt| stmt.indent_level());\n+            let indent =\n+                stmt.as_ref().map_or_else(|| method.indent_level(), ast::ExprStmt::indent_level);\n \n             let block = match body {\n                 ast::Expr::BlockExpr(block) => block,\n                 _ => make::block_expr(Vec::new(), Some(body)),\n             }\n-            .reset_indent()\n-            .indent(indent);\n+            .clone_for_update();\n+            block.reset_indent().indent(indent);\n \n             let expr_for_loop = make::expr_for_loop(param, receiver, block);\n-            builder.replace(syntax.text_range(), expr_for_loop.syntax().text())\n+            builder.replace(range, expr_for_loop.to_string())\n         },\n     )\n }"}]}