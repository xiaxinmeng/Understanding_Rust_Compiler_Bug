{"sha": "423298dddd50d28ce891b10695417401226235a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMzI5OGRkZGQ1MGQyOGNlODkxYjEwNjk1NDE3NDAxMjI2MjM1YTM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-30T09:37:03Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-30T09:37:03Z"}, "message": "Trait for tree root", "tree": {"sha": "70148e481e13ce2bbc16fc6afeeb9966bd4bd221", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70148e481e13ce2bbc16fc6afeeb9966bd4bd221"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/423298dddd50d28ce891b10695417401226235a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/423298dddd50d28ce891b10695417401226235a3", "html_url": "https://github.com/rust-lang/rust/commit/423298dddd50d28ce891b10695417401226235a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/423298dddd50d28ce891b10695417401226235a3/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae849cf134f3ff21261e175d95ba994e86ffe81a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae849cf134f3ff21261e175d95ba994e86ffe81a", "html_url": "https://github.com/rust-lang/rust/commit/ae849cf134f3ff21261e175d95ba994e86ffe81a"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "c31b832d07e0de5b02a7ffcd1fbddaf23147fc44", "filename": "src/yellow/syntax.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/423298dddd50d28ce891b10695417401226235a3/src%2Fyellow%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/423298dddd50d28ce891b10695417401226235a3/src%2Fyellow%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fyellow%2Fsyntax.rs?ref=423298dddd50d28ce891b10695417401226235a3", "patch": "@@ -1,7 +1,8 @@\n use std::{\n     fmt,\n     sync::Arc,\n-    ptr\n+    ptr,\n+    ops::Deref,\n };\n \n use {\n@@ -10,8 +11,12 @@ use {\n     yellow::{RedNode, GreenNode},\n };\n \n+pub trait TreeRoot: Deref<Target=SyntaxRoot> + Clone {}\n+impl TreeRoot for Arc<SyntaxRoot> {}\n+impl<'a> TreeRoot for &'a SyntaxRoot {}\n+\n #[derive(Clone, Copy)]\n-pub struct SyntaxNode<ROOT: ::std::ops::Deref<Target=SyntaxRoot> + Clone = Arc<SyntaxRoot>> {\n+pub struct SyntaxNode<ROOT: TreeRoot = Arc<SyntaxRoot>> {\n     pub(crate) root: ROOT,\n     // guaranteed to be alive bc SyntaxRoot holds a strong ref\n     red: ptr::NonNull<RedNode>,\n@@ -48,7 +53,7 @@ impl SyntaxNode<Arc<SyntaxRoot>> {\n     }\n }\n \n-impl<ROOT: ::std::ops::Deref<Target=SyntaxRoot> + Clone> SyntaxNode<ROOT> {\n+impl<ROOT: TreeRoot> SyntaxNode<ROOT> {\n     pub fn borrow<'a>(&'a self) -> SyntaxNode<&'a SyntaxRoot> {\n         SyntaxNode {\n             root: &*self.root,\n@@ -90,7 +95,7 @@ impl<ROOT: ::std::ops::Deref<Target=SyntaxRoot> + Clone> SyntaxNode<ROOT> {\n     }\n }\n \n-impl<ROOT: ::std::ops::Deref<Target=SyntaxRoot> + Clone> fmt::Debug for SyntaxNode<ROOT> {\n+impl<ROOT: TreeRoot> fmt::Debug for SyntaxNode<ROOT> {\n     fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n         write!(fmt, \"{:?}@{:?}\", self.kind(), self.range())?;\n         if has_short_text(self.kind()) {"}]}