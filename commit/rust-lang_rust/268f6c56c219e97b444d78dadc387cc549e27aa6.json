{"sha": "268f6c56c219e97b444d78dadc387cc549e27aa6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2OGY2YzU2YzIxOWU5N2I0NDRkNzhkYWRjMzg3Y2M1NDllMjdhYTY=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-06-27T21:12:13Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-06-28T05:11:11Z"}, "message": "removed incomplete comment\n\nas written, I don't believe this comment was helpful; I think it's\nbetter just to steer the reader toward a general understanding of\nhygiene.", "tree": {"sha": "1f445fe5054ac1cb0c7f830654147f027607d0f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f445fe5054ac1cb0c7f830654147f027607d0f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/268f6c56c219e97b444d78dadc387cc549e27aa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/268f6c56c219e97b444d78dadc387cc549e27aa6", "html_url": "https://github.com/rust-lang/rust/commit/268f6c56c219e97b444d78dadc387cc549e27aa6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/268f6c56c219e97b444d78dadc387cc549e27aa6/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "351a5fd2b40c2be90f94fe2580903e93353b95ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/351a5fd2b40c2be90f94fe2580903e93353b95ee", "html_url": "https://github.com/rust-lang/rust/commit/351a5fd2b40c2be90f94fe2580903e93353b95ee"}], "stats": {"total": 17, "additions": 0, "deletions": 17}, "files": [{"sha": "a6e4b4cae1c9e9dacc806d8ce7ff44f58dc44169", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/268f6c56c219e97b444d78dadc387cc549e27aa6/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268f6c56c219e97b444d78dadc387cc549e27aa6/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=268f6c56c219e97b444d78dadc387cc549e27aa6", "patch": "@@ -391,23 +391,6 @@ fn fold_arg_<T: Folder>(a: &Arg, fld: &mut T) -> Arg {\n \n // build a new vector of tts by appling the Folder's fold_ident to\n // all of the identifiers in the token trees.\n-//\n-// This is part of hygiene magic. As far as hygiene is concerned, there\n-// are three types of let pattern bindings or loop labels:\n-//      - those defined and used in non-macro part of the program\n-//      - those used as part of macro invocation arguments\n-//      - those defined and used inside macro definitions\n-// Lexically, type 1 and 2 are in one group and type 3 the other. If they\n-// clash, in order for let and loop label to work hygienically, one group\n-// or the other needs to be renamed. The problem is that type 2 and 3 are\n-// parsed together (inside the macro expand function). After being parsed and\n-// AST being constructed, they can no longer be distinguished from each other.\n-//\n-// For that reason, type 2 let bindings and loop labels are actually renamed\n-// in the form of tokens instead of AST nodes, here. There are wasted effort\n-// since many token::IDENT are not necessary part of let bindings and most\n-// token::LIFETIME are certainly not loop labels. But we can't tell in their\n-// token form. So this is less ideal and hacky but it works.\n pub fn fold_tts<T: Folder>(tts: &[TokenTree], fld: &mut T) -> Vec<TokenTree> {\n     tts.iter().map(|tt| {\n         match *tt {"}]}