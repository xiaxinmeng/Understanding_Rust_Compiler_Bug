{"sha": "932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "node_id": "C_kwDOAAsO6NoAKDkzMmMxNzNjYTFiN2E3OWMxMDA1ZTJkNzJkZGZhNTA1YTdiZjJjZmE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-03T07:27:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-03T07:27:58Z"}, "message": "Auto merge of #109884 - matthiaskrgr:rollup-5wapig9, r=matthiaskrgr\n\nRollup of 7 pull requests\n\nSuccessful merges:\n\n - #109526 (LIBPATH is used as dylib's path environment variable on AIX)\n - #109642 (check for missing codegen backeng config)\n - #109722 (Implement read_buf for RustHermit)\n - #109856 (fix(middle): emit error rather than delay bug when reaching limit)\n - #109868 (Improve PR job names in Github Actions preview)\n - #109871 (Include invocation start times)\n - #109873 (Move some UI tests into subdirectories)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "2c44d95b514a02c51806d2e3f38e3fe29c9b07e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c44d95b514a02c51806d2e3f38e3fe29c9b07e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "html_url": "https://github.com/rust-lang/rust/commit/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0eed58a1e78eb1a25bb54076e4b0f7ea5ff7401", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0eed58a1e78eb1a25bb54076e4b0f7ea5ff7401", "html_url": "https://github.com/rust-lang/rust/commit/d0eed58a1e78eb1a25bb54076e4b0f7ea5ff7401"}, {"sha": "22df7107bdd36cf47e327c8165e720c1eccb351d", "url": "https://api.github.com/repos/rust-lang/rust/commits/22df7107bdd36cf47e327c8165e720c1eccb351d", "html_url": "https://github.com/rust-lang/rust/commit/22df7107bdd36cf47e327c8165e720c1eccb351d"}], "stats": {"total": 216, "additions": 119, "deletions": 97}, "files": [{"sha": "a917d9a7d55dda05a05257e8ebd66e210368258d", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "patch": "@@ -34,7 +34,7 @@ jobs:\n   pr:\n     permissions:\n       actions: write\n-    name: PR\n+    name: \"PR - ${{ matrix.name }}\"\n     env:\n       CI_JOB_NAME: \"${{ matrix.name }}\"\n       CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse\n@@ -159,7 +159,7 @@ jobs:\n   auto:\n     permissions:\n       actions: write\n-    name: auto\n+    name: \"auto - ${{ matrix.name }}\"\n     env:\n       CI_JOB_NAME: \"${{ matrix.name }}\"\n       CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse\n@@ -578,7 +578,7 @@ jobs:\n   try:\n     permissions:\n       actions: write\n-    name: try\n+    name: \"try - ${{ matrix.name }}\"\n     env:\n       CI_JOB_NAME: \"${{ matrix.name }}\"\n       CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse"}, {"sha": "bd9d89deee179d8614d8519f2d4ef56fc118702a", "filename": "compiler/rustc_middle/messages.ftl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/compiler%2Frustc_middle%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/compiler%2Frustc_middle%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fmessages.ftl?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "patch": "@@ -16,6 +16,10 @@ middle_limit_invalid =\n     `limit` must be a non-negative integer\n     .label = {$error_str}\n \n+middle_recursion_limit_reached =\n+    reached the recursion limit finding the struct tail for `{$ty}`\n+    .help = consider increasing the recursion limit by adding a `#![recursion_limit = \"{$suggested_limit}\"]`\n+\n middle_const_eval_non_int =\n     constant evaluation of enum discriminant resulted in non-integer\n "}, {"sha": "dc4aa18640fb3acaf91c2527dc82bf0e95074dd9", "filename": "compiler/rustc_middle/src/error.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/compiler%2Frustc_middle%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/compiler%2Frustc_middle%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ferror.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "patch": "@@ -49,6 +49,14 @@ pub struct LimitInvalid<'a> {\n     pub error_str: &'a str,\n }\n \n+#[derive(Diagnostic)]\n+#[diag(middle_recursion_limit_reached)]\n+#[help]\n+pub struct RecursionLimitReached<'tcx> {\n+    pub ty: Ty<'tcx>,\n+    pub suggested_limit: rustc_session::Limit,\n+}\n+\n #[derive(Diagnostic)]\n #[diag(middle_const_eval_non_int)]\n pub struct ConstEvalNonIntError {"}, {"sha": "4411bcd927d7198b8f3cb098f45dace9ccb932ff", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "patch": "@@ -19,7 +19,8 @@ use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_index::bit_set::GrowableBitSet;\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_macros::HashStable;\n-use rustc_span::{sym, DUMMY_SP};\n+use rustc_session::Limit;\n+use rustc_span::sym;\n use rustc_target::abi::{Integer, IntegerType, Size, TargetDataLayout};\n use rustc_target::spec::abi::Abi;\n use smallvec::SmallVec;\n@@ -225,10 +226,13 @@ impl<'tcx> TyCtxt<'tcx> {\n         let recursion_limit = self.recursion_limit();\n         for iteration in 0.. {\n             if !recursion_limit.value_within_limit(iteration) {\n-                return self.ty_error_with_message(\n-                    DUMMY_SP,\n-                    &format!(\"reached the recursion limit finding the struct tail for {}\", ty),\n-                );\n+                let suggested_limit = match recursion_limit {\n+                    Limit(0) => Limit(2),\n+                    limit => limit * 2,\n+                };\n+                let reported =\n+                    self.sess.emit_err(crate::error::RecursionLimitReached { ty, suggested_limit });\n+                return self.ty_error(reported);\n             }\n             match *ty.kind() {\n                 ty::Adt(def, substs) => {"}, {"sha": "d6f64a29719023ec2602f0d84650957ab37ab53c", "filename": "library/std/src/sys/hermit/net.rs", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fnet.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "patch": "@@ -1,7 +1,7 @@\n #![allow(dead_code)]\n \n use crate::cmp;\n-use crate::io::{self, IoSlice, IoSliceMut};\n+use crate::io::{self, BorrowedBuf, BorrowedCursor, IoSlice, IoSliceMut};\n use crate::mem;\n use crate::net::{Shutdown, SocketAddr};\n use crate::os::hermit::io::{AsFd, AsRawFd, BorrowedFd, FromRawFd, RawFd};\n@@ -146,18 +146,35 @@ impl Socket {\n         Ok(Socket(unsafe { FileDesc::from_raw_fd(fd) }))\n     }\n \n-    fn recv_with_flags(&self, buf: &mut [u8], flags: i32) -> io::Result<usize> {\n-        let ret =\n-            cvt(unsafe { netc::recv(self.0.as_raw_fd(), buf.as_mut_ptr(), buf.len(), flags) })?;\n-        Ok(ret as usize)\n+    fn recv_with_flags(&self, mut buf: BorrowedCursor<'_>, flags: i32) -> io::Result<()> {\n+        let ret = cvt(unsafe {\n+            netc::recv(\n+                self.0.as_raw_fd(),\n+                buf.as_mut().as_mut_ptr() as *mut u8,\n+                buf.capacity(),\n+                flags,\n+            )\n+        })?;\n+        unsafe {\n+            buf.advance(ret as usize);\n+        }\n+        Ok(())\n     }\n \n     pub fn read(&self, buf: &mut [u8]) -> io::Result<usize> {\n-        self.recv_with_flags(buf, 0)\n+        let mut buf = BorrowedBuf::from(buf);\n+        self.recv_with_flags(buf.unfilled(), 0)?;\n+        Ok(buf.len())\n     }\n \n     pub fn peek(&self, buf: &mut [u8]) -> io::Result<usize> {\n-        self.recv_with_flags(buf, netc::MSG_PEEK)\n+        let mut buf = BorrowedBuf::from(buf);\n+        self.recv_with_flags(buf.unfilled(), netc::MSG_PEEK)?;\n+        Ok(buf.len())\n+    }\n+\n+    pub fn read_buf(&self, buf: BorrowedCursor<'_>) -> io::Result<()> {\n+        self.recv_with_flags(buf, 0)\n     }\n \n     pub fn read_vectored(&self, bufs: &mut [IoSliceMut<'_>]) -> io::Result<usize> {"}, {"sha": "d12781cc33af05fba9289088a08d19dd3d380aff", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "patch": "@@ -741,6 +741,9 @@ def build_bootstrap(self, color, verbose_count):\n         env[\"LIBRARY_PATH\"] = os.path.join(self.bin_root(), \"lib\") + \\\n             (os.pathsep + env[\"LIBRARY_PATH\"]) \\\n             if \"LIBRARY_PATH\" in env else \"\"\n+        env[\"LIBPATH\"] = os.path.join(self.bin_root(), \"lib\") + \\\n+            (os.pathsep + env[\"LIBPATH\"]) \\\n+            if \"LIBPATH\" in env else \"\"\n \n         # Export Stage0 snapshot compiler related env variables\n         build_section = \"target.{}\".format(self.build)"}, {"sha": "e3581943f2ca2862c7452196485e894ff0ba7555", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "patch": "@@ -20,7 +20,7 @@ use serde_derive::Deserialize;\n \n use crate::builder::crate_description;\n use crate::builder::Cargo;\n-use crate::builder::{Builder, Kind, RunConfig, ShouldRun, Step};\n+use crate::builder::{Builder, Kind, PathSet, RunConfig, ShouldRun, Step, TaskPath};\n use crate::cache::{Interned, INTERNER};\n use crate::config::{LlvmLibunwind, RustcLto, TargetSelection};\n use crate::dist;\n@@ -995,6 +995,44 @@ pub struct CodegenBackend {\n     pub backend: Interned<String>,\n }\n \n+fn needs_codegen_config(run: &RunConfig<'_>) -> bool {\n+    let mut needs_codegen_cfg = false;\n+    for path_set in &run.paths {\n+        needs_codegen_cfg = match path_set {\n+            PathSet::Set(set) => set.iter().any(|p| is_codegen_cfg_needed(p, run)),\n+            PathSet::Suite(suite) => is_codegen_cfg_needed(&suite, run),\n+        }\n+    }\n+    needs_codegen_cfg\n+}\n+\n+const CODEGEN_BACKEND_PREFIX: &str = \"rustc_codegen_\";\n+\n+fn is_codegen_cfg_needed(path: &TaskPath, run: &RunConfig<'_>) -> bool {\n+    if path.path.to_str().unwrap().contains(&CODEGEN_BACKEND_PREFIX) {\n+        let mut needs_codegen_backend_config = true;\n+        for &backend in &run.builder.config.rust_codegen_backends {\n+            if path\n+                .path\n+                .to_str()\n+                .unwrap()\n+                .ends_with(&(CODEGEN_BACKEND_PREFIX.to_owned() + &backend))\n+            {\n+                needs_codegen_backend_config = false;\n+            }\n+        }\n+        if needs_codegen_backend_config {\n+            run.builder.info(\n+                \"Warning: no codegen-backends config matched the requested path to build a codegen backend. \\\n+                Help: add backend to codegen-backends in config.toml.\",\n+            );\n+            return true;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n impl Step for CodegenBackend {\n     type Output = ();\n     const ONLY_HOSTS: bool = true;\n@@ -1006,6 +1044,10 @@ impl Step for CodegenBackend {\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n+        if needs_codegen_config(&run) {\n+            return;\n+        }\n+\n         for &backend in &run.builder.config.rust_codegen_backends {\n             if backend == \"llvm\" {\n                 continue; // Already built as part of rustc"}, {"sha": "b14c0bed66c2c3f2a366188d8161367fcbad90d9", "filename": "src/bootstrap/dylib_util.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/src%2Fbootstrap%2Fdylib_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/src%2Fbootstrap%2Fdylib_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdylib_util.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "patch": "@@ -12,6 +12,8 @@ pub fn dylib_path_var() -> &'static str {\n         \"DYLD_LIBRARY_PATH\"\n     } else if cfg!(target_os = \"haiku\") {\n         \"LIBRARY_PATH\"\n+    } else if cfg!(target_os = \"aix\") {\n+        \"LIBPATH\"\n     } else {\n         \"LD_LIBRARY_PATH\"\n     }"}, {"sha": "82b123ec8a5e1aaed1cf928636aa283844b1ca0a", "filename": "src/bootstrap/metrics.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/src%2Fbootstrap%2Fmetrics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/src%2Fbootstrap%2Fmetrics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmetrics.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "patch": "@@ -11,7 +11,7 @@ use serde_derive::{Deserialize, Serialize};\n use std::cell::RefCell;\n use std::fs::File;\n use std::io::BufWriter;\n-use std::time::{Duration, Instant};\n+use std::time::{Duration, Instant, SystemTime};\n use sysinfo::{CpuExt, System, SystemExt};\n \n pub(crate) struct BuildMetrics {\n@@ -27,6 +27,7 @@ impl BuildMetrics {\n             system_info: System::new(),\n             timer_start: None,\n             invocation_timer_start: Instant::now(),\n+            invocation_start: SystemTime::now(),\n         });\n \n         BuildMetrics { state }\n@@ -124,6 +125,11 @@ impl BuildMetrics {\n             }\n         };\n         invocations.push(JsonInvocation {\n+            start_time: state\n+                .invocation_start\n+                .duration_since(SystemTime::UNIX_EPOCH)\n+                .unwrap()\n+                .as_secs(),\n             duration_including_children_sec: state.invocation_timer_start.elapsed().as_secs_f64(),\n             children: steps.into_iter().map(|step| self.prepare_json_step(step)).collect(),\n         });\n@@ -166,6 +172,7 @@ struct MetricsState {\n     system_info: System,\n     timer_start: Option<Instant>,\n     invocation_timer_start: Instant,\n+    invocation_start: SystemTime,\n }\n \n struct StepMetrics {\n@@ -194,6 +201,10 @@ struct JsonRoot {\n #[derive(Serialize, Deserialize)]\n #[serde(rename_all = \"snake_case\")]\n struct JsonInvocation {\n+    // Unix timestamp in seconds\n+    //\n+    // This is necessary to easily correlate this invocation with logs or other data.\n+    start_time: u64,\n     duration_including_children_sec: f64,\n     children: Vec<JsonNode>,\n }"}, {"sha": "403953b5047d9e709ae2c8401a6ae727e0984528", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "patch": "@@ -284,7 +284,7 @@ jobs:\n     permissions:\n       actions: write # for rust-lang/simpleinfra/github-actions/cancel-outdated-builds\n     <<: *base-ci-job\n-    name: PR\n+    name: PR - ${{ matrix.name }}\n     env:\n       <<: [*shared-ci-variables, *public-variables]\n     if: github.event_name == 'pull_request'\n@@ -312,7 +312,7 @@ jobs:\n     permissions:\n       actions: write # for rust-lang/simpleinfra/github-actions/cancel-outdated-builds\n     <<: *base-ci-job\n-    name: auto\n+    name: auto - ${{ matrix.name }}\n     env:\n       <<: [*shared-ci-variables, *prod-variables]\n     if: github.event_name == 'push' && github.ref == 'refs/heads/auto' && github.repository == 'rust-lang-ci/rust'\n@@ -741,7 +741,7 @@ jobs:\n     permissions:\n       actions: write # for rust-lang/simpleinfra/github-actions/cancel-outdated-builds\n     <<: *base-ci-job\n-    name: try\n+    name: try - ${{ matrix.name }}\n     env:\n       <<: [*shared-ci-variables, *prod-variables]\n     if: github.event_name == 'push' && (github.ref == 'refs/heads/try' || github.ref == 'refs/heads/try-perf') && github.repository == 'rust-lang-ci/rust'"}, {"sha": "748240cc94bc6577f5182fcc207eac15207e4668", "filename": "src/tools/compiletest/src/util.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "patch": "@@ -156,6 +156,8 @@ pub fn dylib_env_var() -> &'static str {\n         \"DYLD_LIBRARY_PATH\"\n     } else if cfg!(target_os = \"haiku\") {\n         \"LIBRARY_PATH\"\n+    } else if cfg!(target_os = \"aix\") {\n+        \"LIBPATH\"\n     } else {\n         \"LD_LIBRARY_PATH\"\n     }"}, {"sha": "f582666ab283038ce5ad1fc4c29a15356b028cde", "filename": "src/tools/tidy/src/ui_tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "patch": "@@ -9,7 +9,7 @@ use std::path::{Path, PathBuf};\n \n const ENTRY_LIMIT: usize = 1000;\n // FIXME: The following limits should be reduced eventually.\n-const ROOT_ENTRY_LIMIT: usize = 940;\n+const ROOT_ENTRY_LIMIT: usize = 881;\n const ISSUES_ENTRY_LIMIT: usize = 1978;\n \n fn check_entries(tests_path: &Path, bad: &mut bool) {"}, {"sha": "d2f1c6e327192faddd660887042c8dde478aecfe", "filename": "tests/ui/autoref-autoderef/issue-38940.rs", "status": "removed", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/d0eed58a1e78eb1a25bb54076e4b0f7ea5ff7401/tests%2Fui%2Fautoref-autoderef%2Fissue-38940.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0eed58a1e78eb1a25bb54076e4b0f7ea5ff7401/tests%2Fui%2Fautoref-autoderef%2Fissue-38940.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fautoref-autoderef%2Fissue-38940.rs?ref=d0eed58a1e78eb1a25bb54076e4b0f7ea5ff7401", "patch": "@@ -1,52 +0,0 @@\n-// issue-38940: error printed twice for deref recursion limit exceeded\n-// Test that the recursion limit can be changed. In this case, we have\n-// deeply nested types that will fail the `Send` check by overflow\n-// when the recursion limit is set very low.\n-// compile-flags: -Zdeduplicate-diagnostics=yes\n-\n-#![allow(dead_code)]\n-#![recursion_limit = \"10\"]\n-macro_rules! link {\n-    ($outer:ident, $inner:ident) => {\n-        struct $outer($inner);\n-        impl $outer {\n-            fn new() -> $outer {\n-                $outer($inner::new())\n-            }\n-        }\n-        impl std::ops::Deref for $outer {\n-            type Target = $inner;\n-            fn deref(&self) -> &$inner {\n-                &self.0\n-            }\n-        }\n-    };\n-}\n-\n-struct Bottom;\n-\n-impl Bottom {\n-    fn new() -> Bottom {\n-        Bottom\n-    }\n-}\n-\n-link!(Top, A);\n-link!(A, B);\n-link!(B, C);\n-link!(C, D);\n-link!(D, E);\n-link!(E, F);\n-link!(F, G);\n-link!(G, H);\n-link!(H, I);\n-link!(I, J);\n-link!(J, K);\n-link!(K, Bottom);\n-\n-fn main() {\n-    let t = Top::new();\n-    let x: &Bottom = &t;\n-    //~^ ERROR mismatched types\n-    //~| ERROR reached the recursion limit while auto-dereferencing `J`\n-}"}, {"sha": "8e98bfcd90fbc50a3a7ca0700ff72c3a6bb7dbf3", "filename": "tests/ui/autoref-autoderef/issue-38940.stderr", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d0eed58a1e78eb1a25bb54076e4b0f7ea5ff7401/tests%2Fui%2Fautoref-autoderef%2Fissue-38940.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d0eed58a1e78eb1a25bb54076e4b0f7ea5ff7401/tests%2Fui%2Fautoref-autoderef%2Fissue-38940.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fautoref-autoderef%2Fissue-38940.stderr?ref=d0eed58a1e78eb1a25bb54076e4b0f7ea5ff7401", "patch": "@@ -1,23 +0,0 @@\n-error[E0055]: reached the recursion limit while auto-dereferencing `J`\n-  --> $DIR/issue-38940.rs:49:22\n-   |\n-LL |     let x: &Bottom = &t;\n-   |                      ^^ deref recursion limit reached\n-   |\n-   = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"20\"]` attribute to your crate (`issue_38940`)\n-\n-error[E0308]: mismatched types\n-  --> $DIR/issue-38940.rs:49:22\n-   |\n-LL |     let x: &Bottom = &t;\n-   |            -------   ^^ expected `&Bottom`, found `&Top`\n-   |            |\n-   |            expected due to this\n-   |\n-   = note: expected reference `&Bottom`\n-              found reference `&Top`\n-\n-error: aborting due to 2 previous errors\n-\n-Some errors have detailed explanations: E0055, E0308.\n-For more information about an error, try `rustc --explain E0055`."}, {"sha": "b0c493faf1ef26ba8bc84b29860c0df97978b67b", "filename": "tests/ui/did_you_mean/recursion_limit_deref.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "patch": "@@ -1,3 +1,7 @@\n+error: reached the recursion limit finding the struct tail for `Bottom`\n+   |\n+   = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"20\"]`\n+\n error[E0055]: reached the recursion limit while auto-dereferencing `J`\n   --> $DIR/recursion_limit_deref.rs:51:22\n    |\n@@ -17,7 +21,7 @@ LL |     let x: &Bottom = &t;\n    = note: expected reference `&Bottom`\n               found reference `&Top`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 3 previous errors\n \n Some errors have detailed explanations: E0055, E0308.\n For more information about an error, try `rustc --explain E0055`."}, {"sha": "268009f65a5c1e9c51b3ca768e87a43042caff59", "filename": "tests/ui/generics/slightly-nice-generic-literal-messages.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fgenerics%2Fslightly-nice-generic-literal-messages.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fgenerics%2Fslightly-nice-generic-literal-messages.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerics%2Fslightly-nice-generic-literal-messages.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/slightly-nice-generic-literal-messages.rs"}, {"sha": "83ef522ab46e87c0daad2d3cdd778cec60c23e18", "filename": "tests/ui/generics/slightly-nice-generic-literal-messages.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fgenerics%2Fslightly-nice-generic-literal-messages.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fgenerics%2Fslightly-nice-generic-literal-messages.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerics%2Fslightly-nice-generic-literal-messages.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/slightly-nice-generic-literal-messages.stderr"}, {"sha": "1cfdfb1fb4575e62ed3c14d12db71dffc8171b97", "filename": "tests/ui/lexer/unterminated-comment.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Flexer%2Funterminated-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Flexer%2Funterminated-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flexer%2Funterminated-comment.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/unterminated-comment.rs"}, {"sha": "c513fafeeb35c50ba91d0a4528359fbafe4f112e", "filename": "tests/ui/lexer/unterminated-comment.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Flexer%2Funterminated-comment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Flexer%2Funterminated-comment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flexer%2Funterminated-comment.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/unterminated-comment.stderr"}, {"sha": "db5f2f3ba1358857690e58e5cb1d205e302f31b8", "filename": "tests/ui/lexer/unterminated-nested-comment.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Flexer%2Funterminated-nested-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Flexer%2Funterminated-nested-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flexer%2Funterminated-nested-comment.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/unterminated-nested-comment.rs"}, {"sha": "3653e76c9cbda713c6da614711217e67accbd01f", "filename": "tests/ui/lexer/unterminated-nested-comment.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Flexer%2Funterminated-nested-comment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Flexer%2Funterminated-nested-comment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flexer%2Funterminated-nested-comment.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/unterminated-nested-comment.stderr"}, {"sha": "4d5ec6de39219540cdfaf90e788309428095ca1b", "filename": "tests/ui/privacy/auxiliary/xc-private-method-lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fprivacy%2Fauxiliary%2Fxc-private-method-lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fprivacy%2Fauxiliary%2Fxc-private-method-lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fauxiliary%2Fxc-private-method-lib.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/auxiliary/xc-private-method-lib.rs"}, {"sha": "f05994646b3c489bb1882db2dd605457225856f8", "filename": "tests/ui/privacy/xc-private-method.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fprivacy%2Fxc-private-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fprivacy%2Fxc-private-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fxc-private-method.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/xc-private-method.rs"}, {"sha": "0eabc592aa41e190eeefbf4d34fddc6803fbcc4d", "filename": "tests/ui/privacy/xc-private-method.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fprivacy%2Fxc-private-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fprivacy%2Fxc-private-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fxc-private-method.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/xc-private-method.stderr"}, {"sha": "f11b251082bf2ed8abea4cb1c5260ea8fd474edb", "filename": "tests/ui/privacy/xc-private-method2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fprivacy%2Fxc-private-method2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fprivacy%2Fxc-private-method2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fxc-private-method2.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/xc-private-method2.rs"}, {"sha": "af0c3cfcb2c88f40d18acdcf7fcac92b37ecaf86", "filename": "tests/ui/privacy/xc-private-method2.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fprivacy%2Fxc-private-method2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fprivacy%2Fxc-private-method2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fxc-private-method2.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/xc-private-method2.stderr"}, {"sha": "461355f87cf174a15bd0b8b7ab1578a03c5577d7", "filename": "tests/ui/reachable/reachable-unnameable-type-alias.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Freachable%2Freachable-unnameable-type-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Freachable%2Freachable-unnameable-type-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freachable%2Freachable-unnameable-type-alias.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/reachable-unnameable-type-alias.rs"}, {"sha": "708d2cd76a1d9f3170b888296ff0289ca76ad0ad", "filename": "tests/ui/resolve/disambiguate-identical-names.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fresolve%2Fdisambiguate-identical-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fresolve%2Fdisambiguate-identical-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresolve%2Fdisambiguate-identical-names.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/disambiguate-identical-names.rs"}, {"sha": "7d8293018d27b7e80f557f092a128dbbd82c6256", "filename": "tests/ui/resolve/disambiguate-identical-names.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fresolve%2Fdisambiguate-identical-names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fresolve%2Fdisambiguate-identical-names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresolve%2Fdisambiguate-identical-names.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/disambiguate-identical-names.stderr"}, {"sha": "e738225ce2a48569b7c1beb761ea70bb9cfa9eff", "filename": "tests/ui/thread-local/thread-local-mutation.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fthread-local%2Fthread-local-mutation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fthread-local%2Fthread-local-mutation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fthread-local%2Fthread-local-mutation.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/thread-local-mutation.rs"}, {"sha": "e5dc0e72edfc78b1786049140f6324bc02ddeb4d", "filename": "tests/ui/thread-local/thread-local-mutation.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fthread-local%2Fthread-local-mutation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fthread-local%2Fthread-local-mutation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fthread-local%2Fthread-local-mutation.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/thread-local-mutation.stderr"}, {"sha": "c7fee9e6b4c5a2f8edcef7ef624ffcaa60721d55", "filename": "tests/ui/thread-local/thread-local-static.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fthread-local%2Fthread-local-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fthread-local%2Fthread-local-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fthread-local%2Fthread-local-static.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/thread-local-static.rs"}, {"sha": "712050a25fcfe59a8c4eca01bf7bb95207ed2294", "filename": "tests/ui/thread-local/thread-local-static.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fthread-local%2Fthread-local-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fthread-local%2Fthread-local-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fthread-local%2Fthread-local-static.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/thread-local-static.stderr"}, {"sha": "1c2f865599e8bf569ba6d599faaf28cfb0cd474a", "filename": "tests/ui/traits/wrong-mul-method-signature.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftraits%2Fwrong-mul-method-signature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftraits%2Fwrong-mul-method-signature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fwrong-mul-method-signature.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/wrong-mul-method-signature.rs"}, {"sha": "25a92f5ec12a7522f0e59665b664565a5627cec5", "filename": "tests/ui/traits/wrong-mul-method-signature.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftraits%2Fwrong-mul-method-signature.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftraits%2Fwrong-mul-method-signature.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fwrong-mul-method-signature.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/wrong-mul-method-signature.stderr"}, {"sha": "3e1d92b42aac460aac52f4bff4b288f49d1875c2", "filename": "tests/ui/tuple/tuple-index.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftuple%2Ftuple-index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftuple%2Ftuple-index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftuple%2Ftuple-index.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/tuple-index.rs"}, {"sha": "35097aa9ec61fb4ac650a208ad08e6d94f37c4bd", "filename": "tests/ui/typeck/output-type-mismatch.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Foutput-type-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Foutput-type-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Foutput-type-mismatch.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/output-type-mismatch.rs"}, {"sha": "4507a4df621e1c2fde27ad96a18cf3ce4791dee3", "filename": "tests/ui/typeck/output-type-mismatch.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Foutput-type-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Foutput-type-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Foutput-type-mismatch.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/output-type-mismatch.stderr"}, {"sha": "1e39be460809149380e6523b82ba48b29a2db74e", "filename": "tests/ui/typeck/suppressed-error.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fsuppressed-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fsuppressed-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fsuppressed-error.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/suppressed-error.rs"}, {"sha": "11d70f8a4336958f11632f6720e8df9b3565909b", "filename": "tests/ui/typeck/suppressed-error.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fsuppressed-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fsuppressed-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fsuppressed-error.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/suppressed-error.stderr"}, {"sha": "0e76ec246d7c3871bda750252341dd16e5c5fcfd", "filename": "tests/ui/typeck/tag-that-dare-not-speak-its-name.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Ftag-that-dare-not-speak-its-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Ftag-that-dare-not-speak-its-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Ftag-that-dare-not-speak-its-name.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/tag-that-dare-not-speak-its-name.rs"}, {"sha": "f53abe53bf13482ee432736980b48c50fe142b0e", "filename": "tests/ui/typeck/tag-that-dare-not-speak-its-name.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Ftag-that-dare-not-speak-its-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Ftag-that-dare-not-speak-its-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Ftag-that-dare-not-speak-its-name.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/tag-that-dare-not-speak-its-name.stderr"}, {"sha": "cfe350ef86db2a3343260ef5a1a4a3a230aa8461", "filename": "tests/ui/typeck/terr-in-field.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fterr-in-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fterr-in-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fterr-in-field.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/terr-in-field.rs"}, {"sha": "09df4b34bb52d01025522069d38fbbd1beacae47", "filename": "tests/ui/typeck/terr-in-field.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fterr-in-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fterr-in-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fterr-in-field.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/terr-in-field.stderr"}, {"sha": "c1e2f7daee5ec675abfb2c790b49a6acd52f1289", "filename": "tests/ui/typeck/terr-sorts.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fterr-sorts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fterr-sorts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fterr-sorts.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/terr-sorts.rs"}, {"sha": "8f1975374a576c2e6e40fe33b14f5a3e82c8fe19", "filename": "tests/ui/typeck/terr-sorts.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fterr-sorts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fterr-sorts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fterr-sorts.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/terr-sorts.stderr"}, {"sha": "8098bfcd8d9dd565010f19f95f11e91452f24b3a", "filename": "tests/ui/typeck/while-type-error.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fwhile-type-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fwhile-type-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fwhile-type-error.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/while-type-error.rs"}, {"sha": "529cbff0563bd63114263a6758a1b37ce3898ad8", "filename": "tests/ui/typeck/while-type-error.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fwhile-type-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fwhile-type-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fwhile-type-error.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/while-type-error.stderr"}, {"sha": "cbff8dbae21d18b131c23f1353614d6d93156db6", "filename": "tests/ui/typeck/wrong-ret-type.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fwrong-ret-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fwrong-ret-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fwrong-ret-type.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/wrong-ret-type.rs"}, {"sha": "c686a0b2f5aeaa4572b8d1847ea8995802d78f67", "filename": "tests/ui/typeck/wrong-ret-type.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fwrong-ret-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Ftypeck%2Fwrong-ret-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fwrong-ret-type.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/wrong-ret-type.stderr"}, {"sha": "a14ebd6a41fc4c3fb68615735970d205a9eec4e0", "filename": "tests/ui/ufcs/ufcs-polymorphic-paths.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fufcs%2Fufcs-polymorphic-paths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fufcs%2Fufcs-polymorphic-paths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fufcs%2Fufcs-polymorphic-paths.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/ufcs-polymorphic-paths.rs"}, {"sha": "14603a2c71fc4e6e47d9d93ac5cf9b4de6952411", "filename": "tests/ui/unique/expr-block-generic-unique1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funique%2Fexpr-block-generic-unique1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funique%2Fexpr-block-generic-unique1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funique%2Fexpr-block-generic-unique1.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/expr-block-generic-unique1.rs"}, {"sha": "7879c144b10923aa9bbf9c1d474afdf76784ee50", "filename": "tests/ui/unique/expr-block-generic-unique2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funique%2Fexpr-block-generic-unique2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funique%2Fexpr-block-generic-unique2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funique%2Fexpr-block-generic-unique2.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/expr-block-generic-unique2.rs"}, {"sha": "86232683549b602463f200038968229346827a86", "filename": "tests/ui/unique/expr-if-unique.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funique%2Fexpr-if-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funique%2Fexpr-if-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funique%2Fexpr-if-unique.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/expr-if-unique.rs"}, {"sha": "2c40dfc7a4b257bad296477b99662c271447e1bd", "filename": "tests/ui/unique/unique-object-noncopyable.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funique%2Funique-object-noncopyable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funique%2Funique-object-noncopyable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funique%2Funique-object-noncopyable.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/unique-object-noncopyable.rs"}, {"sha": "db42ed9baf1ed4e3fe6d1655866f02847c37b4d1", "filename": "tests/ui/unique/unique-object-noncopyable.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funique%2Funique-object-noncopyable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funique%2Funique-object-noncopyable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funique%2Funique-object-noncopyable.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/unique-object-noncopyable.stderr"}, {"sha": "8edaeef51e06190fc91d8e73fd8ceee05449be09", "filename": "tests/ui/unique/unique-pinned-nocopy.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funique%2Funique-pinned-nocopy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funique%2Funique-pinned-nocopy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funique%2Funique-pinned-nocopy.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/unique-pinned-nocopy.rs"}, {"sha": "de6611324cac137c006a4ff24f9ad56470c9c13b", "filename": "tests/ui/unique/unique-pinned-nocopy.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funique%2Funique-pinned-nocopy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funique%2Funique-pinned-nocopy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funique%2Funique-pinned-nocopy.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/unique-pinned-nocopy.stderr"}, {"sha": "50ecf751a86dbe18590117c16dac5677e3bee88b", "filename": "tests/ui/unique/unwind-unique.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funique%2Funwind-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funique%2Funwind-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funique%2Funwind-unique.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/unwind-unique.rs"}, {"sha": "30620c69feae305756fe3395990c9f0acf2506d5", "filename": "tests/ui/unpretty/mir-unpretty.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funpretty%2Fmir-unpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funpretty%2Fmir-unpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funpretty%2Fmir-unpretty.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/mir-unpretty.rs"}, {"sha": "3808f8583b8362b4552b347b96a81b4116dd2ff7", "filename": "tests/ui/unpretty/mir-unpretty.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funpretty%2Fmir-unpretty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funpretty%2Fmir-unpretty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funpretty%2Fmir-unpretty.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/mir-unpretty.stderr"}, {"sha": "6e1132a3372864b9c881ba8a6e1112ab9df3f25b", "filename": "tests/ui/unpretty/unpretty-expr-fn-arg.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funpretty%2Funpretty-expr-fn-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funpretty%2Funpretty-expr-fn-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funpretty%2Funpretty-expr-fn-arg.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/unpretty-expr-fn-arg.rs"}, {"sha": "b745b988631693bcb54a88dce0959e1456cd8537", "filename": "tests/ui/unpretty/unpretty-expr-fn-arg.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funpretty%2Funpretty-expr-fn-arg.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funpretty%2Funpretty-expr-fn-arg.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funpretty%2Funpretty-expr-fn-arg.stdout?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/unpretty-expr-fn-arg.stdout"}, {"sha": "d3cf5d84fdd98be1457cf37de3bc8e034b48e678", "filename": "tests/ui/unsafe/foreign-unsafe-fn-called.mir.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funsafe%2Fforeign-unsafe-fn-called.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funsafe%2Fforeign-unsafe-fn-called.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe%2Fforeign-unsafe-fn-called.mir.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/foreign-unsafe-fn-called.mir.stderr"}, {"sha": "67302ea1bcddb04c35d98c4277038552f1b383f6", "filename": "tests/ui/unsafe/foreign-unsafe-fn-called.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funsafe%2Fforeign-unsafe-fn-called.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funsafe%2Fforeign-unsafe-fn-called.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe%2Fforeign-unsafe-fn-called.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/foreign-unsafe-fn-called.rs"}, {"sha": "00ba0f7a6a3e07ccec84d86c46611e0976c2e848", "filename": "tests/ui/unsafe/foreign-unsafe-fn-called.thir.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funsafe%2Fforeign-unsafe-fn-called.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funsafe%2Fforeign-unsafe-fn-called.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe%2Fforeign-unsafe-fn-called.thir.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/foreign-unsafe-fn-called.thir.stderr"}, {"sha": "d99eb4cbd1c80c8fe40b5f95c5d3727edbbd27cb", "filename": "tests/ui/unsafe/new-unsafe-pointers.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funsafe%2Fnew-unsafe-pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funsafe%2Fnew-unsafe-pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe%2Fnew-unsafe-pointers.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/new-unsafe-pointers.rs"}, {"sha": "3713a7065f5e5bd057bf8333c6c5cfab5db75759", "filename": "tests/ui/unsafe/unsafe-fn-called-from-unsafe-blk.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funsafe%2Funsafe-fn-called-from-unsafe-blk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funsafe%2Funsafe-fn-called-from-unsafe-blk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe%2Funsafe-fn-called-from-unsafe-blk.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/unsafe-fn-called-from-unsafe-blk.rs"}, {"sha": "5e953107686f2ce6ce8c0240d8dbc0217fd0d9ed", "filename": "tests/ui/unsafe/unsafe-fn-called-from-unsafe-fn.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funsafe%2Funsafe-fn-called-from-unsafe-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funsafe%2Funsafe-fn-called-from-unsafe-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe%2Funsafe-fn-called-from-unsafe-fn.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/unsafe-fn-called-from-unsafe-fn.rs"}, {"sha": "db822bb6a028350306858573cd67dd213198ca5e", "filename": "tests/ui/unsafe/unsafe-pointer-assignability.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funsafe%2Funsafe-pointer-assignability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Funsafe%2Funsafe-pointer-assignability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe%2Funsafe-pointer-assignability.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/unsafe-pointer-assignability.rs"}, {"sha": "74707a98d325f00a981941b02b962700b4ffa96d", "filename": "tests/ui/variance/variance-intersection-of-ref-and-opt-ref.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fvariance%2Fvariance-intersection-of-ref-and-opt-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fvariance%2Fvariance-intersection-of-ref-and-opt-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fvariance%2Fvariance-intersection-of-ref-and-opt-ref.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/variance-intersection-of-ref-and-opt-ref.rs"}, {"sha": "a542e44d517a7e5c860f07e740309107dce09e85", "filename": "tests/ui/variance/variance-iterators-in-libcore.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fvariance%2Fvariance-iterators-in-libcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fvariance%2Fvariance-iterators-in-libcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fvariance%2Fvariance-iterators-in-libcore.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/variance-iterators-in-libcore.rs"}, {"sha": "c3cca3a35ac6916f0ecc0316fe67a6e4032851db", "filename": "tests/ui/wasm/wasm-custom-section-relocations.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fwasm%2Fwasm-custom-section-relocations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fwasm%2Fwasm-custom-section-relocations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwasm%2Fwasm-custom-section-relocations.rs?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/wasm-custom-section-relocations.rs"}, {"sha": "a37edc51d1975a48c51de04d490057c0d1eecd30", "filename": "tests/ui/wasm/wasm-custom-section-relocations.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fwasm%2Fwasm-custom-section-relocations.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa/tests%2Fui%2Fwasm%2Fwasm-custom-section-relocations.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwasm%2Fwasm-custom-section-relocations.stderr?ref=932c173ca1b7a79c1005e2d72ddfa505a7bf2cfa", "previous_filename": "tests/ui/wasm-custom-section-relocations.stderr"}]}