{"sha": "bb594a03a14d872f6b190c644ecccfa41792cb30", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiNTk0YTAzYTE0ZDg3MmY2YjE5MGM2NDRlY2NjZmE0MTc5MmNiMzA=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-05-18T23:15:38Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-19T18:40:16Z"}, "message": "remove now-unused ts field from ann", "tree": {"sha": "e40531f4cfde19d5c1b4bcb4b5c50ea3b5b7fd93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e40531f4cfde19d5c1b4bcb4b5c50ea3b5b7fd93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb594a03a14d872f6b190c644ecccfa41792cb30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb594a03a14d872f6b190c644ecccfa41792cb30", "html_url": "https://github.com/rust-lang/rust/commit/bb594a03a14d872f6b190c644ecccfa41792cb30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb594a03a14d872f6b190c644ecccfa41792cb30/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e16b097599ee73a909df7ffbbaaf30f25a7057e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e16b097599ee73a909df7ffbbaaf30f25a7057e3", "html_url": "https://github.com/rust-lang/rust/commit/e16b097599ee73a909df7ffbbaaf30f25a7057e3"}], "stats": {"total": 25, "additions": 6, "deletions": 19}, "files": [{"sha": "75321f595f444529f62bdccfa2229f96bac9f2fc", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bb594a03a14d872f6b190c644ecccfa41792cb30/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb594a03a14d872f6b190c644ecccfa41792cb30/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=bb594a03a14d872f6b190c644ecccfa41792cb30", "patch": "@@ -23,8 +23,7 @@ type ty_param = ident;\n // Annotations added during successive passes.\n type ann = rec(uint id,\n                middle::ty::t ty,\n-               option::t[vec[middle::ty::t]] tps,\n-               option::t[@ts_ann] ts);\n+               option::t[vec[middle::ty::t]] tps);\n \n tag def {\n     def_fn(def_id);"}, {"sha": "3099ddfb0aee283b6469e07c4434099d00fb858f", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bb594a03a14d872f6b190c644ecccfa41792cb30/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb594a03a14d872f6b190c644ecccfa41792cb30/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=bb594a03a14d872f6b190c644ecccfa41792cb30", "patch": "@@ -147,11 +147,10 @@ fn new_parser(session::session sess,\n             fn get_chpos() -> uint {ret rdr.get_chpos();}\n \n             fn get_ann() -> ast::ann {\n-                // TODO: Remove ty, tps, and ts. ty and tps should be unused\n+                // TODO: Remove ty and tps, which should be unused\n                 // by now.\n                 auto rv = rec(id=next_ann_var, ty=0u,\n-                              tps=none[vec[middle::ty::t]],\n-                              ts=none[@middle::tstate::ann::ts_ann]);\n+                              tps=none[vec[middle::ty::t]]);\n                 next_ann_var += 1u;\n                 ret rv;\n             }"}, {"sha": "094af6d910ff012ecfaf34726a5c1492e4cdf123", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb594a03a14d872f6b190c644ecccfa41792cb30/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb594a03a14d872f6b190c644ecccfa41792cb30/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=bb594a03a14d872f6b190c644ecccfa41792cb30", "patch": "@@ -1498,7 +1498,7 @@ fn ann_to_monotype(ctxt cx, &node_type_table ntt, ast::ann a) -> t {\n // Turns a type and optional type parameters into an annotation, using\n // defaults for other fields.\n fn mk_ann_type(uint node_id, t typ, option::t[vec[t]] tps) -> ast::ann {\n-    ret rec(id=node_id, ty=typ, tps=tps, ts=none[@ts_ann]);\n+    ret rec(id=node_id, ty=typ, tps=tps);\n }\n \n // Turns a type into an annotation, using defaults for other fields."}, {"sha": "090ad57027ec5b034a18327eefe4c98beb6b5e34", "filename": "src/comp/util/common.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bb594a03a14d872f6b190c644ecccfa41792cb30/src%2Fcomp%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb594a03a14d872f6b190c644ecccfa41792cb30/src%2Fcomp%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Futil%2Fcommon.rs?ref=bb594a03a14d872f6b190c644ecccfa41792cb30", "patch": "@@ -178,8 +178,8 @@ fn item_to_str(&@ast::item i) -> str {\n   auto out_ = mkstate(s.get_writer(), 80u);\n   auto out = @rec(s=out_,\n                   comments=none[vec[front::lexer::cmnt]],\n-                  mutable cur_cmnt=0u);\n-\n+                  mutable cur_cmnt=0u,\n+                  mode=mo_untyped);\n   print_item(out, i);\n   ret s.get_str();\n }\n@@ -196,17 +196,6 @@ fn log_item_err(&@ast::item i) -> () {\n     log_err(item_to_str(i));\n }\n \n-fn log_ann(&ast::ann a) -> () {\n-    alt (a) {\n-        case (ast::ann_none(_)) {\n-            log(\"ann_none\");\n-        }\n-        case (ast::ann_type(_,_,_,_)) {\n-            log(\"ann_type\");\n-        }\n-    }\n-}\n-\n fn fun_to_str(&ast::_fn f, str name, vec[ast::ty_param] params) -> str {\n  let str_writer s = string_writer();\n   auto out_ = mkstate(s.get_writer(), 80u);"}]}