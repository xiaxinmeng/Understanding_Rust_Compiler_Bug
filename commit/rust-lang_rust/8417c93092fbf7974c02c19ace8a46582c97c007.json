{"sha": "8417c93092fbf7974c02c19ace8a46582c97c007", "node_id": "C_kwDOAAsO6NoAKDg0MTdjOTMwOTJmYmY3OTc0YzAyYzE5YWNlOGE0NjU4MmM5N2MwMDc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-18T11:04:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-18T11:04:23Z"}, "message": "Rollup merge of #109238 - spastorino:new-rpitit-12, r=compiler-errors\n\nFix generics mismatch errors for RPITITs on -Zlower-impl-trait-in-trait-to-assoc-ty\n\nThis PR stops reporting errors due to different count of generics on the new synthesized associated types for RPITITs. Those were already reported when we compare the function on the triat with the function on the impl.\n\nr? ``@compiler-errors``", "tree": {"sha": "48437036e06e0337d1af9b393411cb9c903115bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48437036e06e0337d1af9b393411cb9c903115bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8417c93092fbf7974c02c19ace8a46582c97c007", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkFZq3CRBK7hj4Ov3rIwAAvPsIAALxAoQ/ec9xTGtQryiPnxvM\nvAra75CFP6dwKpSAfDfJcZNBk1r1zhJEE2NE+UDH7hpKC0m4bBctjwhPF7/101wk\nrxho6Af1qAuHlfFILxZwfVTcmYVqgsZdWeMihtLKqK4Vn5E57iicjGsgTNNMeG4Y\nSiw3btF07tCCgVD5LkT1bhLXjyHmUNydxfnzm3pOzS41w4UWHU3QWf4s3eUqzv0y\n0Y9obCudCzqf1NO241vYJw2wDr7l763njLIcEoku23GBhvOFs+vlLRMn23F5VzV7\nyKJuASx8j0NJTc5mGMtKhN+xP6XTDbDaJNK1As9HDqKZXM7uVSOJyoXfeFzF4+g=\n=1fOu\n-----END PGP SIGNATURE-----\n", "payload": "tree 48437036e06e0337d1af9b393411cb9c903115bc\nparent a48d83d55698614a88be7df46a3c7e9c49f43cf4\nparent ae7fa1d269a3346372562570da3c51625027097b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679137463 +0100\ncommitter GitHub <noreply@github.com> 1679137463 +0100\n\nRollup merge of #109238 - spastorino:new-rpitit-12, r=compiler-errors\n\nFix generics mismatch errors for RPITITs on -Zlower-impl-trait-in-trait-to-assoc-ty\n\nThis PR stops reporting errors due to different count of generics on the new synthesized associated types for RPITITs. Those were already reported when we compare the function on the triat with the function on the impl.\n\nr? ``@compiler-errors``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8417c93092fbf7974c02c19ace8a46582c97c007", "html_url": "https://github.com/rust-lang/rust/commit/8417c93092fbf7974c02c19ace8a46582c97c007", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8417c93092fbf7974c02c19ace8a46582c97c007/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a48d83d55698614a88be7df46a3c7e9c49f43cf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a48d83d55698614a88be7df46a3c7e9c49f43cf4", "html_url": "https://github.com/rust-lang/rust/commit/a48d83d55698614a88be7df46a3c7e9c49f43cf4"}, {"sha": "ae7fa1d269a3346372562570da3c51625027097b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae7fa1d269a3346372562570da3c51625027097b", "html_url": "https://github.com/rust-lang/rust/commit/ae7fa1d269a3346372562570da3c51625027097b"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "32b6aeed5f8cc3de34a03a97587dd9bd4b14ecbc", "filename": "compiler/rustc_hir_analysis/src/check/compare_impl_item.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8417c93092fbf7974c02c19ace8a46582c97c007/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_impl_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8417c93092fbf7974c02c19ace8a46582c97c007/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_impl_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_impl_item.rs?ref=8417c93092fbf7974c02c19ace8a46582c97c007", "patch": "@@ -1205,6 +1205,17 @@ fn compare_number_of_generics<'tcx>(\n         return Ok(());\n     }\n \n+    // We never need to emit a separate error for RPITITs, since if an RPITIT\n+    // has mismatched type or const generic arguments, then the method that it's\n+    // inheriting the generics from will also have mismatched arguments, and\n+    // we'll report an error for that instead. Delay a bug for safety, though.\n+    if tcx.opt_rpitit_info(trait_.def_id).is_some() {\n+        return Err(tcx.sess.delay_span_bug(\n+            rustc_span::DUMMY_SP,\n+            \"errors comparing numbers of generics of trait/impl functions were not emitted\",\n+        ));\n+    }\n+\n     let matchings = [\n         (\"type\", trait_own_counts.types, impl_own_counts.types),\n         (\"const\", trait_own_counts.consts, impl_own_counts.consts),"}, {"sha": "310edbcb6cd1efc175144c569bdecf7c16c4f0a9", "filename": "tests/ui/impl-trait/in-trait/generics-mismatch.current.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8417c93092fbf7974c02c19ace8a46582c97c007/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8417c93092fbf7974c02c19ace8a46582c97c007/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.current.stderr?ref=8417c93092fbf7974c02c19ace8a46582c97c007", "patch": "@@ -1,5 +1,5 @@\n error[E0049]: method `bar` has 1 type parameter but its trait declaration has 0 type parameters\n-  --> $DIR/generics-mismatch.rs:11:12\n+  --> $DIR/generics-mismatch.rs:14:12\n    |\n LL |     fn bar(&self) -> impl Sized;\n    |           - expected 0 type parameters", "previous_filename": "tests/ui/impl-trait/in-trait/generics-mismatch.stderr"}, {"sha": "310edbcb6cd1efc175144c569bdecf7c16c4f0a9", "filename": "tests/ui/impl-trait/in-trait/generics-mismatch.next.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8417c93092fbf7974c02c19ace8a46582c97c007/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8417c93092fbf7974c02c19ace8a46582c97c007/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.next.stderr?ref=8417c93092fbf7974c02c19ace8a46582c97c007", "patch": "@@ -0,0 +1,12 @@\n+error[E0049]: method `bar` has 1 type parameter but its trait declaration has 0 type parameters\n+  --> $DIR/generics-mismatch.rs:14:12\n+   |\n+LL |     fn bar(&self) -> impl Sized;\n+   |           - expected 0 type parameters\n+...\n+LL |     fn bar<T>(&self) {}\n+   |            ^ found 1 type parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0049`."}, {"sha": "9259ca193d1de79e085334798fe1a2cfbdcac029", "filename": "tests/ui/impl-trait/in-trait/generics-mismatch.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8417c93092fbf7974c02c19ace8a46582c97c007/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8417c93092fbf7974c02c19ace8a46582c97c007/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fgenerics-mismatch.rs?ref=8417c93092fbf7974c02c19ace8a46582c97c007", "patch": "@@ -1,3 +1,6 @@\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n+\n #![feature(return_position_impl_trait_in_trait)]\n #![allow(incomplete_features)]\n "}]}