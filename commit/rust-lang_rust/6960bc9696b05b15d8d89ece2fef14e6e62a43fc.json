{"sha": "6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NjBiYzk2OTZiMDViMTVkOGQ4OWVjZTJmZWYxNGU2ZTYyYTQzZmM=", "commit": {"author": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2021-03-22T22:30:56Z"}, "committer": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2021-03-22T22:30:56Z"}, "message": "only run RemoveZsts at mir-opt-level 3 and above", "tree": {"sha": "335139d68d42aa2debb7f929fb42275fd628e0da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/335139d68d42aa2debb7f929fb42275fd628e0da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "html_url": "https://github.com/rust-lang/rust/commit/6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/comments", "author": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46fd49cdc366ebf74c1b2bcb3a0e3d22585f267f", "url": "https://api.github.com/repos/rust-lang/rust/commits/46fd49cdc366ebf74c1b2bcb3a0e3d22585f267f", "html_url": "https://github.com/rust-lang/rust/commit/46fd49cdc366ebf74c1b2bcb3a0e3d22585f267f"}], "stats": {"total": 80, "additions": 55, "deletions": 25}, "files": [{"sha": "144cedf593ede58ed22a89010edfb60481e35de1", "filename": "compiler/rustc_mir/src/transform/remove_zsts.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_zsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_zsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_zsts.rs?ref=6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "patch": "@@ -8,6 +8,9 @@ pub struct RemoveZsts;\n \n impl<'tcx> MirPass<'tcx> for RemoveZsts {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n+        if tcx.sess.mir_opt_level() < 3 {\n+            return;\n+        }\n         let param_env = tcx.param_env(body.source.def_id());\n         let (basic_blocks, local_decls) = body.basic_blocks_and_local_decls_mut();\n         for block in basic_blocks.iter_mut() {"}, {"sha": "e1f2fbe84434a989ebaf8ede1256160175effb09", "filename": "src/test/mir-opt/const_prop/control_flow_simplification.hello.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.ConstProp.diff?ref=6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "patch": "@@ -29,7 +29,7 @@\n       }\n   \n       bb2: {\n-          nop;                             // scope 0 at $DIR/control-flow-simplification.rs:14:6: 14:6\n+          _0 = const ();                   // scope 0 at $DIR/control-flow-simplification.rs:14:6: 14:6\n           StorageDead(_1);                 // scope 0 at $DIR/control-flow-simplification.rs:14:5: 14:6\n           return;                          // scope 0 at $DIR/control-flow-simplification.rs:15:2: 15:2\n       }"}, {"sha": "c2f75e5daeeb22179c46f4cc946d41583100efda", "filename": "src/test/mir-opt/const_prop/control_flow_simplification.hello.PreCodegen.before.mir", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.PreCodegen.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.PreCodegen.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.PreCodegen.before.mir?ref=6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "patch": "@@ -4,6 +4,7 @@ fn hello() -> () {\n     let mut _0: ();                      // return place in scope 0 at $DIR/control-flow-simplification.rs:11:14: 11:14\n \n     bb0: {\n+        _0 = const ();                   // scope 0 at $DIR/control-flow-simplification.rs:14:6: 14:6\n         return;                          // scope 0 at $DIR/control-flow-simplification.rs:15:2: 15:2\n     }\n }"}, {"sha": "8793af5c074d5dfb44c3ee7a2332eb2ab6d9a028", "filename": "src/test/mir-opt/remove_unneeded_drops.cannot_opt_generic.RemoveUnneededDrops.diff", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.cannot_opt_generic.RemoveUnneededDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.cannot_opt_generic.RemoveUnneededDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.cannot_opt_generic.RemoveUnneededDrops.diff?ref=6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "patch": "@@ -14,6 +14,7 @@\n           StorageLive(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:21:5: 21:12\n           StorageLive(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:21:10: 21:11\n           _3 = move _1;                    // scope 0 at $DIR/remove_unneeded_drops.rs:21:10: 21:11\n+          nop;                             // scope 1 at $DIR/remove_unneeded_drops.rs:21:5: 21:12\n           drop(_3) -> [return: bb2, unwind: bb1]; // scope 1 at $DIR/remove_unneeded_drops.rs:21:5: 21:12\n       }\n   "}, {"sha": "2377abdb153ba9659a1fb4d301ee9c452d9a941c", "filename": "src/test/mir-opt/remove_unneeded_drops.dont_opt.RemoveUnneededDrops.diff", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.dont_opt.RemoveUnneededDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.dont_opt.RemoveUnneededDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.dont_opt.RemoveUnneededDrops.diff?ref=6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "patch": "@@ -14,6 +14,7 @@\n           StorageLive(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:9:5: 9:12\n           StorageLive(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:9:10: 9:11\n           _3 = move _1;                    // scope 0 at $DIR/remove_unneeded_drops.rs:9:10: 9:11\n+          nop;                             // scope 1 at $DIR/remove_unneeded_drops.rs:9:5: 9:12\n           drop(_3) -> [return: bb2, unwind: bb1]; // scope 1 at $DIR/remove_unneeded_drops.rs:9:5: 9:12\n       }\n   "}, {"sha": "75bd732e3c03a8ffdfc3cc32eea45c2605f66ba9", "filename": "src/test/mir-opt/remove_unneeded_drops.opt.RemoveUnneededDrops.diff", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt.RemoveUnneededDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt.RemoveUnneededDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt.RemoveUnneededDrops.diff?ref=6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "patch": "@@ -14,6 +14,7 @@\n           StorageLive(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:4:5: 4:12\n           StorageLive(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:4:10: 4:11\n           _3 = _1;                         // scope 0 at $DIR/remove_unneeded_drops.rs:4:10: 4:11\n+-         nop;                             // scope 1 at $DIR/remove_unneeded_drops.rs:4:5: 4:12\n -         drop(_3) -> bb1;                 // scope 1 at $DIR/remove_unneeded_drops.rs:4:5: 4:12\n -     }\n - "}, {"sha": "b3da2cfb24c75bae268602156feaac60f7ac8250", "filename": "src/test/mir-opt/remove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff?ref=6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "patch": "@@ -14,6 +14,7 @@\n           StorageLive(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:14:5: 14:12\n           StorageLive(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:14:10: 14:11\n           _3 = _1;                         // scope 0 at $DIR/remove_unneeded_drops.rs:14:10: 14:11\n+-         nop;                             // scope 1 at $DIR/remove_unneeded_drops.rs:14:5: 14:12\n -         drop(_3) -> bb1;                 // scope 1 at $DIR/remove_unneeded_drops.rs:14:5: 14:12\n -     }\n - "}, {"sha": "70725e5f14f7dfe59df343dc74bd038f7662b508", "filename": "src/test/mir-opt/simplify_locals_fixedpoint.foo.SimplifyLocals.diff", "status": "modified", "additions": 34, "deletions": 15, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fmir-opt%2Fsimplify_locals_fixedpoint.foo.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fmir-opt%2Fsimplify_locals_fixedpoint.foo.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals_fixedpoint.foo.SimplifyLocals.diff?ref=6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "patch": "@@ -9,8 +9,8 @@\n       let mut _4: isize;                   // in scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:22: 4:26\n       let mut _5: isize;                   // in scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:13: 4:20\n       let _6: u8;                          // in scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:18: 4:19\n--     let mut _7: bool;                    // in scope 0 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:20\n--     let mut _8: u8;                      // in scope 0 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:13\n+      let mut _7: bool;                    // in scope 0 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:20\n+      let mut _8: u8;                      // in scope 0 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:13\n       scope 1 {\n           debug a => _6;                   // in scope 1 at $DIR/simplify-locals-fixedpoint.rs:4:18: 4:19\n       }\n@@ -26,32 +26,51 @@\n           StorageDead(_3);                 // scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:68: 4:69\n           StorageDead(_2);                 // scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:68: 4:69\n           _5 = discriminant((_1.0: std::option::Option<u8>)); // scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:13: 4:20\n-          switchInt(move _5) -> [1_isize: bb1, otherwise: bb3]; // scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:13: 4:20\n+          switchInt(move _5) -> [1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:13: 4:20\n       }\n   \n       bb1: {\n-          _4 = discriminant((_1.1: std::option::Option<T>)); // scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:22: 4:26\n-          switchInt(move _4) -> [0_isize: bb2, otherwise: bb3]; // scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:22: 4:26\n+          _0 = const ();                   // scope 0 at $DIR/simplify-locals-fixedpoint.rs:8:6: 8:6\n+          goto -> bb7;                     // scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:5: 8:6\n       }\n   \n       bb2: {\n+          _4 = discriminant((_1.1: std::option::Option<T>)); // scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:22: 4:26\n+          switchInt(move _4) -> [0_isize: bb3, otherwise: bb1]; // scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:22: 4:26\n+      }\n+  \n+      bb3: {\n           StorageLive(_6);                 // scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:18: 4:19\n           _6 = (((_1.0: std::option::Option<u8>) as Some).0: u8); // scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:18: 4:19\n--         StorageLive(_7);                 // scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:20\n--         StorageLive(_8);                 // scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:13\n--         _8 = _6;                         // scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:13\n--         _7 = Gt(move _8, const 42_u8);   // scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:20\n--         StorageDead(_8);                 // scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:19: 5:20\n--         StorageDead(_7);                 // scope 1 at $DIR/simplify-locals-fixedpoint.rs:7:9: 7:10\n+          StorageLive(_7);                 // scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:20\n+          StorageLive(_8);                 // scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:13\n+          _8 = _6;                         // scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:13\n+          _7 = Gt(move _8, const 42_u8);   // scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:20\n+          StorageDead(_8);                 // scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:19: 5:20\n+          switchInt(move _7) -> [false: bb5, otherwise: bb4]; // scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:9: 7:10\n+      }\n+  \n+      bb4: {\n+          _0 = const ();                   // scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:21: 7:10\n+          goto -> bb6;                     // scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:9: 7:10\n+      }\n+  \n+      bb5: {\n+          _0 = const ();                   // scope 1 at $DIR/simplify-locals-fixedpoint.rs:7:10: 7:10\n+          goto -> bb6;                     // scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:9: 7:10\n+      }\n+  \n+      bb6: {\n+          StorageDead(_7);                 // scope 1 at $DIR/simplify-locals-fixedpoint.rs:7:9: 7:10\n           StorageDead(_6);                 // scope 0 at $DIR/simplify-locals-fixedpoint.rs:8:5: 8:6\n-          goto -> bb3;                     // scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:5: 8:6\n+          goto -> bb7;                     // scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:5: 8:6\n       }\n   \n-      bb3: {\n-          drop(_1) -> bb4;                 // scope 0 at $DIR/simplify-locals-fixedpoint.rs:9:1: 9:2\n+      bb7: {\n+          drop(_1) -> bb8;                 // scope 0 at $DIR/simplify-locals-fixedpoint.rs:9:1: 9:2\n       }\n   \n-      bb4: {\n+      bb8: {\n           StorageDead(_1);                 // scope 0 at $DIR/simplify-locals-fixedpoint.rs:9:1: 9:2\n           return;                          // scope 0 at $DIR/simplify-locals-fixedpoint.rs:9:2: 9:2\n       }"}, {"sha": "45d018cf305c615d1dbc372f40bb15c6d66a03bf", "filename": "src/test/run-make/const_fn_mir/dump.mir", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Frun-make%2Fconst_fn_mir%2Fdump.mir", "raw_url": "https://github.com/rust-lang/rust/raw/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Frun-make%2Fconst_fn_mir%2Fdump.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fconst_fn_mir%2Fdump.mir?ref=6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "patch": "@@ -12,6 +12,7 @@ fn main() -> () {\n     }\n \n     bb1: {\n+        _0 = const ();                   // scope 0 at main.rs:8:11: 10:2\n         return;                          // scope 0 at main.rs:10:2: 10:2\n     }\n }"}, {"sha": "f76440298b3ca8e72c02a657acbb51fb1bcb5a4f", "filename": "src/test/ui/consts/const-eval/panic-assoc-never-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-assoc-never-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-assoc-never-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-assoc-never-type.rs?ref=6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "patch": "@@ -15,5 +15,5 @@ impl PrintName {\n \n fn main() {\n     let _ = PrintName::VOID;\n-    //~^ ERROR erroneous constant encountered\n+    //~^ ERROR erroneous constant used\n }"}, {"sha": "28a3ebede5038f4e1cbde1a6123a56ef15b0b85f", "filename": "src/test/ui/consts/const-eval/panic-assoc-never-type.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-assoc-never-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-assoc-never-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-assoc-never-type.stderr?ref=6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "patch": "@@ -15,11 +15,12 @@ LL | #![warn(const_err)]\n    = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n    = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: erroneous constant encountered\n+error[E0080]: erroneous constant used\n   --> $DIR/panic-assoc-never-type.rs:17:13\n    |\n LL |     let _ = PrintName::VOID;\n-   |             ^^^^^^^^^^^^^^^\n+   |             ^^^^^^^^^^^^^^^ referenced constant has errors\n \n error: aborting due to previous error; 1 warning emitted\n \n+For more information about this error, try `rustc --explain E0080`."}, {"sha": "c5139c575b15f009b7c3daf96716dd51376ae933", "filename": "src/test/ui/consts/const-eval/panic-never-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-never-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-never-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-never-type.rs?ref=6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "patch": "@@ -11,5 +11,5 @@ const VOID: ! = panic!();\n \n fn main() {\n     let _ = VOID;\n-    //~^ ERROR erroneous constant encountered\n+    //~^ ERROR erroneous constant used\n }"}, {"sha": "8f67dd6a8ba427c3f50b62236a9d1c5df306f580", "filename": "src/test/ui/consts/const-eval/panic-never-type.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-never-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-never-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpanic-never-type.stderr?ref=6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "patch": "@@ -15,11 +15,12 @@ LL | #![warn(const_err)]\n    = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n    = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: erroneous constant encountered\n+error[E0080]: erroneous constant used\n   --> $DIR/panic-never-type.rs:13:13\n    |\n LL |     let _ = VOID;\n-   |             ^^^^\n+   |             ^^^^ referenced constant has errors\n \n error: aborting due to previous error; 1 warning emitted\n \n+For more information about this error, try `rustc --explain E0080`."}, {"sha": "7f197a238e5a0f2466d9c857d23bd06154350ddf", "filename": "src/test/ui/recursion/issue-26548-recursion-via-normalize.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fui%2Frecursion%2Fissue-26548-recursion-via-normalize.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6960bc9696b05b15d8d89ece2fef14e6e62a43fc/src%2Ftest%2Fui%2Frecursion%2Fissue-26548-recursion-via-normalize.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frecursion%2Fissue-26548-recursion-via-normalize.stderr?ref=6960bc9696b05b15d8d89ece2fef14e6e62a43fc", "patch": "@@ -1,7 +1,7 @@\n-error[E0391]: cycle detected when computing layout of `std::option::Option<S>`\n+error[E0391]: cycle detected when computing layout of `S`\n    |\n-   = note: ...which requires computing layout of `S`...\n-   = note: ...which again requires computing layout of `std::option::Option<S>`, completing the cycle\n+   = note: ...which requires computing layout of `std::option::Option<S>`...\n+   = note: ...which again requires computing layout of `S`, completing the cycle\n note: cycle used when optimizing MIR for `main`\n   --> $DIR/issue-26548-recursion-via-normalize.rs:15:1\n    |"}]}