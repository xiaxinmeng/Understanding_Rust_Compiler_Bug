{"sha": "e8890aad62dbb399b90542e6719d050665ab1c9a", "node_id": "C_kwDOAAsO6NoAKGU4ODkwYWFkNjJkYmIzOTliOTA1NDJlNjcxOWQwNTA2NjVhYjFjOWE", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-03-21T15:33:15Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-03-21T15:33:42Z"}, "message": "move `adt_const_params`  to its own tracking issue", "tree": {"sha": "f8c30e3dbcbd70c6d34d49cb289d9d5bfaf04760", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8c30e3dbcbd70c6d34d49cb289d9d5bfaf04760"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8890aad62dbb399b90542e6719d050665ab1c9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8890aad62dbb399b90542e6719d050665ab1c9a", "html_url": "https://github.com/rust-lang/rust/commit/e8890aad62dbb399b90542e6719d050665ab1c9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8890aad62dbb399b90542e6719d050665ab1c9a/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "051d1176b786aadd7d7c048f822cb6bfab00fe03", "url": "https://api.github.com/repos/rust-lang/rust/commits/051d1176b786aadd7d7c048f822cb6bfab00fe03", "html_url": "https://github.com/rust-lang/rust/commit/051d1176b786aadd7d7c048f822cb6bfab00fe03"}], "stats": {"total": 46, "additions": 4, "deletions": 42}, "files": [{"sha": "feef7295254a9eaed070d799d3dfa715da0d054f", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8890aad62dbb399b90542e6719d050665ab1c9a/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8890aad62dbb399b90542e6719d050665ab1c9a/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=e8890aad62dbb399b90542e6719d050665ab1c9a", "patch": "@@ -287,7 +287,7 @@ declare_features! (\n     /// Allows `extern \"x86-interrupt\" fn()`.\n     (active, abi_x86_interrupt, \"1.17.0\", Some(40180), None),\n     /// Allows additional const parameter types, such as `&'static str` or user defined types\n-    (incomplete, adt_const_params, \"1.56.0\", Some(44580), None),\n+    (incomplete, adt_const_params, \"1.56.0\", Some(95174), None),\n     /// Allows defining an `#[alloc_error_handler]`.\n     (active, alloc_error_handler, \"1.29.0\", Some(51540), None),\n     /// Allows explicit discriminants on non-unit enum variants."}, {"sha": "f2bad2f552759aa09d381dc757b3cc2c3fa61d2f", "filename": "src/test/ui/consts/refs_check_const_eq-issue-88384.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8890aad62dbb399b90542e6719d050665ab1c9a/src%2Ftest%2Fui%2Fconsts%2Frefs_check_const_eq-issue-88384.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e8890aad62dbb399b90542e6719d050665ab1c9a/src%2Ftest%2Fui%2Fconsts%2Frefs_check_const_eq-issue-88384.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frefs_check_const_eq-issue-88384.stderr?ref=e8890aad62dbb399b90542e6719d050665ab1c9a", "patch": "@@ -5,7 +5,7 @@ LL | #![feature(adt_const_params)]\n    |            ^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n-   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n+   = note: see issue #95174 <https://github.com/rust-lang/rust/issues/95174> for more information\n \n warning: 1 warning emitted\n "}, {"sha": "5a16d5845a60e57561c49d7bbf106b98dee43dfd", "filename": "src/test/ui/error-codes/E0771.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8890aad62dbb399b90542e6719d050665ab1c9a/src%2Ftest%2Fui%2Ferror-codes%2FE0771.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e8890aad62dbb399b90542e6719d050665ab1c9a/src%2Ftest%2Fui%2Ferror-codes%2FE0771.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0771.stderr?ref=e8890aad62dbb399b90542e6719d050665ab1c9a", "patch": "@@ -5,7 +5,7 @@ LL | #![feature(adt_const_params)]\n    |            ^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n-   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n+   = note: see issue #95174 <https://github.com/rust-lang/rust/issues/95174> for more information\n \n error[E0771]: use of non-static lifetime `'a` in const generic\n   --> $DIR/E0771.rs:4:41"}, {"sha": "beb12c36dcafa3bed2e0f5f733f517dae7458fd4", "filename": "src/test/ui/issues/issue-28561.rs", "status": "modified", "additions": 1, "deletions": 39, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/e8890aad62dbb399b90542e6719d050665ab1c9a/src%2Ftest%2Fui%2Fissues%2Fissue-28561.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8890aad62dbb399b90542e6719d050665ab1c9a/src%2Ftest%2Fui%2Fissues%2Fissue-28561.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28561.rs?ref=e8890aad62dbb399b90542e6719d050665ab1c9a", "patch": "@@ -1,5 +1,5 @@\n // check-pass\n-#[derive(Debug, Default, Eq, Hash, Ord, PartialEq, PartialOrd)]\n+#[derive(Debug, Default, Eq, Hash, Ord, PartialEq, PartialOrd, Clone, Copy)]\n struct Array<T> {\n     f00: [T; 00],\n     f01: [T; 01],\n@@ -36,44 +36,6 @@ struct Array<T> {\n     f32: [T; 32],\n }\n \n-// FIXME(#44580): merge with `Array` once `[T; N]: Clone` where `T: Clone`\n-#[derive(Clone, Copy)]\n-struct CopyArray<T: Copy> {\n-    f00: [T; 00],\n-    f01: [T; 01],\n-    f02: [T; 02],\n-    f03: [T; 03],\n-    f04: [T; 04],\n-    f05: [T; 05],\n-    f06: [T; 06],\n-    f07: [T; 07],\n-    f08: [T; 08],\n-    f09: [T; 09],\n-    f10: [T; 10],\n-    f11: [T; 11],\n-    f12: [T; 12],\n-    f13: [T; 13],\n-    f14: [T; 14],\n-    f15: [T; 15],\n-    f16: [T; 16],\n-    f17: [T; 17],\n-    f18: [T; 18],\n-    f19: [T; 19],\n-    f20: [T; 20],\n-    f21: [T; 21],\n-    f22: [T; 22],\n-    f23: [T; 23],\n-    f24: [T; 24],\n-    f25: [T; 25],\n-    f26: [T; 26],\n-    f27: [T; 27],\n-    f28: [T; 28],\n-    f29: [T; 29],\n-    f30: [T; 30],\n-    f31: [T; 31],\n-    f32: [T; 32],\n-}\n-\n #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]\n struct Fn<A, B, C, D, E, F, G, H, I, J, K, L> {\n     f00: fn(),"}]}