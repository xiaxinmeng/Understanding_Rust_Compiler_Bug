{"sha": "ad4ccf966bea9bf374fa95500ad1f3d1ae6439e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNGNjZjk2NmJlYTliZjM3NGZhOTU1MDBhZDFmM2QxYWU2NDM5ZTk=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-05T15:28:18Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-05T15:28:18Z"}, "message": "Remove unneeded call to with_default_session_globals in rustdoc highlight", "tree": {"sha": "eb6ef04f39bdbf068d62061137abf8189850faea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb6ef04f39bdbf068d62061137abf8189850faea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad4ccf966bea9bf374fa95500ad1f3d1ae6439e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad4ccf966bea9bf374fa95500ad1f3d1ae6439e9", "html_url": "https://github.com/rust-lang/rust/commit/ad4ccf966bea9bf374fa95500ad1f3d1ae6439e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad4ccf966bea9bf374fa95500ad1f3d1ae6439e9/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24acc388da2cdbe1ec79b6933402941b6fffb26b", "url": "https://api.github.com/repos/rust-lang/rust/commits/24acc388da2cdbe1ec79b6933402941b6fffb26b", "html_url": "https://github.com/rust-lang/rust/commit/24acc388da2cdbe1ec79b6933402941b6fffb26b"}], "stats": {"total": 37, "additions": 17, "deletions": 20}, "files": [{"sha": "f631f627fc255caeab1105a64243f8f2dfb1151f", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/ad4ccf966bea9bf374fa95500ad1f3d1ae6439e9/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad4ccf966bea9bf374fa95500ad1f3d1ae6439e9/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=ad4ccf966bea9bf374fa95500ad1f3d1ae6439e9", "patch": "@@ -13,7 +13,6 @@ use std::iter::Peekable;\n use rustc_lexer::{LiteralKind, TokenKind};\n use rustc_span::edition::Edition;\n use rustc_span::symbol::Symbol;\n-use rustc_span::with_default_session_globals;\n \n use super::format::Buffer;\n \n@@ -238,28 +237,26 @@ impl<'a> Classifier<'a> {\n     /// possibly giving it an HTML span with a class specifying what flavor of\n     /// token is used.\n     fn highlight(mut self, sink: &mut dyn FnMut(Highlight<'a>)) {\n-        with_default_session_globals(|| {\n-            loop {\n-                if self\n-                    .tokens\n-                    .peek()\n-                    .map(|t| matches!(t.0, TokenKind::Colon | TokenKind::Ident))\n-                    .unwrap_or(false)\n-                {\n-                    let tokens = self.get_full_ident_path();\n-                    for (token, start, end) in tokens {\n-                        let text = &self.src[start..end];\n-                        self.advance(token, text, sink);\n-                        self.byte_pos += text.len() as u32;\n-                    }\n-                }\n-                if let Some((token, text)) = self.next() {\n+        loop {\n+            if self\n+                .tokens\n+                .peek()\n+                .map(|t| matches!(t.0, TokenKind::Colon | TokenKind::Ident))\n+                .unwrap_or(false)\n+            {\n+                let tokens = self.get_full_ident_path();\n+                for (token, start, end) in tokens {\n+                    let text = &self.src[start..end];\n                     self.advance(token, text, sink);\n-                } else {\n-                    break;\n+                    self.byte_pos += text.len() as u32;\n                 }\n             }\n-        })\n+            if let Some((token, text)) = self.next() {\n+                self.advance(token, text, sink);\n+            } else {\n+                break;\n+            }\n+        }\n     }\n \n     /// Single step of highlighting. This will classify `token`, but maybe also"}]}