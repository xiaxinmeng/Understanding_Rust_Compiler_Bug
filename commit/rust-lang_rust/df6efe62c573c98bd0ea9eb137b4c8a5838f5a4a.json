{"sha": "df6efe62c573c98bd0ea9eb137b4c8a5838f5a4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmNmVmZTYyYzU3M2M5OGJkMGVhOWViMTM3YjRjOGE1ODM4ZjVhNGE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-20T11:53:19Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-20T11:53:19Z"}, "message": "make stuff private", "tree": {"sha": "2120b809a11b0e67fad9e0d9c21aa71d9b18b2f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2120b809a11b0e67fad9e0d9c21aa71d9b18b2f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df6efe62c573c98bd0ea9eb137b4c8a5838f5a4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df6efe62c573c98bd0ea9eb137b4c8a5838f5a4a", "html_url": "https://github.com/rust-lang/rust/commit/df6efe62c573c98bd0ea9eb137b4c8a5838f5a4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df6efe62c573c98bd0ea9eb137b4c8a5838f5a4a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b617e3bf8252887a3eb1ce76d4b62cbee74e551", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b617e3bf8252887a3eb1ce76d4b62cbee74e551", "html_url": "https://github.com/rust-lang/rust/commit/5b617e3bf8252887a3eb1ce76d4b62cbee74e551"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "1f43aa9f9fe999645b030b2c16ecb432882197b6", "filename": "crates/ra_syntax/src/parser_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/df6efe62c573c98bd0ea9eb137b4c8a5838f5a4a/crates%2Fra_syntax%2Fsrc%2Fparser_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df6efe62c573c98bd0ea9eb137b4c8a5838f5a4a/crates%2Fra_syntax%2Fsrc%2Fparser_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparser_impl.rs?ref=df6efe62c573c98bd0ea9eb137b4c8a5838f5a4a", "patch": "@@ -68,7 +68,7 @@ pub(crate) struct ParserImpl<'t> {\n }\n \n impl<'t> ParserImpl<'t> {\n-    pub(crate) fn new(inp: &'t ParserInput<'t>) -> ParserImpl<'t> {\n+    fn new(inp: &'t ParserInput<'t>) -> ParserImpl<'t> {\n         ParserImpl {\n             parser_input: inp,\n             pos: InputPosition::new(),\n@@ -77,7 +77,7 @@ impl<'t> ParserImpl<'t> {\n         }\n     }\n \n-    pub(crate) fn into_events(self) -> Vec<Event> {\n+    fn into_events(self) -> Vec<Event> {\n         assert_eq!(self.nth(0), EOF);\n         self.events\n     }"}]}