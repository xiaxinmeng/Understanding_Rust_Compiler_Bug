{"sha": "83814fd8ab30e2744d2fb17bdcf5b59840673863", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzODE0ZmQ4YWIzMGUyNzQ0ZDJmYjE3YmRjZjViNTk4NDA2NzM4NjM=", "commit": {"author": {"name": "Clar Charr", "email": "clar@charr.xyz", "date": "2017-03-10T05:23:54Z"}, "committer": {"name": "Clar Charr", "email": "clar@charr.xyz", "date": "2017-03-10T17:15:30Z"}, "message": "OsString::shrink_to_fit.", "tree": {"sha": "12a23eb2f82f8b2432d1b1942d6fc1b47be16e37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12a23eb2f82f8b2432d1b1942d6fc1b47be16e37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83814fd8ab30e2744d2fb17bdcf5b59840673863", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83814fd8ab30e2744d2fb17bdcf5b59840673863", "html_url": "https://github.com/rust-lang/rust/commit/83814fd8ab30e2744d2fb17bdcf5b59840673863", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83814fd8ab30e2744d2fb17bdcf5b59840673863/comments", "author": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec87925325c005922977ebf9b10dc9e98d8a6d40", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec87925325c005922977ebf9b10dc9e98d8a6d40", "html_url": "https://github.com/rust-lang/rust/commit/ec87925325c005922977ebf9b10dc9e98d8a6d40"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "41bdd9c51d458e1c9d85f34cfdd1f0cc1ec6386a", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/83814fd8ab30e2744d2fb17bdcf5b59840673863/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83814fd8ab30e2744d2fb17bdcf5b59840673863/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=83814fd8ab30e2744d2fb17bdcf5b59840673863", "patch": "@@ -205,6 +205,12 @@ impl OsString {\n         self.inner.reserve_exact(additional)\n     }\n \n+    /// Shrinks the capacity of the `OsString` to match its length.\n+    #[unstable(feature = \"osstring_shrink_to_fit\", issue = \"40421\")]\n+    pub fn shrink_to_fit(&mut self) {\n+        self.inner.shrink_to_fit()\n+    }\n+\n     /// Converts this `OsString` into a boxed `OsStr`.\n     #[unstable(feature = \"into_boxed_os_str\", issue = \"0\")]\n     pub fn into_boxed_os_str(self) -> Box<OsStr> {"}, {"sha": "474d59eed83d1daa3bf3b8b00b6e73edec840688", "filename": "src/libstd/sys/redox/os_str.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/83814fd8ab30e2744d2fb17bdcf5b59840673863/src%2Flibstd%2Fsys%2Fredox%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83814fd8ab30e2744d2fb17bdcf5b59840673863/src%2Flibstd%2Fsys%2Fredox%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fos_str.rs?ref=83814fd8ab30e2744d2fb17bdcf5b59840673863", "patch": "@@ -83,6 +83,11 @@ impl Buf {\n         self.inner.reserve_exact(additional)\n     }\n \n+    #[inline]\n+    pub fn shrink_to_fit(&mut self) {\n+        self.inner.shrink_to_fit()\n+    }\n+\n     pub fn as_slice(&self) -> &Slice {\n         unsafe { mem::transmute(&*self.inner) }\n     }"}, {"sha": "c27599ec0206f8ae46b581c658e80fa215b7ebe2", "filename": "src/libstd/sys/unix/os_str.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/83814fd8ab30e2744d2fb17bdcf5b59840673863/src%2Flibstd%2Fsys%2Funix%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83814fd8ab30e2744d2fb17bdcf5b59840673863/src%2Flibstd%2Fsys%2Funix%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos_str.rs?ref=83814fd8ab30e2744d2fb17bdcf5b59840673863", "patch": "@@ -83,6 +83,11 @@ impl Buf {\n         self.inner.reserve_exact(additional)\n     }\n \n+    #[inline]\n+    pub fn shrink_to_fit(&mut self) {\n+        self.inner.shrink_to_fit()\n+    }\n+\n     pub fn as_slice(&self) -> &Slice {\n         unsafe { mem::transmute(&*self.inner) }\n     }"}, {"sha": "b02b06e1ef2e1510aed1b7885a9efaf70655f9ac", "filename": "src/libstd/sys/windows/os_str.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83814fd8ab30e2744d2fb17bdcf5b59840673863/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83814fd8ab30e2744d2fb17bdcf5b59840673863/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs?ref=83814fd8ab30e2744d2fb17bdcf5b59840673863", "patch": "@@ -89,6 +89,10 @@ impl Buf {\n         self.inner.reserve_exact(additional)\n     }\n \n+    pub fn shrink_to_fit(&mut self) {\n+        self.inner.shrink_to_fit()\n+    }\n+\n     #[inline]\n     pub fn into_box(self) -> Box<Slice> {\n         unsafe { mem::transmute(self.inner.into_box()) }"}, {"sha": "b486d4ffda3fd61c239b94d61f9a03e9b758e52e", "filename": "src/libstd/sys_common/wtf8.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/83814fd8ab30e2744d2fb17bdcf5b59840673863/src%2Flibstd%2Fsys_common%2Fwtf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83814fd8ab30e2744d2fb17bdcf5b59840673863/src%2Flibstd%2Fsys_common%2Fwtf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fwtf8.rs?ref=83814fd8ab30e2744d2fb17bdcf5b59840673863", "patch": "@@ -236,6 +236,11 @@ impl Wtf8Buf {\n         self.bytes.reserve_exact(additional)\n     }\n \n+    #[inline]\n+    pub fn shrink_to_fit(&mut self) {\n+        self.bytes.shrink_to_fit()\n+    }\n+\n     /// Returns the number of bytes that this string buffer can hold without reallocating.\n     #[inline]\n     pub fn capacity(&self) -> usize {"}]}