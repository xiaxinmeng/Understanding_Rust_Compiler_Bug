{"sha": "8ade28e9a26a27153bda67cd5213411bfbd95ff3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhZGUyOGU5YTI2YTI3MTUzYmRhNjdjZDUyMTM0MTFiZmJkOTVmZjM=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2016-08-14T17:29:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-14T17:29:49Z"}, "message": "Rollup merge of #35574 - badboy:emscripten-test-fixes, r=brson\n\nEmscripten test fixes\n\nThis picks up parts of #31623 to disable certain tests that emscripten can't run, as threads/processes are not supported.\nI re-applied @tomaka's changes manually, I can rebase those commits with his credentials if he wants.\n\nIt also disables jemalloc for emscripten (at least in Rustbuild, I have to check if there is another setting for the same thing in the old makefile approach).\n\nThis should not impact anything for normal builds.", "tree": {"sha": "972c008b61710f32382c2132641f7433048c2513", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/972c008b61710f32382c2132641f7433048c2513"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ade28e9a26a27153bda67cd5213411bfbd95ff3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ade28e9a26a27153bda67cd5213411bfbd95ff3", "html_url": "https://github.com/rust-lang/rust/commit/8ade28e9a26a27153bda67cd5213411bfbd95ff3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ade28e9a26a27153bda67cd5213411bfbd95ff3/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3cede2257424d3d1879618a784974b967491b9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3cede2257424d3d1879618a784974b967491b9b", "html_url": "https://github.com/rust-lang/rust/commit/c3cede2257424d3d1879618a784974b967491b9b"}, {"sha": "60599df03b094c81923ab863c6fd616ef2c15806", "url": "https://api.github.com/repos/rust-lang/rust/commits/60599df03b094c81923ab863c6fd616ef2c15806", "html_url": "https://github.com/rust-lang/rust/commit/60599df03b094c81923ab863c6fd616ef2c15806"}], "stats": {"total": 81, "additions": 68, "deletions": 13}, "files": [{"sha": "d6ac3ef6c9c5024d8c1be674518fa221bfdf41bc", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -98,7 +98,8 @@ pub fn check(build: &mut Build) {\n         if target.contains(\"rumprun\") ||\n            target.contains(\"bitrig\") ||\n            target.contains(\"openbsd\") ||\n-           target.contains(\"msvc\") {\n+           target.contains(\"msvc\") ||\n+           target.contains(\"emscripten\") {\n             build.config.use_jemalloc = false;\n         }\n "}, {"sha": "23687e10e476d40de9750064d09ded52a0624369", "filename": "src/libstd/sys/unix/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fmod.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -83,11 +83,11 @@ pub fn init() {\n         }\n     }\n \n-    #[cfg(not(target_os = \"nacl\"))]\n+    #[cfg(not(any(target_os = \"nacl\", target_os = \"emscripten\")))]\n     unsafe fn reset_sigpipe() {\n         assert!(signal(libc::SIGPIPE, libc::SIG_IGN) != !0);\n     }\n-    #[cfg(target_os = \"nacl\")]\n+    #[cfg(any(target_os = \"nacl\", target_os = \"emscripten\"))]\n     unsafe fn reset_sigpipe() {}\n }\n "}, {"sha": "c29e87f91c9a7e247471f2c4749e3264e663d572", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -551,11 +551,13 @@ pub fn home_dir() -> Option<PathBuf> {\n \n     #[cfg(any(target_os = \"android\",\n               target_os = \"ios\",\n-              target_os = \"nacl\"))]\n+              target_os = \"nacl\",\n+              target_os = \"emscripten\"))]\n     unsafe fn fallback() -> Option<OsString> { None }\n     #[cfg(not(any(target_os = \"android\",\n                   target_os = \"ios\",\n-                  target_os = \"nacl\")))]\n+                  target_os = \"nacl\",\n+                  target_os = \"emscripten\")))]\n     unsafe fn fallback() -> Option<OsString> {\n         #[cfg(not(target_os = \"solaris\"))]\n         unsafe fn getpwduid_r(me: libc::uid_t, passwd: &mut libc::passwd,"}, {"sha": "75e10d2585308cecb85d17e374fff32c0842509f", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -81,8 +81,7 @@ impl Thread {\n     }\n \n     #[cfg(any(target_os = \"linux\",\n-              target_os = \"android\",\n-              target_os = \"emscripten\"))]\n+              target_os = \"android\"))]\n     pub fn set_name(name: &CStr) {\n         const PR_SET_NAME: libc::c_int = 15;\n         // pthread wrapper only appeared in glibc 2.12, so we use syscall\n@@ -118,9 +117,9 @@ impl Thread {\n                                      name.as_ptr() as *mut libc::c_void);\n         }\n     }\n-    #[cfg(any(target_env = \"newlib\", target_os = \"solaris\"))]\n+    #[cfg(any(target_env = \"newlib\", target_os = \"solaris\", target_os = \"emscripten\"))]\n     pub fn set_name(_name: &CStr) {\n-        // Newlib and Illumos has no way to set a thread name.\n+        // Newlib, Illumos and Emscripten have no way to set a thread name.\n     }\n \n     pub fn sleep(dur: Duration) {"}, {"sha": "680ad3ecd64a6c156cb65fce6d67a90e08be4d8e", "filename": "src/libunwind/libunwind.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Flibunwind%2Flibunwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Flibunwind%2Flibunwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunwind%2Flibunwind.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -60,7 +60,6 @@ pub const unwinder_private_data_size: usize = 2;\n pub const unwinder_private_data_size: usize = 2;\n \n #[cfg(target_arch = \"asmjs\")]\n-// FIXME: Copied from arm. Need to confirm.\n pub const unwinder_private_data_size: usize = 20;\n \n #[repr(C)]"}, {"sha": "f884bb2098eb192d560334cfafd13605ae51b665", "filename": "src/test/run-pass-fulldeps/linkage-visibility.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass-fulldeps%2Flinkage-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass-fulldeps%2Flinkage-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Flinkage-visibility.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -12,6 +12,7 @@\n // ignore-android: FIXME(#10356)\n // ignore-windows: std::dynamic_lib does not work on Windows well\n // ignore-musl\n+// ignore-emscripten no dynamic linking\n \n extern crate linkage_visibility as foo;\n "}, {"sha": "26261348020f894dd832840396cd0348952255a5", "filename": "src/test/run-pass-fulldeps/logging-enabled.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass-fulldeps%2Flogging-enabled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass-fulldeps%2Flogging-enabled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Flogging-enabled.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // exec-env:RUST_LOG=logging_enabled=info\n+// ignore-emscripten: FIXME(#31622)\n \n \n #![feature(rustc_private)]"}, {"sha": "183a522bba749290fc1cae429d3ebef7fe6c4f4e", "filename": "src/test/run-pass-fulldeps/logging-separate-lines.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass-fulldeps%2Flogging-separate-lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass-fulldeps%2Flogging-separate-lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Flogging-separate-lines.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -11,6 +11,7 @@\n // ignore-windows\n // exec-env:RUST_LOG=debug\n // compile-flags:-C debug-assertions=y\n+// ignore-emscripten: FIXME(#31622)\n \n #![feature(rustc_private)]\n "}, {"sha": "838005cbc91194ad8c05eea3ec3f2d1320ef390e", "filename": "src/test/run-pass/backtrace-debuginfo.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -17,6 +17,7 @@\n \n // compile-flags:-g -Cllvm-args=-enable-tail-merge=0\n // ignore-pretty as this critically relies on line numbers\n+// ignore-emscripten spawning processes is not supported\n \n use std::io;\n use std::io::prelude::*;"}, {"sha": "f26706d1754e018715d6af38de71dd730460367e", "filename": "src/test/run-pass/backtrace.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbacktrace.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -10,6 +10,7 @@\n \n // no-pretty-expanded FIXME #15189\n // ignore-android FIXME #17520\n+// ignore-emscripten spawning processes is not supported\n // compile-flags:-g\n \n use std::env;"}, {"sha": "5b83ce48e5daddd793c9a948de233e06b20bc70e", "filename": "src/test/run-pass/command-before-exec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fcommand-before-exec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fcommand-before-exec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcommand-before-exec.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // ignore-windows - this is a unix-specific test\n+// ignore-emscripten\n \n #![feature(process_exec, libc)]\n "}, {"sha": "130526e72b19cadf6623bbd7859085256df9c83b", "filename": "src/test/run-pass/command-exec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fcommand-exec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fcommand-exec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcommand-exec.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // ignore-windows - this is a unix-specific test\n+// ignore-emscripten\n // ignore-pretty\n \n #![feature(process_exec)]"}, {"sha": "a8014768d78470c14b7196c26d3410a031ba66a1", "filename": "src/test/run-pass/drop-flag-sanity-check.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fdrop-flag-sanity-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fdrop-flag-sanity-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdrop-flag-sanity-check.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z force-dropflag-checks=on\n+// ignore-emscripten\n \n // Quick-and-dirty test to ensure -Z force-dropflag-checks=on works as\n // expected. Note that the inlined drop-flag is slated for removal"}, {"sha": "912cb4c5e877500055966d9e39931e9ed4b0fa8a", "filename": "src/test/run-pass/drop-trait-enum.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fdrop-trait-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fdrop-trait-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdrop-trait-enum.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten no threads support\n+\n #![allow(unknown_features)]\n #![feature(box_syntax)]\n "}, {"sha": "89af1db7c78f1f85d273958c416c9546d0ac76ea", "filename": "src/test/run-pass/env-args-reverse-iterator.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fenv-args-reverse-iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fenv-args-reverse-iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenv-args-reverse-iterator.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten\n+\n use std::env::args;\n use std::process::Command;\n "}, {"sha": "bcb0c62d9fef4cc968976f9b2d8b24a02755a961", "filename": "src/test/run-pass/env-home-dir.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fenv-home-dir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fenv-home-dir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenv-home-dir.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten\n \n #![feature(path)]\n "}, {"sha": "a96d189afaa8698d80d8ee5d81292ea9646f0f4a", "filename": "src/test/run-pass/exec-env.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fexec-env.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fexec-env.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexec-env.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // exec-env:TEST_EXEC_ENV=22\n-\n+// ignore-emscripten FIXME: issue #31622\n \n use std::env;\n "}, {"sha": "8efc4cb1b17257debcd8204525c4905614560cab", "filename": "src/test/run-pass/hashmap-memory.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten No support for threads\n+\n #![allow(unknown_features)]\n #![feature(std_misc)]\n "}, {"sha": "cfae9903a95e5ecd5204d7254228ee7f245319a7", "filename": "src/test/run-pass/intrinsic-alignment.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -24,7 +24,8 @@ mod rusti {\n           target_os = \"dragonfly\",\n           target_os = \"netbsd\",\n           target_os = \"openbsd\",\n-          target_os = \"solaris\"))]\n+          target_os = \"solaris\",\n+          target_os = \"emscripten\"))]\n mod m {\n     #[main]\n     #[cfg(target_arch = \"x86\")]"}, {"sha": "b350bd1a4ccbf84526ab3be5e21bd42204b83c9d", "filename": "src/test/run-pass/issue-10626.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-10626.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-10626.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-10626.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten\n \n // Make sure that if a process doesn't have its stdio/stderr descriptors set up\n // that we don't die in a large ball of fire"}, {"sha": "8f455c2fe4e1e73cac07ffc38e92cc6cd30ccf49", "filename": "src/test/run-pass/issue-12133-3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-12133-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-12133-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-12133-3.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -12,6 +12,7 @@\n // aux-build:issue-12133-dylib.rs\n // aux-build:issue-12133-dylib2.rs\n // ignore-musl\n+// ignore-emscripten no dylib support\n \n // pretty-expanded FIXME #23616\n "}, {"sha": "e1c2c5684fb5f18f34abf436c5de8245f2668f38", "filename": "src/test/run-pass/issue-13304.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-13304.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-13304.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-13304.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // ignore-aarch64\n+// ignore-emscripten\n #![feature(io, process_capture)]\n \n use std::env;"}, {"sha": "513ab91489c8d98ea96e970c8f29a4a1341ddea0", "filename": "src/test/run-pass/issue-14456.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-14456.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-14456.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14456.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten\n \n #![feature(io, process_capture)]\n "}, {"sha": "ffe6b646794e14da62dfa83ec2afdf0385b3276d", "filename": "src/test/run-pass/issue-14940.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-14940.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-14940.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14940.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten\n \n use std::env;\n use std::process::Command;"}, {"sha": "d4f3d15b320d7987a3fa2172137372f406006fc6", "filename": "src/test/run-pass/issue-16272.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-16272.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-16272.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16272.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // ignore-aarch64\n+// ignore-emscripten\n \n use std::process::Command;\n use std::env;"}, {"sha": "52c7911075ae9d3d51542e043286dea6c3328d72", "filename": "src/test/run-pass/issue-20091.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-20091.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-20091.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20091.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // ignore-aarch64\n+// ignore-emscripten\n #![feature(std_misc, os)]\n \n #[cfg(unix)]"}, {"sha": "393757035141d6e4137ff3c27ece14d55b4467e6", "filename": "src/test/run-pass/issue-2190-1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-2190-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-2190-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2190-1.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // pretty-expanded FIXME #23616\n+// ignore-emscripten\n \n use std::thread::Builder;\n "}, {"sha": "9b2b474351df6f4ec14da92d4445c28d570d4ad5", "filename": "src/test/run-pass/issue-24313.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-24313.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-24313.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-24313.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten\n+\n use std::thread;\n use std::env;\n use std::process::Command;"}, {"sha": "a905727afff4fcfd22d6ae1afd75b6880a45bceb", "filename": "src/test/run-pass/issue-28950.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-28950.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-28950.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-28950.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten\n // compile-flags: -Z orbit=off\n // (blows the stack with MIR trans and no optimizations)\n "}, {"sha": "9252762d1bdad191614920e1a1961858dd1b8d7a", "filename": "src/test/run-pass/issue-29485.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-29485.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-29485.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-29485.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue-29485.rs\n+// ignore-emscripten\n \n #[feature(recover)]\n "}, {"sha": "035911302cf2499e1fe9d4985c55093734b2ba85", "filename": "src/test/run-pass/issue-30490.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-30490.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-30490.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-30490.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten\n+\n // Previously libstd would set stdio descriptors of a child process\n // by `dup`ing the requested descriptors to inherit directly into the\n // stdio descriptors. This, however, would incorrectly handle cases"}, {"sha": "76728a0d354b2c9267acccbf74561eab781d6ebf", "filename": "src/test/run-pass/issue-33770.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-33770.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fissue-33770.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-33770.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten\n+\n use std::process::{Command, Stdio};\n use std::env;\n use std::sync::{Mutex, RwLock};"}, {"sha": "17abf9cb1f251322b11b799fd5c449c02d2c32a8", "filename": "src/test/run-pass/linkage1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Flinkage1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Flinkage1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flinkage1.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -10,6 +10,7 @@\n \n // ignore-windows\n // ignore-macos\n+// ignore-emscripten\n // aux-build:linkage1.rs\n \n #![feature(linkage)]"}, {"sha": "86fe06b176532faf6f5f90922fa581a5eac05311", "filename": "src/test/run-pass/multi-panic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fmulti-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fmulti-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmulti-panic.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten\n+\n fn check_for_no_backtrace(test: std::process::Output) {\n     assert!(!test.status.success());\n     let err = String::from_utf8_lossy(&test.stderr);"}, {"sha": "ad4d56ec50ac069f2973ce35953d7c35e7de7cdc", "filename": "src/test/run-pass/no-stdio.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fno-stdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fno-stdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fno-stdio.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten\n+\n #![feature(libc)]\n \n extern crate libc;"}, {"sha": "1ad43f5f17fb9b483fa35750524535b78a38f518", "filename": "src/test/run-pass/panic-handler-chain.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fpanic-handler-chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fpanic-handler-chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-handler-chain.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -7,6 +7,9 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n+\n+// ignore-emscripten no threads support\n+\n #![feature(panic_handler, const_fn, std_panic)]\n \n use std::sync::atomic::{AtomicUsize, Ordering};"}, {"sha": "a5d408448a033388d4da4f69a564ba474d28beaa", "filename": "src/test/run-pass/process-exit.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fprocess-exit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fprocess-exit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-exit.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten\n+\n use std::env;\n use std::process::{self, Command, Stdio};\n "}, {"sha": "cce5ef4fe17c37dd26a1628535c2f0a12e02b577", "filename": "src/test/run-pass/process-remove-from-env.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fprocess-remove-from-env.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fprocess-remove-from-env.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-remove-from-env.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten\n \n use std::process::Command;\n use std::env;"}, {"sha": "d3d847127ee954430d82ee0366dd08114344ba45", "filename": "src/test/run-pass/process-spawn-with-unicode-params.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fprocess-spawn-with-unicode-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fprocess-spawn-with-unicode-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-spawn-with-unicode-params.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -17,6 +17,7 @@\n // intact.\n \n // ignore-aarch64\n+// ignore-emscripten\n \n use std::io::prelude::*;\n use std::io;"}, {"sha": "4863979b3f6c2bdd0731cc40add9a6cdd0f416d5", "filename": "src/test/run-pass/rec-align-u64.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Frec-align-u64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Frec-align-u64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frec-align-u64.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -42,7 +42,8 @@ struct Outer {\n           target_os = \"dragonfly\",\n           target_os = \"netbsd\",\n           target_os = \"openbsd\",\n-          target_os = \"solaris\"))]\n+          target_os = \"solaris\",\n+          target_os = \"emscripten\"))]\n mod m {\n     #[cfg(target_arch = \"x86\")]\n     pub mod m {"}, {"sha": "f81c3f2e99d3672ac8176fb41b45b83b094e807e", "filename": "src/test/run-pass/running-with-no-runtime.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Frunning-with-no-runtime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Frunning-with-no-runtime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frunning-with-no-runtime.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten\n+\n #![feature(start)]\n \n use std::ffi::CStr;"}, {"sha": "df64d7140b4b5a2c6b628c249410900cc9b132b4", "filename": "src/test/run-pass/segfault-no-out-of-stack.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fsegfault-no-out-of-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fsegfault-no-out-of-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsegfault-no-out-of-stack.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten can't run commands\n+\n #![feature(libc)]\n \n extern crate libc;"}, {"sha": "c7759ca743bbb6e3669233f0fc75705b4af85624", "filename": "src/test/run-pass/signal-exit-status.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // ignore-windows\n+// ignore-emscripten\n \n use std::env;\n use std::process::Command;"}, {"sha": "4eb4720e8d7be43f611dc444057d38b780d74a48", "filename": "src/test/run-pass/sigpipe-should-be-ignored.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fsigpipe-should-be-ignored.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fsigpipe-should-be-ignored.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsigpipe-should-be-ignored.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -12,6 +12,7 @@\n // doesn't die in a ball of fire, but rather it's gracefully handled.\n \n // ignore-aarch64\n+// ignore-emscripten\n \n use std::env;\n use std::io::prelude::*;"}, {"sha": "9acc6ff8cf08474f2ec151ba9b2b8161d499c9f6", "filename": "src/test/run-pass/sleep.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fsleep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fsleep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsleep.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten no threads support\n+\n use std::thread::{self, sleep};\n use std::time::Duration;\n use std::sync::{Arc, Mutex};"}, {"sha": "1d1c83cf12a15bb2eba21f7cba09a4f19ec62322", "filename": "src/test/run-pass/wait-forked-but-failed-child.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fwait-forked-but-failed-child.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ade28e9a26a27153bda67cd5213411bfbd95ff3/src%2Ftest%2Frun-pass%2Fwait-forked-but-failed-child.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fwait-forked-but-failed-child.rs?ref=8ade28e9a26a27153bda67cd5213411bfbd95ff3", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten\n \n #![feature(libc)]\n "}]}