{"sha": "4c5e42a1396396dcf36f84fda2f08c5f9fa6b6c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjNWU0MmExMzk2Mzk2ZGNmMzZmODRmZGEyZjA4YzVmOWZhNmI2YzQ=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-26T01:57:08Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-26T01:57:08Z"}, "message": "Make 'fail fail;' compile.\n\nCloses #972", "tree": {"sha": "0c65ef95559913d7a8bb157edeaf5f928fffab06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c65ef95559913d7a8bb157edeaf5f928fffab06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c5e42a1396396dcf36f84fda2f08c5f9fa6b6c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c5e42a1396396dcf36f84fda2f08c5f9fa6b6c4", "html_url": "https://github.com/rust-lang/rust/commit/4c5e42a1396396dcf36f84fda2f08c5f9fa6b6c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c5e42a1396396dcf36f84fda2f08c5f9fa6b6c4/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6164b724029d652e539a76b859c63cd7937157d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6164b724029d652e539a76b859c63cd7937157d8", "html_url": "https://github.com/rust-lang/rust/commit/6164b724029d652e539a76b859c63cd7937157d8"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "e5190aaa635e0a02ed58e6856388ebbee9b9b337", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4c5e42a1396396dcf36f84fda2f08c5f9fa6b6c4/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c5e42a1396396dcf36f84fda2f08c5f9fa6b6c4/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=4c5e42a1396396dcf36f84fda2f08c5f9fa6b6c4", "patch": "@@ -438,11 +438,13 @@ fn align_of(cx: @block_ctxt, t: ty::t) -> result {\n }\n \n fn alloca(cx: @block_ctxt, t: TypeRef) -> ValueRef {\n+    if cx.unreachable { ret llvm::LLVMGetUndef(t); }\n     ret Alloca(new_raw_block_ctxt(cx.fcx, cx.fcx.llstaticallocas), t);\n }\n \n fn dynastack_alloca(cx: @block_ctxt, t: TypeRef, n: ValueRef, ty: ty::t) ->\n    ValueRef {\n+    if cx.unreachable { ret llvm::LLVMGetUndef(t); }\n     let bcx = cx;\n     let dy_cx = new_raw_block_ctxt(cx.fcx, cx.fcx.lldynamicallocas);\n     let lltaskptr = bcx_fcx(bcx).lltaskptr;\n@@ -4474,6 +4476,8 @@ fn trans_fail_expr(cx: @block_ctxt, sp_opt: option::t<span>,\n                                                 ty::mk_mach(tcx,\n                                                             ast::ty_u8)));\n             ret trans_fail_value(bcx, sp_opt, data);\n+        } else if bcx.unreachable {\n+            ret rslt(bcx, C_nil());\n         } else {\n             bcx_ccx(cx).sess.span_bug(expr.span,\n                                       \"fail called with unsupported type \" +"}]}