{"sha": "c6c14b928f45302238f4dd4e32ee97e50af1bd6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2YzE0YjkyOGY0NTMwMjIzOGY0ZGQ0ZTMyZWU5N2U1MGFmMWJkNmU=", "commit": {"author": {"name": "Sebastian Gesemann", "email": "s.gesemann@gmail.com", "date": "2015-01-16T10:22:46Z"}, "committer": {"name": "Sebastian Gesemann", "email": "s.gesemann@gmail.com", "date": "2015-01-16T10:22:46Z"}, "message": "inline forward_xxx_xxx_binop macros as per suggestion", "tree": {"sha": "9a0f400eff2bf9059c0d32ac509fd3543d21300d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a0f400eff2bf9059c0d32ac509fd3543d21300d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6c14b928f45302238f4dd4e32ee97e50af1bd6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6c14b928f45302238f4dd4e32ee97e50af1bd6e", "html_url": "https://github.com/rust-lang/rust/commit/c6c14b928f45302238f4dd4e32ee97e50af1bd6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6c14b928f45302238f4dd4e32ee97e50af1bd6e/comments", "author": {"login": "sellibitze", "id": 290865, "node_id": "MDQ6VXNlcjI5MDg2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/290865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sellibitze", "html_url": "https://github.com/sellibitze", "followers_url": "https://api.github.com/users/sellibitze/followers", "following_url": "https://api.github.com/users/sellibitze/following{/other_user}", "gists_url": "https://api.github.com/users/sellibitze/gists{/gist_id}", "starred_url": "https://api.github.com/users/sellibitze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sellibitze/subscriptions", "organizations_url": "https://api.github.com/users/sellibitze/orgs", "repos_url": "https://api.github.com/users/sellibitze/repos", "events_url": "https://api.github.com/users/sellibitze/events{/privacy}", "received_events_url": "https://api.github.com/users/sellibitze/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sellibitze", "id": 290865, "node_id": "MDQ6VXNlcjI5MDg2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/290865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sellibitze", "html_url": "https://github.com/sellibitze", "followers_url": "https://api.github.com/users/sellibitze/followers", "following_url": "https://api.github.com/users/sellibitze/following{/other_user}", "gists_url": "https://api.github.com/users/sellibitze/gists{/gist_id}", "starred_url": "https://api.github.com/users/sellibitze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sellibitze/subscriptions", "organizations_url": "https://api.github.com/users/sellibitze/orgs", "repos_url": "https://api.github.com/users/sellibitze/repos", "events_url": "https://api.github.com/users/sellibitze/events{/privacy}", "received_events_url": "https://api.github.com/users/sellibitze/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39676c8bf0ad0fe7249f788ab6ab6790360af73c", "url": "https://api.github.com/repos/rust-lang/rust/commits/39676c8bf0ad0fe7249f788ab6ab6790360af73c", "html_url": "https://github.com/rust-lang/rust/commit/39676c8bf0ad0fe7249f788ab6ab6790360af73c"}], "stats": {"total": 28, "additions": 3, "deletions": 25}, "files": [{"sha": "2007971d84dfbf0b7402dbed45ebd5d8e5516390", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 3, "deletions": 25, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c6c14b928f45302238f4dd4e32ee97e50af1bd6e/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6c14b928f45302238f4dd4e32ee97e50af1bd6e/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=c6c14b928f45302238f4dd4e32ee97e50af1bd6e", "patch": "@@ -120,9 +120,9 @@ macro_rules! forward_ref_unop {\n     }\n }\n \n-// implements the binary operator \"&T op U\"\n-// based on \"T + U\" where T and U are expected `Copy`able\n-macro_rules! forward_ref_val_binop {\n+// implements binary operators \"&T op U\", \"T op &U\", \"&T op &U\"\n+// based on \"T op U\" where T and U are expected to be `Copy`able\n+macro_rules! forward_ref_binop {\n     (impl $imp:ident, $method:ident for $t:ty, $u:ty) => {\n         #[unstable]\n         impl<'a> $imp<$u> for &'a $t {\n@@ -133,13 +133,7 @@ macro_rules! forward_ref_val_binop {\n                 $imp::$method(*self, other)\n             }\n         }\n-    }\n-}\n \n-// implements the binary operator \"T op &U\"\n-// based on \"T + U\" where T and U are expected `Copy`able\n-macro_rules! forward_val_ref_binop {\n-    (impl $imp:ident, $method:ident for $t:ty, $u:ty) => {\n         #[unstable]\n         impl<'a> $imp<&'a $u> for $t {\n             type Output = <$t as $imp<$u>>::Output;\n@@ -149,13 +143,7 @@ macro_rules! forward_val_ref_binop {\n                 $imp::$method(self, *other)\n             }\n         }\n-    }\n-}\n \n-// implements the binary operator \"&T op &U\"\n-// based on \"T + U\" where T and U are expected `Copy`able\n-macro_rules! forward_ref_ref_binop {\n-    (impl $imp:ident, $method:ident for $t:ty, $u:ty) => {\n         #[unstable]\n         impl<'a, 'b> $imp<&'a $u> for &'b $t {\n             type Output = <$t as $imp<$u>>::Output;\n@@ -168,16 +156,6 @@ macro_rules! forward_ref_ref_binop {\n     }\n }\n \n-// implements binary operators \"&T op U\", \"T op &U\", \"&T op &U\"\n-// based on \"T + U\" where T and U are expected `Copy`able\n-macro_rules! forward_ref_binop {\n-    (impl $imp:ident, $method:ident for $t:ty, $u:ty) => {\n-        forward_ref_val_binop! { impl $imp, $method for $t, $u }\n-        forward_val_ref_binop! { impl $imp, $method for $t, $u }\n-        forward_ref_ref_binop! { impl $imp, $method for $t, $u }\n-    }\n-}\n-\n /// The `Add` trait is used to specify the functionality of `+`.\n ///\n /// # Example"}]}