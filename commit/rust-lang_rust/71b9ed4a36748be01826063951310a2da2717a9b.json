{"sha": "71b9ed4a36748be01826063951310a2da2717a9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxYjllZDRhMzY3NDhiZTAxODI2MDYzOTUxMzEwYTJkYTI3MTdhOWI=", "commit": {"author": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2020-02-10T20:00:22Z"}, "committer": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2020-02-10T20:00:22Z"}, "message": "Avoid jumping to Rust code with user %rsp (reentry_panic)", "tree": {"sha": "09ac4fd1393603e4dfffa8e733085e85e07f9da9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09ac4fd1393603e4dfffa8e733085e85e07f9da9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71b9ed4a36748be01826063951310a2da2717a9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71b9ed4a36748be01826063951310a2da2717a9b", "html_url": "https://github.com/rust-lang/rust/commit/71b9ed4a36748be01826063951310a2da2717a9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71b9ed4a36748be01826063951310a2da2717a9b/comments", "author": null, "committer": null, "parents": [{"sha": "236ab6e6d631f073a8c3c7439af6b2ec58ce1f25", "url": "https://api.github.com/repos/rust-lang/rust/commits/236ab6e6d631f073a8c3c7439af6b2ec58ce1f25", "html_url": "https://github.com/rust-lang/rust/commit/236ab6e6d631f073a8c3c7439af6b2ec58ce1f25"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "ed4db287229dce8726c9ab5e2d911c6bbd3bbe61", "filename": "src/libstd/sys/sgx/abi/entry.S", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/71b9ed4a36748be01826063951310a2da2717a9b/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fentry.S", "raw_url": "https://github.com/rust-lang/rust/raw/71b9ed4a36748be01826063951310a2da2717a9b/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fentry.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fentry.S?ref=71b9ed4a36748be01826063951310a2da2717a9b", "patch": "@@ -144,13 +144,15 @@ elf_entry:\n \n /* This code needs to be called *after* the enclave stack has been setup. */\n /* There are 3 places where this needs to happen, so this is put in a macro. */\n-.macro sanitize_rflags\n+.macro entry_sanitize_final\n /*  Sanitize rflags received from user */\n /*    - DF flag: x86-64 ABI requires DF to be unset at function entry/exit */\n /*    - AC flag: AEX on misaligned memory accesses leaks side channel info */\n     pushfq\n     andq $~0x40400, (%rsp)\n     popfq\n+    bt $0,.Laborted(%rip)\n+    jc .Lreentry_panic\n .endm\n \n .text\n@@ -174,9 +176,6 @@ sgx_entry:\n     jz .Lskip_debug_init\n     mov %r10,%gs:tcsls_debug_panic_buf_ptr\n .Lskip_debug_init:\n-/*  check for abort */\n-    bt $0,.Laborted(%rip)\n-    jc .Lreentry_panic\n /*  check if returning from usercall */\n     mov %gs:tcsls_last_rsp,%r11\n     test %r11,%r11\n@@ -194,7 +193,7 @@ sgx_entry:\n     lea IMAGE_BASE(%rip),%rax\n     add %rax,%rsp\n     mov %rsp,%gs:tcsls_tos\n-    sanitize_rflags\n+    entry_sanitize_final\n /*  call tcs_init */\n /*  store caller-saved registers in callee-saved registers */\n     mov %rdi,%rbx\n@@ -212,7 +211,7 @@ sgx_entry:\n     mov %r15,%r9\n     jmp .Lafter_init\n .Lskip_init:\n-    sanitize_rflags\n+    entry_sanitize_final\n .Lafter_init:\n /*  call into main entry point */\n     load_tcsls_flag_secondary_bool cx /* RCX = entry() argument: secondary: bool */\n@@ -311,10 +310,10 @@ usercall:\n     movq $0,%gs:tcsls_last_rsp\n /*  restore callee-saved state, cf. \"save\" above */\n     mov %r11,%rsp\n-    sanitize_rflags\n     ldmxcsr (%rsp)\n     fldcw 4(%rsp)\n     add $8, %rsp\n+    entry_sanitize_final\n     pop %rbx\n     pop %rbp\n     pop %r12"}]}