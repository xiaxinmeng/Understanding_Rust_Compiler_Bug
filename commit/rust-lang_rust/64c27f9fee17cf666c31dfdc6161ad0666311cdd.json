{"sha": "64c27f9fee17cf666c31dfdc6161ad0666311cdd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0YzI3ZjlmZWUxN2NmNjY2YzMxZGZkYzYxNjFhZDA2NjYzMTFjZGQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-06T19:57:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-06T19:57:33Z"}, "message": "Rollup merge of #71796 - RalfJung:from-secs, r=nikomatsakis\n\nde-promote Duration::from_secs\n\nIn https://github.com/rust-lang/rust/pull/67531, we removed the `rustc_promotable` attribute from a bunch of `Duration` methods, but not from `Duration::from_secs`. This makes the current list of promotable functions the following (courtesy of @ecstatic-morse):\n\n* `INT::min_value`, `INT::max_value`\n* `std::mem::size_of`, `std::mem::align_of`\n* `RangeInclusive::new` (backing `x..=y`)\n* `std::ptr::null`, `std::ptr::null_mut`\n* `RawWaker::new`, `RawWakerVTable::new` ???\n* `Duration::from_secs`\n\nI feel like the last one stands out a bit here -- the rest are all very core language primitives, and `RawWaker` has a strong motivation for getting a `'static` vtable. But a `&'static Duration`? That seems unlikely. So I propose we no longer promote calls to `Duration::from_secs`, which is what this PR does.\n\nhttps://github.com/rust-lang/rust/pull/67531 saw zero regressions and I am not aware of anyone complaining that this broke their (non-cratered) code, so I consider it likely the same will be true here, but of course we'd do a crater run.\n\nSee [this document](https://github.com/rust-lang/const-eval/blob/master/promotion.md) for some more background on promotion and https://github.com/rust-lang/const-eval/issues/19 for some of the concerns around promoting function calls.", "tree": {"sha": "4f13c495e95ed31c7e27672a7f636f10ec18c9d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f13c495e95ed31c7e27672a7f636f10ec18c9d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64c27f9fee17cf666c31dfdc6161ad0666311cdd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe2/UvCRBK7hj4Ov3rIwAAdHIIACvDqZMpedvrtLzxCYYIzeQn\nQtilOasBN/qjqh6n0KPVzP59swzy9NYIOy9if+oPivXVT4XI4nkqcfMeqgryLMW/\nn1lNlx8JiDA/7Ecok+nGsYKZXtE0XbvlsGkpgcMA7/lhhDK9wU6KHJYlnOoAwzr+\nJPPoaB7FC114rUwTqHlT2qye5OdvFXoJVrzP327PagcDY/zXyBs1pYUtnEaUSuGh\nbvw8kHvXiFghpCFg4Rvc2z0mJEs0w6EhvPt8DjoL7ZAn2qx/OU2iNUw9AytEGzPv\nmCKJt/QO2RgMhwN5PU5HRSr0o9vRsS4c69/XObKn1OS4CSSCYSIYC8W8vfAL9Sk=\n=5WH1\n-----END PGP SIGNATURE-----\n", "payload": "tree 4f13c495e95ed31c7e27672a7f636f10ec18c9d3\nparent 118b50524b79e565f017e08bce9b90a16c63634f\nparent 58ae4a9a5388d9c2c5e4ac435ea69a2b456ab008\nauthor Ralf Jung <post@ralfj.de> 1591473453 +0200\ncommitter GitHub <noreply@github.com> 1591473453 +0200\n\nRollup merge of #71796 - RalfJung:from-secs, r=nikomatsakis\n\nde-promote Duration::from_secs\n\nIn https://github.com/rust-lang/rust/pull/67531, we removed the `rustc_promotable` attribute from a bunch of `Duration` methods, but not from `Duration::from_secs`. This makes the current list of promotable functions the following (courtesy of @ecstatic-morse):\n\n* `INT::min_value`, `INT::max_value`\n* `std::mem::size_of`, `std::mem::align_of`\n* `RangeInclusive::new` (backing `x..=y`)\n* `std::ptr::null`, `std::ptr::null_mut`\n* `RawWaker::new`, `RawWakerVTable::new` ???\n* `Duration::from_secs`\n\nI feel like the last one stands out a bit here -- the rest are all very core language primitives, and `RawWaker` has a strong motivation for getting a `'static` vtable. But a `&'static Duration`? That seems unlikely. So I propose we no longer promote calls to `Duration::from_secs`, which is what this PR does.\n\nhttps://github.com/rust-lang/rust/pull/67531 saw zero regressions and I am not aware of anyone complaining that this broke their (non-cratered) code, so I consider it likely the same will be true here, but of course we'd do a crater run.\n\nSee [this document](https://github.com/rust-lang/const-eval/blob/master/promotion.md) for some more background on promotion and https://github.com/rust-lang/const-eval/issues/19 for some of the concerns around promoting function calls.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64c27f9fee17cf666c31dfdc6161ad0666311cdd", "html_url": "https://github.com/rust-lang/rust/commit/64c27f9fee17cf666c31dfdc6161ad0666311cdd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64c27f9fee17cf666c31dfdc6161ad0666311cdd/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "118b50524b79e565f017e08bce9b90a16c63634f", "url": "https://api.github.com/repos/rust-lang/rust/commits/118b50524b79e565f017e08bce9b90a16c63634f", "html_url": "https://github.com/rust-lang/rust/commit/118b50524b79e565f017e08bce9b90a16c63634f"}, {"sha": "58ae4a9a5388d9c2c5e4ac435ea69a2b456ab008", "url": "https://api.github.com/repos/rust-lang/rust/commits/58ae4a9a5388d9c2c5e4ac435ea69a2b456ab008", "html_url": "https://github.com/rust-lang/rust/commit/58ae4a9a5388d9c2c5e4ac435ea69a2b456ab008"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "e2ceaf80c0cda6770f30083a8d1bcdc05d70b61b", "filename": "src/libcore/time.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/64c27f9fee17cf666c31dfdc6161ad0666311cdd/src%2Flibcore%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64c27f9fee17cf666c31dfdc6161ad0666311cdd/src%2Flibcore%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftime.rs?ref=64c27f9fee17cf666c31dfdc6161ad0666311cdd", "patch": "@@ -152,7 +152,6 @@ impl Duration {\n     /// ```\n     #[stable(feature = \"duration\", since = \"1.3.0\")]\n     #[inline]\n-    #[rustc_promotable]\n     #[rustc_const_stable(feature = \"duration_consts\", since = \"1.32.0\")]\n     pub const fn from_secs(secs: u64) -> Duration {\n         Duration { secs, nanos: 0 }"}]}