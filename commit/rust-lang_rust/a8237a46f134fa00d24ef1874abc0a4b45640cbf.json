{"sha": "a8237a46f134fa00d24ef1874abc0a4b45640cbf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MjM3YTQ2ZjEzNGZhMDBkMjRlZjE4NzRhYmMwYTRiNDU2NDBjYmY=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-02-25T07:21:58Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-03-07T04:41:58Z"}, "message": "Bonus Fix: typarams are no longer inhabited", "tree": {"sha": "ad6774940f099ffc467154834251ebaf41d65094", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad6774940f099ffc467154834251ebaf41d65094"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8237a46f134fa00d24ef1874abc0a4b45640cbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8237a46f134fa00d24ef1874abc0a4b45640cbf", "html_url": "https://github.com/rust-lang/rust/commit/a8237a46f134fa00d24ef1874abc0a4b45640cbf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8237a46f134fa00d24ef1874abc0a4b45640cbf/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8105da80676a9ff85199a2bbcd9d9fd4ca019086", "url": "https://api.github.com/repos/rust-lang/rust/commits/8105da80676a9ff85199a2bbcd9d9fd4ca019086", "html_url": "https://github.com/rust-lang/rust/commit/8105da80676a9ff85199a2bbcd9d9fd4ca019086"}], "stats": {"total": 16, "additions": 0, "deletions": 16}, "files": [{"sha": "109a4985d3cb69c1a4be80925aa6d3484f9092ad", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a8237a46f134fa00d24ef1874abc0a4b45640cbf/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8237a46f134fa00d24ef1874abc0a4b45640cbf/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=a8237a46f134fa00d24ef1874abc0a4b45640cbf", "patch": "@@ -1016,22 +1016,6 @@ pub fn T_chan(cx: @CrateContext, _t: TypeRef) -> TypeRef {\n pub fn T_taskptr(cx: @CrateContext) -> TypeRef { return T_ptr(cx.task_type); }\n \n \n-// This type must never be used directly; it must always be cast away.\n-pub fn T_typaram(tn: @TypeNames) -> TypeRef {\n-    let s = @\"typaram\";\n-    match name_has_type(tn, s) {\n-      Some(t) => return t,\n-      _ => ()\n-    }\n-    let t = T_i8();\n-    associate_type(tn, s, t);\n-    return t;\n-}\n-\n-pub fn T_typaram_ptr(tn: @TypeNames) -> TypeRef {\n-    return T_ptr(T_typaram(tn));\n-}\n-\n pub fn T_opaque_cbox_ptr(cx: @CrateContext) -> TypeRef {\n     // closures look like boxes (even when they are ~fn or &fn)\n     // see trans_closure.rs"}]}