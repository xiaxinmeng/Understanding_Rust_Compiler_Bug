{"sha": "5c88efc0da9d5222965fe8eaeb1bf48897da7ec1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjODhlZmMwZGE5ZDUyMjI5NjVmZThlYWViMWJmNDg4OTdkYTdlYzE=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-07-16T21:15:15Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-08-02T22:29:53Z"}, "message": "Properly enforce the \"patterns aren't allowed in foreign functions\" check\n\nApply the same check to function pointer types", "tree": {"sha": "2633404c8d12fda51b46cf4556dfdfb6d408df42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2633404c8d12fda51b46cf4556dfdfb6d408df42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c88efc0da9d5222965fe8eaeb1bf48897da7ec1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c88efc0da9d5222965fe8eaeb1bf48897da7ec1", "html_url": "https://github.com/rust-lang/rust/commit/5c88efc0da9d5222965fe8eaeb1bf48897da7ec1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c88efc0da9d5222965fe8eaeb1bf48897da7ec1/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5cc04665924c73c94e1de071135247102d76865", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5cc04665924c73c94e1de071135247102d76865", "html_url": "https://github.com/rust-lang/rust/commit/e5cc04665924c73c94e1de071135247102d76865"}], "stats": {"total": 73, "additions": 67, "deletions": 6}, "files": [{"sha": "d2cf48eddebac2de42b84571262075df045d4af7", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 36, "deletions": 6, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/5c88efc0da9d5222965fe8eaeb1bf48897da7ec1/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c88efc0da9d5222965fe8eaeb1bf48897da7ec1/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=5c88efc0da9d5222965fe8eaeb1bf48897da7ec1", "patch": "@@ -55,6 +55,17 @@ impl<'a> AstValidator<'a> {\n             err.emit();\n         }\n     }\n+\n+    fn check_decl_no_pat<ReportFn: Fn(Span, bool)>(&self, decl: &FnDecl, report_err: ReportFn) {\n+        for arg in &decl.inputs {\n+            match arg.pat.node {\n+                PatKind::Ident(BindingMode::ByValue(Mutability::Immutable), _, None) |\n+                PatKind::Wild => {}\n+                PatKind::Ident(..) => report_err(arg.pat.span, true),\n+                _ => report_err(arg.pat.span, false),\n+            }\n+        }\n+    }\n }\n \n impl<'a> Visitor for AstValidator<'a> {\n@@ -82,6 +93,23 @@ impl<'a> Visitor for AstValidator<'a> {\n         visit::walk_expr(self, expr)\n     }\n \n+    fn visit_ty(&mut self, ty: &Ty) {\n+        match ty.node {\n+            TyKind::BareFn(ref bfty) => {\n+                self.check_decl_no_pat(&bfty.decl, |span, _| {\n+                    let mut err = struct_span_err!(self.session, span, E0561,\n+                                            \"patterns aren't allowed in function pointer types\");\n+                    err.span_note(span, \"this is a recent error, see \\\n+                                         issue #35203 for more details\");\n+                    err.emit();\n+                });\n+            }\n+            _ => {}\n+        }\n+\n+        visit::walk_ty(self, ty)\n+    }\n+\n     fn visit_path(&mut self, path: &Path, id: NodeId) {\n         if path.global && path.segments.len() > 0 {\n             let ident = path.segments[0].identifier;\n@@ -138,13 +166,15 @@ impl<'a> Visitor for AstValidator<'a> {\n     fn visit_foreign_item(&mut self, fi: &ForeignItem) {\n         match fi.node {\n             ForeignItemKind::Fn(ref decl, _) => {\n-                for arg in &decl.inputs {\n-                    match arg.pat.node {\n-                        PatKind::Ident(..) | PatKind::Wild => {}\n-                        _ => span_err!(self.session, arg.pat.span, E0130,\n-                                       \"patterns aren't allowed in foreign function declarations\")\n+                self.check_decl_no_pat(decl, |span, is_recent| {\n+                    let mut err = struct_span_err!(self.session, span, E0130,\n+                                        \"patterns aren't allowed in foreign function declarations\");\n+                    if is_recent {\n+                        err.span_note(span, \"this is a recent error, see \\\n+                                             issue #35203 for more details\");\n                     }\n-                }\n+                    err.emit();\n+                });\n             }\n             ForeignItemKind::Static(..) => {}\n         }"}, {"sha": "3e2dd477bccf089f0e40b0598246ce9c120b39e2", "filename": "src/librustc_passes/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c88efc0da9d5222965fe8eaeb1bf48897da7ec1/src%2Flibrustc_passes%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c88efc0da9d5222965fe8eaeb1bf48897da7ec1/src%2Flibrustc_passes%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdiagnostics.rs?ref=5c88efc0da9d5222965fe8eaeb1bf48897da7ec1", "patch": "@@ -220,4 +220,5 @@ pub impl Foo for Bar {\n \n register_diagnostics! {\n     E0472, // asm! is unsupported on this target\n+    E0561, // patterns aren't allowed in function pointer types\n }"}, {"sha": "3edbdf4ebc9584ce7d5770bd15064dd56fedf64f", "filename": "src/test/compile-fail/no-patterns-in-args.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5c88efc0da9d5222965fe8eaeb1bf48897da7ec1/src%2Ftest%2Fcompile-fail%2Fno-patterns-in-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c88efc0da9d5222965fe8eaeb1bf48897da7ec1/src%2Ftest%2Fcompile-fail%2Fno-patterns-in-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-patterns-in-args.rs?ref=5c88efc0da9d5222965fe8eaeb1bf48897da7ec1", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern {\n+    fn f1(mut arg: u8); //~ ERROR patterns aren't allowed in foreign function declarations\n+                        //~^ NOTE this is a recent error\n+    fn f2(&arg: u8); //~ ERROR patterns aren't allowed in foreign function declarations\n+    fn f3(arg @ _: u8); //~ ERROR patterns aren't allowed in foreign function declarations\n+                        //~^ NOTE this is a recent error\n+    fn g1(arg: u8); // OK\n+    fn g2(_: u8); // OK\n+    // fn g3(u8); // Not yet\n+}\n+\n+type A1 = fn(mut arg: u8); //~ ERROR patterns aren't allowed in function pointer types\n+                           //~^ NOTE this is a recent error\n+type A2 = fn(&arg: u8); //~ ERROR patterns aren't allowed in function pointer types\n+                        //~^ NOTE this is a recent error\n+type B1 = fn(arg: u8); // OK\n+type B2 = fn(_: u8); // OK\n+type B3 = fn(u8); // OK\n+\n+fn main() {}"}]}