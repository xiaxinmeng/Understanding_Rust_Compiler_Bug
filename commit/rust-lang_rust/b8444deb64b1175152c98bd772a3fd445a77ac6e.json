{"sha": "b8444deb64b1175152c98bd772a3fd445a77ac6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4NDQ0ZGViNjRiMTE3NTE1MmM5OGJkNzcyYTNmZDQ0NWE3N2FjNmU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-23T12:02:02Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-05T16:26:51Z"}, "message": "test Vec::extend", "tree": {"sha": "115585cbb248fb81be30b8a40bcf0ed4428c5a44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/115585cbb248fb81be30b8a40bcf0ed4428c5a44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8444deb64b1175152c98bd772a3fd445a77ac6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8444deb64b1175152c98bd772a3fd445a77ac6e", "html_url": "https://github.com/rust-lang/rust/commit/b8444deb64b1175152c98bd772a3fd445a77ac6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8444deb64b1175152c98bd772a3fd445a77ac6e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae2a811eee6b0bcf99cc1895fdc5983439d879b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae2a811eee6b0bcf99cc1895fdc5983439d879b5", "html_url": "https://github.com/rust-lang/rust/commit/ae2a811eee6b0bcf99cc1895fdc5983439d879b5"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "a2f448496fd9af92a8acebbd2c9ac730745420e9", "filename": "tests/run-pass/vec.rs", "status": "renamed", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b8444deb64b1175152c98bd772a3fd445a77ac6e/tests%2Frun-pass%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8444deb64b1175152c98bd772a3fd445a77ac6e/tests%2Frun-pass%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fvec.rs?ref=b8444deb64b1175152c98bd772a3fd445a77ac6e", "patch": "@@ -71,6 +71,26 @@ fn vec_reallocate() -> Vec<u8> {\n     v\n }\n \n+fn vec_push_ptr_stable() {\n+    let mut v = Vec::with_capacity(10);\n+    v.push(0);\n+    let v0 = unsafe { &*(&v[0] as *const _) }; // laundering the lifetime -- we take care that `v` does not reallocate, so that's okay.\n+    v.push(1);\n+    let _val = *v0;\n+}\n+\n+fn vec_extend_ptr_stable() {\n+    let mut v = Vec::with_capacity(10);\n+    v.push(0);\n+    let v0 = unsafe { &*(&v[0] as *const _) }; // laundering the lifetime -- we take care that `v` does not reallocate, so that's okay.\n+    v.extend(&[1]);\n+    let _val = *v0;\n+    v.extend(vec![2]);\n+    let _val = *v0;\n+    v.extend(std::iter::once(3));\n+    let _val = *v0;\n+}\n+\n fn main() {\n     assert_eq!(vec_reallocate().len(), 5);\n \n@@ -89,4 +109,7 @@ fn main() {\n     // Test interesting empty slice comparison\n     // (one is a real pointer, one an integer pointer).\n     assert_eq!((200..-5).step_by(1).collect::<Vec<isize>>(), []);\n+\n+    vec_push_ptr_stable();\n+    vec_extend_ptr_stable();\n }", "previous_filename": "tests/run-pass/vecs.rs"}]}