{"sha": "6f95c79b95319a8d91de2a5e361eab8d71375d05", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmOTVjNzliOTUzMTlhOGQ5MWRlMmE1ZTM2MWVhYjhkNzEzNzVkMDU=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-13T18:20:21Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-13T18:57:01Z"}, "message": "Traverse types in reachability\n\nIssue 2526 showed a test case where a library exported only a type\nthat was a synonym for a class. Because the class's destructor wasn't\ngetting marked as reachable, its linkage was wrongly getting set to\n\"internal\". The solution is for reachability to traverse types.\n\nCloses #2526.", "tree": {"sha": "e27564bef46dc67741e35814fc54aa449bb16b82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e27564bef46dc67741e35814fc54aa449bb16b82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f95c79b95319a8d91de2a5e361eab8d71375d05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f95c79b95319a8d91de2a5e361eab8d71375d05", "html_url": "https://github.com/rust-lang/rust/commit/6f95c79b95319a8d91de2a5e361eab8d71375d05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f95c79b95319a8d91de2a5e361eab8d71375d05/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cce7327487e113d1d38c7771a187d3ad29dc0011", "url": "https://api.github.com/repos/rust-lang/rust/commits/cce7327487e113d1d38c7771a187d3ad29dc0011", "html_url": "https://github.com/rust-lang/rust/commit/cce7327487e113d1d38c7771a187d3ad29dc0011"}], "stats": {"total": 68, "additions": 67, "deletions": 1}, "files": [{"sha": "55a4b865e903ba2f68a03b1d9b5405b3141c1839", "filename": "src/rustc/middle/trans/reachable.rs", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6f95c79b95319a8d91de2a5e361eab8d71375d05/src%2Frustc%2Fmiddle%2Ftrans%2Freachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f95c79b95319a8d91de2a5e361eab8d71375d05/src%2Frustc%2Fmiddle%2Ftrans%2Freachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Freachable.rs?ref=6f95c79b95319a8d91de2a5e361eab8d71375d05", "patch": "@@ -135,11 +135,37 @@ fn traverse_public_item(cx: ctx, item: @item) {\n             }\n         }\n       }\n-      item_const(*) | item_ty(*) |\n+      item_ty(t, _, _) {\n+        traverse_ty(t, cx, mk_ty_visitor());\n+      }\n+      item_const(*) |\n       item_enum(*) | item_iface(*) {}\n     }\n }\n \n+fn mk_ty_visitor() -> visit::vt<ctx> {\n+    visit::mk_vt(@{visit_ty: traverse_ty with *visit::default_visitor()})\n+}\n+\n+fn traverse_ty(ty: @ty, cx: ctx, v: visit::vt<ctx>) {\n+    if cx.rmap.contains_key(ty.id) { ret; }\n+    cx.rmap.insert(ty.id, ());\n+\n+    alt ty.node {\n+      ty_path(p, p_id) {\n+        alt cx.tcx.def_map.find(p_id) {\n+          // Kind of a hack to check this here, but I'm not sure what else\n+          // to do\n+          some(def_prim_ty(_)) { /* do nothing */ }\n+          some(d) { traverse_def_id(cx, def_id_of_def(d)); }\n+          none    { /* do nothing -- but should we fail here? */ }\n+        }\n+        for p.types.each {|t| v.visit_ty(t, cx, v); };\n+      }\n+      _ { visit::visit_ty(ty, cx, v); }\n+    }\n+}\n+\n fn traverse_inline_body(cx: ctx, body: blk) {\n     fn traverse_expr(e: @expr, cx: ctx, v: visit::vt<ctx>) {\n         alt e.node {"}, {"sha": "9dd7d262731ed713cf84ddc77dfb5f50ad246e06", "filename": "src/test/auxiliary/issue-2526.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/6f95c79b95319a8d91de2a5e361eab8d71375d05/src%2Ftest%2Fauxiliary%2Fissue-2526.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f95c79b95319a8d91de2a5e361eab8d71375d05/src%2Ftest%2Fauxiliary%2Fissue-2526.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2526.rs?ref=6f95c79b95319a8d91de2a5e361eab8d71375d05", "patch": "@@ -0,0 +1,32 @@\n+#[link(name = \"zmq\",\n+       vers = \"0.2\",\n+       uuid = \"54cc1bc9-02b8-447c-a227-75ebc923bc29\")];\n+#[crate_type = \"lib\"];\n+\n+use std;\n+\n+export context;\n+\n+resource arc_destruct<T: const>(_data: int) { }\n+\n+fn arc<T: const>(_data: T) -> arc_destruct<T> {\n+    arc_destruct(0)\n+}\n+\n+fn init() -> arc_destruct<context_res> unsafe {\n+    arc(context_res())\n+}\n+\n+class context_res {\n+    let ctx : int;\n+\n+    new() { self.ctx = 0; }\n+\n+    drop { }\n+}\n+\n+type context = arc_destruct<context_res>;\n+\n+impl context for context {\n+    fn socket() { }\n+}"}, {"sha": "fdbcc005ae2b4a928add61639d57c05603538e36", "filename": "src/test/run-pass/issue-2526-a.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6f95c79b95319a8d91de2a5e361eab8d71375d05/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f95c79b95319a8d91de2a5e361eab8d71375d05/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs?ref=6f95c79b95319a8d91de2a5e361eab8d71375d05", "patch": "@@ -0,0 +1,8 @@\n+// xfail-fast\n+// aux-build:issue-2526.rs\n+\n+use zmq;\n+import zmq::*;\n+\n+fn main() {}\n+"}]}