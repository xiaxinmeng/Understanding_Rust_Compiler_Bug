{"sha": "0e72c80afe9024ea7824579cd12c428264bb4783", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNzJjODBhZmU5MDI0ZWE3ODI0NTc5Y2QxMmM0MjgyNjRiYjQ3ODM=", "commit": {"author": {"name": "Niv Kaminer", "email": "nivkner@zoho.com", "date": "2018-12-17T21:45:26Z"}, "committer": {"name": "Niv Kaminer", "email": "nivkner@zoho.com", "date": "2018-12-19T19:23:05Z"}, "message": "FIXME(9639) remove fixme and accept non-utf8 paths in compiletest", "tree": {"sha": "bb808e4c9b878b0fecfcbec6dd8c53d76b26d1ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb808e4c9b878b0fecfcbec6dd8c53d76b26d1ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e72c80afe9024ea7824579cd12c428264bb4783", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e72c80afe9024ea7824579cd12c428264bb4783", "html_url": "https://github.com/rust-lang/rust/commit/0e72c80afe9024ea7824579cd12c428264bb4783", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e72c80afe9024ea7824579cd12c428264bb4783/comments", "author": {"login": "nivkner", "id": 22821514, "node_id": "MDQ6VXNlcjIyODIxNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/22821514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nivkner", "html_url": "https://github.com/nivkner", "followers_url": "https://api.github.com/users/nivkner/followers", "following_url": "https://api.github.com/users/nivkner/following{/other_user}", "gists_url": "https://api.github.com/users/nivkner/gists{/gist_id}", "starred_url": "https://api.github.com/users/nivkner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nivkner/subscriptions", "organizations_url": "https://api.github.com/users/nivkner/orgs", "repos_url": "https://api.github.com/users/nivkner/repos", "events_url": "https://api.github.com/users/nivkner/events{/privacy}", "received_events_url": "https://api.github.com/users/nivkner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nivkner", "id": 22821514, "node_id": "MDQ6VXNlcjIyODIxNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/22821514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nivkner", "html_url": "https://github.com/nivkner", "followers_url": "https://api.github.com/users/nivkner/followers", "following_url": "https://api.github.com/users/nivkner/following{/other_user}", "gists_url": "https://api.github.com/users/nivkner/gists{/gist_id}", "starred_url": "https://api.github.com/users/nivkner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nivkner/subscriptions", "organizations_url": "https://api.github.com/users/nivkner/orgs", "repos_url": "https://api.github.com/users/nivkner/repos", "events_url": "https://api.github.com/users/nivkner/events{/privacy}", "received_events_url": "https://api.github.com/users/nivkner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "957a9c7c666801019478f1ff1535d8395127fa6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/957a9c7c666801019478f1ff1535d8395127fa6f", "html_url": "https://github.com/rust-lang/rust/commit/957a9c7c666801019478f1ff1535d8395127fa6f"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "8c6e97893fb43152b666b7dc864478e93e54fc85", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/0e72c80afe9024ea7824579cd12c428264bb4783/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e72c80afe9024ea7824579cd12c428264bb4783/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=0e72c80afe9024ea7824579cd12c428264bb4783", "patch": "@@ -27,7 +27,7 @@ use util::{logv, PathBufExt};\n use std::collections::hash_map::DefaultHasher;\n use std::collections::{HashMap, HashSet, VecDeque};\n use std::env;\n-use std::ffi::OsString;\n+use std::ffi::{OsStr, OsString};\n use std::fmt;\n use std::fs::{self, create_dir_all, File};\n use std::hash::{Hash, Hasher};\n@@ -760,13 +760,13 @@ impl<'test> TestCx<'test> {\n             }\n             drop(stdout);\n \n-            let debugger_script = self.make_out_name(\"debugger.script\");\n-            // FIXME (#9639): This needs to handle non-utf8 paths\n-            let debugger_opts = vec![\n-                \"-quiet\".to_owned(),\n-                \"-batch\".to_owned(),\n-                \"-nx\".to_owned(),\n-                format!(\"-command={}\", debugger_script.to_str().unwrap()),\n+            let mut debugger_script = OsString::from(\"-command=\");\n+            debugger_script.push(self.make_out_name(\"debugger.script\"));\n+            let debugger_opts: &[&OsStr] = &[\n+                \"-quiet\".as_ref(),\n+                \"-batch\".as_ref(),\n+                \"-nx\".as_ref(),\n+                &debugger_script,\n             ];\n \n             let gdb_path = self.config.gdb.as_ref().unwrap();\n@@ -775,12 +775,12 @@ impl<'test> TestCx<'test> {\n                 stdout,\n                 stderr,\n             } = Command::new(&gdb_path)\n-                .args(&debugger_opts)\n+                .args(debugger_opts)\n                 .output()\n                 .expect(&format!(\"failed to exec `{:?}`\", gdb_path));\n             let cmdline = {\n                 let mut gdb = Command::new(&format!(\"{}-gdb\", self.config.target));\n-                gdb.args(&debugger_opts);\n+                gdb.args(debugger_opts);\n                 let cmdline = self.make_cmdline(&gdb, \"\");\n                 logv(self.config, format!(\"executing {}\", cmdline));\n                 cmdline\n@@ -868,18 +868,18 @@ impl<'test> TestCx<'test> {\n             debug!(\"script_str = {}\", script_str);\n             self.dump_output_file(&script_str, \"debugger.script\");\n \n-            let debugger_script = self.make_out_name(\"debugger.script\");\n+            let mut debugger_script = OsString::from(\"-command=\");\n+            debugger_script.push(self.make_out_name(\"debugger.script\"));\n \n-            // FIXME (#9639): This needs to handle non-utf8 paths\n-            let debugger_opts = vec![\n-                \"-quiet\".to_owned(),\n-                \"-batch\".to_owned(),\n-                \"-nx\".to_owned(),\n-                format!(\"-command={}\", debugger_script.to_str().unwrap()),\n+            let debugger_opts: &[&OsStr] = &[\n+                \"-quiet\".as_ref(),\n+                \"-batch\".as_ref(),\n+                \"-nx\".as_ref(),\n+                &debugger_script,\n             ];\n \n             let mut gdb = Command::new(self.config.gdb.as_ref().unwrap());\n-            gdb.args(&debugger_opts)\n+            gdb.args(debugger_opts)\n                 .env(\"PYTHONPATH\", rust_pp_module_abs_path);\n \n             debugger_run_result = self.compose_and_run("}]}