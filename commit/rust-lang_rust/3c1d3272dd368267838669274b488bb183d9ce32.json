{"sha": "3c1d3272dd368267838669274b488bb183d9ce32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMWQzMjcyZGQzNjgyNjc4Mzg2NjkyNzRiNDg4YmIxODNkOWNlMzI=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2016-05-05T20:45:42Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2016-05-05T20:45:42Z"}, "message": "Merge pull request #901 from Manishearth/doc\n\nFix DOC_MARKDOWN", "tree": {"sha": "d1a105b0abaa88e6fc8e1e1c3aee825e5d612e08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1a105b0abaa88e6fc8e1e1c3aee825e5d612e08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c1d3272dd368267838669274b488bb183d9ce32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c1d3272dd368267838669274b488bb183d9ce32", "html_url": "https://github.com/rust-lang/rust/commit/3c1d3272dd368267838669274b488bb183d9ce32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c1d3272dd368267838669274b488bb183d9ce32/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "397b940225d71a90b77438e56d6b1ccc6a29e890", "url": "https://api.github.com/repos/rust-lang/rust/commits/397b940225d71a90b77438e56d6b1ccc6a29e890", "html_url": "https://github.com/rust-lang/rust/commit/397b940225d71a90b77438e56d6b1ccc6a29e890"}, {"sha": "3ce60e973139e1c44ad4bf67d26498c4e6c42d04", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ce60e973139e1c44ad4bf67d26498c4e6c42d04", "html_url": "https://github.com/rust-lang/rust/commit/3ce60e973139e1c44ad4bf67d26498c4e6c42d04"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "cf32c1731fa3124a55c6544c8b47036838e00361", "filename": "src/doc.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3c1d3272dd368267838669274b488bb183d9ce32/src%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c1d3272dd368267838669274b488bb183d9ce32/src%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc.rs?ref=3c1d3272dd368267838669274b488bb183d9ce32", "patch": "@@ -126,15 +126,16 @@ pub fn check_doc(cx: &EarlyContext, valid_idents: &[String], doc: &str, span: Sp\n         span\n     }\n \n+    let mut new_line = true;\n     let len = doc.len();\n     let mut chars = doc.char_indices().peekable();\n     let mut current_word_begin = 0;\n     loop {\n         match chars.next() {\n             Some((_, c)) => {\n                 match c {\n-                    c if c.is_whitespace() => {\n-                        current_word_begin = jump_to!(@next_char, chars, len);\n+                    '#' if new_line => { // don\u2019t warn on titles\n+                        current_word_begin = jump_to!(chars, '\\n', len);\n                     }\n                     '`' => {\n                         current_word_begin = jump_to!(chars, '`', len);\n@@ -171,6 +172,10 @@ pub fn check_doc(cx: &EarlyContext, valid_idents: &[String], doc: &str, span: Sp\n                             None => return,\n                         }\n                     }\n+                    // anything that\u2019s neither alphanumeric nor '_' is not part of an ident anyway\n+                    c if !c.is_alphanumeric() && c != '_' => {\n+                        current_word_begin = jump_to!(@next_char, chars, len);\n+                    }\n                     _ => {\n                         let end = match chars.find(|&(_, c)| !is_word_char(c)) {\n                             Some((end, _)) => end,\n@@ -181,6 +186,8 @@ pub fn check_doc(cx: &EarlyContext, valid_idents: &[String], doc: &str, span: Sp\n                         current_word_begin = jump_to!(@next_char, chars, len);\n                     }\n                 }\n+\n+                new_line = c == '\\n' || (new_line && c.is_whitespace());\n             }\n             None => break,\n         }"}, {"sha": "eca9d79354c9b7100c72a7c54c82018d58769057", "filename": "tests/compile-fail/doc.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/3c1d3272dd368267838669274b488bb183d9ce32/tests%2Fcompile-fail%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c1d3272dd368267838669274b488bb183d9ce32/tests%2Fcompile-fail%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdoc.rs?ref=3c1d3272dd368267838669274b488bb183d9ce32", "patch": "@@ -107,3 +107,37 @@ fn main() {\n     test_emphasis();\n     test_units();\n }\n+\n+/// ## CamelCaseThing\n+/// Talks about `CamelCaseThing`. Titles should be ignored, see issue #897.\n+///\n+/// # CamelCaseThing\n+///\n+/// Not a title #897 CamelCaseThing\n+//~^ ERROR: you should put `CamelCaseThing` between ticks\n+/// be_sure_we_got_to_the_end_of_it\n+//~^ ERROR: you should put `be_sure_we_got_to_the_end_of_it` between ticks\n+fn issue897() {\n+}\n+\n+/// I am confused by brackets? (`x_y`)\n+/// I am confused by brackets? (foo `x_y`)\n+/// I am confused by brackets? (`x_y` foo)\n+/// be_sure_we_got_to_the_end_of_it\n+//~^ ERROR: you should put `be_sure_we_got_to_the_end_of_it` between ticks\n+fn issue900() {\n+}\n+\n+/// Diesel queries also have a similar problem to [Iterator][iterator], where\n+/// /// More talking\n+/// returning them from a function requires exposing the implementation of that\n+/// function. The [`helper_types`][helper_types] module exists to help with this,\n+/// but you might want to hide the return type or have it conditionally change.\n+/// Boxing can achieve both.\n+///\n+/// [iterator]: https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html\n+/// [helper_types]: ../helper_types/index.html\n+/// be_sure_we_got_to_the_end_of_it\n+//~^ ERROR: you should put `be_sure_we_got_to_the_end_of_it` between ticks\n+fn issue883() {\n+}"}]}