{"sha": "92d3b775bd05c363b69b91ed66c20904c7fbfbe7", "node_id": "C_kwDOAAsO6NoAKDkyZDNiNzc1YmQwNWMzNjNiNjliOTFlZDY2YzIwOTA0YzdmYmZiZTc", "commit": {"author": {"name": "Nathaniel Hamovitz", "email": "18648574+nhamovitz@users.noreply.github.com", "date": "2021-10-15T08:31:26Z"}, "committer": {"name": "Nathaniel Hamovitz", "email": "18648574+nhamovitz@users.noreply.github.com", "date": "2021-10-18T10:05:18Z"}, "message": "ayy it compiles! ship it, right? \ud83d\ude0e /s\n\nwhy was `rustc_lint_defs` not already externed in `lib.rs`?\nand how was r-a able to find it but cargo wasn't? \ud83e\udd14", "tree": {"sha": "692532849b2f7da6517abff2433cb81b4d799a68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/692532849b2f7da6517abff2433cb81b4d799a68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92d3b775bd05c363b69b91ed66c20904c7fbfbe7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92d3b775bd05c363b69b91ed66c20904c7fbfbe7", "html_url": "https://github.com/rust-lang/rust/commit/92d3b775bd05c363b69b91ed66c20904c7fbfbe7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92d3b775bd05c363b69b91ed66c20904c7fbfbe7/comments", "author": {"login": "nhamovitz", "id": 18648574, "node_id": "MDQ6VXNlcjE4NjQ4NTc0", "avatar_url": "https://avatars.githubusercontent.com/u/18648574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhamovitz", "html_url": "https://github.com/nhamovitz", "followers_url": "https://api.github.com/users/nhamovitz/followers", "following_url": "https://api.github.com/users/nhamovitz/following{/other_user}", "gists_url": "https://api.github.com/users/nhamovitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhamovitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhamovitz/subscriptions", "organizations_url": "https://api.github.com/users/nhamovitz/orgs", "repos_url": "https://api.github.com/users/nhamovitz/repos", "events_url": "https://api.github.com/users/nhamovitz/events{/privacy}", "received_events_url": "https://api.github.com/users/nhamovitz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nhamovitz", "id": 18648574, "node_id": "MDQ6VXNlcjE4NjQ4NTc0", "avatar_url": "https://avatars.githubusercontent.com/u/18648574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhamovitz", "html_url": "https://github.com/nhamovitz", "followers_url": "https://api.github.com/users/nhamovitz/followers", "following_url": "https://api.github.com/users/nhamovitz/following{/other_user}", "gists_url": "https://api.github.com/users/nhamovitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhamovitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhamovitz/subscriptions", "organizations_url": "https://api.github.com/users/nhamovitz/orgs", "repos_url": "https://api.github.com/users/nhamovitz/repos", "events_url": "https://api.github.com/users/nhamovitz/events{/privacy}", "received_events_url": "https://api.github.com/users/nhamovitz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c69387a0d530dccb56ef11d4cd148f9c38904893", "url": "https://api.github.com/repos/rust-lang/rust/commits/c69387a0d530dccb56ef11d4cd148f9c38904893", "html_url": "https://github.com/rust-lang/rust/commit/c69387a0d530dccb56ef11d4cd148f9c38904893"}], "stats": {"total": 78, "additions": 33, "deletions": 45}, "files": [{"sha": "6624ee9310144463817984ddf42c7f53c44c420f", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/92d3b775bd05c363b69b91ed66c20904c7fbfbe7/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92d3b775bd05c363b69b91ed66c20904c7fbfbe7/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=92d3b775bd05c363b69b91ed66c20904c7fbfbe7", "patch": "@@ -30,6 +30,7 @@ extern crate rustc_index;\n extern crate rustc_infer;\n extern crate rustc_lexer;\n extern crate rustc_lint;\n+extern crate rustc_lint_defs;\n extern crate rustc_middle;\n extern crate rustc_mir_dataflow;\n extern crate rustc_parse;\n@@ -487,6 +488,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         store.register_late_pass(|| Box::new(utils::internal_lints::OuterExpnDataPass));\n     }\n \n+    store.register_early_pass(||        Box::new(trailing_zero_sized_array_without_repr_c::TrailingZeroSizedArrayWithoutReprC));\n     store.register_late_pass(|| Box::new(utils::author::Author));\n     store.register_late_pass(|| Box::new(await_holding_invalid::AwaitHolding));\n     store.register_late_pass(|| Box::new(serde_api::SerdeApi));"}, {"sha": "a96b87922958787e4c73e891031124ab8059853e", "filename": "clippy_lints/src/trailing_zero_sized_array_without_repr_c.rs", "status": "modified", "additions": 31, "deletions": 45, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/92d3b775bd05c363b69b91ed66c20904c7fbfbe7/clippy_lints%2Fsrc%2Ftrailing_zero_sized_array_without_repr_c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92d3b775bd05c363b69b91ed66c20904c7fbfbe7/clippy_lints%2Fsrc%2Ftrailing_zero_sized_array_without_repr_c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrailing_zero_sized_array_without_repr_c.rs?ref=92d3b775bd05c363b69b91ed66c20904c7fbfbe7", "patch": "@@ -1,7 +1,6 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n-use rustc_hir::*;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n-use rustc_lint::{LateContext, LateLintPass};\n+use rustc_lint_defs::Applicability;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n@@ -33,55 +32,42 @@ declare_clippy_lint! {\n }\n declare_lint_pass!(TrailingZeroSizedArrayWithoutReprC => [TRAILING_ZERO_SIZED_ARRAY_WITHOUT_REPR_C]);\n \n-impl LateLintPass<'_> for TrailingZeroSizedArrayWithoutReprC {\n-    fn check_struct_def(&mut self, cx: &LateContext<'tcx>, data: &'tcx rustc_hir::VariantData<'tcx>) {\n-        dbg!(\"in check_struct_def\");\n-        if_chain! {\n-            if let Some(def) = data.fields().last();\n-            if let rustc_hir::TyKind::Array(ty, acost) = def.ty.kind;\n-            then {\n-                // is the AnonConst `0`\n-            }\n-        }\n-\n-        // span_lint_and_sugg(\n-        //     cx,\n-        //     todo!(),\n-        //     todo!(),\n-        //     todo!(),\n-        //     todo!(),\n-        //     todo!(),\n-        //     rustc_errors::Applicability::MaybeIncorrect,\n-        // )\n-    }\n-    // https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/sty/enum.TyKind.html#variant.Array in latepass\n-    // or https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/ast/enum.TyKind.html#variant.Array in early pass\n-\n-    // fn check_struct_def_post(&mut self, _: &LateContext<'tcx>, _: &'tcx rustc_hir::VariantData<'tcx>)\n-    // {}\n-\n-    // fn check_field_def(&mut self, _: &LateContext<'tcx>, _: &'tcx rustc_hir::FieldDef<'tcx>) {}\n-\n-    // fn check_attribute(&mut self, _: &LateContext<'tcx>, _: &'tcx rustc_ast::Attribute) {}\n-\n-    // fn enter_lint_attrs(&mut self, _: &LateContext<'tcx>, _: &'tcx [rustc_ast::Attribute]) {}\n-\n-    // fn exit_lint_attrs(&mut self, _: &LateContext<'tcx>, _: &'tcx [rustc_ast::Attribute]) {}\n-}\n //\n // TODO: Register the lint pass in `clippy_lints/src/lib.rs`,\n-//       e.g. store.register_late_pass(||\n+//       e.g. store.register_early_pass(||\n // Box::new(trailing_zero_sized_array_without_repr_c::TrailingZeroSizedArrayWithoutReprC));\n \n-// fn temp_alert() {}\n-\n impl EarlyLintPass for TrailingZeroSizedArrayWithoutReprC {\n     fn check_struct_def(&mut self, cx: &EarlyContext<'_>, data: &rustc_ast::VariantData) {\n-        if_chain! {\n-            if let rustc_ast::ast::VariantData::Struct(field_defs, some_bool_huh) = data;\n-            if let Some(last_field) = field_defs.last();\n-            if let rustc_ast::ast::TyKind::Array(_, aconst) = &last_field.ty.kind;            \n-            then {dbg!(aconst); return ();}\n+        if is_struct_with_trailing_zero_sized_array(cx, data) && !has_repr_c(cx, data) {\n+            span_lint_and_sugg(\n+                cx,\n+                todo!(),\n+                todo!(),\n+                todo!(),\n+                \"try\",\n+                \"`#[repr(C)]`\".to_string(),\n+                Applicability::MachineApplicable,\n+            )\n+        }\n+    }\n+}\n+\n+fn is_struct_with_trailing_zero_sized_array(cx: &EarlyContext<'_>, data: &rustc_ast::VariantData) -> bool {\n+    if_chain! {\n+        if let rustc_ast::ast::VariantData::Struct(field_defs, some_bool_huh) = data;\n+        if let Some(last_field) = field_defs.last();\n+        if let rustc_ast::ast::TyKind::Array(_, aconst) = &last_field.ty.kind;\n+        // TODO: if array is zero-sized;\n+        then {\n+            dbg!(aconst);\n+            true\n+        } else {\n+            false\n         }\n     }\n }\n+\n+fn has_repr_c(cx: &EarlyContext<'_>, data: &rustc_ast::VariantData) -> bool {\n+    todo!()\n+}"}]}