{"sha": "df354f5cf6e0c0a68d7c4d1b1d945182eb7d7811", "node_id": "C_kwDOAAsO6NoAKGRmMzU0ZjVjZjZlMGMwYTY4ZDdjNGQxYjFkOTQ1MTgyZWI3ZDc4MTE", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-08-24T23:50:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-24T23:50:59Z"}, "message": "Rollup merge of #100921 - ChayimFriedman2:and-eager-eval, r=JohnTitor\n\nAdd a warning about `Option/Result::and()` being eagerly evaluated\n\nCopied from `or()`.\n\nInspired by [this StackOverflow question](https://stackoverflow.com/questions/73461846/why-is-in-rust-the-expression-in-option-and-evaluated-if-option-is-none).\n\n[The PR for `or()`](https://github.com/rust-lang/rust/pull/46548) mentions the Clippy lint `or_fun_call` which doesn't exist for `and()` (although there is `unnecessary_lazy_evaluations`). I still think this warning is also good for `and()`. Feel free to close if you disagree.", "tree": {"sha": "58ea75ae736ceff488adf5f81bdedaaddf210e96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58ea75ae736ceff488adf5f81bdedaaddf210e96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df354f5cf6e0c0a68d7c4d1b1d945182eb7d7811", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjBrljCRBK7hj4Ov3rIwAAXy0IAG3Z9Ru1Fot+pm2w2RSCjNav\n9KzW4VuqkrjlRszXgwdjZeEIP5A7LZn/SJm/llEx8gUPwdAOSRX7wDxodiu+hImJ\nx7QA0lMARj5MF4L7WidCQxY91Tt67iuAshWN5GIWp0bygbUL0iIVpwbFMMWKiujo\nnimE74Wju1Fbhc3TMO7wnyVFSizjLMirGK1ww8CEe5fUUsiVc697D3Xjci81lyF0\nMwbuTlQCTv0KXTT6bAB2S6TShvsTul7SBKHNuo1tbFe6v/pOn9BiBDJDWncvR+NI\nvw8OKZvrgXPzLX3ELknlmWvuP2EhOOxGRPoGq34cJEN/rB8oIvHI9z5SFXBV1hM=\n=iI+m\n-----END PGP SIGNATURE-----\n", "payload": "tree 58ea75ae736ceff488adf5f81bdedaaddf210e96\nparent 0fd4a74139347edc1429de3f9d397ec6583698fd\nparent eb2fdd917ef05184c7ef2eab707183b07d68ff5e\nauthor Yuki Okushi <jtitor@2k36.org> 1661385059 +0900\ncommitter GitHub <noreply@github.com> 1661385059 +0900\n\nRollup merge of #100921 - ChayimFriedman2:and-eager-eval, r=JohnTitor\n\nAdd a warning about `Option/Result::and()` being eagerly evaluated\n\nCopied from `or()`.\n\nInspired by [this StackOverflow question](https://stackoverflow.com/questions/73461846/why-is-in-rust-the-expression-in-option-and-evaluated-if-option-is-none).\n\n[The PR for `or()`](https://github.com/rust-lang/rust/pull/46548) mentions the Clippy lint `or_fun_call` which doesn't exist for `and()` (although there is `unnecessary_lazy_evaluations`). I still think this warning is also good for `and()`. Feel free to close if you disagree.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df354f5cf6e0c0a68d7c4d1b1d945182eb7d7811", "html_url": "https://github.com/rust-lang/rust/commit/df354f5cf6e0c0a68d7c4d1b1d945182eb7d7811", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df354f5cf6e0c0a68d7c4d1b1d945182eb7d7811/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fd4a74139347edc1429de3f9d397ec6583698fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fd4a74139347edc1429de3f9d397ec6583698fd", "html_url": "https://github.com/rust-lang/rust/commit/0fd4a74139347edc1429de3f9d397ec6583698fd"}, {"sha": "eb2fdd917ef05184c7ef2eab707183b07d68ff5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb2fdd917ef05184c7ef2eab707183b07d68ff5e", "html_url": "https://github.com/rust-lang/rust/commit/eb2fdd917ef05184c7ef2eab707183b07d68ff5e"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "934175863630f760d4c6c2c29905d5db8cce59f7", "filename": "library/core/src/option.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/df354f5cf6e0c0a68d7c4d1b1d945182eb7d7811/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df354f5cf6e0c0a68d7c4d1b1d945182eb7d7811/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=df354f5cf6e0c0a68d7c4d1b1d945182eb7d7811", "patch": "@@ -1189,6 +1189,12 @@ impl<T> Option<T> {\n \n     /// Returns [`None`] if the option is [`None`], otherwise returns `optb`.\n     ///\n+    /// Arguments passed to `and` are eagerly evaluated; if you are passing the\n+    /// result of a function call, it is recommended to use [`and_then`], which is\n+    /// lazily evaluated.\n+    ///\n+    /// [`and_then`]: Option::and_then\n+    ///\n     /// # Examples\n     ///\n     /// ```"}, {"sha": "75dcb4cdba9e264c048fd4059a68be7b911bd7e4", "filename": "library/core/src/result.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/df354f5cf6e0c0a68d7c4d1b1d945182eb7d7811/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df354f5cf6e0c0a68d7c4d1b1d945182eb7d7811/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=df354f5cf6e0c0a68d7c4d1b1d945182eb7d7811", "patch": "@@ -1285,6 +1285,11 @@ impl<T, E> Result<T, E> {\n \n     /// Returns `res` if the result is [`Ok`], otherwise returns the [`Err`] value of `self`.\n     ///\n+    /// Arguments passed to `and` are eagerly evaluated; if you are passing the\n+    /// result of a function call, it is recommended to use [`and_then`], which is\n+    /// lazily evaluated.\n+    ///\n+    /// [`and_then`]: Result::and_then\n     ///\n     /// # Examples\n     ///"}]}