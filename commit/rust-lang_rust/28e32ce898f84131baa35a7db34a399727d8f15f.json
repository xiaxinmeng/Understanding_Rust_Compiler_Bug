{"sha": "28e32ce898f84131baa35a7db34a399727d8f15f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4ZTMyY2U4OThmODQxMzFiYWEzNWE3ZGIzNGEzOTk3MjdkOGYxNWY=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-19T15:30:42Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-19T15:42:00Z"}, "message": "Use block indent when rewriting parenthesised expressions", "tree": {"sha": "5e0c14928de3a4535b8fa2a4cc62116eba3d87cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e0c14928de3a4535b8fa2a4cc62116eba3d87cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28e32ce898f84131baa35a7db34a399727d8f15f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28e32ce898f84131baa35a7db34a399727d8f15f", "html_url": "https://github.com/rust-lang/rust/commit/28e32ce898f84131baa35a7db34a399727d8f15f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28e32ce898f84131baa35a7db34a399727d8f15f/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "faf45b3a8028cf40d7bfeb073e3df7e2a48f8318", "url": "https://api.github.com/repos/rust-lang/rust/commits/faf45b3a8028cf40d7bfeb073e3df7e2a48f8318", "html_url": "https://github.com/rust-lang/rust/commit/faf45b3a8028cf40d7bfeb073e3df7e2a48f8318"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "327737d671cbedf54115631fe655e99f0661173f", "filename": "src/expr.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/28e32ce898f84131baa35a7db34a399727d8f15f/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28e32ce898f84131baa35a7db34a399727d8f15f/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=28e32ce898f84131baa35a7db34a399727d8f15f", "patch": "@@ -2401,8 +2401,13 @@ fn span_ends_with_comma(context: &RewriteContext, span: Span) -> bool {\n \n fn rewrite_paren(context: &RewriteContext, subexpr: &ast::Expr, shape: Shape) -> Option<String> {\n     debug!(\"rewrite_paren, shape: {:?}\", shape);\n-    let paren_overhead = paren_overhead(context);\n-    let sub_shape = try_opt!(shape.sub_width(paren_overhead / 2)).visual_indent(paren_overhead / 2);\n+    let total_paren_overhead = paren_overhead(context);\n+    let paren_overhead = total_paren_overhead / 2;\n+    let sub_shape = try_opt!(\n+        shape\n+            .offset_left(paren_overhead)\n+            .and_then(|s| s.sub_width(paren_overhead))\n+    );\n \n     let paren_wrapper = |s: &str| if context.config.spaces_within_parens() && s.len() > 0 {\n         format!(\"( {} )\", s)\n@@ -2413,16 +2418,12 @@ fn rewrite_paren(context: &RewriteContext, subexpr: &ast::Expr, shape: Shape) ->\n     let subexpr_str = try_opt!(subexpr.rewrite(context, sub_shape));\n     debug!(\"rewrite_paren, subexpr_str: `{:?}`\", subexpr_str);\n \n-    if subexpr_str.contains('\\n') {\n+    if subexpr_str.contains('\\n') ||\n+        first_line_width(&subexpr_str) + total_paren_overhead <= shape.width\n+    {\n         Some(paren_wrapper(&subexpr_str))\n     } else {\n-        if subexpr_str.len() + paren_overhead <= shape.width {\n-            Some(paren_wrapper(&subexpr_str))\n-        } else {\n-            let sub_shape = try_opt!(shape.offset_left(2));\n-            let subexpr_str = try_opt!(subexpr.rewrite(context, sub_shape));\n-            Some(paren_wrapper(&subexpr_str))\n-        }\n+        None\n     }\n }\n "}]}