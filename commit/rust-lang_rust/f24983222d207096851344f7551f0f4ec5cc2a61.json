{"sha": "f24983222d207096851344f7551f0f4ec5cc2a61", "node_id": "C_kwDOAAsO6NoAKGYyNDk4MzIyMmQyMDcwOTY4NTEzNDRmNzU1MWYwZjRlYzVjYzJhNjE", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2023-03-31T01:04:09Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2023-03-31T01:18:30Z"}, "message": "Use std::fs::read_to_file in fluent_messages macro", "tree": {"sha": "212ae844d1ef7ca516ec6945a73a14bea832830d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/212ae844d1ef7ca516ec6945a73a14bea832830d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f24983222d207096851344f7551f0f4ec5cc2a61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f24983222d207096851344f7551f0f4ec5cc2a61", "html_url": "https://github.com/rust-lang/rust/commit/f24983222d207096851344f7551f0f4ec5cc2a61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f24983222d207096851344f7551f0f4ec5cc2a61/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1d3610ac1ddd1cd605479274047fd0a3f37d220", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1d3610ac1ddd1cd605479274047fd0a3f37d220", "html_url": "https://github.com/rust-lang/rust/commit/c1d3610ac1ddd1cd605479274047fd0a3f37d220"}], "stats": {"total": 14, "additions": 3, "deletions": 11}, "files": [{"sha": "42a1fc147f7b4798746103cb27a78074d3179f88", "filename": "compiler/rustc_macros/src/diagnostics/fluent.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f24983222d207096851344f7551f0f4ec5cc2a61/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Ffluent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f24983222d207096851344f7551f0f4ec5cc2a61/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Ffluent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Ffluent.rs?ref=f24983222d207096851344f7551f0f4ec5cc2a61", "patch": "@@ -15,8 +15,7 @@ use proc_macro2::TokenStream;\n use quote::quote;\n use std::{\n     collections::{HashMap, HashSet},\n-    fs::File,\n-    io::Read,\n+    fs::read_to_string,\n     path::{Path, PathBuf},\n };\n use syn::{parse_macro_input, Ident, LitStr};\n@@ -95,22 +94,15 @@ pub(crate) fn fluent_messages(input: proc_macro::TokenStream) -> proc_macro::Tok\n \n     // As this macro also outputs an `include_str!` for this file, the macro will always be\n     // re-executed when the file changes.\n-    let mut resource_file = match File::open(absolute_ftl_path) {\n-        Ok(resource_file) => resource_file,\n+    let resource_contents = match read_to_string(absolute_ftl_path) {\n+        Ok(resource_contents) => resource_contents,\n         Err(e) => {\n             Diagnostic::spanned(resource_span, Level::Error, \"could not open Fluent resource\")\n                 .note(e.to_string())\n                 .emit();\n             return failed(&crate_name);\n         }\n     };\n-    let mut resource_contents = String::new();\n-    if let Err(e) = resource_file.read_to_string(&mut resource_contents) {\n-        Diagnostic::spanned(resource_span, Level::Error, \"could not read Fluent resource\")\n-            .note(e.to_string())\n-            .emit();\n-        return failed(&crate_name);\n-    }\n     let mut bad = false;\n     for esc in [\"\\\\n\", \"\\\\\\\"\", \"\\\\'\"] {\n         for _ in resource_contents.matches(esc) {"}]}