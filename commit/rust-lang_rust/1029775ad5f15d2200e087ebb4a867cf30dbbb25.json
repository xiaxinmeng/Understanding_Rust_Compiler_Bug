{"sha": "1029775ad5f15d2200e087ebb4a867cf30dbbb25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwMjk3NzVhZDVmMTVkMjIwMGUwODdlYmI0YTg2N2NmMzBkYmJiMjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-29T20:22:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-29T20:22:03Z"}, "message": "Auto merge of #46720 - estebank:issue-46302, r=nikomatsakis\n\nFix incorrect type mismatch label pointing at return type\n\nCC #46302.", "tree": {"sha": "09b590f7c10ed51088b59a8ba64d1833c48e30fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09b590f7c10ed51088b59a8ba64d1833c48e30fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1029775ad5f15d2200e087ebb4a867cf30dbbb25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1029775ad5f15d2200e087ebb4a867cf30dbbb25", "html_url": "https://github.com/rust-lang/rust/commit/1029775ad5f15d2200e087ebb4a867cf30dbbb25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1029775ad5f15d2200e087ebb4a867cf30dbbb25/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c1a715cbda1d6eba39625aca08f1f2ac7c0dcc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c1a715cbda1d6eba39625aca08f1f2ac7c0dcc8", "html_url": "https://github.com/rust-lang/rust/commit/2c1a715cbda1d6eba39625aca08f1f2ac7c0dcc8"}, {"sha": "2636b314ec5771498f26847f1204d1d4f8b280dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2636b314ec5771498f26847f1204d1d4f8b280dd", "html_url": "https://github.com/rust-lang/rust/commit/2636b314ec5771498f26847f1204d1d4f8b280dd"}], "stats": {"total": 57, "additions": 41, "deletions": 16}, "files": [{"sha": "fa78b38dbb7a84da4b2a36953ac26db3ec91b33d", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1029775ad5f15d2200e087ebb4a867cf30dbbb25/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1029775ad5f15d2200e087ebb4a867cf30dbbb25/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=1029775ad5f15d2200e087ebb4a867cf30dbbb25", "patch": "@@ -4625,21 +4625,23 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                    can_suggest: bool) {\n         // Only suggest changing the return type for methods that\n         // haven't set a return type at all (and aren't `fn main()` or an impl).\n-        match (&fn_decl.output, found.is_suggestable(), can_suggest) {\n-            (&hir::FunctionRetTy::DefaultReturn(span), true, true) => {\n+        match (&fn_decl.output, found.is_suggestable(), can_suggest, expected.is_nil()) {\n+            (&hir::FunctionRetTy::DefaultReturn(span), true, true, true) => {\n                 err.span_suggestion(span,\n                                     \"try adding a return type\",\n                                     format!(\"-> {} \",\n                                             self.resolve_type_vars_with_obligations(found)));\n             }\n-            (&hir::FunctionRetTy::DefaultReturn(span), false, true) => {\n+            (&hir::FunctionRetTy::DefaultReturn(span), false, true, true) => {\n                 err.span_label(span, \"possibly return type missing here?\");\n             }\n-            (&hir::FunctionRetTy::DefaultReturn(span), _, _) => {\n+            (&hir::FunctionRetTy::DefaultReturn(span), _, false, true) => {\n                 // `fn main()` must return `()`, do not suggest changing return type\n                 err.span_label(span, \"expected `()` because of default return type\");\n             }\n-            (&hir::FunctionRetTy::Return(ref ty), _, _) => {\n+            // expectation was caused by something else, not the default return\n+            (&hir::FunctionRetTy::DefaultReturn(_), _, _, false) => {}\n+            (&hir::FunctionRetTy::Return(ref ty), _, _, _) => {\n                 // Only point to return type if the expected type is the return type, as if they\n                 // are not, the expectation must have been caused by something else.\n                 debug!(\"suggest_missing_return_type: return type {:?} node {:?}\", ty, ty.node);"}, {"sha": "9d22dcce4540cb4b29b1575ebebb41210e1268e6", "filename": "src/test/ui/break-while-condition.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1029775ad5f15d2200e087ebb4a867cf30dbbb25/src%2Ftest%2Fui%2Fbreak-while-condition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1029775ad5f15d2200e087ebb4a867cf30dbbb25/src%2Ftest%2Fui%2Fbreak-while-condition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbreak-while-condition.stderr?ref=1029775ad5f15d2200e087ebb4a867cf30dbbb25", "patch": "@@ -13,9 +13,6 @@ LL | |         };\n error[E0308]: mismatched types\n   --> $DIR/break-while-condition.rs:26:13\n    |\n-LL |   fn main() {\n-   |             - expected `()` because of default return type\n-...\n LL | /             while false { //~ ERROR mismatched types\n LL | |                 break\n LL | |             }\n@@ -27,9 +24,6 @@ LL | |             }\n error[E0308]: mismatched types\n   --> $DIR/break-while-condition.rs:34:13\n    |\n-LL |   fn main() {\n-   |             - expected `()` because of default return type\n-...\n LL | /             while false { //~ ERROR mismatched types\n LL | |                 return\n LL | |             }"}, {"sha": "e4edc18c3f8e4e4e2386152b4c09f879a762e2e0", "filename": "src/test/ui/issue-50585.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1029775ad5f15d2200e087ebb4a867cf30dbbb25/src%2Ftest%2Fui%2Fissue-50585.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1029775ad5f15d2200e087ebb4a867cf30dbbb25/src%2Ftest%2Fui%2Fissue-50585.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-50585.stderr?ref=1029775ad5f15d2200e087ebb4a867cf30dbbb25", "patch": "@@ -1,8 +1,6 @@\n error[E0308]: mismatched types\n   --> $DIR/issue-50585.rs:12:18\n    |\n-LL | fn main() {\n-   |           - expected `()` because of default return type\n LL |     |y: Vec<[(); for x in 0..2 {}]>| {};\n    |                  ^^^^^^^^^^^^^^^^ expected usize, found ()\n    |"}, {"sha": "6ae6b549b070ee0841a08553135afd780abe97c2", "filename": "src/test/ui/suggestions/issue-46302.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1029775ad5f15d2200e087ebb4a867cf30dbbb25/src%2Ftest%2Fui%2Fsuggestions%2Fissue-46302.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1029775ad5f15d2200e087ebb4a867cf30dbbb25/src%2Ftest%2Fui%2Fsuggestions%2Fissue-46302.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-46302.rs?ref=1029775ad5f15d2200e087ebb4a867cf30dbbb25", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn foo() {\n+  let s = \"abc\";\n+  let u: &str = if true { s[..2] } else { s };\n+  //~^ ERROR mismatched types\n+}\n+\n+fn main() {\n+    foo();\n+}"}, {"sha": "8e399136fadba9b86e02bd069a417b5a3a8eb757", "filename": "src/test/ui/suggestions/issue-46302.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1029775ad5f15d2200e087ebb4a867cf30dbbb25/src%2Ftest%2Fui%2Fsuggestions%2Fissue-46302.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1029775ad5f15d2200e087ebb4a867cf30dbbb25/src%2Ftest%2Fui%2Fsuggestions%2Fissue-46302.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-46302.stderr?ref=1029775ad5f15d2200e087ebb4a867cf30dbbb25", "patch": "@@ -0,0 +1,15 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-46302.rs:13:27\n+   |\n+LL |   let u: &str = if true { s[..2] } else { s };\n+   |                           ^^^^^^\n+   |                           |\n+   |                           expected &str, found str\n+   |                           help: consider borrowing here: `&s[..2]`\n+   |\n+   = note: expected type `&str`\n+              found type `str`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "5af936eec5bb6881e1d58a1b8ff8ef758a2d7a9e", "filename": "src/test/ui/suggestions/str-array-assignment.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1029775ad5f15d2200e087ebb4a867cf30dbbb25/src%2Ftest%2Fui%2Fsuggestions%2Fstr-array-assignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1029775ad5f15d2200e087ebb4a867cf30dbbb25/src%2Ftest%2Fui%2Fsuggestions%2Fstr-array-assignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fstr-array-assignment.stderr?ref=1029775ad5f15d2200e087ebb4a867cf30dbbb25", "patch": "@@ -10,9 +10,6 @@ LL |   let t = if true { s[..2] } else { s };\n error[E0308]: mismatched types\n   --> $DIR/str-array-assignment.rs:15:27\n    |\n-LL | fn main() {\n-   |           - expected `()` because of default return type\n-...\n LL |   let u: &str = if true { s[..2] } else { s };\n    |                           ^^^^^^\n    |                           |"}]}