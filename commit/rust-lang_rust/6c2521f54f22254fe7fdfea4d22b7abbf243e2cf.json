{"sha": "6c2521f54f22254fe7fdfea4d22b7abbf243e2cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjMjUyMWY1NGYyMjI1NGZlN2ZkZmVhNGQyMmI3YWJiZjI0M2UyY2Y=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-05T11:43:20Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-07T20:48:51Z"}, "message": "adjust error messages", "tree": {"sha": "a86d134d7168abf93446d37a2bc56cf42d7c2e84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a86d134d7168abf93446d37a2bc56cf42d7c2e84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c2521f54f22254fe7fdfea4d22b7abbf243e2cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c2521f54f22254fe7fdfea4d22b7abbf243e2cf", "html_url": "https://github.com/rust-lang/rust/commit/6c2521f54f22254fe7fdfea4d22b7abbf243e2cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c2521f54f22254fe7fdfea4d22b7abbf243e2cf/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28b44d970c0b58a7e4d683580ecee4bf9c8cb073", "url": "https://api.github.com/repos/rust-lang/rust/commits/28b44d970c0b58a7e4d683580ecee4bf9c8cb073", "html_url": "https://github.com/rust-lang/rust/commit/28b44d970c0b58a7e4d683580ecee4bf9c8cb073"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "39e8eed683a3b83b4eeb37ce3a6e7d3d3b1de86c", "filename": "tests/compile-fail/validity/invalid_enum_tag.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c2521f54f22254fe7fdfea4d22b7abbf243e2cf/tests%2Fcompile-fail%2Fvalidity%2Finvalid_enum_tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c2521f54f22254fe7fdfea4d22b7abbf243e2cf/tests%2Fcompile-fail%2Fvalidity%2Finvalid_enum_tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Finvalid_enum_tag.rs?ref=6c2521f54f22254fe7fdfea4d22b7abbf243e2cf", "patch": "@@ -4,5 +4,5 @@ pub enum Foo {\n }\n \n fn main() {\n-    let _f = unsafe { std::mem::transmute::<i32, Foo>(42) }; //~ ERROR encountered 0x0000002a, but expected a valid enum tag\n+    let _f = unsafe { std::mem::transmute::<i32, Foo>(42) }; //~ ERROR encountered 0x0000002a at .<enum-tag>, but expected a valid enum tag\n }"}, {"sha": "74e24491e6108f4af8534610fcc079d81424b7ae", "filename": "tests/compile-fail/validity/invalid_enum_tag_256variants_uninit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c2521f54f22254fe7fdfea4d22b7abbf243e2cf/tests%2Fcompile-fail%2Fvalidity%2Finvalid_enum_tag_256variants_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c2521f54f22254fe7fdfea4d22b7abbf243e2cf/tests%2Fcompile-fail%2Fvalidity%2Finvalid_enum_tag_256variants_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Finvalid_enum_tag_256variants_uninit.rs?ref=6c2521f54f22254fe7fdfea4d22b7abbf243e2cf", "patch": "@@ -266,5 +266,5 @@ union MyUninit {\n }\n \n fn main() {\n-    let _a = unsafe { MyUninit { init: () }.uninit }; //~ ERROR encountered uninitialized bytes, but expected a valid enum tag\n+    let _a = unsafe { MyUninit { init: () }.uninit }; //~ ERROR encountered uninitialized bytes at .<enum-tag>, but expected a valid enum tag\n }"}, {"sha": "6a88fdaea1ee400d5d7bf2db0cbdba4f99da7eca", "filename": "tests/compile-fail/validity/transmute_through_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c2521f54f22254fe7fdfea4d22b7abbf243e2cf/tests%2Fcompile-fail%2Fvalidity%2Ftransmute_through_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c2521f54f22254fe7fdfea4d22b7abbf243e2cf/tests%2Fcompile-fail%2Fvalidity%2Ftransmute_through_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Ftransmute_through_ptr.rs?ref=6c2521f54f22254fe7fdfea4d22b7abbf243e2cf", "patch": "@@ -10,5 +10,5 @@ fn main() {\n     let mut x = Bool::True;\n     evil(&mut x);\n     let _y = x; // reading this ought to be enough to trigger validation\n-    //~^ ERROR encountered 0x0000002c, but expected a valid enum tag\n+    //~^ ERROR encountered 0x0000002c at .<enum-tag>, but expected a valid enum tag\n }"}]}