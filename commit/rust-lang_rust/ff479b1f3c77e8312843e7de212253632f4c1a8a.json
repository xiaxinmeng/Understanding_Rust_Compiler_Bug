{"sha": "ff479b1f3c77e8312843e7de212253632f4c1a8a", "node_id": "C_kwDOAAsO6NoAKGZmNDc5YjFmM2M3N2U4MzEyODQzZTdkZTIxMjI1MzYzMmY0YzFhOGE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-07T03:17:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-07T03:17:10Z"}, "message": "Auto merge of #100801 - Kobzol:track-pgo-profile-paths, r=michaelwoerister\n\nTrack PGO profiles in depinfo\n\nThis PR makes sure that PGO profiles (`-Cprofile-use` and `-Cprofile-sample-use`) are tracked in depinfo, so that when they change, the compilation session will be invalidated.\n\nThis approach was discussed on [Zulip](https://rust-lang.zulipchat.com/#narrow/stream/246057-t-cargo/topic/Tracking.20PGO.20profile.20files.20in.20cargo).\n\nI tried it locally and it seems that the code is recompiled just with this change, and https://github.com/rust-lang/rust/pull/100413 is not even needed. But it's possible that not everything required is recompiled, so we will probably want to land both changes.\n\nAnother approach to implement this could be to store the PGO profiles in `sess.parse_sess.file_depinfo` when the session is being created, but then the paths would have to be converted to a string and then to a symbol, which seemed unnecessarily complicated.\n\nCC `@michaelwoerister`\n\nr? `@Eh2406`", "tree": {"sha": "658e6e5ca01fa286c5d90df517beaf7dddccfba6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/658e6e5ca01fa286c5d90df517beaf7dddccfba6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff479b1f3c77e8312843e7de212253632f4c1a8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff479b1f3c77e8312843e7de212253632f4c1a8a", "html_url": "https://github.com/rust-lang/rust/commit/ff479b1f3c77e8312843e7de212253632f4c1a8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff479b1f3c77e8312843e7de212253632f4c1a8a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c41305631f96bae3e456d7942f00e0d437c350e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c41305631f96bae3e456d7942f00e0d437c350e", "html_url": "https://github.com/rust-lang/rust/commit/8c41305631f96bae3e456d7942f00e0d437c350e"}, {"sha": "925644ed09689018cd17b3bb6e469520d105e6b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/925644ed09689018cd17b3bb6e469520d105e6b8", "html_url": "https://github.com/rust-lang/rust/commit/925644ed09689018cd17b3bb6e469520d105e6b8"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "c41b154c3e066cb936a5b76a3cce35bbaaf823db", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ff479b1f3c77e8312843e7de212253632f4c1a8a/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff479b1f3c77e8312843e7de212253632f4c1a8a/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=ff479b1f3c77e8312843e7de212253632f4c1a8a", "patch": "@@ -573,13 +573,24 @@ fn write_out_deps(\n         // Account for explicitly marked-to-track files\n         // (e.g. accessed in proc macros).\n         let file_depinfo = sess.parse_sess.file_depinfo.borrow();\n-        let extra_tracked_files = file_depinfo.iter().map(|path_sym| {\n-            let path = PathBuf::from(path_sym.as_str());\n+\n+        let normalize_path = |path: PathBuf| {\n             let file = FileName::from(path);\n             escape_dep_filename(&file.prefer_local().to_string())\n-        });\n+        };\n+\n+        let extra_tracked_files =\n+            file_depinfo.iter().map(|path_sym| normalize_path(PathBuf::from(path_sym.as_str())));\n         files.extend(extra_tracked_files);\n \n+        // We also need to track used PGO profile files\n+        if let Some(ref profile_instr) = sess.opts.cg.profile_use {\n+            files.push(normalize_path(profile_instr.as_path().to_path_buf()));\n+        }\n+        if let Some(ref profile_sample) = sess.opts.unstable_opts.profile_sample_use {\n+            files.push(normalize_path(profile_sample.as_path().to_path_buf()));\n+        }\n+\n         if sess.binary_dep_depinfo() {\n             if let Some(ref backend) = sess.opts.unstable_opts.codegen_backend {\n                 if backend.contains('.') {"}, {"sha": "60b59c04aa95c71364627dda2afe8dedb2c2e0be", "filename": "src/test/run-make/track-pgo-dep-info/Makefile", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ff479b1f3c77e8312843e7de212253632f4c1a8a/src%2Ftest%2Frun-make%2Ftrack-pgo-dep-info%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/ff479b1f3c77e8312843e7de212253632f4c1a8a/src%2Ftest%2Frun-make%2Ftrack-pgo-dep-info%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftrack-pgo-dep-info%2FMakefile?ref=ff479b1f3c77e8312843e7de212253632f4c1a8a", "patch": "@@ -0,0 +1,26 @@\n+# needs-profiler-support\n+# ignore-windows-gnu\n+\n+-include ../../run-make-fulldeps/tools.mk\n+\n+# FIXME(eddyb) provide `HOST_RUSTC` and `TARGET_RUSTC`\n+# instead of hardcoding them everywhere they're needed.\n+ifeq ($(IS_MUSL_HOST),1)\n+ADDITIONAL_ARGS := $(RUSTFLAGS)\n+endif\n+\n+all:\n+\t# Generate PGO profiles\n+\t$(BARE_RUSTC) $(ADDITIONAL_ARGS) -Cprofile-generate=$(TMPDIR)/profiles --out-dir $(TMPDIR) main.rs\n+\t$(TMPDIR)/main\n+\n+\t# Merge profiles\n+\t\"$(LLVM_BIN_DIR)/llvm-profdata\" merge \\\n+\t\t-o \"$(TMPDIR)/merged.profdata\" \\\n+\t\t\"$(TMPDIR)/profiles\" || exit 1\n+\n+\t# Use the profile\n+\t$(RUSTC) -Cprofile-use=$(TMPDIR)/merged.profdata --emit dep-info main.rs\n+\n+\t# Check that profile file is in depinfo\n+\t$(CGREP) \"merged.profdata\" < $(TMPDIR)/main.d"}, {"sha": "f328e4d9d04c31d0d70d16d21a07d1613be9d577", "filename": "src/test/run-make/track-pgo-dep-info/main.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ff479b1f3c77e8312843e7de212253632f4c1a8a/src%2Ftest%2Frun-make%2Ftrack-pgo-dep-info%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff479b1f3c77e8312843e7de212253632f4c1a8a/src%2Ftest%2Frun-make%2Ftrack-pgo-dep-info%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftrack-pgo-dep-info%2Fmain.rs?ref=ff479b1f3c77e8312843e7de212253632f4c1a8a", "patch": "@@ -0,0 +1 @@\n+fn main() {}"}]}