{"sha": "96f1385fdd75af35ea888eeb68dc3631d7637a2b", "node_id": "C_kwDOAAsO6NoAKDk2ZjEzODVmZGQ3NWFmMzVlYTg4OGVlYjY4ZGMzNjMxZDc2MzdhMmI", "commit": {"author": {"name": "naosense", "email": "pingao777@gmail.com", "date": "2022-11-21T06:36:56Z"}, "committer": {"name": "naosense", "email": "pingao777@gmail.com", "date": "2022-11-29T07:00:13Z"}, "message": "add `suppress_lint_in_const` conf", "tree": {"sha": "bb83231f30831654695bf2344771c1466c20ea65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb83231f30831654695bf2344771c1466c20ea65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96f1385fdd75af35ea888eeb68dc3631d7637a2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96f1385fdd75af35ea888eeb68dc3631d7637a2b", "html_url": "https://github.com/rust-lang/rust/commit/96f1385fdd75af35ea888eeb68dc3631d7637a2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96f1385fdd75af35ea888eeb68dc3631d7637a2b/comments", "author": {"login": "naosense", "id": 2225426, "node_id": "MDQ6VXNlcjIyMjU0MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2225426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naosense", "html_url": "https://github.com/naosense", "followers_url": "https://api.github.com/users/naosense/followers", "following_url": "https://api.github.com/users/naosense/following{/other_user}", "gists_url": "https://api.github.com/users/naosense/gists{/gist_id}", "starred_url": "https://api.github.com/users/naosense/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naosense/subscriptions", "organizations_url": "https://api.github.com/users/naosense/orgs", "repos_url": "https://api.github.com/users/naosense/repos", "events_url": "https://api.github.com/users/naosense/events{/privacy}", "received_events_url": "https://api.github.com/users/naosense/received_events", "type": "User", "site_admin": false}, "committer": {"login": "naosense", "id": 2225426, "node_id": "MDQ6VXNlcjIyMjU0MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2225426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naosense", "html_url": "https://github.com/naosense", "followers_url": "https://api.github.com/users/naosense/followers", "following_url": "https://api.github.com/users/naosense/following{/other_user}", "gists_url": "https://api.github.com/users/naosense/gists{/gist_id}", "starred_url": "https://api.github.com/users/naosense/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naosense/subscriptions", "organizations_url": "https://api.github.com/users/naosense/orgs", "repos_url": "https://api.github.com/users/naosense/repos", "events_url": "https://api.github.com/users/naosense/events{/privacy}", "received_events_url": "https://api.github.com/users/naosense/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12074808c7a5a2fd9005ed228d9347e9e57f72dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/12074808c7a5a2fd9005ed228d9347e9e57f72dd", "html_url": "https://github.com/rust-lang/rust/commit/12074808c7a5a2fd9005ed228d9347e9e57f72dd"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "23beeb4458c7e2dca514757810d6e481c9b57667", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/96f1385fdd75af35ea888eeb68dc3631d7637a2b/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96f1385fdd75af35ea888eeb68dc3631d7637a2b/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=96f1385fdd75af35ea888eeb68dc3631d7637a2b", "patch": "@@ -82,11 +82,24 @@ declare_clippy_lint! {\n     \"indexing/slicing usage\"\n }\n \n+#[derive(Copy, Clone)]\n+pub struct IndexingSlicing {\n+    suppress_lint_in_const: bool,\n+}\n+\n+impl IndexingSlicing {\n+    pub fn new(suppress_lint_in_const: bool) -> Self {\n+        Self {\n+            suppress_lint_in_const,\n+        }\n+    }\n+}\n+\n declare_lint_pass!(IndexingSlicing => [INDEXING_SLICING, OUT_OF_BOUNDS_INDEXING]);\n \n impl<'tcx> LateLintPass<'tcx> for IndexingSlicing {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n-        if cx.tcx.hir().is_inside_const_context(expr.hir_id) {\n+        if self.suppress_lint_in_const && cx.tcx.hir().is_inside_const_context(expr.hir_id) {\n             return;\n         }\n \n@@ -146,7 +159,7 @@ impl<'tcx> LateLintPass<'tcx> for IndexingSlicing {\n                 // Catchall non-range index, i.e., [n] or [n << m]\n                 if let ty::Array(..) = ty.kind() {\n                     // Index is a const block.\n-                    if let ExprKind::ConstBlock(..) = index.kind {\n+                    if self.suppress_lint_in_const && let ExprKind::ConstBlock(..) = index.kind {\n                         return;\n                     }\n                     // Index is a constant uint.\n@@ -191,7 +204,7 @@ fn to_const_range(cx: &LateContext<'_>, range: higher::Range<'_>, array_size: u1\n             } else {\n                 Some(x)\n             }\n-        },\n+        }\n         Some(_) => None,\n         None => Some(array_size),\n     };"}, {"sha": "3bac394582e0fb45596739e11ae3fcc95eeb315b", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/96f1385fdd75af35ea888eeb68dc3631d7637a2b/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96f1385fdd75af35ea888eeb68dc3631d7637a2b/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=96f1385fdd75af35ea888eeb68dc3631d7637a2b", "patch": "@@ -562,7 +562,9 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     let avoid_breaking_exported_api = conf.avoid_breaking_exported_api;\n     let allow_expect_in_tests = conf.allow_expect_in_tests;\n     let allow_unwrap_in_tests = conf.allow_unwrap_in_tests;\n+    let suppress_lint_in_const = conf.suppress_lint_in_const;\n     store.register_late_pass(move |_| Box::new(approx_const::ApproxConstant::new(msrv())));\n+    store.register_late_pass(move |_| Box::new(approx_const::ApproxConstant::new(msrv)));\n     store.register_late_pass(move |_| {\n         Box::new(methods::Methods::new(\n             avoid_breaking_exported_api,\n@@ -684,6 +686,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|_| Box::new(neg_cmp_op_on_partial_ord::NoNegCompOpForPartialOrd));\n     store.register_late_pass(|_| Box::new(unwrap::Unwrap));\n     store.register_late_pass(|_| Box::new(indexing_slicing::IndexingSlicing));\n+    store.register_late_pass(|_| Box::new(indexing_slicing::IndexingSlicing::new(suppress_lint_in_const)));\n     store.register_late_pass(|_| Box::new(non_copy_const::NonCopyConst));\n     store.register_late_pass(|_| Box::new(ptr_offset_with_cast::PtrOffsetWithCast));\n     store.register_late_pass(|_| Box::new(redundant_clone::RedundantClone));"}, {"sha": "1352632b3a65dab4bef18ea22cbff641977bafe9", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/96f1385fdd75af35ea888eeb68dc3631d7637a2b/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96f1385fdd75af35ea888eeb68dc3631d7637a2b/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=96f1385fdd75af35ea888eeb68dc3631d7637a2b", "patch": "@@ -406,6 +406,10 @@ define_Conf! {\n     ///\n     /// Whether to allow mixed uninlined format args, e.g. `format!(\"{} {}\", a, foo.bar)`\n     (allow_mixed_uninlined_format_args: bool = true),\n+    /// Lint: SUPPRESS_LINT\n+    ///\n+    /// Whether to suppress lint in const function\n+    (suppress_lint_in_const: bool = true),\n }\n \n /// Search for the configuration file."}]}