{"sha": "dd588519bdd7950c6a4c398f8fffd00fbd2238d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNTg4NTE5YmRkNzk1MGM2YTRjMzk4ZjhmZmZkMDBmYmQyMjM4ZDM=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-06-04T20:55:32Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-06-04T21:10:08Z"}, "message": "rustc: Add a span_unimpl method to ext_ctxt", "tree": {"sha": "bac3030a90e57fc00b1c7258d0f6bf206580f16a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bac3030a90e57fc00b1c7258d0f6bf206580f16a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd588519bdd7950c6a4c398f8fffd00fbd2238d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd588519bdd7950c6a4c398f8fffd00fbd2238d3", "html_url": "https://github.com/rust-lang/rust/commit/dd588519bdd7950c6a4c398f8fffd00fbd2238d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd588519bdd7950c6a4c398f8fffd00fbd2238d3/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecf1bd7651d83b4bc7685e926e2761c8ab87c68f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecf1bd7651d83b4bc7685e926e2761c8ab87c68f", "html_url": "https://github.com/rust-lang/rust/commit/ecf1bd7651d83b4bc7685e926e2761c8ab87c68f"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "f1c065eeeb46d570330f25ce7dcb9ae5e5d7bcf3", "filename": "src/comp/front/ext.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/dd588519bdd7950c6a4c398f8fffd00fbd2238d3/src%2Fcomp%2Ffront%2Fext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd588519bdd7950c6a4c398f8fffd00fbd2238d3/src%2Fcomp%2Ffront%2Fext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fext.rs?ref=dd588519bdd7950c6a4c398f8fffd00fbd2238d3", "patch": "@@ -23,18 +23,26 @@ fn syntax_expander_table() -> hashmap[str, syntax_extension] {\n     ret syntax_expanders;\n }\n \n-type span_err_fn = fn (span sp, str msg) -> !;\n+type span_msg_fn = fn (span sp, str msg) -> !;\n \n // Provides a limited set of services necessary for syntax extensions\n // to do their thing\n-type ext_ctxt = rec(span_err_fn span_err);\n+type ext_ctxt = rec(span_msg_fn span_err,\n+                    span_msg_fn span_unimpl);\n \n fn mk_ctxt(session sess) -> ext_ctxt {\n-    fn ext_span_err_(session sess, span sp, str err) -> ! {\n-        sess.span_err(sp, err);\n+    fn ext_span_err_(session sess, span sp, str msg) -> ! {\n+        sess.span_err(sp, msg);\n     }\n     auto ext_span_err = bind ext_span_err_(sess, _, _);\n-    ret rec(span_err = ext_span_err);\n+\n+    fn ext_span_unimpl_(session sess, span sp, str msg) -> ! {\n+        sess.span_unimpl(sp, msg);\n+    }\n+    auto ext_span_unimpl = bind ext_span_unimpl_(sess, _, _);\n+\n+    ret rec(span_err = ext_span_err,\n+            span_unimpl = ext_span_unimpl);\n }\n \n //"}]}