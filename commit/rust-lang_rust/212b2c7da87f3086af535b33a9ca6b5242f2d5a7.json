{"sha": "212b2c7da87f3086af535b33a9ca6b5242f2d5a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMmIyYzdkYTg3ZjMwODZhZjUzNWIzM2E5Y2E2YjUyNDJmMmQ1YTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-30T12:24:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-30T12:24:30Z"}, "message": "Auto merge of #68661 - nnethercote:rm-unused-read_uleb128-param, r=Mark-Simulacrum\n\nRemove unused `read_uleb128` parameter.", "tree": {"sha": "4e428824e624d9e46e390782b36d6ba91bf3269c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e428824e624d9e46e390782b36d6ba91bf3269c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/212b2c7da87f3086af535b33a9ca6b5242f2d5a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/212b2c7da87f3086af535b33a9ca6b5242f2d5a7", "html_url": "https://github.com/rust-lang/rust/commit/212b2c7da87f3086af535b33a9ca6b5242f2d5a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/212b2c7da87f3086af535b33a9ca6b5242f2d5a7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4071d09197e22d2fab8334aa8d30659961bb977", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4071d09197e22d2fab8334aa8d30659961bb977", "html_url": "https://github.com/rust-lang/rust/commit/c4071d09197e22d2fab8334aa8d30659961bb977"}, {"sha": "6961db2024aa96bc1ba2d8f38c5dc1ba49fdabd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6961db2024aa96bc1ba2d8f38c5dc1ba49fdabd9", "html_url": "https://github.com/rust-lang/rust/commit/6961db2024aa96bc1ba2d8f38c5dc1ba49fdabd9"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "39f3abb75271b1823ac176c738814fe24e9acc43", "filename": "src/libserialize/opaque.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/212b2c7da87f3086af535b33a9ca6b5242f2d5a7/src%2Flibserialize%2Fopaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/212b2c7da87f3086af535b33a9ca6b5242f2d5a7/src%2Flibserialize%2Fopaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fopaque.rs?ref=212b2c7da87f3086af535b33a9ca6b5242f2d5a7", "patch": "@@ -192,7 +192,7 @@ impl<'a> Decoder<'a> {\n }\n \n macro_rules! read_uleb128 {\n-    ($dec:expr, $t:ty, $fun:ident) => {{\n+    ($dec:expr, $fun:ident) => {{\n         let (value, bytes_read) = leb128::$fun(&$dec.data[$dec.position..]);\n         $dec.position += bytes_read;\n         Ok(value)\n@@ -217,22 +217,22 @@ impl<'a> serialize::Decoder for Decoder<'a> {\n \n     #[inline]\n     fn read_u128(&mut self) -> Result<u128, Self::Error> {\n-        read_uleb128!(self, u128, read_u128_leb128)\n+        read_uleb128!(self, read_u128_leb128)\n     }\n \n     #[inline]\n     fn read_u64(&mut self) -> Result<u64, Self::Error> {\n-        read_uleb128!(self, u64, read_u64_leb128)\n+        read_uleb128!(self, read_u64_leb128)\n     }\n \n     #[inline]\n     fn read_u32(&mut self) -> Result<u32, Self::Error> {\n-        read_uleb128!(self, u32, read_u32_leb128)\n+        read_uleb128!(self, read_u32_leb128)\n     }\n \n     #[inline]\n     fn read_u16(&mut self) -> Result<u16, Self::Error> {\n-        read_uleb128!(self, u16, read_u16_leb128)\n+        read_uleb128!(self, read_u16_leb128)\n     }\n \n     #[inline]\n@@ -244,7 +244,7 @@ impl<'a> serialize::Decoder for Decoder<'a> {\n \n     #[inline]\n     fn read_usize(&mut self) -> Result<usize, Self::Error> {\n-        read_uleb128!(self, usize, read_usize_leb128)\n+        read_uleb128!(self, read_usize_leb128)\n     }\n \n     #[inline]"}]}