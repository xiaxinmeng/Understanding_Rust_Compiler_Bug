{"sha": "99b5d2a88ffae4923a0076bc2c669cc3cc0affed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5YjVkMmE4OGZmYWU0OTIzYTAwNzZiYzJjNjY5Y2MzY2MwYWZmZWQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-07-08T09:33:33Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-07-08T09:33:33Z"}, "message": "Fix typo in comment.", "tree": {"sha": "43a80fccfe5df7a82b5af6f3f2ff7da02fd65c85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43a80fccfe5df7a82b5af6f3f2ff7da02fd65c85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99b5d2a88ffae4923a0076bc2c669cc3cc0affed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99b5d2a88ffae4923a0076bc2c669cc3cc0affed", "html_url": "https://github.com/rust-lang/rust/commit/99b5d2a88ffae4923a0076bc2c669cc3cc0affed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99b5d2a88ffae4923a0076bc2c669cc3cc0affed/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10d6b34d32e377798868586d2d8e25d972cbeb0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/10d6b34d32e377798868586d2d8e25d972cbeb0d", "html_url": "https://github.com/rust-lang/rust/commit/10d6b34d32e377798868586d2d8e25d972cbeb0d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f13e23914f7ab54b35a31737c680405943c000a4", "filename": "compiler/rustc_typeck/src/check/method/prelude2021.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99b5d2a88ffae4923a0076bc2c669cc3cc0affed/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99b5d2a88ffae4923a0076bc2c669cc3cc0affed/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs?ref=99b5d2a88ffae4923a0076bc2c669cc3cc0affed", "patch": "@@ -208,7 +208,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             return;\n         }\n \n-        // For from_iter, check if the type actualy implements FromIterator.\n+        // For from_iter, check if the type actually implements FromIterator.\n         // If we know it does not, we don't need to warn.\n         if method_name.name == sym::from_iter {\n             if let Some(trait_def_id) = self.tcx.get_diagnostic_item(sym::FromIterator) {"}]}