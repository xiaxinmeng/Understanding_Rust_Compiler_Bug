{"sha": "018266a7ff6d06747e798afdf84faadb7567d179", "node_id": "C_kwDOAAsO6NoAKDAxODI2NmE3ZmY2ZDA2NzQ3ZTc5OGFmZGY4NGZhYWRiNzU2N2QxNzk", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-08-10T17:17:15Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-08-10T18:41:10Z"}, "message": "Make `ModPath` display escaped path", "tree": {"sha": "08fb0c524c0665a16e85f2c571dd9e36c49a65a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08fb0c524c0665a16e85f2c571dd9e36c49a65a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/018266a7ff6d06747e798afdf84faadb7567d179", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmLz+8YACgkQ4laYqTBY\nYXGxWQ/+JrRU5DI/ogoVlH2a8U+6wsZn8B9D7bgvuVwi4IT2a49dTUvUSVILMFLX\nrb52YJStyu6Oniknw8bzlMGYTygPA3Emcl3MUqh1Y5alwBZLmoaUCe0FN50kPK9E\nqb1QHnDOa4yGNE+FpJkXTIlDPHHpY7s7+mKInU97MK5phOuiQjC52Tdk0FLrD+5Q\nFyQQk4Ly65wLrccPrCKzW2kJWvPUWIpCbiNx3qQP0Yt8+fbI5404eVIK+gjkJ8ay\nqRVfnS608xz+DbnodF0zxg4LFGI4GenI8wwrs5xldQ76nxibq8cGa+QfttmuAdd3\nGFZbaKH9uW0+wDfl4V3Fr78sbbHzJDr/hxGjs8T1ZmX98Zf/l88aGbdp9cOxArJ1\n36S3OQ/dGs5bSsQ4/KiVMUd70Dz6lmRDvmzsyqTgbgIIk4IzI4Xuc1dlz6n3WorL\nO2j2Gpi1LOHYQQH66VThg5ocEEkw8mz15y4CHHYtPx6In8K7o1z/G0z7RwPhpfZO\ntOslEOMI8dkOV2zWhHDz9Cl7jUf+1AjOH8s7xe1YMXmlzfUGIUMFgPd5Dh/TJ4Si\npMCP/s3USVJtUUMf0NQ5gHY0NU52I02lTLQOa6rGu4by2AGZMM3yPXffGZf8UHPu\nkhkelTzTbKaC6Bp1mlYHkV9o2c0FMIp5AAJH+g7cTw0ZQrDoC7c=\n=jRtm\n-----END PGP SIGNATURE-----", "payload": "tree 08fb0c524c0665a16e85f2c571dd9e36c49a65a5\nparent 8fe73a224005a153c89a40243e71a021e9304958\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1660151835 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1660156870 +0900\n\nMake `ModPath` display escaped path\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/018266a7ff6d06747e798afdf84faadb7567d179", "html_url": "https://github.com/rust-lang/rust/commit/018266a7ff6d06747e798afdf84faadb7567d179", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/018266a7ff6d06747e798afdf84faadb7567d179/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fe73a224005a153c89a40243e71a021e9304958", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fe73a224005a153c89a40243e71a021e9304958", "html_url": "https://github.com/rust-lang/rust/commit/8fe73a224005a153c89a40243e71a021e9304958"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "d0f73ec8208c60e52b2a38de539257b3321d98c9", "filename": "crates/hir-expand/src/mod_path.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/018266a7ff6d06747e798afdf84faadb7567d179/crates%2Fhir-expand%2Fsrc%2Fmod_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/018266a7ff6d06747e798afdf84faadb7567d179/crates%2Fhir-expand%2Fsrc%2Fmod_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Fmod_path.rs?ref=018266a7ff6d06747e798afdf84faadb7567d179", "patch": "@@ -22,7 +22,7 @@ pub struct ModPath {\n }\n \n #[derive(Debug, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]\n-pub struct EscapedModPath<'a>(&'a ModPath);\n+pub struct UnescapedModPath<'a>(&'a ModPath);\n \n #[derive(Debug, Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub enum PathKind {\n@@ -102,8 +102,8 @@ impl ModPath {\n         }\n     }\n \n-    pub fn escaped(&self) -> EscapedModPath<'_> {\n-        EscapedModPath(self)\n+    pub fn unescaped(&self) -> UnescapedModPath<'_> {\n+        UnescapedModPath(self)\n     }\n \n     fn _fmt(&self, f: &mut fmt::Formatter<'_>, escaped: bool) -> fmt::Result {\n@@ -145,13 +145,13 @@ impl ModPath {\n \n impl Display for ModPath {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        self._fmt(f, false)\n+        self._fmt(f, true)\n     }\n }\n \n-impl<'a> Display for EscapedModPath<'a> {\n+impl<'a> Display for UnescapedModPath<'a> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        self.0._fmt(f, true)\n+        self.0._fmt(f, false)\n     }\n }\n "}, {"sha": "707dea206be577efcc7cbb455692dbe4614418bb", "filename": "crates/ide-completion/src/render/literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/018266a7ff6d06747e798afdf84faadb7567d179/crates%2Fide-completion%2Fsrc%2Frender%2Fliteral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/018266a7ff6d06747e798afdf84faadb7567d179/crates%2Fide-completion%2Fsrc%2Frender%2Fliteral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender%2Fliteral.rs?ref=018266a7ff6d06747e798afdf84faadb7567d179", "patch": "@@ -73,7 +73,7 @@ fn render(\n         None => (name.clone().into(), name.into(), false),\n     };\n     let (qualified_name, escaped_qualified_name) =\n-        (qualified_name.to_string(), qualified_name.escaped().to_string());\n+        (qualified_name.unescaped().to_string(), qualified_name.to_string());\n     let snippet_cap = ctx.snippet_cap();\n \n     let mut rendered = match kind {"}, {"sha": "1c1299e33b6701951dd1646ea5de10998f88970b", "filename": "crates/ide-completion/src/render/pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/018266a7ff6d06747e798afdf84faadb7567d179/crates%2Fide-completion%2Fsrc%2Frender%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/018266a7ff6d06747e798afdf84faadb7567d179/crates%2Fide-completion%2Fsrc%2Frender%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender%2Fpattern.rs?ref=018266a7ff6d06747e798afdf84faadb7567d179", "patch": "@@ -53,7 +53,7 @@ pub(crate) fn render_variant_pat(\n     let (visible_fields, fields_omitted) = visible_fields(ctx.completion, &fields, variant)?;\n \n     let (name, escaped_name) = match path {\n-        Some(path) => (path.to_string().into(), path.escaped().to_string().into()),\n+        Some(path) => (path.unescaped().to_string().into(), path.to_string().into()),\n         None => {\n             let name = local_name.unwrap_or_else(|| variant.name(ctx.db()));\n             (name.unescaped().to_smol_str(), name.to_smol_str())"}, {"sha": "bb32330f276de7853c3290be23277007c1f9c2cd", "filename": "crates/ide-completion/src/render/union_literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/018266a7ff6d06747e798afdf84faadb7567d179/crates%2Fide-completion%2Fsrc%2Frender%2Funion_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/018266a7ff6d06747e798afdf84faadb7567d179/crates%2Fide-completion%2Fsrc%2Frender%2Funion_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender%2Funion_literal.rs?ref=018266a7ff6d06747e798afdf84faadb7567d179", "patch": "@@ -21,7 +21,7 @@ pub(crate) fn render_union_literal(\n     let name = local_name.unwrap_or_else(|| un.name(ctx.db()));\n \n     let (qualified_name, escaped_qualified_name) = match path {\n-        Some(p) => (p.to_string(), p.escaped().to_string()),\n+        Some(p) => (p.unescaped().to_string(), p.to_string()),\n         None => (name.unescaped().to_string(), name.to_string()),\n     };\n "}]}