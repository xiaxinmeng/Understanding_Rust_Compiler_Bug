{"sha": "9a5e937d743266bb2b4ac5c6f4ae4e3972d45bb2", "node_id": "C_kwDOAAsO6NoAKDlhNWU5MzdkNzQzMjY2YmIyYjRhYzVjNmY0YWU0ZTM5NzJkNDViYjI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-06T03:13:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-06T03:13:34Z"}, "message": "Rollup merge of #93657 - Mark-Simulacrum:apple-measurement, r=pietroalbini\n\nUpdate CPU idle tracking for apple hosts\n\nThe previous setup did not properly consider hyperthreads (at least in local\ntesting), which likely skews CI results as well. The new code is both simpler\nand hopefully will produce more accurate results; locally it matches behavior\nof the Linux version of this script.", "tree": {"sha": "3af53d88776f0961cdf7e5905e6ee31956874f4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3af53d88776f0961cdf7e5905e6ee31956874f4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a5e937d743266bb2b4ac5c6f4ae4e3972d45bb2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh/zzeCRBK7hj4Ov3rIwAAeM4IAAiWk+G1+pqepYJqzMP85ET/\nmueUwoNgHf8swu1PHXOxqsZjr7TJU/uzkDpMdLBP1sDOaZJ3ZPdDSqQDdgrBU/tj\nxXtsgZCif23kOsQHgREDcfkdtdT4GMcIXEp0nBdOhtcuY9vE3ko0Fm/qC2UQ3nMz\nBg+fkJMjpQtstxtWYPNCJBWuHy0r66dCItBDkidIhA7HKs1Pd+bOPuZJD3T3+koT\nfrb4a75mjbIdO3nn6CmSvQzqgJEzxlnEkzKSDU2U/0qwbsPjpWyMkrSU9N7xLd3N\nZ7K3T9pSobU/+uk++N6rE8Knii3NvxBMTQZ+rOEi+RjGKRWsuNZCqWCOR21WG6I=\n=lVn+\n-----END PGP SIGNATURE-----\n", "payload": "tree 3af53d88776f0961cdf7e5905e6ee31956874f4b\nparent 520bd359a38a266f7823112b27cade0b470a4815\nparent 6756ff9316008f04c339a8b024656195534b6937\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1644117214 +0100\ncommitter GitHub <noreply@github.com> 1644117214 +0100\n\nRollup merge of #93657 - Mark-Simulacrum:apple-measurement, r=pietroalbini\n\nUpdate CPU idle tracking for apple hosts\n\nThe previous setup did not properly consider hyperthreads (at least in local\ntesting), which likely skews CI results as well. The new code is both simpler\nand hopefully will produce more accurate results; locally it matches behavior\nof the Linux version of this script.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a5e937d743266bb2b4ac5c6f4ae4e3972d45bb2", "html_url": "https://github.com/rust-lang/rust/commit/9a5e937d743266bb2b4ac5c6f4ae4e3972d45bb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a5e937d743266bb2b4ac5c6f4ae4e3972d45bb2/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "520bd359a38a266f7823112b27cade0b470a4815", "url": "https://api.github.com/repos/rust-lang/rust/commits/520bd359a38a266f7823112b27cade0b470a4815", "html_url": "https://github.com/rust-lang/rust/commit/520bd359a38a266f7823112b27cade0b470a4815"}, {"sha": "6756ff9316008f04c339a8b024656195534b6937", "url": "https://api.github.com/repos/rust-lang/rust/commits/6756ff9316008f04c339a8b024656195534b6937", "html_url": "https://github.com/rust-lang/rust/commit/6756ff9316008f04c339a8b024656195534b6937"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "adfd895ead04e8b0e14f4d97be6382675036710d", "filename": "src/ci/cpu-usage-over-time.py", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/9a5e937d743266bb2b4ac5c6f4ae4e3972d45bb2/src%2Fci%2Fcpu-usage-over-time.py", "raw_url": "https://github.com/rust-lang/rust/raw/9a5e937d743266bb2b4ac5c6f4ae4e3972d45bb2/src%2Fci%2Fcpu-usage-over-time.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fcpu-usage-over-time.py?ref=9a5e937d743266bb2b4ac5c6f4ae4e3972d45bb2", "patch": "@@ -108,37 +108,37 @@ def idle_since(self, prev):\n     from ctypes import *\n     libc = cdll.LoadLibrary('/usr/lib/libc.dylib')\n \n-    PROESSOR_CPU_LOAD_INFO = c_int(2)\n+    class host_cpu_load_info_data_t(Structure):\n+        _fields_ = [(\"cpu_ticks\", c_uint * 4)]\n+\n+    host_statistics = libc.host_statistics\n+    host_statistics.argtypes = [\n+        c_uint,\n+        c_int,\n+        POINTER(host_cpu_load_info_data_t),\n+        POINTER(c_int)\n+    ]\n+    host_statistics.restype = c_int\n+\n     CPU_STATE_USER = 0\n     CPU_STATE_SYSTEM = 1\n     CPU_STATE_IDLE = 2\n     CPU_STATE_NICE = 3\n-    c_int_p = POINTER(c_int)\n-\n     class State:\n         def __init__(self):\n-            num_cpus_u = c_uint(0)\n-            cpu_info = c_int_p()\n-            cpu_info_cnt = c_int(0)\n-            err = libc.host_processor_info(\n+            stats = host_cpu_load_info_data_t()\n+            count = c_int(4) # HOST_CPU_LOAD_INFO_COUNT\n+            err = libc.host_statistics(\n                 libc.mach_host_self(),\n-                PROESSOR_CPU_LOAD_INFO,\n-                byref(num_cpus_u),\n-                byref(cpu_info),\n-                byref(cpu_info_cnt),\n+                c_int(3), # HOST_CPU_LOAD_INFO\n+                byref(stats),\n+                byref(count),\n             )\n             assert err == 0\n-            self.user = 0\n-            self.system = 0\n-            self.idle = 0\n-            self.nice = 0\n-            cur = 0\n-            while cur < cpu_info_cnt.value:\n-                self.user += cpu_info[cur + CPU_STATE_USER]\n-                self.system += cpu_info[cur + CPU_STATE_SYSTEM]\n-                self.idle += cpu_info[cur + CPU_STATE_IDLE]\n-                self.nice += cpu_info[cur + CPU_STATE_NICE]\n-                cur += num_cpus_u.value\n+            self.system = stats.cpu_ticks[CPU_STATE_SYSTEM]\n+            self.user = stats.cpu_ticks[CPU_STATE_USER]\n+            self.idle = stats.cpu_ticks[CPU_STATE_IDLE]\n+            self.nice = stats.cpu_ticks[CPU_STATE_NICE]\n \n         def idle_since(self, prev):\n             user = self.user - prev.user"}]}