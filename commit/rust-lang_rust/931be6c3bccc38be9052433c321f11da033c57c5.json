{"sha": "931be6c3bccc38be9052433c321f11da033c57c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzMWJlNmMzYmNjYzM4YmU5MDUyNDMzYzMyMWYxMWRhMDMzYzU3YzU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-12-06T15:10:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-06T15:10:08Z"}, "message": "Rollup merge of #67085 - reitermarkus:addr-parser, r=Mark-Simulacrum\n\nRemove boxed closures in address parser.\n\nSimplify address parser by removing unnecessary boxed closures.\n\nAlso relevant for https://github.com/rust-lang/rfcs/pull/2832.", "tree": {"sha": "5deec471683d621f91208385425acc4a6b04713c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5deec471683d621f91208385425acc4a6b04713c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/931be6c3bccc38be9052433c321f11da033c57c5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd6m9RCRBK7hj4Ov3rIwAAdHIIADCnRm9fNNElIkE0NVjFaW5u\nDT+u13fyUrD57+67s2zganYKTAdUwmVZHNnoreMsKKC4po9gTu26ZsmqMoyWaaPP\nKSyPyk430qkS1/Aqn+FV3/mJqH90CezmWiNkSNhGYhGrQWs9Y1Tk5nTYPBoOynG7\n3OsbUVjw2Tsg/ZRM0dsHM3pBBVhf+k3o7YuW6vaDfI2cMZZmAIPOo4byFDBIXic8\nY+WO4ezWA2LivnvV3xmaLiz6N9uIjAKY6aFwN6xmIQpa0ztYlKsXY5fv5chSGuh2\nfyPGN3ilh2PqsP3jm8Ox8VHxdfAm3Cvg8ZZjbP8i/eWxgs8LLyrcRZFO1fVQhFE=\n=Z+Pe\n-----END PGP SIGNATURE-----\n", "payload": "tree 5deec471683d621f91208385425acc4a6b04713c\nparent cc7c45fdc67a7e8439a502ef6de65f3d7db01dd8\nparent 79f876495b2853d1b78ba953ceb3114b8019100f\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1575645008 +0900\ncommitter GitHub <noreply@github.com> 1575645008 +0900\n\nRollup merge of #67085 - reitermarkus:addr-parser, r=Mark-Simulacrum\n\nRemove boxed closures in address parser.\n\nSimplify address parser by removing unnecessary boxed closures.\n\nAlso relevant for https://github.com/rust-lang/rfcs/pull/2832.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/931be6c3bccc38be9052433c321f11da033c57c5", "html_url": "https://github.com/rust-lang/rust/commit/931be6c3bccc38be9052433c321f11da033c57c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/931be6c3bccc38be9052433c321f11da033c57c5/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc7c45fdc67a7e8439a502ef6de65f3d7db01dd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc7c45fdc67a7e8439a502ef6de65f3d7db01dd8", "html_url": "https://github.com/rust-lang/rust/commit/cc7c45fdc67a7e8439a502ef6de65f3d7db01dd8"}, {"sha": "79f876495b2853d1b78ba953ceb3114b8019100f", "url": "https://api.github.com/repos/rust-lang/rust/commits/79f876495b2853d1b78ba953ceb3114b8019100f", "html_url": "https://github.com/rust-lang/rust/commit/79f876495b2853d1b78ba953ceb3114b8019100f"}], "stats": {"total": 23, "additions": 4, "deletions": 19}, "files": [{"sha": "686fa8c61a109410ab5b2c0ac8aa457cc5b46c83", "filename": "src/libstd/net/parser.rs", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/931be6c3bccc38be9052433c321f11da033c57c5/src%2Flibstd%2Fnet%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/931be6c3bccc38be9052433c321f11da033c57c5/src%2Flibstd%2Fnet%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fparser.rs?ref=931be6c3bccc38be9052433c321f11da033c57c5", "patch": "@@ -44,19 +44,6 @@ impl<'a> Parser<'a> {\n         self.read_atomically(move |p| cb(p).filter(|_| p.is_eof()))\n     }\n \n-    // Return result of first successful parser\n-    fn read_or<T>(\n-        &mut self,\n-        parsers: &mut [Box<dyn FnMut(&mut Parser<'_>) -> Option<T> + 'static>],\n-    ) -> Option<T> {\n-        for pf in parsers {\n-            if let Some(r) = self.read_atomically(|p: &mut Parser<'_>| pf(p)) {\n-                return Some(r);\n-            }\n-        }\n-        None\n-    }\n-\n     // Apply 3 parsers sequentially\n     fn read_seq_3<A, B, C, PA, PB, PC>(&mut self, pa: PA, pb: PB, pc: PC) -> Option<(A, B, C)>\n     where\n@@ -235,9 +222,8 @@ impl<'a> Parser<'a> {\n     }\n \n     fn read_ip_addr(&mut self) -> Option<IpAddr> {\n-        let ipv4_addr = |p: &mut Parser<'_>| p.read_ipv4_addr().map(IpAddr::V4);\n-        let ipv6_addr = |p: &mut Parser<'_>| p.read_ipv6_addr().map(IpAddr::V6);\n-        self.read_or(&mut [Box::new(ipv4_addr), Box::new(ipv6_addr)])\n+        self.read_ipv4_addr().map(IpAddr::V4)\n+            .or_else(|| self.read_ipv6_addr().map(IpAddr::V6))\n     }\n \n     fn read_socket_addr_v4(&mut self) -> Option<SocketAddrV4> {\n@@ -268,9 +254,8 @@ impl<'a> Parser<'a> {\n     }\n \n     fn read_socket_addr(&mut self) -> Option<SocketAddr> {\n-        let v4 = |p: &mut Parser<'_>| p.read_socket_addr_v4().map(SocketAddr::V4);\n-        let v6 = |p: &mut Parser<'_>| p.read_socket_addr_v6().map(SocketAddr::V6);\n-        self.read_or(&mut [Box::new(v4), Box::new(v6)])\n+        self.read_socket_addr_v4().map(SocketAddr::V4)\n+            .or_else(|| self.read_socket_addr_v6().map(SocketAddr::V6))\n     }\n }\n "}]}