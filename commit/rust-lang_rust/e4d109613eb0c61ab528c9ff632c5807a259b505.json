{"sha": "e4d109613eb0c61ab528c9ff632c5807a259b505", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0ZDEwOTYxM2ViMGM2MWFiNTI4YzlmZjYzMmM1ODA3YTI1OWI1MDU=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-10-28T00:55:17Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-10-29T02:46:14Z"}, "message": "Change as_str \u2192 to_string in proc_macro::Ident::span() docs\n\nThere is no `as_str` function on Ident any more.\n\nAlso change it to an intra doc link while we're at it.", "tree": {"sha": "e498c038758ec3702f3524143276fe017e3a7cbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e498c038758ec3702f3524143276fe017e3a7cbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4d109613eb0c61ab528c9ff632c5807a259b505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4d109613eb0c61ab528c9ff632c5807a259b505", "html_url": "https://github.com/rust-lang/rust/commit/e4d109613eb0c61ab528c9ff632c5807a259b505", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4d109613eb0c61ab528c9ff632c5807a259b505/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d247ad7d3d2a9f72cd60e281f39b5d85bd6a463", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d247ad7d3d2a9f72cd60e281f39b5d85bd6a463", "html_url": "https://github.com/rust-lang/rust/commit/4d247ad7d3d2a9f72cd60e281f39b5d85bd6a463"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ad8f6e86766e0c152dba597a83d90f1f335e33a4", "filename": "library/proc_macro/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4d109613eb0c61ab528c9ff632c5807a259b505/library%2Fproc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4d109613eb0c61ab528c9ff632c5807a259b505/library%2Fproc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Flib.rs?ref=e4d109613eb0c61ab528c9ff632c5807a259b505", "patch": "@@ -881,7 +881,7 @@ impl Ident {\n     }\n \n     /// Returns the span of this `Ident`, encompassing the entire string returned\n-    /// by `as_str`.\n+    /// by [`to_string`](Self::to_string).\n     #[stable(feature = \"proc_macro_lib2\", since = \"1.29.0\")]\n     pub fn span(&self) -> Span {\n         Span(self.0.span())"}]}