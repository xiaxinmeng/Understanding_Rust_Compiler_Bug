{"sha": "a301f84b6afc30c58dede5ddd804890f7a6f20a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMDFmODRiNmFmYzMwYzU4ZGVkZTVkZGQ4MDQ4OTBmN2E2ZjIwYTU=", "commit": {"author": {"name": "Lee Bousfield", "email": "ljbousfield@gmail.com", "date": "2017-07-12T16:55:39Z"}, "committer": {"name": "Lee Bousfield", "email": "ljbousfield@gmail.com", "date": "2017-07-12T16:55:39Z"}, "message": "Use try_with for with implementation", "tree": {"sha": "6442534f04d21f009dc4363a00bd4cb2a65fee34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6442534f04d21f009dc4363a00bd4cb2a65fee34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a301f84b6afc30c58dede5ddd804890f7a6f20a5", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE4PWe0/2fDR3tomkkxB9lBMEWQgkFAllmVIsACgkQxB9lBMEW\nQgnk8Qf9H5kGwS+lXhG+70VS9wZFYfBR672pW7YX1bbL9jI+CLiGR3K2+eGK0PLn\nUANa5YJEablYr9kBHDqXKnO4WfrHA5OypnOr8MkA2DiWsGs+6NqSD3vPdXXhI04Y\nFjfHHin6I21SmSQjF3XL0OrGN2RZm21QEQ878TIOBJzl363RvCFh/GnvUkW3NoAf\ncv8nGfMPHlUaI4obAoUlCGXcp0077OYK6gR6eB2Lj6L1pIBA8tu89ry/WiX+IeLz\n7yYdpLGfQQ4WkX+A+xRJDMpjo/Ds4KdVViZf8pr6wyrCJ+e/RbTB9uPafpGetO3L\nzgq60vKzvX8YRNAL36sPl2HCUdOvQw==\n=f0BI\n-----END PGP SIGNATURE-----", "payload": "tree 6442534f04d21f009dc4363a00bd4cb2a65fee34\nparent 8b5549defb629210a8ffc1af08b3209e084fbfd8\nauthor Lee Bousfield <ljbousfield@gmail.com> 1499878539 -0600\ncommitter Lee Bousfield <ljbousfield@gmail.com> 1499878539 -0600\n\nUse try_with for with implementation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a301f84b6afc30c58dede5ddd804890f7a6f20a5", "html_url": "https://github.com/rust-lang/rust/commit/a301f84b6afc30c58dede5ddd804890f7a6f20a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a301f84b6afc30c58dede5ddd804890f7a6f20a5/comments", "author": {"login": "PlasmaPower", "id": 6006498, "node_id": "MDQ6VXNlcjYwMDY0OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6006498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PlasmaPower", "html_url": "https://github.com/PlasmaPower", "followers_url": "https://api.github.com/users/PlasmaPower/followers", "following_url": "https://api.github.com/users/PlasmaPower/following{/other_user}", "gists_url": "https://api.github.com/users/PlasmaPower/gists{/gist_id}", "starred_url": "https://api.github.com/users/PlasmaPower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PlasmaPower/subscriptions", "organizations_url": "https://api.github.com/users/PlasmaPower/orgs", "repos_url": "https://api.github.com/users/PlasmaPower/repos", "events_url": "https://api.github.com/users/PlasmaPower/events{/privacy}", "received_events_url": "https://api.github.com/users/PlasmaPower/received_events", "type": "User", "site_admin": false}, "committer": {"login": "PlasmaPower", "id": 6006498, "node_id": "MDQ6VXNlcjYwMDY0OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6006498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PlasmaPower", "html_url": "https://github.com/PlasmaPower", "followers_url": "https://api.github.com/users/PlasmaPower/followers", "following_url": "https://api.github.com/users/PlasmaPower/following{/other_user}", "gists_url": "https://api.github.com/users/PlasmaPower/gists{/gist_id}", "starred_url": "https://api.github.com/users/PlasmaPower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PlasmaPower/subscriptions", "organizations_url": "https://api.github.com/users/PlasmaPower/orgs", "repos_url": "https://api.github.com/users/PlasmaPower/repos", "events_url": "https://api.github.com/users/PlasmaPower/events{/privacy}", "received_events_url": "https://api.github.com/users/PlasmaPower/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b5549defb629210a8ffc1af08b3209e084fbfd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b5549defb629210a8ffc1af08b3209e084fbfd8", "html_url": "https://github.com/rust-lang/rust/commit/8b5549defb629210a8ffc1af08b3209e084fbfd8"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "28e8f72ac64167e8a17a5c6504b08e52e4aa6a41", "filename": "src/libstd/thread/local.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a301f84b6afc30c58dede5ddd804890f7a6f20a5/src%2Flibstd%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a301f84b6afc30c58dede5ddd804890f7a6f20a5/src%2Flibstd%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Flocal.rs?ref=a301f84b6afc30c58dede5ddd804890f7a6f20a5", "patch": "@@ -284,15 +284,8 @@ impl<T: 'static> LocalKey<T> {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn with<F, R>(&'static self, f: F) -> R\n                       where F: FnOnce(&T) -> R {\n-        unsafe {\n-            let slot = (self.inner)();\n-            let slot = slot.expect(\"cannot access a TLS value during or \\\n-                                    after it is destroyed\");\n-            f(match *slot.get() {\n-                Some(ref inner) => inner,\n-                None => self.init(slot),\n-            })\n-        }\n+        self.try_with(f).expect(\"cannot access a TLS value during or \\\n+                                 after it is destroyed\")\n     }\n \n     unsafe fn init(&self, slot: &UnsafeCell<Option<T>>) -> &T {"}]}