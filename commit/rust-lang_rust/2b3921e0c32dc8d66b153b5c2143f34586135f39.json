{"sha": "2b3921e0c32dc8d66b153b5c2143f34586135f39", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiMzkyMWUwYzMyZGM4ZDY2YjE1M2I1YzIxNDNmMzQ1ODYxMzVmMzk=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-08-27T04:01:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-27T04:01:15Z"}, "message": "Rollup merge of #36014 - slash3g:stabilize-type-macros, r=nikomatsakis\n\nStabilize type-macros\n\nCloses #27245\n\nr? @nikomatsakis", "tree": {"sha": "cbf00f388c09fba27841fa98b5e6e081ca4a8325", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbf00f388c09fba27841fa98b5e6e081ca4a8325"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b3921e0c32dc8d66b153b5c2143f34586135f39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b3921e0c32dc8d66b153b5c2143f34586135f39", "html_url": "https://github.com/rust-lang/rust/commit/2b3921e0c32dc8d66b153b5c2143f34586135f39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b3921e0c32dc8d66b153b5c2143f34586135f39/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30835ec4e4f415e917b3e89edc8033789d1b009f", "url": "https://api.github.com/repos/rust-lang/rust/commits/30835ec4e4f415e917b3e89edc8033789d1b009f", "html_url": "https://github.com/rust-lang/rust/commit/30835ec4e4f415e917b3e89edc8033789d1b009f"}, {"sha": "ee055a1ff37bb47f32ed460ca7d249d91f8cbe7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee055a1ff37bb47f32ed460ca7d249d91f8cbe7d", "html_url": "https://github.com/rust-lang/rust/commit/ee055a1ff37bb47f32ed460ca7d249d91f8cbe7d"}], "stats": {"total": 63, "additions": 9, "deletions": 54}, "files": [{"sha": "26599208ec0091270f6f18767541ae38d92e4c71", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=2b3921e0c32dc8d66b153b5c2143f34586135f39", "patch": "@@ -491,18 +491,7 @@ fn expand_trait_item(ti: ast::TraitItem, fld: &mut MacroExpander)\n pub fn expand_type(t: P<ast::Ty>, fld: &mut MacroExpander) -> P<ast::Ty> {\n     let t = match t.node.clone() {\n         ast::TyKind::Mac(mac) => {\n-            if fld.cx.ecfg.features.unwrap().type_macros {\n-                expand_mac_invoc(mac, None, Vec::new(), t.span, fld)\n-            } else {\n-                feature_gate::emit_feature_err(\n-                    &fld.cx.parse_sess.span_diagnostic,\n-                    \"type_macros\",\n-                    t.span,\n-                    feature_gate::GateIssue::Language,\n-                    \"type macros are experimental\");\n-\n-                DummyResult::raw_ty(t.span)\n-            }\n+            expand_mac_invoc(mac, None, Vec::new(), t.span, fld)\n         }\n         _ => t\n     };"}, {"sha": "dc68e0646346473cca52a5ed9dceadbc296770ea", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=2b3921e0c32dc8d66b153b5c2143f34586135f39", "patch": "@@ -213,9 +213,6 @@ declare_features! (\n     // Allows associated type defaults\n     (active, associated_type_defaults, \"1.2.0\", Some(29661)),\n \n-    // Allows macros to appear in the type position.\n-    (active, type_macros, \"1.3.0\", Some(27245)),\n-\n     // allow `repr(simd)`, and importing the various simd intrinsics\n     (active, repr_simd, \"1.4.0\", Some(27731)),\n \n@@ -321,6 +318,8 @@ declare_features! (\n     // mean anything\n     (accepted, test_accepted_feature, \"1.0.0\", None),\n     (accepted, tuple_indexing, \"1.0.0\", None),\n+    // Allows macros to appear in the type position.\n+    (accepted, type_macros, \"1.13.0\", Some(27245)),\n     (accepted, while_let, \"1.0.0\", None),\n     // Allows `#[deprecated]` attribute\n     (accepted, deprecated, \"1.9.0\", Some(29935))"}, {"sha": "fa0b75da999c29127d17e8f42b975f8dda479376", "filename": "src/test/compile-fail/issue-30007.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Fcompile-fail%2Fissue-30007.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Fcompile-fail%2Fissue-30007.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-30007.rs?ref=2b3921e0c32dc8d66b153b5c2143f34586135f39", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(type_macros)]\n-\n macro_rules! t {\n     () => ( String ; );     //~ ERROR macro expansion ignores token `;`\n }"}, {"sha": "20e5b1d72d3d71a9f8ce4c9e716b1f1362db9f8c", "filename": "src/test/compile-fail/issue-32950.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Fcompile-fail%2Fissue-32950.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Fcompile-fail%2Fissue-32950.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-32950.rs?ref=2b3921e0c32dc8d66b153b5c2143f34586135f39", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(type_macros, concat_idents)]\n+#![feature(concat_idents)]\n \n #[derive(Debug)] //~ NOTE in this expansion\n struct Baz<T>("}, {"sha": "4aa0a3023bb109ed5398458c65e258329a1e6928", "filename": "src/test/compile-fail/macro-context.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Fcompile-fail%2Fmacro-context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Fcompile-fail%2Fmacro-context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-context.rs?ref=2b3921e0c32dc8d66b153b5c2143f34586135f39", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(type_macros)]\n-\n // (typeof used because it's surprisingly hard to find an unparsed token after a stmt)\n macro_rules! m {\n     () => ( i ; typeof );   //~ ERROR expected expression, found reserved keyword `typeof`"}, {"sha": "4a6dbf014a1cace35ae973c1daa5cf77ca3bade8", "filename": "src/test/compile-fail/macro-error.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Fcompile-fail%2Fmacro-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Fcompile-fail%2Fmacro-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-error.rs?ref=2b3921e0c32dc8d66b153b5c2143f34586135f39", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(type_macros)]\n-\n macro_rules! foo {\n     ($a:expr) => $a; //~ ERROR macro rhs must be delimited\n }"}, {"sha": "f3dcf405a68a6276abc0e99abc36df62e5baef40", "filename": "src/test/compile-fail/privacy/restricted/tuple-struct-fields/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest.rs?ref=2b3921e0c32dc8d66b153b5c2143f34586135f39", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(pub_restricted, type_macros)]\n+#![feature(pub_restricted)]\n \n mod foo {\n     type T = ();"}, {"sha": "3bf8ca30a6c3fe42df1b46936704d56cdce21c24", "filename": "src/test/compile-fail/privacy/restricted/tuple-struct-fields/test2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest2.rs?ref=2b3921e0c32dc8d66b153b5c2143f34586135f39", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(pub_restricted, type_macros)]\n+#![feature(pub_restricted)]\n \n macro_rules! define_struct {\n     ($t:ty) => {"}, {"sha": "febe224fb84dcf14ce2294d6b1940109b13e9843", "filename": "src/test/compile-fail/privacy/restricted/tuple-struct-fields/test3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest3.rs?ref=2b3921e0c32dc8d66b153b5c2143f34586135f39", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(pub_restricted, type_macros)]\n+#![feature(pub_restricted)]\n \n macro_rules! define_struct {\n     ($t:ty) => {"}, {"sha": "f06e3544e575dec1874a39eb9dc1eeb2b735aae0", "filename": "src/test/compile-fail/syntax-extension-minor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Fcompile-fail%2Fsyntax-extension-minor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Fcompile-fail%2Fsyntax-extension-minor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsyntax-extension-minor.rs?ref=2b3921e0c32dc8d66b153b5c2143f34586135f39", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(concat_idents, type_macros)]\n+#![feature(concat_idents)]\n \n pub fn main() {\n     struct Foo;"}, {"sha": "4712e2b65e16abeb4084729435e402e3c2733df3", "filename": "src/test/compile-fail/type-macros-fail.rs", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/30835ec4e4f415e917b3e89edc8033789d1b009f/src%2Ftest%2Fcompile-fail%2Ftype-macros-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30835ec4e4f415e917b3e89edc8033789d1b009f/src%2Ftest%2Fcompile-fail%2Ftype-macros-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-macros-fail.rs?ref=30835ec4e4f415e917b3e89edc8033789d1b009f", "patch": "@@ -1,22 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-macro_rules! Id {\n-    ($T:tt) => ($T);\n-}\n-\n-struct Foo<T> {\n-    x: Id!(T)\n-    //~^ ERROR: type macros are experimental (see issue #27245)\n-}\n-\n-fn main() {\n-    let foo = Foo { x: i32 };\n-}"}, {"sha": "2efd9333999b24ca0f83834b7be300b849cb7f19", "filename": "src/test/run-pass/simd-intrinsic-generic-cast.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-cast.rs?ref=2b3921e0c32dc8d66b153b5c2143f34586135f39", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(repr_simd, platform_intrinsics, concat_idents,\n-           type_macros, test)]\n+#![feature(repr_simd, platform_intrinsics, concat_idents, test)]\n #![allow(non_camel_case_types)]\n \n extern crate test;"}, {"sha": "84c0983de80c83abfb580d9dedcd2b4f9122ff16", "filename": "src/test/run-pass/type-macros-hlist.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Frun-pass%2Ftype-macros-hlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Frun-pass%2Ftype-macros-hlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-macros-hlist.rs?ref=2b3921e0c32dc8d66b153b5c2143f34586135f39", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(type_macros)]\n-\n use std::ops::*;\n \n #[derive(Copy, Clone, Debug, Eq, Ord, PartialEq, PartialOrd)]"}, {"sha": "7d1045cf3f1a82e0950e2298044b30c4dfada22e", "filename": "src/test/run-pass/type-macros-simple.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Frun-pass%2Ftype-macros-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3921e0c32dc8d66b153b5c2143f34586135f39/src%2Ftest%2Frun-pass%2Ftype-macros-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-macros-simple.rs?ref=2b3921e0c32dc8d66b153b5c2143f34586135f39", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(type_macros)]\n-\n macro_rules! Tuple {\n     { $A:ty,$B:ty } => { ($A, $B) }\n }"}]}