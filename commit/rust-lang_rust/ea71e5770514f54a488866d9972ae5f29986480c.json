{"sha": "ea71e5770514f54a488866d9972ae5f29986480c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhNzFlNTc3MDUxNGY1NGE0ODg4NjZkOTk3MmFlNWYyOTk4NjQ4MGM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-20T14:50:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-20T14:50:43Z"}, "message": "Merge #9648\n\n9648: minor: address review comments r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "db95bc7ee9db298e60191af59f1885422b97e977", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db95bc7ee9db298e60191af59f1885422b97e977"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea71e5770514f54a488866d9972ae5f29986480c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg9uLDCRBK7hj4Ov3rIwAA2u4IACeDweQp4vr6S5y/hhMNHv7u\n89/qIqEd6nUMQm/2N3ZH9Rnt2/me4F15iPbz+RXo24y60bJXH2gWrDOjfqLQXtqd\nej/iki2DYUmZT9M9kGxlIRTgHgoHQ1A5xSP4NDUfzzLGhuIakPaJgeJWOYc6xKXz\nXiw8MsJE5drQGOYABknFxUOY4K6XClQjXANMBXR0G6NiJqQJal/itfUfdv421/7P\nWFmpQw6L01yOeBqFe3Rw9us1H0hatpkXSING3txE8dgrdkO99tTE7Nr2m/pV3Zul\nabfV0Zs7ZyQAzbAd9/ElwHMdTXyx3hqggE8I55xmKkQxAX8CUFe+/xnEnHTeWXk=\n=J/p0\n-----END PGP SIGNATURE-----\n", "payload": "tree db95bc7ee9db298e60191af59f1885422b97e977\nparent c7c2144fa38c0a45b15787309df6b1e589649dd1\nparent 60e7c1de83badeb79227d2ec22c2b33edacc4d2a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1626792643 +0000\ncommitter GitHub <noreply@github.com> 1626792643 +0000\n\nMerge #9648\n\n9648: minor: address review comments r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea71e5770514f54a488866d9972ae5f29986480c", "html_url": "https://github.com/rust-lang/rust/commit/ea71e5770514f54a488866d9972ae5f29986480c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea71e5770514f54a488866d9972ae5f29986480c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7c2144fa38c0a45b15787309df6b1e589649dd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7c2144fa38c0a45b15787309df6b1e589649dd1", "html_url": "https://github.com/rust-lang/rust/commit/c7c2144fa38c0a45b15787309df6b1e589649dd1"}, {"sha": "60e7c1de83badeb79227d2ec22c2b33edacc4d2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/60e7c1de83badeb79227d2ec22c2b33edacc4d2a", "html_url": "https://github.com/rust-lang/rust/commit/60e7c1de83badeb79227d2ec22c2b33edacc4d2a"}], "stats": {"total": 69, "additions": 32, "deletions": 37}, "files": [{"sha": "fbdabcd77b71c54deb7a80fc1bd6987374d34633", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ea71e5770514f54a488866d9972ae5f29986480c/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea71e5770514f54a488866d9972ae5f29986480c/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=ea71e5770514f54a488866d9972ae5f29986480c", "patch": "@@ -346,6 +346,22 @@ impl ModuleDef {\n     }\n }\n \n+impl HasVisibility for ModuleDef {\n+    fn visibility(&self, db: &dyn HirDatabase) -> Visibility {\n+        match *self {\n+            ModuleDef::Module(it) => it.visibility(db),\n+            ModuleDef::Function(it) => it.visibility(db),\n+            ModuleDef::Adt(it) => it.visibility(db),\n+            ModuleDef::Const(it) => it.visibility(db),\n+            ModuleDef::Static(it) => it.visibility(db),\n+            ModuleDef::Trait(it) => it.visibility(db),\n+            ModuleDef::TypeAlias(it) => it.visibility(db),\n+            ModuleDef::Variant(it) => it.visibility(db),\n+            ModuleDef::BuiltinType(_) => Visibility::Public,\n+        }\n+    }\n+}\n+\n impl Module {\n     /// Name of this module.\n     pub fn name(self, db: &dyn HirDatabase) -> Option<Name> {"}, {"sha": "aedb2f95f92eeb9e7292b1c85a9aad8067850cdd", "filename": "crates/ide_assists/src/handlers/expand_glob_import.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ea71e5770514f54a488866d9972ae5f29986480c/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea71e5770514f54a488866d9972ae5f29986480c/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs?ref=ea71e5770514f54a488866d9972ae5f29986480c", "patch": "@@ -809,22 +809,22 @@ fn baz(bar: Bar) {}\n \",\n         );\n \n-//         check_assist_not_applicable(\n-//             expand_glob_import,\n-//             r\"\n-// mod foo {\n-//     mod bar {\n-//         pub mod baz {\n-//             pub struct Baz;\n-//         }\n-//     }\n-// }\n+        check_assist_not_applicable(\n+            expand_glob_import,\n+            r\"\n+mod foo {\n+    mod bar {\n+        pub mod baz {\n+            pub struct Baz;\n+        }\n+    }\n+}\n \n-// use foo::bar::baz::*$0;\n+use foo::bar::baz::*$0;\n \n-// fn qux(baz: Baz) {}\n-// \",\n-//         );\n+fn qux(baz: Baz) {}\n+\",\n+        );\n     }\n \n     #[test]"}, {"sha": "08d665f8ee9d7f99a239c03248a2614f6e27827b", "filename": "crates/ide_assists/src/handlers/fix_visibility.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ea71e5770514f54a488866d9972ae5f29986480c/crates%2Fide_assists%2Fsrc%2Fhandlers%2Ffix_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea71e5770514f54a488866d9972ae5f29986480c/crates%2Fide_assists%2Fsrc%2Fhandlers%2Ffix_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Ffix_visibility.rs?ref=ea71e5770514f54a488866d9972ae5f29986480c", "patch": "@@ -46,18 +46,7 @@ fn add_vis_to_referenced_module_def(acc: &mut Assists, ctx: &AssistContext) -> O\n     let current_module = ctx.sema.scope(path.syntax()).module()?;\n     let target_module = def.module(ctx.db())?;\n \n-    let vis = match def {\n-        hir::ModuleDef::Module(it) => it.visibility(ctx.db()),\n-        hir::ModuleDef::Function(it) => it.visibility(ctx.db()),\n-        hir::ModuleDef::Adt(it) => it.visibility(ctx.db()),\n-        hir::ModuleDef::Variant(it) => it.visibility(ctx.db()),\n-        hir::ModuleDef::Const(it) => it.visibility(ctx.db()),\n-        hir::ModuleDef::Static(it) => it.visibility(ctx.db()),\n-        hir::ModuleDef::Trait(it) => it.visibility(ctx.db()),\n-        hir::ModuleDef::TypeAlias(it) => it.visibility(ctx.db()),\n-        hir::ModuleDef::BuiltinType(_) => return None,\n-    };\n-    if vis.is_visible_from(ctx.db(), current_module.into()) {\n+    if def.visibility(ctx.db()).is_visible_from(ctx.db(), current_module.into()) {\n         return None;\n     };\n "}, {"sha": "6b6cb14537448d91291d9b809a954e91b8c15fc0", "filename": "crates/ide_db/src/defs.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ea71e5770514f54a488866d9972ae5f29986480c/crates%2Fide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea71e5770514f54a488866d9972ae5f29986480c/crates%2Fide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fdefs.rs?ref=ea71e5770514f54a488866d9972ae5f29986480c", "patch": "@@ -44,17 +44,7 @@ impl Definition {\n     pub fn visibility(&self, db: &RootDatabase) -> Option<Visibility> {\n         match self {\n             Definition::Field(sf) => Some(sf.visibility(db)),\n-            Definition::ModuleDef(def) => match def {\n-                ModuleDef::Module(it) => Some(it.visibility(db)),\n-                ModuleDef::Function(it) => Some(it.visibility(db)),\n-                ModuleDef::Adt(it) => Some(it.visibility(db)),\n-                ModuleDef::Const(it) => Some(it.visibility(db)),\n-                ModuleDef::Static(it) => Some(it.visibility(db)),\n-                ModuleDef::Trait(it) => Some(it.visibility(db)),\n-                ModuleDef::TypeAlias(it) => Some(it.visibility(db)),\n-                ModuleDef::Variant(it) => Some(it.visibility(db)),\n-                ModuleDef::BuiltinType(_) => None,\n-            },\n+            Definition::ModuleDef(def) => Some(def.visibility(db)),\n             Definition::Macro(_)\n             | Definition::SelfType(_)\n             | Definition::Local(_)"}]}