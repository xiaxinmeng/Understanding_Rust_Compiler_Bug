{"sha": "4d9451b1d1e334e90e6725d5577545eae4e28545", "node_id": "C_kwDOAAsO6NoAKDRkOTQ1MWIxZDFlMzM0ZTkwZTY3MjVkNTU3NzU0NWVhZTRlMjg1NDU", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-17T15:30:42Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-21T20:36:15Z"}, "message": "Fix an ICE that I just made worse", "tree": {"sha": "1b73efa60256650d13d9a21c98f606cf1f5bdbd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b73efa60256650d13d9a21c98f606cf1f5bdbd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d9451b1d1e334e90e6725d5577545eae4e28545", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d9451b1d1e334e90e6725d5577545eae4e28545", "html_url": "https://github.com/rust-lang/rust/commit/4d9451b1d1e334e90e6725d5577545eae4e28545", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d9451b1d1e334e90e6725d5577545eae4e28545/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9f3c2209c6ac4ff36df1816b842d0a1c1540624", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9f3c2209c6ac4ff36df1816b842d0a1c1540624", "html_url": "https://github.com/rust-lang/rust/commit/a9f3c2209c6ac4ff36df1816b842d0a1c1540624"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "4364fca9739c7f1c294e89fcd5670eddff009bf8", "filename": "compiler/rustc_mir_build/src/thir/pattern/const_to_pat.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4d9451b1d1e334e90e6725d5577545eae4e28545/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d9451b1d1e334e90e6725d5577545eae4e28545/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs?ref=4d9451b1d1e334e90e6725d5577545eae4e28545", "patch": "@@ -1,7 +1,6 @@\n use rustc_errors::DelayDm;\n use rustc_hir as hir;\n use rustc_index::vec::Idx;\n-use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::{InferCtxt, TyCtxtInferExt};\n use rustc_middle::mir::{self, Field};\n use rustc_middle::thir::{FieldPat, Pat, PatKind};\n@@ -227,21 +226,14 @@ impl<'tcx> ConstToPat<'tcx> {\n         // using `PartialEq::eq` in this scenario in the past.)\n         let partial_eq_trait_id =\n             self.tcx().require_lang_item(hir::LangItem::PartialEq, Some(self.span));\n-        let any_ty = self\n-            .infcx\n-            .next_ty_var(TypeVariableOrigin {\n-                kind: TypeVariableOriginKind::MiscVariable,\n-                span: self.span,\n-            })\n-            .into();\n         let obligation: PredicateObligation<'_> = predicate_for_trait_def(\n             self.tcx(),\n             self.param_env,\n             ObligationCause::misc(self.span, self.id),\n             partial_eq_trait_id,\n             0,\n             ty,\n-            [any_ty],\n+            [ty.into()],\n         );\n         // FIXME: should this call a `predicate_must_hold` variant instead?\n "}, {"sha": "daa432d9ae5d1d2db7c98c21359df6c23cb92379", "filename": "src/test/ui/pattern/usefulness/const-partial_eq-fallback-ice.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4d9451b1d1e334e90e6725d5577545eae4e28545/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconst-partial_eq-fallback-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d9451b1d1e334e90e6725d5577545eae4e28545/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconst-partial_eq-fallback-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconst-partial_eq-fallback-ice.rs?ref=4d9451b1d1e334e90e6725d5577545eae4e28545", "patch": "@@ -0,0 +1,20 @@\n+#![allow(warnings)]\n+\n+struct MyType;\n+\n+impl PartialEq<usize> for MyType {\n+    fn eq(&self, y: &usize) -> bool {\n+        true\n+    }\n+}\n+\n+const CONSTANT: &&MyType = &&MyType;\n+\n+fn main() {\n+    if let CONSTANT = &&MyType {\n+        //~^ ERROR must be annotated with `#[derive(PartialEq, Eq)]`\n+        println!(\"semantic!\");\n+    } else {\n+        println!(\"structural!\");\n+    }\n+}"}, {"sha": "358421cd6d24c6bdb5f3ffd68efef89218d5fefb", "filename": "src/test/ui/pattern/usefulness/const-partial_eq-fallback-ice.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4d9451b1d1e334e90e6725d5577545eae4e28545/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconst-partial_eq-fallback-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d9451b1d1e334e90e6725d5577545eae4e28545/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconst-partial_eq-fallback-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconst-partial_eq-fallback-ice.stderr?ref=4d9451b1d1e334e90e6725d5577545eae4e28545", "patch": "@@ -0,0 +1,8 @@\n+error: to use a constant of type `MyType` in a pattern, `MyType` must be annotated with `#[derive(PartialEq, Eq)]`\n+  --> $DIR/const-partial_eq-fallback-ice.rs:14:12\n+   |\n+LL |     if let CONSTANT = &&MyType {\n+   |            ^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}