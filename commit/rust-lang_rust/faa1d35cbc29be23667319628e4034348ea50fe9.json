{"sha": "faa1d35cbc29be23667319628e4034348ea50fe9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhYTFkMzVjYmMyOWJlMjM2NjczMTk2MjhlNDAzNDM0OGVhNTBmZTk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-10T18:38:04Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-10T18:38:04Z"}, "message": "dont complete () if they are already there", "tree": {"sha": "195ec048e65baba519213a0a9c9b0143de555376", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/195ec048e65baba519213a0a9c9b0143de555376"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/faa1d35cbc29be23667319628e4034348ea50fe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/faa1d35cbc29be23667319628e4034348ea50fe9", "html_url": "https://github.com/rust-lang/rust/commit/faa1d35cbc29be23667319628e4034348ea50fe9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/faa1d35cbc29be23667319628e4034348ea50fe9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f96312b8360040086a236279515d178bf26ffb14", "url": "https://api.github.com/repos/rust-lang/rust/commits/f96312b8360040086a236279515d178bf26ffb14", "html_url": "https://github.com/rust-lang/rust/commit/f96312b8360040086a236279515d178bf26ffb14"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "80d0b166396e1d28f37f9b83d9c871ef892dc8f0", "filename": "crates/ra_ide_api/src/completion/complete_dot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/faa1d35cbc29be23667319628e4034348ea50fe9/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faa1d35cbc29be23667319628e4034348ea50fe9/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=faa1d35cbc29be23667319628e4034348ea50fe9", "patch": "@@ -16,7 +16,7 @@ pub(super) fn complete_dot(acc: &mut Completions, ctx: &CompletionContext) -> Ca\n         None => return Ok(()),\n     };\n     let receiver_ty = infer_result[expr].clone();\n-    if !ctx.is_method_call {\n+    if !ctx.is_call {\n         complete_fields(acc, ctx, receiver_ty)?;\n     }\n     Ok(())"}, {"sha": "2494d28edc8bd6d894f0fd3e3fa4181e8d09bede", "filename": "crates/ra_ide_api/src/completion/complete_path.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/faa1d35cbc29be23667319628e4034348ea50fe9/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faa1d35cbc29be23667319628e4034348ea50fe9/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=faa1d35cbc29be23667319628e4034348ea50fe9", "patch": "@@ -125,4 +125,18 @@ mod tests {\n             \"foo\",\n         )\n     }\n+\n+    #[test]\n+    fn dont_render_function_parens_if_already_call() {\n+        check_reference_completion(\n+            \"\n+            //- /lib.rs\n+            fn frobnicate() {}\n+            fn main() {\n+                frob<|>();\n+            }\n+            \",\n+            \"main;frobnicate\",\n+        )\n+    }\n }"}, {"sha": "113f6c070b6847f8354dc57efdc8d723b18a6d3e", "filename": "crates/ra_ide_api/src/completion/completion_context.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/faa1d35cbc29be23667319628e4034348ea50fe9/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faa1d35cbc29be23667319628e4034348ea50fe9/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=faa1d35cbc29be23667319628e4034348ea50fe9", "patch": "@@ -32,8 +32,8 @@ pub(super) struct CompletionContext<'a> {\n     pub(super) is_new_item: bool,\n     /// The receiver if this is a field or method access, i.e. writing something.<|>\n     pub(super) dot_receiver: Option<&'a ast::Expr>,\n-    /// If this is a method call in particular, i.e. the () are already there.\n-    pub(super) is_method_call: bool,\n+    /// If this is a call (method or function) in particular, i.e. the () are already there.\n+    pub(super) is_call: bool,\n }\n \n impl<'a> CompletionContext<'a> {\n@@ -60,7 +60,7 @@ impl<'a> CompletionContext<'a> {\n             can_be_stmt: false,\n             is_new_item: false,\n             dot_receiver: None,\n-            is_method_call: false,\n+            is_call: false,\n         };\n         ctx.fill(original_file, position.offset);\n         Ok(Some(ctx))\n@@ -172,6 +172,12 @@ impl<'a> CompletionContext<'a> {\n                     }\n                 }\n             }\n+            self.is_call = path\n+                .syntax()\n+                .parent()\n+                .and_then(ast::PathExpr::cast)\n+                .and_then(|it| it.syntax().parent().and_then(ast::CallExpr::cast))\n+                .is_some()\n         }\n         if let Some(field_expr) = ast::FieldExpr::cast(parent) {\n             // The receiver comes before the point of insertion of the fake\n@@ -187,7 +193,7 @@ impl<'a> CompletionContext<'a> {\n                 .expr()\n                 .map(|e| e.syntax().range())\n                 .and_then(|r| find_node_with_range(original_file.syntax(), r));\n-            self.is_method_call = true;\n+            self.is_call = true;\n         }\n     }\n }"}, {"sha": "6a97704299ec074995c59393265c651431ada9a4", "filename": "crates/ra_ide_api/src/completion/completion_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/faa1d35cbc29be23667319628e4034348ea50fe9/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faa1d35cbc29be23667319628e4034348ea50fe9/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=faa1d35cbc29be23667319628e4034348ea50fe9", "patch": "@@ -165,7 +165,7 @@ impl Builder {\n \n     fn from_function(mut self, ctx: &CompletionContext, function: hir::Function) -> Builder {\n         // If not an import, add parenthesis automatically.\n-        if ctx.use_item_syntax.is_none() {\n+        if ctx.use_item_syntax.is_none() && !ctx.is_call {\n             if function.signature(ctx.db).args().is_empty() {\n                 self.snippet = Some(format!(\"{}()$0\", self.label));\n             } else {"}]}