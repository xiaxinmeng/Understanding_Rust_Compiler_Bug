{"sha": "41c6bb1096abb026d496c2136bb18c001eca46fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxYzZiYjEwOTZhYmIwMjZkNDk2YzIxMzZiYjE4YzAwMWVjYTQ2ZmU=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-03-12T15:53:33Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-04-21T08:48:11Z"}, "message": "Introduce `LocalSource` into the AST.\n\nThis will be used to keep track of the origin of a local in the AST. In\nparticular, it will be used by `async fn` lowering for the locals in\n`let <pat>: <ty> = __arg0;` statements.", "tree": {"sha": "18bc1364d09a1e9ac054d312355af65ca5139c72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18bc1364d09a1e9ac054d312355af65ca5139c72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41c6bb1096abb026d496c2136bb18c001eca46fe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAly8LksACgkQAXYLT59T\n8VRDOw//UsjUTbVsZHIYc3oyPzc9VYdBsK0kIeT0F0PDBCylHvm0ZqRrM6PbJEh3\nGETL2viL6Hw1gOeaOb3vyWfawMcbT+RnpvwDIcYjbXaDfjyBYKyylxXhcP+3kGv6\nS2/3qPbMsmOQXXxEUfQGRohNez8bVSwSJ5mGzE23FyBHSsrhdr3rKtSXShMyu3NX\nHhdgtFSvespLEPWEaCu0tQ6eBdcIr1BF0NwvqN9lt6xmNbwOLYntlTywwyhuP37L\nP95iVe69MxjH2tuzwloipqNIN09FtEQmOLN4Q3qVYlUJoO6aFGhdkZchkqmYc5cL\nzz7jgS6gLQ10+d4TYRJ1tF1csvTtZVzjJGmSXnoTboZJan/37yTppG6JJ4XYDbCl\nEKkG/5qVqIUA78TtBxD5yd7JL0mRqH6UhXq501jpBWa8egkyLasmm15BUpmJ1lVT\ndAV4ah3r8eOmFkooiwhO7+Csz+Op3lQ5xqVMYDnPa4Ym+ghaejoUh8NvcPvHFht7\nqrlSH0wX6DiYbU4wSEJ8nbKnT/HZhxxfsFSWVh9fep85iV/rCaoq5kn2HgZOVaNd\n2PVIWek2H6mo4j1uzUVl6RpALbT98V49YgR008bGKc4wltVHjq2Xnmni4poBgN30\n5RQBnakv5v7rtMWrVXRGd8qgBHAZeefonqOVQAHdYeP+RHxIZ7o=\n=wHMB\n-----END PGP SIGNATURE-----", "payload": "tree 18bc1364d09a1e9ac054d312355af65ca5139c72\nparent 8b57be1bb3be3be5ac431ed9a0a310d2023b1c9d\nauthor David Wood <david@davidtw.co> 1552406013 +0100\ncommitter David Wood <david@davidtw.co> 1555836491 +0100\n\nIntroduce `LocalSource` into the AST.\n\nThis will be used to keep track of the origin of a local in the AST. In\nparticular, it will be used by `async fn` lowering for the locals in\n`let <pat>: <ty> = __arg0;` statements.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41c6bb1096abb026d496c2136bb18c001eca46fe", "html_url": "https://github.com/rust-lang/rust/commit/41c6bb1096abb026d496c2136bb18c001eca46fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41c6bb1096abb026d496c2136bb18c001eca46fe/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b57be1bb3be3be5ac431ed9a0a310d2023b1c9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b57be1bb3be3be5ac431ed9a0a310d2023b1c9d", "html_url": "https://github.com/rust-lang/rust/commit/8b57be1bb3be3be5ac431ed9a0a310d2023b1c9d"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "e4cf3cfc63db939dcd69599cc2a36d658251c269", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=41c6bb1096abb026d496c2136bb18c001eca46fe", "patch": "@@ -2224,10 +2224,17 @@ impl<'a> LoweringContext<'a> {\n             init: l.init.as_ref().map(|e| P(self.lower_expr(e))),\n             span: l.span,\n             attrs: l.attrs.clone(),\n-            source: hir::LocalSource::Normal,\n+            source: self.lower_local_source(l.source),\n         }, ids)\n     }\n \n+    fn lower_local_source(&mut self, ls: LocalSource) -> hir::LocalSource {\n+        match ls {\n+            LocalSource::Normal => hir::LocalSource::Normal,\n+            LocalSource::AsyncFn => hir::LocalSource::AsyncFn,\n+        }\n+    }\n+\n     fn lower_mutability(&mut self, m: Mutability) -> hir::Mutability {\n         match m {\n             Mutability::Mutable => hir::MutMutable,"}, {"sha": "e873663a613b41f90d750af4679953d5a637bc48", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=41c6bb1096abb026d496c2136bb18c001eca46fe", "patch": "@@ -1583,6 +1583,17 @@ pub enum LocalSource {\n     Normal,\n     /// A desugared `for _ in _ { .. }` loop.\n     ForLoopDesugar,\n+    /// When lowering async functions, we create locals within the `async move` so that\n+    /// all arguments are dropped after the future is polled.\n+    ///\n+    /// ```ignore (pseudo-Rust)\n+    /// async fn foo(<pattern> @ x: Type) {\n+    ///     async move {\n+    ///         let <pattern> = x;\n+    ///     }\n+    /// }\n+    /// ```\n+    AsyncFn,\n }\n \n /// Hints at the original code for a `match _ { .. }`."}, {"sha": "65795d2b136b42b2cafb7124da8aa8bf294a2b77", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=41c6bb1096abb026d496c2136bb18c001eca46fe", "patch": "@@ -435,4 +435,3 @@ impl<'hir> HashStable<StableHashingContext<'hir>> for attr::OptimizeAttr {\n         mem::discriminant(self).hash_stable(hcx, hasher);\n     }\n }\n-"}, {"sha": "c4f07d9c544d240f237779056a016e4b615e6caa", "filename": "src/librustc_mir/hair/pattern/check_match.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs?ref=41c6bb1096abb026d496c2136bb18c001eca46fe", "patch": "@@ -76,6 +76,7 @@ impl<'a, 'tcx> Visitor<'tcx> for MatchVisitor<'a, 'tcx> {\n         self.check_irrefutable(&loc.pat, match loc.source {\n             hir::LocalSource::Normal => \"local binding\",\n             hir::LocalSource::ForLoopDesugar => \"`for` loop binding\",\n+            hir::LocalSource::AsyncFn => \"async fn binding\",\n         });\n \n         // Check legality of move bindings and `@` patterns."}, {"sha": "2fe0ebcdd28e5c7ac3e4b4913a8b936d9ad14d1c", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=41c6bb1096abb026d496c2136bb18c001eca46fe", "patch": "@@ -888,6 +888,17 @@ pub struct Local {\n     pub id: NodeId,\n     pub span: Span,\n     pub attrs: ThinVec<Attribute>,\n+    /// Origin of this local variable.\n+    pub source: LocalSource,\n+}\n+\n+#[derive(Clone, Copy, RustcEncodable, RustcDecodable, Debug)]\n+pub enum LocalSource {\n+    /// Local was parsed from source.\n+    Normal,\n+    /// Within `ast::IsAsync::Async`, a local is generated that will contain the moved arguments\n+    /// of an `async fn`.\n+    AsyncFn,\n }\n \n /// An arm of a 'match'."}, {"sha": "029c45eaa7247a346c97a5224be8b7396aa350b1", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=41c6bb1096abb026d496c2136bb18c001eca46fe", "patch": "@@ -526,6 +526,7 @@ impl<'a> AstBuilder for ExtCtxt<'a> {\n             id: ast::DUMMY_NODE_ID,\n             span: sp,\n             attrs: ThinVec::new(),\n+            source: ast::LocalSource::Normal,\n         });\n         ast::Stmt {\n             id: ast::DUMMY_NODE_ID,\n@@ -554,6 +555,7 @@ impl<'a> AstBuilder for ExtCtxt<'a> {\n             id: ast::DUMMY_NODE_ID,\n             span: sp,\n             attrs: ThinVec::new(),\n+            source: ast::LocalSource::Normal,\n         });\n         ast::Stmt {\n             id: ast::DUMMY_NODE_ID,\n@@ -571,6 +573,7 @@ impl<'a> AstBuilder for ExtCtxt<'a> {\n             id: ast::DUMMY_NODE_ID,\n             span,\n             attrs: ThinVec::new(),\n+            source: ast::LocalSource::Normal,\n         });\n         ast::Stmt {\n             id: ast::DUMMY_NODE_ID,"}, {"sha": "87826ccc89171b51d12a020f7c245e0116bf5d0a", "filename": "src/libsyntax/mut_visit.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibsyntax%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibsyntax%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fmut_visit.rs?ref=41c6bb1096abb026d496c2136bb18c001eca46fe", "patch": "@@ -208,6 +208,10 @@ pub trait MutVisitor: Sized {\n         noop_visit_local(l, self);\n     }\n \n+    fn visit_local_source(&mut self, l: &mut LocalSource) {\n+        noop_visit_local_source(l, self);\n+    }\n+\n     fn visit_mac(&mut self, _mac: &mut Mac) {\n         panic!(\"visit_mac disabled by default\");\n         // N.B., see note about macros above. If you really want a visitor that\n@@ -511,13 +515,17 @@ pub fn noop_visit_parenthesized_parameter_data<T: MutVisitor>(args: &mut Parenth\n }\n \n pub fn noop_visit_local<T: MutVisitor>(local: &mut P<Local>, vis: &mut T) {\n-    let Local { id, pat, ty, init, span, attrs } = local.deref_mut();\n+    let Local { id, pat, ty, init, span, attrs, source } = local.deref_mut();\n     vis.visit_id(id);\n     vis.visit_pat(pat);\n     visit_opt(ty, |ty| vis.visit_ty(ty));\n     visit_opt(init, |init| vis.visit_expr(init));\n     vis.visit_span(span);\n     visit_thin_attrs(attrs, vis);\n+    vis.visit_local_source(source);\n+}\n+\n+pub fn noop_visit_local_source<T: MutVisitor>(_local_source: &mut LocalSource, _vis: &mut T) {\n }\n \n pub fn noop_visit_attribute<T: MutVisitor>(attr: &mut Attribute, vis: &mut T) {"}, {"sha": "8620627765fb673232bd5957b12a8dba17832e4c", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=41c6bb1096abb026d496c2136bb18c001eca46fe", "patch": "@@ -14,7 +14,7 @@ use crate::ast::{GenericParam, GenericParamKind};\n use crate::ast::GenericArg;\n use crate::ast::{Ident, ImplItem, IsAsync, IsAuto, Item, ItemKind};\n use crate::ast::{Label, Lifetime, Lit, LitKind};\n-use crate::ast::Local;\n+use crate::ast::{Local, LocalSource};\n use crate::ast::MacStmtStyle;\n use crate::ast::{Mac, Mac_, MacDelimiter};\n use crate::ast::{MutTy, Mutability};\n@@ -5029,6 +5029,7 @@ impl<'a> Parser<'a> {\n             id: ast::DUMMY_NODE_ID,\n             span: lo.to(hi),\n             attrs,\n+            source: LocalSource::Normal,\n         }))\n     }\n "}, {"sha": "2fc1fc9140dc38ce096b3f0b4cb12b74d928ba0f", "filename": "src/libsyntax_ext/deriving/debug.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibsyntax_ext%2Fderiving%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c6bb1096abb026d496c2136bb18c001eca46fe/src%2Flibsyntax_ext%2Fderiving%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fdebug.rs?ref=41c6bb1096abb026d496c2136bb18c001eca46fe", "patch": "@@ -128,6 +128,7 @@ fn stmt_let_undescore(cx: &mut ExtCtxt<'_>, sp: Span, expr: P<ast::Expr>) -> ast\n         id: ast::DUMMY_NODE_ID,\n         span: sp,\n         attrs: ThinVec::new(),\n+        source: ast::LocalSource::Normal,\n     });\n     ast::Stmt {\n         id: ast::DUMMY_NODE_ID,"}]}