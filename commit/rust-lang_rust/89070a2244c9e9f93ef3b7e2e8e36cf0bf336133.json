{"sha": "89070a2244c9e9f93ef3b7e2e8e36cf0bf336133", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MDcwYTIyNDRjOWU5ZjkzZWYzYjdlMmU4ZTM2Y2YwYmYzMzYxMzM=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-04-02T13:53:16Z"}, "committer": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-04-05T03:52:43Z"}, "message": "Implement LineClasses", "tree": {"sha": "f00183857745516ef1900bcae94516e947d8cee7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f00183857745516ef1900bcae94516e947d8cee7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89070a2244c9e9f93ef3b7e2e8e36cf0bf336133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89070a2244c9e9f93ef3b7e2e8e36cf0bf336133", "html_url": "https://github.com/rust-lang/rust/commit/89070a2244c9e9f93ef3b7e2e8e36cf0bf336133", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89070a2244c9e9f93ef3b7e2e8e36cf0bf336133/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a43ac40a785c0a56e30d61bfb573dccec7a2f7b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a43ac40a785c0a56e30d61bfb573dccec7a2f7b7", "html_url": "https://github.com/rust-lang/rust/commit/a43ac40a785c0a56e30d61bfb573dccec7a2f7b7"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "9d5543258f6cee01e47c60421dee4510e3bec345", "filename": "src/comment.rs", "status": "modified", "additions": 46, "deletions": 2, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/89070a2244c9e9f93ef3b7e2e8e36cf0bf336133/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89070a2244c9e9f93ef3b7e2e8e36cf0bf336133/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=89070a2244c9e9f93ef3b7e2e8e36cf0bf336133", "patch": "@@ -901,6 +901,45 @@ where\n     }\n }\n \n+/// An iterator over the lines of a string, paired with the char kind at the\n+/// end of the line.\n+pub struct LineClasses<'a> {\n+    base: iter::Peekable<CharClasses<std::str::Chars<'a>>>,\n+    kind: FullCodeCharKind,\n+}\n+\n+impl<'a> LineClasses<'a> {\n+    pub fn new(s: &'a str) -> Self {\n+        LineClasses {\n+            base: CharClasses::new(s.chars()).peekable(),\n+            kind: FullCodeCharKind::Normal,\n+        }\n+    }\n+}\n+\n+impl<'a> Iterator for LineClasses<'a> {\n+    type Item = (FullCodeCharKind, String);\n+\n+    fn next(&mut self) -> Option<Self::Item> {\n+        if self.base.peek().is_none() {\n+            return None;\n+        }\n+\n+        let mut line = String::new();\n+\n+        while let Some((kind, c)) = self.base.next() {\n+            self.kind = kind;\n+            if c == '\\n' {\n+                break;\n+            } else {\n+                line.push(c);\n+            }\n+        }\n+\n+        Some((self.kind, line))\n+    }\n+}\n+\n /// Iterator over functional and commented parts of a string. Any part of a string is either\n /// functional code, either *one* block comment, either *one* line comment. Whitespace between\n /// comments is functional code. Line comments contain their ending newlines.\n@@ -1141,8 +1180,7 @@ fn remove_comment_header(comment: &str) -> &str {\n \n #[cfg(test)]\n mod test {\n-    use super::{contains_comment, rewrite_comment, CharClasses, CodeCharKind, CommentCodeSlices,\n-                FindUncommented, FullCodeCharKind};\n+    use super::*;\n     use shape::{Indent, Shape};\n \n     #[test]\n@@ -1298,4 +1336,10 @@ mod test {\n         check(\"\\\"/* abc */\\\"\", \"abc\", Some(4));\n         check(\"\\\"/* abc\", \"abc\", Some(4));\n     }\n+\n+    #[test]\n+    fn test_remove_trailing_white_spaces() {\n+        let s = format!(\"    r#\\\"\\n        test\\n    \\\"#\");\n+        assert_eq!(remove_trailing_white_spaces(&s), s);\n+    }\n }"}]}