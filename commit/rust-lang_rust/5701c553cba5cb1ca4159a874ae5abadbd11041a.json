{"sha": "5701c553cba5cb1ca4159a874ae5abadbd11041a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3MDFjNTUzY2JhNWNiMWNhNDE1OWE4NzRhZTVhYmFkYmQxMTA0MWE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-26T10:26:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-26T10:26:19Z"}, "message": "Merge #9002\n\n9002: Move annotations below item attributes r=Veykril a=Veykril\n\nThis moves annotations/code lenses below attributes in items, bringing them inline with functions where this is already the case. This is done by changing the annotations covering range to just the name node's range which is also more inline with what the lsp expects which is that the range should ideally only cover a single line. \r\n\r\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/9000\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "b17f3c39bc34d00b42eafef579e99f15ccc4b539", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b17f3c39bc34d00b42eafef579e99f15ccc4b539"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5701c553cba5cb1ca4159a874ae5abadbd11041a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgriJLCRBK7hj4Ov3rIwAADBcIAEtAPR2NJR/r7LXBppKMd80G\nwnYX/v8LanL3tmc1DYam2aTTJGmRIPAc2YYJqVU1AYaZPlXl5MlIdZizdtdp99h1\naVmMCHRGgaMz4IwlYtv43R7lC0Nbjgjcqt0Fyega6QaH16qE5mI8i2YTVyCH3O6d\n4DvTT0yumqC1LlM8m1GHEbg/QBr8iw21lfgjPYbxvvWCp4FBa2qMMwEoF0Ukv6jf\n8eohBI/VOKu7DqrOSvclzIqx5BOAEMFqVrHEUxNSyB0BYjEVr+G6LNjjeYFp6KCh\n8sTd5fkJJGZBmGHblP4+bR2/2uGd8mX9pkRwCIAJecK9EjsKIWJ5WfJt45VJQCQ=\n=0Glz\n-----END PGP SIGNATURE-----\n", "payload": "tree b17f3c39bc34d00b42eafef579e99f15ccc4b539\nparent 8c80a217722484f23b28a58dcdf91b051fac375a\nparent dfa47eaadbc2d999cdf7b18fe18dbaa3b630240a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1622024779 +0000\ncommitter GitHub <noreply@github.com> 1622024779 +0000\n\nMerge #9002\n\n9002: Move annotations below item attributes r=Veykril a=Veykril\n\nThis moves annotations/code lenses below attributes in items, bringing them inline with functions where this is already the case. This is done by changing the annotations covering range to just the name node's range which is also more inline with what the lsp expects which is that the range should ideally only cover a single line. \r\n\r\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/9000\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5701c553cba5cb1ca4159a874ae5abadbd11041a", "html_url": "https://github.com/rust-lang/rust/commit/5701c553cba5cb1ca4159a874ae5abadbd11041a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5701c553cba5cb1ca4159a874ae5abadbd11041a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c80a217722484f23b28a58dcdf91b051fac375a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c80a217722484f23b28a58dcdf91b051fac375a", "html_url": "https://github.com/rust-lang/rust/commit/8c80a217722484f23b28a58dcdf91b051fac375a"}, {"sha": "dfa47eaadbc2d999cdf7b18fe18dbaa3b630240a", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfa47eaadbc2d999cdf7b18fe18dbaa3b630240a", "html_url": "https://github.com/rust-lang/rust/commit/dfa47eaadbc2d999cdf7b18fe18dbaa3b630240a"}], "stats": {"total": 66, "additions": 31, "deletions": 35}, "files": [{"sha": "b0c4ed60aa9f011b3dfd2140ef053cdb74c95da3", "filename": "crates/ide/src/annotations.rs", "status": "modified", "additions": 31, "deletions": 35, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/5701c553cba5cb1ca4159a874ae5abadbd11041a/crates%2Fide%2Fsrc%2Fannotations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5701c553cba5cb1ca4159a874ae5abadbd11041a/crates%2Fide%2Fsrc%2Fannotations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fannotations.rs?ref=5701c553cba5cb1ca4159a874ae5abadbd11041a", "patch": "@@ -5,7 +5,7 @@ use ide_db::{\n     helpers::visit_file_defs,\n     RootDatabase,\n };\n-use syntax::{ast::NameOwner, AstNode, TextRange, TextSize};\n+use syntax::{ast::NameOwner, AstNode, TextRange};\n \n use crate::{\n     fn_references::find_all_methods,\n@@ -80,26 +80,26 @@ pub(crate) fn annotations(\n \n     visit_file_defs(&Semantics::new(db), file_id, &mut |def| match def {\n         Either::Left(def) => {\n-            let node = match def {\n+            let range = match def {\n                 hir::ModuleDef::Const(konst) => {\n-                    konst.source(db).and_then(|node| range_and_position_of(&node, file_id))\n+                    konst.source(db).and_then(|node| name_range(&node, file_id))\n                 }\n                 hir::ModuleDef::Trait(trait_) => {\n-                    trait_.source(db).and_then(|node| range_and_position_of(&node, file_id))\n+                    trait_.source(db).and_then(|node| name_range(&node, file_id))\n                 }\n                 hir::ModuleDef::Adt(hir::Adt::Struct(strukt)) => {\n-                    strukt.source(db).and_then(|node| range_and_position_of(&node, file_id))\n+                    strukt.source(db).and_then(|node| name_range(&node, file_id))\n                 }\n                 hir::ModuleDef::Adt(hir::Adt::Enum(enum_)) => {\n-                    enum_.source(db).and_then(|node| range_and_position_of(&node, file_id))\n+                    enum_.source(db).and_then(|node| name_range(&node, file_id))\n                 }\n                 hir::ModuleDef::Adt(hir::Adt::Union(union)) => {\n-                    union.source(db).and_then(|node| range_and_position_of(&node, file_id))\n+                    union.source(db).and_then(|node| name_range(&node, file_id))\n                 }\n                 _ => None,\n             };\n-            let (offset, range) = match node {\n-                Some(node) => node,\n+            let (range, offset) = match range {\n+                Some(range) => (range, range.start()),\n                 None => return,\n             };\n \n@@ -122,32 +122,28 @@ pub(crate) fn annotations(\n                 });\n             }\n \n-            fn range_and_position_of<T: NameOwner>(\n-                node: &InFile<T>,\n-                file_id: FileId,\n-            ) -> Option<(TextSize, TextRange)> {\n-                if node.file_id != file_id.into() {\n+            fn name_range<T: NameOwner>(node: &InFile<T>, file_id: FileId) -> Option<TextRange> {\n+                if node.file_id == file_id.into() {\n+                    node.value.name().map(|it| it.syntax().text_range())\n+                } else {\n                     // Node is outside the file we are adding annotations to (e.g. macros).\n                     None\n-                } else {\n-                    Some((\n-                        node.value.name()?.syntax().text_range().start(),\n-                        node.value.syntax().text_range(),\n-                    ))\n                 }\n             }\n         }\n         Either::Right(_) => (),\n     });\n \n     if config.annotate_method_references {\n-        annotations.extend(find_all_methods(db, file_id).into_iter().map(|method| Annotation {\n-            range: method.range,\n-            kind: AnnotationKind::HasReferences {\n-                position: FilePosition { file_id, offset: method.range.start() },\n-                data: None,\n+        annotations.extend(find_all_methods(db, file_id).into_iter().map(\n+            |FileRange { file_id, range }| Annotation {\n+                range,\n+                kind: AnnotationKind::HasReferences {\n+                    position: FilePosition { file_id, offset: range.start() },\n+                    data: None,\n+                },\n             },\n-        }));\n+        ));\n     }\n \n     annotations\n@@ -266,7 +262,7 @@ fn main() {\n                         },\n                     },\n                     Annotation {\n-                        range: 0..22,\n+                        range: 6..10,\n                         kind: HasReferences {\n                             position: FilePosition {\n                                 file_id: FileId(\n@@ -287,7 +283,7 @@ fn main() {\n                         },\n                     },\n                     Annotation {\n-                        range: 24..48,\n+                        range: 30..36,\n                         kind: HasReferences {\n                             position: FilePosition {\n                                 file_id: FileId(\n@@ -370,7 +366,7 @@ fn main() {\n                         },\n                     },\n                     Annotation {\n-                        range: 0..12,\n+                        range: 7..11,\n                         kind: HasImpls {\n                             position: FilePosition {\n                                 file_id: FileId(\n@@ -384,7 +380,7 @@ fn main() {\n                         },\n                     },\n                     Annotation {\n-                        range: 0..12,\n+                        range: 7..11,\n                         kind: HasReferences {\n                             position: FilePosition {\n                                 file_id: FileId(\n@@ -478,7 +474,7 @@ fn main() {\n                         },\n                     },\n                     Annotation {\n-                        range: 0..12,\n+                        range: 7..11,\n                         kind: HasImpls {\n                             position: FilePosition {\n                                 file_id: FileId(\n@@ -502,7 +498,7 @@ fn main() {\n                         },\n                     },\n                     Annotation {\n-                        range: 0..12,\n+                        range: 7..11,\n                         kind: HasReferences {\n                             position: FilePosition {\n                                 file_id: FileId(\n@@ -529,7 +525,7 @@ fn main() {\n                         },\n                     },\n                     Annotation {\n-                        range: 14..34,\n+                        range: 20..31,\n                         kind: HasImpls {\n                             position: FilePosition {\n                                 file_id: FileId(\n@@ -553,7 +549,7 @@ fn main() {\n                         },\n                     },\n                     Annotation {\n-                        range: 14..34,\n+                        range: 20..31,\n                         kind: HasReferences {\n                             position: FilePosition {\n                                 file_id: FileId(\n@@ -712,7 +708,7 @@ fn main() {\n                         },\n                     },\n                     Annotation {\n-                        range: 0..12,\n+                        range: 7..11,\n                         kind: HasImpls {\n                             position: FilePosition {\n                                 file_id: FileId(\n@@ -736,7 +732,7 @@ fn main() {\n                         },\n                     },\n                     Annotation {\n-                        range: 0..12,\n+                        range: 7..11,\n                         kind: HasReferences {\n                             position: FilePosition {\n                                 file_id: FileId("}]}