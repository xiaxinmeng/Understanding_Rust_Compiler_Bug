{"sha": "1cc3fe567cfbddb5d68a6b884d77b3873ad74b6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjYzNmZTU2N2NmYmRkYjVkNjhhNmI4ODRkNzdiMzg3M2FkNzRiNmE=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-06-09T21:49:45Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-06-09T21:50:49Z"}, "message": "Improve error message for wrong number of type arguments\n\nImprove error message in the case where a use of a polymorphic tag has\ninsufficient type arguments given. Before, the typechecker was\njust crashing with a bounds check error.", "tree": {"sha": "5942097c306c77e4fd1a77a9f973547475cba493", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5942097c306c77e4fd1a77a9f973547475cba493"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cc3fe567cfbddb5d68a6b884d77b3873ad74b6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cc3fe567cfbddb5d68a6b884d77b3873ad74b6a", "html_url": "https://github.com/rust-lang/rust/commit/1cc3fe567cfbddb5d68a6b884d77b3873ad74b6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cc3fe567cfbddb5d68a6b884d77b3873ad74b6a/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efcf8570f00b08ab36d8ff16db9978a4ace502fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/efcf8570f00b08ab36d8ff16db9978a4ace502fe", "html_url": "https://github.com/rust-lang/rust/commit/efcf8570f00b08ab36d8ff16db9978a4ace502fe"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "961f41f5053747e86bc143c582dd8dbfbf183311", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1cc3fe567cfbddb5d68a6b884d77b3873ad74b6a/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cc3fe567cfbddb5d68a6b884d77b3873ad74b6a/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=1cc3fe567cfbddb5d68a6b884d77b3873ad74b6a", "patch": "@@ -234,6 +234,7 @@ fn ast_ty_to_ty(&ty::ctxt tcx, &ty_getter getter, &@ast::ty ast_ty) -> ty::t {\n     }\n \n     fn instantiate(&ty::ctxt tcx,\n+                   &span sp,\n                    &ty_getter getter,\n                    &ast::def_id id,\n                    &vec[@ast::ty] args) -> ty::t {\n@@ -246,13 +247,18 @@ fn ast_ty_to_ty(&ty::ctxt tcx, &ty_getter getter, &@ast::ty ast_ty) -> ty::t {\n \n         // The typedef is type-parametric. Do the type substitution.\n         //\n-        // TODO: Make sure the number of supplied bindings matches the number\n-        // of type parameters in the typedef. Emit a friendly error otherwise.\n         let vec[ty::t] param_bindings = [];\n         for (@ast::ty ast_ty in args) {\n             param_bindings += [ast_ty_to_ty(tcx, getter, ast_ty)];\n         }\n \n+        if (vec::len(param_bindings) !=\n+            ty::count_ty_params(tcx, params_opt_and_ty._1)) {\n+            tcx.sess.span_err(sp, \"Wrong number of type arguments for a\"\n+                            + \" polymorphic tag\");\n+        }\n+\n+\n         auto typ = ty::substitute_type_params(tcx, param_bindings,\n                                        params_opt_and_ty._1);\n         ret typ;\n@@ -315,11 +321,13 @@ fn ast_ty_to_ty(&ty::ctxt tcx, &ty_getter getter, &@ast::ty ast_ty) -> ty::t {\n         case (ast::ty_path(?path, ?ann)) {\n             alt (tcx.def_map.get(ann.id)) {\n                 case (ast::def_ty(?id)) {\n-                    typ = instantiate(tcx, getter, id, path.node.types);\n+                    typ = instantiate(tcx, ast_ty.span, getter, id,\n+                                      path.node.types);\n                 }\n                 case (ast::def_native_ty(?id)) { typ = getter(id)._1; }\n                 case (ast::def_obj(?id)) {\n-                    typ = instantiate(tcx, getter, id, path.node.types);\n+                    typ = instantiate(tcx, ast_ty.span, getter, id,\n+                                      path.node.types);\n                 }\n                 case (ast::def_ty_arg(?id)) { typ = ty::mk_param(tcx, id); }\n                 case (_)                   {"}, {"sha": "4e890dfadb5e7d3c5ed93d5c7b6bc12ec382f0be", "filename": "src/test/compile-fail/tag-type-args.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1cc3fe567cfbddb5d68a6b884d77b3873ad74b6a/src%2Ftest%2Fcompile-fail%2Ftag-type-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cc3fe567cfbddb5d68a6b884d77b3873ad74b6a/src%2Ftest%2Fcompile-fail%2Ftag-type-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftag-type-args.rs?ref=1cc3fe567cfbddb5d68a6b884d77b3873ad74b6a", "patch": "@@ -0,0 +1,13 @@\n+// xfail-stage0\n+// error-pattern: Wrong number of type arguments\n+\n+tag quux[T] {\n+}\n+\n+fn foo(quux c) -> () {\n+  assert false;\n+}\n+\n+fn main() {\n+  fail;\n+}\n\\ No newline at end of file"}]}