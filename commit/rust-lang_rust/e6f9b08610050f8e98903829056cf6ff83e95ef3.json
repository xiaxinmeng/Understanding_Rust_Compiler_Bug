{"sha": "e6f9b08610050f8e98903829056cf6ff83e95ef3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ZjliMDg2MTAwNTBmOGU5ODkwMzgyOTA1NmNmNmZmODNlOTVlZjM=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-07-03T18:30:12Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-07-06T21:14:45Z"}, "message": "Implement size_hint() on all remaining Iterators\n\nAdd size_hint() to the Iterators in libextra and the Iterator in\nlibsyntax.\n\nSkip deque for the moment, as it's being worked on elsewhere.", "tree": {"sha": "a121cac32001d1bb6223fa6a8949ce93dce10f73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a121cac32001d1bb6223fa6a8949ce93dce10f73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6f9b08610050f8e98903829056cf6ff83e95ef3", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6f9b08610050f8e98903829056cf6ff83e95ef3", "html_url": "https://github.com/rust-lang/rust/commit/e6f9b08610050f8e98903829056cf6ff83e95ef3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6f9b08610050f8e98903829056cf6ff83e95ef3/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20016b92c8c03e33ad9b965fba32ac851fe9f6bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/20016b92c8c03e33ad9b965fba32ac851fe9f6bf", "html_url": "https://github.com/rust-lang/rust/commit/20016b92c8c03e33ad9b965fba32ac851fe9f6bf"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "1f7ba9f65303c824814e7a6ee2d5379ab9e8ba87", "filename": "src/libextra/priority_queue.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e6f9b08610050f8e98903829056cf6ff83e95ef3/src%2Flibextra%2Fpriority_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6f9b08610050f8e98903829056cf6ff83e95ef3/src%2Flibextra%2Fpriority_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fpriority_queue.rs?ref=e6f9b08610050f8e98903829056cf6ff83e95ef3", "patch": "@@ -186,6 +186,9 @@ pub struct PriorityQueueIterator <'self, T> {\n impl<'self, T> Iterator<&'self T> for PriorityQueueIterator<'self, T> {\n     #[inline]\n     fn next(&mut self) -> Option<(&'self T)> { self.iter.next() }\n+\n+    #[inline]\n+    fn size_hint(&self) -> (uint, Option<uint>) { self.iter.size_hint() }\n }\n \n #[cfg(test)]"}, {"sha": "b7df27c0e49758ff447d9361746d17ff184408f3", "filename": "src/libextra/treemap.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e6f9b08610050f8e98903829056cf6ff83e95ef3/src%2Flibextra%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6f9b08610050f8e98903829056cf6ff83e95ef3/src%2Flibextra%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftreemap.rs?ref=e6f9b08610050f8e98903829056cf6ff83e95ef3", "patch": "@@ -196,14 +196,15 @@ impl<K: TotalOrd, V> TreeMap<K, V> {\n     /// Get a lazy iterator over the key-value pairs in the map.\n     /// Requires that it be frozen (immutable).\n     pub fn iter<'a>(&'a self) -> TreeMapIterator<'a, K, V> {\n-        TreeMapIterator{stack: ~[], node: &self.root}\n+        TreeMapIterator{stack: ~[], node: &self.root, remaining: self.length}\n     }\n }\n \n /// Lazy forward iterator over a map\n pub struct TreeMapIterator<'self, K, V> {\n     priv stack: ~[&'self ~TreeNode<K, V>],\n-    priv node: &'self Option<~TreeNode<K, V>>\n+    priv node: &'self Option<~TreeNode<K, V>>,\n+    priv remaining: uint\n }\n \n impl<'self, K, V> Iterator<(&'self K, &'self V)> for TreeMapIterator<'self, K, V> {\n@@ -220,12 +221,18 @@ impl<'self, K, V> Iterator<(&'self K, &'self V)> for TreeMapIterator<'self, K, V\n               None => {\n                 let res = self.stack.pop();\n                 self.node = &res.right;\n+                self.remaining -= 1;\n                 return Some((&res.key, &res.value));\n               }\n             }\n         }\n         None\n     }\n+\n+    #[inline]\n+    fn size_hint(&self) -> (uint, Option<uint>) {\n+        (self.remaining, Some(self.remaining))\n+    }\n }\n \n impl<'self, T> Iterator<&'self T> for TreeSetIterator<'self, T> {"}, {"sha": "8e2da3d6eb1aab48bf78d0a6b082e9a5cf511138", "filename": "src/libsyntax/opt_vec.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e6f9b08610050f8e98903829056cf6ff83e95ef3/src%2Flibsyntax%2Fopt_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6f9b08610050f8e98903829056cf6ff83e95ef3/src%2Flibsyntax%2Fopt_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fopt_vec.rs?ref=e6f9b08610050f8e98903829056cf6ff83e95ef3", "patch": "@@ -146,4 +146,12 @@ impl<'self, T> Iterator<&'self T> for OptVecIterator<'self, T> {\n             None => None\n         }\n     }\n+\n+    #[inline]\n+    fn size_hint(&self) -> (uint, Option<uint>) {\n+        match self.iter {\n+            Some(ref x) => x.size_hint(),\n+            None => (0, Some(0))\n+        }\n+    }\n }"}]}