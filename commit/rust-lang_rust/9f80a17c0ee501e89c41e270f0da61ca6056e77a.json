{"sha": "9f80a17c0ee501e89c41e270f0da61ca6056e77a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmODBhMTdjMGVlNTAxZTg5YzQxZTI3MGYwZGE2MWNhNjA1NmU3N2E=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-27T04:54:36Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-27T04:54:36Z"}, "message": "rustc: Add pprust::res_to_str", "tree": {"sha": "38725f83d1c5fb21ea4676d897879d56220d09bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38725f83d1c5fb21ea4676d897879d56220d09bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f80a17c0ee501e89c41e270f0da61ca6056e77a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f80a17c0ee501e89c41e270f0da61ca6056e77a", "html_url": "https://github.com/rust-lang/rust/commit/9f80a17c0ee501e89c41e270f0da61ca6056e77a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f80a17c0ee501e89c41e270f0da61ca6056e77a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e44467a47f2a85078a8af3cbc3765fec9261a850", "url": "https://api.github.com/repos/rust-lang/rust/commits/e44467a47f2a85078a8af3cbc3765fec9261a850", "html_url": "https://github.com/rust-lang/rust/commit/e44467a47f2a85078a8af3cbc3765fec9261a850"}], "stats": {"total": 49, "additions": 41, "deletions": 8}, "files": [{"sha": "b8d42aa4ade77d6fcbc993d248b278fc15e0dfc6", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 41, "deletions": 8, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/9f80a17c0ee501e89c41e270f0da61ca6056e77a/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f80a17c0ee501e89c41e270f0da61ca6056e77a/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=9f80a17c0ee501e89c41e270f0da61ca6056e77a", "patch": "@@ -117,6 +117,34 @@ fn test_fun_to_str() {\n     assert fun_to_str(decl, \"a\", []) == \"fn a()\";\n }\n \n+fn res_to_str(decl: ast::fn_decl, name: ast::ident,\n+              params: [ast::ty_param]) -> str {\n+    let buffer = io::mk_mem_buffer();\n+    let s = rust_printer(io::mem_buffer_writer(buffer));\n+    print_res(s, decl, name, params);\n+    end(s); // Close the head box\n+    end(s); // Close the outer box\n+    eof(s.s);\n+    io::mem_buffer_str(buffer)\n+}\n+\n+#[test]\n+fn test_res_to_str() {\n+    let decl: ast::fn_decl = {\n+        inputs: [{\n+            mode: ast::by_val,\n+            ty: @ast_util::respan(ast_util::dummy_sp(), ast::ty_bool),\n+            ident: \"b\",\n+            id: 0\n+        }],\n+        output: @ast_util::respan(ast_util::dummy_sp(), ast::ty_nil),\n+        purity: ast::impure_fn,\n+        cf: ast::return_val,\n+        constraints: []\n+    };\n+    assert res_to_str(decl, \"a\", []) == \"resource a(b: bool)\";\n+}\n+\n fn block_to_str(blk: ast::blk) -> str {\n     let buffer = io::mk_mem_buffer();\n     let s = rust_printer(io::mem_buffer_writer(buffer));\n@@ -498,20 +526,25 @@ fn print_item(s: ps, &&item: @ast::item) {\n         bclose(s, item.span);\n       }\n       ast::item_res(decl, tps, body, dt_id, ct_id) {\n-        head(s, \"resource\");\n-        word(s.s, item.ident);\n-        print_type_params(s, tps);\n-        popen(s);\n-        word_space(s, decl.inputs[0].ident + \":\");\n-        print_type(s, decl.inputs[0].ty);\n-        pclose(s);\n-        space(s.s);\n+        print_res(s, decl, item.ident, tps);\n         print_block(s, body);\n       }\n     }\n     s.ann.post(ann_node);\n }\n \n+fn print_res(s: ps, decl: ast::fn_decl, name: ast::ident,\n+             typarams: [ast::ty_param]) {\n+    head(s, \"resource\");\n+    word(s.s, name);\n+    print_type_params(s, typarams);\n+    popen(s);\n+    word_space(s, decl.inputs[0].ident + \":\");\n+    print_type(s, decl.inputs[0].ty);\n+    pclose(s);\n+    space(s.s);\n+}\n+\n fn print_variant(s: ps, v: ast::variant) {\n     word(s.s, v.node.name);\n     if vec::len(v.node.args) > 0u {"}]}