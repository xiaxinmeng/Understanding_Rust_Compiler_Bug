{"sha": "41cd4542287833bd0ed8249a18661bd00813814f", "node_id": "C_kwDOAAsO6NoAKDQxY2Q0NTQyMjg3ODMzYmQwZWQ4MjQ5YTE4NjYxYmQwMDgxMzgxNGY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-03T06:58:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-03T06:58:54Z"}, "message": "Rollup merge of #109871 - Mark-Simulacrum:metrics-timestamp, r=ozkanonur\n\nInclude invocation start times\n\nFor multi-invocation builders (e.g., dist-x86_64-linux) this timestamp is necessary to correlate the data in the metrics JSON with other data sources (e.g., logs, cpu-usage CSV, etc.). Such correlation may not be perfect but is sometimes helpful and awkward to do otherwise.", "tree": {"sha": "feb4051dcc2d300e98e2cc597ed4cba19c615a6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/feb4051dcc2d300e98e2cc597ed4cba19c615a6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41cd4542287833bd0ed8249a18661bd00813814f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkKnkuCRBK7hj4Ov3rIwAAV5cIAKN7wd93fzPY24CbyA3DdRpe\neFqoQqRlfOF9FFBuOok0Iz9lwbUhN/Mj6/syW3E2XE8vQgvhSzYZRc+wNyzWlrbC\nyXemyVIRQd+srlNGoMLBioKeIFiLvHpLjeTcoGr45emUETRmPG6LE092Rv8l0usr\ncWGsGwihd07VRTTFsTjxYrXupU7W2ZnJYyQtSnSSaVpzSWePB2Ds8MuPQ02/+BDs\nmGVGUC0juw33yIM7uDgkcurQr/q24HdE8jZV5AudtcesZtogg3iYgzAFfQ8m5RHs\nLIFuK8YNtF4PcFzsnIuWcwJaTc+7RWJtqnZDTw5Ozp9tMXoLiFsLmCjYgZO2YnE=\n=NR8g\n-----END PGP SIGNATURE-----\n", "payload": "tree feb4051dcc2d300e98e2cc597ed4cba19c615a6c\nparent 9007ee9f1c7886a260c78b15802dc39543b424cd\nparent dd85271ef5ea61fc4be3cd7607c838b99f8740f5\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1680505134 +0200\ncommitter GitHub <noreply@github.com> 1680505134 +0200\n\nRollup merge of #109871 - Mark-Simulacrum:metrics-timestamp, r=ozkanonur\n\nInclude invocation start times\n\nFor multi-invocation builders (e.g., dist-x86_64-linux) this timestamp is necessary to correlate the data in the metrics JSON with other data sources (e.g., logs, cpu-usage CSV, etc.). Such correlation may not be perfect but is sometimes helpful and awkward to do otherwise.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41cd4542287833bd0ed8249a18661bd00813814f", "html_url": "https://github.com/rust-lang/rust/commit/41cd4542287833bd0ed8249a18661bd00813814f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41cd4542287833bd0ed8249a18661bd00813814f/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9007ee9f1c7886a260c78b15802dc39543b424cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/9007ee9f1c7886a260c78b15802dc39543b424cd", "html_url": "https://github.com/rust-lang/rust/commit/9007ee9f1c7886a260c78b15802dc39543b424cd"}, {"sha": "dd85271ef5ea61fc4be3cd7607c838b99f8740f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd85271ef5ea61fc4be3cd7607c838b99f8740f5", "html_url": "https://github.com/rust-lang/rust/commit/dd85271ef5ea61fc4be3cd7607c838b99f8740f5"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "82b123ec8a5e1aaed1cf928636aa283844b1ca0a", "filename": "src/bootstrap/metrics.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/41cd4542287833bd0ed8249a18661bd00813814f/src%2Fbootstrap%2Fmetrics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41cd4542287833bd0ed8249a18661bd00813814f/src%2Fbootstrap%2Fmetrics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmetrics.rs?ref=41cd4542287833bd0ed8249a18661bd00813814f", "patch": "@@ -11,7 +11,7 @@ use serde_derive::{Deserialize, Serialize};\n use std::cell::RefCell;\n use std::fs::File;\n use std::io::BufWriter;\n-use std::time::{Duration, Instant};\n+use std::time::{Duration, Instant, SystemTime};\n use sysinfo::{CpuExt, System, SystemExt};\n \n pub(crate) struct BuildMetrics {\n@@ -27,6 +27,7 @@ impl BuildMetrics {\n             system_info: System::new(),\n             timer_start: None,\n             invocation_timer_start: Instant::now(),\n+            invocation_start: SystemTime::now(),\n         });\n \n         BuildMetrics { state }\n@@ -124,6 +125,11 @@ impl BuildMetrics {\n             }\n         };\n         invocations.push(JsonInvocation {\n+            start_time: state\n+                .invocation_start\n+                .duration_since(SystemTime::UNIX_EPOCH)\n+                .unwrap()\n+                .as_secs(),\n             duration_including_children_sec: state.invocation_timer_start.elapsed().as_secs_f64(),\n             children: steps.into_iter().map(|step| self.prepare_json_step(step)).collect(),\n         });\n@@ -166,6 +172,7 @@ struct MetricsState {\n     system_info: System,\n     timer_start: Option<Instant>,\n     invocation_timer_start: Instant,\n+    invocation_start: SystemTime,\n }\n \n struct StepMetrics {\n@@ -194,6 +201,10 @@ struct JsonRoot {\n #[derive(Serialize, Deserialize)]\n #[serde(rename_all = \"snake_case\")]\n struct JsonInvocation {\n+    // Unix timestamp in seconds\n+    //\n+    // This is necessary to easily correlate this invocation with logs or other data.\n+    start_time: u64,\n     duration_including_children_sec: f64,\n     children: Vec<JsonNode>,\n }"}]}