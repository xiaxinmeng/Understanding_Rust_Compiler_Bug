{"sha": "102bbbd940028e78db7f67b1affe116ab08ed154", "node_id": "C_kwDOAAsO6NoAKDEwMmJiYmQ5NDAwMjhlNzhkYjdmNjdiMWFmZmUxMTZhYjA4ZWQxNTQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-27T06:46:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-27T06:46:50Z"}, "message": "Rollup merge of #97506 - JohnTitor:stabilize-nonnull-slice-from-raw-parts, r=m-ou-se,the8472\n\nStabilize `nonnull_slice_from_raw_parts`\n\nFCP is done: https://github.com/rust-lang/rust/issues/71941#issuecomment-1100910416\nNote that this doesn't const-stabilize `NonNull::slice_from_raw_parts` as `slice_from_raw_parts_mut` isn't const-stabilized yet. Given #67456 and #57349, it's not likely available soon, meanwhile, stabilizing only the feature makes some sense, I think.\n\nCloses #71941", "tree": {"sha": "42422ade59502960a7b4c48da201a8dce86a8d3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42422ade59502960a7b4c48da201a8dce86a8d3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/102bbbd940028e78db7f67b1affe116ab08ed154", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkITvaCRBK7hj4Ov3rIwAA3pAIAD0oRrcfpUtkpIiGAYdF09qZ\n1tkM8UVcs9wEycp9UnYVKRdDRFFLkpURjihMqZEWNBaeSekCxeB/0KhRlGJQfkV1\naaUqrGgWolhtVKEsCqBK6dD2fXBL6bMiAKnkTyT6Kawtm5tmz7gCaACbJ9gkh6/5\n5l3m/GwRsbDCYcMm7SxSvb8VjyeMYdUoR3wYpmKP8QsMLMXrjnaOitwbZ+LpqrPO\neUPwfAt9lEou3QD1qFmbVvaMzEG98LFidCK5cBfIYYTEFscRUqcNsUgmlhvyfWqu\ngcXU4uGCZmg7kDztoTuIVGsjG/qpPr7zi5bDYdcnwAb+izFFTXoZYG0CKD25TEY=\n=OhX3\n-----END PGP SIGNATURE-----\n", "payload": "tree 42422ade59502960a7b4c48da201a8dce86a8d3c\nparent 1d5820784e442ec7e89474e2fa305440253ffaeb\nparent 22a456ad47f42179268165b009e8925a84d4c43f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679899610 +0200\ncommitter GitHub <noreply@github.com> 1679899610 +0200\n\nRollup merge of #97506 - JohnTitor:stabilize-nonnull-slice-from-raw-parts, r=m-ou-se,the8472\n\nStabilize `nonnull_slice_from_raw_parts`\n\nFCP is done: https://github.com/rust-lang/rust/issues/71941#issuecomment-1100910416\nNote that this doesn't const-stabilize `NonNull::slice_from_raw_parts` as `slice_from_raw_parts_mut` isn't const-stabilized yet. Given #67456 and #57349, it's not likely available soon, meanwhile, stabilizing only the feature makes some sense, I think.\n\nCloses #71941\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/102bbbd940028e78db7f67b1affe116ab08ed154", "html_url": "https://github.com/rust-lang/rust/commit/102bbbd940028e78db7f67b1affe116ab08ed154", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/102bbbd940028e78db7f67b1affe116ab08ed154/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d5820784e442ec7e89474e2fa305440253ffaeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d5820784e442ec7e89474e2fa305440253ffaeb", "html_url": "https://github.com/rust-lang/rust/commit/1d5820784e442ec7e89474e2fa305440253ffaeb"}, {"sha": "22a456ad47f42179268165b009e8925a84d4c43f", "url": "https://api.github.com/repos/rust-lang/rust/commits/22a456ad47f42179268165b009e8925a84d4c43f", "html_url": "https://github.com/rust-lang/rust/commit/22a456ad47f42179268165b009e8925a84d4c43f"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "55e18b04956012bf1d177a4690cc3bb87b7e2674", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/102bbbd940028e78db7f67b1affe116ab08ed154/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/102bbbd940028e78db7f67b1affe116ab08ed154/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=102bbbd940028e78db7f67b1affe116ab08ed154", "patch": "@@ -135,7 +135,6 @@\n #![feature(maybe_uninit_uninit_array)]\n #![feature(maybe_uninit_uninit_array_transpose)]\n #![cfg_attr(test, feature(new_uninit))]\n-#![feature(nonnull_slice_from_raw_parts)]\n #![feature(pattern)]\n #![feature(pointer_byte_offsets)]\n #![feature(provide_any)]"}, {"sha": "966cf57511630793dd01ace6c6f1e2f92b90eb43", "filename": "library/alloc/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/102bbbd940028e78db7f67b1affe116ab08ed154/library%2Falloc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/102bbbd940028e78db7f67b1affe116ab08ed154/library%2Falloc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Flib.rs?ref=102bbbd940028e78db7f67b1affe116ab08ed154", "patch": "@@ -8,7 +8,7 @@\n #![feature(const_cow_is_borrowed)]\n #![feature(const_heap)]\n #![feature(const_mut_refs)]\n-#![feature(const_nonnull_slice_from_raw_parts)]\n+#![feature(const_slice_from_raw_parts_mut)]\n #![feature(const_ptr_write)]\n #![feature(const_try)]\n #![feature(core_intrinsics)]\n@@ -38,7 +38,6 @@\n #![feature(const_default_impls)]\n #![feature(const_trait_impl)]\n #![feature(const_str_from_utf8)]\n-#![feature(nonnull_slice_from_raw_parts)]\n #![feature(panic_update_hook)]\n #![feature(pointer_is_aligned)]\n #![feature(slice_flatten)]"}, {"sha": "a46804c186c2887bc82ff9cb702e74bbd885fa64", "filename": "library/core/src/ptr/non_null.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/102bbbd940028e78db7f67b1affe116ab08ed154/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/102bbbd940028e78db7f67b1affe116ab08ed154/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs?ref=102bbbd940028e78db7f67b1affe116ab08ed154", "patch": "@@ -462,8 +462,6 @@ impl<T> NonNull<[T]> {\n     /// # Examples\n     ///\n     /// ```rust\n-    /// #![feature(nonnull_slice_from_raw_parts)]\n-    ///\n     /// use std::ptr::NonNull;\n     ///\n     /// // create a slice pointer when starting out with a pointer to the first element\n@@ -475,8 +473,8 @@ impl<T> NonNull<[T]> {\n     ///\n     /// (Note that this example artificially demonstrates a use of this method,\n     /// but `let slice = NonNull::from(&x[..]);` would be a better way to write code like this.)\n-    #[unstable(feature = \"nonnull_slice_from_raw_parts\", issue = \"71941\")]\n-    #[rustc_const_unstable(feature = \"const_nonnull_slice_from_raw_parts\", issue = \"71941\")]\n+    #[stable(feature = \"nonnull_slice_from_raw_parts\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_unstable(feature = \"const_slice_from_raw_parts_mut\", issue = \"67456\")]\n     #[must_use]\n     #[inline]\n     pub const fn slice_from_raw_parts(data: NonNull<T>, len: usize) -> Self {\n@@ -494,7 +492,6 @@ impl<T> NonNull<[T]> {\n     /// # Examples\n     ///\n     /// ```rust\n-    /// #![feature(nonnull_slice_from_raw_parts)]\n     /// use std::ptr::NonNull;\n     ///\n     /// let slice: NonNull<[i8]> = NonNull::slice_from_raw_parts(NonNull::dangling(), 3);\n@@ -514,7 +511,7 @@ impl<T> NonNull<[T]> {\n     /// # Examples\n     ///\n     /// ```rust\n-    /// #![feature(slice_ptr_get, nonnull_slice_from_raw_parts)]\n+    /// #![feature(slice_ptr_get)]\n     /// use std::ptr::NonNull;\n     ///\n     /// let slice: NonNull<[i8]> = NonNull::slice_from_raw_parts(NonNull::dangling(), 3);\n@@ -534,7 +531,7 @@ impl<T> NonNull<[T]> {\n     /// # Examples\n     ///\n     /// ```rust\n-    /// #![feature(slice_ptr_get, nonnull_slice_from_raw_parts)]\n+    /// #![feature(slice_ptr_get)]\n     /// use std::ptr::NonNull;\n     ///\n     /// let slice: NonNull<[i8]> = NonNull::slice_from_raw_parts(NonNull::dangling(), 3);\n@@ -668,7 +665,7 @@ impl<T> NonNull<[T]> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(slice_ptr_get, nonnull_slice_from_raw_parts)]\n+    /// #![feature(slice_ptr_get)]\n     /// use std::ptr::NonNull;\n     ///\n     /// let x = &mut [1, 2, 4];"}, {"sha": "baad6de707bc28f2e87d6470bd6a283370d106c4", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/102bbbd940028e78db7f67b1affe116ab08ed154/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/102bbbd940028e78db7f67b1affe116ab08ed154/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=102bbbd940028e78db7f67b1affe116ab08ed154", "patch": "@@ -292,7 +292,6 @@\n #![feature(is_some_and)]\n #![feature(maybe_uninit_slice)]\n #![feature(maybe_uninit_write_slice)]\n-#![feature(nonnull_slice_from_raw_parts)]\n #![feature(panic_can_unwind)]\n #![feature(panic_info_message)]\n #![feature(panic_internals)]"}]}