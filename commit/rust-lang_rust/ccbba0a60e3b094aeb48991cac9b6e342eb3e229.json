{"sha": "ccbba0a60e3b094aeb48991cac9b6e342eb3e229", "node_id": "C_kwDOAAsO6NoAKGNjYmJhMGE2MGUzYjA5NGFlYjQ4OTkxY2FjOWI2ZTM0MmViM2UyMjk", "commit": {"author": {"name": "Bryan Garza", "email": "1396101+bryangarza@users.noreply.github.com", "date": "2022-12-21T23:22:56Z"}, "committer": {"name": "Bryan Garza", "email": "1396101+bryangarza@users.noreply.github.com", "date": "2022-12-21T23:25:08Z"}, "message": "Update track_caller tests; run fmt", "tree": {"sha": "cdff0592cb6a06bf77ead60de31113ac983acecb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdff0592cb6a06bf77ead60de31113ac983acecb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccbba0a60e3b094aeb48991cac9b6e342eb3e229", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccbba0a60e3b094aeb48991cac9b6e342eb3e229", "html_url": "https://github.com/rust-lang/rust/commit/ccbba0a60e3b094aeb48991cac9b6e342eb3e229", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccbba0a60e3b094aeb48991cac9b6e342eb3e229/comments", "author": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9650a4168f2d5f4edb3338a484ab5c8d1a4b0e52", "url": "https://api.github.com/repos/rust-lang/rust/commits/9650a4168f2d5f4edb3338a484ab5c8d1a4b0e52", "html_url": "https://github.com/rust-lang/rust/commit/9650a4168f2d5f4edb3338a484ab5c8d1a4b0e52"}], "stats": {"total": 29, "additions": 9, "deletions": 20}, "files": [{"sha": "3634e6e47ce12e220d3b64f2fa4e6be9eb8b004d", "filename": "compiler/rustc_ast_lowering/src/expr.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ccbba0a60e3b094aeb48991cac9b6e342eb3e229/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccbba0a60e3b094aeb48991cac9b6e342eb3e229/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs?ref=ccbba0a60e3b094aeb48991cac9b6e342eb3e229", "patch": "@@ -657,11 +657,8 @@ impl<'hir> LoweringContext<'_, 'hir> {\n         };\n \n         let hir_id = self.lower_node_id(closure_node_id);\n-        let unstable_span = self.mark_span_with_reason(\n-            DesugaringKind::Async,\n-            span,\n-            self.allow_gen_future.clone(),\n-        );\n+        let unstable_span =\n+            self.mark_span_with_reason(DesugaringKind::Async, span, self.allow_gen_future.clone());\n \n         if self.tcx.features().closure_track_caller\n             && let Some(attrs) = self.attrs.get(&outer_hir_id.local_id)"}, {"sha": "d9d556855991b881b5d8b4237263e947d5cdbd13", "filename": "src/test/ui/async-await/track-caller/async-closure-gate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ccbba0a60e3b094aeb48991cac9b6e342eb3e229/src%2Ftest%2Fui%2Fasync-await%2Ftrack-caller%2Fasync-closure-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccbba0a60e3b094aeb48991cac9b6e342eb3e229/src%2Ftest%2Fui%2Fasync-await%2Ftrack-caller%2Fasync-closure-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Ftrack-caller%2Fasync-closure-gate.rs?ref=ccbba0a60e3b094aeb48991cac9b6e342eb3e229", "patch": "@@ -5,6 +5,5 @@\n fn main() {\n     let _ = #[track_caller] async || {\n         //~^ ERROR `#[track_caller]` on closures is currently unstable [E0658]\n-        //~| ERROR `#[track_caller]` on closures is currently unstable [E0658]\n     };\n }"}, {"sha": "498f1b43b9bca4f587f1121fc593dac62920e8b1", "filename": "src/test/ui/async-await/track-caller/async-closure-gate.stderr", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ccbba0a60e3b094aeb48991cac9b6e342eb3e229/src%2Ftest%2Fui%2Fasync-await%2Ftrack-caller%2Fasync-closure-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ccbba0a60e3b094aeb48991cac9b6e342eb3e229/src%2Ftest%2Fui%2Fasync-await%2Ftrack-caller%2Fasync-closure-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Ftrack-caller%2Fasync-closure-gate.stderr?ref=ccbba0a60e3b094aeb48991cac9b6e342eb3e229", "patch": "@@ -7,19 +7,6 @@ LL |     let _ = #[track_caller] async || {\n    = note: see issue #87417 <https://github.com/rust-lang/rust/issues/87417> for more information\n    = help: add `#![feature(closure_track_caller)]` to the crate attributes to enable\n \n-error[E0658]: `#[track_caller]` on closures is currently unstable\n-  --> $DIR/async-closure-gate.rs:6:38\n-   |\n-LL |       let _ = #[track_caller] async || {\n-   |  ______________________________________^\n-LL | |\n-LL | |\n-LL | |     };\n-   | |_____^\n-   |\n-   = note: see issue #87417 <https://github.com/rust-lang/rust/issues/87417> for more information\n-   = help: add `#![feature(closure_track_caller)]` to the crate attributes to enable\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "f45243b0ea6f59815367bf575969b25735cee9ae", "filename": "src/test/ui/async-await/track-caller/panic-track-caller.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ccbba0a60e3b094aeb48991cac9b6e342eb3e229/src%2Ftest%2Fui%2Fasync-await%2Ftrack-caller%2Fpanic-track-caller.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccbba0a60e3b094aeb48991cac9b6e342eb3e229/src%2Ftest%2Fui%2Fasync-await%2Ftrack-caller%2Fpanic-track-caller.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Ftrack-caller%2Fpanic-track-caller.rs?ref=ccbba0a60e3b094aeb48991cac9b6e342eb3e229", "patch": "@@ -69,6 +69,9 @@ async fn foo_assoc() {\n     Foo::bar_assoc().await\n }\n \n+// Since compilation is expected to fail for this fn when using\n+// `nofeat`, we test that separately in `async-closure-gate.rs`\n+#[cfg(feat)]\n async fn foo_closure() {\n     let c = #[track_caller] async || {\n         panic!();\n@@ -104,4 +107,7 @@ fn main() {\n     assert_eq!(panicked_at(|| block_on(foo_assoc())), 69);\n     #[cfg(nofeat)]\n     assert_eq!(panicked_at(|| block_on(foo_assoc())), 64);\n+\n+    #[cfg(feat)]\n+    assert_eq!(panicked_at(|| block_on(foo_closure())), 79);\n }"}]}