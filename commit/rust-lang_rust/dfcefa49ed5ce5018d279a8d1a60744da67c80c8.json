{"sha": "dfcefa49ed5ce5018d279a8d1a60744da67c80c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmY2VmYTQ5ZWQ1Y2U1MDE4ZDI3OWE4ZDFhNjA3NDRkYTY3YzgwYzg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-07T18:53:25Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-18T14:08:25Z"}, "message": "extract error_on_circular_module", "tree": {"sha": "81d690162c0fd7527caf6b68c4cfa5ddd04ac5f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81d690162c0fd7527caf6b68c4cfa5ddd04ac5f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfcefa49ed5ce5018d279a8d1a60744da67c80c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfcefa49ed5ce5018d279a8d1a60744da67c80c8", "html_url": "https://github.com/rust-lang/rust/commit/dfcefa49ed5ce5018d279a8d1a60744da67c80c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfcefa49ed5ce5018d279a8d1a60744da67c80c8/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7108b7fbfea50bd311617cc217616b88c8b647c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7108b7fbfea50bd311617cc217616b88c8b647c9", "html_url": "https://github.com/rust-lang/rust/commit/7108b7fbfea50bd311617cc217616b88c8b647c9"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "d203e665c950ac4db906bcee68f7e2eb1200a86a", "filename": "src/librustc_parse/parser/module.rs", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/dfcefa49ed5ce5018d279a8d1a60744da67c80c8/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfcefa49ed5ce5018d279a8d1a60744da67c80c8/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmodule.rs?ref=dfcefa49ed5ce5018d279a8d1a60744da67c80c8", "patch": "@@ -254,16 +254,7 @@ impl<'a> Parser<'a> {\n         id_sp: Span,\n     ) -> PResult<'a, (Mod, Vec<Attribute>)> {\n         let mut included_mod_stack = self.sess.included_mod_stack.borrow_mut();\n-        if let Some(i) = included_mod_stack.iter().position(|p| *p == path) {\n-            let mut err = String::from(\"circular modules: \");\n-            let len = included_mod_stack.len();\n-            for p in &included_mod_stack[i..len] {\n-                err.push_str(&p.to_string_lossy());\n-                err.push_str(\" -> \");\n-            }\n-            err.push_str(&path.to_string_lossy());\n-            return Err(self.struct_span_err(id_sp, &err[..]));\n-        }\n+        self.error_on_circular_module(id_sp, &path, &included_mod_stack)?;\n         included_mod_stack.push(path.clone());\n         drop(included_mod_stack);\n \n@@ -277,6 +268,25 @@ impl<'a> Parser<'a> {\n         Ok(module)\n     }\n \n+    fn error_on_circular_module(\n+        &self,\n+        span: Span,\n+        path: &Path,\n+        included_mod_stack: &[PathBuf],\n+    ) -> PResult<'a, ()> {\n+        if let Some(i) = included_mod_stack.iter().position(|p| *p == path) {\n+            let mut err = String::from(\"circular modules: \");\n+            let len = included_mod_stack.len();\n+            for p in &included_mod_stack[i..len] {\n+                err.push_str(&p.to_string_lossy());\n+                err.push_str(\" -> \");\n+            }\n+            err.push_str(&path.to_string_lossy());\n+            return Err(self.struct_span_err(span, &err[..]));\n+        }\n+        Ok(())\n+    }\n+\n     fn push_directory(&mut self, id: Ident, attrs: &[Attribute]) {\n         if let Some(path) = attr::first_attr_value_str_by_name(attrs, sym::path) {\n             self.directory.path.push(&*path.as_str());"}]}