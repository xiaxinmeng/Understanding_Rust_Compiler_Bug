{"sha": "e75abd343896967c1d26615c874331521bbe7e5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3NWFiZDM0Mzg5Njk2N2MxZDI2NjE1Yzg3NDMzMTUyMWJiZTdlNWE=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-08-22T15:07:37Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-08-22T17:24:00Z"}, "message": "Don't emit memcpy's for zero-sized types", "tree": {"sha": "b9998aa642afa89d7243b8c3376d598cb56d4dd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9998aa642afa89d7243b8c3376d598cb56d4dd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e75abd343896967c1d26615c874331521bbe7e5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e75abd343896967c1d26615c874331521bbe7e5a", "html_url": "https://github.com/rust-lang/rust/commit/e75abd343896967c1d26615c874331521bbe7e5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e75abd343896967c1d26615c874331521bbe7e5a/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a407b6c4eea5d7bff34abf42518bcb8379c0cfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a407b6c4eea5d7bff34abf42518bcb8379c0cfb", "html_url": "https://github.com/rust-lang/rust/commit/3a407b6c4eea5d7bff34abf42518bcb8379c0cfb"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "78bbe0d4ebca938ac42d0a4ff635fdacfbf3f9a3", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e75abd343896967c1d26615c874331521bbe7e5a/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e75abd343896967c1d26615c874331521bbe7e5a/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=e75abd343896967c1d26615c874331521bbe7e5a", "patch": "@@ -956,6 +956,11 @@ pub fn memcpy_ty<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n                              t: Ty<'tcx>) {\n     let _icx = push_ctxt(\"memcpy_ty\");\n     let ccx = bcx.ccx();\n+\n+    if type_is_zero_size(ccx, t) {\n+        return;\n+    }\n+\n     if t.is_structural() {\n         let llty = type_of::type_of(ccx, t);\n         let llsz = llsize_of(ccx, llty);"}]}