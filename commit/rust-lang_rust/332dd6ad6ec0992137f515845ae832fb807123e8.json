{"sha": "332dd6ad6ec0992137f515845ae832fb807123e8", "node_id": "C_kwDOAAsO6NoAKDMzMmRkNmFkNmVjMDk5MjEzN2Y1MTU4NDVhZTgzMmZiODA3MTIzZTg", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-12-31T13:08:53Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-12-31T13:08:53Z"}, "message": "fix: merge multiple intersecting ranges", "tree": {"sha": "1fcab28908bc1270037c6a02dc22200c2c37ea51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fcab28908bc1270037c6a02dc22200c2c37ea51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/332dd6ad6ec0992137f515845ae832fb807123e8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmOwNNQACgkQ4laYqTBY\nYXHKjw/+P2Wii54NWjgCCTdpRru0q1Bo8e18GhX45vWuLyByTjTm7d1u40N+VLRV\nkZCgpmr+Z6ONIM6kVRwOYICclPDUeHeLjU4Xx9S4/AELrryHqZhQXWfzBlE60nlC\nx1LLx9DOj9hbaHcRtfJNI19d/ww/5FWyID2rNSCV45S/7vFhJm+j2XVEIaaS2imL\nJ5OSlWcD8rRxWIe08+pSfrmRHwfn9znG++SVDC6itGiyWG4yfKoVLKNWlbS1a2IV\nHZxjl0qicOw8HLoUo6aUPljnSCjNEY6nl6S6DJ3MGv+LdbIlHws3sHVoXYxIRkTF\nAMcCM73ff7n95InZcIZ2mf+gbigWRMzX2qA+x4D99e11WmD4CRIpbfgMGDW6ttJI\nmp0VXSLMUY9jN8GuPP7mYeLwfG5l4grlkMJwyelIWi1RX5/4R+QuRLE6mDf0TTe7\njgqwg+F1V1wGMMGobGGWEiiPR3eIrdtUyFCXFkWKgfluikYZohnc/D40e+iofWjP\nOZCdb0pEu1sek98SkPrYPN2Vu09tkj5SwowhUdZWp15HEnPsnG7A63mRsuHppVAP\nE91MtCCQEI8ujK4HSpEU07csbZXs45f1r5tDZ9Mk4fEKNJbIeoi8KYRQ2LqaBPH8\nkAZbQVbAPo7KSFzin79uiHNMr2TP7dtfh52NxJBLefPNo7Z18LI=\n=97Kh\n-----END PGP SIGNATURE-----", "payload": "tree 1fcab28908bc1270037c6a02dc22200c2c37ea51\nparent f5e7bf2ea5ad3dbd8dc819dcbd05196d120081a1\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1672492133 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1672492133 +0900\n\nfix: merge multiple intersecting ranges\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/332dd6ad6ec0992137f515845ae832fb807123e8", "html_url": "https://github.com/rust-lang/rust/commit/332dd6ad6ec0992137f515845ae832fb807123e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/332dd6ad6ec0992137f515845ae832fb807123e8/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5e7bf2ea5ad3dbd8dc819dcbd05196d120081a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5e7bf2ea5ad3dbd8dc819dcbd05196d120081a1", "html_url": "https://github.com/rust-lang/rust/commit/f5e7bf2ea5ad3dbd8dc819dcbd05196d120081a1"}], "stats": {"total": 84, "additions": 64, "deletions": 20}, "files": [{"sha": "4c255b12b7f1324a8de78db00271c87b4fdf1ace", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/332dd6ad6ec0992137f515845ae832fb807123e8/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/332dd6ad6ec0992137f515845ae832fb807123e8/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=332dd6ad6ec0992137f515845ae832fb807123e8", "patch": "@@ -655,6 +655,7 @@ dependencies = [\n  \"ide-db\",\n  \"itertools\",\n  \"profile\",\n+ \"smallvec\",\n  \"sourcegen\",\n  \"stdx\",\n  \"syntax\","}, {"sha": "b9260473b12d72115db8f56665ddc5fb0481261a", "filename": "crates/ide-assists/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/332dd6ad6ec0992137f515845ae832fb807123e8/crates%2Fide-assists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/332dd6ad6ec0992137f515845ae832fb807123e8/crates%2Fide-assists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2FCargo.toml?ref=332dd6ad6ec0992137f515845ae832fb807123e8", "patch": "@@ -14,6 +14,7 @@ cov-mark = \"2.0.0-pre.1\"\n \n itertools = \"0.10.5\"\n either = \"1.7.0\"\n+smallvec = \"1.10.0\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n syntax = { path = \"../syntax\", version = \"0.0.0\" }"}, {"sha": "81df190825121ccd29b842e07fd141c9afc40be6", "filename": "crates/ide-assists/src/handlers/extract_module.rs", "status": "modified", "additions": 62, "deletions": 20, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/332dd6ad6ec0992137f515845ae832fb807123e8/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/332dd6ad6ec0992137f515845ae832fb807123e8/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_module.rs?ref=332dd6ad6ec0992137f515845ae832fb807123e8", "patch": "@@ -10,6 +10,8 @@ use ide_db::{\n     defs::{Definition, NameClass, NameRefClass},\n     search::{FileReference, SearchScope},\n };\n+use itertools::Itertools;\n+use smallvec::SmallVec;\n use stdx::format_to;\n use syntax::{\n     algo::find_node_at_range,\n@@ -657,28 +659,23 @@ impl Module {\n \n fn check_intersection_and_push(\n     import_paths_to_be_removed: &mut Vec<TextRange>,\n-    import_path: TextRange,\n+    mut import_path: TextRange,\n ) {\n-    if import_paths_to_be_removed.len() > 0 {\n-        // Text ranges received here for imports are extended to the\n-        // next/previous comma which can cause intersections among them\n-        // and later deletion of these can cause panics similar\n-        // to reported in #11766. So to mitigate it, we\n-        // check for intersection between all current members\n-        // and if it exists we combine both text ranges into\n-        // one\n-        let r = import_paths_to_be_removed\n-            .into_iter()\n-            .position(|it| it.intersect(import_path).is_some());\n-        match r {\n-            Some(it) => {\n-                import_paths_to_be_removed[it] = import_paths_to_be_removed[it].cover(import_path)\n-            }\n-            None => import_paths_to_be_removed.push(import_path),\n-        }\n-    } else {\n-        import_paths_to_be_removed.push(import_path);\n+    // Text ranges received here for imports are extended to the\n+    // next/previous comma which can cause intersections among them\n+    // and later deletion of these can cause panics similar\n+    // to reported in #11766. So to mitigate it, we\n+    // check for intersection between all current members\n+    // and combine all such ranges into one.\n+    let s: SmallVec<[_; 2]> = import_paths_to_be_removed\n+        .into_iter()\n+        .positions(|it| it.intersect(import_path).is_some())\n+        .collect();\n+    for pos in s.into_iter().rev() {\n+        let intersecting_path = import_paths_to_be_removed.swap_remove(pos);\n+        import_path = import_path.cover(intersecting_path);\n     }\n+    import_paths_to_be_removed.push(import_path);\n }\n \n fn does_source_exists_outside_sel_in_same_mod(\n@@ -1766,4 +1763,49 @@ mod modname {\n         \",\n         )\n     }\n+\n+    #[test]\n+    fn test_merge_multiple_intersections() {\n+        check_assist(\n+            extract_module,\n+            r#\"\n+mod dep {\n+    pub struct A;\n+    pub struct B;\n+    pub struct C;\n+}\n+\n+use dep::{A, B, C};\n+\n+$0struct S {\n+    inner: A,\n+    state: C,\n+    condvar: B,\n+}$0\n+\"#,\n+            r#\"\n+mod dep {\n+    pub struct A;\n+    pub struct B;\n+    pub struct C;\n+}\n+\n+use dep::{};\n+\n+mod modname {\n+    use super::dep::B;\n+\n+    use super::dep::C;\n+\n+    use super::dep::A;\n+\n+    pub(crate) struct S {\n+        pub(crate) inner: A,\n+        pub(crate) state: C,\n+        pub(crate) condvar: B,\n+    }\n+}\n+\"#,\n+        );\n+    }\n }"}]}