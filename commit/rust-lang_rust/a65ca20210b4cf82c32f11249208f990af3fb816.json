{"sha": "a65ca20210b4cf82c32f11249208f990af3fb816", "node_id": "C_kwDOAAsO6NoAKGE2NWNhMjAyMTBiNGNmODJjMzJmMTEyNDkyMDhmOTkwYWYzZmI4MTY", "commit": {"author": {"name": "Mathew Horner", "email": "mathewhorner456@gmail.com", "date": "2022-09-16T21:56:19Z"}, "committer": {"name": "Mathew Horner", "email": "mathewhorner456@gmail.com", "date": "2022-09-16T21:56:19Z"}, "message": "Fix tests by using primitive rather than String.", "tree": {"sha": "bbe048157fa0b32fce81d30616b28b432fc61b7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbe048157fa0b32fce81d30616b28b432fc61b7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a65ca20210b4cf82c32f11249208f990af3fb816", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a65ca20210b4cf82c32f11249208f990af3fb816", "html_url": "https://github.com/rust-lang/rust/commit/a65ca20210b4cf82c32f11249208f990af3fb816", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a65ca20210b4cf82c32f11249208f990af3fb816/comments", "author": {"login": "mdx97", "id": 33100798, "node_id": "MDQ6VXNlcjMzMTAwNzk4", "avatar_url": "https://avatars.githubusercontent.com/u/33100798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdx97", "html_url": "https://github.com/mdx97", "followers_url": "https://api.github.com/users/mdx97/followers", "following_url": "https://api.github.com/users/mdx97/following{/other_user}", "gists_url": "https://api.github.com/users/mdx97/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdx97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdx97/subscriptions", "organizations_url": "https://api.github.com/users/mdx97/orgs", "repos_url": "https://api.github.com/users/mdx97/repos", "events_url": "https://api.github.com/users/mdx97/events{/privacy}", "received_events_url": "https://api.github.com/users/mdx97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mdx97", "id": 33100798, "node_id": "MDQ6VXNlcjMzMTAwNzk4", "avatar_url": "https://avatars.githubusercontent.com/u/33100798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdx97", "html_url": "https://github.com/mdx97", "followers_url": "https://api.github.com/users/mdx97/followers", "following_url": "https://api.github.com/users/mdx97/following{/other_user}", "gists_url": "https://api.github.com/users/mdx97/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdx97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdx97/subscriptions", "organizations_url": "https://api.github.com/users/mdx97/orgs", "repos_url": "https://api.github.com/users/mdx97/repos", "events_url": "https://api.github.com/users/mdx97/events{/privacy}", "received_events_url": "https://api.github.com/users/mdx97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7abf34c1984196aadc3b3ee6e95887e22b68dea", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7abf34c1984196aadc3b3ee6e95887e22b68dea", "html_url": "https://github.com/rust-lang/rust/commit/e7abf34c1984196aadc3b3ee6e95887e22b68dea"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "62c69f90baa4f9f55b1b15bcb827f67883c3f1cd", "filename": "crates/ide-diagnostics/src/handlers/type_mismatch.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a65ca20210b4cf82c32f11249208f990af3fb816/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Ftype_mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a65ca20210b4cf82c32f11249208f990af3fb816/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Ftype_mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Ftype_mismatch.rs?ref=a65ca20210b4cf82c32f11249208f990af3fb816", "patch": "@@ -315,25 +315,25 @@ fn main() {\n     fn test_add_reference_to_macro_call() {\n         check_fix(\n             r#\"\n-macro_rules! hello_world {\n+macro_rules! thousand {\n     () => {\n-        \"Hello World\".to_string()\n+        1000_u64\n     };\n }\n-fn test(foo: &String) {}\n+fn test(foo: &u64) {}\n fn main() {\n-    test($0hello_world!());\n+    test($0thousand!());\n }\n             \"#,\n             r#\"\n-macro_rules! hello_world {\n+macro_rules! thousand {\n     () => {\n-        \"Hello World\".to_string()\n+        1000_u64\n     };\n }\n-fn test(foo: &String) {}\n+fn test(foo: &u64) {}\n fn main() {\n-    test(&hello_world!());\n+    test(&thousand!());\n }\n             \"#,\n         );"}]}