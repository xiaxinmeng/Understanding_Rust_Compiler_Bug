{"sha": "931758c88a3d6deb95d55ef30fba71144815009e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzMTc1OGM4OGEzZDZkZWI5NWQ1NWVmMzBmYmE3MTE0NDgxNTAwOWU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-25T12:54:24Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-03T01:17:55Z"}, "message": "FIXME(#19481) -- workaround valgrind cleanup failure (but the code is nicer this way anyhow)", "tree": {"sha": "df95aedea339181eca811ecd0168d047d4a07a90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df95aedea339181eca811ecd0168d047d4a07a90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/931758c88a3d6deb95d55ef30fba71144815009e", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/931758c88a3d6deb95d55ef30fba71144815009e", "html_url": "https://github.com/rust-lang/rust/commit/931758c88a3d6deb95d55ef30fba71144815009e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/931758c88a3d6deb95d55ef30fba71144815009e/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "594e21f19b85eb0ab32c6a18b3cf1f6d530962b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/594e21f19b85eb0ab32c6a18b3cf1f6d530962b2", "html_url": "https://github.com/rust-lang/rust/commit/594e21f19b85eb0ab32c6a18b3cf1f6d530962b2"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "23072dee3b6b1491651af2c6d3530076845fd643", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/931758c88a3d6deb95d55ef30fba71144815009e/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/931758c88a3d6deb95d55ef30fba71144815009e/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=931758c88a3d6deb95d55ef30fba71144815009e", "patch": "@@ -965,7 +965,7 @@ pub fn trans_external_path<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n \n pub fn invoke<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n                           llfn: ValueRef,\n-                          llargs: Vec<ValueRef> ,\n+                          llargs: &[ValueRef],\n                           fn_ty: Ty<'tcx>,\n                           call_info: Option<NodeInfo>,\n                           // FIXME(15064) is_lang_item is a horrible hack, please remove it"}, {"sha": "50d2f885afa17f69015c0d9a42c1345d94ab17be", "filename": "src/librustc_trans/trans/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/931758c88a3d6deb95d55ef30fba71144815009e/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/931758c88a3d6deb95d55ef30fba71144815009e/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs?ref=931758c88a3d6deb95d55ef30fba71144815009e", "patch": "@@ -808,7 +808,7 @@ pub fn trans_call_inner<'a, 'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n         // Invoke the actual rust fn and update bcx/llresult.\n         let (llret, b) = base::invoke(bcx,\n                                       llfn,\n-                                      llargs,\n+                                      llargs[],\n                                       callee_ty,\n                                       call_info,\n                                       dest.is_none());"}, {"sha": "fbaf1e6581060ccb5f360462679b598663d879a6", "filename": "src/librustc_trans/trans/glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/931758c88a3d6deb95d55ef30fba71144815009e/src%2Flibrustc_trans%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/931758c88a3d6deb95d55ef30fba71144815009e/src%2Flibrustc_trans%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fglue.rs?ref=931758c88a3d6deb95d55ef30fba71144815009e", "patch": "@@ -291,7 +291,7 @@ fn trans_struct_drop<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n         let dtor_ty = ty::mk_ctor_fn(bcx.tcx(),\n                                      &[get_drop_glue_type(bcx.ccx(), t)],\n                                      ty::mk_nil(bcx.tcx()));\n-        let (_, variant_cx) = invoke(variant_cx, dtor_addr, args, dtor_ty, None, false);\n+        let (_, variant_cx) = invoke(variant_cx, dtor_addr, args[], dtor_ty, None, false);\n \n         variant_cx.fcx.pop_and_trans_custom_cleanup_scope(variant_cx, field_scope);\n         variant_cx"}, {"sha": "99c63c3c6e95e01c0b4f7e68f96997a670333864", "filename": "src/test/compile-fail/dst-object-from-unsized-type.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/931758c88a3d6deb95d55ef30fba71144815009e/src%2Ftest%2Fcompile-fail%2Fdst-object-from-unsized-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/931758c88a3d6deb95d55ef30fba71144815009e/src%2Ftest%2Fcompile-fail%2Fdst-object-from-unsized-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdst-object-from-unsized-type.rs?ref=931758c88a3d6deb95d55ef30fba71144815009e", "patch": "@@ -13,18 +13,24 @@\n trait Foo for Sized? {}\n impl Foo for str {}\n \n-fn test<Sized? T: Foo>(t: &T) {\n+fn test1<Sized? T: Foo>(t: &T) {\n     let u: &Foo = t;\n     //~^ ERROR `core::kinds::Sized` is not implemented for the type `T`\n+}\n \n+fn test2<Sized? T: Foo>(t: &T) {\n     let v: &Foo = t as &Foo;\n     //~^ ERROR `core::kinds::Sized` is not implemented for the type `T`\n }\n \n-fn main() {\n+fn test3() {\n     let _: &[&Foo] = &[\"hi\"];\n     //~^ ERROR `core::kinds::Sized` is not implemented for the type `str`\n+}\n \n+fn test4() {\n     let _: &Foo = \"hi\" as &Foo;\n     //~^ ERROR `core::kinds::Sized` is not implemented for the type `str`\n }\n+\n+fn main() { }"}]}