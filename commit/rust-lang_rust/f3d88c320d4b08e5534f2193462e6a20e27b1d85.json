{"sha": "f3d88c320d4b08e5534f2193462e6a20e27b1d85", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzZDg4YzMyMGQ0YjA4ZTU1MzRmMjE5MzQ2MmU2YTIwZTI3YjFkODU=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-08-03T06:40:06Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-08-10T12:49:41Z"}, "message": "lint: dead_code ignores items with leading underscores.\n\nThis generalises the behaviour with struct fields (which recieve no\ndead_code warning if they have a leading _), and other similar lints, to\nall items, e.g. `fn _foo() {} fn main() {}` has no warnings.", "tree": {"sha": "ea2c4c1396b9542cc52f680290b41a30c39ea407", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea2c4c1396b9542cc52f680290b41a30c39ea407"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3d88c320d4b08e5534f2193462e6a20e27b1d85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3d88c320d4b08e5534f2193462e6a20e27b1d85", "html_url": "https://github.com/rust-lang/rust/commit/f3d88c320d4b08e5534f2193462e6a20e27b1d85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3d88c320d4b08e5534f2193462e6a20e27b1d85/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4d608fabda8f39f319ebefd9aebf4ceb7c1bbf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4d608fabda8f39f319ebefd9aebf4ceb7c1bbf4", "html_url": "https://github.com/rust-lang/rust/commit/d4d608fabda8f39f319ebefd9aebf4ceb7c1bbf4"}], "stats": {"total": 60, "additions": 48, "deletions": 12}, "files": [{"sha": "23ba26ad3bf6db37fe93f8dd3b4ada102a174dc0", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f3d88c320d4b08e5534f2193462e6a20e27b1d85/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3d88c320d4b08e5534f2193462e6a20e27b1d85/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=f3d88c320d4b08e5534f2193462e6a20e27b1d85", "patch": "@@ -412,18 +412,14 @@ struct DeadVisitor<'a> {\n \n impl<'a> DeadVisitor<'a> {\n     fn should_warn_about_field(&mut self, node: &ast::StructField_) -> bool {\n-        let (is_named, has_leading_underscore) = match node.ident() {\n-            Some(ref ident) => (true, token::get_ident(*ident).get().as_bytes()[0] == ('_' as u8)),\n-            _ => (false, false)\n-        };\n+        let is_named = node.ident().is_some();\n         let field_type = ty::node_id_to_type(self.tcx, node.id);\n         let is_marker_field = match ty::ty_to_def_id(field_type) {\n             Some(def_id) => self.tcx.lang_items.items().any(|(_, item)| *item == Some(def_id)),\n             _ => false\n         };\n         is_named\n             && !self.symbol_is_live(node.id, None)\n-            && !has_leading_underscore\n             && !is_marker_field\n             && !has_allow_dead_code_or_lang_attr(node.attrs.as_slice())\n     }\n@@ -468,13 +464,15 @@ impl<'a> DeadVisitor<'a> {\n                       id: ast::NodeId,\n                       span: codemap::Span,\n                       ident: ast::Ident) {\n-        self.tcx\n-            .sess\n-            .add_lint(lint::builtin::DEAD_CODE,\n-                      id,\n-                      span,\n-                      format!(\"code is never used: `{}`\",\n-                              token::get_ident(ident)));\n+        let name = ident.as_str();\n+        if !name.starts_with(\"_\") {\n+            self.tcx\n+                .sess\n+                .add_lint(lint::builtin::DEAD_CODE,\n+                          id,\n+                          span,\n+                          format!(\"code is never used: `{}`\", name));\n+        }\n     }\n }\n "}, {"sha": "b678b77095f76a772267938ab8ce640e6d8a5bcb", "filename": "src/test/run-pass/dead-code-leading-underscore.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f3d88c320d4b08e5534f2193462e6a20e27b1d85/src%2Ftest%2Frun-pass%2Fdead-code-leading-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3d88c320d4b08e5534f2193462e6a20e27b1d85/src%2Ftest%2Frun-pass%2Fdead-code-leading-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdead-code-leading-underscore.rs?ref=f3d88c320d4b08e5534f2193462e6a20e27b1d85", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![deny(dead_code)]\n+\n+static _X: uint = 0;\n+\n+fn _foo() {}\n+\n+struct _Y {\n+    _z: uint\n+}\n+\n+enum _Z {}\n+\n+impl _Y {\n+    fn _bar() {}\n+}\n+\n+type _A = int;\n+\n+mod _bar {\n+    fn _qux() {}\n+}\n+\n+extern {\n+    #[link_name = \"abort\"]\n+    fn _abort() -> !;\n+}\n+\n+fn main() {}"}]}