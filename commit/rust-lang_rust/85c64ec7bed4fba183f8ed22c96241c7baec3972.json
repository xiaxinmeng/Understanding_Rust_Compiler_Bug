{"sha": "85c64ec7bed4fba183f8ed22c96241c7baec3972", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1YzY0ZWM3YmVkNGZiYTE4M2Y4ZWQyMmM5NjI0MWM3YmFlYzM5NzI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-27T13:56:53Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-27T14:02:43Z"}, "message": "use new api for flip_trait_bound assist", "tree": {"sha": "8f2fe51a5a242e1f842f394c405978d24ea1d316", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f2fe51a5a242e1f842f394c405978d24ea1d316"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85c64ec7bed4fba183f8ed22c96241c7baec3972", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85c64ec7bed4fba183f8ed22c96241c7baec3972", "html_url": "https://github.com/rust-lang/rust/commit/85c64ec7bed4fba183f8ed22c96241c7baec3972", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85c64ec7bed4fba183f8ed22c96241c7baec3972/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc2fc8528b699faf0993e607c842165ac65052f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc2fc8528b699faf0993e607c842165ac65052f5", "html_url": "https://github.com/rust-lang/rust/commit/fc2fc8528b699faf0993e607c842165ac65052f5"}], "stats": {"total": 70, "additions": 58, "deletions": 12}, "files": [{"sha": "1625b241f12f98500c4df72a96d2fc5515b7028e", "filename": "crates/ra_assists/src/assists/flip_trait_bound.rs", "status": "modified", "additions": 22, "deletions": 11, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/85c64ec7bed4fba183f8ed22c96241c7baec3972/crates%2Fra_assists%2Fsrc%2Fassists%2Fflip_trait_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85c64ec7bed4fba183f8ed22c96241c7baec3972/crates%2Fra_assists%2Fsrc%2Fassists%2Fflip_trait_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fflip_trait_bound.rs?ref=85c64ec7bed4fba183f8ed22c96241c7baec3972", "patch": "@@ -1,21 +1,32 @@\n-//! Assist for swapping traits inside of a trait bound list\n-//!\n-//! E.g. `A + B` => `B + A` when the cursor is placed by the `+` inside of a\n-//! trait bound list\n-\n use hir::db::HirDatabase;\n-use ra_syntax::{algo::non_trivia_sibling, ast::TypeBoundList, Direction, T};\n+use ra_syntax::{\n+    algo::non_trivia_sibling,\n+    ast::{self, AstNode},\n+    Direction, T,\n+};\n \n use crate::{Assist, AssistCtx, AssistId};\n \n-/// Flip trait bound assist.\n+// Assist: flip_trait_bound\n+//\n+// Flips two trait bounds.\n+//\n+// ```\n+// fn foo<T: Clone +<|> Copy>() { }\n+// ```\n+// ->\n+// ```\n+// fn foo<T: Copy + Clone>() { }\n+// ```\n pub(crate) fn flip_trait_bound(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    // Make sure we're in a `TypeBoundList`\n-    ctx.node_at_offset::<TypeBoundList>()?;\n-\n     // We want to replicate the behavior of `flip_binexpr` by only suggesting\n     // the assist when the cursor is on a `+`\n-    let plus = ctx.token_at_offset().find(|tkn| tkn.kind() == T![+])?;\n+    let plus = ctx.find_token_at_offset(T![+])?;\n+\n+    // Make sure we're in a `TypeBoundList`\n+    if ast::TypeBoundList::cast(plus.parent()).is_none() {\n+        return None;\n+    }\n \n     let (before, after) = (\n         non_trivia_sibling(plus.clone().into(), Direction::Prev)?,"}, {"sha": "6e1e3de843e60167ed45256c854f910e5112da3c", "filename": "crates/ra_assists/src/doc_tests.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/85c64ec7bed4fba183f8ed22c96241c7baec3972/crates%2Fra_assists%2Fsrc%2Fdoc_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85c64ec7bed4fba183f8ed22c96241c7baec3972/crates%2Fra_assists%2Fsrc%2Fdoc_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fdoc_tests.rs?ref=85c64ec7bed4fba183f8ed22c96241c7baec3972", "patch": "@@ -17,7 +17,17 @@ fn check(assist_id: &str, before: &str, after: &str) {\n     let (_assist_id, action) = crate::assists(&db, frange)\n         .into_iter()\n         .find(|(id, _)| id.id.0 == assist_id)\n-        .unwrap_or_else(|| panic!(\"Assist {:?} is not applicable\", assist_id));\n+        .unwrap_or_else(|| {\n+            panic!(\n+                \"\\n\\nAssist is not applicable: {}\\nAvailable assists: {}\",\n+                assist_id,\n+                crate::assists(&db, frange)\n+                    .into_iter()\n+                    .map(|(id, _)| id.id.0)\n+                    .collect::<Vec<_>>()\n+                    .join(\", \")\n+            )\n+        });\n \n     let actual = action.edit.apply(&before);\n     assert_eq_text!(after, &actual);"}, {"sha": "ebe49aecfe20342a1db494e2ad7e4b4cc87ce6e3", "filename": "crates/ra_assists/src/doc_tests/generated.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/85c64ec7bed4fba183f8ed22c96241c7baec3972/crates%2Fra_assists%2Fsrc%2Fdoc_tests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85c64ec7bed4fba183f8ed22c96241c7baec3972/crates%2Fra_assists%2Fsrc%2Fdoc_tests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fdoc_tests%2Fgenerated.rs?ref=85c64ec7bed4fba183f8ed22c96241c7baec3972", "patch": "@@ -255,6 +255,19 @@ fn main() {\n     )\n }\n \n+#[test]\n+fn doctest_flip_trait_bound() {\n+    check(\n+        \"flip_trait_bound\",\n+        r#####\"\n+fn foo<T: Clone +<|> Copy>() { }\n+\"#####,\n+        r#####\"\n+fn foo<T: Copy + Clone>() { }\n+\"#####,\n+    )\n+}\n+\n #[test]\n fn doctest_inline_local_variable() {\n     check("}, {"sha": "b1fe44d84055f3837fff80b64edd902dc622372a", "filename": "docs/user/assists.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/85c64ec7bed4fba183f8ed22c96241c7baec3972/docs%2Fuser%2Fassists.md", "raw_url": "https://github.com/rust-lang/rust/raw/85c64ec7bed4fba183f8ed22c96241c7baec3972/docs%2Fuser%2Fassists.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fassists.md?ref=85c64ec7bed4fba183f8ed22c96241c7baec3972", "patch": "@@ -248,6 +248,18 @@ fn main() {\n }\n ```\n \n+## `flip_trait_bound`\n+\n+Flips two trait bounds.\n+\n+```rust\n+// BEFORE\n+fn foo<T: Clone +\u2503 Copy>() { }\n+\n+// AFTER\n+fn foo<T: Copy + Clone>() { }\n+```\n+\n ## `inline_local_variable`\n \n Inlines local variable."}]}