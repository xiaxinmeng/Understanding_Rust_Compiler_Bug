{"sha": "365483a35b758fc233a3dc57155cfb63cdaa4bd2", "node_id": "C_kwDOAAsO6NoAKDM2NTQ4M2EzNWI3NThmYzIzM2EzZGM1NzE1NWNmYjYzY2RhYTRiZDI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-01T02:33:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-01T02:33:09Z"}, "message": "Rollup merge of #90441 - tmiasko:test-promotion-needs-drop, r=Mark-Simulacrum\n\nTest that promotion follows references when looking for drop\n\nNoticed that this wasn't covered by any of existing tests.\n\nThe const checking and const qualification, which currently shares the\nimplementation with promotion, will likely need a different behaviour\nhere (see issue #90193).", "tree": {"sha": "199d816fba64f7b98593ab29ae47c1f37ab20206", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/199d816fba64f7b98593ab29ae47c1f37ab20206"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/365483a35b758fc233a3dc57155cfb63cdaa4bd2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhf1HlCRBK7hj4Ov3rIwAAPt4IAKEzC2fd1J4wuebHA/iVhgYM\nola5qze/1IPNWDSbhKWE2O4ugoa5eW/rhtXebQOGOeywYAfuHkzVHRg80gF/s6AZ\nK2DwtZvzsdcL48UbfdEaX0hwDyF79E2U1Fgp15UksVpAA5RG3t9HWG0AH6BV7VTl\nKjZXp9vnkGW63NEUudsxCLYG6y/C4ukb4y1Whov13nl/Bsm18nPLjB8auF878IXq\npXdNdmuSVfsCPy4sFEoqQAJAb04PAdLxj0GC5qDZRlaYkp0FDoCFQ2akwxMSKjV/\nk0O2sCuqKvw2Wf7bkqjWtCt/k8uKc/xYzPo7Zu19xA/X7+VPuf+3zI6ProwdzhU=\n=UIV9\n-----END PGP SIGNATURE-----\n", "payload": "tree 199d816fba64f7b98593ab29ae47c1f37ab20206\nparent 0b8d3b1854fc2343963b1f122e86d0e153e3dc39\nparent fadb9cc521da4f6010d80af5f750e8d9011c8f1c\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1635733989 +0100\ncommitter GitHub <noreply@github.com> 1635733989 +0100\n\nRollup merge of #90441 - tmiasko:test-promotion-needs-drop, r=Mark-Simulacrum\n\nTest that promotion follows references when looking for drop\n\nNoticed that this wasn't covered by any of existing tests.\n\nThe const checking and const qualification, which currently shares the\nimplementation with promotion, will likely need a different behaviour\nhere (see issue #90193).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/365483a35b758fc233a3dc57155cfb63cdaa4bd2", "html_url": "https://github.com/rust-lang/rust/commit/365483a35b758fc233a3dc57155cfb63cdaa4bd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/365483a35b758fc233a3dc57155cfb63cdaa4bd2/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b8d3b1854fc2343963b1f122e86d0e153e3dc39", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b8d3b1854fc2343963b1f122e86d0e153e3dc39", "html_url": "https://github.com/rust-lang/rust/commit/0b8d3b1854fc2343963b1f122e86d0e153e3dc39"}, {"sha": "fadb9cc521da4f6010d80af5f750e8d9011c8f1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fadb9cc521da4f6010d80af5f750e8d9011c8f1c", "html_url": "https://github.com/rust-lang/rust/commit/fadb9cc521da4f6010d80af5f750e8d9011c8f1c"}], "stats": {"total": 109, "additions": 100, "deletions": 9}, "files": [{"sha": "6830b23cfa345eeb6ea83e49e8a156f107aaee53", "filename": "src/test/ui/consts/promote-not.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/365483a35b758fc233a3dc57155cfb63cdaa4bd2/src%2Ftest%2Fui%2Fconsts%2Fpromote-not.rs", "raw_url": "https://github.com/rust-lang/rust/raw/365483a35b758fc233a3dc57155cfb63cdaa4bd2/src%2Ftest%2Fui%2Fconsts%2Fpromote-not.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromote-not.rs?ref=365483a35b758fc233a3dc57155cfb63cdaa4bd2", "patch": "@@ -39,6 +39,8 @@ const TEST_INTERIOR_MUT: () = {\n     let _val: &'static _ = &(Cell::new(1), 2).1; //~ ERROR temporary value dropped while borrowed\n };\n \n+const TEST_DROP: String = String::new();\n+\n fn main() {\n     // We must not promote things with interior mutability. Not even if we \"project it away\".\n     let _val: &'static _ = &(Cell::new(1), 2).0; //~ ERROR temporary value dropped while borrowed\n@@ -50,4 +52,17 @@ fn main() {\n     let _val: &'static _ = &(1%0); //~ ERROR temporary value dropped while borrowed\n     let _val: &'static _ = &(1%(1-1)); //~ ERROR temporary value dropped while borrowed\n     let _val: &'static _ = &([1,2,3][4]+1); //~ ERROR temporary value dropped while borrowed\n+\n+    // No promotion of temporaries that need to be dropped.\n+    let _val: &'static _ = &TEST_DROP;\n+    //~^ ERROR temporary value dropped while borrowed\n+    let _val: &'static _ = &&TEST_DROP;\n+    //~^ ERROR temporary value dropped while borrowed\n+    //~| ERROR temporary value dropped while borrowed\n+    let _val: &'static _ = &(&TEST_DROP,);\n+    //~^ ERROR temporary value dropped while borrowed\n+    //~| ERROR temporary value dropped while borrowed\n+    let _val: &'static _ = &[&TEST_DROP; 1];\n+    //~^ ERROR temporary value dropped while borrowed\n+    //~| ERROR temporary value dropped while borrowed\n }"}, {"sha": "0d0b0f9c689b5b6593d007015efb60d00f71fba3", "filename": "src/test/ui/consts/promote-not.stderr", "status": "modified", "additions": 85, "deletions": 9, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/365483a35b758fc233a3dc57155cfb63cdaa4bd2/src%2Ftest%2Fui%2Fconsts%2Fpromote-not.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/365483a35b758fc233a3dc57155cfb63cdaa4bd2/src%2Ftest%2Fui%2Fconsts%2Fpromote-not.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromote-not.stderr?ref=365483a35b758fc233a3dc57155cfb63cdaa4bd2", "patch": "@@ -59,7 +59,7 @@ LL | };\n    | - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/promote-not.rs:44:29\n+  --> $DIR/promote-not.rs:46:29\n    |\n LL |     let _val: &'static _ = &(Cell::new(1), 2).0;\n    |               ----------    ^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n@@ -70,7 +70,7 @@ LL | }\n    | - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/promote-not.rs:45:29\n+  --> $DIR/promote-not.rs:47:29\n    |\n LL |     let _val: &'static _ = &(Cell::new(1), 2).1;\n    |               ----------    ^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n@@ -81,7 +81,7 @@ LL | }\n    | - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/promote-not.rs:48:29\n+  --> $DIR/promote-not.rs:50:29\n    |\n LL |     let _val: &'static _ = &(1/0);\n    |               ----------    ^^^^^ creates a temporary which is freed while still in use\n@@ -92,7 +92,7 @@ LL | }\n    | - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/promote-not.rs:49:29\n+  --> $DIR/promote-not.rs:51:29\n    |\n LL |     let _val: &'static _ = &(1/(1-1));\n    |               ----------    ^^^^^^^^^ creates a temporary which is freed while still in use\n@@ -103,7 +103,7 @@ LL | }\n    | - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/promote-not.rs:50:29\n+  --> $DIR/promote-not.rs:52:29\n    |\n LL |     let _val: &'static _ = &(1%0);\n    |               ----------    ^^^^^ creates a temporary which is freed while still in use\n@@ -114,26 +114,102 @@ LL | }\n    | - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/promote-not.rs:51:29\n+  --> $DIR/promote-not.rs:53:29\n    |\n LL |     let _val: &'static _ = &(1%(1-1));\n    |               ----------    ^^^^^^^^^ creates a temporary which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n-LL |     let _val: &'static _ = &([1,2,3][4]+1);\n+...\n LL | }\n    | - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/promote-not.rs:52:29\n+  --> $DIR/promote-not.rs:54:29\n    |\n LL |     let _val: &'static _ = &([1,2,3][4]+1);\n    |               ----------    ^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n+...\n+LL | }\n+   | - temporary value is freed at the end of this statement\n+\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/promote-not.rs:57:29\n+   |\n+LL |     let _val: &'static _ = &TEST_DROP;\n+   |               ----------    ^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               |\n+   |               type annotation requires that borrow lasts for `'static`\n+...\n+LL | }\n+   | - temporary value is freed at the end of this statement\n+\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/promote-not.rs:59:29\n+   |\n+LL |     let _val: &'static _ = &&TEST_DROP;\n+   |               ----------    ^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               |\n+   |               type annotation requires that borrow lasts for `'static`\n+...\n+LL | }\n+   | - temporary value is freed at the end of this statement\n+\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/promote-not.rs:59:30\n+   |\n+LL |     let _val: &'static _ = &&TEST_DROP;\n+   |               ----------     ^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               |\n+   |               type annotation requires that borrow lasts for `'static`\n+...\n+LL | }\n+   | - temporary value is freed at the end of this statement\n+\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/promote-not.rs:62:29\n+   |\n+LL |     let _val: &'static _ = &(&TEST_DROP,);\n+   |               ----------    ^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               |\n+   |               type annotation requires that borrow lasts for `'static`\n+...\n LL | }\n    | - temporary value is freed at the end of this statement\n \n-error: aborting due to 13 previous errors\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/promote-not.rs:62:31\n+   |\n+LL |     let _val: &'static _ = &(&TEST_DROP,);\n+   |               ----------      ^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               |\n+   |               type annotation requires that borrow lasts for `'static`\n+...\n+LL | }\n+   | - temporary value is freed at the end of this statement\n+\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/promote-not.rs:65:29\n+   |\n+LL |     let _val: &'static _ = &[&TEST_DROP; 1];\n+   |               ----------    ^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               |\n+   |               type annotation requires that borrow lasts for `'static`\n+...\n+LL | }\n+   | - temporary value is freed at the end of this statement\n+\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/promote-not.rs:65:31\n+   |\n+LL |     let _val: &'static _ = &[&TEST_DROP; 1];\n+   |               ----------      ^^^^^^^^^    - temporary value is freed at the end of this statement\n+   |               |               |\n+   |               |               creates a temporary which is freed while still in use\n+   |               type annotation requires that borrow lasts for `'static`\n+\n+error: aborting due to 20 previous errors\n \n For more information about this error, try `rustc --explain E0716`."}]}