{"sha": "92af945256913dbec2c679a06e154469d60a0d7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyYWY5NDUyNTY5MTNkYmVjMmM2NzlhMDZlMTU0NDY5ZDYwYTBkN2U=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-06-26T20:57:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-26T20:57:33Z"}, "message": "Rollup merge of #73579 - RalfJung:doc-missing-links, r=shepmaster\n\nadd missing doc links\n\nThe doc comments contain ``[`size_of_val`]`` but the link target was missing.", "tree": {"sha": "b60157806f12f82c4733fd6984a6f0d826b068e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b60157806f12f82c4733fd6984a6f0d826b068e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92af945256913dbec2c679a06e154469d60a0d7e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe9mE9CRBK7hj4Ov3rIwAAdHIIAJJ73KaoPalixyuczTL14R+U\nqRJCHna2140NeTf8Rs5VnKGR18BbTO5Yjpak5/v8RtuvJXVjw/eqPLoomlCC4syp\nGMJ51QQOGHnqqjC2yIVwSLmPuGK7RYm5kPFAOvg0EN8e95gLP+4Lk6kyRoX6gHof\n0M0RNgYiZsIrFJyTRUrwaOwpgIYef2MqwAMeZi/mjoRy7ZcCRuOmOqffvsLJhLWd\n6OZrDuV1+AIUXgoYVJ+nNAttXz5xzbB59rdBkCptdeIHjS+k3gZplQqCQyZ2PL0e\nnuBWOTueW5j/+s8wemBGKCTaZ0U3hhkzhN8YU6NAI6SCgX7FHwV0b+pGdqe49AY=\n=sRoc\n-----END PGP SIGNATURE-----\n", "payload": "tree b60157806f12f82c4733fd6984a6f0d826b068e4\nparent 23b0776a594a0728a7706521c5193245de2ea823\nparent cb8c94c523d7ff407f9520a6555ea829c1232a50\nauthor Manish Goregaokar <manishsmail@gmail.com> 1593205053 -0700\ncommitter GitHub <noreply@github.com> 1593205053 -0700\n\nRollup merge of #73579 - RalfJung:doc-missing-links, r=shepmaster\n\nadd missing doc links\n\nThe doc comments contain ``[`size_of_val`]`` but the link target was missing.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92af945256913dbec2c679a06e154469d60a0d7e", "html_url": "https://github.com/rust-lang/rust/commit/92af945256913dbec2c679a06e154469d60a0d7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92af945256913dbec2c679a06e154469d60a0d7e/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23b0776a594a0728a7706521c5193245de2ea823", "url": "https://api.github.com/repos/rust-lang/rust/commits/23b0776a594a0728a7706521c5193245de2ea823", "html_url": "https://github.com/rust-lang/rust/commit/23b0776a594a0728a7706521c5193245de2ea823"}, {"sha": "cb8c94c523d7ff407f9520a6555ea829c1232a50", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb8c94c523d7ff407f9520a6555ea829c1232a50", "html_url": "https://github.com/rust-lang/rust/commit/cb8c94c523d7ff407f9520a6555ea829c1232a50"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "46e6ea7cd18660a35cbec63c115314805a2f4fb0", "filename": "src/libcore/mem/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/92af945256913dbec2c679a06e154469d60a0d7e/src%2Flibcore%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92af945256913dbec2c679a06e154469d60a0d7e/src%2Flibcore%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem%2Fmod.rs?ref=92af945256913dbec2c679a06e154469d60a0d7e", "patch": "@@ -358,12 +358,13 @@ pub fn size_of_val<T: ?Sized>(val: &T) -> usize {\n ///     - an (unstable) [extern type], then this function is always safe to\n ///       call, but may panic or otherwise return the wrong value, as the\n ///       extern type's layout is not known. This is the same behavior as\n-///       [`size_of_val`] on a reference to an extern type tail.\n+///       [`size_of_val`] on a reference to a type with an extern type tail.\n ///     - otherwise, it is conservatively not allowed to call this function.\n ///\n /// [slice]: ../../std/primitive.slice.html\n /// [trait object]: ../../book/ch17-02-trait-objects.html\n /// [extern type]: ../../unstable-book/language-features/extern-types.html\n+/// [`size_of_val`]: ../../core/mem/fn.size_of_val.html\n ///\n /// # Examples\n ///\n@@ -492,12 +493,13 @@ pub fn align_of_val<T: ?Sized>(val: &T) -> usize {\n ///     - an (unstable) [extern type], then this function is always safe to\n ///       call, but may panic or otherwise return the wrong value, as the\n ///       extern type's layout is not known. This is the same behavior as\n-///       [`align_of_val`] on a reference to an extern type tail.\n+///       [`align_of_val`] on a reference to a type with an extern type tail.\n ///     - otherwise, it is conservatively not allowed to call this function.\n ///\n /// [slice]: ../../std/primitive.slice.html\n /// [trait object]: ../../book/ch17-02-trait-objects.html\n /// [extern type]: ../../unstable-book/language-features/extern-types.html\n+/// [`align_of_val`]: ../../core/mem/fn.align_of_val.html\n ///\n /// # Examples\n ///"}]}