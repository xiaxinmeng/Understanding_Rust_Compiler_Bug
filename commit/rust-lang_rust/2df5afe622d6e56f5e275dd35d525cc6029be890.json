{"sha": "2df5afe622d6e56f5e275dd35d525cc6029be890", "node_id": "C_kwDOAAsO6NoAKDJkZjVhZmU2MjJkNmU1NmY1ZTI3NWRkMzVkNTI1Y2M2MDI5YmU4OTA", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-08-09T18:08:56Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-08-28T20:23:19Z"}, "message": "Stabilize `std::io::read_to_string`", "tree": {"sha": "4aa692567bc5f281acfa0788d965f165585f10f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4aa692567bc5f281acfa0788d965f165585f10f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2df5afe622d6e56f5e275dd35d525cc6029be890", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2df5afe622d6e56f5e275dd35d525cc6029be890", "html_url": "https://github.com/rust-lang/rust/commit/2df5afe622d6e56f5e275dd35d525cc6029be890", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2df5afe622d6e56f5e275dd35d525cc6029be890/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "223d16ebbde1bd309c58e853b053e14318e56b0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/223d16ebbde1bd309c58e853b053e14318e56b0e", "html_url": "https://github.com/rust-lang/rust/commit/223d16ebbde1bd309c58e853b053e14318e56b0e"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "01a3873c75cec6c5b81459a8de83740a8297e559", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2df5afe622d6e56f5e275dd35d525cc6029be890/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2df5afe622d6e56f5e275dd35d525cc6029be890/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=2df5afe622d6e56f5e275dd35d525cc6029be890", "patch": "@@ -1037,8 +1037,6 @@ pub trait Read {\n /// # Examples\n ///\n /// ```no_run\n-/// #![feature(io_read_to_string)]\n-///\n /// # use std::io;\n /// fn main() -> io::Result<()> {\n ///     let stdin = io::read_to_string(io::stdin())?;\n@@ -1047,7 +1045,7 @@ pub trait Read {\n ///     Ok(())\n /// }\n /// ```\n-#[unstable(feature = \"io_read_to_string\", issue = \"80218\")]\n+#[stable(feature = \"io_read_to_string\", since = \"CURRENT_RUSTC_VERSION\")]\n pub fn read_to_string<R: Read>(mut reader: R) -> Result<String> {\n     let mut buf = String::new();\n     reader.read_to_string(&mut buf)?;"}]}