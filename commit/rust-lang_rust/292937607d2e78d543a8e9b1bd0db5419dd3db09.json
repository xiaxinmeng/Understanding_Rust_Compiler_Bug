{"sha": "292937607d2e78d543a8e9b1bd0db5419dd3db09", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MjkzNzYwN2QyZTc4ZDU0M2E4ZTliMWJkMGRiNTQxOWRkM2RiMDk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-22T20:51:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-22T20:51:38Z"}, "message": "Auto merge of #31095 - alexcrichton:remove-old-files, r=brson\n\nThese are either not used at all today or they're super old and haven't been used in ages, so clean them out.", "tree": {"sha": "c2506c87a1a353204bdc0f3f134e2c170b943550", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2506c87a1a353204bdc0f3f134e2c170b943550"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/292937607d2e78d543a8e9b1bd0db5419dd3db09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/292937607d2e78d543a8e9b1bd0db5419dd3db09", "html_url": "https://github.com/rust-lang/rust/commit/292937607d2e78d543a8e9b1bd0db5419dd3db09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/292937607d2e78d543a8e9b1bd0db5419dd3db09/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cded89a3d167a1b736669223ee1ddc1c0744d8d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/cded89a3d167a1b736669223ee1ddc1c0744d8d9", "html_url": "https://github.com/rust-lang/rust/commit/cded89a3d167a1b736669223ee1ddc1c0744d8d9"}, {"sha": "9e432bd454d9116cd640d1059ccec09ce31313d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e432bd454d9116cd640d1059ccec09ce31313d0", "html_url": "https://github.com/rust-lang/rust/commit/9e432bd454d9116cd640d1059ccec09ce31313d0"}], "stats": {"total": 547, "additions": 2, "deletions": 545}, "files": [{"sha": "e41ce56b9ed0c9b5d87e928cfbff73e79b1760bb", "filename": "Makefile.in", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/292937607d2e78d543a8e9b1bd0db5419dd3db09/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/292937607d2e78d543a8e9b1bd0db5419dd3db09/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=292937607d2e78d543a8e9b1bd0db5419dd3db09", "patch": "@@ -220,19 +220,12 @@ endif\n # The test suite\n ifneq ($(strip $(findstring check,$(MAKECMDGOALS)) \\\n                $(findstring test,$(MAKECMDGOALS))  \\\n-               $(findstring perf,$(MAKECMDGOALS))  \\\n                $(findstring tidy,$(MAKECMDGOALS))),)\n   CFG_INFO := $(info cfg: including test rules)\n   include $(CFG_SRC_DIR)mk/tests.mk\n   include $(CFG_SRC_DIR)mk/grammar.mk\n endif\n \n-# Performance and benchmarking\n-ifneq ($(findstring perf,$(MAKECMDGOALS)),)\n-  CFG_INFO := $(info cfg: including perf rules)\n-  include $(CFG_SRC_DIR)mk/perf.mk\n-endif\n-\n # Copy all the distributables to another directory for binary install\n ifneq ($(strip $(findstring prepare,$(MAKECMDGOALS)) \\\n                $(findstring dist,$(MAKECMDGOALS)) \\"}, {"sha": "9d75771dc80a862833c91a6ab8a5c23c1a76c0dc", "filename": "mk/main.mk", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/292937607d2e78d543a8e9b1bd0db5419dd3db09/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/292937607d2e78d543a8e9b1bd0db5419dd3db09/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=292937607d2e78d543a8e9b1bd0db5419dd3db09", "patch": "@@ -522,14 +522,6 @@ STAGE$(1)_T_$(2)_H_$(3) := \\\n \t\t$$(CFG_RUSTC_FLAGS) $$(EXTRAFLAGS_STAGE$(1)) --target=$(2)) \\\n                 $$(RUSTC_FLAGS_$(2))\n \n-PERF_STAGE$(1)_T_$(2)_H_$(3) := \\\n-\t$$(Q)$$(call CFG_RUN_TARG_$(3),$(1), \\\n-\t\t$$(CFG_PERF_TOOL) \\\n-\t\t$$(HBIN$(1)_H_$(3))/rustc$$(X_$(3)) \\\n-\t\t--cfg $$(CFGFLAG$(1)_T_$(2)_H_$(3)) \\\n-\t\t$$(CFG_RUSTC_FLAGS) $$(EXTRAFLAGS_STAGE$(1)) --target=$(2)) \\\n-                $$(RUSTC_FLAGS_$(2))\n-\n endef\n \n $(foreach build,$(CFG_HOST), \\"}, {"sha": "16cbaab495d8256a8dfc4feea72921c44ccd19af", "filename": "mk/perf.mk", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/cded89a3d167a1b736669223ee1ddc1c0744d8d9/mk%2Fperf.mk", "raw_url": "https://github.com/rust-lang/rust/raw/cded89a3d167a1b736669223ee1ddc1c0744d8d9/mk%2Fperf.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fperf.mk?ref=cded89a3d167a1b736669223ee1ddc1c0744d8d9", "patch": "@@ -1,25 +0,0 @@\n-# Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-\n-ifdef CFG_PERF_TOOL\n-rustc-perf$(X): $(CFG_BUILD)/stage2/bin/rustc$(X_$(CFG_BUILD))\n-\t@$(call E, perf compile: $@)\n-\t$(PERF_STAGE2_T_$(CFG_BUILD)_H_$(CFG_BUILD)) \\\n-\t\t -o $@ $(COMPILER_CRATE) >rustc-perf.err 2>&1\n-\t$(Q)rm -f $(LIBRUSTC_GLOB)\n-else\n-rustc-perf$(X): $(CFG_BUILD)/stage2/bin/rustc$(X_$(CFG_BUILD))\n-\t$(Q)touch $@\n-endif\n-\n-perf: check-stage2-perf rustc-perf$(X_$(CFG_BUILD))\n-\t$(Q)find $(CFG_BUILD)/test/perf -name \\*.err | xargs cat\n-\t$(Q)cat rustc-perf.err"}, {"sha": "9c74e657a846442979684e70b479db988915326e", "filename": "mk/platform.mk", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/292937607d2e78d543a8e9b1bd0db5419dd3db09/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/292937607d2e78d543a8e9b1bd0db5419dd3db09/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=292937607d2e78d543a8e9b1bd0db5419dd3db09", "patch": "@@ -77,23 +77,6 @@ define DEF_GOOD_VALGRIND\n endef\n $(foreach t,$(CFG_TARGET),$(eval $(call DEF_GOOD_VALGRIND,$(t))))\n \n-ifneq ($(findstring linux,$(CFG_OSTYPE)),)\n-  ifdef CFG_PERF\n-    ifneq ($(CFG_PERF_WITH_LOGFD),)\n-        CFG_PERF_TOOL := $(CFG_PERF) stat -r 3 --log-fd 2\n-    else\n-        CFG_PERF_TOOL := $(CFG_PERF) stat -r 3\n-    endif\n-  else\n-    ifdef CFG_VALGRIND\n-      CFG_PERF_TOOL := \\\n-        $(CFG_VALGRIND) --tool=cachegrind --cache-sim=yes --branch-sim=yes\n-    else\n-      CFG_PERF_TOOL := /usr/bin/time --verbose\n-    endif\n-  endif\n-endif\n-\n AR := ar\n \n define SET_FROM_CFG"}, {"sha": "b3f7278ad62ccb6c45d7c31996f356d044452939", "filename": "mk/tests.mk", "status": "modified", "additions": 2, "deletions": 25, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/292937607d2e78d543a8e9b1bd0db5419dd3db09/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/292937607d2e78d543a8e9b1bd0db5419dd3db09/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=292937607d2e78d543a8e9b1bd0db5419dd3db09", "patch": "@@ -50,11 +50,6 @@ ifdef CFG_VALGRIND\n   CTEST_RUNTOOL = --runtool \"$(CFG_VALGRIND)\"\n endif\n \n-# Arguments to the perf tests\n-ifdef CFG_PERF_TOOL\n-  CTEST_PERF_RUNTOOL = --runtool \"$(CFG_PERF_TOOL)\"\n-endif\n-\n CTEST_TESTARGS := $(TESTARGS)\n \n # --bench is only relevant for crate tests, not for the compile tests\n@@ -70,12 +65,6 @@ endif\n # This prevents tests from failing with some locales (fixes #17423).\n export LC_ALL=C\n \n-# If we're running perf then set this environment variable\n-# to put the benchmarks into 'hard mode'\n-ifeq ($(MAKECMDGOALS),perf)\n-  export RUST_BENCH=1\n-endif\n-\n TEST_LOG_FILE=tmp/check-stage$(1)-T-$(2)-H-$(3)-$(4).log\n TEST_OK_FILE=tmp/check-stage$(1)-T-$(2)-H-$(3)-$(4).ok\n \n@@ -486,10 +475,6 @@ CODEGEN_RS := $(wildcard $(S)src/test/codegen/*.rs)\n CODEGEN_CC := $(wildcard $(S)src/test/codegen/*.cc)\n RUSTDOCCK_RS := $(wildcard $(S)src/test/rustdoc/*.rs)\n \n-# perf tests are the same as bench tests only they run under\n-# a performance monitor.\n-PERF_RS := $(wildcard $(S)src/test/bench/*.rs)\n-\n RPASS_TESTS := $(RPASS_RS)\n RPASS_VALGRIND_TESTS := $(RPASS_VALGRIND_RS)\n RPASS_FULL_TESTS := $(RPASS_FULL_RS)\n@@ -499,7 +484,6 @@ RFAIL_TESTS := $(RFAIL_RS)\n CFAIL_TESTS := $(CFAIL_RS)\n PFAIL_TESTS := $(PFAIL_RS)\n BENCH_TESTS := $(BENCH_RS)\n-PERF_TESTS := $(PERF_RS)\n PRETTY_TESTS := $(PRETTY_RS)\n DEBUGINFO_GDB_TESTS := $(DEBUGINFO_GDB_RS)\n DEBUGINFO_LLDB_TESTS := $(DEBUGINFO_LLDB_RS)\n@@ -551,11 +535,6 @@ CTEST_BUILD_BASE_bench = bench\n CTEST_MODE_bench = run-pass\n CTEST_RUNTOOL_bench = $(CTEST_RUNTOOL)\n \n-CTEST_SRC_BASE_perf = bench\n-CTEST_BUILD_BASE_perf = perf\n-CTEST_MODE_perf = run-pass\n-CTEST_RUNTOOL_perf = $(CTEST_PERF_RUNTOOL)\n-\n CTEST_SRC_BASE_debuginfo-gdb = debuginfo\n CTEST_BUILD_BASE_debuginfo-gdb = debuginfo-gdb\n CTEST_MODE_debuginfo-gdb = debuginfo-gdb\n@@ -625,7 +604,7 @@ TEST_SREQ$(1)_T_$(2)_H_$(3) = \\\n \t$$(HBIN$(1)_H_$(3))/compiletest$$(X_$(3)) \\\n \t$$(SREQ$(1)_T_$(2)_H_$(3))\n \n-# Rules for the cfail/rfail/rpass/bench/perf test runner\n+# Rules for the cfail/rfail/rpass/bench test runner\n \n # The tests select when to use debug configuration on their own;\n # remove directive, if present, from CFG_RUSTC_FLAGS (issue #7898).\n@@ -689,7 +668,6 @@ CTEST_DEPS_rfail_$(1)-T-$(2)-H-$(3) = $$(RFAIL_TESTS)\n CTEST_DEPS_cfail_$(1)-T-$(2)-H-$(3) = $$(CFAIL_TESTS)\n CTEST_DEPS_pfail_$(1)-T-$(2)-H-$(3) = $$(PFAIL_TESTS)\n CTEST_DEPS_bench_$(1)-T-$(2)-H-$(3) = $$(BENCH_TESTS)\n-CTEST_DEPS_perf_$(1)-T-$(2)-H-$(3) = $$(PERF_TESTS)\n CTEST_DEPS_debuginfo-gdb_$(1)-T-$(2)-H-$(3) = $$(DEBUGINFO_GDB_TESTS)\n CTEST_DEPS_debuginfo-lldb_$(1)-T-$(2)-H-$(3) = $$(DEBUGINFO_LLDB_TESTS) \\\n                                                $(S)src/etc/lldb_batchmode.py \\\n@@ -761,7 +739,7 @@ endif\n endef\n \n CTEST_NAMES = rpass rpass-valgrind rpass-full rfail-full cfail-full rfail cfail pfail \\\n-\tbench perf debuginfo-gdb debuginfo-lldb codegen rustdocck\n+\tbench debuginfo-gdb debuginfo-lldb codegen rustdocck\n \n $(foreach host,$(CFG_HOST), \\\n  $(eval $(foreach target,$(CFG_TARGET), \\\n@@ -934,7 +912,6 @@ TEST_GROUPS = \\\n \tcfail \\\n \tpfail \\\n \tbench \\\n-\tperf \\\n \trmake \\\n \trustdocck \\\n \tdebuginfo-gdb \\"}, {"sha": "f523b4c93858b36f255e8d663e3d7189c99de7e8", "filename": "src/etc/cmathconsts.c", "status": "removed", "additions": 0, "deletions": 103, "changes": 103, "blob_url": "https://github.com/rust-lang/rust/blob/cded89a3d167a1b736669223ee1ddc1c0744d8d9/src%2Fetc%2Fcmathconsts.c", "raw_url": "https://github.com/rust-lang/rust/raw/cded89a3d167a1b736669223ee1ddc1c0744d8d9/src%2Fetc%2Fcmathconsts.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcmathconsts.c?ref=cded89a3d167a1b736669223ee1ddc1c0744d8d9", "patch": "@@ -1,103 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-//\n-//\n-// This is a helper C program for generating required math constants\n-//\n-// Should only be required when porting to a different target architecture\n-// (or c compiler/libmath)\n-//\n-// Call with <rust machine type of c_float> <rust machine type of c_double>\n-// and ensure that libcore/cmath.rs complies to the output\n-//\n-// Requires a printf that supports \"%a\" specifiers\n-//\n-\n-#include <float.h>\n-#include <math.h>\n-#include <stdio.h>\n-\n-// must match std::ctypes\n-\n-#define C_FLT(x) (float)x\n-#define C_DBL(x) (double)x\n-\n-int main(int argc, char** argv) {\n-  if (argc != 3) {\n-    fprintf(stderr, \"%s <ctypes::c_float> <ctypes::c_double>\\n\", argv[0]);\n-    return 1;\n-  }\n-  char* c_flt = argv[1];\n-  char* c_dbl = argv[2];\n-\n-  printf(\"mod c_float_math_consts {\\n\");\n-  printf(\"    const pi: c_float = %a_%s;\\n\", C_FLT(M_PI), c_flt);\n-  printf(\"    const div_1_pi: c_float = %a_%s;\\n\", C_FLT(M_1_PI), c_flt);\n-  printf(\"    const div_2_pi: c_float = %a_%s;\\n\", C_FLT(M_2_PI), c_flt);\n-  printf(\"    const div_pi_2: c_float = %a_%s;\\n\", C_FLT(M_PI_2), c_flt);\n-  printf(\"    const div_pi_4: c_float = %a_%s;\\n\", C_FLT(M_PI_4), c_flt);\n-  printf(\"    const div_2_sqrtpi: c_float = %a_%s;\\n\",\n-         C_FLT(M_2_SQRTPI), c_flt);\n-  printf(\"    const e: c_float = %a_%s;\\n\", C_FLT(M_E), c_flt);\n-  printf(\"    const log2_e: c_float = %a_%s;\\n\", C_FLT(M_LOG2E), c_flt);\n-  printf(\"    const log10_e: c_float = %a_%s;\\n\", C_FLT(M_LOG10E), c_flt);\n-  printf(\"    const ln_2: c_float = %a_%s;\\n\",  C_FLT(M_LN2), c_flt);\n-  printf(\"    const ln_10: c_float = %a_%s;\\n\",  C_FLT(M_LN10), c_flt);\n-  printf(\"    const sqrt2: c_float = %a_%s;\\n\",  C_FLT(M_SQRT2), c_flt);\n-  printf(\"    const div_1_sqrt2: c_float = %a_%s;\\n\",\n-         C_FLT(M_SQRT1_2), c_flt);\n-  printf(\"}\\n\\n\");\n-\n-  printf(\"mod c_double_math_consts {\\n\");\n-  printf(\"    const pi: c_double = %a_%s;\\n\", C_DBL(M_PI), c_dbl);\n-  printf(\"    const div_1_pi: c_double = %a_%s;\\n\", C_DBL(M_1_PI), c_dbl);\n-  printf(\"    const div_2_pi: c_double = %a_%s;\\n\", C_DBL(M_2_PI), c_dbl);\n-  printf(\"    const div_pi_2: c_double = %a_%s;\\n\", C_DBL(M_PI_2), c_dbl);\n-  printf(\"    const div_pi_4: c_double = %a_%s;\\n\", C_DBL(M_PI_4), c_dbl);\n-  printf(\"    const div_2_sqrtpi: c_double = %a_%s;\\n\",\n-         C_DBL(M_2_SQRTPI), c_dbl);\n-  printf(\"    const e: c_double = %a_%s;\\n\", C_DBL(M_E), c_dbl);\n-  printf(\"    const log2_e: c_double = %a_%s;\\n\", C_DBL(M_LOG2E), c_dbl);\n-  printf(\"    const log10_e: c_double = %a_%s;\\n\", C_DBL(M_LOG10E), c_dbl);\n-  printf(\"    const ln_2: c_double = %a_%s;\\n\", C_DBL(M_LN2), c_dbl);\n-  printf(\"    const ln_10: c_double = %a_%s;\\n\", C_DBL(M_LN10), c_dbl);\n-  printf(\"    const sqrt2: c_double = %a_%s;\\n\", C_DBL(M_SQRT2), c_dbl);\n-  printf(\"    const div_1_sqrt2: c_double = %a_%s;\\n\",\n-         C_DBL(M_SQRT1_2), c_dbl);\n-  printf(\"}\\n\\n\");\n-\n-  printf(\"mod c_float_targ_consts {\\n\");\n-  printf(\"    const radix: uint = %uu;\\n\", FLT_RADIX);\n-  printf(\"    const mantissa_digits: uint = %uu;\\n\", FLT_MANT_DIG);\n-  printf(\"    const digits: uint = %uu;\\n\", FLT_DIG);\n-  printf(\"    const min_exp: int = %i;\\n\", FLT_MIN_EXP);\n-  printf(\"    const max_exp: int = %i;\\n\", FLT_MAX_EXP);\n-  printf(\"    const min_10_exp: int = %i;\\n\", FLT_MIN_10_EXP);\n-  printf(\"    const max_10_exp: int = %i;\\n\", FLT_MAX_10_EXP);\n-  printf(\"    const min_value: c_float = %a_%s;\\n\", C_FLT(FLT_MIN), c_flt);\n-  printf(\"    const max_value: c_float = %a_%s;\\n\", C_FLT(FLT_MAX), c_flt);\n-  printf(\"    const epsilon: c_float = %a_%s;\\n\", C_FLT(FLT_EPSILON), c_flt);\n-  printf(\"}\\n\\n\");\n-\n-  printf(\"mod c_double_targ_consts {\\n\");\n-  printf(\"    const radix: uint = %uu;\\n\", FLT_RADIX);\n-  printf(\"    const mantissa_digits: uint = %uu;\\n\", DBL_MANT_DIG);\n-  printf(\"    const digits: uint = %uu;\\n\", DBL_DIG);\n-  printf(\"    const min_exp: int = %i;\\n\", DBL_MIN_EXP);\n-  printf(\"    const max_exp: int = %i;\\n\", DBL_MAX_EXP);\n-  printf(\"    const min_10_exp: int = %i;\\n\", DBL_MIN_10_EXP);\n-  printf(\"    const max_10_exp: int = %i;\\n\", DBL_MAX_10_EXP);\n-  printf(\"    const min_value: c_double = %a_%s;\\n\", C_DBL(DBL_MIN), c_dbl);\n-  printf(\"    const max_value: c_double = %a_%s;\\n\", C_DBL(DBL_MAX), c_dbl);\n-  printf(\"    const epsilon: c_double = %a_%s;\\n\", C_DBL(DBL_EPSILON), c_dbl);\n-  printf(\"}\\n\");\n-\n-  return 0;\n-}"}, {"sha": "249b5d22b6b23ad763df4d8a586abb33ae82cc79", "filename": "src/etc/libc.c", "status": "removed", "additions": 0, "deletions": 266, "changes": 266, "blob_url": "https://github.com/rust-lang/rust/blob/cded89a3d167a1b736669223ee1ddc1c0744d8d9/src%2Fetc%2Flibc.c", "raw_url": "https://github.com/rust-lang/rust/raw/cded89a3d167a1b736669223ee1ddc1c0744d8d9/src%2Fetc%2Flibc.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flibc.c?ref=cded89a3d167a1b736669223ee1ddc1c0744d8d9", "patch": "@@ -1,266 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-/*\n- * This calculates the platform-variable portion of the libc module.\n- * Move code in here only as you discover it is platform-variable.\n- *\n- */\n-\n- /* c95 */\n-#include <stddef.h>\n-#include <time.h>\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <limits.h>\n-#include <wchar.h>\n-\n-/* c99 */\n-#include <inttypes.h>\n-\n-/* posix */\n-#include <sys/types.h>\n-#include <sys/stat.h>\n-#include <fcntl.h>\n-#include <unistd.h>\n-\n-#define S(T) ((((T)-1)<0) ? 'i' : 'u')\n-#define B(T) (((int)sizeof(T)) * CHAR_BIT)\n-#define put_type(N,T) \\\n-        printf(\"        type %s = %c%d;\\n\", N, S(T), B(T))\n-\n-#define put_ftype(N,T) \\\n-        printf(\"        type %s = f%d;\\n\", N, B(T))\n-\n-#define CT(T) ((((T)-1)<0) ? \"int\" : \"uint\")\n-#define CS(T) ((((T)-1)<0) ? \"\" : \"_u\")\n-#define put_const(N,T)                            \\\n-        printf(\"        const %s : %s = %d%s;\\n\", \\\n-               #N, CT(T), N, CS(T))\n-\n-void c95_types() {\n-  printf(\"    mod c95 {\\n\");\n-\n-  put_type(\"c_char\", char);\n-  put_type(\"c_schar\", signed char);\n-  put_type(\"c_uchar\", unsigned char);\n-\n-  put_type(\"c_short\", short);\n-  put_type(\"c_ushort\", unsigned short);\n-\n-  put_type(\"c_int\", int);\n-  put_type(\"c_uint\", unsigned int);\n-\n-  put_type(\"c_long\", long);\n-  put_type(\"c_ulong\", unsigned long);\n-\n-  put_ftype(\"c_float\", float);\n-  put_ftype(\"c_double\", double);\n-\n-  put_type(\"size_t\", size_t);\n-  put_type(\"ptrdiff_t\", ptrdiff_t);\n-\n-  put_type(\"clock_t\", clock_t);\n-  put_type(\"time_t\", time_t);\n-\n-  put_type(\"wchar_t\", wchar_t);\n-\n-  printf(\"    }\\n\");\n-}\n-\n-void c99_types() {\n-  printf(\"    mod c99 {\\n\");\n-\n-  put_type(\"c_longlong\", long long);\n-  put_type(\"c_ulonglong\", unsigned long long);\n-\n-  put_type(\"intptr_t\", intptr_t);\n-  put_type(\"uintptr_t\", uintptr_t);\n-\n-  printf(\"    }\\n\");\n-}\n-\n-void posix88_types() {\n-  printf(\"    mod posix88 {\\n\");\n-\n-  put_type(\"off_t\", off_t);\n-  put_type(\"dev_t\", dev_t);\n-  put_type(\"ino_t\", ino_t);\n-  put_type(\"pid_t\", pid_t);\n-#ifndef __WIN32__\n-  put_type(\"uid_t\", uid_t);\n-  put_type(\"gid_t\", gid_t);\n-#endif\n-  put_type(\"useconds_t\", useconds_t);\n-  put_type(\"mode_t\", mode_t);\n-\n-  put_type(\"ssize_t\", ssize_t);\n-\n-  printf(\"    }\\n\");\n-}\n-\n-void extra_types() {\n-  printf(\"    mod extra {\\n\");\n-  printf(\"    }\\n\");\n-}\n-\n-\n-void c95_consts() {\n-  printf(\"    mod c95 {\\n\");\n-\n-  put_const(EXIT_FAILURE, int);\n-  put_const(EXIT_SUCCESS, int);\n-  put_const(RAND_MAX, int);\n-\n-  put_const(EOF, int);\n-  put_const(SEEK_SET, int);\n-  put_const(SEEK_CUR, int);\n-  put_const(SEEK_END, int);\n-\n-  put_const(_IOFBF, int);\n-  put_const(_IONBF, int);\n-  put_const(_IOLBF, int);\n-\n-  put_const(BUFSIZ, size_t);\n-  put_const(FOPEN_MAX, size_t);\n-  put_const(FILENAME_MAX, size_t);\n-  put_const(L_tmpnam, size_t);\n-  put_const(TMP_MAX, size_t);\n-\n-  printf(\"    }\\n\");\n-}\n-\n-\n-void posix88_consts() {\n-  printf(\"    mod posix88 {\\n\");\n-  put_const(O_RDONLY, int);\n-  put_const(O_WRONLY, int);\n-  put_const(O_RDWR, int);\n-  put_const(O_APPEND, int);\n-  put_const(O_CREAT, int);\n-  put_const(O_EXCL, int);\n-  put_const(O_TRUNC, int);\n-\n-  put_const(S_IFIFO, int);\n-  put_const(S_IFCHR, int);\n-  put_const(S_IFBLK, int);\n-  put_const(S_IFDIR, int);\n-  put_const(S_IFREG, int);\n-  put_const(S_IFLNK, int);\n-  put_const(S_IFMT, int);\n-\n-  put_const(S_IEXEC, int);\n-  put_const(S_IWRITE, int);\n-  put_const(S_IREAD, int);\n-\n-  put_const(S_IRWXU, int);\n-  put_const(S_IXUSR, int);\n-  put_const(S_IWUSR, int);\n-  put_const(S_IRUSR, int);\n-\n-  put_const(S_IRWXG, int);\n-  put_const(S_IXGRP, int);\n-  put_const(S_IWGRP, int);\n-  put_const(S_IRGRP, int);\n-\n-  put_const(S_IRWXO, int);\n-  put_const(S_IXOTH, int);\n-  put_const(S_IWOTH, int);\n-  put_const(S_IROTH, int);\n-\n-#ifdef F_OK\n-  put_const(F_OK, int);\n-#endif\n-#ifdef R_OK\n-  put_const(R_OK, int);\n-#endif\n-#ifdef W_OK\n-  put_const(W_OK, int);\n-#endif\n-#ifdef X_OK\n-  put_const(X_OK, int);\n-#endif\n-\n-#ifdef STDIN_FILENO\n-  put_const(STDIN_FILENO, int);\n-#endif\n-#ifdef STDOUT_FILENO\n-  put_const(STDOUT_FILENO, int);\n-#endif\n-#ifdef STDERR_FILENO\n-  put_const(STDERR_FILENO, int);\n-#endif\n-\n-#ifdef F_LOCK\n-  put_const(F_LOCK, int);\n-#endif\n-\n-#ifdef F_TEST\n-  put_const(F_TEST, int);\n-#endif\n-\n-#ifdef F_TLOCK\n-  put_const(F_TLOCK, int);\n-#endif\n-\n-#ifdef F_ULOCK\n-  put_const(F_ULOCK, int);\n-#endif\n-\n-  printf(\"    }\\n\");\n-}\n-\n-void extra_consts() {\n-  printf(\"    mod extra {\\n\");\n-#ifdef O_RSYNC\n-  put_const(O_RSYNC, int);\n-#endif\n-\n-#ifdef O_DSYNC\n-  put_const(O_DSYNC, int);\n-#endif\n-\n-#ifdef O_SYNC\n-  put_const(O_SYNC, int);\n-#endif\n-\n-#ifdef O_TEXT\n-  put_const(O_TEXT, int);\n-#endif\n-\n-#ifdef O_BINARY\n-  put_const(O_BINARY, int);\n-#endif\n-\n-#ifdef O_IRUSR\n-  put_const(O_IRUSR, int);\n-#endif\n-\n-#ifdef O_IWUSR\n-  put_const(O_IWUSR, int);\n-#endif\n-\n-  printf(\"    }\\n\");\n-}\n-\n-int main() {\n-  printf(\"mod types {\");\n-  c95_types();\n-  c99_types();\n-  posix88_types();\n-  extra_types();\n-  printf(\"}\\n\");\n-\n-  printf(\"mod consts {\\n\");\n-  c95_consts();\n-  posix88_consts();\n-  extra_consts();\n-  printf(\"}\\n\");\n-}"}, {"sha": "e36e6abde9178dd6b5c1515ff6d4a7a33854f9d1", "filename": "src/etc/mingw-fix-include/README.txt", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cded89a3d167a1b736669223ee1ddc1c0744d8d9/src%2Fetc%2Fmingw-fix-include%2FREADME.txt", "raw_url": "https://github.com/rust-lang/rust/raw/cded89a3d167a1b736669223ee1ddc1c0744d8d9/src%2Fetc%2Fmingw-fix-include%2FREADME.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmingw-fix-include%2FREADME.txt?ref=cded89a3d167a1b736669223ee1ddc1c0744d8d9", "patch": "@@ -1,6 +0,0 @@\n-The purpose of these headers is to fix issues with mingw v4.0, as described in #9246.\n-\n-This works by adding this directory to GCC include search path before mingw system headers directories,\n-so we can intercept their inclusions and add missing definitions without having to modify files in mingw/include.\n-\n-Once mingw fixes all 3 issues mentioned in #9246, this directory and all references to it from rust/mk/* may be removed."}, {"sha": "57533ef52245588760a3547581f901ecf08ca7e9", "filename": "src/etc/mingw-fix-include/bits/c++config.h", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/cded89a3d167a1b736669223ee1ddc1c0744d8d9/src%2Fetc%2Fmingw-fix-include%2Fbits%2Fc%2B%2Bconfig.h", "raw_url": "https://github.com/rust-lang/rust/raw/cded89a3d167a1b736669223ee1ddc1c0744d8d9/src%2Fetc%2Fmingw-fix-include%2Fbits%2Fc%2B%2Bconfig.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmingw-fix-include%2Fbits%2Fc%2B%2Bconfig.h?ref=cded89a3d167a1b736669223ee1ddc1c0744d8d9", "patch": "@@ -1,18 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#ifndef _FIX_CXXCONFIG_H\n-#define _FIX_CXXCONFIG_H 1\n-\n-#define _GLIBCXX_HAVE_FENV_H 1\n-\n-#include_next <bits/c++config.h>\n-\n-#endif"}, {"sha": "b1674f5f5673af924f39ac5087ffc3de3dcbbf89", "filename": "src/etc/mingw-fix-include/winbase.h", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/cded89a3d167a1b736669223ee1ddc1c0744d8d9/src%2Fetc%2Fmingw-fix-include%2Fwinbase.h", "raw_url": "https://github.com/rust-lang/rust/raw/cded89a3d167a1b736669223ee1ddc1c0744d8d9/src%2Fetc%2Fmingw-fix-include%2Fwinbase.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmingw-fix-include%2Fwinbase.h?ref=cded89a3d167a1b736669223ee1ddc1c0744d8d9", "patch": "@@ -1,18 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#ifndef _FIX_WINBASE_H\n-#define _FIX_WINBASE_H 1\n-\n-#define NTDDK_VERSION NTDDI_VERSION\n-\n-#include_next <winbase.h>\n-\n-#endif"}, {"sha": "5096c2f67026c838f6bb24dda7de9e99955bef49", "filename": "src/etc/mingw-fix-include/winsock2.h", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/cded89a3d167a1b736669223ee1ddc1c0744d8d9/src%2Fetc%2Fmingw-fix-include%2Fwinsock2.h", "raw_url": "https://github.com/rust-lang/rust/raw/cded89a3d167a1b736669223ee1ddc1c0744d8d9/src%2Fetc%2Fmingw-fix-include%2Fwinsock2.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmingw-fix-include%2Fwinsock2.h?ref=cded89a3d167a1b736669223ee1ddc1c0744d8d9", "patch": "@@ -1,27 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#ifndef _FIX_WINSOCK2_H\n-#define _FIX_WINSOCK2_H 1\n-\n-#include_next <winsock2.h>\n-\n-// mingw 4.0.x has broken headers (#9246) but mingw-w64 does not.\n-#if defined(__MINGW_MAJOR_VERSION) && __MINGW_MAJOR_VERSION == 4\n-\n-typedef struct pollfd {\n-  SOCKET fd;\n-  short  events;\n-  short  revents;\n-} WSAPOLLFD, *PWSAPOLLFD, *LPWSAPOLLFD;\n-\n-#endif\n-\n-#endif // _FIX_WINSOCK2_H"}, {"sha": "d2f8ee469a4a1ec0332d24c94cadc95ca70972c9", "filename": "src/etc/mklldef.py", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/cded89a3d167a1b736669223ee1ddc1c0744d8d9/src%2Fetc%2Fmklldef.py", "raw_url": "https://github.com/rust-lang/rust/raw/cded89a3d167a1b736669223ee1ddc1c0744d8d9/src%2Fetc%2Fmklldef.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmklldef.py?ref=cded89a3d167a1b736669223ee1ddc1c0744d8d9", "patch": "@@ -1,25 +0,0 @@\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-import sys\n-\n-input_file = sys.argv[1]\n-output_file = sys.argv[2]\n-name = sys.argv[3]\n-\n-with open(input_file, 'r') as f:\n-    with open(output_file, 'w') as g:\n-        print >> g, 'LIBRARY ' + name\n-        print >> g, 'EXPORTS'\n-        for x in f:\n-            x = str(x)\n-            if not x.startswith('    pub fn LLVM'): continue\n-            name = x[11:x.find('(')]\n-            print >> g, '  ' + name"}]}