{"sha": "dec2c8bd16b8a525a24260f03da1d131f659ce94", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlYzJjOGJkMTZiOGE1MjVhMjQyNjBmMDNkYTFkMTMxZjY1OWNlOTQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-27T21:01:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-27T21:01:17Z"}, "message": "Rollup merge of #62164 - jsgf:buffer-save-analysis, r=Xanewok\n\nsave-analysis: use buffered writes\n\nOtherwise it ends up writing the file byte at a time, which can be very slow for large outputs.\n\ncc @ljw1004", "tree": {"sha": "ad57c982eaca20b43b13314f31bec7d5555df122", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad57c982eaca20b43b13314f31bec7d5555df122"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dec2c8bd16b8a525a24260f03da1d131f659ce94", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdFS6dCRBK7hj4Ov3rIwAAdHIIAEa8JN2ELWuBURiIbqbCXA62\naoFZAV+iXrtkCeVG8qesCdRIMqi2+pjMtL5l+xJQ70R6OKY2DKOLiKePGz+etlHH\nAVdCbmM38rx0SvRFOQGDK4KyDztwPcP9eMuIGMcwP5WQcf3jR04HWCKbrEVAGEEu\ny1BjMxo+z+EjEht8rVswNS5U3HPeCGQzaTWygNviOW/sQmUF64CJyjEQF+X+PDzM\nr4s3/zpuQZWZz6ogovMr4/IJMy+UIVm8c2YXmFktWBGBTC6Cd4qlojxQpH4tuxCE\nqO6ZwQFpRcR5DqLEA0sEZSmQBp1z78yJX8nLVzIwYP2KOOnVOd7+MVbvI6BzxFM=\n=giL+\n-----END PGP SIGNATURE-----\n", "payload": "tree ad57c982eaca20b43b13314f31bec7d5555df122\nparent fdf75af730c7e661b00df4c36f73f6fa564396ea\nparent 768d5001575091dd298fbfce3b7b03a3c3faf117\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1561669277 +0200\ncommitter GitHub <noreply@github.com> 1561669277 +0200\n\nRollup merge of #62164 - jsgf:buffer-save-analysis, r=Xanewok\n\nsave-analysis: use buffered writes\n\nOtherwise it ends up writing the file byte at a time, which can be very slow for large outputs.\n\ncc @ljw1004\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dec2c8bd16b8a525a24260f03da1d131f659ce94", "html_url": "https://github.com/rust-lang/rust/commit/dec2c8bd16b8a525a24260f03da1d131f659ce94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dec2c8bd16b8a525a24260f03da1d131f659ce94/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdf75af730c7e661b00df4c36f73f6fa564396ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdf75af730c7e661b00df4c36f73f6fa564396ea", "html_url": "https://github.com/rust-lang/rust/commit/fdf75af730c7e661b00df4c36f73f6fa564396ea"}, {"sha": "768d5001575091dd298fbfce3b7b03a3c3faf117", "url": "https://api.github.com/repos/rust-lang/rust/commits/768d5001575091dd298fbfce3b7b03a3c3faf117", "html_url": "https://github.com/rust-lang/rust/commit/768d5001575091dd298fbfce3b7b03a3c3faf117"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "ab82f75f74f4b26e3083c23de3c5c2de62e43b7f", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dec2c8bd16b8a525a24260f03da1d131f659ce94/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dec2c8bd16b8a525a24260f03da1d131f659ce94/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=dec2c8bd16b8a525a24260f03da1d131f659ce94", "patch": "@@ -29,6 +29,7 @@ use std::cell::Cell;\n use std::default::Default;\n use std::env;\n use std::fs::File;\n+use std::io::BufWriter;\n use std::path::{Path, PathBuf};\n \n use syntax::ast::{self, Attribute, DUMMY_NODE_ID, NodeId, PatKind};\n@@ -1025,7 +1026,7 @@ impl<'a> DumpHandler<'a> {\n         }\n     }\n \n-    fn output_file(&self, ctx: &SaveContext<'_, '_>) -> (File, PathBuf) {\n+    fn output_file(&self, ctx: &SaveContext<'_, '_>) -> (BufWriter<File>, PathBuf) {\n         let sess = &ctx.tcx.sess;\n         let file_name = match ctx.config.output_file {\n             Some(ref s) => PathBuf::from(s),\n@@ -1059,9 +1060,9 @@ impl<'a> DumpHandler<'a> {\n \n         info!(\"Writing output to {}\", file_name.display());\n \n-        let output_file = File::create(&file_name).unwrap_or_else(\n+        let output_file = BufWriter::new(File::create(&file_name).unwrap_or_else(\n             |e| sess.fatal(&format!(\"Could not open {}: {}\", file_name.display(), e)),\n-        );\n+        ));\n \n         (output_file, file_name)\n     }"}]}