{"sha": "c3fd65ba23ab6bc7e99897bd65b069144424f48a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzZmQ2NWJhMjNhYjZiYzdlOTk4OTdiZDY1YjA2OTE0NDQyNGY0OGE=", "commit": {"author": {"name": "Niv Kaminer", "email": "nivkner@zoho.com", "date": "2018-08-21T19:53:50Z"}, "committer": {"name": "Niv Kaminer", "email": "nivkner@zoho.com", "date": "2018-08-22T23:13:02Z"}, "message": "link Unpin to pin module documentation", "tree": {"sha": "afdc10b4ec18cc4cb01a4168d2cb11c653e0639b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afdc10b4ec18cc4cb01a4168d2cb11c653e0639b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3fd65ba23ab6bc7e99897bd65b069144424f48a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3fd65ba23ab6bc7e99897bd65b069144424f48a", "html_url": "https://github.com/rust-lang/rust/commit/c3fd65ba23ab6bc7e99897bd65b069144424f48a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3fd65ba23ab6bc7e99897bd65b069144424f48a/comments", "author": {"login": "nivkner", "id": 22821514, "node_id": "MDQ6VXNlcjIyODIxNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/22821514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nivkner", "html_url": "https://github.com/nivkner", "followers_url": "https://api.github.com/users/nivkner/followers", "following_url": "https://api.github.com/users/nivkner/following{/other_user}", "gists_url": "https://api.github.com/users/nivkner/gists{/gist_id}", "starred_url": "https://api.github.com/users/nivkner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nivkner/subscriptions", "organizations_url": "https://api.github.com/users/nivkner/orgs", "repos_url": "https://api.github.com/users/nivkner/repos", "events_url": "https://api.github.com/users/nivkner/events{/privacy}", "received_events_url": "https://api.github.com/users/nivkner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nivkner", "id": 22821514, "node_id": "MDQ6VXNlcjIyODIxNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/22821514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nivkner", "html_url": "https://github.com/nivkner", "followers_url": "https://api.github.com/users/nivkner/followers", "following_url": "https://api.github.com/users/nivkner/following{/other_user}", "gists_url": "https://api.github.com/users/nivkner/gists{/gist_id}", "starred_url": "https://api.github.com/users/nivkner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nivkner/subscriptions", "organizations_url": "https://api.github.com/users/nivkner/orgs", "repos_url": "https://api.github.com/users/nivkner/repos", "events_url": "https://api.github.com/users/nivkner/events{/privacy}", "received_events_url": "https://api.github.com/users/nivkner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfed149020cc48260056c8621d93a7931fba6bde", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfed149020cc48260056c8621d93a7931fba6bde", "html_url": "https://github.com/rust-lang/rust/commit/bfed149020cc48260056c8621d93a7931fba6bde"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "419170ca5ab6e7d38e2c06c4bf6267bac32153f2", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3fd65ba23ab6bc7e99897bd65b069144424f48a/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3fd65ba23ab6bc7e99897bd65b069144424f48a/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=c3fd65ba23ab6bc7e99897bd65b069144424f48a", "patch": "@@ -611,6 +611,7 @@ unsafe impl<'a, T: ?Sized> Freeze for &'a mut T {}\n /// Instead it can be used to prevent moves through the type system,\n /// by controlling the behavior of special pointer types like [`PinMut`],\n /// which \"pin\" the type in place by not allowing it to be moved out of them.\n+/// See the [`pin module`] documentation for more information on pinning.\n ///\n /// Implementing this trait lifts the restrictions of pinning off a type,\n /// which then allows it to move out with functions such as [`replace`].\n@@ -632,6 +633,7 @@ unsafe impl<'a, T: ?Sized> Freeze for &'a mut T {}\n ///\n /// [`replace`]: ../../core/mem/fn.replace.html\n /// [`PinMut`]: ../pin/struct.PinMut.html\n+/// [`pin module`]: ../../alloc/pin/index.html\n #[unstable(feature = \"pin\", issue = \"49150\")]\n pub auto trait Unpin {}\n "}]}