{"sha": "b6d4d403217d8ef7ff98f21924819880efed56f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2ZDRkNDAzMjE3ZDhlZjdmZjk4ZjIxOTI0ODE5ODgwZWZlZDU2ZjA=", "commit": {"author": {"name": "fukatani", "email": "nannyakannya@gmail.com", "date": "2018-08-06T14:00:19Z"}, "committer": {"name": "fukatani", "email": "nannyakannya@gmail.com", "date": "2018-08-06T14:00:19Z"}, "message": "pretty print BTreeSet", "tree": {"sha": "76c2a18863b0300ef03bb0da905425ae4e36216c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76c2a18863b0300ef03bb0da905425ae4e36216c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6d4d403217d8ef7ff98f21924819880efed56f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6d4d403217d8ef7ff98f21924819880efed56f0", "html_url": "https://github.com/rust-lang/rust/commit/b6d4d403217d8ef7ff98f21924819880efed56f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6d4d403217d8ef7ff98f21924819880efed56f0/comments", "author": {"login": "fukatani", "id": 8858287, "node_id": "MDQ6VXNlcjg4NTgyODc=", "avatar_url": "https://avatars.githubusercontent.com/u/8858287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fukatani", "html_url": "https://github.com/fukatani", "followers_url": "https://api.github.com/users/fukatani/followers", "following_url": "https://api.github.com/users/fukatani/following{/other_user}", "gists_url": "https://api.github.com/users/fukatani/gists{/gist_id}", "starred_url": "https://api.github.com/users/fukatani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fukatani/subscriptions", "organizations_url": "https://api.github.com/users/fukatani/orgs", "repos_url": "https://api.github.com/users/fukatani/repos", "events_url": "https://api.github.com/users/fukatani/events{/privacy}", "received_events_url": "https://api.github.com/users/fukatani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fukatani", "id": 8858287, "node_id": "MDQ6VXNlcjg4NTgyODc=", "avatar_url": "https://avatars.githubusercontent.com/u/8858287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fukatani", "html_url": "https://github.com/fukatani", "followers_url": "https://api.github.com/users/fukatani/followers", "following_url": "https://api.github.com/users/fukatani/following{/other_user}", "gists_url": "https://api.github.com/users/fukatani/gists{/gist_id}", "starred_url": "https://api.github.com/users/fukatani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fukatani/subscriptions", "organizations_url": "https://api.github.com/users/fukatani/orgs", "repos_url": "https://api.github.com/users/fukatani/repos", "events_url": "https://api.github.com/users/fukatani/events{/privacy}", "received_events_url": "https://api.github.com/users/fukatani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b47c314c5652c8ecc3f086b0326f467b857b9d5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b47c314c5652c8ecc3f086b0326f467b857b9d5b", "html_url": "https://github.com/rust-lang/rust/commit/b47c314c5652c8ecc3f086b0326f467b857b9d5b"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "e64d863717da0019773a6eb0c861ebfd15d32aa1", "filename": "src/etc/debugger_pretty_printers_common.py", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b6d4d403217d8ef7ff98f21924819880efed56f0/src%2Fetc%2Fdebugger_pretty_printers_common.py", "raw_url": "https://github.com/rust-lang/rust/raw/b6d4d403217d8ef7ff98f21924819880efed56f0/src%2Fetc%2Fdebugger_pretty_printers_common.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fdebugger_pretty_printers_common.py?ref=b6d4d403217d8ef7ff98f21924819880efed56f0", "patch": "@@ -48,6 +48,7 @@\n TYPE_KIND_REGULAR_UNION     = 17\n TYPE_KIND_OS_STRING         = 18\n TYPE_KIND_STD_VECDEQUE      = 19\n+TYPE_KIND_STD_BTREESET      = 20\n \n ENCODED_ENUM_PREFIX = \"RUST$ENCODED$ENUM$\"\n ENUM_DISR_FIELD_NAME = \"RUST$ENUM$DISR\"\n@@ -71,6 +72,9 @@\n                             STD_VECDEQUE_FIELD_NAME_HEAD,\n                             STD_VECDEQUE_FIELD_NAME_BUF]\n \n+# std::collections::BTreeSet<> related constants\n+STD_BTREESET_FIELD_NAMES = [\"map\"]\n+\n # std::String related constants\n STD_STRING_FIELD_NAMES = [\"vec\"]\n \n@@ -175,6 +179,11 @@ def __classify_struct(self):\n             self.__conforms_to_field_layout(STD_VECDEQUE_FIELD_NAMES)):\n             return TYPE_KIND_STD_VECDEQUE\n \n+        # STD COLLECTION BTREESET\n+        if (unqualified_type_name.startswith(\"BTreeSet<\") and\n+                self.__conforms_to_field_layout(STD_BTREESET_FIELD_NAMES)):\n+            return TYPE_KIND_STD_BTREESET\n+\n         # STD STRING\n         if (unqualified_type_name.startswith(\"String\") and\n             self.__conforms_to_field_layout(STD_STRING_FIELD_NAMES)):\n@@ -358,6 +367,19 @@ def extract_tail_head_ptr_and_cap_from_std_vecdeque(vec_val):\n     return (tail, head, data_ptr, capacity)\n \n \n+def extract_length_and_ptr_from_std_btreeset(vec_val):\n+    assert vec_val.type.get_type_kind() == TYPE_KIND_STD_BTREESET\n+    map = vec_val.get_child_at_index(0)\n+    root = map.get_child_at_index(0)\n+    length = map.get_child_at_index(1).as_integer()\n+    node = root.get_child_at_index(0)\n+    ptr = node.get_child_at_index(0)\n+    unique_ptr_val = ptr.get_child_at_index(0)\n+    data_ptr = unique_ptr_val.get_child_at_index(0)\n+    assert data_ptr.type.get_dwarf_type_kind() == DWARF_TYPE_CODE_PTR\n+    return (length, data_ptr)\n+\n+\n def extract_length_and_ptr_from_slice(slice_val):\n     assert (slice_val.type.get_type_kind() == TYPE_KIND_SLICE or\n             slice_val.type.get_type_kind() == TYPE_KIND_STR_SLICE)"}, {"sha": "8d9af89a7439991e0ae96a901f1ba6be0df1e47b", "filename": "src/etc/gdb_rust_pretty_printing.py", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/b6d4d403217d8ef7ff98f21924819880efed56f0/src%2Fetc%2Fgdb_rust_pretty_printing.py", "raw_url": "https://github.com/rust-lang/rust/raw/b6d4d403217d8ef7ff98f21924819880efed56f0/src%2Fetc%2Fgdb_rust_pretty_printing.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_rust_pretty_printing.py?ref=b6d4d403217d8ef7ff98f21924819880efed56f0", "patch": "@@ -127,6 +127,9 @@ def rust_pretty_printer_lookup_function(gdb_val):\n     if type_kind == rustpp.TYPE_KIND_STD_VECDEQUE:\n         return RustStdVecDequePrinter(val)\n \n+    if type_kind == rustpp.TYPE_KIND_STD_BTREESET:\n+        return RustStdBTreeSetPrinter(val)\n+\n     if type_kind == rustpp.TYPE_KIND_STD_STRING:\n         return RustStdStringPrinter(val)\n \n@@ -299,6 +302,30 @@ def children(self):\n             yield (str(index), (gdb_ptr + index).dereference())\n \n \n+class RustStdBTreeSetPrinter(object):\n+    def __init__(self, val):\n+        self.__val = val\n+\n+    @staticmethod\n+    def display_hint():\n+        return \"map\"\n+\n+    def to_string(self):\n+        (length, data_ptr) = \\\n+            rustpp.extract_length_and_ptr_from_std_btreeset(self.__val)\n+        return (self.__val.type.get_unqualified_type_name() +\n+                (\" with %i elements\" % length))\n+\n+    def children(self):\n+        (length, data_ptr) = \\\n+            rustpp.extract_length_and_ptr_from_std_btreeset(self.__val)\n+        val = GdbValue(data_ptr.get_wrapped_value().dereference()).get_child_at_index(0)\n+        gdb_ptr = val.get_wrapped_value()\n+        for index in xrange(length):\n+            yield (str(index), str(index))\n+            yield (str(index), gdb_ptr[index])\n+\n+\n class RustStdStringPrinter(object):\n     def __init__(self, val):\n         self.__val = val"}]}