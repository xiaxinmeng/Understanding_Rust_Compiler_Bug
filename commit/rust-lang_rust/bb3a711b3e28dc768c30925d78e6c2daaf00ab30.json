{"sha": "bb3a711b3e28dc768c30925d78e6c2daaf00ab30", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiM2E3MTFiM2UyOGRjNzY4YzMwOTI1ZDc4ZTZjMmRhYWYwMGFiMzA=", "commit": {"author": {"name": "Christian Poveda", "email": "git@christianpoveda.xyz", "date": "2020-02-19T22:53:33Z"}, "committer": {"name": "Christian Poveda", "email": "git@christianpoveda.xyz", "date": "2020-02-19T22:53:33Z"}, "message": "rename platform specific shims", "tree": {"sha": "5d9aa414805e66e69bfc80bbcf3677cb23879774", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d9aa414805e66e69bfc80bbcf3677cb23879774"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb3a711b3e28dc768c30925d78e6c2daaf00ab30", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQRsB8A/3NrzTlMMjT0nUl7150IKUAUCXk28bgAKCRAnUl7150IK\nUOSXAQCrWpmnaQMEzUjnM/tdITMBzScoIP7PQER15Wli0kUTrwD/U7qjNpv1RO/A\numVh7B6ams+UenHe8jW0JPs/3T79Vgs=\n=VqP1\n-----END PGP SIGNATURE-----", "payload": "tree 5d9aa414805e66e69bfc80bbcf3677cb23879774\nparent 3418b40dac84d124db68a10fb0e17668139751e9\nauthor Christian Poveda <git@christianpoveda.xyz> 1582152813 -0500\ncommitter Christian Poveda <git@christianpoveda.xyz> 1582152813 -0500\n\nrename platform specific shims\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb3a711b3e28dc768c30925d78e6c2daaf00ab30", "html_url": "https://github.com/rust-lang/rust/commit/bb3a711b3e28dc768c30925d78e6c2daaf00ab30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb3a711b3e28dc768c30925d78e6c2daaf00ab30/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3418b40dac84d124db68a10fb0e17668139751e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3418b40dac84d124db68a10fb0e17668139751e9", "html_url": "https://github.com/rust-lang/rust/commit/3418b40dac84d124db68a10fb0e17668139751e9"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "819da6804381d057cb857d9fedaa0544372bc013", "filename": "src/shims/foreign_items/posix/linux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb3a711b3e28dc768c30925d78e6c2daaf00ab30/src%2Fshims%2Fforeign_items%2Fposix%2Flinux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb3a711b3e28dc768c30925d78e6c2daaf00ab30/src%2Fshims%2Fforeign_items%2Fposix%2Flinux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fposix%2Flinux.rs?ref=bb3a711b3e28dc768c30925d78e6c2daaf00ab30", "patch": "@@ -57,7 +57,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                     id if id == sys_statx => {\n                         // The first argument is the syscall id,\n                         // so skip over it.\n-                        let result = this.statx(args[1], args[2], args[3], args[4], args[5])?;\n+                        let result = this.linux_statx(args[1], args[2], args[3], args[4], args[5])?;\n                         this.write_scalar(Scalar::from_int(result, dest.layout.size), dest)?;\n                     }\n                     id => throw_unsup_format!(\"miri does not support syscall ID {}\", id),"}, {"sha": "3698df95bd199eba61a46f884dcf63a755d388bc", "filename": "src/shims/foreign_items/posix/macos.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bb3a711b3e28dc768c30925d78e6c2daaf00ab30/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb3a711b3e28dc768c30925d78e6c2daaf00ab30/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs?ref=bb3a711b3e28dc768c30925d78e6c2daaf00ab30", "patch": "@@ -25,17 +25,17 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             }\n \n             \"stat$INODE64\" => {\n-                let result = this.stat(args[0], args[1])?;\n+                let result = this.macos_stat(args[0], args[1])?;\n                 this.write_scalar(Scalar::from_int(result, dest.layout.size), dest)?;\n             }\n \n             \"lstat$INODE64\" => {\n-                let result = this.lstat(args[0], args[1])?;\n+                let result = this.macos_lstat(args[0], args[1])?;\n                 this.write_scalar(Scalar::from_int(result, dest.layout.size), dest)?;\n             }\n \n             \"fstat$INODE64\" => {\n-                let result = this.fstat(args[0], args[1])?;\n+                let result = this.macos_fstat(args[0], args[1])?;\n                 this.write_scalar(Scalar::from_int(result, dest.layout.size), dest)?;\n             }\n "}, {"sha": "afa71f654075a66bf1ee1462375cb0d25a55e7de", "filename": "src/shims/fs.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bb3a711b3e28dc768c30925d78e6c2daaf00ab30/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb3a711b3e28dc768c30925d78e6c2daaf00ab30/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=bb3a711b3e28dc768c30925d78e6c2daaf00ab30", "patch": "@@ -340,7 +340,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         this.try_unwrap_io_result(create_link(target, linkpath).map(|_| 0))\n     }\n \n-    fn stat(\n+    fn macos_stat(\n         &mut self,\n         path_op: OpTy<'tcx, Tag>,\n         buf_op: OpTy<'tcx, Tag>,\n@@ -349,22 +349,22 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         this.check_no_isolation(\"stat\")?;\n         this.check_platform(\"macos\", \"stat\")?;\n         // `stat` always follows symlinks.\n-        this.stat_or_lstat(true, path_op, buf_op)\n+        this.macos_stat_or_lstat(true, path_op, buf_op)\n     }\n \n     // `lstat` is used to get symlink metadata.\n-    fn lstat(\n+    fn macos_lstat(\n         &mut self,\n         path_op: OpTy<'tcx, Tag>,\n         buf_op: OpTy<'tcx, Tag>,\n     ) -> InterpResult<'tcx, i32> {\n         let this = self.eval_context_mut();\n         this.check_no_isolation(\"lstat\")?;\n         this.check_platform(\"macos\", \"lstat\")?;\n-        this.stat_or_lstat(false, path_op, buf_op)\n+        this.macos_stat_or_lstat(false, path_op, buf_op)\n     }\n \n-    fn fstat(\n+    fn macos_fstat(\n         &mut self,\n         fd_op: OpTy<'tcx, Tag>,\n         buf_op: OpTy<'tcx, Tag>,\n@@ -380,10 +380,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             Some(metadata) => metadata,\n             None => return Ok(-1),\n         };\n-        stat_macos_write_buf(this, metadata, buf_op)\n+        macos_stat_write_buf(this, metadata, buf_op)\n     }\n \n-    fn stat_or_lstat(\n+    fn macos_stat_or_lstat(\n         &mut self,\n         follow_symlink: bool,\n         path_op: OpTy<'tcx, Tag>,\n@@ -398,10 +398,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             Some(metadata) => metadata,\n             None => return Ok(-1),\n         };\n-        stat_macos_write_buf(this, metadata, buf_op)\n+        macos_stat_write_buf(this, metadata, buf_op)\n     }\n \n-    fn statx(\n+    fn linux_statx(\n         &mut self,\n         dirfd_op: OpTy<'tcx, Tag>,    // Should be an `int`\n         pathname_op: OpTy<'tcx, Tag>, // Should be a `const char *`\n@@ -688,7 +688,7 @@ impl FileMetadata {\n     }\n }\n \n-fn stat_macos_write_buf<'tcx, 'mir>(\n+fn macos_stat_write_buf<'tcx, 'mir>(\n     ecx: &mut MiriEvalContext<'mir, 'tcx>,\n     metadata: FileMetadata,\n     buf_op: OpTy<'tcx, Tag>,"}]}