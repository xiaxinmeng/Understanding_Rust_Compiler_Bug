{"sha": "529f15f9b9c5bcd1d2a02e2fa74027a5c5a458de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyOWYxNWY5YjljNWJjZDFkMmEwMmUyZmE3NDAyN2E1YzVhNDU4ZGU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-24T21:10:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-24T21:10:10Z"}, "message": "Rollup merge of #81338 - bugadani:dominator-cleanup, r=davidtwco\n\nClean up `dominators_given_rpo`", "tree": {"sha": "a96f8fb4dd30e006717dc59cc8b444a78f229840", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a96f8fb4dd30e006717dc59cc8b444a78f229840"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/529f15f9b9c5bcd1d2a02e2fa74027a5c5a458de", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgDeIyCRBK7hj4Ov3rIwAAdHIIAJcvVw9gbcLxXOHM5IDaKwDB\nb9gDJoYD9CUrAV88ELc3q6vz0YoWP6WINqEJyFphrThTcfuJuBHsBijlnX1avdfj\ndBJD8rFPCOc6q+KIjzoeX28TpafcqS1wwnAXW7obsPOconyHd6+c1SckF1YTZBrd\n3Z9VgwlNZCZ+ZmrH4uSVUHwRzxX8lx71MJ4nzp06b2ycLFtJkT5mTwVFYsK5e9aH\nbvg2y4EGSpeGdr+hj+dxkcbY+HZN6uIDrTYlUwcqrXI1Daw2XyPGQELxL0Xepcdv\nwwtG8EZNTMbnO2JegfJDtOwfRPLqDTbpjnC+1i16g5QhHKi/dUBKVZ2mHQo8VcE=\n=HJiM\n-----END PGP SIGNATURE-----\n", "payload": "tree a96f8fb4dd30e006717dc59cc8b444a78f229840\nparent 558b87859b83a20b049e7fbb12b2a7c73a71b4ea\nparent f8416faaaf3a1fb6ca57ff8f0b3bdf972eed266f\nauthor Jonas Schievink <jonasschievink@gmail.com> 1611522610 +0100\ncommitter GitHub <noreply@github.com> 1611522610 +0100\n\nRollup merge of #81338 - bugadani:dominator-cleanup, r=davidtwco\n\nClean up `dominators_given_rpo`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/529f15f9b9c5bcd1d2a02e2fa74027a5c5a458de", "html_url": "https://github.com/rust-lang/rust/commit/529f15f9b9c5bcd1d2a02e2fa74027a5c5a458de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/529f15f9b9c5bcd1d2a02e2fa74027a5c5a458de/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "558b87859b83a20b049e7fbb12b2a7c73a71b4ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/558b87859b83a20b049e7fbb12b2a7c73a71b4ea", "html_url": "https://github.com/rust-lang/rust/commit/558b87859b83a20b049e7fbb12b2a7c73a71b4ea"}, {"sha": "f8416faaaf3a1fb6ca57ff8f0b3bdf972eed266f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8416faaaf3a1fb6ca57ff8f0b3bdf972eed266f", "html_url": "https://github.com/rust-lang/rust/commit/f8416faaaf3a1fb6ca57ff8f0b3bdf972eed266f"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "ad62e3c9fc8f4a074ec9110ad450082e3deb12bc", "filename": "compiler/rustc_data_structures/src/graph/dominators/mod.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/529f15f9b9c5bcd1d2a02e2fa74027a5c5a458de/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fdominators%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/529f15f9b9c5bcd1d2a02e2fa74027a5c5a458de/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fdominators%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fdominators%2Fmod.rs?ref=529f15f9b9c5bcd1d2a02e2fa74027a5c5a458de", "patch": "@@ -8,7 +8,6 @@\n use super::iterate::reverse_post_order;\n use super::ControlFlowGraph;\n use rustc_index::vec::{Idx, IndexVec};\n-use std::borrow::BorrowMut;\n use std::cmp::Ordering;\n \n #[cfg(test)]\n@@ -20,22 +19,17 @@ pub fn dominators<G: ControlFlowGraph>(graph: G) -> Dominators<G::Node> {\n     dominators_given_rpo(graph, &rpo)\n }\n \n-fn dominators_given_rpo<G: ControlFlowGraph + BorrowMut<G>>(\n-    mut graph: G,\n-    rpo: &[G::Node],\n-) -> Dominators<G::Node> {\n-    let start_node = graph.borrow().start_node();\n+fn dominators_given_rpo<G: ControlFlowGraph>(graph: G, rpo: &[G::Node]) -> Dominators<G::Node> {\n+    let start_node = graph.start_node();\n     assert_eq!(rpo[0], start_node);\n \n     // compute the post order index (rank) for each node\n-    let mut post_order_rank: IndexVec<G::Node, usize> =\n-        (0..graph.borrow().num_nodes()).map(|_| 0).collect();\n+    let mut post_order_rank = IndexVec::from_elem_n(0, graph.num_nodes());\n     for (index, node) in rpo.iter().rev().cloned().enumerate() {\n         post_order_rank[node] = index;\n     }\n \n-    let mut immediate_dominators: IndexVec<G::Node, Option<G::Node>> =\n-        (0..graph.borrow().num_nodes()).map(|_| None).collect();\n+    let mut immediate_dominators = IndexVec::from_elem_n(None, graph.num_nodes());\n     immediate_dominators[start_node] = Some(start_node);\n \n     let mut changed = true;\n@@ -44,7 +38,7 @@ fn dominators_given_rpo<G: ControlFlowGraph + BorrowMut<G>>(\n \n         for &node in &rpo[1..] {\n             let mut new_idom = None;\n-            for pred in graph.borrow_mut().predecessors(node) {\n+            for pred in graph.predecessors(node) {\n                 if immediate_dominators[pred].is_some() {\n                     // (*) dominators for `pred` have been calculated\n                     new_idom = Some(if let Some(new_idom) = new_idom {"}]}