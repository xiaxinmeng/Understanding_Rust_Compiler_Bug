{"sha": "b696f488917b1a39f0bab4c566e7627b49196e71", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2OTZmNDg4OTE3YjFhMzlmMGJhYjRjNTY2ZTc2MjdiNDkxOTZlNzE=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-11-08T13:58:32Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-11-08T13:58:32Z"}, "message": "Use `eq_opaque_type_and_type` when type-checking closure signatures\n\nThis handles the case where a user explicitly annotations a closure\nsignature with a opaque return type.\n\nFixes #63263", "tree": {"sha": "0c36f3d2ed44d97a1ba105e09f8fc543bb76288d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c36f3d2ed44d97a1ba105e09f8fc543bb76288d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b696f488917b1a39f0bab4c566e7627b49196e71", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIyBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl3FdMgACgkQtAh+UQ6Y\nsWQWzQ/46aG1rnmNd3klofFi6Vosjm2cD3mcquAvr5iZt7fvW1OR5FECExQlAKnP\n1CC+bFAZj9fcwCAXpqb9AYIL7PEgYPDue6MTG0JNbnQ9uTjY9cJQcLv4vGCsx2vZ\nvcKSzjJjM4dzDoen451qBb5BVtT8p/U0/OzYOEqniDKs23IWiRW2JP5jsY4zWiYO\nk5SSITPgEu2ctEBmaEONm4q5Dpy7rYD40wCYi8zuaPS1hCP93U46rIEXZKPrfyCl\nVUjbnKkhWqgBKDbbljvtTWym0uUcD05zPqtJiJWMdAfjBuxJ3FWzV036fUKjRAXb\ntRkoxlfnI9SOU9h1/n2Mt0l42RUBHorp+vJiamiQpjR/799FYEfjr93dFaeYODVH\nkw05jf6OMCaTKP/Jb3Ghfg7AlMQ2b96BgID3VMbFgYeifbu2+3tFr/Kzjt6QAofE\ntHZvayJ2I7oRHnR/sIrA2Ew4RJXLcHYvHAvvZb45nsYzhMFK9gbV3UkgILkZ1BVi\nddIv5ZcD5p7EiDLMgcm4Pa3vChdWIan/gfkPbYAOgrfrouXWKJFIAcoMRP2qKNE+\nWlZF2T1k7x1ElsFxBEgeCkIpL0LJGNmwmfflgjEgGcds1jmg9Ur2cy/Ze/CoRjTK\nnp4gwWFIPFbz3Z7JE5DEVs4yr+aAP4lWS08MC9oozIa3gItV3A==\n=qhUa\n-----END PGP SIGNATURE-----", "payload": "tree 0c36f3d2ed44d97a1ba105e09f8fc543bb76288d\nparent 76ade3e8ac42cd7a7b7c3c5ef54818ab68e3ebdc\nauthor Aaron Hill <aa1ronham@gmail.com> 1573221512 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1573221512 -0500\n\nUse `eq_opaque_type_and_type` when type-checking closure signatures\n\nThis handles the case where a user explicitly annotations a closure\nsignature with a opaque return type.\n\nFixes #63263\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b696f488917b1a39f0bab4c566e7627b49196e71", "html_url": "https://github.com/rust-lang/rust/commit/b696f488917b1a39f0bab4c566e7627b49196e71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b696f488917b1a39f0bab4c566e7627b49196e71/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76ade3e8ac42cd7a7b7c3c5ef54818ab68e3ebdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/76ade3e8ac42cd7a7b7c3c5ef54818ab68e3ebdc", "html_url": "https://github.com/rust-lang/rust/commit/76ade3e8ac42cd7a7b7c3c5ef54818ab68e3ebdc"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "35fb677c053cb99ae7d5955be1144fb8d2b5e739", "filename": "src/librustc_mir/borrow_check/nll/type_check/input_output.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b696f488917b1a39f0bab4c566e7627b49196e71/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Finput_output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b696f488917b1a39f0bab4c566e7627b49196e71/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Finput_output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Finput_output.rs?ref=b696f488917b1a39f0bab4c566e7627b49196e71", "patch": "@@ -134,15 +134,27 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n         };\n \n         // If the user explicitly annotated the output types, enforce those.\n+        // Note that this only happens for closures.\n         if let Some(user_provided_sig) = user_provided_sig {\n             let user_provided_output_ty = user_provided_sig.output();\n             let user_provided_output_ty =\n                 self.normalize(user_provided_output_ty, Locations::All(output_span));\n-            self.equate_normalized_input_or_output(\n-                user_provided_output_ty,\n+            if let Err(err) = self.eq_opaque_type_and_type(\n                 mir_output_ty,\n-                output_span,\n-            );\n+                user_provided_output_ty,\n+                self.mir_def_id,\n+                Locations::All(output_span),\n+                ConstraintCategory::BoringNoLocation\n+            ) {\n+                span_mirbug!(\n+                    self,\n+                    Location::START,\n+                    \"equate_inputs_and_outputs: `{:?}=={:?}` failed with `{:?}`\",\n+                    mir_output_ty,\n+                    user_provided_output_ty,\n+                    err\n+                );\n+            }\n         }\n     }\n "}, {"sha": "a3a93341205384107b2c292cc57e9d8613b4148e", "filename": "src/test/ui/type-alias-impl-trait/issue-63263-closure-return.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b696f488917b1a39f0bab4c566e7627b49196e71/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-63263-closure-return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b696f488917b1a39f0bab4c566e7627b49196e71/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-63263-closure-return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-63263-closure-return.rs?ref=b696f488917b1a39f0bab4c566e7627b49196e71", "patch": "@@ -0,0 +1,13 @@\n+// Regression test for issue #63263.\n+// Tests that we properly handle closures with an explicit return type\n+// that return an opaque type.\n+\n+// run-pass\n+\n+#![feature(type_alias_impl_trait)]\n+\n+pub type Closure = impl FnOnce();\n+\n+fn main() {\n+    || -> Closure { || () };\n+}"}]}