{"sha": "5576ce84cf13a32ebcf9a08366e3117da9832c84", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NzZjZTg0Y2YxM2EzMmViY2Y5YTA4MzY2ZTMxMTdkYTk4MzJjODQ=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-09T15:37:32Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-09T16:18:17Z"}, "message": "Take OutputType::DepInfo into account for metadata_output_only", "tree": {"sha": "fc66fbfba6c181aff5e5a362801c9cb852246ded", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc66fbfba6c181aff5e5a362801c9cb852246ded"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5576ce84cf13a32ebcf9a08366e3117da9832c84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5576ce84cf13a32ebcf9a08366e3117da9832c84", "html_url": "https://github.com/rust-lang/rust/commit/5576ce84cf13a32ebcf9a08366e3117da9832c84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5576ce84cf13a32ebcf9a08366e3117da9832c84/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8414520436699c5063e286f8a68c95f2e8383d35", "url": "https://api.github.com/repos/rust-lang/rust/commits/8414520436699c5063e286f8a68c95f2e8383d35", "html_url": "https://github.com/rust-lang/rust/commit/8414520436699c5063e286f8a68c95f2e8383d35"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "767ab82aa34b450557746d888dc0bd1bd1e733f9", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5576ce84cf13a32ebcf9a08366e3117da9832c84/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5576ce84cf13a32ebcf9a08366e3117da9832c84/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=5576ce84cf13a32ebcf9a08366e3117da9832c84", "patch": "@@ -28,7 +28,7 @@ use rustc::traits::specialization_graph;\n use rustc::ty::{self, Ty, TyCtxt, ReprOptions, SymbolName};\n use rustc::ty::codec::{self as ty_codec, TyEncoder};\n \n-use rustc::session::config::{self, CrateTypeProcMacro, OutputType};\n+use rustc::session::config::{self, CrateTypeProcMacro};\n use rustc::util::nodemap::FxHashMap;\n \n use rustc_data_structures::stable_hasher::StableHasher;\n@@ -835,8 +835,7 @@ impl<'a, 'b: 'a, 'tcx: 'b> IsolatedEncoder<'a, 'b, 'tcx> {\n \n     fn metadata_output_only(&self) -> bool {\n         // MIR optimisation can be skipped when we're just interested in the metadata.\n-        self.tcx.sess.opts.output_types.len() == 1 &&\n-            self.tcx.sess.opts.output_types.contains_key(&OutputType::Metadata)\n+        !self.tcx.sess.opts.output_types.should_trans()\n     }\n \n     fn encode_info_for_impl_item(&mut self, def_id: DefId) -> Entry<'tcx> {"}]}