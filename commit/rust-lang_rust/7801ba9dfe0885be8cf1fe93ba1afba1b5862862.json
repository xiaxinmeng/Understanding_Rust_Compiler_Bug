{"sha": "7801ba9dfe0885be8cf1fe93ba1afba1b5862862", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4MDFiYTlkZmUwODg1YmU4Y2YxZmU5M2JhMWFmYmExYjU4NjI4NjI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-10-18T21:36:17Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-10-18T21:36:17Z"}, "message": "Make type errors in rustboot report the friendly type of both expected and actual.", "tree": {"sha": "15c5d8442a113e23173d952d8b89f59306e62ce4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15c5d8442a113e23173d952d8b89f59306e62ce4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7801ba9dfe0885be8cf1fe93ba1afba1b5862862", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7801ba9dfe0885be8cf1fe93ba1afba1b5862862", "html_url": "https://github.com/rust-lang/rust/commit/7801ba9dfe0885be8cf1fe93ba1afba1b5862862", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7801ba9dfe0885be8cf1fe93ba1afba1b5862862/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "783be711f51e4334693caba8b526335bdee95dd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/783be711f51e4334693caba8b526335bdee95dd4", "html_url": "https://github.com/rust-lang/rust/commit/783be711f51e4334693caba8b526335bdee95dd4"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "e2295e4cd2adeb51f00c1c2014fb7da6dd3943a6", "filename": "src/boot/me/type.ml", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7801ba9dfe0885be8cf1fe93ba1afba1b5862862/src%2Fboot%2Fme%2Ftype.ml", "raw_url": "https://github.com/rust-lang/rust/raw/7801ba9dfe0885be8cf1fe93ba1afba1b5862862/src%2Fboot%2Fme%2Ftype.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftype.ml?ref=7801ba9dfe0885be8cf1fe93ba1afba1b5862862", "patch": "@@ -223,8 +223,8 @@ let type_error_full expected actual =\n   raise (Type_error (expected, actual))\n ;;\n \n-let type_error expected actual =\n-  type_error_full expected (head_only actual)\n+let type_error cx expected actual =\n+  type_error_full expected (friendly_stringify cx head_only actual)\n ;;\n \n (* We explicitly curry [cx] like this to avoid threading it through all the\n@@ -278,6 +278,8 @@ let check_stmt (cx:Semant.ctxt) : (fn_ctx -> Ast.stmt -> unit) =\n    * Type assertions\n    *)\n \n+  let type_error = type_error cx in\n+\n   let is_integer (ty:Ast.ty) =\n     match ty with\n         Ast.TY_int | Ast.TY_uint"}]}