{"sha": "c76517d6c4160083e642f6981f68b1ce6690206e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NjUxN2Q2YzQxNjAwODNlNjQyZjY5ODFmNjhiMWNlNjY5MDIwNmU=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-02-13T15:35:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-13T15:35:53Z"}, "message": "Merge pull request #1531 from F001/clonedCollect\n\nAdd a lint for `slice.iter().cloned().collect()`", "tree": {"sha": "6932c5f0c4f322c5e48df900853938ccb72a9a68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6932c5f0c4f322c5e48df900853938ccb72a9a68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c76517d6c4160083e642f6981f68b1ce6690206e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c76517d6c4160083e642f6981f68b1ce6690206e", "html_url": "https://github.com/rust-lang/rust/commit/c76517d6c4160083e642f6981f68b1ce6690206e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c76517d6c4160083e642f6981f68b1ce6690206e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "628df79757057f6ba29ad1ef56b94f886e121bd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/628df79757057f6ba29ad1ef56b94f886e121bd4", "html_url": "https://github.com/rust-lang/rust/commit/628df79757057f6ba29ad1ef56b94f886e121bd4"}, {"sha": "8b3ad61dd353664437647a32ce06606e31670664", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b3ad61dd353664437647a32ce06606e31670664", "html_url": "https://github.com/rust-lang/rust/commit/8b3ad61dd353664437647a32ce06606e31670664"}], "stats": {"total": 66, "additions": 62, "deletions": 4}, "files": [{"sha": "7ca1336afaf82b11d067de50057e941a50a9c545", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c76517d6c4160083e642f6981f68b1ce6690206e/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/c76517d6c4160083e642f6981f68b1ce6690206e/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=c76517d6c4160083e642f6981f68b1ce6690206e", "patch": "@@ -346,6 +346,7 @@ All notable changes to this project will be documented in this file.\n [`invalid_regex`]: https://github.com/Manishearth/rust-clippy/wiki#invalid_regex\n [`invalid_upcast_comparisons`]: https://github.com/Manishearth/rust-clippy/wiki#invalid_upcast_comparisons\n [`items_after_statements`]: https://github.com/Manishearth/rust-clippy/wiki#items_after_statements\n+[`iter_cloned_collect`]: https://github.com/Manishearth/rust-clippy/wiki#iter_cloned_collect\n [`iter_next_loop`]: https://github.com/Manishearth/rust-clippy/wiki#iter_next_loop\n [`iter_nth`]: https://github.com/Manishearth/rust-clippy/wiki#iter_nth\n [`iter_skip_next`]: https://github.com/Manishearth/rust-clippy/wiki#iter_skip_next"}, {"sha": "0a6a62e9185212032bb566333ea18b5f6e1a1203", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c76517d6c4160083e642f6981f68b1ce6690206e/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/c76517d6c4160083e642f6981f68b1ce6690206e/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=c76517d6c4160083e642f6981f68b1ce6690206e", "patch": "@@ -180,7 +180,7 @@ transparently:\n \n ## Lints\n \n-There are 188 lints included in this crate:\n+There are 189 lints included in this crate:\n \n name                                                                                                                   | default | triggers on\n -----------------------------------------------------------------------------------------------------------------------|---------|----------------------------------------------------------------------------------------------------------------------------------\n@@ -253,6 +253,7 @@ name\n [invalid_regex](https://github.com/Manishearth/rust-clippy/wiki#invalid_regex)                                         | deny    | invalid regular expressions\n [invalid_upcast_comparisons](https://github.com/Manishearth/rust-clippy/wiki#invalid_upcast_comparisons)               | allow   | a comparison involving an upcast which is always true or false\n [items_after_statements](https://github.com/Manishearth/rust-clippy/wiki#items_after_statements)                       | allow   | blocks where an item comes after a statement\n+[iter_cloned_collect](https://github.com/Manishearth/rust-clippy/wiki#iter_cloned_collect)                             | warn    | using `.cloned().collect()` on slice to create a `Vec`\n [iter_next_loop](https://github.com/Manishearth/rust-clippy/wiki#iter_next_loop)                                       | warn    | for-looping over `_.next()` which is probably not intended\n [iter_nth](https://github.com/Manishearth/rust-clippy/wiki#iter_nth)                                                   | warn    | using `.iter().nth()` on a standard library type with O(1) element access\n [iter_skip_next](https://github.com/Manishearth/rust-clippy/wiki#iter_skip_next)                                       | warn    | using `.skip(x).next()` on an iterator"}, {"sha": "80a369513e2c8c1d478ac24e931999e4928f47a1", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c76517d6c4160083e642f6981f68b1ce6690206e/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c76517d6c4160083e642f6981f68b1ce6690206e/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=c76517d6c4160083e642f6981f68b1ce6690206e", "patch": "@@ -420,6 +420,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         methods::CLONE_ON_COPY,\n         methods::FILTER_NEXT,\n         methods::GET_UNWRAP,\n+        methods::ITER_CLONED_COLLECT,\n         methods::ITER_NTH,\n         methods::ITER_SKIP_NEXT,\n         methods::NEW_RET_NO_SELF,"}, {"sha": "b74bd9266a4515edaa6fc548d496ad9db9d03502", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/c76517d6c4160083e642f6981f68b1ce6690206e/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c76517d6c4160083e642f6981f68b1ce6690206e/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=c76517d6c4160083e642f6981f68b1ce6690206e", "patch": "@@ -494,13 +494,33 @@ declare_lint! {\n /// s.push_str(abc);\n /// s.push_str(&def));\n /// ```\n-\n declare_lint! {\n     pub STRING_EXTEND_CHARS,\n     Warn,\n     \"using `x.extend(s.chars())` where s is a `&str` or `String`\"\n }\n \n+/// **What it does:** Checks for the use of `.cloned().collect()` on slice to create a `Vec`.\n+///\n+/// **Why is this bad?** `.to_vec()` is clearer\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+/// ```rust\n+/// let s = [1,2,3,4,5];\n+/// let s2 : Vec<isize> = s[..].iter().cloned().collect();\n+/// ```\n+/// The better use would be:\n+/// ```rust\n+/// let s = [1,2,3,4,5];\n+/// let s2 : Vec<isize> = s.to_vec();\n+/// ```\n+declare_lint! {\n+    pub ITER_CLONED_COLLECT,\n+    Warn,\n+    \"using `.cloned().collect()` on slice to create a `Vec`\"\n+}\n \n impl LintPass for Pass {\n     fn get_lints(&self) -> LintArray {\n@@ -525,7 +545,8 @@ impl LintPass for Pass {\n                     ITER_NTH,\n                     ITER_SKIP_NEXT,\n                     GET_UNWRAP,\n-                    STRING_EXTEND_CHARS)\n+                    STRING_EXTEND_CHARS,\n+                    ITER_CLONED_COLLECT)\n     }\n }\n \n@@ -580,6 +601,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                     lint_iter_nth(cx, expr, arglists[0], true);\n                 } else if method_chain_args(expr, &[\"skip\", \"next\"]).is_some() {\n                     lint_iter_skip_next(cx, expr);\n+                } else if let Some(arglists) = method_chain_args(expr, &[\"cloned\", \"collect\"]) {\n+                    lint_iter_cloned_collect(cx, expr, arglists[0]);\n                 }\n \n                 lint_or_fun_call(cx, expr, &name.node.as_str(), args);\n@@ -879,6 +902,17 @@ fn lint_cstring_as_ptr(cx: &LateContext, expr: &hir::Expr, new: &hir::Expr, unwr\n     }}\n }\n \n+fn lint_iter_cloned_collect(cx: &LateContext, expr: &hir::Expr, iter_args: &[hir::Expr]) {\n+    if match_type(cx, cx.tables.expr_ty(expr), &paths::VEC) &&\n+       derefs_to_slice(cx, &iter_args[0], cx.tables.expr_ty(&iter_args[0])).is_some() {\n+        span_lint(cx,\n+                  ITER_CLONED_COLLECT,\n+                  expr.span,\n+                  \"called `cloned().collect()` on a slice to create a `Vec`. Calling `to_vec()` is both faster and \\\n+                   more readable\");\n+    }\n+}\n+\n fn lint_iter_nth(cx: &LateContext, expr: &hir::Expr, iter_args: &[hir::Expr], is_mut: bool) {\n     let mut_str = if is_mut { \"_mut\" } else { \"\" };\n     let caller_type = if derefs_to_slice(cx, &iter_args[0], cx.tables.expr_ty(&iter_args[0])).is_some() {"}, {"sha": "e1cd7ae38ea49a89ba47b27beff6e94819a7e8a7", "filename": "tests/ui/methods.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c76517d6c4160083e642f6981f68b1ce6690206e/tests%2Fui%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c76517d6c4160083e642f6981f68b1ce6690206e/tests%2Fui%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.rs?ref=c76517d6c4160083e642f6981f68b1ce6690206e", "patch": "@@ -689,3 +689,11 @@ fn temporary_cstring() {\n \n \n }\n+\n+fn iter_clone_collect() {\n+    let v = [1,2,3,4,5];\n+    let v2 : Vec<isize> = v.iter().cloned().collect();\n+\n+    let v3 : HashSet<isize> = v.iter().cloned().collect();\n+    let v4 : VecDeque<isize> = v.iter().cloned().collect();\n+}"}, {"sha": "425a29bb79e7c762e17927d8099a7c089c2bda77", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c76517d6c4160083e642f6981f68b1ce6690206e/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c76517d6c4160083e642f6981f68b1ce6690206e/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=c76517d6c4160083e642f6981f68b1ce6690206e", "patch": "@@ -950,5 +950,18 @@ help: assign the `CString` to a variable to extend its lifetime\n 687 |     CString::new(\"foo\").unwrap().as_ptr();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 88 previous errors\n+error: called `cloned().collect()` on a slice to create a `Vec`. Calling `to_vec()` is both faster and more readable\n+   --> $DIR/methods.rs:695:27\n+    |\n+695 |     let v2 : Vec<isize> = v.iter().cloned().collect();\n+    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |\n+    = note: #[deny(iter_cloned_collect)] implied by #[deny(clippy)]\n+note: lint level defined here\n+   --> $DIR/methods.rs:5:9\n+    |\n+5   | #![deny(clippy, clippy_pedantic)]\n+    |         ^^^^^^\n+\n+error: aborting due to 89 previous errors\n "}]}