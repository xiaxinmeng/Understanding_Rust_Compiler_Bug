{"sha": "d4b21f1ed3fcc377203cde3c567290a04ce24930", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0YjIxZjFlZDNmY2MzNzcyMDNjZGUzYzU2NzI5MGEwNGNlMjQ5MzA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-02T12:45:41Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-10T07:58:17Z"}, "message": "expand safety comment in memory.rs", "tree": {"sha": "29f115e26965ff033e235acef985036398154754", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29f115e26965ff033e235acef985036398154754"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4b21f1ed3fcc377203cde3c567290a04ce24930", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4b21f1ed3fcc377203cde3c567290a04ce24930", "html_url": "https://github.com/rust-lang/rust/commit/d4b21f1ed3fcc377203cde3c567290a04ce24930", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4b21f1ed3fcc377203cde3c567290a04ce24930/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "397283dbc39735982c2102fc0d3435e55fecf8a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/397283dbc39735982c2102fc0d3435e55fecf8a5", "html_url": "https://github.com/rust-lang/rust/commit/397283dbc39735982c2102fc0d3435e55fecf8a5"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "4478c29dd080b45f7a257cb2a52900f356c97228", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4b21f1ed3fcc377203cde3c567290a04ce24930/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4b21f1ed3fcc377203cde3c567290a04ce24930/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=d4b21f1ed3fcc377203cde3c567290a04ce24930", "patch": "@@ -586,6 +586,10 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n     /// The last argument controls whether we error out when there are undefined\n     /// or pointer bytes.  You should never call this, call `get_bytes` or\n     /// `get_bytes_with_undef_and_ptr` instead,\n+    ///\n+    /// This function also guarantees that the resulting pointer will remain stable\n+    /// even when new allocations are pushed to the `HashMap`. `copy_repeatedly` relies\n+    /// on that.\n     fn get_bytes_internal(\n         &self,\n         ptr: Pointer<M::PointerTag>,"}]}