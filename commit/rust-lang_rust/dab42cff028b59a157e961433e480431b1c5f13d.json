{"sha": "dab42cff028b59a157e961433e480431b1c5f13d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYjQyY2ZmMDI4YjU5YTE1N2U5NjE0MzNlNDgwNDMxYjFjNWYxM2Q=", "commit": {"author": {"name": "Alexander Melentyev", "email": "alexander.melentyev@icloud.com", "date": "2021-06-21T09:11:37Z"}, "committer": {"name": "Alexander Melentyev", "email": "alexander.melentyev@icloud.com", "date": "2021-06-21T09:11:37Z"}, "message": "Delete spaces", "tree": {"sha": "c9e457585963db985724575de12e6807e5a91e13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9e457585963db985724575de12e6807e5a91e13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dab42cff028b59a157e961433e480431b1c5f13d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dab42cff028b59a157e961433e480431b1c5f13d", "html_url": "https://github.com/rust-lang/rust/commit/dab42cff028b59a157e961433e480431b1c5f13d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dab42cff028b59a157e961433e480431b1c5f13d/comments", "author": null, "committer": null, "parents": [{"sha": "611b74e1fe48410c534c5d5a6a0832b810d8ccda", "url": "https://api.github.com/repos/rust-lang/rust/commits/611b74e1fe48410c534c5d5a6a0832b810d8ccda", "html_url": "https://github.com/rust-lang/rust/commit/611b74e1fe48410c534c5d5a6a0832b810d8ccda"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "7d7b7c811738e897ac7aa0a61d95908ca1b49368", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab42cff028b59a157e961433e480431b1c5f13d/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/dab42cff028b59a157e961433e480431b1c5f13d/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=dab42cff028b59a157e961433e480431b1c5f13d", "patch": "@@ -342,7 +342,7 @@ We have prioritization labels and a sync-blocker label, which are described belo\n - [P-low][p-low]: Requires attention (fix/response/evaluation) by a team member but isn't urgent.\n - [P-medium][p-medium]: Should be addressed by a team member until the next sync.\n - [P-high][p-high]: Should be immediately addressed and will require an out-of-cycle sync or a backport.\n-- [L-sync-blocker][l-sync-blocker]: An issue that \"blocks\" a sync. \n+- [L-sync-blocker][l-sync-blocker]: An issue that \"blocks\" a sync.\n Or rather: before the sync this should be addressed,\n e.g. by removing a lint again, so it doesn't hit beta/stable.\n "}, {"sha": "bd322cc80702acc0ee8c2498fd71f903b81dfdf9", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab42cff028b59a157e961433e480431b1c5f13d/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/dab42cff028b59a157e961433e480431b1c5f13d/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=dab42cff028b59a157e961433e480431b1c5f13d", "patch": "@@ -95,7 +95,7 @@ As with `cargo check`, this includes dependencies that are members of the worksp\n If you want to run Clippy **only** on the given crate, use the `--no-deps` option like this:\n \n ```terminal\n-cargo clippy -p example -- --no-deps \n+cargo clippy -p example -- --no-deps\n ```\n \n ### As a rustc replacement (`clippy-driver`)"}, {"sha": "90c034bd02a9e8493b93718f178de160cd60857e", "filename": "clippy_utils/src/ast_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab42cff028b59a157e961433e480431b1c5f13d/clippy_utils%2Fsrc%2Fast_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab42cff028b59a157e961433e480431b1c5f13d/clippy_utils%2Fsrc%2Fast_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fast_utils.rs?ref=dab42cff028b59a157e961433e480431b1c5f13d", "patch": "@@ -178,7 +178,7 @@ pub fn eq_expr(l: &Expr, r: &Expr) -> bool {\n         (Path(lq, lp), Path(rq, rp)) => both(lq, rq, |l, r| eq_qself(l, r)) && eq_path(lp, rp),\n         (MacCall(l), MacCall(r)) => eq_mac_call(l, r),\n         (Struct(lse), Struct(rse)) => {\n-            eq_maybe_qself(&lse.qself, &rse.qself) \n+            eq_maybe_qself(&lse.qself, &rse.qself)\n                 && eq_path(&lse.path, &rse.path)\n                 && eq_struct_rest(&lse.rest, &rse.rest)\n                 && unordered_over(&lse.fields, &rse.fields, |l, r| eq_field(l, r))"}, {"sha": "ed3a2fff83f168e7825b1c4e2fce3dee7cf6b820", "filename": "doc/basics.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dab42cff028b59a157e961433e480431b1c5f13d/doc%2Fbasics.md", "raw_url": "https://github.com/rust-lang/rust/raw/dab42cff028b59a157e961433e480431b1c5f13d/doc%2Fbasics.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fbasics.md?ref=dab42cff028b59a157e961433e480431b1c5f13d", "patch": "@@ -96,9 +96,9 @@ cargo dev ide_setup\n \n ## lintcheck\n `cargo lintcheck` will build and run clippy on a fixed set of crates and generate a log of the results.  \n-You can `git diff` the updated log against its previous version and \n+You can `git diff` the updated log against its previous version and\n see what impact your lint made on a small set of crates.  \n-If you add a new lint, please audit the resulting warnings and make sure \n+If you add a new lint, please audit the resulting warnings and make sure\n there are no false positives and that the suggestions are valid.\n \n Refer to the tools [README] for more details."}, {"sha": "a61070d8a80efc11fb1c3aae004b5c14d1fc28b8", "filename": "lintcheck/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab42cff028b59a157e961433e480431b1c5f13d/lintcheck%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/dab42cff028b59a157e961433e480431b1c5f13d/lintcheck%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck%2FREADME.md?ref=dab42cff028b59a157e961433e480431b1c5f13d", "patch": "@@ -73,5 +73,5 @@ You can run `./lintcheck/target/debug/lintcheck --fix` which will run Clippy wit\n print a warning if Clippys suggestions fail to apply (if the resulting code does not build).  \n This lets us spot bad suggestions or false positives automatically in some cases.  \n \n-Please note that the target dir should be cleaned afterwards since clippy will modify \n+Please note that the target dir should be cleaned afterwards since clippy will modify\n the downloaded sources which can lead to unexpected results when running lintcheck again afterwards."}, {"sha": "0174d3ffcbc2af59caf2dae5668fadd27b737161", "filename": "util/gh-pages/index.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dab42cff028b59a157e961433e480431b1c5f13d/util%2Fgh-pages%2Findex.html", "raw_url": "https://github.com/rust-lang/rust/raw/dab42cff028b59a157e961433e480431b1c5f13d/util%2Fgh-pages%2Findex.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fgh-pages%2Findex.html?ref=dab42cff028b59a157e961433e480431b1c5f13d", "patch": "@@ -363,7 +363,7 @@ <h4 class=\"list-group-item-heading\">\n \n             $scope.bySearch = function (lint, index, array) {\n                 let searchStr = $scope.search;\n-                // It can be `null` I haven't missed this value \n+                // It can be `null` I haven't missed this value\n                 if (searchStr == null || searchStr.length < 3) {\n                     return true;\n                 }\n@@ -375,7 +375,7 @@ <h4 class=\"list-group-item-heading\">\n                 }\n \n                 // Search the description\n-                // The use of `for`-loops instead of `foreach` enables us to return early \n+                // The use of `for`-loops instead of `foreach` enables us to return early\n                 let terms = searchStr.split(\" \");\n                 for (index = 0; index < terms.length; index++) {\n                     if (lint.id.indexOf(terms[index]) !== -1) {\n@@ -463,7 +463,7 @@ <h4 class=\"list-group-item-heading\">\n \n         let children = themeMenu.children;\n         for (let index = 0; index < children.length; index++) {\n-            let child = children[index]; \n+            let child = children[index];\n             child.addEventListener(\"click\", function(e) {\n                 setTheme(child.id, true);\n             });\n@@ -476,7 +476,7 @@ <h4 class=\"list-group-item-heading\">\n         let enableHighlight = false;\n         let enableNight = false;\n         let enableAyu = false;\n-        \n+\n         if (theme == \"ayu\") {\n             enableAyu = true;\n         } else if (theme == \"coal\" || theme == \"navy\") {"}]}