{"sha": "c833a9b4b4a3dea011155926d3b9d2a26bfd4ae1", "node_id": "C_kwDOAAsO6NoAKGM4MzNhOWI0YjRhM2RlYTAxMTE1NTkyNmQzYjlkMmEyNmJmZDRhZTE", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-03-11T08:51:42Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-03-11T08:51:42Z"}, "message": "update comment", "tree": {"sha": "fffc77d87b269222e29843f0e44c80ca60a03fce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fffc77d87b269222e29843f0e44c80ca60a03fce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c833a9b4b4a3dea011155926d3b9d2a26bfd4ae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c833a9b4b4a3dea011155926d3b9d2a26bfd4ae1", "html_url": "https://github.com/rust-lang/rust/commit/c833a9b4b4a3dea011155926d3b9d2a26bfd4ae1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c833a9b4b4a3dea011155926d3b9d2a26bfd4ae1/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01ad0ad653d57a5ccecffb08aff3c5564012f133", "url": "https://api.github.com/repos/rust-lang/rust/commits/01ad0ad653d57a5ccecffb08aff3c5564012f133", "html_url": "https://github.com/rust-lang/rust/commit/01ad0ad653d57a5ccecffb08aff3c5564012f133"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "73cc411e533d346545c45beba9ac9c2a7f4e1d40", "filename": "compiler/rustc_infer/src/infer/higher_ranked/mod.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c833a9b4b4a3dea011155926d3b9d2a26bfd4ae1/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fhigher_ranked%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c833a9b4b4a3dea011155926d3b9d2a26bfd4ae1/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fhigher_ranked%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fhigher_ranked%2Fmod.rs?ref=c833a9b4b4a3dea011155926d3b9d2a26bfd4ae1", "patch": "@@ -58,14 +58,11 @@ impl<'a, 'tcx> CombineFields<'a, 'tcx> {\n }\n \n impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n-    /// Replaces all regions (resp. types) bound by `binder` with placeholder\n-    /// regions (resp. types) and return a map indicating which bound-region\n-    /// placeholder region. This is the first step of checking subtyping\n-    /// when higher-ranked things are involved.\n+    /// Replaces all bound variables (lifetimes, types, and constants) bound by\n+    /// `binder` with placeholder variables.\n     ///\n-    /// **Important:** You have to be careful to not leak these placeholders,\n-    /// for more information about how placeholders and HRTBs work, see\n-    /// the [rustc dev guide].\n+    /// This is the first step of checking subtyping when higher-ranked things are involved.\n+    /// For more details visit the relevant sections of the [rustc dev guide].\n     ///\n     /// [rustc dev guide]: https://rustc-dev-guide.rust-lang.org/traits/hrtb.html\n     pub fn replace_bound_vars_with_placeholders<T>(&self, binder: ty::Binder<'tcx, T>) -> T"}]}