{"sha": "e5ba80a87c54ab7770d9c300dacd0976f74e563e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1YmE4MGE4N2M1NGFiNzc3MGQ5YzMwMGRhY2QwOTc2Zjc0ZTU2M2U=", "commit": {"author": {"name": "newpavlov", "email": "newpavlov@gmail.com", "date": "2019-08-19T12:36:30Z"}, "committer": {"name": "newpavlov", "email": "newpavlov@gmail.com", "date": "2019-08-19T12:36:30Z"}, "message": "use const", "tree": {"sha": "aabd2b753140e7a6717e7a29dd79d69f8cc191ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aabd2b753140e7a6717e7a29dd79d69f8cc191ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5ba80a87c54ab7770d9c300dacd0976f74e563e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5ba80a87c54ab7770d9c300dacd0976f74e563e", "html_url": "https://github.com/rust-lang/rust/commit/e5ba80a87c54ab7770d9c300dacd0976f74e563e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5ba80a87c54ab7770d9c300dacd0976f74e563e/comments", "author": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7658a13c650e3dd931250f6039c4f12bcc77534f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7658a13c650e3dd931250f6039c4f12bcc77534f", "html_url": "https://github.com/rust-lang/rust/commit/7658a13c650e3dd931250f6039c4f12bcc77534f"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "a6c8f2487013bf99efa15734af91bf6857605184", "filename": "src/libstd/sys/wasi/thread.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e5ba80a87c54ab7770d9c300dacd0976f74e563e/src%2Flibstd%2Fsys%2Fwasi%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ba80a87c54ab7770d9c300dacd0976f74e563e/src%2Flibstd%2Fsys%2Fwasi%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Fthread.rs?ref=e5ba80a87c54ab7770d9c300dacd0976f74e563e", "patch": "@@ -30,8 +30,10 @@ impl Thread {\n         let nanos = dur.as_nanos();\n         assert!(nanos <= u64::max_value() as u128);\n \n+        const CLOCK_ID: wasi::Userdata = 0x0123_45678;\n+\n         let clock = wasi::raw::__wasi_subscription_u_clock_t {\n-            identifier: 0x0123_45678,\n+            identifier: CLOCK_ID,\n             clock_id: wasi::CLOCK_MONOTONIC,\n             timeout: nanos as u64,\n             precision: 0,\n@@ -47,7 +49,7 @@ impl Thread {\n         let n = wasi::poll_oneoff(&in_, &mut out).unwrap();\n         let wasi::Event { userdata, error, type_, .. } = out[0];\n         match (n, userdata, error) {\n-            (1, 0x0123_45678, 0) if type_ == wasi::EVENTTYPE_CLOCK => {}\n+            (1, CLOCK_ID, 0) if type_ == wasi::EVENTTYPE_CLOCK => {}\n             _ => panic!(\"thread::sleep(): unexpected result of poll_oneoff\"),\n         }\n     }"}]}