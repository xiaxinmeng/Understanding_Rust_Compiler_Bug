{"sha": "2836e5541ae611483dd65d07956d5413fb5bae11", "node_id": "C_kwDOAAsO6NoAKDI4MzZlNTU0MWFlNjExNDgzZGQ2NWQwNzk1NmQ1NDEzZmI1YmFlMTE", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@fb.com", "date": "2022-11-17T23:40:46Z"}, "committer": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2023-05-20T22:12:54Z"}, "message": "Update documentation for `drop_in_place()`", "tree": {"sha": "7ee0aa6da9bc46cda61779e3fc86085f81ec589f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ee0aa6da9bc46cda61779e3fc86085f81ec589f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2836e5541ae611483dd65d07956d5413fb5bae11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2836e5541ae611483dd65d07956d5413fb5bae11", "html_url": "https://github.com/rust-lang/rust/commit/2836e5541ae611483dd65d07956d5413fb5bae11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2836e5541ae611483dd65d07956d5413fb5bae11/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21b8815b6cd74d307ebbdef7cf8c6de6b486c706", "url": "https://api.github.com/repos/rust-lang/rust/commits/21b8815b6cd74d307ebbdef7cf8c6de6b486c706", "html_url": "https://github.com/rust-lang/rust/commit/21b8815b6cd74d307ebbdef7cf8c6de6b486c706"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "7245feed672da713b423cb4090f2e92cee93e5cb", "filename": "library/core/src/ptr/mod.rs", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2836e5541ae611483dd65d07956d5413fb5bae11/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2836e5541ae611483dd65d07956d5413fb5bae11/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs?ref=2836e5541ae611483dd65d07956d5413fb5bae11", "patch": "@@ -437,23 +437,41 @@ mod mut_ptr;\n ///\n /// # Safety\n ///\n-/// Behavior is undefined if any of the following conditions are violated:\n+/// Immediately upon executing, `drop_in_place` takes out a mutable borrow on the\n+/// pointed-to-value. Effectively, this function is implemented like so:\n+///\n+/// ```\n+/// # struct Foo { x: i32 }\n+/// fn drop_in_place(to_drop: *mut Foo) {\n+///     let mut value = &mut *to_drop;\n+///     // ... drop the fields of `value` ...\n+/// }\n+/// ```\n+///\n+/// This implies that the behavior is undefined if any of the following\n+/// conditions are violated:\n ///\n /// * `to_drop` must be [valid] for both reads and writes.\n ///\n-/// * `to_drop` must be properly aligned.\n+/// * `to_drop` must be properly aligned, even if T has size 0.\n+///\n+/// * `to_drop` must be nonnull, even if T has size 0.\n+///\n+/// * The value `to_drop` points to must be valid for dropping, which may mean\n+///   it must uphold additional invariants. These invariants depend on the type\n+///   of the value being dropped. For instance, when dropping a Box, the box's\n+///   pointer to the heap must be valid.\n ///\n-/// * The value `to_drop` points to must be valid for dropping, which may mean it must uphold\n-///   additional invariants - this is type-dependent.\n+/// * While `drop_in_place` is executing, the only way to access parts of\n+///   `to_drop` is through the `&mut self` references supplied to the\n+///   `Drop::drop` methods that `drop_in_place` invokes.\n ///\n /// Additionally, if `T` is not [`Copy`], using the pointed-to value after\n /// calling `drop_in_place` can cause undefined behavior. Note that `*to_drop =\n /// foo` counts as a use because it will cause the value to be dropped\n /// again. [`write()`] can be used to overwrite data without causing it to be\n /// dropped.\n ///\n-/// Note that even if `T` has size `0`, the pointer must be non-null and properly aligned.\n-///\n /// [valid]: self#safety\n ///\n /// # Examples"}]}