{"sha": "36fd00e81cd4af2c83839f0c0b96dc20663710c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2ZmQwMGU4MWNkNGFmMmM4MzgzOWYwYzBiOTZkYzIwNjYzNzEwYzU=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-05-13T20:57:20Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-05-13T20:57:20Z"}, "message": "Allow late bound regions in existential types", "tree": {"sha": "c7f99803eec4de638df8bb7804b9272ea172ef71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7f99803eec4de638df8bb7804b9272ea172ef71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36fd00e81cd4af2c83839f0c0b96dc20663710c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36fd00e81cd4af2c83839f0c0b96dc20663710c5", "html_url": "https://github.com/rust-lang/rust/commit/36fd00e81cd4af2c83839f0c0b96dc20663710c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36fd00e81cd4af2c83839f0c0b96dc20663710c5/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9ec99f4201ec33026a468ef1289f98a95b4d71a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9ec99f4201ec33026a468ef1289f98a95b4d71a", "html_url": "https://github.com/rust-lang/rust/commit/a9ec99f4201ec33026a468ef1289f98a95b4d71a"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "13baf667808f817293c72f6f13ed44dac147ae29", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/36fd00e81cd4af2c83839f0c0b96dc20663710c5/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36fd00e81cd4af2c83839f0c0b96dc20663710c5/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=36fd00e81cd4af2c83839f0c0b96dc20663710c5", "patch": "@@ -466,6 +466,8 @@ impl<'cx, 'gcx, 'tcx> WritebackCx<'cx, 'gcx, 'tcx> {\n             let hir_id = self.tcx().hir().as_local_hir_id(def_id).unwrap();\n             let instantiated_ty = self.resolve(&opaque_defn.concrete_ty, &hir_id);\n \n+            debug_assert!(!instantiated_ty.has_escaping_bound_vars());\n+\n             let generics = self.tcx().generics_of(def_id);\n \n             let definition_ty = if generics.parent.is_some() {\n@@ -524,8 +526,9 @@ impl<'cx, 'gcx, 'tcx> WritebackCx<'cx, 'gcx, 'tcx> {\n                     },\n                     lt_op: |region| {\n                         match region {\n-                            // ignore static regions\n-                            ty::ReStatic => region,\n+                            // Skip static and bound regions: they don't\n+                            // require substitution.\n+                            ty::ReStatic | ty::ReLateBound(..) => region,\n                             _ => {\n                                 trace!(\"checking {:?}\", region);\n                                 for (subst, p) in opaque_defn.substs.iter().zip(&generics.params) {"}, {"sha": "a4fe86501299fc80009856d93a13e32fe2c8ef3e", "filename": "src/test/ui/existential_types/issue-60655-latebound-regions.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/36fd00e81cd4af2c83839f0c0b96dc20663710c5/src%2Ftest%2Fui%2Fexistential_types%2Fissue-60655-latebound-regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36fd00e81cd4af2c83839f0c0b96dc20663710c5/src%2Ftest%2Fui%2Fexistential_types%2Fissue-60655-latebound-regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fissue-60655-latebound-regions.rs?ref=36fd00e81cd4af2c83839f0c0b96dc20663710c5", "patch": "@@ -0,0 +1,30 @@\n+// Test that existential types are allowed to contain late-bound regions.\n+\n+// compile-pass\n+// edition:2018\n+\n+#![feature(async_await, existential_type)]\n+\n+use std::future::Future;\n+\n+pub existential type Func: Sized;\n+\n+// Late bound region should be allowed to escape the function, since it's bound\n+// in the type.\n+fn null_function_ptr() -> Func {\n+    None::<for<'a> fn(&'a ())>\n+}\n+\n+async fn async_nop(_: &u8) {}\n+\n+pub existential type ServeFut: Future<Output=()>;\n+\n+// Late bound regions occur in the generator witness type here.\n+fn serve() -> ServeFut {\n+    async move {\n+        let x = 5;\n+        async_nop(&x).await\n+    }\n+}\n+\n+fn main() {}"}]}