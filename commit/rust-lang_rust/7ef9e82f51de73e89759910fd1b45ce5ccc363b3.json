{"sha": "7ef9e82f51de73e89759910fd1b45ce5ccc363b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlZjllODJmNTFkZTczZTg5NzU5OTEwZmQxYjQ1Y2U1Y2NjMzYzYjM=", "commit": {"author": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-07-26T04:27:28Z"}, "committer": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-07-26T04:27:28Z"}, "message": "Don't write to NULL after calling C natives returning void.", "tree": {"sha": "6a5575cb416ae20feaa18a4cf642c176eebf0389", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a5575cb416ae20feaa18a4cf642c176eebf0389"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ef9e82f51de73e89759910fd1b45ce5ccc363b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ef9e82f51de73e89759910fd1b45ce5ccc363b3", "html_url": "https://github.com/rust-lang/rust/commit/7ef9e82f51de73e89759910fd1b45ce5ccc363b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ef9e82f51de73e89759910fd1b45ce5ccc363b3/comments", "author": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ce18d88c5d172340050c6603c14835a3a8530b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ce18d88c5d172340050c6603c14835a3a8530b7", "html_url": "https://github.com/rust-lang/rust/commit/3ce18d88c5d172340050c6603c14835a3a8530b7"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "975ff0324ba3e025a81eb805469fc9bc928c6a72", "filename": "src/boot/be/abi.ml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ef9e82f51de73e89759910fd1b45ce5ccc363b3/src%2Fboot%2Fbe%2Fabi.ml", "raw_url": "https://github.com/rust-lang/rust/raw/7ef9e82f51de73e89759910fd1b45ce5ccc363b3/src%2Fboot%2Fbe%2Fabi.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fbe%2Fabi.ml?ref=7ef9e82f51de73e89759910fd1b45ce5ccc363b3", "patch": "@@ -149,7 +149,7 @@ type abi =\n                                       -> unit);\n \n     abi_emit_native_call_in_thunk: (Il.emitter\n-                                    -> Il.cell                (* ret    *)\n+                                    -> Il.cell option         (* ret    *)\n                                       -> Common.nabi\n                                         -> Il.operand         (* callee *)\n                                           -> Il.operand array (* args   *)"}, {"sha": "0d0206d7fc4377fe3cd0a2ba0e5338b4cbb2a27d", "filename": "src/boot/be/x86.ml", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7ef9e82f51de73e89759910fd1b45ce5ccc363b3/src%2Fboot%2Fbe%2Fx86.ml", "raw_url": "https://github.com/rust-lang/rust/raw/7ef9e82f51de73e89759910fd1b45ce5ccc363b3/src%2Fboot%2Fbe%2Fx86.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fbe%2Fx86.ml?ref=7ef9e82f51de73e89759910fd1b45ce5ccc363b3", "patch": "@@ -700,7 +700,7 @@ let emit_native_void_call\n \n let emit_native_call_in_thunk\n     (e:Il.emitter)\n-    (ret:Il.cell)\n+    (ret:Il.cell option)\n     (nabi:nabi)\n     (fn:Il.operand)\n     (args:Il.operand array)\n@@ -734,9 +734,12 @@ let emit_native_call_in_thunk\n     end;\n \n     match ret with\n-        Il.Reg (r, _) -> mov (word_at r) (ro eax)\n-      | _ -> mov (rc edx) (c ret);\n+        Some (Il.Reg (r, _)) ->\n+          mov (word_at r) (ro eax)\n+      | Some ret ->\n+          mov (rc edx) (c ret);\n           mov (word_at (h edx)) (ro eax)\n+      | _ -> ()\n ;;\n \n "}, {"sha": "832ccd1f90e2e06d7e78febccb2f60f33d5de5dd", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7ef9e82f51de73e89759910fd1b45ce5ccc363b3/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/7ef9e82f51de73e89759910fd1b45ce5ccc363b3/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=7ef9e82f51de73e89759910fd1b45ce5ccc363b3", "patch": "@@ -4998,8 +4998,12 @@ let trans_visitor\n                        libstr;\n                        symstr |];\n \n-                  abi.Abi.abi_emit_native_call_in_thunk (emitter())\n-                    out nabi (Il.Cell f) args;\n+                  abi.Abi.abi_emit_native_call_in_thunk\n+                    (emitter())\n+                    (if pointee_type out = Il.NilTy then None else Some out)\n+                    nabi\n+                    (Il.Cell f)\n+                    args;\n               end\n \n           | _ -> bug ()"}]}