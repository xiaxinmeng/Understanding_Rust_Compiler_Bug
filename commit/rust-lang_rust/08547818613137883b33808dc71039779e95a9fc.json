{"sha": "08547818613137883b33808dc71039779e95a9fc", "node_id": "C_kwDOAAsO6NoAKDA4NTQ3ODE4NjEzMTM3ODgzYjMzODA4ZGM3MTAzOTc3OWU5NWE5ZmM", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-03T19:46:29Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-03T19:46:29Z"}, "message": "CTFE SwitchInt: update comment", "tree": {"sha": "faf9ee403eb71d6bb99fe61d6a6112f1f9a48146", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faf9ee403eb71d6bb99fe61d6a6112f1f9a48146"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08547818613137883b33808dc71039779e95a9fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08547818613137883b33808dc71039779e95a9fc", "html_url": "https://github.com/rust-lang/rust/commit/08547818613137883b33808dc71039779e95a9fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08547818613137883b33808dc71039779e95a9fc/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32cbc7630b2d6b7141e2588f91380c1a58cf0016", "url": "https://api.github.com/repos/rust-lang/rust/commits/32cbc7630b2d6b7141e2588f91380c1a58cf0016", "html_url": "https://github.com/rust-lang/rust/commit/32cbc7630b2d6b7141e2588f91380c1a58cf0016"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "d2fbd6a9654f90d66c20ab41cd0d6e047b687acc", "filename": "compiler/rustc_const_eval/src/interpret/terminator.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/08547818613137883b33808dc71039779e95a9fc/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08547818613137883b33808dc71039779e95a9fc/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs?ref=08547818613137883b33808dc71039779e95a9fc", "patch": "@@ -39,7 +39,8 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 let mut target_block = targets.otherwise();\n \n                 for (const_int, target) in targets.iter() {\n-                    // Compare using binary_op, to also support pointer values\n+                    // Compare using MIR BinOp::Eq, to also support pointer values.\n+                    // (Avoiding `self.binary_op` as that does some redundant layout computation.)\n                     let res = self\n                         .overflowing_binary_op(\n                             mir::BinOp::Eq,"}]}