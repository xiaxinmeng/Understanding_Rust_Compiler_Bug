{"sha": "92dd526a4e8633b95754e2a8e2ef7169c30706f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyZGQ1MjZhNGU4NjMzYjk1NzU0ZTJhOGUyZWY3MTY5YzMwNzA2ZjY=", "commit": {"author": {"name": "Tim", "email": "t.diekmann.3dv@gmail.com", "date": "2018-09-06T11:54:27Z"}, "committer": {"name": "Tim", "email": "t.diekmann.3dv@gmail.com", "date": "2018-09-06T11:54:27Z"}, "message": "Move check out of the match on the intrinsic name", "tree": {"sha": "23676b6c316eb40e3a6025f6a1fb7fb5e36bdb2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23676b6c316eb40e3a6025f6a1fb7fb5e36bdb2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92dd526a4e8633b95754e2a8e2ef7169c30706f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92dd526a4e8633b95754e2a8e2ef7169c30706f6", "html_url": "https://github.com/rust-lang/rust/commit/92dd526a4e8633b95754e2a8e2ef7169c30706f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92dd526a4e8633b95754e2a8e2ef7169c30706f6/comments", "author": null, "committer": null, "parents": [{"sha": "58af73c370df9074961ee78dc9263f60afe0c9af", "url": "https://api.github.com/repos/rust-lang/rust/commits/58af73c370df9074961ee78dc9263f60afe0c9af", "html_url": "https://github.com/rust-lang/rust/commit/58af73c370df9074961ee78dc9263f60afe0c9af"}], "stats": {"total": 23, "additions": 7, "deletions": 16}, "files": [{"sha": "8637903bd71d534688e02290f7fa52c7c921c0b0", "filename": "src/librustc_mir/interpret/intrinsics.rs", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/92dd526a4e8633b95754e2a8e2ef7169c30706f6/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92dd526a4e8633b95754e2a8e2ef7169c30706f6/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs?ref=92dd526a4e8633b95754e2a8e2ef7169c30706f6", "patch": "@@ -132,23 +132,14 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n                 let r_ty = substs.type_at(0);\n                 let r_layout_of = self.layout_of(r_ty)?;\n                 let r_val =  r.to_scalar()?.to_bits(r_layout_of.size)?;\n+                if r_val >= bits {\n+                    return err!(Intrinsic(\n+                        format!(\"Overflowing shift by {} in {}\", r_val, intrinsic_name),\n+                    ));\n+                }\n                 let bin_op = match intrinsic_name {\n-                    \"unchecked_shl\" => {\n-                        if r_val >= bits {\n-                            return err!(Intrinsic(\n-                                format!(\"Overflowing shift by {} in unchecked_shl\", r_val),\n-                            ));\n-                        }\n-                        BinOp::Shl\n-                    },\n-                    \"unchecked_shr\" => {\n-                        if r_val >= bits {\n-                            return err!(Intrinsic(\n-                                format!(\"Overflowing shift by {} in unchecked_shr\", r_val),\n-                            ));\n-                        }\n-                        BinOp::Shr\n-                    },\n+                    \"unchecked_shl\" => BinOp::Shl,\n+                    \"unchecked_shr\" => BinOp::Shr,\n                     _ => bug!(\"Already checked for int ops\")\n                 };\n                 self.binop_ignore_overflow(bin_op, l, r, dest)?;"}]}