{"sha": "993d02283ec9802ad413069dcdbbf9ef464b636e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5M2QwMjI4M2VjOTgwMmFkNDEzMDY5ZGNkYmJmOWVmNDY0YjYzNmU=", "commit": {"author": {"name": "Colin Walters", "email": "walters@verbum.org", "date": "2018-09-18T01:10:36Z"}, "committer": {"name": "Colin Walters", "email": "walters@verbum.org", "date": "2018-09-18T01:10:36Z"}, "message": "OsStr: Document that it's not NUL terminated\n\nI somehow got confused into thinking this was the case, but\nit's definitely not.  Let's help the common case of people who\nhave an `OsStr` and need to call e.g. Unix APIs.", "tree": {"sha": "0f4370bd417a87c03f592766163d7aeb48343e21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f4370bd417a87c03f592766163d7aeb48343e21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/993d02283ec9802ad413069dcdbbf9ef464b636e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/993d02283ec9802ad413069dcdbbf9ef464b636e", "html_url": "https://github.com/rust-lang/rust/commit/993d02283ec9802ad413069dcdbbf9ef464b636e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/993d02283ec9802ad413069dcdbbf9ef464b636e/comments", "author": {"login": "cgwalters", "id": 244096, "node_id": "MDQ6VXNlcjI0NDA5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/244096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgwalters", "html_url": "https://github.com/cgwalters", "followers_url": "https://api.github.com/users/cgwalters/followers", "following_url": "https://api.github.com/users/cgwalters/following{/other_user}", "gists_url": "https://api.github.com/users/cgwalters/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgwalters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgwalters/subscriptions", "organizations_url": "https://api.github.com/users/cgwalters/orgs", "repos_url": "https://api.github.com/users/cgwalters/repos", "events_url": "https://api.github.com/users/cgwalters/events{/privacy}", "received_events_url": "https://api.github.com/users/cgwalters/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cgwalters", "id": 244096, "node_id": "MDQ6VXNlcjI0NDA5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/244096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgwalters", "html_url": "https://github.com/cgwalters", "followers_url": "https://api.github.com/users/cgwalters/followers", "following_url": "https://api.github.com/users/cgwalters/following{/other_user}", "gists_url": "https://api.github.com/users/cgwalters/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgwalters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgwalters/subscriptions", "organizations_url": "https://api.github.com/users/cgwalters/orgs", "repos_url": "https://api.github.com/users/cgwalters/repos", "events_url": "https://api.github.com/users/cgwalters/events{/privacy}", "received_events_url": "https://api.github.com/users/cgwalters/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "186fe091434b4c20c160b8098a56bb6a841bf6b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/186fe091434b4c20c160b8098a56bb6a841bf6b1", "html_url": "https://github.com/rust-lang/rust/commit/186fe091434b4c20c160b8098a56bb6a841bf6b1"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "e9390630445a106fbf878479492c212778880e5f", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/993d02283ec9802ad413069dcdbbf9ef464b636e/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/993d02283ec9802ad413069dcdbbf9ef464b636e/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=993d02283ec9802ad413069dcdbbf9ef464b636e", "patch": "@@ -34,7 +34,9 @@ use sys_common::{AsInner, IntoInner, FromInner};\n ///\n /// `OsString` and [`OsStr`] bridge this gap by simultaneously representing Rust\n /// and platform-native string values, and in particular allowing a Rust string\n-/// to be converted into an \"OS\" string with no cost if possible.\n+/// to be converted into an \"OS\" string with no cost if possible.  A consequence\n+/// of this is that `OsString` instances are *not* `NUL` terminated; in order\n+/// to pass to e.g. Unix system call, you should create a [`CStr`].\n ///\n /// `OsString` is to [`&OsStr`] as [`String`] is to [`&str`]: the former\n /// in each pair are owned strings; the latter are borrowed\n@@ -65,6 +67,7 @@ use sys_common::{AsInner, IntoInner, FromInner};\n ///\n /// [`OsStr`]: struct.OsStr.html\n /// [`&OsStr`]: struct.OsStr.html\n+/// [`CStr`]: struct.CStr.html\n /// [`From`]: ../convert/trait.From.html\n /// [`String`]: ../string/struct.String.html\n /// [`&str`]: ../primitive.str.html"}]}