{"sha": "377316d8f607aeb4dda448abb14c8169adfba770", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3NzMxNmQ4ZjYwN2FlYjRkZGE0NDhhYmIxNGM4MTY5YWRmYmE3NzA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-15T22:39:09Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-16T09:07:41Z"}, "message": "rustdoc: Add parse::from_str for testing purposes", "tree": {"sha": "abc181ce7534898ab5145f14ab5d4d6c93a305a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abc181ce7534898ab5145f14ab5d4d6c93a305a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/377316d8f607aeb4dda448abb14c8169adfba770", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/377316d8f607aeb4dda448abb14c8169adfba770", "html_url": "https://github.com/rust-lang/rust/commit/377316d8f607aeb4dda448abb14c8169adfba770", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/377316d8f607aeb4dda448abb14c8169adfba770/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e65ddfaea1c25c0fb2f20a2d28ed782c1dff369", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e65ddfaea1c25c0fb2f20a2d28ed782c1dff369", "html_url": "https://github.com/rust-lang/rust/commit/0e65ddfaea1c25c0fb2f20a2d28ed782c1dff369"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "c71b3493e25140a9fea13e52f697632d22bfac24", "filename": "src/rustdoc/rustdoc.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/377316d8f607aeb4dda448abb14c8169adfba770/src%2Frustdoc%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377316d8f607aeb4dda448abb14c8169adfba770/src%2Frustdoc%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rs?ref=377316d8f607aeb4dda448abb14c8169adfba770", "patch": "@@ -178,14 +178,26 @@ fn doc_header(rd: rustdoc, name: str) {\n }\n \n mod parse {\n-    fn from_file(file: str) -> @ast::crate {\n+    export from_file, from_str;\n+\n+    fn new_parse_sess() -> parser::parse_sess {\n         let cm = codemap::new_codemap();\n         let sess = @{\n             cm: cm,\n             mutable next_id: 0,\n             diagnostic: diagnostic::mk_handler(cm, none)\n         };\n-        parser::parse_crate_from_source_file(file, [], sess)\n+        ret sess;\n+    }\n+\n+    fn from_file(file: str) -> @ast::crate {\n+        parser::parse_crate_from_source_file(\n+            file, [], new_parse_sess())\n+    }\n+\n+    fn from_str(source: str) -> @ast::crate {\n+        parser::parse_crate_from_source_str(\n+            \"-\", source, [], new_parse_sess())\n     }\n }\n "}]}