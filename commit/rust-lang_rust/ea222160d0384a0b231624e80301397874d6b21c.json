{"sha": "ea222160d0384a0b231624e80301397874d6b21c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhMjIyMTYwZDAzODRhMGIyMzE2MjRlODAzMDEzOTc4NzRkNmIyMWM=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-08-17T12:24:08Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-08-17T12:24:19Z"}, "message": "Use respan()", "tree": {"sha": "8a1d931b7b0d42801552a5214cc1f51b1c396ee9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a1d931b7b0d42801552a5214cc1f51b1c396ee9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea222160d0384a0b231624e80301397874d6b21c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea222160d0384a0b231624e80301397874d6b21c", "html_url": "https://github.com/rust-lang/rust/commit/ea222160d0384a0b231624e80301397874d6b21c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea222160d0384a0b231624e80301397874d6b21c/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ac979d8cbe97241fd39f4037e1d4069caaff4d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ac979d8cbe97241fd39f4037e1d4069caaff4d2", "html_url": "https://github.com/rust-lang/rust/commit/7ac979d8cbe97241fd39f4037e1d4069caaff4d2"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "bca662c33638fd21d84900134bb8d730b42522ac", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea222160d0384a0b231624e80301397874d6b21c/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea222160d0384a0b231624e80301397874d6b21c/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=ea222160d0384a0b231624e80301397874d6b21c", "patch": "@@ -1130,7 +1130,7 @@ impl MetaItemKind {\n         let mut result = Vec::new();\n         while let Some(..) = tokens.peek() {\n             match NestedMetaItemKind::from_tokens(&mut tokens) {\n-                Some(item) => result.push(Spanned { span: item.span(), node: item }),\n+                Some(item) => result.push(respan(item.span(), item)),\n                 None => return None,\n             }\n             match tokens.next() {\n@@ -1163,7 +1163,7 @@ impl NestedMetaItemKind {\n         if let Some(TokenTree::Token(span, token)) = tokens.peek().cloned() {\n             if let Some(node) = LitKind::from_token(token) {\n                 tokens.next();\n-                return Some(NestedMetaItemKind::Literal(Spanned { node: node, span: span }));\n+                return Some(NestedMetaItemKind::Literal(respan(span, node)));\n             }\n         }\n \n@@ -1256,7 +1256,7 @@ pub trait HasAttrs: Sized {\n impl<T: HasAttrs> HasAttrs for Spanned<T> {\n     fn attrs(&self) -> &[ast::Attribute] { self.node.attrs() }\n     fn map_attrs<F: FnOnce(Vec<ast::Attribute>) -> Vec<ast::Attribute>>(self, f: F) -> Self {\n-        Spanned { node: self.node.map_attrs(f), span: self.span }\n+        respan(self.span, self.node.map_attrs(f))\n     }\n }\n "}]}