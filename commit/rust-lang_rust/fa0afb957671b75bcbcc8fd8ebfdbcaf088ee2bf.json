{"sha": "fa0afb957671b75bcbcc8fd8ebfdbcaf088ee2bf", "node_id": "C_kwDOAAsO6NoAKGZhMGFmYjk1NzY3MWI3NWJjYmNjOGZkOGViZmRiY2FmMDg4ZWUyYmY", "commit": {"author": {"name": "Jeroen Vannevel", "email": "jer_vannevel@outlook.com", "date": "2022-01-05T01:36:04Z"}, "committer": {"name": "Jeroen Vannevel", "email": "jer_vannevel@outlook.com", "date": "2022-01-05T01:36:04Z"}, "message": "additional test for a reference local (on top of mutable reference local)", "tree": {"sha": "27337b4ceab3f4a072051dc1661ce82ad7258dde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27337b4ceab3f4a072051dc1661ce82ad7258dde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa0afb957671b75bcbcc8fd8ebfdbcaf088ee2bf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEEzoFOOQgvfPzrDpfeO9fUvOMSb0FAmHU9gQACgkQeO9fUvOM\nSb31uQv/arQQOsmgJfiJUH/UQgXbUkOGjyCxdTaHe6ln2StxbTM5SXxIRLmuwvJq\n2pPnKJ8PjJfjrSlRDuf1kOWNwecppVjGTnAyubJKJUdZ3mCCusDe9mF42HLNbgNN\nROEUdR+9dS6aDOj3ejQ8XmBxl+BHNb/kYC/ohV7yHkOszLtC74f0RLMpYx/05NI3\n87kT5+8R7W25lQXPVFf066utD6EtdzSYWsSBg9SVkzOhZhKaSj1B7BxhlRwqeLdD\nqDBiMOL1u2QZd11koeyV1ym3XLNSBc9oGSOfhZXyuRVUc+RlGcE8t/6OASBVjYel\nAC39WGrOMMStheNybPurQ7Pi7Ib4WSeZ0H78wLI9tPB0F2im49fuxizz6nahcVVG\n44vCR8jmyYuygzyv5qthUaJbtqZ8ZMpVaLQf7A6RItQOpmni5Iw7fAUQ0jvNi5p3\nr7ZPkVVCbSY60gQ4h6SoUWGmkyFG/vyQnQyUkTslqqcsmuVfTC4sVmmcsVtBbBqV\nfTLkq3Nx\n=+aXJ\n-----END PGP SIGNATURE-----", "payload": "tree 27337b4ceab3f4a072051dc1661ce82ad7258dde\nparent 4c1a1b2570e5d60b49259bea261f7db16ceb627a\nauthor Jeroen Vannevel <jer_vannevel@outlook.com> 1641346564 +0000\ncommitter Jeroen Vannevel <jer_vannevel@outlook.com> 1641346564 +0000\n\nadditional test for a reference local (on top of mutable reference local)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa0afb957671b75bcbcc8fd8ebfdbcaf088ee2bf", "html_url": "https://github.com/rust-lang/rust/commit/fa0afb957671b75bcbcc8fd8ebfdbcaf088ee2bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa0afb957671b75bcbcc8fd8ebfdbcaf088ee2bf/comments", "author": {"login": "Vannevelj", "id": 2777107, "node_id": "MDQ6VXNlcjI3NzcxMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2777107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vannevelj", "html_url": "https://github.com/Vannevelj", "followers_url": "https://api.github.com/users/Vannevelj/followers", "following_url": "https://api.github.com/users/Vannevelj/following{/other_user}", "gists_url": "https://api.github.com/users/Vannevelj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vannevelj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vannevelj/subscriptions", "organizations_url": "https://api.github.com/users/Vannevelj/orgs", "repos_url": "https://api.github.com/users/Vannevelj/repos", "events_url": "https://api.github.com/users/Vannevelj/events{/privacy}", "received_events_url": "https://api.github.com/users/Vannevelj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Vannevelj", "id": 2777107, "node_id": "MDQ6VXNlcjI3NzcxMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2777107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vannevelj", "html_url": "https://github.com/Vannevelj", "followers_url": "https://api.github.com/users/Vannevelj/followers", "following_url": "https://api.github.com/users/Vannevelj/following{/other_user}", "gists_url": "https://api.github.com/users/Vannevelj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vannevelj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vannevelj/subscriptions", "organizations_url": "https://api.github.com/users/Vannevelj/orgs", "repos_url": "https://api.github.com/users/Vannevelj/repos", "events_url": "https://api.github.com/users/Vannevelj/events{/privacy}", "received_events_url": "https://api.github.com/users/Vannevelj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c1a1b2570e5d60b49259bea261f7db16ceb627a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c1a1b2570e5d60b49259bea261f7db16ceb627a", "html_url": "https://github.com/rust-lang/rust/commit/4c1a1b2570e5d60b49259bea261f7db16ceb627a"}], "stats": {"total": 70, "additions": 68, "deletions": 2}, "files": [{"sha": "b498d86fb461ab3cde9f05d98d3df582fe1ca977", "filename": "crates/ide_assists/src/handlers/extract_variable.rs", "status": "modified", "additions": 68, "deletions": 2, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/fa0afb957671b75bcbcc8fd8ebfdbcaf088ee2bf/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa0afb957671b75bcbcc8fd8ebfdbcaf088ee2bf/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs?ref=fa0afb957671b75bcbcc8fd8ebfdbcaf088ee2bf", "patch": "@@ -1139,7 +1139,7 @@ fn foo(s: S) {\n     }\n \n     #[test]\n-    fn test_extract_var_reference_local() {\n+    fn test_extract_var_mutable_reference_local() {\n         check_assist(\n             extract_variable,\n             r#\"\n@@ -1198,7 +1198,73 @@ impl X {\n \n fn foo() {\n     let local = &mut S::new();\n-    let $0x = local.sub;\n+    let $0x = &mut local.sub;\n+    x.do_thing();\n+}\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_extract_var_reference_local() {\n+        check_assist(\n+            extract_variable,\n+            r#\"\n+struct X;\n+\n+struct S {\n+    sub: X\n+}\n+\n+impl S {\n+    fn new() -> S {\n+        S { \n+            sub: X::new()\n+        }\n+    }\n+}\n+\n+impl X {\n+    fn new() -> X {\n+        X { }\n+    }\n+    fn do_thing(&self) {\n+\n+    }\n+}\n+\n+\n+fn foo() {\n+    let local = &S::new();\n+    $0local.sub$0.do_thing();\n+}\"#,\n+            r#\"\n+struct X;\n+\n+struct S {\n+    sub: X\n+}\n+\n+impl S {\n+    fn new() -> S {\n+        S { \n+            sub: X::new()\n+        }\n+    }\n+}\n+\n+impl X {\n+    fn new() -> X {\n+        X { }\n+    }\n+    fn do_thing(&self) {\n+\n+    }\n+}\n+\n+\n+fn foo() {\n+    let local = &S::new();\n+    let $0x = &local.sub;\n     x.do_thing();\n }\"#,\n         );"}]}