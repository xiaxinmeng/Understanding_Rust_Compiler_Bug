{"sha": "1a8b8cd28f3e452a1c4bfc2208ada1a2f4a0ebda", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhOGI4Y2QyOGYzZTQ1MmExYzRiZmMyMjA4YWRhMWEyZjRhMGViZGE=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-07T17:28:37Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-09T20:22:30Z"}, "message": "Don\u2019t use `{:?}` and use span_suggestion in TOPLEVEL_REF_ARG", "tree": {"sha": "422c7983adf4d561dc1096659e5fbeeacbdeb792", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/422c7983adf4d561dc1096659e5fbeeacbdeb792"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a8b8cd28f3e452a1c4bfc2208ada1a2f4a0ebda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a8b8cd28f3e452a1c4bfc2208ada1a2f4a0ebda", "html_url": "https://github.com/rust-lang/rust/commit/1a8b8cd28f3e452a1c4bfc2208ada1a2f4a0ebda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a8b8cd28f3e452a1c4bfc2208ada1a2f4a0ebda/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d27aa960b605f69a22b83917ba3830bd2d5690ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/d27aa960b605f69a22b83917ba3830bd2d5690ec", "html_url": "https://github.com/rust-lang/rust/commit/d27aa960b605f69a22b83917ba3830bd2d5690ec"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "f570c18b7429013070398fe7ff7df7855111cd40", "filename": "src/misc.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1a8b8cd28f3e452a1c4bfc2208ada1a2f4a0ebda/src%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a8b8cd28f3e452a1c4bfc2208ada1a2f4a0ebda/src%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmisc.rs?ref=1a8b8cd28f3e452a1c4bfc2208ada1a2f4a0ebda", "patch": "@@ -11,7 +11,7 @@ use rustc::middle::const_eval::eval_const_expr_partial;\n use rustc::middle::const_eval::EvalHint::ExprTypeChecked;\n \n use utils::{get_item_name, match_path, snippet, get_parent_expr, span_lint};\n-use utils::{span_help_and_lint, walk_ptrs_ty, is_integer_literal, implements_trait};\n+use utils::{span_lint_and_then, walk_ptrs_ty, is_integer_literal, implements_trait};\n \n /// **What it does:** This lint checks for function arguments and let bindings denoted as `ref`.\n ///\n@@ -62,16 +62,22 @@ impl LateLintPass for TopLevelRefPass {\n             let Some(ref init) = l.init\n             ], {\n                 let tyopt = if let Some(ref ty) = l.ty {\n-                    format!(\": {:?} \", ty)\n+                    format!(\": {}\", snippet(cx, ty.span, \"_\"))\n                 } else {\n                     \"\".to_owned()\n                 };\n-                span_help_and_lint(cx,\n+                span_lint_and_then(cx,\n                     TOPLEVEL_REF_ARG,\n                     l.pat.span,\n                     \"`ref` on an entire `let` pattern is discouraged, take a reference with & instead\",\n-                    &format!(\"try `let {} {}= &{};`\", snippet(cx, i.span, \"_\"),\n-                             tyopt, snippet(cx, init.span, \"_\"))\n+                    |db| {\n+                        db.span_suggestion(s.span,\n+                                           \"try\",\n+                                           format!(\"let {}{} = &{};\",\n+                                                   snippet(cx, i.span, \"_\"),\n+                                                   tyopt,\n+                                                   snippet(cx, init.span, \"_\")));\n+                    }\n                 );\n             }\n         };"}, {"sha": "de1556ed0e399fca9b9805adfff9fca6792aa41f", "filename": "tests/compile-fail/toplevel_ref_arg.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1a8b8cd28f3e452a1c4bfc2208ada1a2f4a0ebda/tests%2Fcompile-fail%2Ftoplevel_ref_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a8b8cd28f3e452a1c4bfc2208ada1a2f4a0ebda/tests%2Fcompile-fail%2Ftoplevel_ref_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ftoplevel_ref_arg.rs?ref=1a8b8cd28f3e452a1c4bfc2208ada1a2f4a0ebda", "patch": "@@ -15,11 +15,15 @@ fn main() {\n   let y = |ref x| { println!(\"{:?}\", x) };\n   y(1u8);\n \n-  let ref x = 1; //~ ERROR `ref` on an entire `let` pattern is discouraged\n-                 //~^ HELP try `let x = &1;`\n+  let ref x = 1;\n+  //~^ ERROR `ref` on an entire `let` pattern is discouraged\n+  //~| HELP try\n+  //~| SUGGESTION let x = &1;\n \n-  let ref y = (&1, 2); //~ ERROR `ref` on an entire `let` pattern is discouraged\n-                 //~^ HELP try `let y = &(&1, 2);`\n+  let ref y : (&_, u8) = (&1, 2);\n+  //~^ ERROR `ref` on an entire `let` pattern is discouraged\n+  //~| HELP try\n+  //~| SUGGESTION let y: (&_, u8) = &(&1, 2);\n \n   let (ref x, _) = (1,2); // okay, not top level\n   println!(\"The answer is {}.\", x);"}]}