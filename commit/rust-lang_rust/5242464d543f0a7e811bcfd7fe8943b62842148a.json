{"sha": "5242464d543f0a7e811bcfd7fe8943b62842148a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyNDI0NjRkNTQzZjBhN2U4MTFiY2ZkN2ZlODk0M2I2Mjg0MjE0OGE=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-05-18T09:43:14Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-05-18T09:43:14Z"}, "message": "Merge trait and impl macros by using an inner module", "tree": {"sha": "294227b8f5a3017c46fa792c9b7ec5744e98522b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/294227b8f5a3017c46fa792c9b7ec5744e98522b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5242464d543f0a7e811bcfd7fe8943b62842148a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5242464d543f0a7e811bcfd7fe8943b62842148a", "html_url": "https://github.com/rust-lang/rust/commit/5242464d543f0a7e811bcfd7fe8943b62842148a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5242464d543f0a7e811bcfd7fe8943b62842148a/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1eb539e124771a3e7618d9879345ea6a6cf3ed9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1eb539e124771a3e7618d9879345ea6a6cf3ed9", "html_url": "https://github.com/rust-lang/rust/commit/c1eb539e124771a3e7618d9879345ea6a6cf3ed9"}], "stats": {"total": 253, "additions": 124, "deletions": 129}, "files": [{"sha": "1dfdb42c30310be9d6b3cfed96ddbf691d95b618", "filename": "src/libcore/tuple.rs", "status": "modified", "additions": 124, "deletions": 129, "changes": 253, "blob_url": "https://github.com/rust-lang/rust/blob/5242464d543f0a7e811bcfd7fe8943b62842148a/src%2Flibcore%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5242464d543f0a7e811bcfd7fe8943b62842148a/src%2Flibcore%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftuple.rs?ref=5242464d543f0a7e811bcfd7fe8943b62842148a", "patch": "@@ -16,6 +16,8 @@ use vec;\n \n #[cfg(not(test))] use cmp::{Eq, Ord};\n \n+pub use self::getters::*;\n+\n pub trait CopyableTuple<T, U> {\n     fn first(&self) -> T;\n     fn second(&self) -> U;\n@@ -246,152 +248,145 @@ impl<A:Ord,B:Ord,C:Ord> Ord for (A, B, C) {\n     fn gt(&self, other: &(A, B, C)) -> bool { (*other).lt(&(*self))  }\n }\n \n-// Tuple element accessor traits\n+// Tuple element getters\n \n-macro_rules! n_tuple(\n-    ($name:ident: $($method:ident : $T:ident),+) => (\n-        pub trait $name<$($T),+> {\n-            $(fn $method(&self) -> $T;)+\n+macro_rules! tuple_getters(\n+    ($(\n+        $name:ident {\n+            $(fn $method:ident -> $T:ident { $accessor:pat => $t:expr })+\n         }\n-    )\n-)\n-\n-n_tuple!(Tuple2: n0:A, n1:B)\n-n_tuple!(Tuple3: n0:A, n1:B, n2:C)\n-n_tuple!(Tuple4: n0:A, n1:B, n2:C, n3:D)\n-n_tuple!(Tuple5: n0:A, n1:B, n2:C, n3:D, n4:E)\n-n_tuple!(Tuple6: n0:A, n1:B, n2:C, n3:D, n4:E, n5:F)\n-n_tuple!(Tuple7: n0:A, n1:B, n2:C, n3:D, n4:E, n5:F, n6:G)\n-n_tuple!(Tuple8: n0:A, n1:B, n2:C, n3:D, n4:E, n5:F, n6:G, n7:H)\n-n_tuple!(Tuple9: n0:A, n1:B, n2:C, n3:D, n4:E, n5:F, n6:G, n7:H, n8:I)\n-n_tuple!(Tuple10: n0:A, n1:B, n2:C, n3:D, n4:E, n5:F, n6:G, n7:H, n8:I, n9:J)\n-n_tuple!(Tuple11: n0:A, n1:B, n2:C, n3:D, n4:E, n5:F, n6:G, n7:H, n8:I, n9:J, n10:K)\n-n_tuple!(Tuple12: n0:A, n1:B, n2:C, n3:D, n4:E, n5:F, n6:G, n7:H, n8:I, n9:J, n10:K, n11:L)\n-\n-// Tuple element accessor trait implementations\n-\n-macro_rules! impl_n_tuple(\n-    ($name:ident: $($method:ident -> $T:ident { $accessor:pat => $t:expr })+) => (\n-        impl<$($T:Copy),+> $name<$($T),+> for ($($T),+) {\n-            $(\n-                fn $method(&self) -> $T {\n-                    match *self {\n-                        $accessor => $t\n+    )+) => (\n+        pub mod getters {\n+            use kinds::Copy;\n+\n+            $(pub trait $name<$($T),+> {\n+                    $(fn $method(&self) -> $T;)+\n+            })+\n+\n+            $(impl<$($T:Copy),+> $name<$($T),+> for ($($T),+) {\n+                $(\n+                    #[inline(always)]\n+                    fn $method(&self) -> $T {\n+                        match *self {\n+                            $accessor => $t\n+                        }\n                     }\n-                }\n-            )+\n+                )+\n+            })+\n         }\n     )\n )\n \n-impl_n_tuple!(Tuple2:\n-    n0 -> A { (a,_) => a }\n-    n1 -> B { (_,b) => b }\n-)\n+tuple_getters!(\n+    Tuple2 {\n+        fn n0 -> A { (a,_) => a }\n+        fn n1 -> B { (_,b) => b }\n+    }\n \n-impl_n_tuple!(Tuple3:\n-    n0 -> A { (a,_,_) => a }\n-    n1 -> B { (_,b,_) => b }\n-    n2 -> C { (_,_,c) => c }\n-)\n+    Tuple3 {\n+        fn n0 -> A { (a,_,_) => a }\n+        fn n1 -> B { (_,b,_) => b }\n+        fn n2 -> C { (_,_,c) => c }\n+    }\n \n-impl_n_tuple!(Tuple4:\n-    n0 -> A { (a,_,_,_) => a }\n-    n1 -> B { (_,b,_,_) => b }\n-    n2 -> C { (_,_,c,_) => c }\n-    n3 -> D { (_,_,_,d) => d }\n-)\n+    Tuple4 {\n+        fn n0 -> A { (a,_,_,_) => a }\n+        fn n1 -> B { (_,b,_,_) => b }\n+        fn n2 -> C { (_,_,c,_) => c }\n+        fn n3 -> D { (_,_,_,d) => d }\n+    }\n \n-impl_n_tuple!(Tuple5:\n-    n0 -> A { (a,_,_,_,_) => a }\n-    n1 -> B { (_,b,_,_,_) => b }\n-    n2 -> C { (_,_,c,_,_) => c }\n-    n3 -> D { (_,_,_,d,_) => d }\n-    n4 -> E { (_,_,_,_,e) => e }\n-)\n+    Tuple5 {\n+        fn n0 -> A { (a,_,_,_,_) => a }\n+        fn n1 -> B { (_,b,_,_,_) => b }\n+        fn n2 -> C { (_,_,c,_,_) => c }\n+        fn n3 -> D { (_,_,_,d,_) => d }\n+        fn n4 -> E { (_,_,_,_,e) => e }\n+    }\n \n-impl_n_tuple!(Tuple6:\n-    n0 -> A { (a,_,_,_,_,_) => a }\n-    n1 -> B { (_,b,_,_,_,_) => b }\n-    n2 -> C { (_,_,c,_,_,_) => c }\n-    n3 -> D { (_,_,_,d,_,_) => d }\n-    n4 -> E { (_,_,_,_,e,_) => e }\n-    n5 -> F { (_,_,_,_,_,f) => f }\n-)\n+    Tuple6 {\n+        fn n0 -> A { (a,_,_,_,_,_) => a }\n+        fn n1 -> B { (_,b,_,_,_,_) => b }\n+        fn n2 -> C { (_,_,c,_,_,_) => c }\n+        fn n3 -> D { (_,_,_,d,_,_) => d }\n+        fn n4 -> E { (_,_,_,_,e,_) => e }\n+        fn n5 -> F { (_,_,_,_,_,f) => f }\n+    }\n \n-impl_n_tuple!(Tuple7:\n-    n0 -> A { (a,_,_,_,_,_,_) => a }\n-    n1 -> B { (_,b,_,_,_,_,_) => b }\n-    n2 -> C { (_,_,c,_,_,_,_) => c }\n-    n3 -> D { (_,_,_,d,_,_,_) => d }\n-    n4 -> E { (_,_,_,_,e,_,_) => e }\n-    n5 -> F { (_,_,_,_,_,f,_) => f }\n-    n6 -> G { (_,_,_,_,_,_,g) => g }\n-)\n+    Tuple7 {\n+        fn n0 -> A { (a,_,_,_,_,_,_) => a }\n+        fn n1 -> B { (_,b,_,_,_,_,_) => b }\n+        fn n2 -> C { (_,_,c,_,_,_,_) => c }\n+        fn n3 -> D { (_,_,_,d,_,_,_) => d }\n+        fn n4 -> E { (_,_,_,_,e,_,_) => e }\n+        fn n5 -> F { (_,_,_,_,_,f,_) => f }\n+        fn n6 -> G { (_,_,_,_,_,_,g) => g }\n+    }\n \n-impl_n_tuple!(Tuple8:\n-    n0 -> A { (a,_,_,_,_,_,_,_) => a }\n-    n1 -> B { (_,b,_,_,_,_,_,_) => b }\n-    n2 -> C { (_,_,c,_,_,_,_,_) => c }\n-    n3 -> D { (_,_,_,d,_,_,_,_) => d }\n-    n4 -> E { (_,_,_,_,e,_,_,_) => e }\n-    n5 -> F { (_,_,_,_,_,f,_,_) => f }\n-    n6 -> G { (_,_,_,_,_,_,g,_) => g }\n-    n7 -> H { (_,_,_,_,_,_,_,h) => h }\n-)\n+    Tuple8 {\n+        fn n0 -> A { (a,_,_,_,_,_,_,_) => a }\n+        fn n1 -> B { (_,b,_,_,_,_,_,_) => b }\n+        fn n2 -> C { (_,_,c,_,_,_,_,_) => c }\n+        fn n3 -> D { (_,_,_,d,_,_,_,_) => d }\n+        fn n4 -> E { (_,_,_,_,e,_,_,_) => e }\n+        fn n5 -> F { (_,_,_,_,_,f,_,_) => f }\n+        fn n6 -> G { (_,_,_,_,_,_,g,_) => g }\n+        fn n7 -> H { (_,_,_,_,_,_,_,h) => h }\n+    }\n \n-impl_n_tuple!(Tuple9:\n-    n0 -> A { (a,_,_,_,_,_,_,_,_) => a }\n-    n1 -> B { (_,b,_,_,_,_,_,_,_) => b }\n-    n2 -> C { (_,_,c,_,_,_,_,_,_) => c }\n-    n3 -> D { (_,_,_,d,_,_,_,_,_) => d }\n-    n4 -> E { (_,_,_,_,e,_,_,_,_) => e }\n-    n5 -> F { (_,_,_,_,_,f,_,_,_) => f }\n-    n6 -> G { (_,_,_,_,_,_,g,_,_) => g }\n-    n7 -> H { (_,_,_,_,_,_,_,h,_) => h }\n-    n8 -> I { (_,_,_,_,_,_,_,_,i) => i }\n-)\n+    Tuple9 {\n+        fn n0 -> A { (a,_,_,_,_,_,_,_,_) => a }\n+        fn n1 -> B { (_,b,_,_,_,_,_,_,_) => b }\n+        fn n2 -> C { (_,_,c,_,_,_,_,_,_) => c }\n+        fn n3 -> D { (_,_,_,d,_,_,_,_,_) => d }\n+        fn n4 -> E { (_,_,_,_,e,_,_,_,_) => e }\n+        fn n5 -> F { (_,_,_,_,_,f,_,_,_) => f }\n+        fn n6 -> G { (_,_,_,_,_,_,g,_,_) => g }\n+        fn n7 -> H { (_,_,_,_,_,_,_,h,_) => h }\n+        fn n8 -> I { (_,_,_,_,_,_,_,_,i) => i }\n+    }\n \n-impl_n_tuple!(Tuple10:\n-    n0 -> A { (a,_,_,_,_,_,_,_,_,_) => a }\n-    n1 -> B { (_,b,_,_,_,_,_,_,_,_) => b }\n-    n2 -> C { (_,_,c,_,_,_,_,_,_,_) => c }\n-    n3 -> D { (_,_,_,d,_,_,_,_,_,_) => d }\n-    n4 -> E { (_,_,_,_,e,_,_,_,_,_) => e }\n-    n5 -> F { (_,_,_,_,_,f,_,_,_,_) => f }\n-    n6 -> G { (_,_,_,_,_,_,g,_,_,_) => g }\n-    n7 -> H { (_,_,_,_,_,_,_,h,_,_) => h }\n-    n8 -> I { (_,_,_,_,_,_,_,_,i,_) => i }\n-    n9 -> J { (_,_,_,_,_,_,_,_,_,j) => j }\n-)\n+    Tuple10 {\n+        fn n0 -> A { (a,_,_,_,_,_,_,_,_,_) => a }\n+        fn n1 -> B { (_,b,_,_,_,_,_,_,_,_) => b }\n+        fn n2 -> C { (_,_,c,_,_,_,_,_,_,_) => c }\n+        fn n3 -> D { (_,_,_,d,_,_,_,_,_,_) => d }\n+        fn n4 -> E { (_,_,_,_,e,_,_,_,_,_) => e }\n+        fn n5 -> F { (_,_,_,_,_,f,_,_,_,_) => f }\n+        fn n6 -> G { (_,_,_,_,_,_,g,_,_,_) => g }\n+        fn n7 -> H { (_,_,_,_,_,_,_,h,_,_) => h }\n+        fn n8 -> I { (_,_,_,_,_,_,_,_,i,_) => i }\n+        fn n9 -> J { (_,_,_,_,_,_,_,_,_,j) => j }\n+    }\n \n-impl_n_tuple!(Tuple11:\n-    n0 -> A { (a,_,_,_,_,_,_,_,_,_,_) => a }\n-    n1 -> B { (_,b,_,_,_,_,_,_,_,_,_) => b }\n-    n2 -> C { (_,_,c,_,_,_,_,_,_,_,_) => c }\n-    n3 -> D { (_,_,_,d,_,_,_,_,_,_,_) => d }\n-    n4 -> E { (_,_,_,_,e,_,_,_,_,_,_) => e }\n-    n5 -> F { (_,_,_,_,_,f,_,_,_,_,_) => f }\n-    n6 -> G { (_,_,_,_,_,_,g,_,_,_,_) => g }\n-    n7 -> H { (_,_,_,_,_,_,_,h,_,_,_) => h }\n-    n8 -> I { (_,_,_,_,_,_,_,_,i,_,_) => i }\n-    n9 -> J { (_,_,_,_,_,_,_,_,_,j,_) => j }\n-    n10 -> K { (_,_,_,_,_,_,_,_,_,_,k) => k }\n-)\n+    Tuple11 {\n+        fn n0 -> A { (a,_,_,_,_,_,_,_,_,_,_) => a }\n+        fn n1 -> B { (_,b,_,_,_,_,_,_,_,_,_) => b }\n+        fn n2 -> C { (_,_,c,_,_,_,_,_,_,_,_) => c }\n+        fn n3 -> D { (_,_,_,d,_,_,_,_,_,_,_) => d }\n+        fn n4 -> E { (_,_,_,_,e,_,_,_,_,_,_) => e }\n+        fn n5 -> F { (_,_,_,_,_,f,_,_,_,_,_) => f }\n+        fn n6 -> G { (_,_,_,_,_,_,g,_,_,_,_) => g }\n+        fn n7 -> H { (_,_,_,_,_,_,_,h,_,_,_) => h }\n+        fn n8 -> I { (_,_,_,_,_,_,_,_,i,_,_) => i }\n+        fn n9 -> J { (_,_,_,_,_,_,_,_,_,j,_) => j }\n+        fn n10 -> K { (_,_,_,_,_,_,_,_,_,_,k) => k }\n+    }\n \n-impl_n_tuple!(Tuple12:\n-    n0 -> A { (a,_,_,_,_,_,_,_,_,_,_,_) => a }\n-    n1 -> B { (_,b,_,_,_,_,_,_,_,_,_,_) => b }\n-    n2 -> C { (_,_,c,_,_,_,_,_,_,_,_,_) => c }\n-    n3 -> D { (_,_,_,d,_,_,_,_,_,_,_,_) => d }\n-    n4 -> E { (_,_,_,_,e,_,_,_,_,_,_,_) => e }\n-    n5 -> F { (_,_,_,_,_,f,_,_,_,_,_,_) => f }\n-    n6 -> G { (_,_,_,_,_,_,g,_,_,_,_,_) => g }\n-    n7 -> H { (_,_,_,_,_,_,_,h,_,_,_,_) => h }\n-    n8 -> I { (_,_,_,_,_,_,_,_,i,_,_,_) => i }\n-    n9 -> J { (_,_,_,_,_,_,_,_,_,j,_,_) => j }\n-    n10 -> K { (_,_,_,_,_,_,_,_,_,_,k,_) => k }\n-    n11 -> L { (_,_,_,_,_,_,_,_,_,_,_,l) => l }\n+    Tuple12 {\n+        fn n0 -> A { (a,_,_,_,_,_,_,_,_,_,_,_) => a }\n+        fn n1 -> B { (_,b,_,_,_,_,_,_,_,_,_,_) => b }\n+        fn n2 -> C { (_,_,c,_,_,_,_,_,_,_,_,_) => c }\n+        fn n3 -> D { (_,_,_,d,_,_,_,_,_,_,_,_) => d }\n+        fn n4 -> E { (_,_,_,_,e,_,_,_,_,_,_,_) => e }\n+        fn n5 -> F { (_,_,_,_,_,f,_,_,_,_,_,_) => f }\n+        fn n6 -> G { (_,_,_,_,_,_,g,_,_,_,_,_) => g }\n+        fn n7 -> H { (_,_,_,_,_,_,_,h,_,_,_,_) => h }\n+        fn n8 -> I { (_,_,_,_,_,_,_,_,i,_,_,_) => i }\n+        fn n9 -> J { (_,_,_,_,_,_,_,_,_,j,_,_) => j }\n+        fn n10 -> K { (_,_,_,_,_,_,_,_,_,_,k,_) => k }\n+        fn n11 -> L { (_,_,_,_,_,_,_,_,_,_,_,l) => l }\n+    }\n )\n \n #[test]"}]}