{"sha": "b6fae56e38f7eac1472df250712c7987510343f1", "node_id": "C_kwDOAAsO6NoAKGI2ZmFlNTZlMzhmN2VhYzE0NzJkZjI1MDcxMmM3OTg3NTEwMzQzZjE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-16T13:28:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-16T13:28:00Z"}, "message": "Auto merge of #13028 - yue4u:fix/literal-lookup, r=jonas-schievink\n\nfix: record completion filtering\n\nclose #12975", "tree": {"sha": "410bebeb394ce6e21b6d4fd41386790cdaa42b82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/410bebeb394ce6e21b6d4fd41386790cdaa42b82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6fae56e38f7eac1472df250712c7987510343f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6fae56e38f7eac1472df250712c7987510343f1", "html_url": "https://github.com/rust-lang/rust/commit/b6fae56e38f7eac1472df250712c7987510343f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6fae56e38f7eac1472df250712c7987510343f1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3903243192d2bd6c38b43d12ffa9d2fa1601c2ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/3903243192d2bd6c38b43d12ffa9d2fa1601c2ec", "html_url": "https://github.com/rust-lang/rust/commit/3903243192d2bd6c38b43d12ffa9d2fa1601c2ec"}, {"sha": "91358bd937ff0fdace4371f313fa0cda42d3d81c", "url": "https://api.github.com/repos/rust-lang/rust/commits/91358bd937ff0fdace4371f313fa0cda42d3d81c", "html_url": "https://github.com/rust-lang/rust/commit/91358bd937ff0fdace4371f313fa0cda42d3d81c"}], "stats": {"total": 68, "additions": 46, "deletions": 22}, "files": [{"sha": "5d96fbd30a81d1c4dd02f8a38e68b00602096c61", "filename": "crates/ide-completion/src/completions/record.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b6fae56e38f7eac1472df250712c7987510343f1/crates%2Fide-completion%2Fsrc%2Fcompletions%2Frecord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6fae56e38f7eac1472df250712c7987510343f1/crates%2Fide-completion%2Fsrc%2Fcompletions%2Frecord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Frecord.rs?ref=b6fae56e38f7eac1472df250712c7987510343f1", "patch": "@@ -129,7 +129,7 @@ mod tests {\n     #[test]\n     fn literal_struct_completion_edit() {\n         check_edit(\n-            \"FooDesc {\u2026}\",\n+            \"FooDesc{}\",\n             r#\"\n struct FooDesc { pub bar: bool }\n \n@@ -154,7 +154,7 @@ fn baz() {\n     #[test]\n     fn literal_struct_impl_self_completion() {\n         check_edit(\n-            \"Self {\u2026}\",\n+            \"Self{}\",\n             r#\"\n struct Foo {\n     bar: u64,\n@@ -180,7 +180,7 @@ impl Foo {\n         );\n \n         check_edit(\n-            \"Self(\u2026)\",\n+            \"Self()\",\n             r#\"\n mod submod {\n     pub struct Foo(pub u64);\n@@ -209,7 +209,7 @@ impl submod::Foo {\n     #[test]\n     fn literal_struct_completion_from_sub_modules() {\n         check_edit(\n-            \"submod::Struct {\u2026}\",\n+            \"submod::Struct{}\",\n             r#\"\n mod submod {\n     pub struct Struct {\n@@ -238,7 +238,7 @@ fn f() -> submod::Struct {\n     #[test]\n     fn literal_struct_complexion_module() {\n         check_edit(\n-            \"FooDesc {\u2026}\",\n+            \"FooDesc{}\",\n             r#\"\n mod _69latrick {\n     pub struct FooDesc { pub six: bool, pub neuf: Vec<String>, pub bar: bool }"}, {"sha": "a2cf6d68e5b3a08529ece70ce8b455a232cf5010", "filename": "crates/ide-completion/src/render.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b6fae56e38f7eac1472df250712c7987510343f1/crates%2Fide-completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6fae56e38f7eac1472df250712c7987510343f1/crates%2Fide-completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender.rs?ref=b6fae56e38f7eac1472df250712c7987510343f1", "patch": "@@ -565,6 +565,7 @@ fn main() { Foo::Fo$0 }\n                         kind: SymbolKind(\n                             Variant,\n                         ),\n+                        lookup: \"Foo{}\",\n                         detail: \"Foo { x: i32, y: i32 }\",\n                     },\n                 ]\n@@ -591,6 +592,7 @@ fn main() { Foo::Fo$0 }\n                         kind: SymbolKind(\n                             Variant,\n                         ),\n+                        lookup: \"Foo()\",\n                         detail: \"Foo(i32, i32)\",\n                     },\n                 ]\n@@ -707,7 +709,7 @@ fn main() { let _: m::Spam = S$0 }\n                         kind: SymbolKind(\n                             Variant,\n                         ),\n-                        lookup: \"Spam::Bar(\u2026)\",\n+                        lookup: \"Spam::Bar()\",\n                         detail: \"m::Spam::Bar(i32)\",\n                         relevance: CompletionRelevance {\n                             exact_name_match: false,"}, {"sha": "af9c88a7e0a6cc87cbcb1f11ea22e9f4c207238b", "filename": "crates/ide-completion/src/render/literal.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b6fae56e38f7eac1472df250712c7987510343f1/crates%2Fide-completion%2Fsrc%2Frender%2Fliteral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6fae56e38f7eac1472df250712c7987510343f1/crates%2Fide-completion%2Fsrc%2Frender%2Fliteral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender%2Fliteral.rs?ref=b6fae56e38f7eac1472df250712c7987510343f1", "patch": "@@ -10,8 +10,8 @@ use crate::{\n     render::{\n         compute_ref_match, compute_type_match,\n         variant::{\n-            format_literal_label, render_record_lit, render_tuple_lit, visible_fields,\n-            RenderedLiteral,\n+            format_literal_label, format_literal_lookup, render_record_lit, render_tuple_lit,\n+            visible_fields, RenderedLiteral,\n         },\n         RenderContext,\n     },\n@@ -97,23 +97,27 @@ fn render(\n     if !should_add_parens {\n         kind = StructKind::Unit;\n     }\n+    let label = format_literal_label(&qualified_name, kind);\n+    let lookup = if qualified {\n+        format_literal_lookup(&short_qualified_name.to_string(), kind)\n+    } else {\n+        format_literal_lookup(&qualified_name, kind)\n+    };\n \n     let mut item = CompletionItem::new(\n         CompletionItemKind::SymbolKind(thing.symbol_kind()),\n         ctx.source_range(),\n-        format_literal_label(&qualified_name, kind),\n+        label,\n     );\n \n+    item.lookup_by(lookup);\n     item.detail(rendered.detail);\n \n     match snippet_cap {\n         Some(snippet_cap) => item.insert_snippet(snippet_cap, rendered.literal),\n         None => item.insert_text(rendered.literal),\n     };\n \n-    if qualified {\n-        item.lookup_by(format_literal_label(&short_qualified_name.to_string(), kind));\n-    }\n     item.set_documentation(thing.docs(db)).set_deprecated(thing.is_deprecated(&ctx));\n \n     let ty = thing.ty(db);"}, {"sha": "c845ff21aaba401045cbef14c30c12ea74a3857f", "filename": "crates/ide-completion/src/render/pattern.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b6fae56e38f7eac1472df250712c7987510343f1/crates%2Fide-completion%2Fsrc%2Frender%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6fae56e38f7eac1472df250712c7987510343f1/crates%2Fide-completion%2Fsrc%2Frender%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender%2Fpattern.rs?ref=b6fae56e38f7eac1472df250712c7987510343f1", "patch": "@@ -8,7 +8,7 @@ use syntax::SmolStr;\n use crate::{\n     context::{ParamContext, ParamKind, PathCompletionCtx, PatternContext},\n     render::{\n-        variant::{format_literal_label, visible_fields},\n+        variant::{format_literal_label, format_literal_lookup, visible_fields},\n         RenderContext,\n     },\n     CompletionItem, CompletionItemKind,\n@@ -34,9 +34,10 @@ pub(crate) fn render_struct_pat(\n     let (name, escaped_name) = (name.unescaped().to_smol_str(), name.to_smol_str());\n     let kind = strukt.kind(ctx.db());\n     let label = format_literal_label(name.as_str(), kind);\n+    let lookup = format_literal_lookup(name.as_str(), kind);\n     let pat = render_pat(&ctx, pattern_ctx, &escaped_name, kind, &visible_fields, fields_omitted)?;\n \n-    Some(build_completion(ctx, label, pat, strukt))\n+    Some(build_completion(ctx, label, lookup, pat, strukt))\n }\n \n pub(crate) fn render_variant_pat(\n@@ -60,11 +61,14 @@ pub(crate) fn render_variant_pat(\n         }\n     };\n \n-    let (label, pat) = match path_ctx {\n-        Some(PathCompletionCtx { has_call_parens: true, .. }) => (name, escaped_name.to_string()),\n+    let (label, lookup, pat) = match path_ctx {\n+        Some(PathCompletionCtx { has_call_parens: true, .. }) => {\n+            (name.clone(), name, escaped_name.to_string())\n+        }\n         _ => {\n             let kind = variant.kind(ctx.db());\n             let label = format_literal_label(name.as_str(), kind);\n+            let lookup = format_literal_lookup(name.as_str(), kind);\n             let pat = render_pat(\n                 &ctx,\n                 pattern_ctx,\n@@ -73,23 +77,25 @@ pub(crate) fn render_variant_pat(\n                 &visible_fields,\n                 fields_omitted,\n             )?;\n-            (label, pat)\n+            (label, lookup, pat)\n         }\n     };\n \n-    Some(build_completion(ctx, label, pat, variant))\n+    Some(build_completion(ctx, label, lookup, pat, variant))\n }\n \n fn build_completion(\n     ctx: RenderContext<'_>,\n     label: SmolStr,\n+    lookup: SmolStr,\n     pat: String,\n     def: impl HasAttrs + Copy,\n ) -> CompletionItem {\n     let mut item = CompletionItem::new(CompletionItemKind::Binding, ctx.source_range(), label);\n     item.set_documentation(ctx.docs(def))\n         .set_deprecated(ctx.is_deprecated(def))\n         .detail(&pat)\n+        .lookup_by(lookup)\n         .set_relevance(ctx.completion_relevance());\n     match ctx.snippet_cap() {\n         Some(snippet_cap) => item.insert_snippet(snippet_cap, pat),"}, {"sha": "54e97dd57ba82280074c27635f675d57fef6fa7c", "filename": "crates/ide-completion/src/render/union_literal.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b6fae56e38f7eac1472df250712c7987510343f1/crates%2Fide-completion%2Fsrc%2Frender%2Funion_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6fae56e38f7eac1472df250712c7987510343f1/crates%2Fide-completion%2Fsrc%2Frender%2Funion_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender%2Funion_literal.rs?ref=b6fae56e38f7eac1472df250712c7987510343f1", "patch": "@@ -6,7 +6,7 @@ use itertools::Itertools;\n \n use crate::{\n     render::{\n-        variant::{format_literal_label, visible_fields},\n+        variant::{format_literal_label, format_literal_lookup, visible_fields},\n         RenderContext,\n     },\n     CompletionItem, CompletionItemKind,\n@@ -24,13 +24,16 @@ pub(crate) fn render_union_literal(\n         Some(p) => (p.unescaped().to_string(), p.to_string()),\n         None => (name.unescaped().to_string(), name.to_string()),\n     };\n-\n+    let label = format_literal_label(&name.to_smol_str(), StructKind::Record);\n+    let lookup = format_literal_lookup(&name.to_smol_str(), StructKind::Record);\n     let mut item = CompletionItem::new(\n         CompletionItemKind::SymbolKind(SymbolKind::Union),\n         ctx.source_range(),\n-        format_literal_label(&name.to_smol_str(), StructKind::Record),\n+        label,\n     );\n \n+    item.lookup_by(lookup);\n+\n     let fields = un.fields(ctx.db());\n     let (fields, fields_omitted) = visible_fields(ctx.completion, &fields, un)?;\n "}, {"sha": "24e6abdc9ad60918472e7508cad3b8c4f3cc5eef", "filename": "crates/ide-completion/src/render/variant.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b6fae56e38f7eac1472df250712c7987510343f1/crates%2Fide-completion%2Fsrc%2Frender%2Fvariant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6fae56e38f7eac1472df250712c7987510343f1/crates%2Fide-completion%2Fsrc%2Frender%2Fvariant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender%2Fvariant.rs?ref=b6fae56e38f7eac1472df250712c7987510343f1", "patch": "@@ -94,3 +94,12 @@ pub(crate) fn format_literal_label(name: &str, kind: StructKind) -> SmolStr {\n         StructKind::Unit => name.into(),\n     }\n }\n+\n+/// Format a struct, etc. literal option for lookup used in completions filtering.\n+pub(crate) fn format_literal_lookup(name: &str, kind: StructKind) -> SmolStr {\n+    match kind {\n+        StructKind::Tuple => SmolStr::from_iter([name, \"()\"]),\n+        StructKind::Record => SmolStr::from_iter([name, \"{}\"]),\n+        StructKind::Unit => name.into(),\n+    }\n+}"}, {"sha": "85c4dbd6625dfcfc891a073c885eab6eec98780b", "filename": "crates/ide-completion/src/tests/pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b6fae56e38f7eac1472df250712c7987510343f1/crates%2Fide-completion%2Fsrc%2Ftests%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6fae56e38f7eac1472df250712c7987510343f1/crates%2Fide-completion%2Fsrc%2Ftests%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Ftests%2Fpattern.rs?ref=b6fae56e38f7eac1472df250712c7987510343f1", "patch": "@@ -467,7 +467,7 @@ fn foo() {\n fn completes_enum_variant_pat() {\n     cov_mark::check!(enum_variant_pattern_path);\n     check_edit(\n-        \"RecordVariant {\u2026}\",\n+        \"RecordVariant{}\",\n         r#\"\n enum Enum {\n     RecordVariant { field: u32 }"}]}