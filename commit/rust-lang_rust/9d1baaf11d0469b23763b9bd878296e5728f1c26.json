{"sha": "9d1baaf11d0469b23763b9bd878296e5728f1c26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMWJhYWYxMWQwNDY5YjIzNzYzYjliZDg3ODI5NmU1NzI4ZjFjMjY=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-12-19T22:53:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-19T22:53:53Z"}, "message": "Rollup merge of #67281 - llogiq:nonoverlapping-insert, r=alexcrichton\n\nadd string.insert benchmarks\n\nThis adds benchmarks for `String::insert` and `String::insert_str`", "tree": {"sha": "e39882fcac8e026ad7f682025a1ce0c8bd1ead8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e39882fcac8e026ad7f682025a1ce0c8bd1ead8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d1baaf11d0469b23763b9bd878296e5728f1c26", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd+/+BCRBK7hj4Ov3rIwAAdHIIAIxpYQPlNF+55hszntTEHnTW\nW1CGYVQt28skzTrOSqZtnbC7ahOa08PShiREKRHZzO5AqNlML28eQ0VqFmOZW1SJ\n6t1fZ/DUlucA9eijHLRVQzD+uTqSHedYyvk9xRC+AtdgBc1dmsETv+DSUl/pX5qM\nIbiCP++d4cvS9zHmr/SzFj/A2ejEshCGKkePw79Euo2Bn0l3BkV5HV5n54bOnX4l\noNKobzWU3+k8/8NOVo0qq6LnOYM20lamGSwVatd2gSM6o2nzklz5XhQlomEdVP9x\njw4b1883F8ae3nicbEYP60rsaJW5OBSFaYWq7zy8cKzZTi10+TBkFnqmZS5BzGk=\n=nRJY\n-----END PGP SIGNATURE-----\n", "payload": "tree e39882fcac8e026ad7f682025a1ce0c8bd1ead8d\nparent 939beb58d32c0aa0cf351e72d87b5f38aab9b7d4\nparent c6321a4df897ab9f32224f493c9e3ee8890cb443\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1576796033 -0500\ncommitter GitHub <noreply@github.com> 1576796033 -0500\n\nRollup merge of #67281 - llogiq:nonoverlapping-insert, r=alexcrichton\n\nadd string.insert benchmarks\n\nThis adds benchmarks for `String::insert` and `String::insert_str`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d1baaf11d0469b23763b9bd878296e5728f1c26", "html_url": "https://github.com/rust-lang/rust/commit/9d1baaf11d0469b23763b9bd878296e5728f1c26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d1baaf11d0469b23763b9bd878296e5728f1c26/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "939beb58d32c0aa0cf351e72d87b5f38aab9b7d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/939beb58d32c0aa0cf351e72d87b5f38aab9b7d4", "html_url": "https://github.com/rust-lang/rust/commit/939beb58d32c0aa0cf351e72d87b5f38aab9b7d4"}, {"sha": "c6321a4df897ab9f32224f493c9e3ee8890cb443", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6321a4df897ab9f32224f493c9e3ee8890cb443", "html_url": "https://github.com/rust-lang/rust/commit/c6321a4df897ab9f32224f493c9e3ee8890cb443"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "599c8b1682851a7dc0a6dfbf66b4b969ca078d42", "filename": "src/liballoc/benches/string.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/9d1baaf11d0469b23763b9bd878296e5728f1c26/src%2Fliballoc%2Fbenches%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d1baaf11d0469b23763b9bd878296e5728f1c26/src%2Fliballoc%2Fbenches%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Fstring.rs?ref=9d1baaf11d0469b23763b9bd878296e5728f1c26", "patch": "@@ -122,3 +122,43 @@ fn bench_to_string(b: &mut Bencher) {\n              Lorem ipsum dolor sit amet, consectetur. \";\n     b.iter(|| s.to_string())\n }\n+\n+#[bench]\n+fn bench_insert_char_short(b: &mut Bencher) {\n+    let s = \"Hello, World!\";\n+    b.iter(|| {\n+        let mut x = String::from(s);\n+        black_box(&mut x).insert(6, black_box(' '));\n+        x\n+    })\n+}\n+\n+#[bench]\n+fn bench_insert_char_long(b: &mut Bencher) {\n+    let s = \"Hello, World!\";\n+    b.iter(|| {\n+        let mut x = String::from(s);\n+        black_box(&mut x).insert(6, black_box('\u2764'));\n+        x\n+    })\n+}\n+\n+#[bench]\n+fn bench_insert_str_short(b: &mut Bencher) {\n+    let s = \"Hello, World!\";\n+    b.iter(|| {\n+        let mut x = String::from(s);\n+        black_box(&mut x).insert_str(6, black_box(\" \"));\n+        x\n+    })\n+}\n+\n+#[bench]\n+fn bench_insert_str_long(b: &mut Bencher) {\n+    let s = \"Hello, World!\";\n+    b.iter(|| {\n+        let mut x = String::from(s);\n+        black_box(&mut x).insert_str(6, black_box(\" rustic \"));\n+        x\n+    })\n+}"}]}