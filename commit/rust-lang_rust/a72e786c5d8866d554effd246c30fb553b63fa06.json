{"sha": "a72e786c5d8866d554effd246c30fb553b63fa06", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3MmU3ODZjNWQ4ODY2ZDU1NGVmZmQyNDZjMzBmYjU1M2I2M2ZhMDY=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-09-26T16:48:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-26T16:48:43Z"}, "message": "Merge pull request #3226 from matthiaskrgr/rustup_smallvec\n\nrustup", "tree": {"sha": "6bca64eea0c4b1b65d8dc5ccf10c06c4d5b7c724", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bca64eea0c4b1b65d8dc5ccf10c06c4d5b7c724"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a72e786c5d8866d554effd246c30fb553b63fa06", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbq7hrCRBK7hj4Ov3rIwAAdHIIAFWs6opVBx8x3xkhkwKq0nmE\npeBPNjJwy1a/xhP8g6I2HyHYyWyYtYYu4QkVe9FW91/h4kUiow4JmhLZWw3RJHz8\nQYK/LBTNexdHuQYvOsSX3EEIJ57hNj4k22J504Zzou7Iv8a2NtBZEzY9Uay+c3sg\n8u1k1nWtx8Daa3AuLvlLwybz6RgO9GG20zYR4Ff5UjpNfo9FUKajuRuRa/O/yo9/\np8clt6mxrFwvblpcov3Ajv40NLGiPdoFdeNknC5KvE4AROafyqSMC4s4/n6jW0ls\nn5/Ajbna2wjK02Z+savealT6n6rcZpw/6O31Ub+GNeud0IZtnme2pgXwHIqLT+U=\n=yT5Q\n-----END PGP SIGNATURE-----\n", "payload": "tree 6bca64eea0c4b1b65d8dc5ccf10c06c4d5b7c724\nparent 66afff9642efa0d679940a53b26c42d266af3808\nparent fc35c20a0a45ae215ede9d9f5d6a05813604a5a4\nauthor Philipp Hansch <dev@phansch.net> 1537980523 +0100\ncommitter GitHub <noreply@github.com> 1537980523 +0100\n\nMerge pull request #3226 from matthiaskrgr/rustup_smallvec\n\nrustup"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a72e786c5d8866d554effd246c30fb553b63fa06", "html_url": "https://github.com/rust-lang/rust/commit/a72e786c5d8866d554effd246c30fb553b63fa06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a72e786c5d8866d554effd246c30fb553b63fa06/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66afff9642efa0d679940a53b26c42d266af3808", "url": "https://api.github.com/repos/rust-lang/rust/commits/66afff9642efa0d679940a53b26c42d266af3808", "html_url": "https://github.com/rust-lang/rust/commit/66afff9642efa0d679940a53b26c42d266af3808"}, {"sha": "fc35c20a0a45ae215ede9d9f5d6a05813604a5a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc35c20a0a45ae215ede9d9f5d6a05813604a5a4", "html_url": "https://github.com/rust-lang/rust/commit/fc35c20a0a45ae215ede9d9f5d6a05813604a5a4"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "15da5d6587803c242720dc6d59701ab963bfe18d", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a72e786c5d8866d554effd246c30fb553b63fa06/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a72e786c5d8866d554effd246c30fb553b63fa06/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=a72e786c5d8866d554effd246c30fb553b63fa06", "patch": "@@ -33,6 +33,7 @@ unicode-normalization = \"0.1\"\n pulldown-cmark = \"0.1\"\n url = \"1.7.0\"\n if_chain = \"0.1.3\"\n+smallvec = { version = \"0.6.5\", features = [\"union\"] }\n \n [features]\n debugging = []"}, {"sha": "26669d8c4c2a9b32335b3bc419e710ae103f50ae", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a72e786c5d8866d554effd246c30fb553b63fa06/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a72e786c5d8866d554effd246c30fb553b63fa06/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=a72e786c5d8866d554effd246c30fb553b63fa06", "patch": "@@ -6,7 +6,7 @@ use crate::rustc_data_structures::fx::FxHashMap;\n use std::collections::hash_map::Entry;\n use std::hash::BuildHasherDefault;\n use crate::syntax::symbol::LocalInternedString;\n-use crate::rustc_data_structures::small_vec::OneVector;\n+use smallvec::SmallVec;\n use crate::utils::{SpanlessEq, SpanlessHash};\n use crate::utils::{get_parent_expr, in_macro, snippet, span_lint_and_then, span_note_and_lint};\n \n@@ -235,9 +235,9 @@ fn lint_match_arms(cx: &LateContext<'_, '_>, expr: &Expr) {\n /// sequence of `if/else`.\n /// Eg. would return `([a, b], [c, d, e])` for the expression\n /// `if a { c } else if b { d } else { e }`.\n-fn if_sequence(mut expr: &Expr) -> (OneVector<&Expr>, OneVector<&Block>) {\n-    let mut conds = OneVector::new();\n-    let mut blocks: OneVector<&Block> = OneVector::new();\n+fn if_sequence(mut expr: &Expr) -> (SmallVec<[&Expr; 1]>, SmallVec<[&Block; 1]>) {\n+    let mut conds = SmallVec::new();\n+    let mut blocks: SmallVec<[&Block; 1]> = SmallVec::new();\n \n     while let ExprKind::If(ref cond, ref then_expr, ref else_expr) = expr.node {\n         conds.push(&**cond);"}]}