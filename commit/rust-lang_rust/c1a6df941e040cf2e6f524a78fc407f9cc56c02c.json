{"sha": "c1a6df941e040cf2e6f524a78fc407f9cc56c02c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxYTZkZjk0MWUwNDBjZjJlNmY1MjRhNzhmYzQwN2Y5Y2M1NmMwMmM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-22T21:26:17Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-22T21:26:17Z"}, "message": "permit all kinds of 0-offsets on ZSTs", "tree": {"sha": "b5a0f737edac0b564dbc098a3cb675d46358f9d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5a0f737edac0b564dbc098a3cb675d46358f9d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1a6df941e040cf2e6f524a78fc407f9cc56c02c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1a6df941e040cf2e6f524a78fc407f9cc56c02c", "html_url": "https://github.com/rust-lang/rust/commit/c1a6df941e040cf2e6f524a78fc407f9cc56c02c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1a6df941e040cf2e6f524a78fc407f9cc56c02c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f6135685852433aef7f524718e5880528e0cbe5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f6135685852433aef7f524718e5880528e0cbe5", "html_url": "https://github.com/rust-lang/rust/commit/2f6135685852433aef7f524718e5880528e0cbe5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9300ae3dbc2356bf518038e4e5f8121e8ef3516d", "filename": "src/eval_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1a6df941e040cf2e6f524a78fc407f9cc56c02c/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a6df941e040cf2e6f524a78fc407f9cc56c02c/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=c1a6df941e040cf2e6f524a78fc407f9cc56c02c", "patch": "@@ -906,7 +906,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n             let ptr = ptr.signed_offset(offset, self.memory.layout)?;\n             // Do not do bounds-checking for integers or ZST; they can never alias a normal pointer anyway.\n             if let PrimVal::Ptr(ptr) = ptr {\n-                if !(ptr.points_to_zst() && pointee_size == 0) {\n+                if !(ptr.points_to_zst() && (offset == 0 || pointee_size == 0)) {\n                     self.memory.check_bounds(ptr, false)?;\n                 }\n             } else if ptr.is_null()? {"}]}