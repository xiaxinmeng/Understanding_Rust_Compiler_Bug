{"sha": "88b9c2173e71a02731b1e79e7b7a64783784e0ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4YjljMjE3M2U3MWEwMjczMWIxZTc5ZTdiN2E2NDc4Mzc4NGUwZWQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-21T07:10:04Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-21T07:10:04Z"}, "message": "also support old 'cargo miri run -- -- args' style", "tree": {"sha": "ec932385c4f6edb2c4f8577f48782b663bf55993", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec932385c4f6edb2c4f8577f48782b663bf55993"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88b9c2173e71a02731b1e79e7b7a64783784e0ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88b9c2173e71a02731b1e79e7b7a64783784e0ed", "html_url": "https://github.com/rust-lang/rust/commit/88b9c2173e71a02731b1e79e7b7a64783784e0ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88b9c2173e71a02731b1e79e7b7a64783784e0ed/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a15c8a6dd62033f69688f9d1c6eacd674158539", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a15c8a6dd62033f69688f9d1c6eacd674158539", "html_url": "https://github.com/rust-lang/rust/commit/5a15c8a6dd62033f69688f9d1c6eacd674158539"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "bc5738f01d1505a9ca9df361fc2ddc036124dae3", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/88b9c2173e71a02731b1e79e7b7a64783784e0ed/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88b9c2173e71a02731b1e79e7b7a64783784e0ed/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=88b9c2173e71a02731b1e79e7b7a64783784e0ed", "patch": "@@ -452,26 +452,28 @@ fn phase_cargo_miri(mut args: env::Args) {\n             // Check if the next argument starts with `-Zmiri`. If yes, we assume\n             // this is an old-style invocation.\n             if let Some(next_arg) = args.next() {\n-                if next_arg.starts_with(\"-Zmiri\") {\n+                if next_arg.starts_with(\"-Zmiri\") || next_arg == \"--\" {\n                     eprintln!(\n                         \"WARNING: it seems like you are setting Miri's flags in `cargo miri` the old way,\\n\\\n                         i.e., by passing them after the first `--`. This style is deprecated; please set\\n\\\n                         the MIRIFLAGS environment variable instead. `cargo miri run/test` now interprets\\n\\\n                         arguments the exact same way as `cargo run/test`.\"\n                     );\n-                    // Old-style invocation. Turn these into MIRIFLAGS.\n-                    let mut miriflags = env::var(\"MIRIFLAGS\").unwrap_or_default();\n-                    miriflags.push(' ');\n-                    miriflags.push_str(&next_arg);\n-                    while let Some(further_arg) = args.next() {\n-                        if further_arg == \"--\" {\n-                            // End of the Miri flags!\n-                            break;\n-                        }\n+                    // Old-style invocation. Turn these into MIRIFLAGS, if there are any.\n+                    if next_arg != \"--\" {\n+                        let mut miriflags = env::var(\"MIRIFLAGS\").unwrap_or_default();\n                         miriflags.push(' ');\n-                        miriflags.push_str(&further_arg);\n+                        miriflags.push_str(&next_arg);\n+                        while let Some(further_arg) = args.next() {\n+                            if further_arg == \"--\" {\n+                                // End of the Miri flags!\n+                                break;\n+                            }\n+                            miriflags.push(' ');\n+                            miriflags.push_str(&further_arg);\n+                        }\n+                        env::set_var(\"MIRIFLAGS\", miriflags);\n                     }\n-                    env::set_var(\"MIRIFLAGS\", miriflags);\n                     // Pass the remaining flags to cargo.\n                     cmd.args(args);\n                     break;"}]}