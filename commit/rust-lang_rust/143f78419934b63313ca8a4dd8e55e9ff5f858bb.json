{"sha": "143f78419934b63313ca8a4dd8e55e9ff5f858bb", "node_id": "C_kwDOAAsO6NoAKDE0M2Y3ODQxOTkzNGI2MzMxM2NhOGE0ZGQ4ZTU1ZTlmZjVmODU4YmI", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-09-10T07:32:07Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-11-23T20:37:21Z"}, "message": "`replace_tabs` -> `normalize_whitespace`", "tree": {"sha": "1d0e5c3d4563bf7585d5d3c7f41c1dbc4040d6f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d0e5c3d4563bf7585d5d3c7f41c1dbc4040d6f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/143f78419934b63313ca8a4dd8e55e9ff5f858bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/143f78419934b63313ca8a4dd8e55e9ff5f858bb", "html_url": "https://github.com/rust-lang/rust/commit/143f78419934b63313ca8a4dd8e55e9ff5f858bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/143f78419934b63313ca8a4dd8e55e9ff5f858bb/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d68add9eccf2561380177d07d4e7b31433562a2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d68add9eccf2561380177d07d4e7b31433562a2b", "html_url": "https://github.com/rust-lang/rust/commit/d68add9eccf2561380177d07d4e7b31433562a2b"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "d64a589bd9b2a37b1db629e6e10d7112c206ea36", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/143f78419934b63313ca8a4dd8e55e9ff5f858bb/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/143f78419934b63313ca8a4dd8e55e9ff5f858bb/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=143f78419934b63313ca8a4dd8e55e9ff5f858bb", "patch": "@@ -730,7 +730,7 @@ impl EmitterWriter {\n         }\n \n         let source_string = match file.get_line(line.line_index - 1) {\n-            Some(s) => replace_tabs(&*s),\n+            Some(s) => normalize_whitespace(&*s),\n             None => return Vec::new(),\n         };\n \n@@ -1286,7 +1286,7 @@ impl EmitterWriter {\n             }\n             for &(ref text, _) in msg.iter() {\n                 // Account for newlines to align output to its label.\n-                for (line, text) in replace_tabs(text).lines().enumerate() {\n+                for (line, text) in normalize_whitespace(text).lines().enumerate() {\n                     buffer.append(\n                         0 + line,\n                         &format!(\n@@ -1550,7 +1550,7 @@ impl EmitterWriter {\n \n                             self.draw_line(\n                                 &mut buffer,\n-                                &replace_tabs(&unannotated_line),\n+                                &normalize_whitespace(&unannotated_line),\n                                 annotated_file.lines[line_idx + 1].line_index - 1,\n                                 last_buffer_line_num,\n                                 width_offset,\n@@ -1672,7 +1672,7 @@ impl EmitterWriter {\n                     buffer.puts(\n                         row_num - 1,\n                         max_line_num_len + 3,\n-                        &replace_tabs(\n+                        &normalize_whitespace(\n                             &*file_lines\n                                 .file\n                                 .get_line(file_lines.lines[line_pos].line_index)\n@@ -1698,7 +1698,7 @@ impl EmitterWriter {\n                 }\n \n                 // print the suggestion\n-                buffer.append(row_num, &replace_tabs(line), Style::NoStyle);\n+                buffer.append(row_num, &normalize_whitespace(line), Style::NoStyle);\n \n                 // Colorize addition/replacements with green.\n                 for &SubstitutionHighlight { start, end } in highlight_parts {\n@@ -2093,7 +2093,7 @@ const OUTPUT_REPLACEMENTS: &[(char, &str)] = &[\n     ('\\u{2069}', \"\"),\n ];\n \n-fn replace_tabs(str: &str) -> String {\n+fn normalize_whitespace(str: &str) -> String {\n     let mut s = str.to_string();\n     for (c, replacement) in OUTPUT_REPLACEMENTS {\n         s = s.replace(*c, replacement);"}]}