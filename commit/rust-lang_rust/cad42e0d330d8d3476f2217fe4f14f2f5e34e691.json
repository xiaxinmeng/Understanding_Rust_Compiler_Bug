{"sha": "cad42e0d330d8d3476f2217fe4f14f2f5e34e691", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZDQyZTBkMzMwZDhkMzQ3NmYyMjE3ZmU0ZjE0ZjJmNWUzNGU2OTE=", "commit": {"author": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-06-29T19:32:03Z"}, "committer": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-07-08T16:55:49Z"}, "message": "Add natvis for cell types", "tree": {"sha": "c3b94837db57ba08693a5d8d6d5d42fc2afba29c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3b94837db57ba08693a5d8d6d5d42fc2afba29c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cad42e0d330d8d3476f2217fe4f14f2f5e34e691", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cad42e0d330d8d3476f2217fe4f14f2f5e34e691", "html_url": "https://github.com/rust-lang/rust/commit/cad42e0d330d8d3476f2217fe4f14f2f5e34e691", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cad42e0d330d8d3476f2217fe4f14f2f5e34e691/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9740dcc82f39c2a7f1700ebbb2f0edb53388a44b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9740dcc82f39c2a7f1700ebbb2f0edb53388a44b", "html_url": "https://github.com/rust-lang/rust/commit/9740dcc82f39c2a7f1700ebbb2f0edb53388a44b"}], "stats": {"total": 117, "additions": 102, "deletions": 15}, "files": [{"sha": "96459adb6b8ac981facf419e35358c67dddba658", "filename": "src/etc/natvis/libcore.natvis", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/cad42e0d330d8d3476f2217fe4f14f2f5e34e691/src%2Fetc%2Fnatvis%2Flibcore.natvis", "raw_url": "https://github.com/rust-lang/rust/raw/cad42e0d330d8d3476f2217fe4f14f2f5e34e691/src%2Fetc%2Fnatvis%2Flibcore.natvis", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fnatvis%2Flibcore.natvis?ref=cad42e0d330d8d3476f2217fe4f14f2f5e34e691", "patch": "@@ -1,5 +1,39 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <AutoVisualizer xmlns=\"http://schemas.microsoft.com/vstudio/debugger/natvis/2010\">\n+  <Type Name=\"core::cell::Cell&lt;*&gt;\">\n+    <DisplayString>{value.value}</DisplayString>\n+    <Expand>\n+      <ExpandedItem>value.value</ExpandedItem>\n+    </Expand>\n+  </Type>\n+  <Type Name=\"core::cell::Ref&lt;*&gt;\">\n+    <DisplayString>{value}</DisplayString>\n+    <Expand>\n+      <ExpandedItem>value</ExpandedItem>\n+    </Expand>\n+  </Type>\n+  <Type Name=\"core::cell::RefMut&lt;*&gt;\">\n+    <DisplayString>{value}</DisplayString>\n+    <Expand>\n+      <ExpandedItem>value</ExpandedItem>\n+    </Expand>\n+  </Type>\n+  <Type Name=\"core::cell::RefCell&lt;*&gt;\">\n+    <DisplayString>{value.value}</DisplayString>\n+    <Expand>\n+      <Item Name=\"[Borrow state]\" Condition=\"borrow.value.value == 0\">\"Unborrowed\",sb</Item>\n+      <Item Name=\"[Borrow state]\" Condition=\"borrow.value.value &gt; 0\">\"Immutably borrowed\",sb</Item>\n+      <Item Name=\"[Borrow state]\" Condition=\"borrow.value.value &lt; 0\">\"Mutably borrowed\",sb</Item>\n+      <ExpandedItem>value.value</ExpandedItem>\n+    </Expand>\n+  </Type>\n+  <Type Name=\"core::cell::UnsafeCell&lt;*&gt;\">\n+    <DisplayString>{value}</DisplayString>\n+    <Expand>\n+      <ExpandedItem>value</ExpandedItem>\n+    </Expand>\n+  </Type>\n+\n   <Type Name=\"core::num::nonzero::NonZeroI8\">\n     <DisplayString>{__0}</DisplayString>\n   </Type>"}, {"sha": "688483e43e4dbdbf6e0e90895bce185fc90bcc66", "filename": "src/test/debuginfo/mutable-locs.rs", "status": "modified", "additions": 65, "deletions": 12, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/cad42e0d330d8d3476f2217fe4f14f2f5e34e691/src%2Ftest%2Fdebuginfo%2Fmutable-locs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cad42e0d330d8d3476f2217fe4f14f2f5e34e691/src%2Ftest%2Fdebuginfo%2Fmutable-locs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmutable-locs.rs?ref=cad42e0d330d8d3476f2217fe4f14f2f5e34e691", "patch": "@@ -9,26 +9,64 @@\n // cdb-command: g\n \n // cdb-command:dx static_c,d\n-// cdb-check:static_c,d       [Type: core::cell::Cell<i32>]\n-// cdb-check:    [...] value            [Type: core::cell::UnsafeCell<i32>]\n+// cdb-check:static_c,d       : 10 [Type: core::cell::Cell<i32>]\n+// cdb-check:    [<Raw View>]     [Type: core::cell::Cell<i32>]\n \n // cdb-command: dx static_c.value,d\n-// cdb-check:static_c.value,d [Type: core::cell::UnsafeCell<i32>]\n-// cdb-check:    [...] value            : 10 [Type: int]\n+// cdb-check:static_c.value,d : 10 [Type: core::cell::UnsafeCell<i32>]\n+// cdb-check:    [<Raw View>]     [Type: core::cell::UnsafeCell<i32>]\n \n // cdb-command:  dx dynamic_c,d\n-// cdb-check:dynamic_c,d      [Type: core::cell::RefCell<i32>]\n-// cdb-check:    [...] borrow           [Type: core::cell::Cell<isize>]\n-// cdb-check:    [...] value            [Type: core::cell::UnsafeCell<i32>]\n+// cdb-check:dynamic_c,d      : 15 [Type: core::cell::RefCell<i32>]\n+// cdb-check:    [<Raw View>]     [Type: core::cell::RefCell<i32>]\n+// cdb-check:    [Borrow state]   : Unborrowed\n \n // cdb-command: dx dynamic_c.value,d\n-// cdb-check:dynamic_c.value,d [Type: core::cell::UnsafeCell<i32>]\n-// cdb-check:    [...] value            : 15 [Type: int]\n+// cdb-check:dynamic_c.value,d : 15 [Type: core::cell::UnsafeCell<i32>]\n+// cdb-check:    [<Raw View>]     [Type: core::cell::UnsafeCell<i32>]\n \n // cdb-command: dx b,d\n-// cdb-check:b,d              [Type: core::cell::RefMut<i32>]\n-// cdb-check:    [...] value            : [...] : 42 [Type: int *]\n-// cdb-check:    [...] borrow           [Type: core::cell::BorrowRefMut]\n+// cdb-check:b,d              : 42 [Type: core::cell::RefMut<i32>]\n+// cdb-check:    [<Raw View>]     [Type: core::cell::RefMut<i32>]\n+// cdb-check:    42 [Type: int]\n+\n+// cdb-command: g\n+\n+// cdb-command: dx dynamic_c,d\n+// cdb-check:dynamic_c,d      : 15 [Type: core::cell::RefCell<i32>]\n+// cdb-check:    [<Raw View>]     [Type: core::cell::RefCell<i32>]\n+// cdb-check:    [Borrow state]   : Immutably borrowed\n+\n+// cdb-command: dx r_borrow,d\n+// cdb-check:r_borrow,d       : 15 [Type: core::cell::Ref<i32>]\n+// cdb-check:    [<Raw View>]     [Type: core::cell::Ref<i32>]\n+// cdb-check:    15 [Type: int]\n+\n+// cdb-command: g\n+\n+// cdb-command: dx dynamic_c,d\n+// cdb-check:dynamic_c,d      : 15 [Type: core::cell::RefCell<i32>]\n+// cdb-check:    [<Raw View>]     [Type: core::cell::RefCell<i32>]\n+// cdb-check:    [Borrow state]   : Unborrowed\n+\n+// cdb-command: g\n+\n+// cdb-command: dx dynamic_c,d\n+// cdb-check:dynamic_c,d      : 15 [Type: core::cell::RefCell<i32>]\n+// cdb-check:    [<Raw View>]     [Type: core::cell::RefCell<i32>]\n+// cdb-check:    [Borrow state]   : Mutably borrowed\n+\n+// cdb-command: dx r_borrow_mut,d\n+// cdb-check:r_borrow_mut,d   : 15 [Type: core::cell::RefMut<i32>]\n+// cdb-check:    [<Raw View>]     [Type: core::cell::RefMut<i32>]\n+// cdb-check:    15 [Type: int]\n+\n+// cdb-command: g\n+\n+// cdb-command: dx dynamic_c,d\n+// cdb-check:dynamic_c,d      : 15 [Type: core::cell::RefCell<i32>]\n+// cdb-check:    [<Raw View>]     [Type: core::cell::RefCell<i32>]\n+// cdb-check:    [Borrow state]   : Unborrowed\n \n #![allow(unused_variables)]\n \n@@ -46,6 +84,21 @@ fn main() {\n     *b = 42;\n \n     zzz(); // #break\n+\n+    // Check that `RefCell`'s borrow state visualizes correctly\n+    {\n+        let r_borrow = dynamic_c.borrow();\n+        zzz(); // #break\n+    }\n+\n+    zzz(); // #break\n+\n+    {\n+        let r_borrow_mut = dynamic_c.borrow_mut();\n+        zzz(); // #break\n+    }\n+\n+    zzz(); // #break\n }\n \n fn zzz() {()}"}, {"sha": "e1c10a4d37fc317bfa6c3c9b4418d9dab6f38e88", "filename": "src/test/debuginfo/rwlock-read.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cad42e0d330d8d3476f2217fe4f14f2f5e34e691/src%2Ftest%2Fdebuginfo%2Frwlock-read.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cad42e0d330d8d3476f2217fe4f14f2f5e34e691/src%2Ftest%2Fdebuginfo%2Frwlock-read.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Frwlock-read.rs?ref=cad42e0d330d8d3476f2217fe4f14f2f5e34e691", "patch": "@@ -11,15 +11,15 @@\n // cdb-command:dx l\n // cdb-check:l                [Type: std::sync::rwlock::RwLock<i32>]\n // cdb-check:    [...] poison           [Type: std::sync::poison::Flag]\n-// cdb-check:    [...] data             [Type: core::cell::UnsafeCell<i32>]\n+// cdb-check:    [...] data             : 0 [Type: core::cell::UnsafeCell<i32>]\n //\n // cdb-command:dx r\n // cdb-check:r                [Type: std::sync::rwlock::RwLockReadGuard<i32>]\n // cdb-check:    [...] lock             : [...] [Type: std::sync::rwlock::RwLock<i32> *]\n //\n // cdb-command:dx r.lock->data,d\n-// cdb-check:r.lock->data,d   [Type: core::cell::UnsafeCell<i32>]\n-// cdb-check:    [...] value            : 0 [Type: int]\n+// cdb-check:r.lock->data,d   : 0 [Type: core::cell::UnsafeCell<i32>]\n+// cdb-check:    [<Raw View>]     [Type: core::cell::UnsafeCell<i32>]\n \n #[allow(unused_variables)]\n "}]}