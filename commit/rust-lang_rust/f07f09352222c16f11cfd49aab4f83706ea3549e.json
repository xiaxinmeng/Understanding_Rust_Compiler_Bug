{"sha": "f07f09352222c16f11cfd49aab4f83706ea3549e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwN2YwOTM1MjIyMmMxNmYxMWNmZDQ5YWFiNGY4MzcwNmVhMzU0OWU=", "commit": {"author": {"name": "Panashe M. Fundira", "email": "fundirap@gmail.com", "date": "2016-08-07T17:21:23Z"}, "committer": {"name": "Panashe M. Fundira", "email": "fundirap@gmail.com", "date": "2016-08-07T17:21:23Z"}, "message": "Update E0214 to the new error format", "tree": {"sha": "ae36ea668d4b0f193fbf4a88d71b75c4cc222442", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae36ea668d4b0f193fbf4a88d71b75c4cc222442"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f07f09352222c16f11cfd49aab4f83706ea3549e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCAAGBQJXp24TAAoJEKvW6Q9Rv3S18ngIAI2StWIMYRcNSMEdELMUTxzK\nmxywFUbZeWnxXt68a/0Fp6iH6nc9p50zaXvoGvaDkYTmmmJdBC1oJ8BdyqcBhJXh\n7SMEfd+FzOJ34AP/AS1ljCgf01IdOicRP9HLN4Plno6F2Q/j5uZfZWjlWmiqX1Yo\nDUl7MrGxuxOHxuMl7Ufy7neV8fB08c9aNQlyz/8lk+nhld6H4YB0kqAuDLVpWH61\nMsDhpGLkFV8ZxBUTvIr30h5RvD3jg6ud5+wu3yPEhVCD8Z9qjqETVTJ4MpFimFv0\nwA4PWYKZ/usI40E0hlM8MKVr3b4/D6oij1PHYUQHtHrxF437A+/vrlRDUaBxptM=\n=BBwO\n-----END PGP SIGNATURE-----", "payload": "tree ae36ea668d4b0f193fbf4a88d71b75c4cc222442\nparent f5e7a5910d4f1dfa72724f6ee8125a6eade1665b\nauthor Panashe M. Fundira <fundirap@gmail.com> 1470590483 -0400\ncommitter Panashe M. Fundira <fundirap@gmail.com> 1470590483 -0400\n\nUpdate E0214 to the new error format\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f07f09352222c16f11cfd49aab4f83706ea3549e", "html_url": "https://github.com/rust-lang/rust/commit/f07f09352222c16f11cfd49aab4f83706ea3549e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f07f09352222c16f11cfd49aab4f83706ea3549e/comments", "author": {"login": "munyari", "id": 5841072, "node_id": "MDQ6VXNlcjU4NDEwNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5841072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munyari", "html_url": "https://github.com/munyari", "followers_url": "https://api.github.com/users/munyari/followers", "following_url": "https://api.github.com/users/munyari/following{/other_user}", "gists_url": "https://api.github.com/users/munyari/gists{/gist_id}", "starred_url": "https://api.github.com/users/munyari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munyari/subscriptions", "organizations_url": "https://api.github.com/users/munyari/orgs", "repos_url": "https://api.github.com/users/munyari/repos", "events_url": "https://api.github.com/users/munyari/events{/privacy}", "received_events_url": "https://api.github.com/users/munyari/received_events", "type": "User", "site_admin": false}, "committer": {"login": "munyari", "id": 5841072, "node_id": "MDQ6VXNlcjU4NDEwNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5841072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munyari", "html_url": "https://github.com/munyari", "followers_url": "https://api.github.com/users/munyari/followers", "following_url": "https://api.github.com/users/munyari/following{/other_user}", "gists_url": "https://api.github.com/users/munyari/gists{/gist_id}", "starred_url": "https://api.github.com/users/munyari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munyari/subscriptions", "organizations_url": "https://api.github.com/users/munyari/orgs", "repos_url": "https://api.github.com/users/munyari/repos", "events_url": "https://api.github.com/users/munyari/events{/privacy}", "received_events_url": "https://api.github.com/users/munyari/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5e7a5910d4f1dfa72724f6ee8125a6eade1665b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5e7a5910d4f1dfa72724f6ee8125a6eade1665b", "html_url": "https://github.com/rust-lang/rust/commit/f5e7a5910d4f1dfa72724f6ee8125a6eade1665b"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "3fcd53954137df92966c04dc831aa239b4e24a0f", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f07f09352222c16f11cfd49aab4f83706ea3549e/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07f09352222c16f11cfd49aab4f83706ea3549e/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=f07f09352222c16f11cfd49aab4f83706ea3549e", "patch": "@@ -360,8 +360,11 @@ impl<'o, 'gcx: 'tcx, 'tcx> AstConv<'gcx, 'tcx>+'o {\n                 self.convert_angle_bracketed_parameters(rscope, span, decl_generics, data)\n             }\n             hir::ParenthesizedParameters(..) => {\n-                span_err!(tcx.sess, span, E0214,\n-                          \"parenthesized parameters may only be used with a trait\");\n+                struct_span_err!(tcx.sess, span, E0214,\n+                          \"parenthesized parameters may only be used with a trait\")\n+                    .span_label(span, &format!(\"only traits may use parentheses\"))\n+                    .emit();\n+\n                 let ty_param_defs = decl_generics.types.get_slice(TypeSpace);\n                 (Substs::empty(),\n                  ty_param_defs.iter().map(|_| tcx.types.err).collect(),"}, {"sha": "e9c3cb72c11b07a7075c5a905ea4f120b2a77a0b", "filename": "src/test/compile-fail/E0214.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f07f09352222c16f11cfd49aab4f83706ea3549e/src%2Ftest%2Fcompile-fail%2FE0214.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07f09352222c16f11cfd49aab4f83706ea3549e/src%2Ftest%2Fcompile-fail%2FE0214.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0214.rs?ref=f07f09352222c16f11cfd49aab4f83706ea3549e", "patch": "@@ -9,5 +9,7 @@\n // except according to those terms.\n \n fn main() {\n-    let v: Vec(&str) = vec![\"foo\"]; //~ ERROR E0214\n+    let v: Vec(&str) = vec![\"foo\"];\n+    //~^ ERROR E0214\n+    //~| NOTE only traits may use parentheses\n }"}]}