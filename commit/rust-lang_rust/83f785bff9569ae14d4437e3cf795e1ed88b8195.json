{"sha": "83f785bff9569ae14d4437e3cf795e1ed88b8195", "node_id": "C_kwDOAAsO6NoAKDgzZjc4NWJmZjk1NjlhZTE0ZDQ0MzdlM2NmNzk1ZTFlZDg4YjgxOTU", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-05-08T00:44:30Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-05-08T00:44:30Z"}, "message": "Further elaborate the lack of guarantees from `Hasher`", "tree": {"sha": "24d1d024db1db2acfd04fbbe32cec58c746aef89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24d1d024db1db2acfd04fbbe32cec58c746aef89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83f785bff9569ae14d4437e3cf795e1ed88b8195", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83f785bff9569ae14d4437e3cf795e1ed88b8195", "html_url": "https://github.com/rust-lang/rust/commit/83f785bff9569ae14d4437e3cf795e1ed88b8195", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83f785bff9569ae14d4437e3cf795e1ed88b8195/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebdcb08abf00f193b3787dc32cea97ce74a14963", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebdcb08abf00f193b3787dc32cea97ce74a14963", "html_url": "https://github.com/rust-lang/rust/commit/ebdcb08abf00f193b3787dc32cea97ce74a14963"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "3d168f62a09f5ff7e2b5e9e566c598343b0f64e6", "filename": "library/core/src/hash/mod.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/83f785bff9569ae14d4437e3cf795e1ed88b8195/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83f785bff9569ae14d4437e3cf795e1ed88b8195/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs?ref=83f785bff9569ae14d4437e3cf795e1ed88b8195", "patch": "@@ -268,10 +268,29 @@ pub use macros::Hash;\n /// instance (with [`write`] and [`write_u8`] etc.). Most of the time, `Hasher`\n /// instances are used in conjunction with the [`Hash`] trait.\n ///\n-/// This trait makes no assumptions about how the various `write_*` methods are\n+/// This trait provides no guarantees about how the various `write_*` methods are\n /// defined and implementations of [`Hash`] should not assume that they work one\n /// way or another. You cannot assume, for example, that a [`write_u32`] call is\n-/// equivalent to four calls of [`write_u8`].\n+/// equivalent to four calls of [`write_u8`].  Nor can you assume that adjacent\n+/// `write` calls are merged, so it's possible, for example, that\n+/// ```\n+/// # fn foo(hasher: &mut impl std::hash::Hasher) {\n+/// hasher.write(&[1, 2]);\n+/// hasher.write(&[3, 4, 5, 6]);\n+/// # }\n+/// ```\n+/// and\n+/// ```\n+/// # fn foo(hasher: &mut impl std::hash::Hasher) {\n+/// hasher.write(&[1, 2, 3, 4]);\n+/// hasher.write(&[5, 6]);\n+/// # }\n+/// ```\n+/// end up producing different hashes.\n+///\n+/// Thus to produce the same hash value, [`Hash`] implementations must ensure\n+/// for equivalent items that exactly the same sequence of calls is made -- the\n+/// same methods with the same parameters in the same order.\n ///\n /// # Examples\n ///"}]}