{"sha": "6fa804debaec69cb49f020a84a1c62c3a8aa0969", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmYTgwNGRlYmFlYzY5Y2I0OWYwMjBhODRhMWM2MmMzYThhYTA5Njk=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-10-29T13:53:29Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-10-29T13:53:29Z"}, "message": "Use edition in rustfmt.toml when no command line argument is passed", "tree": {"sha": "880dc6753030c104d4c97e5c72f5352f7fc6f49f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/880dc6753030c104d4c97e5c72f5352f7fc6f49f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fa804debaec69cb49f020a84a1c62c3a8aa0969", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fa804debaec69cb49f020a84a1c62c3a8aa0969", "html_url": "https://github.com/rust-lang/rust/commit/6fa804debaec69cb49f020a84a1c62c3a8aa0969", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fa804debaec69cb49f020a84a1c62c3a8aa0969/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f64f4012fcd99c628f76455328c52c730bd2eab", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f64f4012fcd99c628f76455328c52c730bd2eab", "html_url": "https://github.com/rust-lang/rust/commit/1f64f4012fcd99c628f76455328c52c730bd2eab"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "b3c61b3df428fe3e6dc2177829bf87cd0b0dcb19", "filename": "src/bin/main.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6fa804debaec69cb49f020a84a1c62c3a8aa0969/src%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fa804debaec69cb49f020a84a1c62c3a8aa0969/src%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmain.rs?ref=6fa804debaec69cb49f020a84a1c62c3a8aa0969", "patch": "@@ -438,7 +438,7 @@ struct GetOptsOptions {\n     emit_mode: EmitMode,\n     backup: bool,\n     check: bool,\n-    edition: Edition,\n+    edition: Option<Edition>,\n     color: Option<Color>,\n     file_lines: FileLines, // Default is all lines in all files.\n     unstable_features: bool,\n@@ -503,7 +503,7 @@ impl GetOptsOptions {\n         }\n \n         if let Some(ref edition_str) = matches.opt_str(\"edition\") {\n-            options.edition = edition_from_edition_str(edition_str)?;\n+            options.edition = Some(edition_from_edition_str(edition_str)?);\n         }\n \n         if matches.opt_present(\"backup\") {\n@@ -559,7 +559,9 @@ impl CliOptions for GetOptsOptions {\n         if let Some(error_on_unformatted) = self.error_on_unformatted {\n             config.set().error_on_unformatted(error_on_unformatted);\n         }\n-        config.set().edition(self.edition);\n+        if let Some(edition) = self.edition {\n+            config.set().edition(edition);\n+        }\n         if self.check {\n             config.set().emit_mode(EmitMode::Diff);\n         } else {"}]}