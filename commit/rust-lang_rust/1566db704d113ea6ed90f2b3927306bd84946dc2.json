{"sha": "1566db704d113ea6ed90f2b3927306bd84946dc2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1NjZkYjcwNGQxMTNlYTZlZDkwZjJiMzkyNzMwNmJkODQ5NDZkYzI=", "commit": {"author": {"name": "dvermd", "email": "315743+dvermd@users.noreply.github.com", "date": "2020-10-19T19:38:36Z"}, "committer": {"name": "dvermd", "email": "315743+dvermd@users.noreply.github.com", "date": "2020-10-26T21:34:43Z"}, "message": "Update clippy_lints/src/ref_option_ref.rs\n\nCo-authored-by: Philipp Krones <hello@philkrones.com>", "tree": {"sha": "aec664f9929f89c4db425e7d5b061597b0c61d17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aec664f9929f89c4db425e7d5b061597b0c61d17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1566db704d113ea6ed90f2b3927306bd84946dc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1566db704d113ea6ed90f2b3927306bd84946dc2", "html_url": "https://github.com/rust-lang/rust/commit/1566db704d113ea6ed90f2b3927306bd84946dc2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1566db704d113ea6ed90f2b3927306bd84946dc2/comments", "author": {"login": "dvermd", "id": 315743, "node_id": "MDQ6VXNlcjMxNTc0Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/315743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvermd", "html_url": "https://github.com/dvermd", "followers_url": "https://api.github.com/users/dvermd/followers", "following_url": "https://api.github.com/users/dvermd/following{/other_user}", "gists_url": "https://api.github.com/users/dvermd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvermd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvermd/subscriptions", "organizations_url": "https://api.github.com/users/dvermd/orgs", "repos_url": "https://api.github.com/users/dvermd/repos", "events_url": "https://api.github.com/users/dvermd/events{/privacy}", "received_events_url": "https://api.github.com/users/dvermd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dvermd", "id": 315743, "node_id": "MDQ6VXNlcjMxNTc0Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/315743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvermd", "html_url": "https://github.com/dvermd", "followers_url": "https://api.github.com/users/dvermd/followers", "following_url": "https://api.github.com/users/dvermd/following{/other_user}", "gists_url": "https://api.github.com/users/dvermd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvermd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvermd/subscriptions", "organizations_url": "https://api.github.com/users/dvermd/orgs", "repos_url": "https://api.github.com/users/dvermd/repos", "events_url": "https://api.github.com/users/dvermd/events{/privacy}", "received_events_url": "https://api.github.com/users/dvermd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e26004a5ff2d16a7ad37723f5d284703cff2b94", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e26004a5ff2d16a7ad37723f5d284703cff2b94", "html_url": "https://github.com/rust-lang/rust/commit/8e26004a5ff2d16a7ad37723f5d284703cff2b94"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4ab2d8025e0867610d74b9b61a8025900e5c7f7f", "filename": "clippy_lints/src/ref_option_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1566db704d113ea6ed90f2b3927306bd84946dc2/clippy_lints%2Fsrc%2Fref_option_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1566db704d113ea6ed90f2b3927306bd84946dc2/clippy_lints%2Fsrc%2Fref_option_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fref_option_ref.rs?ref=1566db704d113ea6ed90f2b3927306bd84946dc2", "patch": "@@ -40,7 +40,7 @@ impl<'tcx> LateLintPass<'tcx> for RefOptionRef {\n             if let Some(res) = last.res;\n             if let Some(def_id) = res.opt_def_id();\n \n-            if match_def_path(cx, def_id, &paths::OPTION);\n+            if cx.tcx.is_diagnostic_item(sym!(option_type), def_id);\n             if let Some(ref params) = last_path_segment(qpath).args ;\n             if !params.parenthesized;\n             if let Some(inner_ty) = params.args.iter().find_map(|arg| match arg {"}]}