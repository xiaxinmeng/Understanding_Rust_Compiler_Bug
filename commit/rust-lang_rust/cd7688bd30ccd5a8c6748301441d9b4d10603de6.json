{"sha": "cd7688bd30ccd5a8c6748301441d9b4d10603de6", "node_id": "C_kwDOAAsO6NoAKGNkNzY4OGJkMzBjY2Q1YThjNjc0ODMwMTQ0MWQ5YjRkMTA2MDNkZTY", "commit": {"author": {"name": "Luca Palmieri", "email": "20745048+LukeMathWalker@users.noreply.github.com", "date": "2023-05-22T17:26:20Z"}, "committer": {"name": "Luca Palmieri", "email": "20745048+LukeMathWalker@users.noreply.github.com", "date": "2023-05-22T17:26:20Z"}, "message": "Verify that `ItemEnum` can be serialized and then deserialized using bincode", "tree": {"sha": "4f76769c4a2ff55c5ead4fef904a81ca054ae720", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f76769c4a2ff55c5ead4fef904a81ca054ae720"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd7688bd30ccd5a8c6748301441d9b4d10603de6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd7688bd30ccd5a8c6748301441d9b4d10603de6", "html_url": "https://github.com/rust-lang/rust/commit/cd7688bd30ccd5a8c6748301441d9b4d10603de6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd7688bd30ccd5a8c6748301441d9b4d10603de6/comments", "author": {"login": "LukeMathWalker", "id": 20745048, "node_id": "MDQ6VXNlcjIwNzQ1MDQ4", "avatar_url": "https://avatars.githubusercontent.com/u/20745048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukeMathWalker", "html_url": "https://github.com/LukeMathWalker", "followers_url": "https://api.github.com/users/LukeMathWalker/followers", "following_url": "https://api.github.com/users/LukeMathWalker/following{/other_user}", "gists_url": "https://api.github.com/users/LukeMathWalker/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukeMathWalker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukeMathWalker/subscriptions", "organizations_url": "https://api.github.com/users/LukeMathWalker/orgs", "repos_url": "https://api.github.com/users/LukeMathWalker/repos", "events_url": "https://api.github.com/users/LukeMathWalker/events{/privacy}", "received_events_url": "https://api.github.com/users/LukeMathWalker/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LukeMathWalker", "id": 20745048, "node_id": "MDQ6VXNlcjIwNzQ1MDQ4", "avatar_url": "https://avatars.githubusercontent.com/u/20745048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukeMathWalker", "html_url": "https://github.com/LukeMathWalker", "followers_url": "https://api.github.com/users/LukeMathWalker/followers", "following_url": "https://api.github.com/users/LukeMathWalker/following{/other_user}", "gists_url": "https://api.github.com/users/LukeMathWalker/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukeMathWalker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukeMathWalker/subscriptions", "organizations_url": "https://api.github.com/users/LukeMathWalker/orgs", "repos_url": "https://api.github.com/users/LukeMathWalker/repos", "events_url": "https://api.github.com/users/LukeMathWalker/events{/privacy}", "received_events_url": "https://api.github.com/users/LukeMathWalker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5e51013753ca75c239403b47af1e605f5af2a64", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5e51013753ca75c239403b47af1e605f5af2a64", "html_url": "https://github.com/rust-lang/rust/commit/a5e51013753ca75c239403b47af1e605f5af2a64"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "b003916b03d637338a64321cead19afa8f5142c9", "filename": "Cargo.lock", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cd7688bd30ccd5a8c6748301441d9b4d10603de6/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/cd7688bd30ccd5a8c6748301441d9b4d10603de6/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=cd7688bd30ccd5a8c6748301441d9b4d10603de6", "patch": "@@ -246,6 +246,15 @@ dependencies = [\n  \"serde\",\n ]\n \n+[[package]]\n+name = \"bincode\"\n+version = \"1.3.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"b1f45e9417d87227c7a56d22e471c6206462cba514c7590c09aff4cf6d1ddcad\"\n+dependencies = [\n+ \"serde\",\n+]\n+\n [[package]]\n name = \"bitflags\"\n version = \"1.3.2\"\n@@ -4351,6 +4360,7 @@ dependencies = [\n name = \"rustdoc-json-types\"\n version = \"0.1.0\"\n dependencies = [\n+ \"bincode\",\n  \"rustc-hash\",\n  \"serde\",\n  \"serde_json\","}, {"sha": "d3548036d4c727caae87ef487dea7f3b65ae1dcb", "filename": "src/rustdoc-json-types/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd7688bd30ccd5a8c6748301441d9b4d10603de6/src%2Frustdoc-json-types%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/cd7688bd30ccd5a8c6748301441d9b4d10603de6/src%2Frustdoc-json-types%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc-json-types%2FCargo.toml?ref=cd7688bd30ccd5a8c6748301441d9b4d10603de6", "patch": "@@ -12,3 +12,4 @@ rustc-hash = \"1.1.0\"\n \n [dev-dependencies]\n serde_json = \"1.0\"\n+bincode = \"1\""}, {"sha": "1126d5f786f4dd594bb9aaddd1cd8eed77965603", "filename": "src/rustdoc-json-types/tests.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cd7688bd30ccd5a8c6748301441d9b4d10603de6/src%2Frustdoc-json-types%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd7688bd30ccd5a8c6748301441d9b4d10603de6/src%2Frustdoc-json-types%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc-json-types%2Ftests.rs?ref=cd7688bd30ccd5a8c6748301441d9b4d10603de6", "patch": "@@ -8,11 +8,15 @@ fn test_struct_info_roundtrip() {\n         impls: vec![],\n     });\n \n+    // JSON\n     let struct_json = serde_json::to_string(&s).unwrap();\n-\n     let de_s = serde_json::from_str(&struct_json).unwrap();\n-\n     assert_eq!(s, de_s);\n+\n+    // Bincode\n+    let encoded: Vec<u8> = bincode::serialize(&s).unwrap();\n+    let decoded: ItemEnum = bincode::deserialize(&encoded).unwrap();\n+    assert_eq!(s, decoded);\n }\n \n #[test]\n@@ -24,9 +28,13 @@ fn test_union_info_roundtrip() {\n         impls: vec![],\n     });\n \n+    // JSON\n     let union_json = serde_json::to_string(&u).unwrap();\n-\n     let de_u = serde_json::from_str(&union_json).unwrap();\n-\n     assert_eq!(u, de_u);\n+\n+    // Bincode\n+    let encoded: Vec<u8> = bincode::serialize(&u).unwrap();\n+    let decoded: ItemEnum = bincode::deserialize(&encoded).unwrap();\n+    assert_eq!(u, decoded);\n }"}]}