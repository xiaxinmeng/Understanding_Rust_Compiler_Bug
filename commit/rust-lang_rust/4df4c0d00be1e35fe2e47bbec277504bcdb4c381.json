{"sha": "4df4c0d00be1e35fe2e47bbec277504bcdb4c381", "node_id": "C_kwDOAAsO6NoAKDRkZjRjMGQwMGJlMWUzNWZlMmU0N2JiZWMyNzc1MDRiY2RiNGMzODE", "commit": {"author": {"name": "yanchith", "email": "yanchi.toth@gmail.com", "date": "2023-06-09T10:19:17Z"}, "committer": {"name": "yanchith", "email": "yanchi.toth@gmail.com", "date": "2023-06-09T10:19:17Z"}, "message": "Don't explicitly name Global", "tree": {"sha": "dd4fecac7e5e4e82fb1cc78e41ff7c17cf69441f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd4fecac7e5e4e82fb1cc78e41ff7c17cf69441f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4df4c0d00be1e35fe2e47bbec277504bcdb4c381", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4df4c0d00be1e35fe2e47bbec277504bcdb4c381", "html_url": "https://github.com/rust-lang/rust/commit/4df4c0d00be1e35fe2e47bbec277504bcdb4c381", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4df4c0d00be1e35fe2e47bbec277504bcdb4c381/comments", "author": {"login": "yanchith", "id": 1099245, "node_id": "MDQ6VXNlcjEwOTkyNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1099245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanchith", "html_url": "https://github.com/yanchith", "followers_url": "https://api.github.com/users/yanchith/followers", "following_url": "https://api.github.com/users/yanchith/following{/other_user}", "gists_url": "https://api.github.com/users/yanchith/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanchith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanchith/subscriptions", "organizations_url": "https://api.github.com/users/yanchith/orgs", "repos_url": "https://api.github.com/users/yanchith/repos", "events_url": "https://api.github.com/users/yanchith/events{/privacy}", "received_events_url": "https://api.github.com/users/yanchith/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yanchith", "id": 1099245, "node_id": "MDQ6VXNlcjEwOTkyNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1099245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanchith", "html_url": "https://github.com/yanchith", "followers_url": "https://api.github.com/users/yanchith/followers", "following_url": "https://api.github.com/users/yanchith/following{/other_user}", "gists_url": "https://api.github.com/users/yanchith/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanchith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanchith/subscriptions", "organizations_url": "https://api.github.com/users/yanchith/orgs", "repos_url": "https://api.github.com/users/yanchith/repos", "events_url": "https://api.github.com/users/yanchith/events{/privacy}", "received_events_url": "https://api.github.com/users/yanchith/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "767a7119a08b51ed6fa2d4f6092418e63ce2877a", "url": "https://api.github.com/repos/rust-lang/rust/commits/767a7119a08b51ed6fa2d4f6092418e63ce2877a", "html_url": "https://github.com/rust-lang/rust/commit/767a7119a08b51ed6fa2d4f6092418e63ce2877a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "904e163da8880cbed1d5c40e4a238372eb3aadb2", "filename": "library/alloc/src/collections/binary_heap/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4df4c0d00be1e35fe2e47bbec277504bcdb4c381/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4df4c0d00be1e35fe2e47bbec277504bcdb4c381/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Fmod.rs?ref=4df4c0d00be1e35fe2e47bbec277504bcdb4c381", "patch": "@@ -1563,7 +1563,7 @@ unsafe impl<T, A: Allocator> SourceIter for IntoIter<T, A> {\n #[doc(hidden)]\n unsafe impl<I, A: Allocator> InPlaceIterable for IntoIter<I, A> {}\n \n-unsafe impl<I> AsVecIntoIter for IntoIter<I, Global> {\n+unsafe impl<I> AsVecIntoIter for IntoIter<I> {\n     type Item = I;\n \n     fn as_into_iter(&mut self) -> &mut vec::IntoIter<Self::Item> {"}]}