{"sha": "f8bc0e249c532ceacc9897ea08f7b97ecba5408e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YmMwZTI0OWM1MzJjZWFjYzk4OTdlYTA4ZjdiOTdlY2JhNTQwOGU=", "commit": {"author": {"name": "Yusuke Tanaka", "email": "yusuktan@maguro.dev", "date": "2021-02-10T15:50:09Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-03-02T09:40:23Z"}, "message": "Move transmute_ptr_to_ptr to its own module", "tree": {"sha": "d18421aa21fde27c66559b7df4172f9c8b173bc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d18421aa21fde27c66559b7df4172f9c8b173bc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8bc0e249c532ceacc9897ea08f7b97ecba5408e", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmA+CAcACgkQHKDfKvWd\naKWMOBAAg2KVstmlQf5iXcAq3agylhHbTMvoHi8FwjgLliUXOfcR7aIQwuCIPrOy\nL1Jt3BI7J0mRg1DnVQe9Bq3woPQGWBJAIUkBUjTFHsL8GcFUH+s1zUIBRWfkqsdr\nOgJJuo4T91XLrAlm9mpmLbRiew30Rvf5h3dTL/U3+BHV27DwdtV8avq0sTxIHEN/\n3CiV8bgJ/5bXsCYvjpWgV1lAwaNKnL019UQ3V5yYa9Mfv6iYhCvm6R4Pgk/j/yGK\nUVypmGHjPVFi1Nv5Vz7bno6QdhxJqwx8VQYVRPuwPJOJmqCksHQcVq5ZXx6GEYpx\nKVr0heljNZUQbHR3YFDDy+6bWStvEIBDGRUUwFec37pjUbWm2aDDi/b5cyQoLMtx\nauKsjOXdF8QOWgB/wy1LsoxR6rcY5ziDk0pKMyuELxjW4nqzsn6XE7yi6F+tvcn+\nDzT7h5pEW2IfF4eF9UJPWw2KxzZ9yAN9Ha5Dhxph8fiZxCPG022bRYOkOkclWobS\n275C5z6A0Hnv1PMgxunXYbNGmqT84rmPIXAhwrmmHw0PLzrr2Eghr+UgTmVlEQ4j\ntIFVsOTI8IByUM2L0uiWmzczoxkkBhH6bOo6NHVGC4UdXDRvR/T0pjuLgu2jnhm3\nNQx6RNyxcvmQlrxhofX6fzwFh6B14HmTv1/GDAHPpYSxFcd2dr8=\n=4uJM\n-----END PGP SIGNATURE-----", "payload": "tree d18421aa21fde27c66559b7df4172f9c8b173bc5\nparent 7af3458b5458ad99dc900b9fe744f39b9dae449e\nauthor Yusuke Tanaka <yusuktan@maguro.dev> 1612972209 +0900\ncommitter flip1995 <philipp.krones@embecosm.com> 1614678023 +0100\n\nMove transmute_ptr_to_ptr to its own module\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8bc0e249c532ceacc9897ea08f7b97ecba5408e", "html_url": "https://github.com/rust-lang/rust/commit/f8bc0e249c532ceacc9897ea08f7b97ecba5408e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8bc0e249c532ceacc9897ea08f7b97ecba5408e/comments", "author": {"login": "magurotuna", "id": 23649474, "node_id": "MDQ6VXNlcjIzNjQ5NDc0", "avatar_url": "https://avatars.githubusercontent.com/u/23649474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magurotuna", "html_url": "https://github.com/magurotuna", "followers_url": "https://api.github.com/users/magurotuna/followers", "following_url": "https://api.github.com/users/magurotuna/following{/other_user}", "gists_url": "https://api.github.com/users/magurotuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/magurotuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magurotuna/subscriptions", "organizations_url": "https://api.github.com/users/magurotuna/orgs", "repos_url": "https://api.github.com/users/magurotuna/repos", "events_url": "https://api.github.com/users/magurotuna/events{/privacy}", "received_events_url": "https://api.github.com/users/magurotuna/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7af3458b5458ad99dc900b9fe744f39b9dae449e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7af3458b5458ad99dc900b9fe744f39b9dae449e", "html_url": "https://github.com/rust-lang/rust/commit/7af3458b5458ad99dc900b9fe744f39b9dae449e"}], "stats": {"total": 53, "additions": 41, "deletions": 12}, "files": [{"sha": "e144c96498bdd58b5db88d5debd4129560c70c63", "filename": "clippy_lints/src/transmute/mod.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f8bc0e249c532ceacc9897ea08f7b97ecba5408e/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8bc0e249c532ceacc9897ea08f7b97ecba5408e/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs?ref=f8bc0e249c532ceacc9897ea08f7b97ecba5408e", "patch": "@@ -1,5 +1,6 @@\n mod crosspointer_transmute;\n mod transmute_int_to_char;\n+mod transmute_ptr_to_ptr;\n mod transmute_ptr_to_ref;\n mod transmute_ref_to_ref;\n mod useless_transmute;\n@@ -375,20 +376,12 @@ impl<'tcx> LateLintPass<'tcx> for Transmute {\n                 if triggered {\n                     return;\n                 }\n+                let triggered = transmute_ptr_to_ptr::check(cx, e, from_ty, to_ty, args);\n+                if triggered {\n+                    return;\n+                }\n \n                 match (&from_ty.kind(), &to_ty.kind()) {\n-                    (ty::RawPtr(_), ty::RawPtr(to_ty)) => span_lint_and_then(\n-                        cx,\n-                        TRANSMUTE_PTR_TO_PTR,\n-                        e.span,\n-                        \"transmute from a pointer to a pointer\",\n-                        |diag| {\n-                            if let Some(arg) = sugg::Sugg::hir_opt(cx, &args[0]) {\n-                                let sugg = arg.as_ty(cx.tcx.mk_ptr(*to_ty));\n-                                diag.span_suggestion(e.span, \"try\", sugg.to_string(), Applicability::Unspecified);\n-                            }\n-                        },\n-                    ),\n                     (ty::Int(ty::IntTy::I8) | ty::Uint(ty::UintTy::U8), ty::Bool) => {\n                         span_lint_and_then(\n                             cx,"}, {"sha": "68668ec30db00ad1acc9c9ec8d67dafa04f93ddb", "filename": "clippy_lints/src/transmute/transmute_ptr_to_ptr.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f8bc0e249c532ceacc9897ea08f7b97ecba5408e/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8bc0e249c532ceacc9897ea08f7b97ecba5408e/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ptr.rs?ref=f8bc0e249c532ceacc9897ea08f7b97ecba5408e", "patch": "@@ -0,0 +1,36 @@\n+use super::TRANSMUTE_PTR_TO_PTR;\n+use crate::utils::{span_lint_and_then, sugg};\n+use rustc_errors::Applicability;\n+use rustc_hir::Expr;\n+use rustc_lint::LateContext;\n+use rustc_middle::ty;\n+use rustc_middle::ty::Ty;\n+\n+/// Checks for `transmute_ptr_to_ptr` lint.\n+/// Returns `true` if it's triggered, otherwise returns `false`.\n+pub(super) fn check<'tcx>(\n+    cx: &LateContext<'tcx>,\n+    e: &'tcx Expr<'_>,\n+    from_ty: Ty<'tcx>,\n+    to_ty: Ty<'tcx>,\n+    args: &'tcx [Expr<'_>],\n+) -> bool {\n+    match (&from_ty.kind(), &to_ty.kind()) {\n+        (ty::RawPtr(_), ty::RawPtr(to_ty)) => {\n+            span_lint_and_then(\n+                cx,\n+                TRANSMUTE_PTR_TO_PTR,\n+                e.span,\n+                \"transmute from a pointer to a pointer\",\n+                |diag| {\n+                    if let Some(arg) = sugg::Sugg::hir_opt(cx, &args[0]) {\n+                        let sugg = arg.as_ty(cx.tcx.mk_ptr(*to_ty));\n+                        diag.span_suggestion(e.span, \"try\", sugg.to_string(), Applicability::Unspecified);\n+                    }\n+                },\n+            );\n+            true\n+        },\n+        _ => false,\n+    }\n+}"}]}