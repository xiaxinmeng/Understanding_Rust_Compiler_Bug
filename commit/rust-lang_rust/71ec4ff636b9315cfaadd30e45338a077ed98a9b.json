{"sha": "71ec4ff636b9315cfaadd30e45338a077ed98a9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxZWM0ZmY2MzZiOTMxNWNmYWFkZDMwZTQ1MzM4YTA3N2VkOThhOWI=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-11-03T19:06:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-03T19:06:48Z"}, "message": "Merge pull request #3404 from matthiaskrgr/rustup\n\nrustup https://github.com/rust-lang/rust/pull/55330/", "tree": {"sha": "f5dff82c9181b1ea15928c6e1f58ecdf58cc8711", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5dff82c9181b1ea15928c6e1f58ecdf58cc8711"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71ec4ff636b9315cfaadd30e45338a077ed98a9b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb3fHICRBK7hj4Ov3rIwAAdHIIAK7V1/ZDnOYPwZeZxpjfzhJX\nEbnVfMAXT0wps7HPTfy45IQPlCl3pAMUDV4AXaucbzJht7vc8TyQtR7ikDmhWA/1\nwwxMqNxZvDMlbWAb26RszorbM8opqUwsvJVeD0jz7PTHX7hVWNVdN/iIRXwmOB2h\no8Q1HXyW/suteM7Pki8URxn4Z1lCLOmJVPsZujHz38vBr0qsVZD8BgSZlIklLCIR\n6AuvmGNiSuKU9W2ks1KnbLOHIkS3mEVCx5OxARLrOKpeUOuNQpS6xOVnQOQRSLUp\nBXiVDG42njR+xu+jUHWinB06+bq8c+UNZ6uKO5x58uUjxJOdJWzcqQ0HhS3aGDQ=\n=rnHN\n-----END PGP SIGNATURE-----\n", "payload": "tree f5dff82c9181b1ea15928c6e1f58ecdf58cc8711\nparent 486300b89dd6b06f53061a193d3477ceb3740dee\nparent b59b60c8ae2c3702069ad47c05023563636a21ef\nauthor Philipp Hansch <dev@phansch.net> 1541272008 +0100\ncommitter GitHub <noreply@github.com> 1541272008 +0100\n\nMerge pull request #3404 from matthiaskrgr/rustup\n\nrustup https://github.com/rust-lang/rust/pull/55330/"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71ec4ff636b9315cfaadd30e45338a077ed98a9b", "html_url": "https://github.com/rust-lang/rust/commit/71ec4ff636b9315cfaadd30e45338a077ed98a9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71ec4ff636b9315cfaadd30e45338a077ed98a9b/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "486300b89dd6b06f53061a193d3477ceb3740dee", "url": "https://api.github.com/repos/rust-lang/rust/commits/486300b89dd6b06f53061a193d3477ceb3740dee", "html_url": "https://github.com/rust-lang/rust/commit/486300b89dd6b06f53061a193d3477ceb3740dee"}, {"sha": "b59b60c8ae2c3702069ad47c05023563636a21ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/b59b60c8ae2c3702069ad47c05023563636a21ef", "html_url": "https://github.com/rust-lang/rust/commit/b59b60c8ae2c3702069ad47c05023563636a21ef"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "373cf1fbf388fa485236d57fa9731fa2bbede606", "filename": "clippy_lints/src/map_unit_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71ec4ff636b9315cfaadd30e45338a077ed98a9b/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71ec4ff636b9315cfaadd30e45338a077ed98a9b/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_unit_fn.rs?ref=71ec4ff636b9315cfaadd30e45338a077ed98a9b", "patch": "@@ -106,7 +106,7 @@ fn is_unit_function(cx: &LateContext<'_, '_>, expr: &hir::Expr) -> bool {\n     let ty = cx.tables.expr_ty(expr);\n \n     if let ty::FnDef(id, _) = ty.sty {\n-        if let Some(fn_type) = cx.tcx.fn_sig(id).no_late_bound_regions() {\n+        if let Some(fn_type) = cx.tcx.fn_sig(id).no_bound_vars() {\n             return is_unit_type(fn_type.output());\n         }\n     }"}, {"sha": "d4257fd1aa9501091017ee7397f805dc3460e569", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71ec4ff636b9315cfaadd30e45338a077ed98a9b/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71ec4ff636b9315cfaadd30e45338a077ed98a9b/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=71ec4ff636b9315cfaadd30e45338a077ed98a9b", "patch": "@@ -125,7 +125,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n             .filter(|p| !p.is_global())\n             .filter_map(|pred| {\n                 if let ty::Predicate::Trait(poly_trait_ref) = pred {\n-                    if poly_trait_ref.def_id() == sized_trait || poly_trait_ref.skip_binder().has_escaping_regions() {\n+                    if poly_trait_ref.def_id() == sized_trait || poly_trait_ref.skip_binder().has_escaping_bound_vars() {\n                         return None;\n                     }\n                     Some(poly_trait_ref)"}]}