{"sha": "7777b0b03d6d89c8a15f28b8adc55b1a165c90c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3NzdiMGIwM2Q2ZDg5YzhhMTVmMjhiOGFkYzU1YjFhMTY1YzkwYzA=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-06-20T02:43:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-20T02:43:11Z"}, "message": "Rollup merge of #73484 - poliorcetics:use-prelude-doc, r=sfackler\n\nUpdate the doc for std::prelude to the correct behavior\n\nFixes #64686.\n\nOne line change to ensure the docs are correct about the behavior of the compiler when inserting`std::prelude::v1`.\n\nI don't think examples are necessary but I can add some (especially those from the original issue) if needed.", "tree": {"sha": "204ba9060892d69051a919330ea9d0473393a96c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/204ba9060892d69051a919330ea9d0473393a96c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7777b0b03d6d89c8a15f28b8adc55b1a165c90c0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe7XfACRBK7hj4Ov3rIwAAdHIIABIDsz5bz3K3PZO/hGS1VJVI\nLwEEpwGNMnzRS2XB764yoriAMxXVIiXfan4rsMpX7c24ksP9Xr0ViCMwuHt3rJvG\n3CkSFSFyhzUxzn9kVz2AX1h4HgDTu12dvjCOtzLNQiH8VcV7+avmqYnep/2h3eY9\n17kk4sdliGSfTu1Eax173DEow44LLUUYvJOmherlScOqwp62NoIjChCQ8IrdXA2Y\nnHXWm5gKIEwhMFH6N7NWIR5/XaeYF0d0OnyLN5MJXfcSt3/tk9vxDPLlZahWzoIT\nZiYPzFkjyczg6LK6gPzKd37ncKbgUizEQGOaGc86jy+0usi6Q1rq4w1MDpE23eA=\n=Dtz+\n-----END PGP SIGNATURE-----\n", "payload": "tree 204ba9060892d69051a919330ea9d0473393a96c\nparent fd1c7835a33d622fc94abd003f30881ea9deb483\nparent 8f0bd5ffe66bb08d00158c5edf36902f1a356045\nauthor Manish Goregaokar <manishsmail@gmail.com> 1592620991 -0700\ncommitter GitHub <noreply@github.com> 1592620991 -0700\n\nRollup merge of #73484 - poliorcetics:use-prelude-doc, r=sfackler\n\nUpdate the doc for std::prelude to the correct behavior\n\nFixes #64686.\n\nOne line change to ensure the docs are correct about the behavior of the compiler when inserting`std::prelude::v1`.\n\nI don't think examples are necessary but I can add some (especially those from the original issue) if needed.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7777b0b03d6d89c8a15f28b8adc55b1a165c90c0", "html_url": "https://github.com/rust-lang/rust/commit/7777b0b03d6d89c8a15f28b8adc55b1a165c90c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7777b0b03d6d89c8a15f28b8adc55b1a165c90c0/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd1c7835a33d622fc94abd003f30881ea9deb483", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd1c7835a33d622fc94abd003f30881ea9deb483", "html_url": "https://github.com/rust-lang/rust/commit/fd1c7835a33d622fc94abd003f30881ea9deb483"}, {"sha": "8f0bd5ffe66bb08d00158c5edf36902f1a356045", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f0bd5ffe66bb08d00158c5edf36902f1a356045", "html_url": "https://github.com/rust-lang/rust/commit/8f0bd5ffe66bb08d00158c5edf36902f1a356045"}], "stats": {"total": 16, "additions": 0, "deletions": 16}, "files": [{"sha": "48f7cf169885f7489d6c63e503fa7428671f29fb", "filename": "src/libstd/prelude/mod.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7777b0b03d6d89c8a15f28b8adc55b1a165c90c0/src%2Flibstd%2Fprelude%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7777b0b03d6d89c8a15f28b8adc55b1a165c90c0/src%2Flibstd%2Fprelude%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude%2Fmod.rs?ref=7777b0b03d6d89c8a15f28b8adc55b1a165c90c0", "patch": "@@ -10,22 +10,6 @@\n //! things, particularly traits, which are used in almost every single Rust\n //! program.\n //!\n-//! On a technical level, Rust inserts\n-//!\n-//! ```\n-//! # #[allow(unused_extern_crates)]\n-//! extern crate std;\n-//! ```\n-//!\n-//! into the crate root of every crate, and\n-//!\n-//! ```\n-//! # #[allow(unused_imports)]\n-//! use std::prelude::v1::*;\n-//! ```\n-//!\n-//! into every module.\n-//!\n //! # Other preludes\n //!\n //! Preludes can be seen as a pattern to make using multiple types more"}]}