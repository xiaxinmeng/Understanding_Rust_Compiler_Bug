{"sha": "2d4582bfc648fd1a1ce92ea677aeb1c82ee8a631", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkNDU4MmJmYzY0OGZkMWExY2U5MmVhNjc3YWViMWM4MmVlOGE2MzE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-19T22:00:54Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-20T09:15:38Z"}, "message": "fixme comment", "tree": {"sha": "7ab8aa0935ec5b6888f93038cebf38c24179f1e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ab8aa0935ec5b6888f93038cebf38c24179f1e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d4582bfc648fd1a1ce92ea677aeb1c82ee8a631", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d4582bfc648fd1a1ce92ea677aeb1c82ee8a631", "html_url": "https://github.com/rust-lang/rust/commit/2d4582bfc648fd1a1ce92ea677aeb1c82ee8a631", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d4582bfc648fd1a1ce92ea677aeb1c82ee8a631/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2caac99ef3731b39c484a23cdab00af94de7b645", "url": "https://api.github.com/repos/rust-lang/rust/commits/2caac99ef3731b39c484a23cdab00af94de7b645", "html_url": "https://github.com/rust-lang/rust/commit/2caac99ef3731b39c484a23cdab00af94de7b645"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "f44abc73062f1ef799768b864c8d03afae212635", "filename": "crates/ra_hir/src/module/nameres.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2d4582bfc648fd1a1ce92ea677aeb1c82ee8a631/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d4582bfc648fd1a1ce92ea677aeb1c82ee8a631/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs?ref=2d4582bfc648fd1a1ce92ea677aeb1c82ee8a631", "patch": "@@ -37,6 +37,7 @@ use crate::{\n \n /// Item map is the result of the name resolution. Item map contains, for each\n /// module, the set of visible items.\n+// FIXME: currenty we compute item map per source-root. We should do it per crate instead.\n #[derive(Default, Debug, PartialEq, Eq)]\n pub struct ItemMap {\n     pub per_module: FxHashMap<ModuleId, ModuleScope>,"}]}