{"sha": "318f9c89e0eb9fbc2bfbcdb372e7853716783e83", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxOGY5Yzg5ZTBlYjlmYmMyYmZiY2RiMzcyZTc4NTM3MTY3ODNlODM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-05T05:44:52Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-06T04:52:25Z"}, "message": "Add StaticParts to reduce the number of args in rewrite_static()", "tree": {"sha": "82655bc4f1acc7af8780fc1a9dec0ad07070f849", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82655bc4f1acc7af8780fc1a9dec0ad07070f849"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/318f9c89e0eb9fbc2bfbcdb372e7853716783e83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/318f9c89e0eb9fbc2bfbcdb372e7853716783e83", "html_url": "https://github.com/rust-lang/rust/commit/318f9c89e0eb9fbc2bfbcdb372e7853716783e83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/318f9c89e0eb9fbc2bfbcdb372e7853716783e83/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c6c15a0965e01807a3d7915487c6915c9048edc", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c6c15a0965e01807a3d7915487c6915c9048edc", "html_url": "https://github.com/rust-lang/rust/commit/8c6c15a0965e01807a3d7915487c6915c9048edc"}], "stats": {"total": 83, "additions": 57, "deletions": 26}, "files": [{"sha": "c9baa3a06168def6fdbf99bd2bc2971cefc98768", "filename": "src/items.rs", "status": "modified", "additions": 34, "deletions": 5, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/318f9c89e0eb9fbc2bfbcdb372e7853716783e83/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/318f9c89e0eb9fbc2bfbcdb372e7853716783e83/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=318f9c89e0eb9fbc2bfbcdb372e7853716783e83", "patch": "@@ -1461,17 +1461,46 @@ pub fn rewrite_struct_field(\n     )\n }\n \n-pub fn rewrite_static(\n-    prefix: &str,\n-    vis: &ast::Visibility,\n+pub struct StaticParts<'a> {\n+    vis: &'a ast::Visibility,\n     ident: ast::Ident,\n-    ty: &ast::Ty,\n+    ty: &'a ast::Ty,\n     mutability: ast::Mutability,\n-    expr_opt: Option<&ptr::P<ast::Expr>>,\n+    expr_opt: Option<&'a ptr::P<ast::Expr>>,\n+}\n+\n+impl<'a> StaticParts<'a> {\n+    pub fn new(\n+        vis: &'a ast::Visibility,\n+        ident: ast::Ident,\n+        ty: &'a ast::Ty,\n+        mutability: ast::Mutability,\n+        expr_opt: Option<&'a ptr::P<ast::Expr>>,\n+    ) -> StaticParts<'a> {\n+        StaticParts {\n+            vis,\n+            ident,\n+            ty,\n+            mutability,\n+            expr_opt,\n+        }\n+    }\n+}\n+\n+pub fn rewrite_static(\n+    prefix: &str,\n+    static_parts: &StaticParts,\n     offset: Indent,\n     span: Span,\n     context: &RewriteContext,\n ) -> Option<String> {\n+    let StaticParts {\n+        vis,\n+        ident,\n+        ty,\n+        mutability,\n+        expr_opt,\n+    } = *static_parts;\n     let colon = colon_spaces(\n         context.config.space_before_type_annotation(),\n         context.config.space_after_type_annotation_colon(),"}, {"sha": "5b654b07336c9edd28348b35d2f51c6fe7541b0f", "filename": "src/visitor.rs", "status": "modified", "additions": 23, "deletions": 21, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/318f9c89e0eb9fbc2bfbcdb372e7853716783e83/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/318f9c89e0eb9fbc2bfbcdb372e7853716783e83/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=318f9c89e0eb9fbc2bfbcdb372e7853716783e83", "patch": "@@ -25,7 +25,7 @@ use comment::rewrite_comment;\n use config::{BraceStyle, Config};\n use items::{format_impl, format_struct, format_struct_struct, format_trait,\n             rewrite_associated_impl_type, rewrite_associated_type, rewrite_static,\n-            rewrite_type_alias, FnSig};\n+            rewrite_type_alias, FnSig, StaticParts};\n use lists::{itemize_list, write_list, DefinitiveListTactic, ListFormatting, SeparatorPlace,\n             SeparatorTactic};\n use macros::{rewrite_macro, MacroPosition};\n@@ -381,11 +381,7 @@ impl<'a> FmtVisitor<'a> {\n             ast::ItemKind::Static(ref ty, mutability, ref expr) => {\n                 let rewrite = rewrite_static(\n                     \"static\",\n-                    &item.vis,\n-                    item.ident,\n-                    ty,\n-                    mutability,\n-                    Some(expr),\n+                    &StaticParts::new(&item.vis, item.ident, ty, mutability, Some(expr)),\n                     self.block_indent,\n                     item.span,\n                     &self.get_context(),\n@@ -395,11 +391,13 @@ impl<'a> FmtVisitor<'a> {\n             ast::ItemKind::Const(ref ty, ref expr) => {\n                 let rewrite = rewrite_static(\n                     \"const\",\n-                    &item.vis,\n-                    item.ident,\n-                    ty,\n-                    ast::Mutability::Immutable,\n-                    Some(expr),\n+                    &StaticParts::new(\n+                        &item.vis,\n+                        item.ident,\n+                        ty,\n+                        ast::Mutability::Immutable,\n+                        Some(expr),\n+                    ),\n                     self.block_indent,\n                     item.span,\n                     &self.get_context(),\n@@ -469,11 +467,13 @@ impl<'a> FmtVisitor<'a> {\n             ast::TraitItemKind::Const(ref ty, ref expr_opt) => {\n                 let rewrite = rewrite_static(\n                     \"const\",\n-                    &ast::Visibility::Inherited,\n-                    ti.ident,\n-                    ty,\n-                    ast::Mutability::Immutable,\n-                    expr_opt.as_ref(),\n+                    &StaticParts::new(\n+                        &ast::Visibility::Inherited,\n+                        ti.ident,\n+                        ty,\n+                        ast::Mutability::Immutable,\n+                        expr_opt.as_ref(),\n+                    ),\n                     self.block_indent,\n                     ti.span,\n                     &self.get_context(),\n@@ -534,11 +534,13 @@ impl<'a> FmtVisitor<'a> {\n             ast::ImplItemKind::Const(ref ty, ref expr) => {\n                 let rewrite = rewrite_static(\n                     \"const\",\n-                    &ii.vis,\n-                    ii.ident,\n-                    ty,\n-                    ast::Mutability::Immutable,\n-                    Some(expr),\n+                    &StaticParts::new(\n+                        &ii.vis,\n+                        ii.ident,\n+                        ty,\n+                        ast::Mutability::Immutable,\n+                        Some(expr),\n+                    ),\n                     self.block_indent,\n                     ii.span,\n                     &self.get_context(),"}]}