{"sha": "f26da39e041b149f77e4b579bc2d38117af41c73", "node_id": "C_kwDOAAsO6NoAKGYyNmRhMzllMDQxYjE0OWY3N2U0YjU3OWJjMmQzODExN2FmNDFjNzM", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-03-14T12:09:39Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-03-23T10:21:02Z"}, "message": "Add some tests for the current `#![cfg(FALSE)]` crate behavior", "tree": {"sha": "a0b45701aa19b461d577cfa1d89e2f046941d8ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0b45701aa19b461d577cfa1d89e2f046941d8ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f26da39e041b149f77e4b579bc2d38117af41c73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f26da39e041b149f77e4b579bc2d38117af41c73", "html_url": "https://github.com/rust-lang/rust/commit/f26da39e041b149f77e4b579bc2d38117af41c73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f26da39e041b149f77e4b579bc2d38117af41c73/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cc33b769121abfb9b0e42b2195fe60f59864571", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cc33b769121abfb9b0e42b2195fe60f59864571", "html_url": "https://github.com/rust-lang/rust/commit/6cc33b769121abfb9b0e42b2195fe60f59864571"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "3c011d72b02c510f7dfb4b5946c88b1b4b1742b6", "filename": "tests/ui/cfg/auxiliary/cfg_false_lib.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f26da39e041b149f77e4b579bc2d38117af41c73/tests%2Fui%2Fcfg%2Fauxiliary%2Fcfg_false_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f26da39e041b149f77e4b579bc2d38117af41c73/tests%2Fui%2Fcfg%2Fauxiliary%2Fcfg_false_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcfg%2Fauxiliary%2Fcfg_false_lib.rs?ref=f26da39e041b149f77e4b579bc2d38117af41c73", "patch": "@@ -0,0 +1,6 @@\n+// It is unclear whether a fully unconfigured crate should link to standard library,\n+// or what its `no_std`/`no_core`/`compiler_builtins` status, more precisely.\n+// Currently the usual standard library prelude is added to such crates,\n+// and therefore they link to libstd.\n+\n+#![cfg(FALSE)]"}, {"sha": "21ea3ec79b4d61b92df102a11904e05389e1d6fe", "filename": "tests/ui/cfg/cfg-false-feature.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f26da39e041b149f77e4b579bc2d38117af41c73/tests%2Fui%2Fcfg%2Fcfg-false-feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f26da39e041b149f77e4b579bc2d38117af41c73/tests%2Fui%2Fcfg%2Fcfg-false-feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcfg%2Fcfg-false-feature.rs?ref=f26da39e041b149f77e4b579bc2d38117af41c73", "patch": "@@ -0,0 +1,20 @@\n+// It is unclear which features should be in effect in a fully unconfigured crate (issue #104633).\n+// Currently none on the features are in effect, so we get the feature gates reported.\n+\n+// check-pass\n+// compile-flags: --crate-type lib\n+\n+#![feature(decl_macro)]\n+#![cfg(FALSE)]\n+#![feature(box_syntax)]\n+\n+macro mac() {} //~ WARN `macro` is experimental\n+               //~| WARN unstable syntax can change at any point in the future\n+\n+trait A = Clone; //~ WARN trait aliases are experimental\n+                 //~| WARN unstable syntax can change at any point in the future\n+\n+fn main() {\n+    let box _ = Box::new(0); //~ WARN box pattern syntax is experimental\n+                             //~| WARN unstable syntax can change at any point in the future\n+}"}, {"sha": "14673fbdb14447e437eda43707ee9671bc222445", "filename": "tests/ui/cfg/cfg-false-feature.stderr", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/f26da39e041b149f77e4b579bc2d38117af41c73/tests%2Fui%2Fcfg%2Fcfg-false-feature.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f26da39e041b149f77e4b579bc2d38117af41c73/tests%2Fui%2Fcfg%2Fcfg-false-feature.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcfg%2Fcfg-false-feature.stderr?ref=f26da39e041b149f77e4b579bc2d38117af41c73", "patch": "@@ -0,0 +1,35 @@\n+warning: trait aliases are experimental\n+  --> $DIR/cfg-false-feature.rs:14:1\n+   |\n+LL | trait A = Clone;\n+   | ^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #41517 <https://github.com/rust-lang/rust/issues/41517> for more information\n+   = help: add `#![feature(trait_alias)]` to the crate attributes to enable\n+   = warning: unstable syntax can change at any point in the future, causing a hard error!\n+   = note: for more information, see issue #65860 <https://github.com/rust-lang/rust/issues/65860>\n+\n+warning: `macro` is experimental\n+  --> $DIR/cfg-false-feature.rs:11:1\n+   |\n+LL | macro mac() {}\n+   | ^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #39412 <https://github.com/rust-lang/rust/issues/39412> for more information\n+   = help: add `#![feature(decl_macro)]` to the crate attributes to enable\n+   = warning: unstable syntax can change at any point in the future, causing a hard error!\n+   = note: for more information, see issue #65860 <https://github.com/rust-lang/rust/issues/65860>\n+\n+warning: box pattern syntax is experimental\n+  --> $DIR/cfg-false-feature.rs:18:9\n+   |\n+LL |     let box _ = Box::new(0);\n+   |         ^^^^^\n+   |\n+   = note: see issue #29641 <https://github.com/rust-lang/rust/issues/29641> for more information\n+   = help: add `#![feature(box_patterns)]` to the crate attributes to enable\n+   = warning: unstable syntax can change at any point in the future, causing a hard error!\n+   = note: for more information, see issue #65860 <https://github.com/rust-lang/rust/issues/65860>\n+\n+warning: 3 warnings emitted\n+"}, {"sha": "319ea078187c2d7bf8416ac152c1cb6d6fb24708", "filename": "tests/ui/cfg/cfg_false_no_std.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f26da39e041b149f77e4b579bc2d38117af41c73/tests%2Fui%2Fcfg%2Fcfg_false_no_std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f26da39e041b149f77e4b579bc2d38117af41c73/tests%2Fui%2Fcfg%2Fcfg_false_no_std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcfg%2Fcfg_false_no_std.rs?ref=f26da39e041b149f77e4b579bc2d38117af41c73", "patch": "@@ -0,0 +1,11 @@\n+// Currently no error because the panic handler is supplied by libstd linked though the empty\n+// library, but the desirable behavior is unclear (see comments in cfg_false_lib.rs).\n+\n+// check-pass\n+// aux-build: cfg_false_lib.rs\n+\n+#![no_std]\n+\n+extern crate cfg_false_lib as _;\n+\n+fn main() {}"}]}