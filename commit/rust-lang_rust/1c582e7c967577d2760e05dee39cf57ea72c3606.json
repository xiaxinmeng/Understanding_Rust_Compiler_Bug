{"sha": "1c582e7c967577d2760e05dee39cf57ea72c3606", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjNTgyZTdjOTY3NTc3ZDI3NjBlMDVkZWUzOWNmNTdlYTcyYzM2MDY=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-01T23:49:20Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-01T23:49:20Z"}, "message": "Return correct value from futex_wait.", "tree": {"sha": "26c00fc6f510667fdfcf37f55241eebd261c0bac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26c00fc6f510667fdfcf37f55241eebd261c0bac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c582e7c967577d2760e05dee39cf57ea72c3606", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c582e7c967577d2760e05dee39cf57ea72c3606", "html_url": "https://github.com/rust-lang/rust/commit/1c582e7c967577d2760e05dee39cf57ea72c3606", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c582e7c967577d2760e05dee39cf57ea72c3606/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69cea1dc92695d317145fa057529f8c679e3cfc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/69cea1dc92695d317145fa057529f8c679e3cfc0", "html_url": "https://github.com/rust-lang/rust/commit/69cea1dc92695d317145fa057529f8c679e3cfc0"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "0892eab4673936249cf1e4e772175bad8508f409", "filename": "src/shims/posix/linux/sync.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c582e7c967577d2760e05dee39cf57ea72c3606/src%2Fshims%2Fposix%2Flinux%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c582e7c967577d2760e05dee39cf57ea72c3606/src%2Fshims%2Fposix%2Flinux%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Flinux%2Fsync.rs?ref=1c582e7c967577d2760e05dee39cf57ea72c3606", "patch": "@@ -36,9 +36,11 @@ pub fn futex<'tcx>(\n             if val == futex_val {\n                 this.block_thread(thread);\n                 this.futex_wait(futex_ptr, thread);\n+                this.write_scalar(Scalar::from_i32(0), dest)?;\n             } else {\n                 let eagain = this.eval_libc(\"EAGAIN\")?;\n                 this.set_last_error(eagain)?;\n+                this.write_scalar(Scalar::from_i32(-1), dest)?;\n             }\n         }\n         op if op == futex_wake => {"}]}