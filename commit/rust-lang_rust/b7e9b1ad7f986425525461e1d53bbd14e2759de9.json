{"sha": "b7e9b1ad7f986425525461e1d53bbd14e2759de9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ZTliMWFkN2Y5ODY0MjU1MjU0NjFlMWQ1M2JiZDE0ZTI3NTlkZTk=", "commit": {"author": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-08-03T23:06:12Z"}, "committer": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-08-03T23:06:12Z"}, "message": "Add x.py option to --force-rerun compiletest tests", "tree": {"sha": "5e6c33f9a414f8db393f44f557ad1a3fabf093ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e6c33f9a414f8db393f44f557ad1a3fabf093ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7e9b1ad7f986425525461e1d53bbd14e2759de9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7e9b1ad7f986425525461e1d53bbd14e2759de9", "html_url": "https://github.com/rust-lang/rust/commit/b7e9b1ad7f986425525461e1d53bbd14e2759de9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7e9b1ad7f986425525461e1d53bbd14e2759de9/comments", "author": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5fd37f00f1ec5e4a4b0d87f5af0b93f36aab271", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5fd37f00f1ec5e4a4b0d87f5af0b93f36aab271", "html_url": "https://github.com/rust-lang/rust/commit/d5fd37f00f1ec5e4a4b0d87f5af0b93f36aab271"}], "stats": {"total": 39, "additions": 32, "deletions": 7}, "files": [{"sha": "bb3ea04d4ace9ff28a44ee8b62efbc4a020f78fb", "filename": "src/bootstrap/builder/tests.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b7e9b1ad7f986425525461e1d53bbd14e2759de9/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7e9b1ad7f986425525461e1d53bbd14e2759de9/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder%2Ftests.rs?ref=b7e9b1ad7f986425525461e1d53bbd14e2759de9", "patch": "@@ -486,6 +486,7 @@ mod dist {\n             fail_fast: true,\n             doc_tests: DocTests::No,\n             bless: false,\n+            force_rerun: false,\n             compare_mode: None,\n             rustfix_coverage: false,\n             pass: None,\n@@ -527,6 +528,7 @@ mod dist {\n             fail_fast: true,\n             doc_tests: DocTests::No,\n             bless: false,\n+            force_rerun: false,\n             compare_mode: None,\n             rustfix_coverage: false,\n             pass: None,\n@@ -583,6 +585,7 @@ mod dist {\n             fail_fast: true,\n             doc_tests: DocTests::Yes,\n             bless: false,\n+            force_rerun: false,\n             compare_mode: None,\n             rustfix_coverage: false,\n             pass: None,"}, {"sha": "7b74a909c286e6b2a320d1702af7ac18c9b09aab", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b7e9b1ad7f986425525461e1d53bbd14e2759de9/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7e9b1ad7f986425525461e1d53bbd14e2759de9/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=b7e9b1ad7f986425525461e1d53bbd14e2759de9", "patch": "@@ -102,6 +102,7 @@ pub enum Subcommand {\n         paths: Vec<PathBuf>,\n         /// Whether to automatically update stderr/stdout files\n         bless: bool,\n+        force_rerun: bool,\n         compare_mode: Option<String>,\n         pass: Option<String>,\n         run: Option<String>,\n@@ -284,6 +285,7 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n                 opts.optflag(\"\", \"no-doc\", \"do not run doc tests\");\n                 opts.optflag(\"\", \"doc\", \"only run doc tests\");\n                 opts.optflag(\"\", \"bless\", \"update all stderr/stdout files of failing ui tests\");\n+                opts.optflag(\"\", \"force-rerun\", \"rerun tests even if the inputs are unchanged\");\n                 opts.optopt(\n                     \"\",\n                     \"compare-mode\",\n@@ -558,6 +560,7 @@ Arguments:\n             \"test\" | \"t\" => Subcommand::Test {\n                 paths,\n                 bless: matches.opt_present(\"bless\"),\n+                force_rerun: matches.opt_present(\"force-rerun\"),\n                 compare_mode: matches.opt_str(\"compare-mode\"),\n                 pass: matches.opt_str(\"pass\"),\n                 run: matches.opt_str(\"run\"),\n@@ -726,6 +729,13 @@ impl Subcommand {\n         }\n     }\n \n+    pub fn force_rerun(&self) -> bool {\n+        match *self {\n+            Subcommand::Test { force_rerun, .. } => force_rerun,\n+            _ => false,\n+        }\n+    }\n+\n     pub fn rustfix_coverage(&self) -> bool {\n         match *self {\n             Subcommand::Test { rustfix_coverage, .. } => rustfix_coverage,"}, {"sha": "9effdb2c959d0840423ed738dcdbc2f911f95134", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7e9b1ad7f986425525461e1d53bbd14e2759de9/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7e9b1ad7f986425525461e1d53bbd14e2759de9/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=b7e9b1ad7f986425525461e1d53bbd14e2759de9", "patch": "@@ -1315,6 +1315,10 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n             cmd.arg(\"--bless\");\n         }\n \n+        if builder.config.cmd.force_rerun() {\n+            cmd.arg(\"--force-rerun\");\n+        }\n+\n         let compare_mode =\n             builder.config.cmd.compare_mode().or_else(|| {\n                 if builder.config.test_compare_mode { self.compare_mode } else { None }"}, {"sha": "99b0a3454e89ccaed91b758a80c9155d3ed18828", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b7e9b1ad7f986425525461e1d53bbd14e2759de9/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7e9b1ad7f986425525461e1d53bbd14e2759de9/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=b7e9b1ad7f986425525461e1d53bbd14e2759de9", "patch": "@@ -362,6 +362,9 @@ pub struct Config {\n     pub nodejs: Option<String>,\n     /// Path to a npm executable. Used for rustdoc GUI tests\n     pub npm: Option<String>,\n+\n+    /// Whether to rerun tests even if the inputs are unchanged.\n+    pub force_rerun: bool,\n }\n \n impl Config {"}, {"sha": "9e655557fd271829dbee42ccd09ba7693b3f2640", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b7e9b1ad7f986425525461e1d53bbd14e2759de9/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7e9b1ad7f986425525461e1d53bbd14e2759de9/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=b7e9b1ad7f986425525461e1d53bbd14e2759de9", "patch": "@@ -144,6 +144,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n             \"enable this to generate a Rustfix coverage file, which is saved in \\\n                 `./<build_base>/rustfix_missing_coverage.txt`\",\n         )\n+        .optflag(\"\", \"force-rerun\", \"rerun tests even if the inputs are unchanged\")\n         .optflag(\"h\", \"help\", \"show this message\")\n         .reqopt(\"\", \"channel\", \"current Rust channel\", \"CHANNEL\");\n \n@@ -289,6 +290,8 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         llvm_components: matches.opt_str(\"llvm-components\").unwrap(),\n         nodejs: matches.opt_str(\"nodejs\"),\n         npm: matches.opt_str(\"npm\"),\n+\n+        force_rerun: matches.opt_present(\"force-rerun\"),\n     }\n }\n \n@@ -644,13 +647,15 @@ fn make_test(config: &Config, testpaths: &TestPaths, inputs: &Stamp) -> Vec<test\n             let test_name = crate::make_test_name(config, testpaths, revision);\n             let mut desc = make_test_description(config, test_name, &test_path, src_file, cfg);\n             // Ignore tests that already run and are up to date with respect to inputs.\n-            desc.ignore |= is_up_to_date(\n-                config,\n-                testpaths,\n-                &early_props,\n-                revision.map(|s| s.as_str()),\n-                inputs,\n-            );\n+            if !config.force_rerun {\n+                desc.ignore |= is_up_to_date(\n+                    config,\n+                    testpaths,\n+                    &early_props,\n+                    revision.map(|s| s.as_str()),\n+                    inputs,\n+                );\n+            }\n             test::TestDescAndFn { desc, testfn: make_test_closure(config, testpaths, revision) }\n         })\n         .collect()"}]}