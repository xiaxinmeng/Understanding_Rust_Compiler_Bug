{"sha": "3a9c0ef8a1ed339e6e8ee3ed5a7282c0bef11632", "node_id": "C_kwDOAAsO6NoAKDNhOWMwZWY4YTFlZDMzOWU2ZThlZTNlZDVhNzI4MmMwYmVmMTE2MzI", "commit": {"author": {"name": "kyoto7250", "email": "50972773+kyoto7250@users.noreply.github.com", "date": "2022-06-18T09:56:46Z"}, "committer": {"name": "kyoto7250", "email": "50972773+kyoto7250@users.noreply.github.com", "date": "2022-06-26T23:11:58Z"}, "message": "fix for git rebase", "tree": {"sha": "e71444e1a9d3565a4c5790ebca1e9f183bc4df7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e71444e1a9d3565a4c5790ebca1e9f183bc4df7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a9c0ef8a1ed339e6e8ee3ed5a7282c0bef11632", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a9c0ef8a1ed339e6e8ee3ed5a7282c0bef11632", "html_url": "https://github.com/rust-lang/rust/commit/3a9c0ef8a1ed339e6e8ee3ed5a7282c0bef11632", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a9c0ef8a1ed339e6e8ee3ed5a7282c0bef11632/comments", "author": {"login": "kyoto7250", "id": 50972773, "node_id": "MDQ6VXNlcjUwOTcyNzcz", "avatar_url": "https://avatars.githubusercontent.com/u/50972773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyoto7250", "html_url": "https://github.com/kyoto7250", "followers_url": "https://api.github.com/users/kyoto7250/followers", "following_url": "https://api.github.com/users/kyoto7250/following{/other_user}", "gists_url": "https://api.github.com/users/kyoto7250/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyoto7250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyoto7250/subscriptions", "organizations_url": "https://api.github.com/users/kyoto7250/orgs", "repos_url": "https://api.github.com/users/kyoto7250/repos", "events_url": "https://api.github.com/users/kyoto7250/events{/privacy}", "received_events_url": "https://api.github.com/users/kyoto7250/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kyoto7250", "id": 50972773, "node_id": "MDQ6VXNlcjUwOTcyNzcz", "avatar_url": "https://avatars.githubusercontent.com/u/50972773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyoto7250", "html_url": "https://github.com/kyoto7250", "followers_url": "https://api.github.com/users/kyoto7250/followers", "following_url": "https://api.github.com/users/kyoto7250/following{/other_user}", "gists_url": "https://api.github.com/users/kyoto7250/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyoto7250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyoto7250/subscriptions", "organizations_url": "https://api.github.com/users/kyoto7250/orgs", "repos_url": "https://api.github.com/users/kyoto7250/repos", "events_url": "https://api.github.com/users/kyoto7250/events{/privacy}", "received_events_url": "https://api.github.com/users/kyoto7250/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd3d0fdad30249505688eada4481b1d78190e971", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd3d0fdad30249505688eada4481b1d78190e971", "html_url": "https://github.com/rust-lang/rust/commit/dd3d0fdad30249505688eada4481b1d78190e971"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c35e1e021ef1ce4522248e2c79780c72691859b9", "filename": "clippy_lints/src/manual_retain.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a9c0ef8a1ed339e6e8ee3ed5a7282c0bef11632/clippy_lints%2Fsrc%2Fmanual_retain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a9c0ef8a1ed339e6e8ee3ed5a7282c0bef11632/clippy_lints%2Fsrc%2Fmanual_retain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_retain.rs?ref=3a9c0ef8a1ed339e6e8ee3ed5a7282c0bef11632", "patch": "@@ -148,8 +148,8 @@ fn check_to_owned(\n \n fn suggest(cx: &LateContext<'_>, parent_expr: &hir::Expr<'_>, left_expr: &hir::Expr<'_>, filter_expr: &hir::Expr<'_>) {\n     if let hir::ExprKind::MethodCall(_, [_, closure], _) = filter_expr.kind\n-        && let hir::ExprKind::Closure(_, _, filter_body_id, ..) = closure.kind\n-        && let filter_body = cx.tcx.hir().body(filter_body_id)\n+        && let hir::ExprKind::Closure{ body, ..} = closure.kind\n+        && let filter_body = cx.tcx.hir().body(body)\n         && let [filter_params] = filter_body.params\n         && let Some(sugg) = match filter_params.pat.kind {\n             hir::PatKind::Binding(_, _, filter_param_ident, None) => {"}]}