{"sha": "beb06aed9af27fbf192d772e39ffe0421c50e02e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYjA2YWVkOWFmMjdmYmYxOTJkNzcyZTM5ZmZlMDQyMWM1MGUwMmU=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-10-29T11:04:29Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-10-29T11:04:29Z"}, "message": "Don't use eval_always for miri queries used from codegen.", "tree": {"sha": "32f4615c3a98280c811c26793a256ab0fdb6ddf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32f4615c3a98280c811c26793a256ab0fdb6ddf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beb06aed9af27fbf192d772e39ffe0421c50e02e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beb06aed9af27fbf192d772e39ffe0421c50e02e", "html_url": "https://github.com/rust-lang/rust/commit/beb06aed9af27fbf192d772e39ffe0421c50e02e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beb06aed9af27fbf192d772e39ffe0421c50e02e/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dd4e7320e620dc9a59423c55a7db3520ba8b553", "url": "https://api.github.com/repos/rust-lang/rust/commits/2dd4e7320e620dc9a59423c55a7db3520ba8b553", "html_url": "https://github.com/rust-lang/rust/commit/2dd4e7320e620dc9a59423c55a7db3520ba8b553"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "d13b21bb7722b94dd157b6ea6cb8265cd828808f", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/beb06aed9af27fbf192d772e39ffe0421c50e02e/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb06aed9af27fbf192d772e39ffe0421c50e02e/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=beb06aed9af27fbf192d772e39ffe0421c50e02e", "patch": "@@ -462,13 +462,11 @@ rustc_queries! {\n         query const_field(\n             key: ty::ParamEnvAnd<'tcx, (&'tcx ty::Const<'tcx>, mir::Field)>\n         ) -> &'tcx ty::Const<'tcx> {\n-            eval_always\n             no_force\n             desc { \"extract field of const\" }\n         }\n \n         query const_caller_location(key: (syntax_pos::Symbol, u32, u32)) -> &'tcx ty::Const<'tcx> {\n-            eval_always\n             no_force\n             desc { \"get a &core::panic::Location referring to a span\" }\n         }"}]}