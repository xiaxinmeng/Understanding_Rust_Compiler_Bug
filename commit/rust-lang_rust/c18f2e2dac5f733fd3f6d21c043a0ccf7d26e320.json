{"sha": "c18f2e2dac5f733fd3f6d21c043a0ccf7d26e320", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxOGYyZTJkYWM1ZjczM2ZkM2Y2ZDIxYzA0M2EwY2NmN2QyNmUzMjA=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-06-04T19:57:13Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-06-04T19:57:13Z"}, "message": "rustc: Pass the correct span to syntax extensions", "tree": {"sha": "b732b52dbf5b035154348bed37a0720005c868f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b732b52dbf5b035154348bed37a0720005c868f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c18f2e2dac5f733fd3f6d21c043a0ccf7d26e320", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c18f2e2dac5f733fd3f6d21c043a0ccf7d26e320", "html_url": "https://github.com/rust-lang/rust/commit/c18f2e2dac5f733fd3f6d21c043a0ccf7d26e320", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c18f2e2dac5f733fd3f6d21c043a0ccf7d26e320/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af46f3ed0d2b65df451ff54b0a22263b74f11e46", "url": "https://api.github.com/repos/rust-lang/rust/commits/af46f3ed0d2b65df451ff54b0a22263b74f11e46", "html_url": "https://github.com/rust-lang/rust/commit/af46f3ed0d2b65df451ff54b0a22263b74f11e46"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "5706d11782d94e9b3d20e04ef8f7842e710012c3", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c18f2e2dac5f733fd3f6d21c043a0ccf7d26e320/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18f2e2dac5f733fd3f6d21c043a0ccf7d26e320/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=c18f2e2dac5f733fd3f6d21c043a0ccf7d26e320", "patch": "@@ -933,7 +933,8 @@ fn parse_bottom_expr(&parser p) -> @ast::expr {\n                                         some(token::COMMA),\n                                         pf, p);\n         hi = es.span.hi;\n-        ex = expand_syntax_ext(p, es.span, pth, es.node,\n+        auto ext_span = rec(lo=lo, hi=hi);\n+        ex = expand_syntax_ext(p, ext_span, pth, es.node,\n                                none[str]);\n     } else if (eat_word(p, \"fail\")) {\n         ex = ast::expr_fail(p.get_ann());"}]}