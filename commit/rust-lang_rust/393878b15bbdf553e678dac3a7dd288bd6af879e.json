{"sha": "393878b15bbdf553e678dac3a7dd288bd6af879e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5Mzg3OGIxNWJiZGY1NTNlNjc4ZGFjM2E3ZGQyODhiZDZhZjg3OWU=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-21T12:25:28Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-21T12:25:28Z"}, "message": "remove redundant return value Ok(()) of clear_relocations()", "tree": {"sha": "905b24628b7f1b67dab0d769c60efebfb2fad294", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/905b24628b7f1b67dab0d769c60efebfb2fad294"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/393878b15bbdf553e678dac3a7dd288bd6af879e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/393878b15bbdf553e678dac3a7dd288bd6af879e", "html_url": "https://github.com/rust-lang/rust/commit/393878b15bbdf553e678dac3a7dd288bd6af879e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/393878b15bbdf553e678dac3a7dd288bd6af879e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85bd00fd85bd2e00b97ca45f58d7686e44f554e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/85bd00fd85bd2e00b97ca45f58d7686e44f554e8", "html_url": "https://github.com/rust-lang/rust/commit/85bd00fd85bd2e00b97ca45f58d7686e44f554e8"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "449b3a82dcbb7c68f8423071d3a85975fa21b461", "filename": "compiler/rustc_middle/src/mir/interpret/allocation.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/393878b15bbdf553e678dac3a7dd288bd6af879e/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/393878b15bbdf553e678dac3a7dd288bd6af879e/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs?ref=393878b15bbdf553e678dac3a7dd288bd6af879e", "patch": "@@ -266,7 +266,7 @@ impl<'tcx, Tag: Copy, Extra: AllocationExtra<Tag>> Allocation<Tag, Extra> {\n         let range = self.check_bounds(ptr.offset, size);\n \n         self.mark_init(ptr, size, true);\n-        self.clear_relocations(cx, ptr, size)?;\n+        self.clear_relocations(cx, ptr, size);\n \n         AllocationExtra::memory_written(self, ptr, size)?;\n \n@@ -484,18 +484,13 @@ impl<'tcx, Tag: Copy, Extra> Allocation<Tag, Extra> {\n     /// uninitialized. This is a somewhat odd \"spooky action at a distance\",\n     /// but it allows strictly more code to run than if we would just error\n     /// immediately in that case.\n-    fn clear_relocations(\n-        &mut self,\n-        cx: &impl HasDataLayout,\n-        ptr: Pointer<Tag>,\n-        size: Size,\n-    ) -> InterpResult<'tcx> {\n+    fn clear_relocations(&mut self, cx: &impl HasDataLayout, ptr: Pointer<Tag>, size: Size) {\n         // Find the start and end of the given range and its outermost relocations.\n         let (first, last) = {\n             // Find all relocations overlapping the given range.\n             let relocations = self.get_relocations(cx, ptr, size);\n             if relocations.is_empty() {\n-                return Ok(());\n+                return;\n             }\n \n             (\n@@ -517,8 +512,6 @@ impl<'tcx, Tag: Copy, Extra> Allocation<Tag, Extra> {\n \n         // Forget all the relocations.\n         self.relocations.remove_range(first..last);\n-\n-        Ok(())\n     }\n \n     /// Errors if there are relocations overlapping with the edges of the"}]}