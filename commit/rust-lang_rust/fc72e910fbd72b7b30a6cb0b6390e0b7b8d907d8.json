{"sha": "fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8", "node_id": "C_kwDOAAsO6NoAKGZjNzJlOTEwZmJkNzJiN2IzMGE2Y2IwYjYzOTBlMGI3YjhkOTA3ZDg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-28T11:15:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-28T11:15:53Z"}, "message": "`needless_return` suggest return unit type on void returns\n\ncloses #8177\n\npreviously, `needless_return` suggests an empty block `{}` to replace void `return` on match arms, this PR improve the suggestion by suggesting a unit instead.\n\nchangelog: `needless_return` suggests `()` instead of `{}` on match arms", "tree": {"sha": "86085178f974e3af58fd1ecf4e3daf69bf358e2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86085178f974e3af58fd1ecf4e3daf69bf358e2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8", "html_url": "https://github.com/rust-lang/rust/commit/fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3354876876cfa49154481d26ff2dc9497afe29b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3354876876cfa49154481d26ff2dc9497afe29b7", "html_url": "https://github.com/rust-lang/rust/commit/3354876876cfa49154481d26ff2dc9497afe29b7"}], "stats": {"total": 98, "additions": 72, "deletions": 26}, "files": [{"sha": "112ccdcdd4202af8fdfea61895e67a38fddfebf6", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8", "patch": "@@ -73,6 +73,7 @@ declare_clippy_lint! {\n enum RetReplacement {\n     Empty,\n     Block,\n+    Unit,\n }\n \n declare_lint_pass!(Return => [LET_AND_RETURN, NEEDLESS_RETURN]);\n@@ -212,7 +213,7 @@ fn check_final_expr<'tcx>(\n         // (except for unit type functions) so we don't match it\n         ExprKind::Match(_, arms, MatchSource::Normal) => {\n             for arm in arms.iter() {\n-                check_final_expr(cx, arm.body, Some(arm.body.span), RetReplacement::Block);\n+                check_final_expr(cx, arm.body, Some(arm.body.span), RetReplacement::Unit);\n             }\n         },\n         ExprKind::DropTemps(expr) => check_final_expr(cx, expr, None, RetReplacement::Empty),\n@@ -259,6 +260,17 @@ fn emit_return_lint(cx: &LateContext<'_>, ret_span: Span, inner_span: Option<Spa\n                     Applicability::MachineApplicable,\n                 );\n             },\n+            RetReplacement::Unit => {\n+                span_lint_and_sugg(\n+                    cx,\n+                    NEEDLESS_RETURN,\n+                    ret_span,\n+                    \"unneeded `return` statement\",\n+                    \"replace `return` with a unit value\",\n+                    \"()\".to_string(),\n+                    Applicability::MachineApplicable,\n+                );\n+            },\n         },\n     }\n }"}, {"sha": "603d438d55889a8f72cb339beadf5031de43dfba", "filename": "tests/ui/needless_return.fixed", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8/tests%2Fui%2Fneedless_return.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8/tests%2Fui%2Fneedless_return.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.fixed?ref=fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8", "patch": "@@ -71,7 +71,18 @@ fn test_void_if_fun(b: bool) {\n fn test_void_match(x: u32) {\n     match x {\n         0 => (),\n-        _ => {},\n+        _ => (),\n+    }\n+}\n+\n+fn test_nested_match(x: u32) {\n+    match x {\n+        0 => (),\n+        1 => {\n+            let _ = 42;\n+            \n+        },\n+        _ => (),\n     }\n }\n \n@@ -182,7 +193,7 @@ async fn async_test_void_if_fun(b: bool) {\n async fn async_test_void_match(x: u32) {\n     match x {\n         0 => (),\n-        _ => {},\n+        _ => (),\n     }\n }\n "}, {"sha": "c6c8cb9ec152049e19929ab16092c4633f3b6112", "filename": "tests/ui/needless_return.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8/tests%2Fui%2Fneedless_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8/tests%2Fui%2Fneedless_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.rs?ref=fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8", "patch": "@@ -75,6 +75,17 @@ fn test_void_match(x: u32) {\n     }\n }\n \n+fn test_nested_match(x: u32) {\n+    match x {\n+        0 => (),\n+        1 => {\n+            let _ = 42;\n+            return;\n+        },\n+        _ => return,\n+    }\n+}\n+\n fn read_line() -> String {\n     use std::io::BufRead;\n     let stdin = ::std::io::stdin();"}, {"sha": "5bc787c56a65bca559178a498e846a0ce6392942", "filename": "tests/ui/needless_return.stderr", "status": "modified", "additions": 35, "deletions": 23, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8/tests%2Fui%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8/tests%2Fui%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.stderr?ref=fc72e910fbd72b7b30a6cb0b6390e0b7b8d907d8", "patch": "@@ -70,127 +70,139 @@ error: unneeded `return` statement\n   --> $DIR/needless_return.rs:74:14\n    |\n LL |         _ => return,\n-   |              ^^^^^^ help: replace `return` with an empty block: `{}`\n+   |              ^^^^^^ help: replace `return` with a unit value: `()`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:89:9\n+  --> $DIR/needless_return.rs:83:13\n+   |\n+LL |             return;\n+   |             ^^^^^^^ help: remove `return`\n+\n+error: unneeded `return` statement\n+  --> $DIR/needless_return.rs:85:14\n+   |\n+LL |         _ => return,\n+   |              ^^^^^^ help: replace `return` with a unit value: `()`\n+\n+error: unneeded `return` statement\n+  --> $DIR/needless_return.rs:100:9\n    |\n LL |         return String::from(\"test\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `String::from(\"test\")`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:91:9\n+  --> $DIR/needless_return.rs:102:9\n    |\n LL |         return String::new();\n    |         ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `String::new()`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:113:32\n+  --> $DIR/needless_return.rs:124:32\n    |\n LL |         bar.unwrap_or_else(|_| return)\n    |                                ^^^^^^ help: replace `return` with an empty block: `{}`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:118:13\n+  --> $DIR/needless_return.rs:129:13\n    |\n LL |             return;\n    |             ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:120:20\n+  --> $DIR/needless_return.rs:131:20\n    |\n LL |         let _ = || return;\n    |                    ^^^^^^ help: replace `return` with an empty block: `{}`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:126:32\n+  --> $DIR/needless_return.rs:137:32\n    |\n LL |         res.unwrap_or_else(|_| return Foo)\n    |                                ^^^^^^^^^^ help: remove `return`: `Foo`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:135:5\n+  --> $DIR/needless_return.rs:146:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:139:5\n+  --> $DIR/needless_return.rs:150:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:144:9\n+  --> $DIR/needless_return.rs:155:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:146:9\n+  --> $DIR/needless_return.rs:157:9\n    |\n LL |         return false;\n    |         ^^^^^^^^^^^^^ help: remove `return`: `false`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:152:17\n+  --> $DIR/needless_return.rs:163:17\n    |\n LL |         true => return false,\n    |                 ^^^^^^^^^^^^ help: remove `return`: `false`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:154:13\n+  --> $DIR/needless_return.rs:165:13\n    |\n LL |             return true;\n    |             ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:161:9\n+  --> $DIR/needless_return.rs:172:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:163:16\n+  --> $DIR/needless_return.rs:174:16\n    |\n LL |     let _ = || return true;\n    |                ^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:171:5\n+  --> $DIR/needless_return.rs:182:5\n    |\n LL |     return;\n    |     ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:176:9\n+  --> $DIR/needless_return.rs:187:9\n    |\n LL |         return;\n    |         ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:178:9\n+  --> $DIR/needless_return.rs:189:9\n    |\n LL |         return;\n    |         ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:185:14\n+  --> $DIR/needless_return.rs:196:14\n    |\n LL |         _ => return,\n-   |              ^^^^^^ help: replace `return` with an empty block: `{}`\n+   |              ^^^^^^ help: replace `return` with a unit value: `()`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:200:9\n+  --> $DIR/needless_return.rs:211:9\n    |\n LL |         return String::from(\"test\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `String::from(\"test\")`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:202:9\n+  --> $DIR/needless_return.rs:213:9\n    |\n LL |         return String::new();\n    |         ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `String::new()`\n \n-error: aborting due to 32 previous errors\n+error: aborting due to 34 previous errors\n "}]}