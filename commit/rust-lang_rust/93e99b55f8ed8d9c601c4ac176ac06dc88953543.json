{"sha": "93e99b55f8ed8d9c601c4ac176ac06dc88953543", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzZTk5YjU1ZjhlZDhkOWM2MDFjNGFjMTc2YWMwNmRjODg5NTM1NDM=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-11-28T00:52:53Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-07T04:53:02Z"}, "message": "libsyntax: remove unnecessary `to_string()` calls", "tree": {"sha": "c58fb88779d6648d70fcd8bc7b3ee3fc2492b6ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c58fb88779d6648d70fcd8bc7b3ee3fc2492b6ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93e99b55f8ed8d9c601c4ac176ac06dc88953543", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93e99b55f8ed8d9c601c4ac176ac06dc88953543", "html_url": "https://github.com/rust-lang/rust/commit/93e99b55f8ed8d9c601c4ac176ac06dc88953543", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93e99b55f8ed8d9c601c4ac176ac06dc88953543/comments", "author": null, "committer": null, "parents": [{"sha": "c2da923fc95e29424a7dac1505d6e8ea50c49b9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2da923fc95e29424a7dac1505d6e8ea50c49b9f", "html_url": "https://github.com/rust-lang/rust/commit/c2da923fc95e29424a7dac1505d6e8ea50c49b9f"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "6bcf562204bed08bc96956ce8a765624c6f741ae", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/93e99b55f8ed8d9c601c4ac176ac06dc88953543/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93e99b55f8ed8d9c601c4ac176ac06dc88953543/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=93e99b55f8ed8d9c601c4ac176ac06dc88953543", "patch": "@@ -614,11 +614,11 @@ mod test {\n         let cm = init_code_map();\n \n         let fmabp1 = cm.lookup_byte_offset(BytePos(22));\n-        assert_eq!(fmabp1.fm.name, \"blork.rs\".to_string());\n+        assert_eq!(fmabp1.fm.name, \"blork.rs\");\n         assert_eq!(fmabp1.pos, BytePos(22));\n \n         let fmabp2 = cm.lookup_byte_offset(BytePos(24));\n-        assert_eq!(fmabp2.fm.name, \"blork2.rs\".to_string());\n+        assert_eq!(fmabp2.fm.name, \"blork2.rs\");\n         assert_eq!(fmabp2.pos, BytePos(0));\n     }\n \n@@ -640,12 +640,12 @@ mod test {\n         let cm = init_code_map();\n \n         let loc1 = cm.lookup_char_pos(BytePos(22));\n-        assert_eq!(loc1.file.name, \"blork.rs\".to_string());\n+        assert_eq!(loc1.file.name, \"blork.rs\");\n         assert_eq!(loc1.line, 2);\n         assert_eq!(loc1.col, CharPos(10));\n \n         let loc2 = cm.lookup_char_pos(BytePos(24));\n-        assert_eq!(loc2.file.name, \"blork2.rs\".to_string());\n+        assert_eq!(loc2.file.name, \"blork2.rs\");\n         assert_eq!(loc2.line, 1);\n         assert_eq!(loc2.col, CharPos(0));\n     }\n@@ -701,7 +701,7 @@ mod test {\n         let span = Span {lo: BytePos(12), hi: BytePos(23), expn_id: NO_EXPANSION};\n         let file_lines = cm.span_to_lines(span);\n \n-        assert_eq!(file_lines.file.name, \"blork.rs\".to_string());\n+        assert_eq!(file_lines.file.name, \"blork.rs\");\n         assert_eq!(file_lines.lines.len(), 1);\n         assert_eq!(file_lines.lines[0], 1u);\n     }\n@@ -723,6 +723,6 @@ mod test {\n         let span = Span {lo: BytePos(12), hi: BytePos(23), expn_id: NO_EXPANSION};\n         let sstr =  cm.span_to_string(span);\n \n-        assert_eq!(sstr, \"blork.rs:2:1: 2:12\".to_string());\n+        assert_eq!(sstr, \"blork.rs:2:1: 2:12\");\n     }\n }"}, {"sha": "aeec6ee13fd410601ad7914e162eab57c15e1d69", "filename": "src/libsyntax/parse/lexer/comments.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/93e99b55f8ed8d9c601c4ac176ac06dc88953543/src%2Flibsyntax%2Fparse%2Flexer%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93e99b55f8ed8d9c601c4ac176ac06dc88953543/src%2Flibsyntax%2Fparse%2Flexer%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fcomments.rs?ref=93e99b55f8ed8d9c601c4ac176ac06dc88953543", "patch": "@@ -389,41 +389,41 @@ mod test {\n     #[test] fn test_block_doc_comment_1() {\n         let comment = \"/**\\n * Test \\n **  Test\\n *   Test\\n*/\";\n         let stripped = strip_doc_comment_decoration(comment);\n-        assert_eq!(stripped, \" Test \\n*  Test\\n   Test\".to_string());\n+        assert_eq!(stripped, \" Test \\n*  Test\\n   Test\");\n     }\n \n     #[test] fn test_block_doc_comment_2() {\n         let comment = \"/**\\n * Test\\n *  Test\\n*/\";\n         let stripped = strip_doc_comment_decoration(comment);\n-        assert_eq!(stripped, \" Test\\n  Test\".to_string());\n+        assert_eq!(stripped, \" Test\\n  Test\");\n     }\n \n     #[test] fn test_block_doc_comment_3() {\n         let comment = \"/**\\n let a: *int;\\n *a = 5;\\n*/\";\n         let stripped = strip_doc_comment_decoration(comment);\n-        assert_eq!(stripped, \" let a: *int;\\n *a = 5;\".to_string());\n+        assert_eq!(stripped, \" let a: *int;\\n *a = 5;\");\n     }\n \n     #[test] fn test_block_doc_comment_4() {\n         let comment = \"/*******************\\n test\\n *********************/\";\n         let stripped = strip_doc_comment_decoration(comment);\n-        assert_eq!(stripped, \" test\".to_string());\n+        assert_eq!(stripped, \" test\");\n     }\n \n     #[test] fn test_line_doc_comment() {\n         let stripped = strip_doc_comment_decoration(\"/// test\");\n-        assert_eq!(stripped, \" test\".to_string());\n+        assert_eq!(stripped, \" test\");\n         let stripped = strip_doc_comment_decoration(\"///! test\");\n-        assert_eq!(stripped, \" test\".to_string());\n+        assert_eq!(stripped, \" test\");\n         let stripped = strip_doc_comment_decoration(\"// test\");\n-        assert_eq!(stripped, \" test\".to_string());\n+        assert_eq!(stripped, \" test\");\n         let stripped = strip_doc_comment_decoration(\"// test\");\n-        assert_eq!(stripped, \" test\".to_string());\n+        assert_eq!(stripped, \" test\");\n         let stripped = strip_doc_comment_decoration(\"///test\");\n-        assert_eq!(stripped, \"test\".to_string());\n+        assert_eq!(stripped, \"test\");\n         let stripped = strip_doc_comment_decoration(\"///!test\");\n-        assert_eq!(stripped, \"test\".to_string());\n+        assert_eq!(stripped, \"test\");\n         let stripped = strip_doc_comment_decoration(\"//test\");\n-        assert_eq!(stripped, \"test\".to_string());\n+        assert_eq!(stripped, \"test\");\n     }\n }"}, {"sha": "951fe11a470bb5b28a0cc352f99984ff39d62f83", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93e99b55f8ed8d9c601c4ac176ac06dc88953543/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93e99b55f8ed8d9c601c4ac176ac06dc88953543/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=93e99b55f8ed8d9c601c4ac176ac06dc88953543", "patch": "@@ -954,7 +954,7 @@ mod test {\n             }\\\n         ]\\\n     }\\\n-]\".to_string()\n+]\"\n         );\n     }\n "}, {"sha": "6ce0ee79c6230c41e003ced1c865708e6fff92b0", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/93e99b55f8ed8d9c601c4ac176ac06dc88953543/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93e99b55f8ed8d9c601c4ac176ac06dc88953543/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=93e99b55f8ed8d9c601c4ac176ac06dc88953543", "patch": "@@ -2961,9 +2961,9 @@ mod test {\n             variadic: false\n         };\n         let generics = ast_util::empty_generics();\n-        assert_eq!(&fun_to_string(&decl, ast::NormalFn, abba_ident,\n+        assert_eq!(fun_to_string(&decl, ast::NormalFn, abba_ident,\n                                None, &generics),\n-                   &\"fn abba()\".to_string());\n+                   \"fn abba()\");\n     }\n \n     #[test]\n@@ -2981,7 +2981,7 @@ mod test {\n         });\n \n         let varstr = variant_to_string(&var);\n-        assert_eq!(&varstr,&\"pub principal_skinner\".to_string());\n+        assert_eq!(varstr, \"pub principal_skinner\");\n     }\n \n     #[test]"}]}