{"sha": "fa180305675e6ec446f7b1c21cb33fbef5f68f31", "node_id": "C_kwDOAAsO6NoAKGZhMTgwMzA1Njc1ZTZlYzQ0NmY3YjFjMjFjYjMzZmJlZjVmNjhmMzE", "commit": {"author": {"name": "Hans Kratz", "email": "hans@appfour.com", "date": "2021-11-02T10:46:06Z"}, "committer": {"name": "Hans Kratz", "email": "hans@appfour.com", "date": "2021-11-25T05:56:42Z"}, "message": "The correct LLVM target for aarch64-apple-darwin is arm64-... (as with ios)", "tree": {"sha": "d9b2714bff0b1fccee63889da3c47eb225bee523", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9b2714bff0b1fccee63889da3c47eb225bee523"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa180305675e6ec446f7b1c21cb33fbef5f68f31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa180305675e6ec446f7b1c21cb33fbef5f68f31", "html_url": "https://github.com/rust-lang/rust/commit/fa180305675e6ec446f7b1c21cb33fbef5f68f31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa180305675e6ec446f7b1c21cb33fbef5f68f31/comments", "author": {"login": "hkratz", "id": 3736990, "node_id": "MDQ6VXNlcjM3MzY5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3736990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkratz", "html_url": "https://github.com/hkratz", "followers_url": "https://api.github.com/users/hkratz/followers", "following_url": "https://api.github.com/users/hkratz/following{/other_user}", "gists_url": "https://api.github.com/users/hkratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkratz/subscriptions", "organizations_url": "https://api.github.com/users/hkratz/orgs", "repos_url": "https://api.github.com/users/hkratz/repos", "events_url": "https://api.github.com/users/hkratz/events{/privacy}", "received_events_url": "https://api.github.com/users/hkratz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hkratz", "id": 3736990, "node_id": "MDQ6VXNlcjM3MzY5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3736990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkratz", "html_url": "https://github.com/hkratz", "followers_url": "https://api.github.com/users/hkratz/followers", "following_url": "https://api.github.com/users/hkratz/following{/other_user}", "gists_url": "https://api.github.com/users/hkratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkratz/subscriptions", "organizations_url": "https://api.github.com/users/hkratz/orgs", "repos_url": "https://api.github.com/users/hkratz/repos", "events_url": "https://api.github.com/users/hkratz/events{/privacy}", "received_events_url": "https://api.github.com/users/hkratz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "982c552c908d179eaa38b6ef152ad3fa30268778", "url": "https://api.github.com/repos/rust-lang/rust/commits/982c552c908d179eaa38b6ef152ad3fa30268778", "html_url": "https://github.com/rust-lang/rust/commit/982c552c908d179eaa38b6ef152ad3fa30268778"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "f01ff02da072f2bb5c281c403c7dde5ebb858a7c", "filename": "compiler/rustc_target/src/spec/aarch64_apple_darwin.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fa180305675e6ec446f7b1c21cb33fbef5f68f31/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_apple_darwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa180305675e6ec446f7b1c21cb33fbef5f68f31/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_apple_darwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_apple_darwin.rs?ref=fa180305675e6ec446f7b1c21cb33fbef5f68f31", "patch": "@@ -14,14 +14,13 @@ pub fn target() -> Target {\n     // Clang automatically chooses a more specific target based on\n     // MACOSX_DEPLOYMENT_TARGET.  To enable cross-language LTO to work\n     // correctly, we do too.\n-    let arch = \"aarch64\";\n-    let llvm_target = super::apple_base::macos_llvm_target(&arch);\n+    let llvm_target = super::apple_base::macos_llvm_target(\"arm64\");\n \n     Target {\n         llvm_target,\n         pointer_width: 64,\n         data_layout: \"e-m:o-i64:64-i128:128-n32:64-S128\".to_string(),\n-        arch: arch.to_string(),\n+        arch: \"aarch64\".to_string(),\n         options: TargetOptions {\n             mcount: \"\\u{1}mcount\".to_string(),\n             frame_pointer: FramePointer::NonLeaf,"}]}