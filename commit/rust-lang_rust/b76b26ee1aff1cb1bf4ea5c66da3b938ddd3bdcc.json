{"sha": "b76b26ee1aff1cb1bf4ea5c66da3b938ddd3bdcc", "node_id": "C_kwDOAAsO6NoAKGI3NmIyNmVlMWFmZjFjYjFiZjRlYTVjNjZkYTNiOTM4ZGRkM2JkY2M", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-02-18T19:38:08Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-02-18T19:38:08Z"}, "message": "fmt", "tree": {"sha": "f69278760a89acf06afe01e551473fd080b4e406", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f69278760a89acf06afe01e551473fd080b4e406"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b76b26ee1aff1cb1bf4ea5c66da3b938ddd3bdcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b76b26ee1aff1cb1bf4ea5c66da3b938ddd3bdcc", "html_url": "https://github.com/rust-lang/rust/commit/b76b26ee1aff1cb1bf4ea5c66da3b938ddd3bdcc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b76b26ee1aff1cb1bf4ea5c66da3b938ddd3bdcc/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "036929d86dc03197668cd9c6673dcbc4e42dfb17", "url": "https://api.github.com/repos/rust-lang/rust/commits/036929d86dc03197668cd9c6673dcbc4e42dfb17", "html_url": "https://github.com/rust-lang/rust/commit/036929d86dc03197668cd9c6673dcbc4e42dfb17"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "f9a6ef34c2f21ccde249d65cd5c7c68b3304702e", "filename": "src/tools/miri/src/machine.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b76b26ee1aff1cb1bf4ea5c66da3b938ddd3bdcc/src%2Ftools%2Fmiri%2Fsrc%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b76b26ee1aff1cb1bf4ea5c66da3b938ddd3bdcc/src%2Ftools%2Fmiri%2Fsrc%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fmachine.rs?ref=b76b26ee1aff1cb1bf4ea5c66da3b938ddd3bdcc", "patch": "@@ -908,8 +908,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for MiriMachine<'mir, 'tcx> {\n             };\n             let (shim_size, shim_align, _kind) = ecx.get_alloc_info(alloc_id);\n             let def_ty = ecx.tcx.type_of(def_id).subst_identity();\n-            let extern_decl_layout =\n-                ecx.tcx.layout_of(ty::ParamEnv::empty().and(def_ty)).unwrap();\n+            let extern_decl_layout = ecx.tcx.layout_of(ty::ParamEnv::empty().and(def_ty)).unwrap();\n             if extern_decl_layout.size != shim_size || extern_decl_layout.align.abi != shim_align {\n                 throw_unsup_format!(\n                     \"`extern` static `{name}` from crate `{krate}` has been declared \\"}]}