{"sha": "98e20c097cbb402ee2c6f4056fe8b4acca9679f9", "node_id": "C_kwDOAAsO6NoAKDk4ZTIwYzA5N2NiYjQwMmVlMmM2ZjQwNTZmZThiNGFjY2E5Njc5Zjk", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-09-15T07:18:23Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-09-15T08:15:38Z"}, "message": "fix #101797: Suggest associated const for incorrect use of let in traits", "tree": {"sha": "c6e559c39bf19dc722bd1a7ad84f3ed12bce2b7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6e559c39bf19dc722bd1a7ad84f3ed12bce2b7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98e20c097cbb402ee2c6f4056fe8b4acca9679f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98e20c097cbb402ee2c6f4056fe8b4acca9679f9", "html_url": "https://github.com/rust-lang/rust/commit/98e20c097cbb402ee2c6f4056fe8b4acca9679f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98e20c097cbb402ee2c6f4056fe8b4acca9679f9/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3f59295fecb9a7cb067bc4a5b50f779e159a55b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3f59295fecb9a7cb067bc4a5b50f779e159a55b", "html_url": "https://github.com/rust-lang/rust/commit/c3f59295fecb9a7cb067bc4a5b50f779e159a55b"}], "stats": {"total": 47, "additions": 43, "deletions": 4}, "files": [{"sha": "045dc7357f1779cf13843ebda7b4782a657eb558", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/98e20c097cbb402ee2c6f4056fe8b4acca9679f9/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98e20c097cbb402ee2c6f4056fe8b4acca9679f9/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=98e20c097cbb402ee2c6f4056fe8b4acca9679f9", "patch": "@@ -698,11 +698,22 @@ impl<'a> Parser<'a> {\n                     let semicolon_span = self.token.span;\n                     // We have to bail or we'll potentially never make progress.\n                     let non_item_span = self.token.span;\n-                    self.consume_block(Delimiter::Brace, ConsumeClosingDelim::Yes);\n+                    let is_let = self.token.is_keyword(kw::Let);\n+\n                     let mut err = self.struct_span_err(non_item_span, \"non-item in item list\");\n-                    err.span_label(open_brace_span, \"item list starts here\")\n-                        .span_label(non_item_span, \"non-item starts here\")\n-                        .span_label(self.prev_token.span, \"item list ends here\");\n+                    self.consume_block(Delimiter::Brace, ConsumeClosingDelim::Yes);\n+                    if is_let {\n+                        err.span_suggestion(\n+                            non_item_span,\n+                            \"considering use `const` instead of `let` for associated const\",\n+                            \"const\",\n+                            Applicability::MachineApplicable,\n+                        );\n+                    } else {\n+                        err.span_label(open_brace_span, \"item list starts here\")\n+                            .span_label(non_item_span, \"non-item starts here\")\n+                            .span_label(self.prev_token.span, \"item list ends here\");\n+                    }\n                     if is_unnecessary_semicolon {\n                         err.span_suggestion(\n                             semicolon_span,"}, {"sha": "259f37b23a5845bc78580a65f7c33e2297d883ac", "filename": "src/test/ui/parser/suggest-assoc-const.fixed", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/98e20c097cbb402ee2c6f4056fe8b4acca9679f9/src%2Ftest%2Fui%2Fparser%2Fsuggest-assoc-const.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/98e20c097cbb402ee2c6f4056fe8b4acca9679f9/src%2Ftest%2Fui%2Fparser%2Fsuggest-assoc-const.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fsuggest-assoc-const.fixed?ref=98e20c097cbb402ee2c6f4056fe8b4acca9679f9", "patch": "@@ -0,0 +1,10 @@\n+// Issue: 101797, Suggest associated const for incorrect use of let in traits\n+// run-rustfix\n+trait Trait {\n+    const _X: i32;\n+    //~^ ERROR non-item in item list\n+}\n+\n+fn main() {\n+\n+}"}, {"sha": "c7be712ec076e2efe894d8c3b7c9758b20fb0fbb", "filename": "src/test/ui/parser/suggest-assoc-const.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/98e20c097cbb402ee2c6f4056fe8b4acca9679f9/src%2Ftest%2Fui%2Fparser%2Fsuggest-assoc-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98e20c097cbb402ee2c6f4056fe8b4acca9679f9/src%2Ftest%2Fui%2Fparser%2Fsuggest-assoc-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fsuggest-assoc-const.rs?ref=98e20c097cbb402ee2c6f4056fe8b4acca9679f9", "patch": "@@ -0,0 +1,10 @@\n+// Issue: 101797, Suggest associated const for incorrect use of let in traits\n+// run-rustfix\n+trait Trait {\n+    let _X: i32;\n+    //~^ ERROR non-item in item list\n+}\n+\n+fn main() {\n+\n+}"}, {"sha": "b92e399c905429e7cf3e3a61581088ff7e5d066f", "filename": "src/test/ui/parser/suggest-assoc-const.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/98e20c097cbb402ee2c6f4056fe8b4acca9679f9/src%2Ftest%2Fui%2Fparser%2Fsuggest-assoc-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98e20c097cbb402ee2c6f4056fe8b4acca9679f9/src%2Ftest%2Fui%2Fparser%2Fsuggest-assoc-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fsuggest-assoc-const.stderr?ref=98e20c097cbb402ee2c6f4056fe8b4acca9679f9", "patch": "@@ -0,0 +1,8 @@\n+error: non-item in item list\n+  --> $DIR/suggest-assoc-const.rs:4:5\n+   |\n+LL |     let _X: i32;\n+   |     ^^^ help: considering use `const` instead of `let` for associated const: `const`\n+\n+error: aborting due to previous error\n+"}]}