{"sha": "2e965e9c6deeafb4bbac3599cfdb1d271a759316", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlOTY1ZTljNmRlZWFmYjRiYmFjMzU5OWNmZGIxZDI3MWE3NTkzMTY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-01-06T06:30:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-06T06:30:19Z"}, "message": "Rollup merge of #67897 - pickfire:patch-1, r=Dylan-DPC\n\nUse `as_deref()` to replace `as_ref().map(...)`\n\nSuggested by @lzutao", "tree": {"sha": "7e4d3b3b9500c97eabd7874ee8f577439efddcae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e4d3b3b9500c97eabd7874ee8f577439efddcae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e965e9c6deeafb4bbac3599cfdb1d271a759316", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeEtP7CRBK7hj4Ov3rIwAAdHIIAEl+u08wqMwdnaeIphGSrQfL\nptYyb0qpYLc1xH4yK77go0JV7QzEt+JEzwz0iBa5TbGy+2YvUh6UCX2AyVuqLtq/\n3NOuY/unu1ErzK1GKc9Sdb04p0hj2qolG6qGlztSHJy3yHAVbUv8JXGpSeoz7gmp\nmgpVaJRLf+RcZF072/Ukw8Bw2saaHnzYfkQuSYlyTH5651imylGTXcQmTQu2aokQ\nrbWAfJsamzzOJEuOM9D2vRgMYHwBajs/383bjilEuS0d95gUz8m47claJyPYnftU\nSbC7ncx3O0VRl/FfSai9RX7E1OEyfMfj8TWH2O/vCF6pax6MTAqBU92cmZZuVkA=\n=vKUG\n-----END PGP SIGNATURE-----\n", "payload": "tree 7e4d3b3b9500c97eabd7874ee8f577439efddcae\nparent 005d9d5b6e1dd6ccdfa40c1dfce5517622c92018\nparent 3d857efb4635dad00a8206a1225e344cd29915c6\nauthor Dylan DPC <dylan.dpc@gmail.com> 1578292219 +0530\ncommitter GitHub <noreply@github.com> 1578292219 +0530\n\nRollup merge of #67897 - pickfire:patch-1, r=Dylan-DPC\n\nUse `as_deref()` to replace `as_ref().map(...)`\n\nSuggested by @lzutao\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e965e9c6deeafb4bbac3599cfdb1d271a759316", "html_url": "https://github.com/rust-lang/rust/commit/2e965e9c6deeafb4bbac3599cfdb1d271a759316", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e965e9c6deeafb4bbac3599cfdb1d271a759316/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "005d9d5b6e1dd6ccdfa40c1dfce5517622c92018", "url": "https://api.github.com/repos/rust-lang/rust/commits/005d9d5b6e1dd6ccdfa40c1dfce5517622c92018", "html_url": "https://github.com/rust-lang/rust/commit/005d9d5b6e1dd6ccdfa40c1dfce5517622c92018"}, {"sha": "3d857efb4635dad00a8206a1225e344cd29915c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d857efb4635dad00a8206a1225e344cd29915c6", "html_url": "https://github.com/rust-lang/rust/commit/3d857efb4635dad00a8206a1225e344cd29915c6"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "85661621fbaf68c1b672120cee91269bb0543d51", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2e965e9c6deeafb4bbac3599cfdb1d271a759316/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e965e9c6deeafb4bbac3599cfdb1d271a759316/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=2e965e9c6deeafb4bbac3599cfdb1d271a759316", "patch": "@@ -2152,7 +2152,7 @@ fn stability_tags(item: &clean::Item) -> String {\n     }\n \n     if let Some(stab) = item.stability.as_ref().filter(|s| s.level == stability::Unstable) {\n-        if stab.feature.as_ref().map(|s| &**s) == Some(\"rustc_private\") {\n+        if stab.feature.as_deref() == Some(\"rustc_private\") {\n             tags += &tag_html(\"internal\", \"Internal\");\n         } else {\n             tags += &tag_html(\"unstable\", \"Experimental\");\n@@ -2205,7 +2205,7 @@ fn short_stability(item: &clean::Item, cx: &Context) -> Vec<String> {\n     }\n \n     if let Some(stab) = item.stability.as_ref().filter(|stab| stab.level == stability::Unstable) {\n-        let is_rustc_private = stab.feature.as_ref().map(|s| &**s) == Some(\"rustc_private\");\n+        let is_rustc_private = stab.feature.as_deref() == Some(\"rustc_private\");\n \n         let mut message = if is_rustc_private {\n             \"<span class='emoji'>\u2699\ufe0f</span> This is an internal compiler API.\"\n@@ -2214,7 +2214,7 @@ fn short_stability(item: &clean::Item, cx: &Context) -> Vec<String> {\n         }\n         .to_owned();\n \n-        if let Some(feature) = stab.feature.as_ref() {\n+        if let Some(feature) = stab.feature.as_deref() {\n             let mut feature = format!(\"<code>{}</code>\", Escape(&feature));\n             if let (Some(url), Some(issue)) = (&cx.shared.issue_tracker_base_url, stab.issue) {\n                 feature.push_str(&format!("}]}