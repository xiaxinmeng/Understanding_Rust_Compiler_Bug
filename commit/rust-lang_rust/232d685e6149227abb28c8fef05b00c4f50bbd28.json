{"sha": "232d685e6149227abb28c8fef05b00c4f50bbd28", "node_id": "C_kwDOAAsO6NoAKDIzMmQ2ODVlNjE0OTIyN2FiYjI4YzhmZWYwNWIwMGM0ZjUwYmJkMjg", "commit": {"author": {"name": "whtahy", "email": "whtahy@users.noreply.github.com", "date": "2023-04-19T01:30:21Z"}, "committer": {"name": "whtahy", "email": "whtahy@users.noreply.github.com", "date": "2023-04-22T04:47:07Z"}, "message": "add known-bug test for unsound issue 57893", "tree": {"sha": "9a6c377403f65926398396a6d4f51026cf83b49e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a6c377403f65926398396a6d4f51026cf83b49e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/232d685e6149227abb28c8fef05b00c4f50bbd28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/232d685e6149227abb28c8fef05b00c4f50bbd28", "html_url": "https://github.com/rust-lang/rust/commit/232d685e6149227abb28c8fef05b00c4f50bbd28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/232d685e6149227abb28c8fef05b00c4f50bbd28/comments", "author": {"login": "whtahy", "id": 19783477, "node_id": "MDQ6VXNlcjE5NzgzNDc3", "avatar_url": "https://avatars.githubusercontent.com/u/19783477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whtahy", "html_url": "https://github.com/whtahy", "followers_url": "https://api.github.com/users/whtahy/followers", "following_url": "https://api.github.com/users/whtahy/following{/other_user}", "gists_url": "https://api.github.com/users/whtahy/gists{/gist_id}", "starred_url": "https://api.github.com/users/whtahy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whtahy/subscriptions", "organizations_url": "https://api.github.com/users/whtahy/orgs", "repos_url": "https://api.github.com/users/whtahy/repos", "events_url": "https://api.github.com/users/whtahy/events{/privacy}", "received_events_url": "https://api.github.com/users/whtahy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "whtahy", "id": 19783477, "node_id": "MDQ6VXNlcjE5NzgzNDc3", "avatar_url": "https://avatars.githubusercontent.com/u/19783477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whtahy", "html_url": "https://github.com/whtahy", "followers_url": "https://api.github.com/users/whtahy/followers", "following_url": "https://api.github.com/users/whtahy/following{/other_user}", "gists_url": "https://api.github.com/users/whtahy/gists{/gist_id}", "starred_url": "https://api.github.com/users/whtahy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whtahy/subscriptions", "organizations_url": "https://api.github.com/users/whtahy/orgs", "repos_url": "https://api.github.com/users/whtahy/repos", "events_url": "https://api.github.com/users/whtahy/events{/privacy}", "received_events_url": "https://api.github.com/users/whtahy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fb20985a000a8f1cd891ef484f7265a55c1612f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fb20985a000a8f1cd891ef484f7265a55c1612f", "html_url": "https://github.com/rust-lang/rust/commit/2fb20985a000a8f1cd891ef484f7265a55c1612f"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "bb46498f90eba362c4afac803b881051ab704d28", "filename": "tests/ui/coherence/indirect-impl-for-trait-obj-coherence.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/232d685e6149227abb28c8fef05b00c4f50bbd28/tests%2Fui%2Fcoherence%2Findirect-impl-for-trait-obj-coherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/232d685e6149227abb28c8fef05b00c4f50bbd28/tests%2Fui%2Fcoherence%2Findirect-impl-for-trait-obj-coherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcoherence%2Findirect-impl-for-trait-obj-coherence.rs?ref=232d685e6149227abb28c8fef05b00c4f50bbd28", "patch": "@@ -0,0 +1,25 @@\n+// check-pass\n+// known-bug: #57893\n+\n+// Should fail. Because we see an impl that uses a certain associated type, we\n+// type-check assuming that impl is used. However, this conflicts with the\n+// \"implicit impl\" that we get for trait objects, violating coherence.\n+\n+trait Object<U> {\n+    type Output;\n+}\n+\n+impl<T: ?Sized, U> Object<U> for T {\n+    type Output = U;\n+}\n+\n+fn foo<T: ?Sized, U>(x: <T as Object<U>>::Output) -> U {\n+    x\n+}\n+\n+#[allow(dead_code)]\n+fn transmute<T, U>(x: T) -> U {\n+    foo::<dyn Object<U, Output = T>, U>(x)\n+}\n+\n+fn main() {}"}]}