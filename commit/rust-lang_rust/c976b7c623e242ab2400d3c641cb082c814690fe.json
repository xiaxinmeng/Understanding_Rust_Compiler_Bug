{"sha": "c976b7c623e242ab2400d3c641cb082c814690fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5NzZiN2M2MjNlMjQyYWIyNDAwZDNjNjQxY2IwODJjODE0NjkwZmU=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-03T13:18:14Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-03T13:32:23Z"}, "message": "Fix tests for str::le patch", "tree": {"sha": "3fb96c951a525eefedbc050693638c3d0d6f5f42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fb96c951a525eefedbc050693638c3d0d6f5f42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c976b7c623e242ab2400d3c641cb082c814690fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c976b7c623e242ab2400d3c641cb082c814690fe", "html_url": "https://github.com/rust-lang/rust/commit/c976b7c623e242ab2400d3c641cb082c814690fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c976b7c623e242ab2400d3c641cb082c814690fe/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31b0d1b4bdf47554604bd4962d8d940c5e29cc7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/31b0d1b4bdf47554604bd4962d8d940c5e29cc7a", "html_url": "https://github.com/rust-lang/rust/commit/31b0d1b4bdf47554604bd4962d8d940c5e29cc7a"}], "stats": {"total": 45, "additions": 10, "deletions": 35}, "files": [{"sha": "75e4d67028f39a534b68194c22b1abd31c5dd0b5", "filename": "src/test/compile-fail/no-constraint-prop.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c976b7c623e242ab2400d3c641cb082c814690fe/src%2Ftest%2Fcompile-fail%2Fno-constraint-prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c976b7c623e242ab2400d3c641cb082c814690fe/src%2Ftest%2Fcompile-fail%2Fno-constraint-prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-constraint-prop.rs?ref=c976b7c623e242ab2400d3c641cb082c814690fe", "patch": "@@ -1,17 +1,14 @@\n-// error-pattern:Unsatisfied precondition constraint (for example, le(b, d\n-use std;\n-import str::*;\n-import uint::*;\n+// error-pattern:Unsatisfied precondition constraint (for example, uint::le\n \n fn main() unsafe {\n     let a: uint = 1u;\n     let b: uint = 4u;\n     let c: uint = 5u;\n     // make sure that the constraint le(b, a) exists...\n-    check (le(b, a));\n+    check (uint::le(b, a));\n     // ...invalidate it...\n     b += 1u;\n-    check (le(c, a));\n+    check (uint::le(c, a));\n     // ...and check that it doesn't get set in the poststate of\n     // the next statement, since it's not true in the\n     // prestate."}, {"sha": "2c7934fdffca0b42ff5ad54dbb07ba1a31fe9852", "filename": "src/test/run-fail/fn-constraint.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c976b7c623e242ab2400d3c641cb082c814690fe/src%2Ftest%2Frun-fail%2Ffn-constraint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c976b7c623e242ab2400d3c641cb082c814690fe/src%2Ftest%2Frun-fail%2Ffn-constraint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffn-constraint.rs?ref=c976b7c623e242ab2400d3c641cb082c814690fe", "patch": "@@ -1,11 +1,8 @@\n-// error-pattern:Predicate le(a, b) failed\n-use std;\n-import str::*;\n-import uint::le;\n+// error-pattern:Predicate uint::le(a, b) failed\n \n fn main() unsafe {\n     let a: uint = 4u;\n     let b: uint = 1u;\n-    check (le(a, b));\n+    check (uint::le(a, b));\n     log(error, str::unsafe::slice_bytes_safe_range(\"kitties\", a, b));\n }"}, {"sha": "e4a2badb9ec847d81d0cc64fd7a59454e6c29ff3", "filename": "src/test/run-pass/constraint-prop-expr-move.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c976b7c623e242ab2400d3c641cb082c814690fe/src%2Ftest%2Frun-pass%2Fconstraint-prop-expr-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c976b7c623e242ab2400d3c641cb082c814690fe/src%2Ftest%2Frun-pass%2Fconstraint-prop-expr-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconstraint-prop-expr-move.rs?ref=c976b7c623e242ab2400d3c641cb082c814690fe", "patch": "@@ -1,12 +1,9 @@\n-use std;\n-import str::*;\n-import uint::*;\n \n fn main() unsafe {\n     let a: uint = 1u;\n     let b: uint = 4u;\n     let c: uint = 17u;\n-    check (le(a, b));\n+    check (uint::le(a, b));\n     c <- a;\n     log(debug, str::unsafe::slice_bytes_safe_range(\"kitties\", c, b));\n }"}, {"sha": "a12ba6b04d58b91e49198d59737fc1864eb93e64", "filename": "src/test/run-pass/constraint-prop-move.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c976b7c623e242ab2400d3c641cb082c814690fe/src%2Ftest%2Frun-pass%2Fconstraint-prop-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c976b7c623e242ab2400d3c641cb082c814690fe/src%2Ftest%2Frun-pass%2Fconstraint-prop-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconstraint-prop-move.rs?ref=c976b7c623e242ab2400d3c641cb082c814690fe", "patch": "@@ -1,11 +1,7 @@\n-use std;\n-import str::*;\n-import uint::*;\n-\n fn main() unsafe {\n     let a: uint = 1u;\n     let b: uint = 4u;\n-    check (le(a, b));\n+    check (uint::le(a, b));\n     let c <- a;\n     log(debug, str::unsafe::slice_bytes_safe_range(\"kitties\", c, b));\n }"}, {"sha": "a20702954872d82e8fc1903e62db581de50919d5", "filename": "src/test/run-pass/constraint-prop-swap.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c976b7c623e242ab2400d3c641cb082c814690fe/src%2Ftest%2Frun-pass%2Fconstraint-prop-swap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c976b7c623e242ab2400d3c641cb082c814690fe/src%2Ftest%2Frun-pass%2Fconstraint-prop-swap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconstraint-prop-swap.rs?ref=c976b7c623e242ab2400d3c641cb082c814690fe", "patch": "@@ -1,11 +1,7 @@\n-use std;\n-import str::*;\n-import uint::*;\n-\n fn main() unsafe {\n     let a: uint = 4u;\n     let b: uint = 1u;\n-    check (le(b, a));\n+    check (uint::le(b, a));\n     b <-> a;\n     log(debug, str::unsafe::slice_bytes_safe_range(\"kitties\", a, b));\n }"}, {"sha": "2bbff1342d28627871059e59a2f6ed59b56ea59d", "filename": "src/test/run-pass/constraint-prop.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c976b7c623e242ab2400d3c641cb082c814690fe/src%2Ftest%2Frun-pass%2Fconstraint-prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c976b7c623e242ab2400d3c641cb082c814690fe/src%2Ftest%2Frun-pass%2Fconstraint-prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconstraint-prop.rs?ref=c976b7c623e242ab2400d3c641cb082c814690fe", "patch": "@@ -1,11 +1,7 @@\n-use std;\n-import str::*;\n-import uint::*;\n-\n fn main() unsafe {\n     let a: uint = 1u;\n     let b: uint = 4u;\n-    check (le(a, b));\n+    check (uint::le(a, b));\n     let c = b;\n     log(debug, str::unsafe::slice_bytes_safe_range(\"kitties\", a, c));\n }"}, {"sha": "20cca31e2a19903649ef106b294968e2d9663553", "filename": "src/test/run-pass/fn-constraint.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c976b7c623e242ab2400d3c641cb082c814690fe/src%2Ftest%2Frun-pass%2Ffn-constraint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c976b7c623e242ab2400d3c641cb082c814690fe/src%2Ftest%2Frun-pass%2Ffn-constraint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffn-constraint.rs?ref=c976b7c623e242ab2400d3c641cb082c814690fe", "patch": "@@ -1,10 +1,6 @@\n-use std;\n-import str::*;\n-import uint::*;\n-\n fn main() unsafe {\n     let a: uint = 1u;\n     let b: uint = 4u;\n-    check (le(a, b));\n+    check (uint::le(a, b));\n     log(debug, str::unsafe::slice_bytes_safe_range(\"kitties\", a, b));\n }"}]}