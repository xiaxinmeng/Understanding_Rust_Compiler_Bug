{"sha": "f654daf3a6681e6d412db1e3203801353b9089c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NTRkYWYzYTY2ODFlNmQ0MTJkYjFlMzIwMzgwMTM1M2I5MDg5Yzc=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2020-04-28T21:31:32Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2020-04-28T21:31:32Z"}, "message": "Vec IntoIter: Drop using raw slice\n\nUpdate Vec drop with a comment to explain why we want to use a raw\nslice, and extend this pattern to also include the Vec's IntoIter.", "tree": {"sha": "22ec0d224ee74849afe8a19f775df80603a9de17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22ec0d224ee74849afe8a19f775df80603a9de17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f654daf3a6681e6d412db1e3203801353b9089c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f654daf3a6681e6d412db1e3203801353b9089c7", "html_url": "https://github.com/rust-lang/rust/commit/f654daf3a6681e6d412db1e3203801353b9089c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f654daf3a6681e6d412db1e3203801353b9089c7/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7612ad77975331c91aec8ab2a269b31b22668972", "url": "https://api.github.com/repos/rust-lang/rust/commits/7612ad77975331c91aec8ab2a269b31b22668972", "html_url": "https://github.com/rust-lang/rust/commit/7612ad77975331c91aec8ab2a269b31b22668972"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "edb36dbf220398e0ea0a620b776e627e13eba585", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f654daf3a6681e6d412db1e3203801353b9089c7/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f654daf3a6681e6d412db1e3203801353b9089c7/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=f654daf3a6681e6d412db1e3203801353b9089c7", "patch": "@@ -2379,6 +2379,8 @@ unsafe impl<#[may_dangle] T> Drop for Vec<T> {\n     fn drop(&mut self) {\n         unsafe {\n             // use drop for [T]\n+            // use a raw slice to refer to the elements of the vector as weakest necessary type;\n+            // could avoid questions of validity in certain cases\n             ptr::drop_in_place(ptr::slice_from_raw_parts_mut(self.as_mut_ptr(), self.len))\n         }\n         // RawVec handles deallocation\n@@ -2596,7 +2598,11 @@ impl<T> IntoIter<T> {\n     /// ```\n     #[stable(feature = \"vec_into_iter_as_slice\", since = \"1.15.0\")]\n     pub fn as_mut_slice(&mut self) -> &mut [T] {\n-        unsafe { slice::from_raw_parts_mut(self.ptr as *mut T, self.len()) }\n+        unsafe { &mut *self.as_raw_mut_slice() }\n+    }\n+\n+    fn as_raw_mut_slice(&mut self) -> *mut [T] {\n+        ptr::slice_from_raw_parts_mut(self.ptr as *mut T, self.len())\n     }\n }\n \n@@ -2708,7 +2714,7 @@ unsafe impl<#[may_dangle] T> Drop for IntoIter<T> {\n         let guard = DropGuard(self);\n         // destroy the remaining elements\n         unsafe {\n-            ptr::drop_in_place(guard.0.as_mut_slice());\n+            ptr::drop_in_place(guard.0.as_raw_mut_slice());\n         }\n         // now `guard` will be dropped and do the rest\n     }"}]}