{"sha": "6884e045bb8e03f6ee0a23454ac679aea1729c75", "node_id": "C_kwDOAAsO6NoAKDY4ODRlMDQ1YmI4ZTAzZjZlZTBhMjM0NTRhYzY3OWFlYTE3MjljNzU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-17T10:32:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-17T10:32:50Z"}, "message": "Rollup merge of #100379 - davidtwco:triagebot-diag, r=Mark-Simulacrum\n\ntriagebot: add translation-related mention groups\n\n- Move some code around so that triagebot can ping relevant parties when translation logic is modified.\n- Add mention groups to triagebot for translation-related files/folders.\n- Auto-label pull requests with changes to translation-related files/folders with `A-translation`.\n\nr? `@Mark-Simulacrum`", "tree": {"sha": "b542d73831156cf7374b7a35e3cc15a9e1b7cd7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b542d73831156cf7374b7a35e3cc15a9e1b7cd7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6884e045bb8e03f6ee0a23454ac679aea1729c75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6884e045bb8e03f6ee0a23454ac679aea1729c75", "html_url": "https://github.com/rust-lang/rust/commit/6884e045bb8e03f6ee0a23454ac679aea1729c75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6884e045bb8e03f6ee0a23454ac679aea1729c75/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "870ed721afd5765e0d9514853d4ab0dfd6c0ad91", "url": "https://api.github.com/repos/rust-lang/rust/commits/870ed721afd5765e0d9514853d4ab0dfd6c0ad91", "html_url": "https://github.com/rust-lang/rust/commit/870ed721afd5765e0d9514853d4ab0dfd6c0ad91"}, {"sha": "edb616df3372e75bb501b871906901b834821106", "url": "https://api.github.com/repos/rust-lang/rust/commits/edb616df3372e75bb501b871906901b834821106", "html_url": "https://github.com/rust-lang/rust/commit/edb616df3372e75bb501b871906901b834821106"}], "stats": {"total": 52, "additions": 33, "deletions": 19}, "files": [{"sha": "6efeee98fea6c2671446bd45e03216a2a55bbdf0", "filename": "src/parse/session.rs", "status": "modified", "additions": 33, "deletions": 19, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/6884e045bb8e03f6ee0a23454ac679aea1729c75/src%2Fparse%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6884e045bb8e03f6ee0a23454ac679aea1729c75/src%2Fparse%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparse%2Fsession.rs?ref=6884e045bb8e03f6ee0a23454ac679aea1729c75", "patch": "@@ -3,6 +3,7 @@ use std::sync::atomic::{AtomicBool, Ordering};\n \n use rustc_data_structures::sync::{Lrc, Send};\n use rustc_errors::emitter::{Emitter, EmitterWriter};\n+use rustc_errors::translation::Translate;\n use rustc_errors::{ColorConfig, Diagnostic, Handler, Level as DiagnosticLevel};\n use rustc_session::parse::ParseSess as RawParseSess;\n use rustc_span::{\n@@ -28,19 +29,24 @@ pub(crate) struct ParseSess {\n /// Emitter which discards every error.\n struct SilentEmitter;\n \n-impl Emitter for SilentEmitter {\n-    fn source_map(&self) -> Option<&Lrc<SourceMap>> {\n-        None\n-    }\n-    fn emit_diagnostic(&mut self, _db: &Diagnostic) {}\n+impl Translate for SilentEmitter {\n     fn fluent_bundle(&self) -> Option<&Lrc<rustc_errors::FluentBundle>> {\n         None\n     }\n+\n     fn fallback_fluent_bundle(&self) -> &rustc_errors::FluentBundle {\n         panic!(\"silent emitter attempted to translate a diagnostic\");\n     }\n }\n \n+impl Emitter for SilentEmitter {\n+    fn source_map(&self) -> Option<&Lrc<SourceMap>> {\n+        None\n+    }\n+\n+    fn emit_diagnostic(&mut self, _db: &Diagnostic) {}\n+}\n+\n fn silent_emitter() -> Box<dyn Emitter + Send> {\n     Box::new(SilentEmitter {})\n }\n@@ -62,10 +68,21 @@ impl SilentOnIgnoredFilesEmitter {\n     }\n }\n \n+impl Translate for SilentOnIgnoredFilesEmitter {\n+    fn fluent_bundle(&self) -> Option<&Lrc<rustc_errors::FluentBundle>> {\n+        self.emitter.fluent_bundle()\n+    }\n+\n+    fn fallback_fluent_bundle(&self) -> &rustc_errors::FluentBundle {\n+        self.emitter.fallback_fluent_bundle()\n+    }\n+}\n+\n impl Emitter for SilentOnIgnoredFilesEmitter {\n     fn source_map(&self) -> Option<&Lrc<SourceMap>> {\n         None\n     }\n+\n     fn emit_diagnostic(&mut self, db: &Diagnostic) {\n         if db.level() == DiagnosticLevel::Fatal {\n             return self.handle_non_ignoreable_error(db);\n@@ -88,14 +105,6 @@ impl Emitter for SilentOnIgnoredFilesEmitter {\n         }\n         self.handle_non_ignoreable_error(db);\n     }\n-\n-    fn fluent_bundle(&self) -> Option<&Lrc<rustc_errors::FluentBundle>> {\n-        self.emitter.fluent_bundle()\n-    }\n-\n-    fn fallback_fluent_bundle(&self) -> &rustc_errors::FluentBundle {\n-        self.emitter.fallback_fluent_bundle()\n-    }\n }\n \n fn default_handler(\n@@ -340,19 +349,24 @@ mod tests {\n             num_emitted_errors: Lrc<AtomicU32>,\n         }\n \n+        impl Translate for TestEmitter {\n+            fn fluent_bundle(&self) -> Option<&Lrc<rustc_errors::FluentBundle>> {\n+                None\n+            }\n+\n+            fn fallback_fluent_bundle(&self) -> &rustc_errors::FluentBundle {\n+                panic!(\"test emitter attempted to translate a diagnostic\");\n+            }\n+        }\n+\n         impl Emitter for TestEmitter {\n             fn source_map(&self) -> Option<&Lrc<SourceMap>> {\n                 None\n             }\n+\n             fn emit_diagnostic(&mut self, _db: &Diagnostic) {\n                 self.num_emitted_errors.fetch_add(1, Ordering::Release);\n             }\n-            fn fluent_bundle(&self) -> Option<&Lrc<rustc_errors::FluentBundle>> {\n-                None\n-            }\n-            fn fallback_fluent_bundle(&self) -> &rustc_errors::FluentBundle {\n-                panic!(\"test emitter attempted to translate a diagnostic\");\n-            }\n         }\n \n         fn build_diagnostic(level: DiagnosticLevel, span: Option<MultiSpan>) -> Diagnostic {"}]}