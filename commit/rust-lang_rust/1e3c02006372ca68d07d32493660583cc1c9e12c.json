{"sha": "1e3c02006372ca68d07d32493660583cc1c9e12c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlM2MwMjAwNjM3MmNhNjhkMDdkMzI0OTM2NjA1ODNjYzFjOWUxMmM=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2019-06-14T19:26:42Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-02-21T18:41:21Z"}, "message": "Test interactions with specialization", "tree": {"sha": "04bf8b3cc178aafd8b3750b66a4bd4dee983c503", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04bf8b3cc178aafd8b3750b66a4bd4dee983c503"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e3c02006372ca68d07d32493660583cc1c9e12c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e3c02006372ca68d07d32493660583cc1c9e12c", "html_url": "https://github.com/rust-lang/rust/commit/1e3c02006372ca68d07d32493660583cc1c9e12c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e3c02006372ca68d07d32493660583cc1c9e12c/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de447eb9f20cbc2a330d6093a4ac8b5eb730b193", "url": "https://api.github.com/repos/rust-lang/rust/commits/de447eb9f20cbc2a330d6093a4ac8b5eb730b193", "html_url": "https://github.com/rust-lang/rust/commit/de447eb9f20cbc2a330d6093a4ac8b5eb730b193"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "c8aab8fb3ec4a041380bdad41540019f25aa963f", "filename": "src/test/ui/associated-types/defaults-specialization.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/1e3c02006372ca68d07d32493660583cc1c9e12c/src%2Ftest%2Fui%2Fassociated-types%2Fdefaults-specialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e3c02006372ca68d07d32493660583cc1c9e12c/src%2Ftest%2Fui%2Fassociated-types%2Fdefaults-specialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fdefaults-specialization.rs?ref=1e3c02006372ca68d07d32493660583cc1c9e12c", "patch": "@@ -0,0 +1,46 @@\n+// compile-fail\n+\n+#![feature(associated_type_defaults, specialization)]\n+\n+trait Tr {\n+    type Ty = u8;\n+\n+    fn make() -> Self::Ty;\n+}\n+\n+struct A<T>(T);\n+// In a `default impl`, assoc. types are defaulted as well,\n+// so their values can't be assumed.\n+default impl<T> Tr for A<T> {\n+    fn make() -> u8 { 0 }\n+    //~^ ERROR method `make` has an incompatible type for trait\n+}\n+\n+struct B<T>(T);\n+// Explicitly defaulting the type does the same.\n+impl<T> Tr for B<T> {\n+    default type Ty = bool;\n+\n+    fn make() -> bool { true }\n+    //~^ ERROR method `make` has an incompatible type for trait\n+}\n+\n+struct C<T>(T);\n+// Only the method is defaulted, so this is fine.\n+impl<T> Tr for C<T> {\n+    type Ty = bool;\n+\n+    default fn make() -> bool { true }\n+}\n+\n+// Defaulted method *can* assume the type, if the default is kept.\n+struct D<T>(T);\n+impl<T> Tr for D<T> {\n+    default fn make() -> u8 { 0 }\n+}\n+\n+impl Tr for D<bool> {\n+    fn make() -> u8 { 255 }\n+}\n+\n+fn main() {}"}, {"sha": "0e6711780f8ddf6bca4041fa59005cbedac35761", "filename": "src/test/ui/associated-types/defaults-specialization.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1e3c02006372ca68d07d32493660583cc1c9e12c/src%2Ftest%2Fui%2Fassociated-types%2Fdefaults-specialization.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e3c02006372ca68d07d32493660583cc1c9e12c/src%2Ftest%2Fui%2Fassociated-types%2Fdefaults-specialization.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fdefaults-specialization.stderr?ref=1e3c02006372ca68d07d32493660583cc1c9e12c", "patch": "@@ -0,0 +1,27 @@\n+error[E0053]: method `make` has an incompatible type for trait\n+  --> $DIR/defaults-specialization.rs:15:18\n+   |\n+LL |     fn make() -> Self::Ty;\n+   |                  -------- type in trait\n+...\n+LL |     fn make() -> u8 { 0 }\n+   |                  ^^ expected associated type, found u8\n+   |\n+   = note: expected type `fn() -> <A<T> as Tr>::Ty`\n+              found type `fn() -> u8`\n+\n+error[E0053]: method `make` has an incompatible type for trait\n+  --> $DIR/defaults-specialization.rs:24:18\n+   |\n+LL |     fn make() -> Self::Ty;\n+   |                  -------- type in trait\n+...\n+LL |     fn make() -> bool { true }\n+   |                  ^^^^ expected associated type, found bool\n+   |\n+   = note: expected type `fn() -> <B<T> as Tr>::Ty`\n+              found type `fn() -> bool`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0053`."}]}