{"sha": "32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYjJhM2Y5NDRmOTg4OWZkN2M1ZmNmYjc5NzY0MzBkMWFlYjdlZDQ=", "commit": {"author": {"name": "pro-grammer1", "email": "1df0d0d3-eed4-45fc-bc60-43a85079f3f9@anonaddy.me", "date": "2021-01-17T19:21:33Z"}, "committer": {"name": "pro-grammer1", "email": "1df0d0d3-eed4-45fc-bc60-43a85079f3f9@anonaddy.me", "date": "2021-01-17T19:21:33Z"}, "message": "Add numeric literals to the write_literal and print_literal tests that shouldn't fail", "tree": {"sha": "a315015a7ae8cb32bc6156856260cd7bbc44f7c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a315015a7ae8cb32bc6156856260cd7bbc44f7c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4", "html_url": "https://github.com/rust-lang/rust/commit/32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4/comments", "author": {"login": "pro-grammer1", "id": 75092787, "node_id": "MDQ6VXNlcjc1MDkyNzg3", "avatar_url": "https://avatars.githubusercontent.com/u/75092787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pro-grammer1", "html_url": "https://github.com/pro-grammer1", "followers_url": "https://api.github.com/users/pro-grammer1/followers", "following_url": "https://api.github.com/users/pro-grammer1/following{/other_user}", "gists_url": "https://api.github.com/users/pro-grammer1/gists{/gist_id}", "starred_url": "https://api.github.com/users/pro-grammer1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pro-grammer1/subscriptions", "organizations_url": "https://api.github.com/users/pro-grammer1/orgs", "repos_url": "https://api.github.com/users/pro-grammer1/repos", "events_url": "https://api.github.com/users/pro-grammer1/events{/privacy}", "received_events_url": "https://api.github.com/users/pro-grammer1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pro-grammer1", "id": 75092787, "node_id": "MDQ6VXNlcjc1MDkyNzg3", "avatar_url": "https://avatars.githubusercontent.com/u/75092787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pro-grammer1", "html_url": "https://github.com/pro-grammer1", "followers_url": "https://api.github.com/users/pro-grammer1/followers", "following_url": "https://api.github.com/users/pro-grammer1/following{/other_user}", "gists_url": "https://api.github.com/users/pro-grammer1/gists{/gist_id}", "starred_url": "https://api.github.com/users/pro-grammer1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pro-grammer1/subscriptions", "organizations_url": "https://api.github.com/users/pro-grammer1/orgs", "repos_url": "https://api.github.com/users/pro-grammer1/repos", "events_url": "https://api.github.com/users/pro-grammer1/events{/privacy}", "received_events_url": "https://api.github.com/users/pro-grammer1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb2a06dcce0680dfe8d2bed542be3c55eb2e18c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb2a06dcce0680dfe8d2bed542be3c55eb2e18c7", "html_url": "https://github.com/rust-lang/rust/commit/fb2a06dcce0680dfe8d2bed542be3c55eb2e18c7"}], "stats": {"total": 50, "additions": 28, "deletions": 22}, "files": [{"sha": "8665a3bb28ae19b9eca30b426e4faf20ff47a6cc", "filename": "tests/ui/print_literal.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4/tests%2Fui%2Fprint_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4/tests%2Fui%2Fprint_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_literal.rs?ref=32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4", "patch": "@@ -17,6 +17,9 @@ fn main() {\n     println!(\"{bar:8} {foo:>8}\", foo = \"hello\", bar = \"world\");\n     println!(\"{number:>width$}\", number = 1, width = 6);\n     println!(\"{number:>0width$}\", number = 1, width = 6);\n+    println!(\"{} of {:b} people know binary, the other half doesn't\", 1, 2);\n+    println!(\"10 / 4 is {}\", 2.5);\n+    println!(\"2 + 1 = {}\", 3);\n \n     // these should throw warnings\n     print!(\"Hello {}\", \"world\");"}, {"sha": "e284aece236faa4462e4b288ead9799735528d6e", "filename": "tests/ui/print_literal.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4/tests%2Fui%2Fprint_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4/tests%2Fui%2Fprint_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_literal.stderr?ref=32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4", "patch": "@@ -1,67 +1,67 @@\n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:22:24\n+  --> $DIR/print_literal.rs:25:24\n    |\n LL |     print!(\"Hello {}\", \"world\");\n    |                        ^^^^^^^\n    |\n    = note: `-D clippy::print-literal` implied by `-D warnings`\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:23:36\n+  --> $DIR/print_literal.rs:26:36\n    |\n LL |     println!(\"Hello {} {}\", world, \"world\");\n    |                                    ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:24:26\n+  --> $DIR/print_literal.rs:27:26\n    |\n LL |     println!(\"Hello {}\", \"world\");\n    |                          ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:29:25\n+  --> $DIR/print_literal.rs:32:25\n    |\n LL |     println!(\"{0} {1}\", \"hello\", \"world\");\n    |                         ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:29:34\n+  --> $DIR/print_literal.rs:32:34\n    |\n LL |     println!(\"{0} {1}\", \"hello\", \"world\");\n    |                                  ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:30:25\n+  --> $DIR/print_literal.rs:33:25\n    |\n LL |     println!(\"{1} {0}\", \"hello\", \"world\");\n    |                         ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:30:34\n+  --> $DIR/print_literal.rs:33:34\n    |\n LL |     println!(\"{1} {0}\", \"hello\", \"world\");\n    |                                  ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:33:35\n+  --> $DIR/print_literal.rs:36:35\n    |\n LL |     println!(\"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n    |                                   ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:33:50\n+  --> $DIR/print_literal.rs:36:50\n    |\n LL |     println!(\"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n    |                                                  ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:34:35\n+  --> $DIR/print_literal.rs:37:35\n    |\n LL |     println!(\"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n    |                                   ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:34:50\n+  --> $DIR/print_literal.rs:37:50\n    |\n LL |     println!(\"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n    |                                                  ^^^^^^^"}, {"sha": "0a127858defdfefe997701fa396f34fcbfadeabf", "filename": "tests/ui/write_literal.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4/tests%2Fui%2Fwrite_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4/tests%2Fui%2Fwrite_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrite_literal.rs?ref=32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4", "patch": "@@ -22,6 +22,9 @@ fn main() {\n     writeln!(&mut v, \"{bar:8} {foo:>8}\", foo = \"hello\", bar = \"world\");\n     writeln!(&mut v, \"{number:>width$}\", number = 1, width = 6);\n     writeln!(&mut v, \"{number:>0width$}\", number = 1, width = 6);\n+    writeln!(&mut v, \"{} of {:b} people know binary, the other half doesn't\", 1, 2);\n+    writeln!(&mut v, \"10 / 4 is {}\", 2.5);\n+    writeln!(&mut v, \"2 + 1 = {}\", 3);\n \n     // these should throw warnings\n     write!(&mut v, \"Hello {}\", \"world\");"}, {"sha": "e54d89ecf29e67ded79b647991050b226b7d4234", "filename": "tests/ui/write_literal.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4/tests%2Fui%2Fwrite_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4/tests%2Fui%2Fwrite_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrite_literal.stderr?ref=32b2a3f944f9889fd7c5fcfb7976430d1aeb7ed4", "patch": "@@ -1,67 +1,67 @@\n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:27:32\n+  --> $DIR/write_literal.rs:30:32\n    |\n LL |     write!(&mut v, \"Hello {}\", \"world\");\n    |                                ^^^^^^^\n    |\n    = note: `-D clippy::write-literal` implied by `-D warnings`\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:28:44\n+  --> $DIR/write_literal.rs:31:44\n    |\n LL |     writeln!(&mut v, \"Hello {} {}\", world, \"world\");\n    |                                            ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:29:34\n+  --> $DIR/write_literal.rs:32:34\n    |\n LL |     writeln!(&mut v, \"Hello {}\", \"world\");\n    |                                  ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:34:33\n+  --> $DIR/write_literal.rs:37:33\n    |\n LL |     writeln!(&mut v, \"{0} {1}\", \"hello\", \"world\");\n    |                                 ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:34:42\n+  --> $DIR/write_literal.rs:37:42\n    |\n LL |     writeln!(&mut v, \"{0} {1}\", \"hello\", \"world\");\n    |                                          ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:35:33\n+  --> $DIR/write_literal.rs:38:33\n    |\n LL |     writeln!(&mut v, \"{1} {0}\", \"hello\", \"world\");\n    |                                 ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:35:42\n+  --> $DIR/write_literal.rs:38:42\n    |\n LL |     writeln!(&mut v, \"{1} {0}\", \"hello\", \"world\");\n    |                                          ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:38:43\n+  --> $DIR/write_literal.rs:41:43\n    |\n LL |     writeln!(&mut v, \"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n    |                                           ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:38:58\n+  --> $DIR/write_literal.rs:41:58\n    |\n LL |     writeln!(&mut v, \"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n    |                                                          ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:39:43\n+  --> $DIR/write_literal.rs:42:43\n    |\n LL |     writeln!(&mut v, \"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n    |                                           ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:39:58\n+  --> $DIR/write_literal.rs:42:58\n    |\n LL |     writeln!(&mut v, \"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n    |                                                          ^^^^^^^"}]}