{"sha": "5bbdc73ebc208246755285f17485ba93305686ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViYmRjNzNlYmMyMDgyNDY3NTUyODVmMTc0ODViYTkzMzA1Njg2YWU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-08T21:41:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-08T21:41:14Z"}, "message": "Rollup merge of #74712 - strom-und-spiele:E0271-cleanup, r=Mark-Simulacrum\n\nUpdate E0271 explanation\n\nWhen reading the explanation, I got confused by it. I hope the wording is clearer now.", "tree": {"sha": "27afe20d547fe40fe31b4df76a668c1473d8db4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27afe20d547fe40fe31b4df76a668c1473d8db4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bbdc73ebc208246755285f17485ba93305686ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfLxv7CRBK7hj4Ov3rIwAAdHIIAGfcpQCfngJeUVXyKeuma3h6\n4ALjhSihGf88/pYj5NmregU5RZya54s3zAIhlYr/Ubqn/vZ/5ClW9QMDryDo/bg8\n3pgmQ2IzG4xlUQOICOUKKW5K+nIou2obErjXnq8Yt98ZqlYQ3pp+Q8AB+HbouFN+\nvoLdfPs9kAPN2xvFAhjZLDqCIGIKLMd03RMfay8Slf8+oVI+FtCls8EZoHaM75yL\nxwnBBL++I84zVYKNG1DTjPToaZKpr4QnE9hHCc8KcM1yPU3e/Y/cdrbNhh8knEHe\nIpwUKfvlTLRXYOGLwNNHzal/GVrFLqsMZXjx48LQDHBvG+KQW2kxMSNzKjEblgQ=\n=VTFF\n-----END PGP SIGNATURE-----\n", "payload": "tree 27afe20d547fe40fe31b4df76a668c1473d8db4e\nparent 1facd4a77b181ad44b9c9a64f0fd21b6d5180458\nparent 7e68b7d10a7ce505fd41ebc99bd77276ab093a16\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1596922874 +0900\ncommitter GitHub <noreply@github.com> 1596922874 +0900\n\nRollup merge of #74712 - strom-und-spiele:E0271-cleanup, r=Mark-Simulacrum\n\nUpdate E0271 explanation\n\nWhen reading the explanation, I got confused by it. I hope the wording is clearer now.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bbdc73ebc208246755285f17485ba93305686ae", "html_url": "https://github.com/rust-lang/rust/commit/5bbdc73ebc208246755285f17485ba93305686ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bbdc73ebc208246755285f17485ba93305686ae/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1facd4a77b181ad44b9c9a64f0fd21b6d5180458", "url": "https://api.github.com/repos/rust-lang/rust/commits/1facd4a77b181ad44b9c9a64f0fd21b6d5180458", "html_url": "https://github.com/rust-lang/rust/commit/1facd4a77b181ad44b9c9a64f0fd21b6d5180458"}, {"sha": "7e68b7d10a7ce505fd41ebc99bd77276ab093a16", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e68b7d10a7ce505fd41ebc99bd77276ab093a16", "html_url": "https://github.com/rust-lang/rust/commit/7e68b7d10a7ce505fd41ebc99bd77276ab093a16"}], "stats": {"total": 43, "additions": 13, "deletions": 30}, "files": [{"sha": "ddd245b1a2b1b7ea6f1ab08a8a459ed7795a2e98", "filename": "src/librustc_error_codes/error_codes/E0271.md", "status": "modified", "additions": 13, "deletions": 30, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/5bbdc73ebc208246755285f17485ba93305686ae/src%2Flibrustc_error_codes%2Ferror_codes%2FE0271.md", "raw_url": "https://github.com/rust-lang/rust/raw/5bbdc73ebc208246755285f17485ba93305686ae/src%2Flibrustc_error_codes%2Ferror_codes%2FE0271.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0271.md?ref=5bbdc73ebc208246755285f17485ba93305686ae", "patch": "@@ -5,25 +5,6 @@ Erroneous code example:\n ```compile_fail,E0271\n trait Trait { type AssociatedType; }\n \n-fn foo<T>(t: T) where T: Trait<AssociatedType=u32> {\n-    println!(\"in foo\");\n-}\n-\n-impl Trait for i8 { type AssociatedType = &'static str; }\n-\n-foo(3_i8);\n-```\n-\n-This is because of a type mismatch between the associated type of some\n-trait (e.g., `T::Bar`, where `T` implements `trait Quux { type Bar; }`)\n-and another type `U` that is required to be equal to `T::Bar`, but is not.\n-Examples follow.\n-\n-Here is that same example again, with some explanatory comments:\n-\n-```compile_fail,E0271\n-trait Trait { type AssociatedType; }\n-\n fn foo<T>(t: T) where T: Trait<AssociatedType=u32> {\n //                    ~~~~~~~~ ~~~~~~~~~~~~~~~~~~\n //                        |            |\n@@ -56,11 +37,9 @@ foo(3_i8);\n // therefore the type-checker complains with this error code.\n ```\n \n-To avoid those issues, you have to make the types match correctly.\n-So we can fix the previous examples like this:\n-\n+The issue can be resolved by changing the associated type:\n+1) in the `foo` implementation:\n ```\n-// Basic Example:\n trait Trait { type AssociatedType; }\n \n fn foo<T>(t: T) where T: Trait<AssociatedType = &'static str> {\n@@ -70,13 +49,17 @@ fn foo<T>(t: T) where T: Trait<AssociatedType = &'static str> {\n impl Trait for i8 { type AssociatedType = &'static str; }\n \n foo(3_i8);\n+```\n \n-// For-Loop Example:\n-let vs = vec![1, 2, 3, 4];\n-for v in &vs {\n-    match v {\n-        &1 => {}\n-        _ => {}\n-    }\n+2) in the `Trait` implementation for `i8`:\n+```\n+trait Trait { type AssociatedType; }\n+\n+fn foo<T>(t: T) where T: Trait<AssociatedType = u32> {\n+    println!(\"in foo\");\n }\n+\n+impl Trait for i8 { type AssociatedType = u32; }\n+\n+foo(3_i8);\n ```"}]}