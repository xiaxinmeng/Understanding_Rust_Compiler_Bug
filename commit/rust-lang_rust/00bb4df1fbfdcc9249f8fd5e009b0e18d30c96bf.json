{"sha": "00bb4df1fbfdcc9249f8fd5e009b0e18d30c96bf", "node_id": "C_kwDOAAsO6NoAKDAwYmI0ZGYxZmJmZGNjOTI0OWY4ZmQ1ZTAwOWIwZTE4ZDMwYzk2YmY", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-05-22T02:13:48Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-05-25T22:32:53Z"}, "message": "Remove download-rustc handling from bootstrap.py", "tree": {"sha": "9fd324b792695aa5bf466f86dc93434a1ab01781", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fd324b792695aa5bf466f86dc93434a1ab01781"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00bb4df1fbfdcc9249f8fd5e009b0e18d30c96bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00bb4df1fbfdcc9249f8fd5e009b0e18d30c96bf", "html_url": "https://github.com/rust-lang/rust/commit/00bb4df1fbfdcc9249f8fd5e009b0e18d30c96bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00bb4df1fbfdcc9249f8fd5e009b0e18d30c96bf/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "512d7bf874632c8ee133c0e6db382669344d3e48", "url": "https://api.github.com/repos/rust-lang/rust/commits/512d7bf874632c8ee133c0e6db382669344d3e48", "html_url": "https://github.com/rust-lang/rust/commit/512d7bf874632c8ee133c0e6db382669344d3e48"}], "stats": {"total": 55, "additions": 2, "deletions": 53}, "files": [{"sha": "955edd94c7828fd3432c735f1c5d0ab1ce027637", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 2, "deletions": 53, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/00bb4df1fbfdcc9249f8fd5e009b0e18d30c96bf/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/00bb4df1fbfdcc9249f8fd5e009b0e18d30c96bf/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=00bb4df1fbfdcc9249f8fd5e009b0e18d30c96bf", "patch": "@@ -444,9 +444,8 @@ def __init__(self):\n         self.verbose = False\n         self.git_version = None\n         self.nix_deps_dir = None\n-        self.rustc_commit = None\n \n-    def download_toolchain(self, rustc_channel=None):\n+    def download_toolchain(self):\n         \"\"\"Fetch the build system for Rust, written in Rust\n \n         This method will build a cache directory, then it will fetch the\n@@ -456,8 +455,7 @@ def download_toolchain(self, rustc_channel=None):\n         Each downloaded tarball is extracted, after that, the script\n         will move all the content to the right place.\n         \"\"\"\n-        if rustc_channel is None:\n-            rustc_channel = self.stage0_compiler.version\n+        rustc_channel = self.stage0_compiler.version\n         bin_root = self.bin_root()\n \n         key = self.stage0_compiler.date\n@@ -628,51 +626,6 @@ def fix_bin_or_dylib(self, fname):\n             print(\"warning: failed to call patchelf:\", reason)\n             return\n \n-    # If `download-rustc` is set, download the most recent commit with CI artifacts\n-    def maybe_download_ci_toolchain(self):\n-        # If `download-rustc` is not set, default to rebuilding.\n-        download_rustc = self.get_toml(\"download-rustc\", section=\"rust\")\n-        if download_rustc is None or download_rustc == \"false\":\n-            return None\n-        assert download_rustc == \"true\" or download_rustc == \"if-unchanged\", download_rustc\n-\n-        # Handle running from a directory other than the top level\n-        rev_parse = [\"git\", \"rev-parse\", \"--show-toplevel\"]\n-        top_level = subprocess.check_output(rev_parse, universal_newlines=True).strip()\n-        compiler = \"{}/compiler/\".format(top_level)\n-        library = \"{}/library/\".format(top_level)\n-\n-        # Look for a version to compare to based on the current commit.\n-        # Only commits merged by bors will have CI artifacts.\n-        merge_base = [\n-            \"git\", \"rev-list\", \"--author=bors@rust-lang.org\", \"-n1\",\n-            \"--first-parent\", \"HEAD\"\n-        ]\n-        commit = subprocess.check_output(merge_base, universal_newlines=True).strip()\n-        if not commit:\n-            print(\"error: could not find commit hash for downloading rustc\")\n-            print(\"help: maybe your repository history is too shallow?\")\n-            print(\"help: consider disabling `download-rustc`\")\n-            print(\"help: or fetch enough history to include one upstream commit\")\n-            exit(1)\n-\n-        # Warn if there were changes to the compiler or standard library since the ancestor commit.\n-        status = subprocess.call([\"git\", \"diff-index\", \"--quiet\", commit, \"--\", compiler, library])\n-        if status != 0:\n-            if download_rustc == \"if-unchanged\":\n-                if self.verbose:\n-                    print(\"warning: saw changes to compiler/ or library/ since {}; \" \\\n-                          \"ignoring `download-rustc`\".format(commit))\n-                return None\n-            print(\"warning: `download-rustc` is enabled, but there are changes to \" \\\n-                  \"compiler/ or library/\")\n-\n-        if self.verbose:\n-            print(\"using downloaded stage2 artifacts from CI (commit {})\".format(commit))\n-        self.rustc_commit = commit\n-        # FIXME: support downloading artifacts from the beta channel\n-        self.download_toolchain(False, \"nightly\")\n-\n     def rustc_stamp(self):\n         \"\"\"Return the path for .rustc-stamp at the given stage\n \n@@ -1144,8 +1097,6 @@ def bootstrap(help_triggered):\n \n     # Fetch/build the bootstrap\n     build.download_toolchain()\n-    # Download the master compiler if `download-rustc` is set\n-    # build.maybe_download_ci_toolchain()\n     sys.stdout.flush()\n     build.ensure_vendored()\n     build.build_bootstrap()\n@@ -1157,8 +1108,6 @@ def bootstrap(help_triggered):\n     env = os.environ.copy()\n     env[\"BOOTSTRAP_PARENT_ID\"] = str(os.getpid())\n     env[\"BOOTSTRAP_PYTHON\"] = sys.executable\n-    if build.rustc_commit is not None:\n-        env[\"BOOTSTRAP_DOWNLOAD_RUSTC\"] = '1'\n     run(args, env=env, verbose=build.verbose, is_bootstrap=True)\n \n "}]}