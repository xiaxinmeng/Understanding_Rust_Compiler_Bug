{"sha": "f9c325f5b657e0c37ba2016a51cddbeab7f7693f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5YzMyNWY1YjY1N2UwYzM3YmEyMDE2YTUxY2RkYmVhYjdmNzY5M2Y=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-02-17T17:11:50Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-05-31T16:50:33Z"}, "message": "Suggest to remove the semicolon of the last stmt in a block", "tree": {"sha": "ecc4217c807fe51e4bf6b8350c7f8ab4ae96d333", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecc4217c807fe51e4bf6b8350c7f8ab4ae96d333"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9c325f5b657e0c37ba2016a51cddbeab7f7693f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl7T4FkACgkQaTCGhp1Q\nZjctYA/9EIofjRvXHZtP/vwX5KOy/G4YdeB6YK0myEjLUnw/qk1bZgjdz13K2VR2\nCi2ARv6e82Es+JdAaoWUNLVKCh39VI1BliSw/N44EcmDTr/GEw65yqfI7b2ynt4J\nC523Po19qi4RVtcghnGSMDs6N1HQIBOY+rAnv0R4vxCHRptz7d2rybrku7O2UGMd\nAFs6Lr901uT7SUi0FY/sDTUXTeBIJtvGiit/nfEhEp6rQnCcf1ffBYDUavzHQWNX\ngy5BrBu4idZeL061KtvJBQ+Ujw5sMl1uzKgO+lOa3zNE/hOjfamYKZwtQEdxpniL\nqFFcGpOcMDDVGJn9mQDwyBv0BK5/N/VfHI1R9YCIRNeIOL6fCF5//OSSZehnYTkv\nkfgfZjcNDjCzpAEEeNr+OUFmHl/eHERsniNV9+RhkoKVJ5ehuAzavA3EMZ36/OgL\nOSA3dkU6R8ZtxjQ6SFwpCPAre3eS5e4Iu4CiYGcS3lfC3fra7oAZi8UJ5bOcEcs3\nU7FwewyxxlL0RtL11ClyivkF+PKf2n9/BFJPvovloKvEnzZ8n4GQ5+jKDeOA7jHp\nwvdZyPlk8dmeFKGeTBwb92rsZs3EJlEVois6bxH2BNeHrQuya8PQkDrvHtTj0CI3\nY/iTGa+pXwcPfCYaSnGjGz1Bb/RLmbhX18xxcCXm7MMPlATwtpM=\n=/fjP\n-----END PGP SIGNATURE-----", "payload": "tree ecc4217c807fe51e4bf6b8350c7f8ab4ae96d333\nparent 0f69cafc2dd77d573e24870887a4a13cfe50515a\nauthor flip1995 <hello@philkrones.com> 1581959510 +0100\ncommitter flip1995 <hello@philkrones.com> 1590943833 +0200\n\nSuggest to remove the semicolon of the last stmt in a block\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9c325f5b657e0c37ba2016a51cddbeab7f7693f", "html_url": "https://github.com/rust-lang/rust/commit/f9c325f5b657e0c37ba2016a51cddbeab7f7693f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9c325f5b657e0c37ba2016a51cddbeab7f7693f/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f69cafc2dd77d573e24870887a4a13cfe50515a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f69cafc2dd77d573e24870887a4a13cfe50515a", "html_url": "https://github.com/rust-lang/rust/commit/0f69cafc2dd77d573e24870887a4a13cfe50515a"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "51d7d9b3ab7130bded3ad6bf5e2746920ea026a6", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f9c325f5b657e0c37ba2016a51cddbeab7f7693f/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9c325f5b657e0c37ba2016a51cddbeab7f7693f/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=f9c325f5b657e0c37ba2016a51cddbeab7f7693f", "patch": "@@ -794,6 +794,36 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnitArg {\n                 if !args_to_recover.is_empty() {\n                     let mut applicability = Applicability::MachineApplicable;\n                     span_lint_and_then(cx, UNIT_ARG, expr.span, \"passing a unit value to a function\", |db| {\n+                        let mut or = \"\";\n+                        args_to_recover\n+                            .iter()\n+                            .filter_map(|arg| {\n+                                if_chain! {\n+                                    if let ExprKind::Block(block, _) = arg.kind;\n+                                    if block.expr.is_none();\n+                                    if let Some(last_stmt) = block.stmts.iter().last();\n+                                    if let StmtKind::Semi(last_expr) = last_stmt.kind;\n+                                    if let Some(snip) = snippet_opt(cx, last_expr.span);\n+                                    then {\n+                                        Some((\n+                                            last_stmt.span,\n+                                            snip,\n+                                        ))\n+                                    }\n+                                    else {\n+                                        None\n+                                    }\n+                                }\n+                            })\n+                            .for_each(|(span, sugg)| {\n+                                db.span_suggestion(\n+                                    span,\n+                                    \"remove the semicolon from the last statement in the block\",\n+                                    sugg,\n+                                    Applicability::MaybeIncorrect,\n+                                );\n+                                or = \"or \";\n+                            });\n                         let sugg = args_to_recover\n                             .iter()\n                             .enumerate()"}]}