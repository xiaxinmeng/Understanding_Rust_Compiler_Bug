{"sha": "767688fc3d4af0fd7efb4b0b6127f7fa2f4707be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NzY4OGZjM2Q0YWYwZmQ3ZWZiNGIwYjYxMjdmN2ZhMmY0NzA3YmU=", "commit": {"author": {"name": "David Manescu", "email": "dman2626@uni.sydney.edu.au", "date": "2013-08-11T14:36:24Z"}, "committer": {"name": "David Manescu", "email": "david.manescu@gmail.com", "date": "2013-08-11T15:32:05Z"}, "message": "Fixed #8451 - extra::stats::write_boxplot() applied to negative or zero sample values", "tree": {"sha": "ba4a589cf4812c0aa84e485c54e5cdf6d39217a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba4a589cf4812c0aa84e485c54e5cdf6d39217a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/767688fc3d4af0fd7efb4b0b6127f7fa2f4707be", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/767688fc3d4af0fd7efb4b0b6127f7fa2f4707be", "html_url": "https://github.com/rust-lang/rust/commit/767688fc3d4af0fd7efb4b0b6127f7fa2f4707be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/767688fc3d4af0fd7efb4b0b6127f7fa2f4707be/comments", "author": {"login": "dmanescu", "id": 5207313, "node_id": "MDQ6VXNlcjUyMDczMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5207313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmanescu", "html_url": "https://github.com/dmanescu", "followers_url": "https://api.github.com/users/dmanescu/followers", "following_url": "https://api.github.com/users/dmanescu/following{/other_user}", "gists_url": "https://api.github.com/users/dmanescu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmanescu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmanescu/subscriptions", "organizations_url": "https://api.github.com/users/dmanescu/orgs", "repos_url": "https://api.github.com/users/dmanescu/repos", "events_url": "https://api.github.com/users/dmanescu/events{/privacy}", "received_events_url": "https://api.github.com/users/dmanescu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dmanescu", "id": 5207313, "node_id": "MDQ6VXNlcjUyMDczMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5207313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmanescu", "html_url": "https://github.com/dmanescu", "followers_url": "https://api.github.com/users/dmanescu/followers", "following_url": "https://api.github.com/users/dmanescu/following{/other_user}", "gists_url": "https://api.github.com/users/dmanescu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmanescu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmanescu/subscriptions", "organizations_url": "https://api.github.com/users/dmanescu/orgs", "repos_url": "https://api.github.com/users/dmanescu/repos", "events_url": "https://api.github.com/users/dmanescu/events{/privacy}", "received_events_url": "https://api.github.com/users/dmanescu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cac9affc20984a8a2d01c2ff3201a56f91b5bc6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cac9affc20984a8a2d01c2ff3201a56f91b5bc6e", "html_url": "https://github.com/rust-lang/rust/commit/cac9affc20984a8a2d01c2ff3201a56f91b5bc6e"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "0868c767e168c545a6e1506b47a77ae59e3d1b9f", "filename": "src/libextra/stats.rs", "status": "modified", "additions": 33, "deletions": 4, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/767688fc3d4af0fd7efb4b0b6127f7fa2f4707be/src%2Flibextra%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/767688fc3d4af0fd7efb4b0b6127f7fa2f4707be/src%2Flibextra%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fstats.rs?ref=767688fc3d4af0fd7efb4b0b6127f7fa2f4707be", "patch": "@@ -291,10 +291,22 @@ pub fn write_boxplot(w: @io::Writer, s: &Summary, width_hint: uint) {\n \n     let (q1,q2,q3) = s.quartiles;\n \n-    let lomag = (10.0_f64).pow(&s.min.log10().floor());\n-    let himag = (10.0_f64).pow(&(s.max.log10().floor()));\n-    let lo = (s.min / lomag).floor() * lomag;\n-    let hi = (s.max / himag).ceil() * himag;\n+    // the .abs() handles the case where numbers are negative\n+    let lomag = (10.0_f64).pow(&(s.min.abs().log10().floor()));\n+    let himag = (10.0_f64).pow(&(s.max.abs().log10().floor()));\n+\n+    // need to consider when the limit is zero\n+    let lo = if lomag == 0.0 {\n+        0.0\n+    } else {\n+        (s.min / lomag).floor() * lomag\n+    };\n+\n+    let hi = if himag == 0.0 {\n+        0.0\n+    } else {\n+        (s.max / himag).ceil() * himag\n+    };\n \n     let range = hi - lo;\n \n@@ -920,4 +932,21 @@ mod tests {\n         };\n         check(val, summ);\n     }\n+\n+    #[test]\n+    fn test_boxplot_nonpositive() {\n+        fn t(s: &Summary, expected: ~str) {\n+            let out = do io::with_str_writer |w|  {\n+                write_boxplot(w, s, 30)\n+            };\n+\n+            assert_eq!(out, expected);\n+        }\n+\n+        t(&Summary::new([-2.0, -1.0]), ~\"-2 |[------******#*****---]| -1\");\n+        t(&Summary::new([0.0, 2.0]), ~\"0 |[-------*****#*******---]| 2\");\n+        t(&Summary::new([-2.0, 0.0]), ~\"-2 |[------******#******---]| 0\");\n+\n+    }\n+\n }"}]}