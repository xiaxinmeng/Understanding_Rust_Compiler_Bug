{"sha": "2942cf5a1f91cbe53fcaf465bb1a40f24828c405", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NDJjZjVhMWY5MWNiZTUzZmNhZjQ2NWJiMWE0MGYyNDgyOGM0MDU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-02-27T01:34:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-27T01:34:32Z"}, "message": "Rollup merge of #82482 - tmiasko:small-cycles, r=varkor\n\nUse small hash set in `mir_inliner_callees`\n\nUse small hash set in `mir_inliner_callees` to avoid temporary\nallocation when possible and quadratic behaviour for large number of\ncallees.", "tree": {"sha": "ec71c1812828420711bcda649a3520220f07f13e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec71c1812828420711bcda649a3520220f07f13e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2942cf5a1f91cbe53fcaf465bb1a40f24828c405", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgOaGpCRBK7hj4Ov3rIwAAdHIIADWd1ItzgdyJS6VT30+V2RAR\nhLGmZ4g6IVQyc+R/t6tSE0AMO2TT2rdwbAO2JO3nZoyRax2cpbyI01xN4iKd+Qc0\no23MxnXX7XwQzLbwJug4OKKMBljq1NK7x9MDA5Jizu+NzlIzTpVlsSJTlyn4EKuQ\nDXcXPUkppOIWPx3wJbpQaJOAgXyv3rvQvafqffj61vS3CkaS1XCThqXJ6Yj4HbuF\nGw9VGrG0ED83SCmVEpbmyVvY5FdFWsfoL8SiSqfPVNy9bxOqlGrx0FcPG6HBbmfh\nwmca/Ybcd87c5K4Yit4QIWecC/G3R1kH+DQHEXApylUq20U4KOH8FgUaKyfNWqM=\n=yq31\n-----END PGP SIGNATURE-----\n", "payload": "tree ec71c1812828420711bcda649a3520220f07f13e\nparent b664e4bdb5dd29a95f170e204ac010b3157ff0dd\nparent ef731b31dbd5f1dccf4a863290c8286b9601e323\nauthor Dylan DPC <dylan.dpc@gmail.com> 1614389672 +0100\ncommitter GitHub <noreply@github.com> 1614389672 +0100\n\nRollup merge of #82482 - tmiasko:small-cycles, r=varkor\n\nUse small hash set in `mir_inliner_callees`\n\nUse small hash set in `mir_inliner_callees` to avoid temporary\nallocation when possible and quadratic behaviour for large number of\ncallees.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2942cf5a1f91cbe53fcaf465bb1a40f24828c405", "html_url": "https://github.com/rust-lang/rust/commit/2942cf5a1f91cbe53fcaf465bb1a40f24828c405", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2942cf5a1f91cbe53fcaf465bb1a40f24828c405/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b664e4bdb5dd29a95f170e204ac010b3157ff0dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/b664e4bdb5dd29a95f170e204ac010b3157ff0dd", "html_url": "https://github.com/rust-lang/rust/commit/b664e4bdb5dd29a95f170e204ac010b3157ff0dd"}, {"sha": "ef731b31dbd5f1dccf4a863290c8286b9601e323", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef731b31dbd5f1dccf4a863290c8286b9601e323", "html_url": "https://github.com/rust-lang/rust/commit/ef731b31dbd5f1dccf4a863290c8286b9601e323"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "295f3ec70dc7837ec008c85f9778d3941cba574d", "filename": "compiler/rustc_mir/src/transform/inline/cycle.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2942cf5a1f91cbe53fcaf465bb1a40f24828c405/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline%2Fcycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2942cf5a1f91cbe53fcaf465bb1a40f24828c405/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline%2Fcycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline%2Fcycle.rs?ref=2942cf5a1f91cbe53fcaf465bb1a40f24828c405", "patch": "@@ -1,4 +1,5 @@\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_data_structures::sso::SsoHashSet;\n use rustc_data_structures::stack::ensure_sufficient_stack;\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_middle::mir::TerminatorKind;\n@@ -140,7 +141,7 @@ crate fn mir_inliner_callees<'tcx>(\n         // Functions from other crates and MIR shims\n         _ => tcx.instance_mir(instance),\n     };\n-    let mut calls = Vec::new();\n+    let mut calls = SsoHashSet::new();\n     for bb_data in body.basic_blocks() {\n         let terminator = bb_data.terminator();\n         if let TerminatorKind::Call { func, .. } = &terminator.kind {\n@@ -149,12 +150,8 @@ crate fn mir_inliner_callees<'tcx>(\n                 ty::FnDef(def_id, substs) => (*def_id, *substs),\n                 _ => continue,\n             };\n-            // We've seen this before\n-            if calls.contains(&call) {\n-                continue;\n-            }\n-            calls.push(call);\n+            calls.insert(call);\n         }\n     }\n-    tcx.arena.alloc_slice(&calls)\n+    tcx.arena.alloc_from_iter(calls.iter().copied())\n }"}]}