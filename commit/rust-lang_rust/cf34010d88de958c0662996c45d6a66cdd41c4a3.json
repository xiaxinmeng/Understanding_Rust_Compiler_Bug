{"sha": "cf34010d88de958c0662996c45d6a66cdd41c4a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMzQwMTBkODhkZTk1OGMwNjYyOTk2YzQ1ZDZhNjZjZGQ0MWM0YTM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-12-04T03:37:30Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-12-04T19:33:42Z"}, "message": "Update RELEASES.md for 1.5", "tree": {"sha": "a68178e9e8a0470863345be64f9efd2797bc10be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a68178e9e8a0470863345be64f9efd2797bc10be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf34010d88de958c0662996c45d6a66cdd41c4a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf34010d88de958c0662996c45d6a66cdd41c4a3", "html_url": "https://github.com/rust-lang/rust/commit/cf34010d88de958c0662996c45d6a66cdd41c4a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf34010d88de958c0662996c45d6a66cdd41c4a3/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5321f2abe7f6fadf8a3993b113ebb8ce9266fe9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5321f2abe7f6fadf8a3993b113ebb8ce9266fe9", "html_url": "https://github.com/rust-lang/rust/commit/d5321f2abe7f6fadf8a3993b113ebb8ce9266fe9"}], "stats": {"total": 220, "additions": 219, "deletions": 1}, "files": [{"sha": "f8679431339daea3c3369d14682508fc8578e23e", "filename": "RELEASES.md", "status": "modified", "additions": 219, "deletions": 1, "changes": 220, "blob_url": "https://github.com/rust-lang/rust/blob/cf34010d88de958c0662996c45d6a66cdd41c4a3/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/cf34010d88de958c0662996c45d6a66cdd41c4a3/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=cf34010d88de958c0662996c45d6a66cdd41c4a3", "patch": "@@ -1,5 +1,223 @@\n+Version 1.5.0 (2015-12-10)\n+==========================\n+\n+* ~700 changes, numerous bugfixes\n+\n+Highlights\n+----------\n+\n+* Stabilized APIs:\n+  [`BinaryHeap::from`], [`BinaryHeap::into_sorted_vec`],\n+  [`BinaryHeap::into_vec`], [`Condvar::wait_timeout`],\n+  [`FileTypeExt::is_block_device`], [`FileTypeExt::is_char_device`],\n+  [`FileTypeExt::is_fifo`], [`FileTypeExt::is_socket`],\n+  [`FileTypeExt`], [`Formatter::alternate`], [`Formatter::fill`],\n+  [`Formatter::precision`], [`Formatter::sign_aware_zero_pad`],\n+  [`Formatter::sign_minus`], [`Formatter::sign_plus`],\n+  [`Formatter::width`], [`Iterator::cmp`], [`Iterator::eq`],\n+  [`Iterator::ge`], [`Iterator::gt`], [`Iterator::le`],\n+  [`Iterator::lt`], [`Iterator::ne`], [`Iterator::partial_cmp`],\n+  [`Path::canonicalize`], [`Path::exists`], [`Path::is_dir`],\n+  [`Path::is_file`], [`Path::metadata`], [`Path::read_dir`],\n+  [`Path::read_link`], [`Path::symlink_metadata`],\n+  [`Utf8Error::valid_up_to`], [`Vec::resize`],\n+  [`VecDeque::as_mut_slices`], [`VecDeque::as_slices`],\n+  [`VecDeque::insert`], [`VecDeque::shrink_to_fit`],\n+  [`VecDeque::swap_remove_back`], [`VecDeque::swap_remove_front`],\n+  [`slice::split_first_mut`], [`slice::split_first`],\n+  [`slice::split_last_mut`], [`slice::split_last`],\n+  [`char::from_u32_unchecked`], [`fs::canonicalize`],\n+  [`str::MatchIndices`], [`str::RMatchIndices`],\n+  [`str::match_indices`], [`str::rmatch_indices`],\n+  [`str::slice_mut_unchecked`], [`string::ParseError`].\n+* Rust applications hosted on crates.io can be installed locally to\n+  `~/.cargo/bin` with the [`cargo install`] command. Among other\n+  things this makes it easier to augment Cargo with new subcommands:\n+  when a binary named e.g. `cargo-foo` is found in `$PATH` it can be\n+  invoked as `cargo foo`.\n+* Crates with wildcard (`*`) dependencies will [emit warnings when\n+  published][1.5w]. In 1.6 it will no longer be possible to publish\n+  crates with wildcard dependencies.\n+\n+Breaking Changes\n+----------------\n+\n+* The rules determining when a particular lifetime must outlive\n+  a particular value (known as '[dropck]') have been [modified\n+  to not rely on parametricity][1.5p].\n+* [Implementations of `AsRef` and `AsMut` were added to `Box`, `Rc`,\n+  and `Arc`][1.5a]. Because these smart pointer types implement\n+  `Deref`, this causes breakage in cases where the interior type\n+  contains methods of the same name.\n+* [Correct a bug in Rc/Arc][1.5c] that caused [dropck] to be unaware\n+  that they could drop their content. Soundness fix.\n+* All method invocations are [properly checked][1.5wf1] for\n+  [well-formedness][1.5wf2]. Soundness fix.\n+* Traits whose supertraits contain `Self` are [not object\n+  safe][1.5o]. Soundness fix.\n+* Target specifications support a [`no_default_libraries`][1.5nd]\n+  setting that controls whether `-nodefaultlibs` is passed to the\n+  linker, and in turn the `is_like_windows` setting no longer affects\n+  the `-nodefaultlibs` flag.\n+* `#[derive(Show)]`, long-deprecated, [has been removed][1.5ds].\n+* The `#[inline]` and `#[repr]` attributes [can only appear\n+  in valid locations][1.5at].\n+* Native libraries linked from the local crate are [passed to\n+  the linker before native libraries from upstream crates][1.5nl].\n+* Two rarely-used attributes, `#[no_debug]` and\n+  `#[omit_gdb_pretty_printer_section]` [are feature gated][1.5fg].\n+* Negation of unsigned integers, which has been a warning for\n+  several releases, [is now behind a feature gate and will\n+  generate errors][1.5nu].\n+* The parser accidentally accepted visibility modifiers on\n+  enum variants, a bug [which has been fixed][1.5ev].\n+* [A bug was fixed that allowed `use` statements to import unstable\n+  features][1.5use].\n+\n+Language\n+--------\n+\n+* When evaluating expressions at compile-time that are not\n+  compile-time constants (const-evaluating expressions in non-const\n+  contexts), incorrect code such as overlong bitshifts and arithmetic\n+  overflow will [generate a warning instead of an error][1.5ce],\n+  delaying the error until runtime. This will allow the\n+  const-evaluator to be expanded in the future backwards-compatibly.\n+* The `improper_ctypes` lint [no longer warns about using `isize` and\n+  `usize` in FFI][1.5ict].\n+\n+Libraries\n+---------\n+\n+* `Arc<T>` and `Rc<T>` are [covariant with respect to `T` instead of\n+  invariant][1.5c].\n+* `Default` is [implemented for mutable slices][1.5d].\n+* `FromStr` is [implemented for `SockAddrV4` and `SockAddrV6`][1.5s].\n+* There are now `From` conversions [between floating point\n+  types][1.5f] where the conversions are lossless.\n+* Thera are now `From` conversions [between integer types][1.5i] where\n+  the conversions are lossless.\n+* [`fs::Metadata` implements `Clone`][1.5fs].\n+* The `parse` method [accepts a leading \"+\" when parsing\n+  integers][1.5pi].\n+* [`AsMut` is implemented for `Vec`][1.5am].\n+* The `clone_from` implementations for `String` and `BinaryHeap` [have\n+  been optimized][1.5cf] and no longer rely on the default impl.\n+* The `extern \"Rust\"`, `extern \"C\"`, `unsafe extern \"Rust\"` and\n+  `unsafe extern \"C\"` function types now [implement `Clone`,\n+  `PartialEq`, `Eq`, `PartialOrd`, `Ord`, `Hash`, `fmt::Pointer`, and\n+  `fmt::Debug` for up to 12 arguments][1.5fp].\n+* [Dropping `Vec`s is much faster in unoptimized builds when the\n+  element types don't implement `Drop`][1.5dv].\n+* A bug that caused in incorrect behavior when [combining `VecDeque`\n+  with zero-sized types][1.5vdz] was resolved.\n+* [`PartialOrd` for slices is faster][1.5po].\n+\n+Miscellaneous\n+-------------\n+\n+* [Crate metadata size was reduced by 20%][1.5md].\n+* [Improvements to code generation reduced the size of libcore by 3.3\n+  MB and rustc's memory usage by 18MB][1.5m].\n+* [Improvements to deref translation increased performance in\n+  unoptimized builds][1.5dr].\n+* Various errors in trait resolution [are deduplicated to only be\n+  reported once][1.5te].\n+* Rust has preliminary [support for rumprun kernels][1.5rr].\n+* Rust has preliminary [support for NetBSD on amd64][1.5na].\n+\n+[1.5use]: https://github.com/rust-lang/rust/pull/28364\n+[1.5po]: https://github.com/rust-lang/rust/pull/28436\n+[1.5ev]: https://github.com/rust-lang/rust/pull/28442\n+[1.5nu]: https://github.com/rust-lang/rust/pull/28468\n+[1.5dr]: https://github.com/rust-lang/rust/pull/28491\n+[1.5vdz]: https://github.com/rust-lang/rust/pull/28494\n+[1.5md]: https://github.com/rust-lang/rust/pull/28521\n+[1.5fg]: https://github.com/rust-lang/rust/pull/28522\n+[1.5dv]: https://github.com/rust-lang/rust/pull/28531\n+[1.5na]: https://github.com/rust-lang/rust/pull/28543\n+[1.5fp]: https://github.com/rust-lang/rust/pull/28560\n+[1.5rr]: https://github.com/rust-lang/rust/pull/28593\n+[1.5cf]: https://github.com/rust-lang/rust/pull/28602\n+[1.5nl]: https://github.com/rust-lang/rust/pull/28605\n+[1.5te]: https://github.com/rust-lang/rust/pull/28645\n+[1.5at]: https://github.com/rust-lang/rust/pull/28650\n+[1.5am]: https://github.com/rust-lang/rust/pull/28663\n+[1.5m]: https://github.com/rust-lang/rust/pull/28778\n+[1.5ict]: https://github.com/rust-lang/rust/pull/28779\n+[1.5a]: https://github.com/rust-lang/rust/pull/28811\n+[1.5pi]: https://github.com/rust-lang/rust/pull/28826\n+[1.5ce]: https://github.com/rust-lang/rfcs/blob/master/text/1229-compile-time-asserts.md\n+[1.5p]: https://github.com/rust-lang/rfcs/blob/master/text/1238-nonparametric-dropck.md\n+[1.5i]: https://github.com/rust-lang/rust/pull/28921\n+[1.5fs]: https://github.com/rust-lang/rust/pull/29021\n+[1.5f]: https://github.com/rust-lang/rust/pull/29129\n+[1.5ds]: https://github.com/rust-lang/rust/pull/29148\n+[1.5s]: https://github.com/rust-lang/rust/pull/29190\n+[1.5d]: https://github.com/rust-lang/rust/pull/29245\n+[1.5o]: https://github.com/rust-lang/rust/pull/29259\n+[1.5nd]: https://github.com/rust-lang/rust/pull/28578\n+[1.5wf2]: https://github.com/rust-lang/rfcs/blob/master/text/1214-projections-lifetimes-and-wf.md\n+[1.5wf1]: https://github.com/rust-lang/rust/pull/28669\n+[dropck]: https://doc.rust-lang.org/nightly/nomicon/dropck.html\n+[1.5c]: https://github.com/rust-lang/rust/pull/29110\n+[1.5w]: https://github.com/rust-lang/rfcs/blob/master/text/1241-no-wildcard-deps.md\n+[`cargo install`]: https://github.com/rust-lang/rfcs/blob/master/text/1200-cargo-install.md\n+[`BinaryHeap::from`]: http://doc.rust-lang.org/nightly/std/convert/trait.From.html#method.from\n+[`BinaryHeap::into_sorted_vec`]: http://doc.rust-lang.org/nightly/std/collections/struct.BinaryHeap.html#method.into_sorted_vec\n+[`BinaryHeap::into_vec`]: http://doc.rust-lang.org/nightly/std/collections/struct.BinaryHeap.html#method.into_vec\n+[`Condvar::wait_timeout`]: http://doc.rust-lang.org/nightly/std/sync/struct.Condvar.html#method.wait_timeout\n+[`FileTypeExt::is_block_device`]: http://doc.rust-lang.org/nightly/std/os/unix/fs/trait.FileTypeExt.html#tymethod.is_block_device\n+[`FileTypeExt::is_char_device`]: http://doc.rust-lang.org/nightly/std/os/unix/fs/trait.FileTypeExt.html#tymethod.is_char_device\n+[`FileTypeExt::is_fifo`]: http://doc.rust-lang.org/nightly/std/os/unix/fs/trait.FileTypeExt.html#tymethod.is_fifo\n+[`FileTypeExt::is_socket`]: http://doc.rust-lang.org/nightly/std/os/unix/fs/trait.FileTypeExt.html#tymethod.is_socket\n+[`FileTypeExt`]: http://doc.rust-lang.org/nightly/std/os/unix/fs/trait.FileTypeExt.html\n+[`Formatter::alternate`]: http://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html#method.alternate\n+[`Formatter::fill`]: http://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html#method.fill\n+[`Formatter::precision`]: http://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html#method.precision\n+[`Formatter::sign_aware_zero_pad`]: http://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html#method.sign_aware_zero_pad\n+[`Formatter::sign_minus`]: http://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html#method.sign_minus\n+[`Formatter::sign_plus`]: http://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html#method.sign_plus\n+[`Formatter::width`]: http://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html#method.width\n+[`Iterator::cmp`]: http://doc.rust-lang.org/nightly/core/iter/trait.Iterator.html#method.cmp\n+[`Iterator::eq`]: http://doc.rust-lang.org/nightly/core/iter/trait.Iterator.html#method.eq\n+[`Iterator::ge`]: http://doc.rust-lang.org/nightly/core/iter/trait.Iterator.html#method.ge\n+[`Iterator::gt`]: http://doc.rust-lang.org/nightly/core/iter/trait.Iterator.html#method.gt\n+[`Iterator::le`]: http://doc.rust-lang.org/nightly/core/iter/trait.Iterator.html#method.le\n+[`Iterator::lt`]: http://doc.rust-lang.org/nightly/core/iter/trait.Iterator.html#method.lt\n+[`Iterator::ne`]: http://doc.rust-lang.org/nightly/core/iter/trait.Iterator.html#method.ne\n+[`Iterator::partial_cmp`]: http://doc.rust-lang.org/nightly/core/iter/trait.Iterator.html#method.partial_cmp\n+[`Path::canonicalize`]: http://doc.rust-lang.org/nightly/std/path/struct.Path.html#method.canonicalize\n+[`Path::exists`]: http://doc.rust-lang.org/nightly/std/path/struct.Path.html#method.exists\n+[`Path::is_dir`]: http://doc.rust-lang.org/nightly/std/path/struct.Path.html#method.is_dir\n+[`Path::is_file`]: http://doc.rust-lang.org/nightly/std/path/struct.Path.html#method.is_file\n+[`Path::metadata`]: http://doc.rust-lang.org/nightly/std/path/struct.Path.html#method.metadata\n+[`Path::read_dir`]: http://doc.rust-lang.org/nightly/std/path/struct.Path.html#method.read_dir\n+[`Path::read_link`]: http://doc.rust-lang.org/nightly/std/path/struct.Path.html#method.read_link\n+[`Path::symlink_metadata`]: http://doc.rust-lang.org/nightly/std/path/struct.Path.html#method.symlink_metadata\n+[`Utf8Error::valid_up_to`]: http://doc.rust-lang.org/nightly/core/str/struct.Utf8Error.html#method.valid_up_to\n+[`Vec::resize`]: http://doc.rust-lang.org/nightly/std/vec/struct.Vec.html#method.resize\n+[`VecDeque::as_mut_slices`]: http://doc.rust-lang.org/nightly/std/collections/struct.VecDeque.html#method.as_mut_slices\n+[`VecDeque::as_slices`]: http://doc.rust-lang.org/nightly/std/collections/struct.VecDeque.html#method.as_slices\n+[`VecDeque::insert`]: http://doc.rust-lang.org/nightly/std/collections/struct.VecDeque.html#method.insert\n+[`VecDeque::shrink_to_fit`]: http://doc.rust-lang.org/nightly/std/collections/struct.VecDeque.html#method.shrink_to_fit\n+[`VecDeque::swap_remove_back`]: http://doc.rust-lang.org/nightly/std/collections/struct.VecDeque.html#method.swap_remove_back\n+[`VecDeque::swap_remove_front`]: http://doc.rust-lang.org/nightly/std/collections/struct.VecDeque.html#method.swap_remove_front\n+[`slice::split_first_mut`]: http://doc.rust-lang.org/nightly/std/primitive.slice.html#method.split_first_mut\n+[`slice::split_first`]: http://doc.rust-lang.org/nightly/std/primitive.slice.html#method.split_first\n+[`slice::split_last_mut`]: http://doc.rust-lang.org/nightly/std/primitive.slice.html#method.split_last_mut\n+[`slice::split_last`]: http://doc.rust-lang.org/nightly/std/primitive.slice.html#method.split_last\n+[`char::from_u32_unchecked`]: http://doc.rust-lang.org/nightly/std/char/fn.from_u32_unchecked.html\n+[`fs::canonicalize`]: http://doc.rust-lang.org/nightly/std/fs/fn.canonicalize.html\n+[`str::MatchIndices`]: http://doc.rust-lang.org/nightly/std/str/struct.MatchIndices.html\n+[`str::RMatchIndices`]: http://doc.rust-lang.org/nightly/std/str/struct.RMatchIndices.html\n+[`str::match_indices`]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.match_indices\n+[`str::rmatch_indices`]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.rmatch_indices\n+[`str::slice_mut_unchecked`]: http://doc.rust-lang.org/nightly/std/primitive.str.html#method.slice_mut_unchecked\n+[`string::ParseError`]: http://doc.rust-lang.org/nightly/std/string/enum.ParseError.html\n+\n Version 1.4.0 (2015-10-29)\n-============================\n+==========================\n \n * ~1200 changes, numerous bugfixes\n "}]}