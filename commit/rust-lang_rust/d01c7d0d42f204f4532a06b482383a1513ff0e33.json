{"sha": "d01c7d0d42f204f4532a06b482383a1513ff0e33", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwMWM3ZDBkNDJmMjA0ZjQ1MzJhMDZiNDgyMzgzYTE1MTNmZjBlMzM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-05-30T17:03:11Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-05-31T01:45:14Z"}, "message": "Fix a bug with HashMap::consume", "tree": {"sha": "6498492392095853bd3211aa26a00574e300a80b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6498492392095853bd3211aa26a00574e300a80b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d01c7d0d42f204f4532a06b482383a1513ff0e33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d01c7d0d42f204f4532a06b482383a1513ff0e33", "html_url": "https://github.com/rust-lang/rust/commit/d01c7d0d42f204f4532a06b482383a1513ff0e33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d01c7d0d42f204f4532a06b482383a1513ff0e33/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aed53f9bf0eed5526891d3998d2a570840e453f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/aed53f9bf0eed5526891d3998d2a570840e453f7", "html_url": "https://github.com/rust-lang/rust/commit/aed53f9bf0eed5526891d3998d2a570840e453f7"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "4826af20c69a1f6c9fccc59ccc7c7b936041f7f6", "filename": "src/libstd/hashmap.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d01c7d0d42f204f4532a06b482383a1513ff0e33/src%2Flibstd%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d01c7d0d42f204f4532a06b482383a1513ff0e33/src%2Flibstd%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fhashmap.rs?ref=d01c7d0d42f204f4532a06b482383a1513ff0e33", "patch": "@@ -72,11 +72,12 @@ pub fn linear_map_with_capacity<K:Eq + Hash,V>(\n fn linear_map_with_capacity_and_keys<K:Eq + Hash,V>(\n     k0: u64, k1: u64,\n     initial_capacity: uint) -> HashMap<K, V> {\n+    let cap = uint::max(INITIAL_CAPACITY, initial_capacity);\n     HashMap {\n         k0: k0, k1: k1,\n-        resize_at: resize_at(initial_capacity),\n+        resize_at: resize_at(cap),\n         size: 0,\n-        buckets: vec::from_fn(initial_capacity, |_| None)\n+        buckets: vec::from_fn(cap, |_| None)\n     }\n }\n \n@@ -480,7 +481,8 @@ pub impl<K: Hash + Eq, V> HashMap<K, V> {\n     }\n \n     fn consume(&mut self, f: &fn(K, V)) {\n-        let buckets = replace(&mut self.buckets, ~[]);\n+        let buckets = replace(&mut self.buckets,\n+                              vec::from_fn(INITIAL_CAPACITY, |_| None));\n         self.size = 0;\n \n         do vec::consume(buckets) |_, bucket| {\n@@ -664,6 +666,12 @@ mod test_map {\n     use super::*;\n     use uint;\n \n+    #[test]\n+    fn test_create_capacity_zero() {\n+        let mut m = HashMap::with_capacity(0);\n+        assert!(m.insert(1, 1));\n+    }\n+\n     #[test]\n     fn test_insert() {\n         let mut m = HashMap::new();\n@@ -771,6 +779,14 @@ mod test_map {\n         assert_eq!(m2.get(&2), &3);\n     }\n \n+    #[test]\n+    fn test_consume_still_usable() {\n+        let mut m = HashMap::new();\n+        assert!(m.insert(1, 2));\n+        do m.consume |_, _| {}\n+        assert!(m.insert(1, 2));\n+    }\n+\n     #[test]\n     fn test_iterate() {\n         let mut m = linear_map_with_capacity(4);"}]}