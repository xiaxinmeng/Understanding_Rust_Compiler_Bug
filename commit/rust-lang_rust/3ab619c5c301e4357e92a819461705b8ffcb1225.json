{"sha": "3ab619c5c301e4357e92a819461705b8ffcb1225", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhYjYxOWM1YzMwMWU0MzU3ZTkyYTgxOTQ2MTcwNWI4ZmZjYjEyMjU=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-15T22:09:08Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-15T22:09:08Z"}, "message": "Update for changes in rustc master.", "tree": {"sha": "89ec48af09280266a6bd901a8f7c716d9ba9a5d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89ec48af09280266a6bd901a8f7c716d9ba9a5d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ab619c5c301e4357e92a819461705b8ffcb1225", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ab619c5c301e4357e92a819461705b8ffcb1225", "html_url": "https://github.com/rust-lang/rust/commit/3ab619c5c301e4357e92a819461705b8ffcb1225", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ab619c5c301e4357e92a819461705b8ffcb1225/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c18e7a68fbfc28f7e4bbd0fbb715e216e17273dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/c18e7a68fbfc28f7e4bbd0fbb715e216e17273dc", "html_url": "https://github.com/rust-lang/rust/commit/c18e7a68fbfc28f7e4bbd0fbb715e216e17273dc"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "7877fbaa4842be9242d5eb5b3225b2c18cc25e88", "filename": "src/interpreter.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3ab619c5c301e4357e92a819461705b8ffcb1225/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ab619c5c301e4357e92a819461705b8ffcb1225/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=3ab619c5c301e4357e92a819461705b8ffcb1225", "patch": "@@ -443,16 +443,10 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n         use rustc::middle::const_eval::ConstVal::*;\n         match *const_val {\n             Float(_f) => unimplemented!(),\n-            Int(n) => {\n+            Integral(int) => {\n                 // TODO(tsion): Check int constant type.\n                 let ptr = self.memory.allocate(8);\n-                try!(self.memory.write_i64(ptr, n));\n-                Ok(ptr)\n-            }\n-            Uint(n) => {\n-                // TODO(tsion): Check int constant type.\n-                let ptr = self.memory.allocate(8);\n-                try!(self.memory.write_u64(ptr, n));\n+                try!(self.memory.write_u64(ptr, int.to_u64_unchecked()));\n                 Ok(ptr)\n             }\n             Str(ref _s) => unimplemented!(),\n@@ -462,11 +456,13 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n                 try!(self.memory.write_bool(ptr, b));\n                 Ok(ptr)\n             }\n+            Char(_c)          => unimplemented!(),\n             Struct(_node_id)  => unimplemented!(),\n             Tuple(_node_id)   => unimplemented!(),\n             Function(_def_id) => unimplemented!(),\n             Array(_, _)       => unimplemented!(),\n             Repeat(_, _)      => unimplemented!(),\n+            Dummy             => unimplemented!(),\n         }\n     }\n "}]}