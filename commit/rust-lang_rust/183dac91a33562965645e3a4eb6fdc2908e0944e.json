{"sha": "183dac91a33562965645e3a4eb6fdc2908e0944e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4M2RhYzkxYTMzNTYyOTY1NjQ1ZTNhNGViNmZkYzI5MDhlMDk0NGU=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-02T03:36:17Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-02T03:36:17Z"}, "message": "Fix a bug where struct lits nested in fn calls were over-indented", "tree": {"sha": "8a7251ead0f6a874ba70f6e760f66323a6c36965", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a7251ead0f6a874ba70f6e760f66323a6c36965"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/183dac91a33562965645e3a4eb6fdc2908e0944e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/183dac91a33562965645e3a4eb6fdc2908e0944e", "html_url": "https://github.com/rust-lang/rust/commit/183dac91a33562965645e3a4eb6fdc2908e0944e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/183dac91a33562965645e3a4eb6fdc2908e0944e/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce4d5aa39cf3a334a1281c613c9b56afec885030", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce4d5aa39cf3a334a1281c613c9b56afec885030", "html_url": "https://github.com/rust-lang/rust/commit/ce4d5aa39cf3a334a1281c613c9b56afec885030"}], "stats": {"total": 40, "additions": 28, "deletions": 12}, "files": [{"sha": "e11c6e470f6f0a3af0abdb178cd7844924553da0", "filename": "src/expr.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/183dac91a33562965645e3a4eb6fdc2908e0944e/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/183dac91a33562965645e3a4eb6fdc2908e0944e/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=183dac91a33562965645e3a4eb6fdc2908e0944e", "patch": "@@ -203,7 +203,7 @@ fn rewrite_closure(capture: ast::CaptureClause,\n \n     let fmt = ListFormatting::for_fn(argument_budget, argument_offset);\n     let prefix = format!(\"{}|{}|\", mover, write_list(&arg_items.collect::<Vec<_>>(), &fmt));\n-    let block_indent = closure_block_indent(context, offset);\n+    let closure_indent = closure_indent(context, offset);\n \n     // Try to format closure body as a single line expression without braces.\n     if body.stmts.is_empty() {\n@@ -232,11 +232,11 @@ fn rewrite_closure(capture: ast::CaptureClause,\n \n     // We couldn't format the closure body as a single line expression; fall\n     // back to block formatting.\n-    let inner_context = &RewriteContext { block_indent: block_indent, ..*context };\n+    let inner_context = context.overflow_context(closure_indent - context.block_indent);\n     let body_rewrite = if let ast::Expr_::ExprBlock(ref inner) = body.expr.as_ref().unwrap().node {\n-        inner.rewrite(inner_context, 0, 0)\n+        inner.rewrite(&inner_context, 0, 0)\n     } else {\n-        body.rewrite(inner_context, 0, 0)\n+        body.rewrite(&inner_context, 0, 0)\n     };\n \n     Some(format!(\"{} {}\", prefix, try_opt!(body_rewrite)))\n@@ -868,8 +868,8 @@ fn rewrite_call(context: &RewriteContext,\n     // 2 is for parens.\n     let remaining_width = try_opt!(width.checked_sub(extra_offset + 2));\n     let offset = offset + extra_offset + 1;\n-    let block_indent = expr_block_indent(context, offset);\n-    let inner_context = &RewriteContext { block_indent: block_indent, ..*context };\n+    let inner_indent = expr_indent(context, offset);\n+    let inner_context = context.overflow_context(inner_indent - context.block_indent);\n \n     let items = itemize_list(context.codemap,\n                              args.iter(),\n@@ -878,7 +878,7 @@ fn rewrite_call(context: &RewriteContext,\n                              |item| item.span.hi,\n                              // Take old span when rewrite fails.\n                              |item| {\n-                                 item.rewrite(inner_context, remaining_width, offset)\n+                                 item.rewrite(&inner_context, remaining_width, offset)\n                                      .unwrap_or(context.snippet(item.span))\n                              },\n                              callee.span.hi + BytePos(1),\n@@ -901,8 +901,8 @@ macro_rules! block_indent_helper {\n     );\n }\n \n-block_indent_helper!(expr_block_indent, expr_indent_style);\n-block_indent_helper!(closure_block_indent, closure_indent_style);\n+block_indent_helper!(expr_indent, expr_indent_style);\n+block_indent_helper!(closure_indent, closure_indent_style);\n \n fn rewrite_paren(context: &RewriteContext,\n                  subexpr: &ast::Expr,\n@@ -1192,7 +1192,9 @@ pub fn rewrite_assign_rhs<S: Into<String>>(context: &RewriteContext,\n             result.push_str(&format!(\"\\n{}\", make_indent(new_offset)));\n \n             let max_width = try_opt!(context.config.max_width.checked_sub(new_offset + 1));\n-            let rhs = try_opt!(ex.rewrite(&context.overflow_context(), max_width, new_offset));\n+            let rhs = try_opt!(ex.rewrite(&context.overflow_context(context.config.tab_spaces),\n+                                          max_width,\n+                                          new_offset));\n \n             result.push_str(&rhs);\n         }"}, {"sha": "49c09ac53d1d81df2f670ebbb8a195d617a03115", "filename": "src/rewrite.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/183dac91a33562965645e3a4eb6fdc2908e0944e/src%2Frewrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/183dac91a33562965645e3a4eb6fdc2908e0944e/src%2Frewrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frewrite.rs?ref=183dac91a33562965645e3a4eb6fdc2908e0944e", "patch": "@@ -48,12 +48,12 @@ impl<'a> RewriteContext<'a> {\n         }\n     }\n \n-    pub fn overflow_context(&self) -> RewriteContext<'a> {\n+    pub fn overflow_context(&self, overflow: usize) -> RewriteContext<'a> {\n         RewriteContext {\n             codemap: self.codemap,\n             config: self.config,\n             block_indent: self.block_indent,\n-            overflow_indent: self.overflow_indent + self.config.tab_spaces,\n+            overflow_indent: overflow,\n         }\n     }\n "}, {"sha": "8894508fd986a1fb87da1288971f173eff8408aa", "filename": "tests/source/struct_lits.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/183dac91a33562965645e3a4eb6fdc2908e0944e/tests%2Fsource%2Fstruct_lits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/183dac91a33562965645e3a4eb6fdc2908e0944e/tests%2Fsource%2Fstruct_lits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fstruct_lits.rs?ref=183dac91a33562965645e3a4eb6fdc2908e0944e", "patch": "@@ -32,6 +32,13 @@ fn main() {\n         second: Item\n     };\n \n+    Some(Data::MethodCallData(MethodCallData {\n+        span: sub_span.unwrap(),\n+        scope: self.enclosing_scope(id),\n+        ref_id: def_id,\n+        decl_id: Some(decl_id),\n+    }));\n+\n     Diagram { /*                 o        This graph demonstrates how                  \n                *                / \\       significant whitespace is           \n                *               o   o      preserved.  "}, {"sha": "81c60381ed831a0efbbe036589662eccaba837f4", "filename": "tests/target/struct_lits.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/183dac91a33562965645e3a4eb6fdc2908e0944e/tests%2Ftarget%2Fstruct_lits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/183dac91a33562965645e3a4eb6fdc2908e0944e/tests%2Ftarget%2Fstruct_lits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstruct_lits.rs?ref=183dac91a33562965645e3a4eb6fdc2908e0944e", "patch": "@@ -46,6 +46,13 @@ fn main() {\n         second: Item,\n     };\n \n+    Some(Data::MethodCallData(MethodCallData {\n+        span: sub_span.unwrap(),\n+        scope: self.enclosing_scope(id),\n+        ref_id: def_id,\n+        decl_id: Some(decl_id),\n+    }));\n+\n     Diagram {\n         //                 o        This graph demonstrates how\n         //                / \\       significant whitespace is"}]}