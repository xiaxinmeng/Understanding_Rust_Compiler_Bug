{"sha": "ebb26db68b0456c424556c02dda1fa528f2ef4a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViYjI2ZGI2OGIwNDU2YzQyNDU1NmMwMmRkYTFmYTUyOGYyZWY0YTQ=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-05-14T20:59:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-14T20:59:03Z"}, "message": "Merge pull request #1551 from topecongiro/else-if-early-line-break\n\nForbid early line breaks inside else if", "tree": {"sha": "cf66370cb46fd163d28e3be6dc44564c9d984b33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf66370cb46fd163d28e3be6dc44564c9d984b33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebb26db68b0456c424556c02dda1fa528f2ef4a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebb26db68b0456c424556c02dda1fa528f2ef4a4", "html_url": "https://github.com/rust-lang/rust/commit/ebb26db68b0456c424556c02dda1fa528f2ef4a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebb26db68b0456c424556c02dda1fa528f2ef4a4/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ebd5775d7db4482b2c10372bfc9382b100ea468", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ebd5775d7db4482b2c10372bfc9382b100ea468", "html_url": "https://github.com/rust-lang/rust/commit/0ebd5775d7db4482b2c10372bfc9382b100ea468"}, {"sha": "5383b6cc17210d0c2038e05d5f03a6abe13b38ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/5383b6cc17210d0c2038e05d5f03a6abe13b38ea", "html_url": "https://github.com/rust-lang/rust/commit/5383b6cc17210d0c2038e05d5f03a6abe13b38ea"}], "stats": {"total": 57, "additions": 25, "deletions": 32}, "files": [{"sha": "17b1700accddd8c6e96530247a11ad09e4cffbf6", "filename": "src/comment.rs", "status": "modified", "additions": 24, "deletions": 26, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/ebb26db68b0456c424556c02dda1fa528f2ef4a4/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebb26db68b0456c424556c02dda1fa528f2ef4a4/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=ebb26db68b0456c424556c02dda1fa528f2ef4a4", "patch": "@@ -52,37 +52,35 @@ pub fn rewrite_comment(orig: &str,\n         return light_rewrite_comment(orig, shape.indent, config);\n     }\n \n-    let (opener, closer, line_start) =\n-        if block_style {\n+    let (opener, closer, line_start) = if block_style {\n+        (\"/* \", \" */\", \" * \")\n+    } else if !config.normalize_comments {\n+        if orig.starts_with(\"/**\") && !orig.starts_with(\"/**/\") {\n+            (\"/** \", \" **/\", \" ** \")\n+        } else if orig.starts_with(\"/*!\") {\n+            (\"/*! \", \" */\", \" * \")\n+        } else if orig.starts_with(\"/*\") {\n             (\"/* \", \" */\", \" * \")\n-        } else if !config.normalize_comments {\n-            if orig.starts_with(\"/**\") && !orig.starts_with(\"/**/\") {\n-                (\"/** \", \" **/\", \" ** \")\n-            } else if orig.starts_with(\"/*!\") {\n-                (\"/*! \", \" */\", \" * \")\n-            } else if orig.starts_with(\"/*\") {\n-                (\"/* \", \" */\", \" * \")\n-            } else if orig.starts_with(\"///\") {\n-                (\"/// \", \"\", \"/// \")\n-            } else if orig.starts_with(\"//!\") {\n-                (\"//! \", \"\", \"//! \")\n-            } else {\n-                (\"// \", \"\", \"// \")\n-            }\n-        } else if orig.starts_with(\"///\") ||\n-                  (orig.starts_with(\"/**\") && !orig.starts_with(\"/**/\")) {\n+        } else if orig.starts_with(\"///\") {\n             (\"/// \", \"\", \"/// \")\n-        } else if orig.starts_with(\"//!\") || orig.starts_with(\"/*!\") {\n+        } else if orig.starts_with(\"//!\") {\n             (\"//! \", \"\", \"//! \")\n-        } else if is_custom_comment(orig) {\n-            if orig.chars().nth(3) == Some(' ') {\n-                (&orig[0..4], \"\", &orig[0..4])\n-            } else {\n-                (&orig[0..3], \"\", &orig[0..3])\n-            }\n         } else {\n             (\"// \", \"\", \"// \")\n-        };\n+        }\n+    } else if orig.starts_with(\"///\") || (orig.starts_with(\"/**\") && !orig.starts_with(\"/**/\")) {\n+        (\"/// \", \"\", \"/// \")\n+    } else if orig.starts_with(\"//!\") || orig.starts_with(\"/*!\") {\n+        (\"//! \", \"\", \"//! \")\n+    } else if is_custom_comment(orig) {\n+        if orig.chars().nth(3) == Some(' ') {\n+            (&orig[0..4], \"\", &orig[0..4])\n+        } else {\n+            (&orig[0..3], \"\", &orig[0..3])\n+        }\n+    } else {\n+        (\"// \", \"\", \"// \")\n+    };\n \n     let max_chars = shape\n         .width"}, {"sha": "585073c8f0cd8a59f16e4b6f701dc3113316eff7", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ebb26db68b0456c424556c02dda1fa528f2ef4a4/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebb26db68b0456c424556c02dda1fa528f2ef4a4/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=ebb26db68b0456c424556c02dda1fa528f2ef4a4", "patch": "@@ -987,12 +987,7 @@ impl<'a> Rewrite for ControlFlow<'a> {\n                                  block_str);\n \n         if let Some(else_block) = self.else_block {\n-            // Since this is an else block, we should not indent for the assignment preceding\n-            // the original if, so set shape.offset to shape.indent.alignment.\n-            let shape = Shape {\n-                offset: shape.indent.alignment,\n-                ..shape\n-            };\n+            let shape = Shape::indented(shape.indent, context.config);\n             let mut last_in_chain = false;\n             let rewrite = match else_block.node {\n                 // If the else expression is another if-else expression, prevent it"}]}