{"sha": "d47ec57a4faf627a10058e31abecf5786bd799b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0N2VjNTdhNGZhZjYyN2ExMDA1OGUzMWFiZWNmNTc4NmJkNzk5YjM=", "commit": {"author": {"name": "Daan de Graaf", "email": "daandegraaf9@gmail.com", "date": "2018-12-28T14:19:23Z"}, "committer": {"name": "Saleem Jaffer", "email": "ssaleem1992@gmail.com", "date": "2019-05-04T09:47:26Z"}, "message": "Add param_env parameter to pointee_info_at.\n\nAn associated type ParamEnv has been added to TyLayoutMethods to\nfacilitate this.", "tree": {"sha": "9af74c194992f87af7bdcddd2b586e07656fdb86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9af74c194992f87af7bdcddd2b586e07656fdb86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d47ec57a4faf627a10058e31abecf5786bd799b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d47ec57a4faf627a10058e31abecf5786bd799b3", "html_url": "https://github.com/rust-lang/rust/commit/d47ec57a4faf627a10058e31abecf5786bd799b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d47ec57a4faf627a10058e31abecf5786bd799b3/comments", "author": {"login": "wildarch", "id": 8987615, "node_id": "MDQ6VXNlcjg5ODc2MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8987615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wildarch", "html_url": "https://github.com/wildarch", "followers_url": "https://api.github.com/users/wildarch/followers", "following_url": "https://api.github.com/users/wildarch/following{/other_user}", "gists_url": "https://api.github.com/users/wildarch/gists{/gist_id}", "starred_url": "https://api.github.com/users/wildarch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wildarch/subscriptions", "organizations_url": "https://api.github.com/users/wildarch/orgs", "repos_url": "https://api.github.com/users/wildarch/repos", "events_url": "https://api.github.com/users/wildarch/events{/privacy}", "received_events_url": "https://api.github.com/users/wildarch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saleemjaffer", "id": 19221716, "node_id": "MDQ6VXNlcjE5MjIxNzE2", "avatar_url": "https://avatars.githubusercontent.com/u/19221716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saleemjaffer", "html_url": "https://github.com/saleemjaffer", "followers_url": "https://api.github.com/users/saleemjaffer/followers", "following_url": "https://api.github.com/users/saleemjaffer/following{/other_user}", "gists_url": "https://api.github.com/users/saleemjaffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/saleemjaffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saleemjaffer/subscriptions", "organizations_url": "https://api.github.com/users/saleemjaffer/orgs", "repos_url": "https://api.github.com/users/saleemjaffer/repos", "events_url": "https://api.github.com/users/saleemjaffer/events{/privacy}", "received_events_url": "https://api.github.com/users/saleemjaffer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1f9343c3df715392e1c0d28c8b2982d8dd6cf96", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1f9343c3df715392e1c0d28c8b2982d8dd6cf96", "html_url": "https://github.com/rust-lang/rust/commit/f1f9343c3df715392e1c0d28c8b2982d8dd6cf96"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "0473d3d02f8beed18e821bc49cc269e1c6e4d64a", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d47ec57a4faf627a10058e31abecf5786bd799b3/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d47ec57a4faf627a10058e31abecf5786bd799b3/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=d47ec57a4faf627a10058e31abecf5786bd799b3", "patch": "@@ -1666,6 +1666,8 @@ impl<'a, 'tcx, C> TyLayoutMethods<'tcx, C> for Ty<'tcx>\n     where C: LayoutOf<Ty = Ty<'tcx>> + HasTyCtxt<'tcx>,\n           C::TyLayout: MaybeResult<TyLayout<'tcx>>\n {\n+    type ParamEnv = ty::ParamEnv<'tcx>;\n+\n     fn for_variant(this: TyLayout<'tcx>, cx: &C, variant_index: VariantIdx) -> TyLayout<'tcx> {\n         let details = match this.variants {\n             Variants::Single { index } if index == variant_index => this.details,\n@@ -1837,6 +1839,7 @@ impl<'a, 'tcx, C> TyLayoutMethods<'tcx, C> for Ty<'tcx>\n         this: TyLayout<'tcx>,\n         cx: &C,\n         offset: Size,\n+        param_env: Self::ParamEnv,\n     ) -> Option<PointeeInfo> {\n         match this.ty.sty {\n             ty::RawPtr(mt) if offset.bytes() == 0 => {\n@@ -1850,7 +1853,7 @@ impl<'a, 'tcx, C> TyLayoutMethods<'tcx, C> for Ty<'tcx>\n \n             ty::Ref(_, ty, mt) if offset.bytes() == 0 => {\n                 let tcx = cx.tcx();\n-                let is_freeze = ty.is_freeze(tcx, ty::ParamEnv::reveal_all(), DUMMY_SP);\n+                let is_freeze = ty.is_freeze(tcx, param_env, DUMMY_SP);\n                 let kind = match mt {\n                     hir::MutImmutable => if is_freeze {\n                         PointerKind::Frozen\n@@ -1929,7 +1932,7 @@ impl<'a, 'tcx, C> TyLayoutMethods<'tcx, C> for Ty<'tcx>\n                                 .and_then(|field| {\n                                     if ptr_end <= field_start + field.size {\n                                         // We found the right field, look inside it.\n-                                        Self::pointee_info_at(field, cx, offset - field_start)\n+                                        Self::pointee_info_at(field, cx, offset - field_start, param_env)\n                                     } else {\n                                         None\n                                     }"}, {"sha": "fd15fdf21764d315b5a3b42926df6eb3257ad979", "filename": "src/librustc_codegen_llvm/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d47ec57a4faf627a10058e31abecf5786bd799b3/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d47ec57a4faf627a10058e31abecf5786bd799b3/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_of.rs?ref=d47ec57a4faf627a10058e31abecf5786bd799b3", "patch": "@@ -386,7 +386,7 @@ impl<'tcx> LayoutLlvmExt<'tcx> for TyLayout<'tcx> {\n             return pointee;\n         }\n \n-        let result = Ty::pointee_info_at(*self, cx, offset);\n+        let result = Ty::pointee_info_at(*self, cx, offset, ty::ParamEnv::reveal_all());\n \n         cx.pointee_infos.borrow_mut().insert((self.ty, offset), result);\n         result"}, {"sha": "1cdef7b00642181837867feaca6e2eb2d88a7f4d", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d47ec57a4faf627a10058e31abecf5786bd799b3/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d47ec57a4faf627a10058e31abecf5786bd799b3/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=d47ec57a4faf627a10058e31abecf5786bd799b3", "patch": "@@ -933,6 +933,8 @@ pub struct PointeeInfo {\n }\n \n pub trait TyLayoutMethods<'a, C: LayoutOf<Ty = Self>>: Sized {\n+    type ParamEnv;\n+\n     fn for_variant(\n         this: TyLayout<'a, Self>,\n         cx: &C,\n@@ -942,7 +944,8 @@ pub trait TyLayoutMethods<'a, C: LayoutOf<Ty = Self>>: Sized {\n     fn pointee_info_at(\n         this: TyLayout<'a, Self>,\n         cx: &C,\n-        offset: Size\n+        offset: Size,\n+        param_env: Self::ParamEnv,\n     ) -> Option<PointeeInfo>;\n }\n "}]}