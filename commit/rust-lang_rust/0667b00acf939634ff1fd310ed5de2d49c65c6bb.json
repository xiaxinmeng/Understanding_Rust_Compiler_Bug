{"sha": "0667b00acf939634ff1fd310ed5de2d49c65c6bb", "node_id": "C_kwDOAAsO6NoAKDA2NjdiMDBhY2Y5Mzk2MzRmZjFmZDMxMGVkNWRlMmQ0OWM2NWM2YmI", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-06-08T19:03:52Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-06-08T19:03:52Z"}, "message": "update tests + add future compat test", "tree": {"sha": "85d90b19dadaa98357fcaedcf40127d5bf8577a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85d90b19dadaa98357fcaedcf40127d5bf8577a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0667b00acf939634ff1fd310ed5de2d49c65c6bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0667b00acf939634ff1fd310ed5de2d49c65c6bb", "html_url": "https://github.com/rust-lang/rust/commit/0667b00acf939634ff1fd310ed5de2d49c65c6bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0667b00acf939634ff1fd310ed5de2d49c65c6bb/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7b6e1de661419a67a59ad59fba70a451c27cbb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7b6e1de661419a67a59ad59fba70a451c27cbb6", "html_url": "https://github.com/rust-lang/rust/commit/c7b6e1de661419a67a59ad59fba70a451c27cbb6"}], "stats": {"total": 54, "additions": 35, "deletions": 19}, "files": [{"sha": "8700a88a36ea02908a83ba71ca1067df3ed4b806", "filename": "src/test/ui/lub-glb/empty-binder-future-compat.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0667b00acf939634ff1fd310ed5de2d49c65c6bb/src%2Ftest%2Fui%2Flub-glb%2Fempty-binder-future-compat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0667b00acf939634ff1fd310ed5de2d49c65c6bb/src%2Ftest%2Fui%2Flub-glb%2Fempty-binder-future-compat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flub-glb%2Fempty-binder-future-compat.rs?ref=0667b00acf939634ff1fd310ed5de2d49c65c6bb", "patch": "@@ -0,0 +1,22 @@\n+// check-pass\n+fn lt_in_fn_fn<'a: 'a>() -> fn(fn(&'a ())) {\n+    |_| ()\n+}\n+\n+\n+fn foo<'a, 'b, 'lower>(v: bool)\n+where\n+    'a: 'lower,\n+    'b: 'lower,\n+{\n+        // if we infer `x` to be higher ranked in the future,\n+        // this would cause a type error.\n+        let x = match v {\n+            true => lt_in_fn_fn::<'a>(),\n+            false => lt_in_fn_fn::<'b>(),\n+        };\n+\n+        let _: fn(fn(&'lower())) = x;\n+}\n+\n+fn main() {}"}, {"sha": "557480173ee62478a1c64d6c71a4bca54c5ea8c7", "filename": "src/test/ui/lub-glb/empty-binders-err.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0667b00acf939634ff1fd310ed5de2d49c65c6bb/src%2Ftest%2Fui%2Flub-glb%2Fempty-binders-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0667b00acf939634ff1fd310ed5de2d49c65c6bb/src%2Ftest%2Fui%2Flub-glb%2Fempty-binders-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flub-glb%2Fempty-binders-err.rs?ref=0667b00acf939634ff1fd310ed5de2d49c65c6bb", "patch": "@@ -11,12 +11,10 @@ fn lt_in_contra<'a: 'a>() -> Contra<'a> {\n     Contra(|_| ())\n }\n \n-fn covariance<'a, 'b, 'upper, 'lower>(v: bool)\n+fn covariance<'a, 'b, 'upper>(v: bool)\n where\n     'upper: 'a,\n     'upper: 'b,\n-    'a: 'lower,\n-    'b: 'lower,\n \n {\n     let _: &'upper () = match v {\n@@ -27,10 +25,8 @@ where\n     };\n }\n \n-fn contra_fn<'a, 'b, 'upper, 'lower>(v: bool)\n+fn contra_fn<'a, 'b, 'lower>(v: bool)\n where\n-    'upper: 'a,\n-    'upper: 'b,\n     'a: 'lower,\n     'b: 'lower,\n \n@@ -43,10 +39,8 @@ where\n     };\n }\n \n-fn contra_struct<'a, 'b, 'upper, 'lower>(v: bool)\n+fn contra_struct<'a, 'b, 'lower>(v: bool)\n where\n-    'upper: 'a,\n-    'upper: 'b,\n     'a: 'lower,\n     'b: 'lower,\n "}, {"sha": "f86f22d5e40bf87a49b1c7b7bc0d6aef6dc74ffd", "filename": "src/test/ui/lub-glb/empty-binders-err.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0667b00acf939634ff1fd310ed5de2d49c65c6bb/src%2Ftest%2Fui%2Flub-glb%2Fempty-binders-err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0667b00acf939634ff1fd310ed5de2d49c65c6bb/src%2Ftest%2Fui%2Flub-glb%2Fempty-binders-err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flub-glb%2Fempty-binders-err.stderr?ref=0667b00acf939634ff1fd310ed5de2d49c65c6bb", "patch": "@@ -1,7 +1,7 @@\n error: lifetime may not live long enough\n-  --> $DIR/empty-binders-err.rs:22:12\n+  --> $DIR/empty-binders-err.rs:20:12\n    |\n-LL | fn covariance<'a, 'b, 'upper, 'lower>(v: bool)\n+LL | fn covariance<'a, 'b, 'upper>(v: bool)\n    |               --      ------ lifetime `'upper` defined here\n    |               |\n    |               lifetime `'a` defined here\n@@ -12,9 +12,9 @@ LL |     let _: &'upper () = match v {\n    = help: consider adding the following bound: `'a: 'upper`\n \n error: lifetime may not live long enough\n-  --> $DIR/empty-binders-err.rs:22:12\n+  --> $DIR/empty-binders-err.rs:20:12\n    |\n-LL | fn covariance<'a, 'b, 'upper, 'lower>(v: bool)\n+LL | fn covariance<'a, 'b, 'upper>(v: bool)\n    |                   --  ------ lifetime `'upper` defined here\n    |                   |\n    |                   lifetime `'b` defined here\n@@ -30,10 +30,10 @@ help: the following changes may resolve your lifetime errors\n    = help: add bound `'b: 'upper`\n \n error: lifetime may not live long enough\n-  --> $DIR/empty-binders-err.rs:39:12\n+  --> $DIR/empty-binders-err.rs:35:12\n    |\n-LL | fn contra_fn<'a, 'b, 'upper, 'lower>(v: bool)\n-   |              --              ------ lifetime `'lower` defined here\n+LL | fn contra_fn<'a, 'b, 'lower>(v: bool)\n+   |              --      ------ lifetime `'lower` defined here\n    |              |\n    |              lifetime `'a` defined here\n ...\n@@ -43,10 +43,10 @@ LL |     let _: fn(&'lower ()) = match v {\n    = help: consider adding the following bound: `'lower: 'a`\n \n error: lifetime may not live long enough\n-  --> $DIR/empty-binders-err.rs:54:12\n+  --> $DIR/empty-binders-err.rs:48:12\n    |\n-LL | fn contra_struct<'a, 'b, 'upper, 'lower>(v: bool)\n-   |                  --              ------ lifetime `'lower` defined here\n+LL | fn contra_struct<'a, 'b, 'lower>(v: bool)\n+   |                  --      ------ lifetime `'lower` defined here\n    |                  |\n    |                  lifetime `'a` defined here\n ..."}]}