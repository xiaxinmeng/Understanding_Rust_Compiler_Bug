{"sha": "39a000714a14fb907b7a34573684191804d28277", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5YTAwMDcxNGExNGZiOTA3YjdhMzQ1NzM2ODQxOTE4MDRkMjgyNzc=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-05-13T07:39:41Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-05-13T09:34:51Z"}, "message": "Add visit_arm and visit_method to walk.rs\n\nThe resolver needs to update its state for individual arms and\nmethods.", "tree": {"sha": "b2d5318bfcc27e01e783b6efaa2a3b7993161c0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2d5318bfcc27e01e783b6efaa2a3b7993161c0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39a000714a14fb907b7a34573684191804d28277", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39a000714a14fb907b7a34573684191804d28277", "html_url": "https://github.com/rust-lang/rust/commit/39a000714a14fb907b7a34573684191804d28277", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39a000714a14fb907b7a34573684191804d28277/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2896a866d6fdcc6dc09d6b6d8ca986e092dbc1c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2896a866d6fdcc6dc09d6b6d8ca986e092dbc1c2", "html_url": "https://github.com/rust-lang/rust/commit/2896a866d6fdcc6dc09d6b6d8ca986e092dbc1c2"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "43695b325969fc8a6d698a0482cd4dbb85858537", "filename": "src/comp/middle/walk.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/39a000714a14fb907b7a34573684191804d28277/src%2Fcomp%2Fmiddle%2Fwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39a000714a14fb907b7a34573684191804d28277/src%2Fcomp%2Fmiddle%2Fwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fwalk.rs?ref=39a000714a14fb907b7a34573684191804d28277", "patch": "@@ -17,10 +17,14 @@ type ast_visitor =\n         fn (&@ast::native_item i)       visit_native_item_post,\n         fn (&@ast::item i)              visit_item_pre,\n         fn (&@ast::item i)              visit_item_post,\n+        fn (&@ast::method m)            visit_method_pre,\n+        fn (&@ast::method m)            visit_method_post,\n         fn (&ast::block b)              visit_block_pre,\n         fn (&ast::block b)              visit_block_post,\n         fn (&@ast::stmt s)              visit_stmt_pre,\n         fn (&@ast::stmt s)              visit_stmt_post,\n+        fn (&ast::arm a)                visit_arm_pre,\n+        fn (&ast::arm a)                visit_arm_post,\n         fn (&@ast::decl d)              visit_decl_pre,\n         fn (&@ast::decl d)              visit_decl_post,\n         fn (&@ast::expr e)              visit_expr_pre,\n@@ -110,7 +114,9 @@ fn walk_item(&ast_visitor v, @ast::item i) {\n                 walk_ty(v, f.ty);\n             }\n             for (@ast::method m in ob.methods) {\n+                v.visit_method_pre(m);\n                 walk_fn(v, m.node.meth);\n+                v.visit_method_post(m);\n             }\n             alt (ob.dtor) {\n                 case (none[@ast::method]) {}\n@@ -343,7 +349,9 @@ fn walk_expr(&ast_visitor v, @ast::expr e) {\n         case (ast::expr_alt(?x, ?arms, _)) {\n             walk_expr(v, x);\n             for (ast::arm a in arms) {\n+                v.visit_arm_pre(a);\n                 walk_block(v, a.block);\n+                v.visit_arm_post(a);\n             }\n         }\n         case (ast::expr_block(?b, _)) {\n@@ -413,8 +421,10 @@ fn def_visit_crate_directive(&@ast::crate_directive c) { }\n fn def_visit_view_item(&@ast::view_item vi) { }\n fn def_visit_native_item(&@ast::native_item ni) { }\n fn def_visit_item(&@ast::item i) { }\n+fn def_visit_method(&@ast::method m) { }\n fn def_visit_block(&ast::block b) { }\n fn def_visit_stmt(&@ast::stmt s) { }\n+fn def_visit_arm(&ast::arm a) { }\n fn def_visit_decl(&@ast::decl d) { }\n fn def_visit_expr(&@ast::expr e) { }\n fn def_visit_ty(&@ast::ty t) { }\n@@ -428,8 +438,10 @@ fn default_visitor() -> ast_visitor {\n     auto d_visit_view_item = def_visit_view_item;\n     auto d_visit_native_item = def_visit_native_item;\n     auto d_visit_item = def_visit_item;\n+    auto d_visit_method = def_visit_method;\n     auto d_visit_block = def_visit_block;\n     auto d_visit_stmt = def_visit_stmt;\n+    auto d_visit_arm = def_visit_arm;\n     auto d_visit_decl = def_visit_decl;\n     auto d_visit_expr = def_visit_expr;\n     auto d_visit_ty = def_visit_ty;\n@@ -446,10 +458,14 @@ fn default_visitor() -> ast_visitor {\n             visit_native_item_post = d_visit_native_item,\n             visit_item_pre = d_visit_item,\n             visit_item_post = d_visit_item,\n+            visit_method_pre = d_visit_method,\n+            visit_method_post = d_visit_method,\n             visit_block_pre = d_visit_block,\n             visit_block_post = d_visit_block,\n             visit_stmt_pre = d_visit_stmt,\n             visit_stmt_post = d_visit_stmt,\n+            visit_arm_pre = d_visit_arm,\n+            visit_arm_post = d_visit_arm,\n             visit_decl_pre = d_visit_decl,\n             visit_decl_post = d_visit_decl,\n             visit_expr_pre = d_visit_expr,\n@@ -468,6 +484,3 @@ fn default_visitor() -> ast_visitor {\n // compile-command: \"make -k -C $RBUILD 2>&1 | sed -e 's/\\\\/x\\\\//x:\\\\//g'\";\n // End:\n //\n-\n-\n-"}]}