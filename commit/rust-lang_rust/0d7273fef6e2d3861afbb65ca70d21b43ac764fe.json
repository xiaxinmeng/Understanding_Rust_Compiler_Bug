{"sha": "0d7273fef6e2d3861afbb65ca70d21b43ac764fe", "node_id": "C_kwDOAAsO6NoAKDBkNzI3M2ZlZjZlMmQzODYxYWZiYjY1Y2E3MGQyMWI0M2FjNzY0ZmU", "commit": {"author": {"name": "Dharma Saputra Wijaya", "email": "dswijj@gmail.com", "date": "2022-01-25T14:19:19Z"}, "committer": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2022-01-26T07:02:13Z"}, "message": "fix bad suggestion on `numeric_literal`", "tree": {"sha": "0a3c5755aeb372a3c02d072d8c9bd364187d2c23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a3c5755aeb372a3c02d072d8c9bd364187d2c23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d7273fef6e2d3861afbb65ca70d21b43ac764fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d7273fef6e2d3861afbb65ca70d21b43ac764fe", "html_url": "https://github.com/rust-lang/rust/commit/0d7273fef6e2d3861afbb65ca70d21b43ac764fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d7273fef6e2d3861afbb65ca70d21b43ac764fe/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a26c412e2852489abbbd69f53576255c4eac9c25", "url": "https://api.github.com/repos/rust-lang/rust/commits/a26c412e2852489abbbd69f53576255c4eac9c25", "html_url": "https://github.com/rust-lang/rust/commit/a26c412e2852489abbbd69f53576255c4eac9c25"}], "stats": {"total": 65, "additions": 52, "deletions": 13}, "files": [{"sha": "470c8c7ea26a60dd2b48b142ffac3cb6ec10a63b", "filename": "clippy_lints/src/casts/unnecessary_cast.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0d7273fef6e2d3861afbb65ca70d21b43ac764fe/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d7273fef6e2d3861afbb65ca70d21b43ac764fe/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs?ref=0d7273fef6e2d3861afbb65ca70d21b43ac764fe", "patch": "@@ -23,15 +23,14 @@ pub(super) fn check(\n \n         if_chain! {\n             if let LitKind::Int(n, _) = lit.node;\n-            if let Some(src) = snippet_opt(cx, lit.span);\n+            if let Some(src) = snippet_opt(cx, cast_expr.span);\n             if cast_to.is_floating_point();\n             if let Some(num_lit) = NumericLiteral::from_lit_kind(&src, &lit.node);\n             let from_nbits = 128 - n.leading_zeros();\n             let to_nbits = fp_ty_mantissa_nbits(cast_to);\n             if from_nbits != 0 && to_nbits != 0 && from_nbits <= to_nbits && num_lit.is_decimal();\n             then {\n-                let literal_str = if is_unary_neg(cast_expr) { format!(\"-{}\", num_lit.integer) } else { num_lit.integer.into() };\n-                lint_unnecessary_cast(cx, expr, &literal_str, cast_from, cast_to);\n+                lint_unnecessary_cast(cx, expr, num_lit.integer, cast_from, cast_to);\n                 return true\n             }\n         }\n@@ -48,7 +47,7 @@ pub(super) fn check(\n             | LitKind::Float(_, LitFloatType::Suffixed(_))\n                 if cast_from.kind() == cast_to.kind() =>\n             {\n-                if let Some(src) = snippet_opt(cx, lit.span) {\n+                if let Some(src) = snippet_opt(cx, cast_expr.span) {\n                     if let Some(num_lit) = NumericLiteral::from_lit_kind(&src, &lit.node) {\n                         lint_unnecessary_cast(cx, expr, num_lit.integer, cast_from, cast_to);\n                     }\n@@ -113,7 +112,3 @@ fn fp_ty_mantissa_nbits(typ: Ty<'_>) -> u32 {\n         _ => 0,\n     }\n }\n-\n-fn is_unary_neg(expr: &Expr<'_>) -> bool {\n-    matches!(expr.kind, ExprKind::Unary(UnOp::Neg, _))\n-}"}, {"sha": "908ff822712ffa0a171f9d043a78ed9b7c8fceb2", "filename": "clippy_utils/src/numeric_literal.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0d7273fef6e2d3861afbb65ca70d21b43ac764fe/clippy_utils%2Fsrc%2Fnumeric_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d7273fef6e2d3861afbb65ca70d21b43ac764fe/clippy_utils%2Fsrc%2Fnumeric_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fnumeric_literal.rs?ref=0d7273fef6e2d3861afbb65ca70d21b43ac764fe", "patch": "@@ -51,7 +51,14 @@ impl<'a> NumericLiteral<'a> {\n     }\n \n     pub fn from_lit_kind(src: &'a str, lit_kind: &LitKind) -> Option<NumericLiteral<'a>> {\n-        if lit_kind.is_numeric() && src.chars().next().map_or(false, |c| c.is_digit(10)) {\n+        let unsigned_src = src.strip_prefix('-').map_or(src, |s| s);\n+        if lit_kind.is_numeric()\n+            && unsigned_src\n+                .trim_start()\n+                .chars()\n+                .next()\n+                .map_or(false, |c| c.is_digit(10))\n+        {\n             let (unsuffixed, suffix) = split_suffix(src, lit_kind);\n             let float = matches!(lit_kind, LitKind::Float(..));\n             Some(NumericLiteral::new(unsuffixed, suffix, float))"}, {"sha": "b77c19f2ba5961e30409af2c95dd9640978f9ba3", "filename": "tests/ui/unnecessary_cast.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0d7273fef6e2d3861afbb65ca70d21b43ac764fe/tests%2Fui%2Funnecessary_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d7273fef6e2d3861afbb65ca70d21b43ac764fe/tests%2Fui%2Funnecessary_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast.rs?ref=0d7273fef6e2d3861afbb65ca70d21b43ac764fe", "patch": "@@ -1,13 +1,20 @@\n #![warn(clippy::unnecessary_cast)]\n #![allow(clippy::no_effect)]\n \n+#[rustfmt::skip]\n fn main() {\n     // Test cast_unnecessary\n     1i32 as i32;\n     1f32 as f32;\n     false as bool;\n     &1i32 as &i32;\n \n+    -1_i32 as i32;\n+    - 1_i32 as i32;\n+    -1f32 as f32;\n+    1_i32 as i32;\n+    1_f32 as f32;\n+\n     // macro version\n     macro_rules! foo {\n         ($a:ident, $b:ident) => {"}, {"sha": "a5a93c6110c6a0233f7b8304ceaebb730f878b15", "filename": "tests/ui/unnecessary_cast.stderr", "status": "modified", "additions": 34, "deletions": 4, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/0d7273fef6e2d3861afbb65ca70d21b43ac764fe/tests%2Fui%2Funnecessary_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d7273fef6e2d3861afbb65ca70d21b43ac764fe/tests%2Fui%2Funnecessary_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast.stderr?ref=0d7273fef6e2d3861afbb65ca70d21b43ac764fe", "patch": "@@ -1,22 +1,52 @@\n error: casting integer literal to `i32` is unnecessary\n-  --> $DIR/unnecessary_cast.rs:6:5\n+  --> $DIR/unnecessary_cast.rs:7:5\n    |\n LL |     1i32 as i32;\n    |     ^^^^^^^^^^^ help: try: `1_i32`\n    |\n    = note: `-D clippy::unnecessary-cast` implied by `-D warnings`\n \n error: casting float literal to `f32` is unnecessary\n-  --> $DIR/unnecessary_cast.rs:7:5\n+  --> $DIR/unnecessary_cast.rs:8:5\n    |\n LL |     1f32 as f32;\n    |     ^^^^^^^^^^^ help: try: `1_f32`\n \n error: casting to the same type is unnecessary (`bool` -> `bool`)\n-  --> $DIR/unnecessary_cast.rs:8:5\n+  --> $DIR/unnecessary_cast.rs:9:5\n    |\n LL |     false as bool;\n    |     ^^^^^^^^^^^^^ help: try: `false`\n \n-error: aborting due to 3 previous errors\n+error: casting integer literal to `i32` is unnecessary\n+  --> $DIR/unnecessary_cast.rs:12:5\n+   |\n+LL |     -1_i32 as i32;\n+   |     ^^^^^^^^^^^^^ help: try: `-1_i32`\n+\n+error: casting integer literal to `i32` is unnecessary\n+  --> $DIR/unnecessary_cast.rs:13:5\n+   |\n+LL |     - 1_i32 as i32;\n+   |     ^^^^^^^^^^^^^^ help: try: `- 1_i32`\n+\n+error: casting float literal to `f32` is unnecessary\n+  --> $DIR/unnecessary_cast.rs:14:5\n+   |\n+LL |     -1f32 as f32;\n+   |     ^^^^^^^^^^^^ help: try: `-1_f32`\n+\n+error: casting integer literal to `i32` is unnecessary\n+  --> $DIR/unnecessary_cast.rs:15:5\n+   |\n+LL |     1_i32 as i32;\n+   |     ^^^^^^^^^^^^ help: try: `1_i32`\n+\n+error: casting float literal to `f32` is unnecessary\n+  --> $DIR/unnecessary_cast.rs:16:5\n+   |\n+LL |     1_f32 as f32;\n+   |     ^^^^^^^^^^^^ help: try: `1_f32`\n+\n+error: aborting due to 8 previous errors\n "}]}