{"sha": "35e9e02066fd3f8fde35212f465e0a6e56de5d8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ZTllMDIwNjZmZDNmOGZkZTM1MjEyZjQ2NWUwYTZlNTZkZTVkOGM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-01T23:01:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-02T17:39:14Z"}, "message": "Use ioivec::read_whole_file_str in a few places", "tree": {"sha": "44fa1f1270e246dcad2e0e057c7bc4f7188841b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44fa1f1270e246dcad2e0e057c7bc4f7188841b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35e9e02066fd3f8fde35212f465e0a6e56de5d8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35e9e02066fd3f8fde35212f465e0a6e56de5d8c", "html_url": "https://github.com/rust-lang/rust/commit/35e9e02066fd3f8fde35212f465e0a6e56de5d8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35e9e02066fd3f8fde35212f465e0a6e56de5d8c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1a25969a072a33f68fba16a2a3859a7d96809c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1a25969a072a33f68fba16a2a3859a7d96809c2", "html_url": "https://github.com/rust-lang/rust/commit/a1a25969a072a33f68fba16a2a3859a7d96809c2"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "958ebf705f5842964245f63664f8c5651888efe8", "filename": "src/comp/syntax/codemap.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/35e9e02066fd3f8fde35212f465e0a6e56de5d8c/src%2Fcomp%2Fsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35e9e02066fd3f8fde35212f465e0a6e56de5d8c/src%2Fcomp%2Fsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fcodemap.rs?ref=35e9e02066fd3f8fde35212f465e0a6e56de5d8c", "patch": "@@ -108,8 +108,7 @@ fn maybe_highlight_lines(sp: &option::t[span], cm: &codemap,\n \n         // FIXME: reading in the entire file is the worst possible way to\n         //        get access to the necessary lines.\n-        let rdr = ioivec::file_reader(lines.name);\n-        let file = str::unsafe_from_bytes_ivec(rdr.read_whole_stream());\n+        let file = ioivec::read_whole_file_str(lines.name);\n         let fm = get_filemap(cm, lines.name);\n \n         // arbitrarily only print up to six lines of the error"}, {"sha": "473ceb08b514c144ade986fa5abdc25e080dafa0", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/35e9e02066fd3f8fde35212f465e0a6e56de5d8c/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35e9e02066fd3f8fde35212f465e0a6e56de5d8c/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=35e9e02066fd3f8fde35212f465e0a6e56de5d8c", "patch": "@@ -62,8 +62,7 @@ fn new_parser_from_file(sess: parse_sess, cfg:\n                         ast::crate_cfg, path: str,\n                         chpos: uint, byte_pos: uint,\n                         ftype: file_type) -> parser {\n-    let srdr = ioivec::file_reader(path);\n-    let src = str::unsafe_from_bytes_ivec(srdr.read_whole_stream());\n+    let src = ioivec::read_whole_file_str(path);\n     let filemap = codemap::new_filemap(path, chpos, byte_pos);\n     sess.cm.files += ~[filemap];\n     let itr = @interner::mk(str::hash, str::eq);"}, {"sha": "e4a2c75fab6ccc012f7a410c819e4da1f7d66223", "filename": "src/fuzzer/fuzzer.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/35e9e02066fd3f8fde35212f465e0a6e56de5d8c/src%2Ffuzzer%2Ffuzzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35e9e02066fd3f8fde35212f465e0a6e56de5d8c/src%2Ffuzzer%2Ffuzzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Ffuzzer.rs?ref=35e9e02066fd3f8fde35212f465e0a6e56de5d8c", "patch": "@@ -21,11 +21,6 @@ import rustc::syntax::codemap;\n import rustc::syntax::parse::parser;\n import rustc::syntax::print::pprust;\n \n-\n-fn read_whole_file(filename: &str) -> str {\n-    str::unsafe_from_bytes_ivec(ioivec::file_reader(filename).read_whole_stream())\n-}\n-\n fn write_file(filename: &str, content: &str) {\n     ioivec::file_writer(filename,\n                         ~[ioivec::create,\n@@ -35,7 +30,7 @@ fn write_file(filename: &str, content: &str) {\n }\n \n fn file_contains(filename: &str, needle: &str) -> bool {\n-    let contents = read_whole_file(filename);\n+    let contents = ioivec::read_whole_file_str(filename);\n     ret str::find(contents, needle) != -1;\n }\n \n@@ -325,7 +320,7 @@ fn check_convergence(files: &str[]) {\n     log_err #fmt(\"pp convergence tests: %u files\", ivec::len(files));\n     for file in files {\n         if !file_is_confusing(file) {\n-            let s = read_whole_file(file);\n+            let s = ioivec::read_whole_file_str(file);\n             if !content_is_confusing(s) {\n                 log_err #fmt(\"pp converge: %s\", file);\n                 // Change from 7u to 2u when https://github.com/graydon/rust/issues/759 is fixed\n@@ -338,7 +333,7 @@ fn check_convergence(files: &str[]) {\n fn check_variants(files: &str[]) {\n     for file in files {\n         if !file_is_confusing(file) {\n-            let s = read_whole_file(file);\n+            let s = ioivec::read_whole_file_str(file);\n             if content_is_dangerous_to_modify(s) || content_is_confusing(s) { cont; }\n             log_err \"check_variants: \" + file;\n             let codemap = codemap::new_codemap();"}, {"sha": "37a10633b075e26e2b4690d60a4ebeaeeff24000", "filename": "src/test/compiletest/runtest.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/35e9e02066fd3f8fde35212f465e0a6e56de5d8c/src%2Ftest%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35e9e02066fd3f8fde35212f465e0a6e56de5d8c/src%2Ftest%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompiletest%2Fruntest.rs?ref=35e9e02066fd3f8fde35212f465e0a6e56de5d8c", "patch": "@@ -1,4 +1,5 @@\n import std::io;\n+import std::ioivec;\n import std::str;\n import std::option;\n import std::vec;\n@@ -86,8 +87,7 @@ fn run_pretty_test(cx: &cx, props: &test_props, testfile: &str) {\n       option::none. { 2 }\n     };\n \n-    let srcs = ~[str::unsafe_from_bytes(\n-        io::file_reader(testfile).read_whole_stream())];\n+    let srcs = ~[ioivec::read_whole_file_str(testfile)];\n \n     let round = 0;\n     while round < rounds {\n@@ -106,8 +106,7 @@ fn run_pretty_test(cx: &cx, props: &test_props, testfile: &str) {\n     let expected = alt props.pp_exact {\n       option::some(file) {\n         let filepath = fs::connect(fs::dirname(testfile), file);\n-        str::unsafe_from_bytes(\n-            io::file_reader(filepath).read_whole_stream())\n+        ioivec::read_whole_file_str(filepath)\n       }\n       option::none. {\n         srcs.(ivec::len(srcs) - 2u)"}]}