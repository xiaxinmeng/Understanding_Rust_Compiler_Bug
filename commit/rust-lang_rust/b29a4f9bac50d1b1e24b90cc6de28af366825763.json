{"sha": "b29a4f9bac50d1b1e24b90cc6de28af366825763", "node_id": "C_kwDOAAsO6NoAKGIyOWE0ZjliYWM1MGQxYjFlMjRiOTBjYzZkZTI4YWYzNjY4MjU3NjM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-06T15:54:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-06T15:54:53Z"}, "message": "Rollup merge of #105004 - TaKO8Ki:fix-104897, r=wesleywiser\n\nFix `emit_unused_delims_expr` ICE\n\nFixes #104897\n\nThis is also related to #104433.", "tree": {"sha": "4fcb6dc8560492bc418523f8dd5441ee513cbcfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fcb6dc8560492bc418523f8dd5441ee513cbcfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b29a4f9bac50d1b1e24b90cc6de28af366825763", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjj2XNCRBK7hj4Ov3rIwAA7GwIADm9JQnol2ugCbtGMihi22MU\nFhZnrvJdvXF1n7uYSCxNkUN8v9P+HGmSgjND/pefXpWQ7snEZ1F7yv7oXqubqZhF\nkgU7HekZhweunTdVCt59PC/40/1QYy5NAKG/WidPHO9yJy1/aqYN3VASVLm/ICXR\n60k2z+aDUqyXRRPTd28BiiDtTiJQ2TXMq8/kT0ziGEk25FvSNkbm5U7V9JumV70i\n8DkfuRIOchZtV1fh9FkpF7k5D8VD26Q3rYMTXSTigyvY3BlC2HFx146StM65CbMF\nEeKh25Hl3UV9D6bYpoUefxNHXeE1GefbBlt2AwP2boZY5qQdCUfM+MtmKs0qLOU=\n=Fe8b\n-----END PGP SIGNATURE-----\n", "payload": "tree 4fcb6dc8560492bc418523f8dd5441ee513cbcfa\nparent db416ea195e46fa8f7c8adabc9e9b3e0b71f5c90\nparent 5c7278a36412c1a0a06bab4f1364cf5719ab8287\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670342093 +0100\ncommitter GitHub <noreply@github.com> 1670342093 +0100\n\nRollup merge of #105004 - TaKO8Ki:fix-104897, r=wesleywiser\n\nFix `emit_unused_delims_expr` ICE\n\nFixes #104897\n\nThis is also related to #104433.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b29a4f9bac50d1b1e24b90cc6de28af366825763", "html_url": "https://github.com/rust-lang/rust/commit/b29a4f9bac50d1b1e24b90cc6de28af366825763", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b29a4f9bac50d1b1e24b90cc6de28af366825763/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db416ea195e46fa8f7c8adabc9e9b3e0b71f5c90", "url": "https://api.github.com/repos/rust-lang/rust/commits/db416ea195e46fa8f7c8adabc9e9b3e0b71f5c90", "html_url": "https://github.com/rust-lang/rust/commit/db416ea195e46fa8f7c8adabc9e9b3e0b71f5c90"}, {"sha": "5c7278a36412c1a0a06bab4f1364cf5719ab8287", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c7278a36412c1a0a06bab4f1364cf5719ab8287", "html_url": "https://github.com/rust-lang/rust/commit/5c7278a36412c1a0a06bab4f1364cf5719ab8287"}], "stats": {"total": 80, "additions": 75, "deletions": 5}, "files": [{"sha": "b5db94f8c0684b3235fa92972c5f453df2c71c6f", "filename": "compiler/rustc_lint/src/unused.rs", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b29a4f9bac50d1b1e24b90cc6de28af366825763/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b29a4f9bac50d1b1e24b90cc6de28af366825763/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Funused.rs?ref=b29a4f9bac50d1b1e24b90cc6de28af366825763", "patch": "@@ -633,13 +633,34 @@ trait UnusedDelimLint {\n         left_pos: Option<BytePos>,\n         right_pos: Option<BytePos>,\n     ) {\n+        // If `value` has `ExprKind::Err`, unused delim lint can be broken.\n+        // For example, the following code caused ICE.\n+        // This is because the `ExprKind::Call` in `value` has `ExprKind::Err` as its argument\n+        // and this leads to wrong spans. #104897\n+        //\n+        // ```\n+        // fn f(){(print!(\u00e1\n+        // ```\n+        use rustc_ast::visit::{walk_expr, Visitor};\n+        struct ErrExprVisitor {\n+            has_error: bool,\n+        }\n+        impl<'ast> Visitor<'ast> for ErrExprVisitor {\n+            fn visit_expr(&mut self, expr: &'ast ast::Expr) {\n+                if let ExprKind::Err = expr.kind {\n+                    self.has_error = true;\n+                    return;\n+                }\n+                walk_expr(self, expr)\n+            }\n+        }\n+        let mut visitor = ErrExprVisitor { has_error: false };\n+        visitor.visit_expr(value);\n+        if visitor.has_error {\n+            return;\n+        }\n         let spans = match value.kind {\n             ast::ExprKind::Block(ref block, None) if block.stmts.len() == 1 => {\n-                if let StmtKind::Expr(expr) = &block.stmts[0].kind\n-                    && let ExprKind::Err = expr.kind\n-                {\n-                    return\n-                }\n                 if let Some(span) = block.stmts[0].span.find_ancestor_inside(value.span) {\n                     Some((value.span.with_hi(span.lo()), value.span.with_lo(span.hi())))\n                 } else {"}, {"sha": "5fbc658f1557c9cbe1d61713592df9885356fde5", "filename": "src/test/ui/lint/issue-104897.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b29a4f9bac50d1b1e24b90cc6de28af366825763/src%2Ftest%2Fui%2Flint%2Fissue-104897.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b29a4f9bac50d1b1e24b90cc6de28af366825763/src%2Ftest%2Fui%2Flint%2Fissue-104897.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-104897.rs?ref=b29a4f9bac50d1b1e24b90cc6de28af366825763", "patch": "@@ -0,0 +1,6 @@\n+// error-pattern: this file contains an unclosed delimiter\n+// error-pattern: this file contains an unclosed delimiter\n+// error-pattern: this file contains an unclosed delimiter\n+// error-pattern: format argument must be a string literal\n+\n+fn f(){(print!(\u00e1"}, {"sha": "817a93c2f3bb2774d2ba158999384d4740324cbe", "filename": "src/test/ui/lint/issue-104897.stderr", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/b29a4f9bac50d1b1e24b90cc6de28af366825763/src%2Ftest%2Fui%2Flint%2Fissue-104897.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b29a4f9bac50d1b1e24b90cc6de28af366825763/src%2Ftest%2Fui%2Flint%2Fissue-104897.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-104897.stderr?ref=b29a4f9bac50d1b1e24b90cc6de28af366825763", "patch": "@@ -0,0 +1,43 @@\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-104897.rs:6:18\n+   |\n+LL | fn f(){(print!(\u00e1\n+   |       --      -  ^\n+   |       ||      |\n+   |       ||      unclosed delimiter\n+   |       |unclosed delimiter\n+   |       unclosed delimiter\n+\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-104897.rs:6:18\n+   |\n+LL | fn f(){(print!(\u00e1\n+   |       --      -  ^\n+   |       ||      |\n+   |       ||      unclosed delimiter\n+   |       |unclosed delimiter\n+   |       unclosed delimiter\n+\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-104897.rs:6:18\n+   |\n+LL | fn f(){(print!(\u00e1\n+   |       --      -  ^\n+   |       ||      |\n+   |       ||      unclosed delimiter\n+   |       |unclosed delimiter\n+   |       unclosed delimiter\n+\n+error: format argument must be a string literal\n+  --> $DIR/issue-104897.rs:6:16\n+   |\n+LL | fn f(){(print!(\u00e1\n+   |                ^\n+   |\n+help: you might be missing a string literal to format with\n+   |\n+LL | fn f(){(print!(\"{}\", \u00e1\n+   |                +++++\n+\n+error: aborting due to 4 previous errors\n+"}]}