{"sha": "72868450df54ff1ec80e92e3f2fc827cfb1e9f02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyODY4NDUwZGY1NGZmMWVjODBlOTJlM2YyZmM4MjdjZmIxZTlmMDI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-05-08T19:26:34Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-05-09T00:04:03Z"}, "message": "libcore: Fix more merge fallout.", "tree": {"sha": "7d827575b36c5cab6efd869d2138e4386f43de0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d827575b36c5cab6efd869d2138e4386f43de0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72868450df54ff1ec80e92e3f2fc827cfb1e9f02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72868450df54ff1ec80e92e3f2fc827cfb1e9f02", "html_url": "https://github.com/rust-lang/rust/commit/72868450df54ff1ec80e92e3f2fc827cfb1e9f02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72868450df54ff1ec80e92e3f2fc827cfb1e9f02/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3affc6ed4071a183da81bcc2048fff82d3e35e81", "url": "https://api.github.com/repos/rust-lang/rust/commits/3affc6ed4071a183da81bcc2048fff82d3e35e81", "html_url": "https://github.com/rust-lang/rust/commit/3affc6ed4071a183da81bcc2048fff82d3e35e81"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "5ca7a72e84e8678a5656e2c935278cb5e2c085b0", "filename": "src/libcore/rt/local_services.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72868450df54ff1ec80e92e3f2fc827cfb1e9f02/src%2Flibcore%2Frt%2Flocal_services.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72868450df54ff1ec80e92e3f2fc827cfb1e9f02/src%2Flibcore%2Frt%2Flocal_services.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Flocal_services.rs?ref=72868450df54ff1ec80e92e3f2fc827cfb1e9f02", "patch": "@@ -225,8 +225,8 @@ mod test {\n     fn rng() {\n         do run_in_newsched_task() {\n             use rand::{rng, Rng};\n-            let r = rng();\n+            let mut r = rng();\n             let _ = r.next();\n         }\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "3097cb799a2044ef223192b499b17569066960e2", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/72868450df54ff1ec80e92e3f2fc827cfb1e9f02/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72868450df54ff1ec80e92e3f2fc827cfb1e9f02/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=72868450df54ff1ec80e92e3f2fc827cfb1e9f02", "patch": "@@ -11,6 +11,7 @@\n use ast;\n use codemap;\n use codemap::span;\n+use fold;\n use ext::base::ext_ctxt;\n use ext::build;\n \n@@ -516,3 +517,20 @@ pub fn mk_unreachable(cx: @ext_ctxt, span: span) -> @ast::expr {\n pub fn mk_unreachable_arm(cx: @ext_ctxt, span: span) -> ast::arm {\n     mk_arm(cx, span, ~[mk_pat_wild(cx, span)], mk_unreachable(cx, span))\n }\n+\n+//\n+// Duplication functions\n+//\n+// These functions just duplicate AST nodes.\n+//\n+\n+pub fn duplicate_expr(cx: @ext_ctxt, expr: @ast::expr) -> @ast::expr {\n+    let folder = fold::default_ast_fold();\n+    let folder = @fold::AstFoldFns {\n+        new_id: |_| cx.next_id(),\n+        ..*folder\n+    };\n+    let folder = fold::make_fold(folder);\n+    folder.fold_expr(expr)\n+}\n+"}, {"sha": "604686f442fd7b073485e516d09b885c4d1cf5f9", "filename": "src/libsyntax/ext/deriving/rand.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/72868450df54ff1ec80e92e3f2fc827cfb1e9f02/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72868450df54ff1ec80e92e3f2fc827cfb1e9f02/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs?ref=72868450df54ff1ec80e92e3f2fc827cfb1e9f02", "patch": "@@ -35,7 +35,7 @@ pub fn expand_deriving_rand(cx: @ext_ctxt,\n                 self_ty: None,\n                 args: ~[\n                     Ptr(~Literal(Path::new_local(~\"R\")),\n-                        Borrowed(None, ast::m_imm))\n+                        Borrowed(None, ast::m_mutbl))\n                 ],\n                 ret_ty: Self,\n                 const_nonmatching: false,\n@@ -59,8 +59,10 @@ fn rand_substructure(cx: @ext_ctxt, span: span, substr: &Substructure) -> @expr\n         cx.ident_of(~\"rand\")\n     ];\n     let rand_call = || {\n-        build::mk_call_global(cx, span,\n-                              copy rand_ident, copy rng)\n+        build::mk_call_global(cx,\n+                              span,\n+                              copy rand_ident,\n+                              ~[ build::duplicate_expr(cx, rng[0]) ])\n     };\n \n     return match *substr.fields {\n@@ -80,7 +82,10 @@ fn rand_substructure(cx: @ext_ctxt, span: span, substr: &Substructure) -> @expr\n             let rand_name = build::mk_raw_path_(span, copy rand_ident, None, ~[ u32_ty, r_ty ]);\n             let rand_name = build::mk_path_raw(cx, span, rand_name);\n \n-            let rv_call = build::mk_call_(cx, span, rand_name, copy rng);\n+            let rv_call = build::mk_call_(cx,\n+                                          span,\n+                                          rand_name,\n+                                          ~[ build::duplicate_expr(cx, rng[0]) ]);\n \n             // rand() % variants.len()\n             let rand_variant = build::mk_binary(cx, span, ast::rem,\n@@ -133,4 +138,4 @@ fn rand_substructure(cx: @ext_ctxt, span: span, substr: &Substructure) -> @expr\n             }\n         }\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "d181dd87e38d17acb25e612e426ffb796270a4be", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/72868450df54ff1ec80e92e3f2fc827cfb1e9f02/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72868450df54ff1ec80e92e3f2fc827cfb1e9f02/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=72868450df54ff1ec80e92e3f2fc827cfb1e9f02", "patch": "@@ -859,3 +859,4 @@ impl AstFoldExtensions for @ast_fold {\n pub fn make_fold(afp: ast_fold_fns) -> @ast_fold {\n     afp as @ast_fold\n }\n+"}]}