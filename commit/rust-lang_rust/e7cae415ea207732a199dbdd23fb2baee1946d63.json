{"sha": "e7cae415ea207732a199dbdd23fb2baee1946d63", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3Y2FlNDE1ZWEyMDc3MzJhMTk5ZGJkZDIzZmIyYmFlZTE5NDZkNjM=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-11-13T16:03:44Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-11-13T16:03:44Z"}, "message": "add cabi_msp430", "tree": {"sha": "6ce2b8311f416887ecf4f33ec74eb7b5df416af7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ce2b8311f416887ecf4f33ec74eb7b5df416af7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7cae415ea207732a199dbdd23fb2baee1946d63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7cae415ea207732a199dbdd23fb2baee1946d63", "html_url": "https://github.com/rust-lang/rust/commit/e7cae415ea207732a199dbdd23fb2baee1946d63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7cae415ea207732a199dbdd23fb2baee1946d63/comments", "author": null, "committer": null, "parents": [{"sha": "a6a247798619cf513fcab2421bade4dc99994e67", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6a247798619cf513fcab2421bade4dc99994e67", "html_url": "https://github.com/rust-lang/rust/commit/a6a247798619cf513fcab2421bade4dc99994e67"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "f2e15a8973c910ca83eda7b7d4c1fcd09195b2c2", "filename": "src/librustc_trans/abi.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7cae415ea207732a199dbdd23fb2baee1946d63/src%2Flibrustc_trans%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7cae415ea207732a199dbdd23fb2baee1946d63/src%2Flibrustc_trans%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fabi.rs?ref=e7cae415ea207732a199dbdd23fb2baee1946d63", "patch": "@@ -24,6 +24,7 @@ use cabi_s390x;\n use cabi_mips;\n use cabi_mips64;\n use cabi_asmjs;\n+use cabi_msp430;\n use machine::{llalign_of_min, llsize_of, llsize_of_alloc};\n use type_::Type;\n use type_of;\n@@ -520,6 +521,7 @@ impl FnType {\n             \"s390x\" => cabi_s390x::compute_abi_info(ccx, self),\n             \"asmjs\" => cabi_asmjs::compute_abi_info(ccx, self),\n             \"wasm32\" => cabi_asmjs::compute_abi_info(ccx, self),\n+            \"msp430\" => cabi_msp430::compute_abi_info(ccx, self),\n             a => ccx.sess().fatal(&format!(\"unrecognized arch \\\"{}\\\" in target specification\", a))\n         }\n "}, {"sha": "aa90bb7ab753ad706b7f437f035bed2f1274fe7a", "filename": "src/librustc_trans/cabi_msp430.rs", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/e7cae415ea207732a199dbdd23fb2baee1946d63/src%2Flibrustc_trans%2Fcabi_msp430.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7cae415ea207732a199dbdd23fb2baee1946d63/src%2Flibrustc_trans%2Fcabi_msp430.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcabi_msp430.rs?ref=e7cae415ea207732a199dbdd23fb2baee1946d63", "patch": "@@ -0,0 +1,59 @@\n+// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Reference: MSP430 Embedded Application Binary Interface\n+// http://www.ti.com/lit/an/slaa534/slaa534.pdf\n+\n+#![allow(non_upper_case_globals)]\n+\n+use llvm::Struct;\n+\n+use abi::{self, ArgType, FnType};\n+use context::CrateContext;\n+use type_::Type;\n+\n+fn ty_size(ty: Type) -> usize {\n+    abi::ty_size(ty, 2)\n+}\n+\n+// 3.5 Structures or Unions Passed and Returned by Reference\n+//\n+// \"Structures (including classes) and unions larger than 32 bits are passed and\n+// returned by reference. To pass a structure or union by reference, the caller\n+// places its address in the appropriate location: either in a register or on\n+// the stack, according to its position in the argument list. (..)\"\n+fn classify_ret_ty(ccx: &CrateContext, ret: &mut ArgType) {\n+    if ret.ty.kind() == Struct && ty_size(ret.ty) > 32 {\n+        ret.make_indirect(ccx);\n+    } else {\n+        ret.extend_integer_width_to(16);\n+    }\n+}\n+\n+fn classify_arg_ty(ccx: &CrateContext, arg: &mut ArgType) {\n+    if arg.ty.kind() == Struct && ty_size(arg.ty) > 32 {\n+        arg.make_indirect(ccx);\n+    } else {\n+        arg.extend_integer_width_to(16);\n+    }\n+}\n+\n+pub fn compute_abi_info(ccx: &CrateContext, fty: &mut FnType) {\n+    if !fty.ret.is_ignore() {\n+        classify_ret_ty(ccx, &mut fty.ret);\n+    }\n+\n+    for arg in &mut fty.args {\n+        if arg.is_ignore() {\n+            continue;\n+        }\n+        classify_arg_ty(ccx, arg);\n+    }\n+}"}, {"sha": "f189f22d925b97b85b0b1742352a73acb2fba498", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e7cae415ea207732a199dbdd23fb2baee1946d63/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7cae415ea207732a199dbdd23fb2baee1946d63/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=e7cae415ea207732a199dbdd23fb2baee1946d63", "patch": "@@ -101,6 +101,7 @@ mod cabi_arm;\n mod cabi_asmjs;\n mod cabi_mips;\n mod cabi_mips64;\n+mod cabi_msp430;\n mod cabi_powerpc;\n mod cabi_powerpc64;\n mod cabi_s390x;"}]}