{"sha": "0aa7d73df37470b9f868873587faf64c3339f964", "node_id": "C_kwDOAAsO6NoAKDBhYTdkNzNkZjM3NDcwYjlmODY4ODczNTg3ZmFmNjRjMzMzOWY5NjQ", "commit": {"author": {"name": "Tyler Weaver", "email": "maybe@tylerjw.dev", "date": "2023-01-02T14:12:43Z"}, "committer": {"name": "Tyler Weaver", "email": "tyler@picknik.ai", "date": "2023-01-02T23:27:46Z"}, "message": "Only remove method from end of recv, indent suggestion source\n\nSigned-off-by: Tyler Weaver <maybe@tylerjw.dev>", "tree": {"sha": "589c30bd947a6f1a5c52177dbcd9bc45c44e7e21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/589c30bd947a6f1a5c52177dbcd9bc45c44e7e21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0aa7d73df37470b9f868873587faf64c3339f964", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAARcAAAAHc3NoLXJzYQAAAAMBAAEAAAEBALT2BR97TqMEfbs16kxp9J\nBwk/H0Kc3HrrEj5WAJngRJRlF5gV0mkh4CWr5gCardKxWaUrjLK/rVR/zyM8Ic4cAcY6pE\nIilIy/Owe20c1xOZdHPtoXKi5yKBENIhMPBNNVvNPl0uLwL73cH5DsXo0TFHyCaUkXv/uj\nDH8v1HSwDi2EVcMX6poH4RmSbq9Vfh1obNhY2uPJ2CqT2sFk3qWFK5sd+RIf3V9Ah1M36u\ndUEdl/rC4ByVjfAqjCDSbjtYP61Va70DNVGZOBjZXS+IZnQCyAqtjYu//U666YhMaBsPDS\ngl3liYqKG+GUcf94wfY7KQcMDhny2PpOa+Ve6o5vEAAAADZ2l0AAAAAAAAAAZzaGE1MTIA\nAAEUAAAADHJzYS1zaGEyLTUxMgAAAQAKU0Mv6Ow95C7GwJQRe1lqQOJ1Y+gVukEC8UDZGA\n/awT6GNjbnycbdOfgYkyNWsvU9vjSOc9uxJgp/H3jc+eJpCtka+Ot0rhrsuqjF3XQEn679\noTzXwL/4SuMteN8Td6BU/Si9o0a5c5e/NpLrgDVm9nAma+bY4RGgT2jDwu32z5kXOLgi3/\n0uRc9l088sQn/KNcvcGQPr/oHuZZUl/9tMystkRvA38sjQSnSiSNaSfQM+3Ck7IyNTnTGX\nx7I1oJevqjIVXHUHowVkLXg40/bohN2jE4jxxDYA8usmNBtuBMGBuG9tezYgTsj9iH54wZ\nAPFSy+iQynGS4ly23fLMqh\n-----END SSH SIGNATURE-----", "payload": "tree 589c30bd947a6f1a5c52177dbcd9bc45c44e7e21\nparent bd83650e91a751ad352444b458f9f50549fac208\nauthor Tyler Weaver <maybe@tylerjw.dev> 1672668763 -0700\ncommitter Tyler Weaver <tyler@picknik.ai> 1672702066 -0700\n\nOnly remove method from end of recv, indent suggestion source\n\nSigned-off-by: Tyler Weaver <maybe@tylerjw.dev>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0aa7d73df37470b9f868873587faf64c3339f964", "html_url": "https://github.com/rust-lang/rust/commit/0aa7d73df37470b9f868873587faf64c3339f964", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0aa7d73df37470b9f868873587faf64c3339f964/comments", "author": {"login": "tylerjw", "id": 2490389, "node_id": "MDQ6VXNlcjI0OTAzODk=", "avatar_url": "https://avatars.githubusercontent.com/u/2490389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tylerjw", "html_url": "https://github.com/tylerjw", "followers_url": "https://api.github.com/users/tylerjw/followers", "following_url": "https://api.github.com/users/tylerjw/following{/other_user}", "gists_url": "https://api.github.com/users/tylerjw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tylerjw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tylerjw/subscriptions", "organizations_url": "https://api.github.com/users/tylerjw/orgs", "repos_url": "https://api.github.com/users/tylerjw/repos", "events_url": "https://api.github.com/users/tylerjw/events{/privacy}", "received_events_url": "https://api.github.com/users/tylerjw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tylerjw", "id": 2490389, "node_id": "MDQ6VXNlcjI0OTAzODk=", "avatar_url": "https://avatars.githubusercontent.com/u/2490389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tylerjw", "html_url": "https://github.com/tylerjw", "followers_url": "https://api.github.com/users/tylerjw/followers", "following_url": "https://api.github.com/users/tylerjw/following{/other_user}", "gists_url": "https://api.github.com/users/tylerjw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tylerjw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tylerjw/subscriptions", "organizations_url": "https://api.github.com/users/tylerjw/orgs", "repos_url": "https://api.github.com/users/tylerjw/repos", "events_url": "https://api.github.com/users/tylerjw/events{/privacy}", "received_events_url": "https://api.github.com/users/tylerjw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd83650e91a751ad352444b458f9f50549fac208", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd83650e91a751ad352444b458f9f50549fac208", "html_url": "https://github.com/rust-lang/rust/commit/bd83650e91a751ad352444b458f9f50549fac208"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "e34c377f5fc3e55614bd8cd7f7ca1970d0c7139c", "filename": "clippy_lints/src/methods/case_sensitive_file_extension_comparisons.rs", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/0aa7d73df37470b9f868873587faf64c3339f964/clippy_lints%2Fsrc%2Fmethods%2Fcase_sensitive_file_extension_comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0aa7d73df37470b9f868873587faf64c3339f964/clippy_lints%2Fsrc%2Fmethods%2Fcase_sensitive_file_extension_comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fcase_sensitive_file_extension_comparisons.rs?ref=0aa7d73df37470b9f868873587faf64c3339f964", "patch": "@@ -1,4 +1,5 @@\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::source::{indent_of, reindent_multiline};\n use clippy_utils::sugg::Sugg;\n use clippy_utils::ty::is_type_lang_item;\n use if_chain::if_chain;\n@@ -37,29 +38,36 @@ pub(super) fn check<'tcx>(\n                 \"case-sensitive file extension comparison\",\n                 |diag| {\n                     diag.help(\"consider using a case-insensitive comparison instead\");\n-                    let mut recv_str = Sugg::hir(cx, recv, \"\").to_string();\n+                    let mut recv_source = Sugg::hir(cx, recv, \"\").to_string();\n \n                     if is_type_lang_item(cx, recv_ty, LangItem::String) {\n-                        recv_str = format!(\"&{recv_str}\");\n+                        recv_source = format!(\"&{recv_source}\");\n                     }\n \n-                    if recv_str.contains(\".to_lowercase()\") {\n+                    if recv_source.ends_with(\".to_lowercase()\") {\n                         diag.note(\"to_lowercase allocates memory, this can be avoided by using Path\");\n-                        recv_str = recv_str.replace(\".to_lowercase()\", \"\");\n+                        recv_source = recv_source.strip_suffix(\".to_lowercase()\").unwrap().to_string();\n                     }\n \n-                    if recv_str.contains(\".to_uppercase()\") {\n+                    if recv_source.ends_with(\".to_uppercase()\") {\n                         diag.note(\"to_uppercase allocates memory, this can be avoided by using Path\");\n-                        recv_str = recv_str.replace(\".to_uppercase()\", \"\");\n+                        recv_source = recv_source.strip_suffix(\".to_uppercase()\").unwrap().to_string();\n                     }\n \n+                    let suggestion_source = reindent_multiline(\n+                        format!(\n+                            \"std::path::Path::new({})\n+                                .extension()\n+                                .map_or(false, |ext| ext.eq_ignore_ascii_case(\\\"{}\\\"))\",\n+                            recv_source, ext_str.strip_prefix('.').unwrap()).into(),\n+                        true,\n+                        Some(indent_of(cx, call_span).unwrap_or(0) + 4)\n+                    );\n+\n                     diag.span_suggestion(\n                         recv.span.to(call_span),\n                         \"use std::path::Path\",\n-                        format!(\"std::path::Path::new({})\n-        .extension()\n-        .map_or(false, |ext| ext.eq_ignore_ascii_case(\\\"{}\\\"))\", \n-                            recv_str, ext_str.strip_prefix('.').unwrap()),\n+                        suggestion_source,\n                         Applicability::MaybeIncorrect,\n                     );\n                 }"}]}