{"sha": "7297bc320fa148773f1615c211429ca7dfe3332e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyOTdiYzMyMGZhMTQ4NzczZjE2MTVjMjExNDI5Y2E3ZGZlMzMzMmU=", "commit": {"author": {"name": "Jeremy Wazny", "email": "jeremywazny@yahoo.com.au", "date": "2016-01-26T04:53:04Z"}, "committer": {"name": "Jeremy Wazny", "email": "jeremywazny@yahoo.com.au", "date": "2016-01-26T05:39:00Z"}, "message": "Limit when we emit a trailing where clause comma.", "tree": {"sha": "9d1eb7e3846f91103e35ec26eb3f9eb74d8fbbad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d1eb7e3846f91103e35ec26eb3f9eb74d8fbbad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7297bc320fa148773f1615c211429ca7dfe3332e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7297bc320fa148773f1615c211429ca7dfe3332e", "html_url": "https://github.com/rust-lang/rust/commit/7297bc320fa148773f1615c211429ca7dfe3332e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7297bc320fa148773f1615c211429ca7dfe3332e/comments", "author": {"login": "jwazny", "id": 3060096, "node_id": "MDQ6VXNlcjMwNjAwOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/3060096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwazny", "html_url": "https://github.com/jwazny", "followers_url": "https://api.github.com/users/jwazny/followers", "following_url": "https://api.github.com/users/jwazny/following{/other_user}", "gists_url": "https://api.github.com/users/jwazny/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwazny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwazny/subscriptions", "organizations_url": "https://api.github.com/users/jwazny/orgs", "repos_url": "https://api.github.com/users/jwazny/repos", "events_url": "https://api.github.com/users/jwazny/events{/privacy}", "received_events_url": "https://api.github.com/users/jwazny/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwazny", "id": 3060096, "node_id": "MDQ6VXNlcjMwNjAwOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/3060096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwazny", "html_url": "https://github.com/jwazny", "followers_url": "https://api.github.com/users/jwazny/followers", "following_url": "https://api.github.com/users/jwazny/following{/other_user}", "gists_url": "https://api.github.com/users/jwazny/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwazny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwazny/subscriptions", "organizations_url": "https://api.github.com/users/jwazny/orgs", "repos_url": "https://api.github.com/users/jwazny/repos", "events_url": "https://api.github.com/users/jwazny/events{/privacy}", "received_events_url": "https://api.github.com/users/jwazny/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d82d3b2cd1d06bd455979512c8be06dbcf88e36f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d82d3b2cd1d06bd455979512c8be06dbcf88e36f", "html_url": "https://github.com/rust-lang/rust/commit/d82d3b2cd1d06bd455979512c8be06dbcf88e36f"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "2ff52148f6a5f9116e57038e3d440534f774a0cf", "filename": "src/items.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7297bc320fa148773f1615c211429ca7dfe3332e/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7297bc320fa148773f1615c211429ca7dfe3332e/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=7297bc320fa148773f1615c211429ca7dfe3332e", "patch": "@@ -491,6 +491,7 @@ pub fn format_impl(context: &RewriteContext, item: &ast::Item, offset: Indent) -\n                                                              where_budget,\n                                                              context.config.where_density,\n                                                              \"{\",\n+                                                             true,\n                                                              None));\n \n         if try_opt!(is_impl_single_line(context, &items, &result, &where_clause_str, &item)) {\n@@ -737,6 +738,7 @@ fn format_tuple_struct(context: &RewriteContext,\n                                           where_budget,\n                                           Density::Compressed,\n                                           \";\",\n+                                          false,\n                                           None))\n         }\n         None => \"\".to_owned(),\n@@ -818,6 +820,7 @@ pub fn rewrite_type_alias(context: &RewriteContext,\n                                                          where_budget,\n                                                          context.config.where_density,\n                                                          \"=\",\n+                                                         false,\n                                                          Some(span.hi)));\n     result.push_str(&where_clause_str);\n     result.push_str(\" = \");\n@@ -1248,6 +1251,7 @@ fn rewrite_fn_base(context: &RewriteContext,\n                                                          where_budget,\n                                                          where_density,\n                                                          \"{\",\n+                                                         has_body,\n                                                          Some(span.hi)));\n \n     if last_line_width(&result) + where_clause_str.len() > context.config.max_width &&\n@@ -1487,6 +1491,7 @@ fn rewrite_where_clause(context: &RewriteContext,\n                         width: usize,\n                         density: Density,\n                         terminator: &str,\n+                        allow_trailing_comma: bool,\n                         span_end: Option<BytePos>)\n                         -> Option<String> {\n     if where_clause.predicates.is_empty() {\n@@ -1526,11 +1531,12 @@ fn rewrite_where_clause(context: &RewriteContext,\n     // FIXME: we don't need to collect here if the where_layout isn't\n     // HorizontalVertical.\n     let tactic = definitive_tactic(&item_vec, context.config.where_layout, budget);\n+    let use_trailing_comma = allow_trailing_comma && context.config.where_trailing_comma;\n \n     let fmt = ListFormatting {\n         tactic: tactic,\n         separator: \",\",\n-        trailing_separator: SeparatorTactic::from_bool(context.config.where_trailing_comma),\n+        trailing_separator: SeparatorTactic::from_bool(use_trailing_comma),\n         indent: offset,\n         width: budget,\n         ends_with_newline: true,\n@@ -1592,6 +1598,7 @@ fn format_generics(context: &RewriteContext,\n                                                              budget,\n                                                              Density::Tall,\n                                                              terminator,\n+                                                             true,\n                                                              Some(span.hi)));\n         result.push_str(&where_clause_str);\n         if !force_same_line_brace &&"}]}