{"sha": "0e14b9ff268b6987f935847d7857969a69b7ee7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMTRiOWZmMjY4YjY5ODdmOTM1ODQ3ZDc4NTc5NjlhNjliN2VlN2Q=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-15T09:30:26Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-15T09:30:26Z"}, "message": "Add tests", "tree": {"sha": "a3944def52adc6322f644d1b9da9d2a0587d21c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3944def52adc6322f644d1b9da9d2a0587d21c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e14b9ff268b6987f935847d7857969a69b7ee7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e14b9ff268b6987f935847d7857969a69b7ee7d", "html_url": "https://github.com/rust-lang/rust/commit/0e14b9ff268b6987f935847d7857969a69b7ee7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e14b9ff268b6987f935847d7857969a69b7ee7d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6faad6dc7a0ad1524e3c490f4ea99c998ce9ae04", "url": "https://api.github.com/repos/rust-lang/rust/commits/6faad6dc7a0ad1524e3c490f4ea99c998ce9ae04", "html_url": "https://github.com/rust-lang/rust/commit/6faad6dc7a0ad1524e3c490f4ea99c998ce9ae04"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "70a5b10e9be99543db11ad8a509af3217bdac4f3", "filename": "src/test/ui/consts/huge-values.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e14b9ff268b6987f935847d7857969a69b7ee7d/src%2Ftest%2Fui%2Fconsts%2Fhuge-values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e14b9ff268b6987f935847d7857969a69b7ee7d/src%2Ftest%2Fui%2Fconsts%2Fhuge-values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fhuge-values.rs?ref=0e14b9ff268b6987f935847d7857969a69b7ee7d", "patch": "@@ -1,11 +1,17 @@\n // build-pass\n // ignore-32bit\n \n+// This test is a canary test that will essentially not compile in a reasonable time frame\n+// (so it'll take hours) if any of the optimizations regress. With the optimizations, these compile\n+// in milliseconds just as if the length were set to `1`.\n+\n #[derive(Clone, Copy)]\n struct Foo;\n \n fn main() {\n     let _ = [(); 4_000_000_000];\n     let _ = [0u8; 4_000_000_000];\n     let _ = [Foo; 4_000_000_000];\n+    let _ = [(Foo, (), Foo, ((), Foo, [0; 0])); 4_000_000_000];\n+    let _ = [[0; 0]; 4_000_000_000];\n }"}, {"sha": "c7144f05ec7a4ad264caf48af23621c0c4156c7e", "filename": "src/test/ui/consts/validate_never_arrays.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e14b9ff268b6987f935847d7857969a69b7ee7d/src%2Ftest%2Fui%2Fconsts%2Fvalidate_never_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e14b9ff268b6987f935847d7857969a69b7ee7d/src%2Ftest%2Fui%2Fconsts%2Fvalidate_never_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fvalidate_never_arrays.rs?ref=0e14b9ff268b6987f935847d7857969a69b7ee7d", "patch": "@@ -1,5 +1,9 @@\n #![feature(const_raw_ptr_deref, never_type)]\n \n-const FOO: &[!; 1] = unsafe { &*(1_usize as *const [!; 1]) }; //~ ERROR undefined behavior\n+const _: &[!; 1] = unsafe { &*(1_usize as *const [!; 1]) }; //~ ERROR undefined behavior\n+const _: &[!; 0] = unsafe { &*(1_usize as *const [!; 0]) }; // ok\n+const _: &[!] = unsafe { &*(1_usize as *const [!; 0]) }; // ok\n+const _: &[!] = unsafe { &*(1_usize as *const [!; 1]) }; //~ ERROR undefined behavior\n+const _: &[!] = unsafe { &*(1_usize as *const [!; 42]) }; //~ ERROR undefined behavior\n \n fn main() {}"}, {"sha": "cb995b8216f4ec154662d90a6241c0b7edbd7443", "filename": "src/test/ui/consts/validate_never_arrays.stderr", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0e14b9ff268b6987f935847d7857969a69b7ee7d/src%2Ftest%2Fui%2Fconsts%2Fvalidate_never_arrays.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e14b9ff268b6987f935847d7857969a69b7ee7d/src%2Ftest%2Fui%2Fconsts%2Fvalidate_never_arrays.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fvalidate_never_arrays.stderr?ref=0e14b9ff268b6987f935847d7857969a69b7ee7d", "patch": "@@ -1,11 +1,27 @@\n error[E0080]: it is undefined behavior to use this value\n   --> $DIR/validate_never_arrays.rs:3:1\n    |\n-LL | const FOO: &[!; 1] = unsafe { &*(1_usize as *const [!; 1]) };\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a value of an uninhabited type at .<deref>\n+LL | const _: &[!; 1] = unsafe { &*(1_usize as *const [!; 1]) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a value of an uninhabited type at .<deref>\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n \n-error: aborting due to previous error\n+error[E0080]: it is undefined behavior to use this value\n+  --> $DIR/validate_never_arrays.rs:6:1\n+   |\n+LL | const _: &[!] = unsafe { &*(1_usize as *const [!; 1]) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a value of an uninhabited type at .<deref>[0]\n+   |\n+   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n+\n+error[E0080]: it is undefined behavior to use this value\n+  --> $DIR/validate_never_arrays.rs:7:1\n+   |\n+LL | const _: &[!] = unsafe { &*(1_usize as *const [!; 42]) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a value of an uninhabited type at .<deref>[0]\n+   |\n+   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n+\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0080`."}]}