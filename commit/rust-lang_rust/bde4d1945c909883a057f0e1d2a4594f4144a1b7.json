{"sha": "bde4d1945c909883a057f0e1d2a4594f4144a1b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkZTRkMTk0NWM5MDk4ODNhMDU3ZjBlMWQyYTQ1OTRmNDE0NGExYjc=", "commit": {"author": {"name": "Trevor Spiteri", "email": "tspiteri@ieee.org", "date": "2019-02-22T12:21:42Z"}, "committer": {"name": "Trevor Spiteri", "email": "tspiteri@ieee.org", "date": "2019-02-23T17:01:26Z"}, "message": "rustdoc: support methods on primitives in intra-doc links", "tree": {"sha": "8533ec319d09be03285ee61772aeaadbffaae547", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8533ec319d09be03285ee61772aeaadbffaae547"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bde4d1945c909883a057f0e1d2a4594f4144a1b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bde4d1945c909883a057f0e1d2a4594f4144a1b7", "html_url": "https://github.com/rust-lang/rust/commit/bde4d1945c909883a057f0e1d2a4594f4144a1b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bde4d1945c909883a057f0e1d2a4594f4144a1b7/comments", "author": {"login": "tspiteri", "id": 18604588, "node_id": "MDQ6VXNlcjE4NjA0NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/18604588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tspiteri", "html_url": "https://github.com/tspiteri", "followers_url": "https://api.github.com/users/tspiteri/followers", "following_url": "https://api.github.com/users/tspiteri/following{/other_user}", "gists_url": "https://api.github.com/users/tspiteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tspiteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tspiteri/subscriptions", "organizations_url": "https://api.github.com/users/tspiteri/orgs", "repos_url": "https://api.github.com/users/tspiteri/repos", "events_url": "https://api.github.com/users/tspiteri/events{/privacy}", "received_events_url": "https://api.github.com/users/tspiteri/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tspiteri", "id": 18604588, "node_id": "MDQ6VXNlcjE4NjA0NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/18604588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tspiteri", "html_url": "https://github.com/tspiteri", "followers_url": "https://api.github.com/users/tspiteri/followers", "following_url": "https://api.github.com/users/tspiteri/following{/other_user}", "gists_url": "https://api.github.com/users/tspiteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tspiteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tspiteri/subscriptions", "organizations_url": "https://api.github.com/users/tspiteri/orgs", "repos_url": "https://api.github.com/users/tspiteri/repos", "events_url": "https://api.github.com/users/tspiteri/events{/privacy}", "received_events_url": "https://api.github.com/users/tspiteri/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f19f161f24c9a02ff8c3f73122d0b015039221f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f19f161f24c9a02ff8c3f73122d0b015039221f", "html_url": "https://github.com/rust-lang/rust/commit/7f19f161f24c9a02ff8c3f73122d0b015039221f"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "b094a55a61707ee85981afa398e51770fa1e90ff", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bde4d1945c909883a057f0e1d2a4594f4144a1b7/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde4d1945c909883a057f0e1d2a4594f4144a1b7/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=bde4d1945c909883a057f0e1d2a4594f4144a1b7", "patch": "@@ -976,11 +976,13 @@ impl Attributes {\n                                 \"https://doc.rust-lang.org/nightly\",\n                         };\n                         // This is a primitive so the url is done \"by hand\".\n+                        let tail = fragment.find('#').unwrap_or_else(|| fragment.len());\n                         Some((s.clone(),\n-                              format!(\"{}{}std/primitive.{}.html\",\n+                              format!(\"{}{}std/primitive.{}.html{}\",\n                                       url,\n                                       if !url.ends_with('/') { \"/\" } else { \"\" },\n-                                      fragment)))\n+                                      &fragment[..tail],\n+                                      &fragment[tail..])))\n                     } else {\n                         panic!(\"This isn't a primitive?!\");\n                     }"}, {"sha": "1795f761a82e981cb5c4dc965b9e5736bc13d8d5", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/bde4d1945c909883a057f0e1d2a4594f4144a1b7/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde4d1945c909883a057f0e1d2a4594f4144a1b7/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=bde4d1945c909883a057f0e1d2a4594f4144a1b7", "patch": "@@ -1,6 +1,7 @@\n use rustc::lint as lint;\n use rustc::hir;\n use rustc::hir::def::Def;\n+use rustc::hir::def_id::DefId;\n use rustc::ty;\n use syntax;\n use syntax::ast::{self, Ident, NodeId};\n@@ -126,6 +127,17 @@ impl<'a, 'tcx, 'rcx> LinkCollector<'a, 'tcx, 'rcx> {\n                     path = name.clone();\n                 }\n             }\n+            if let Some(prim) = is_primitive(&path, false) {\n+                let did = primitive_impl(cx, &path).ok_or(())?;\n+                return cx.tcx.associated_items(did)\n+                    .find(|item| item.ident.name == item_name)\n+                    .and_then(|item| match item.kind {\n+                        ty::AssociatedKind::Method => Some(\"method\"),\n+                        _ => None,\n+                    })\n+                    .map(|out| (prim, Some(format!(\"{}#{}.{}\", path, out, item_name))))\n+                    .ok_or(());\n+            }\n \n             // FIXME: `with_scope` requires the `NodeId` of a module.\n             let ty = cx.resolver.borrow_mut()\n@@ -589,3 +601,26 @@ fn is_primitive(path_str: &str, is_val: bool) -> Option<Def> {\n         PRIMITIVES.iter().find(|x| x.0 == path_str).map(|x| x.1)\n     }\n }\n+\n+fn primitive_impl(cx: &DocContext, path_str: &str) -> Option<DefId> {\n+    let tcx = cx.tcx;\n+    match path_str {\n+        \"u8\" => tcx.lang_items().u8_impl(),\n+        \"u16\" => tcx.lang_items().u16_impl(),\n+        \"u32\" => tcx.lang_items().u32_impl(),\n+        \"u64\" => tcx.lang_items().u64_impl(),\n+        \"u128\" => tcx.lang_items().u128_impl(),\n+        \"usize\" => tcx.lang_items().usize_impl(),\n+        \"i8\" => tcx.lang_items().i8_impl(),\n+        \"i16\" => tcx.lang_items().i16_impl(),\n+        \"i32\" => tcx.lang_items().i32_impl(),\n+        \"i64\" => tcx.lang_items().i64_impl(),\n+        \"i128\" => tcx.lang_items().i128_impl(),\n+        \"isize\" => tcx.lang_items().isize_impl(),\n+        \"f32\" => tcx.lang_items().f32_impl(),\n+        \"f64\" => tcx.lang_items().f64_impl(),\n+        \"str\" => tcx.lang_items().str_impl(),\n+        \"char\" => tcx.lang_items().char_impl(),\n+        _ => None,\n+    }\n+}"}, {"sha": "af0426b22c557adf233f3db8c3b769be42ac7ef2", "filename": "src/test/rustdoc/intra-link-prim-methods.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bde4d1945c909883a057f0e1d2a4594f4144a1b7/src%2Ftest%2Frustdoc%2Fintra-link-prim-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bde4d1945c909883a057f0e1d2a4594f4144a1b7/src%2Ftest%2Frustdoc%2Fintra-link-prim-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-prim-methods.rs?ref=bde4d1945c909883a057f0e1d2a4594f4144a1b7", "patch": "@@ -0,0 +1,3 @@\n+#![deny(intra_doc_link_resolution_failure)]\n+\n+//! A [`char`] and its [`char::len_utf8`]."}]}