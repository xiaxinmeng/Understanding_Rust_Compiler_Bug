{"sha": "13f6d7e4cc60c1179ae0b7c4826893150e6fcd53", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzZjZkN2U0Y2M2MGMxMTc5YWUwYjdjNDgyNjg5MzE1MGU2ZmNkNTM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-31T15:55:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-31T15:55:00Z"}, "message": "Rollup merge of #88504 - m-ou-se:turbofish-please-stay, r=oli-obk\n\nKeep turbofish in prelude collision lint.\n\nFixes https://github.com/rust-lang/rust/issues/88442", "tree": {"sha": "ee0f69cac4711ddadaa1296ba7433c954de4937d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee0f69cac4711ddadaa1296ba7433c954de4937d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13f6d7e4cc60c1179ae0b7c4826893150e6fcd53", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhLlDVCRBK7hj4Ov3rIwAAZvoIAE+OBTy7L1X2SZ3n/MVS9fFq\noyg+2ml1gVU3afI8a+UC9IOrovcyyd/eOjr7GubiIv6vCARVOHBBtumGc8ruxIUa\nJlI3DVvInQM3IC7WxTgjGXNw3lSIMA8MJRMFgc18KvrPYYoDqRvczeYBMT4OQTuA\n30GexwtDsTkiYgAMEIVHQCh9CMpG1CYCTu/fx/bVXsEFfxZsGixMJQuSIa/3+YPj\nX8zLRPeIzhJr4gqgrLzrFxhq+MhDOxIqBbViGmKqf2I2o1TPJXDZRO3iBcdQ23+W\nZVOfbbsYX/Uwz0ABRydATFfcTtEYarRiqeey/JzpAhAJqQEJyhnlBUFg0qItilA=\n=KhbR\n-----END PGP SIGNATURE-----\n", "payload": "tree ee0f69cac4711ddadaa1296ba7433c954de4937d\nparent 91c4fee9fc4b56254837c76ffa139685b491635a\nparent 532be287c9ce0dff490983bbf3f809506469a4d1\nauthor Mara Bos <m-ou.se@m-ou.se> 1630425300 +0200\ncommitter GitHub <noreply@github.com> 1630425300 +0200\n\nRollup merge of #88504 - m-ou-se:turbofish-please-stay, r=oli-obk\n\nKeep turbofish in prelude collision lint.\n\nFixes https://github.com/rust-lang/rust/issues/88442\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13f6d7e4cc60c1179ae0b7c4826893150e6fcd53", "html_url": "https://github.com/rust-lang/rust/commit/13f6d7e4cc60c1179ae0b7c4826893150e6fcd53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13f6d7e4cc60c1179ae0b7c4826893150e6fcd53/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91c4fee9fc4b56254837c76ffa139685b491635a", "url": "https://api.github.com/repos/rust-lang/rust/commits/91c4fee9fc4b56254837c76ffa139685b491635a", "html_url": "https://github.com/rust-lang/rust/commit/91c4fee9fc4b56254837c76ffa139685b491635a"}, {"sha": "532be287c9ce0dff490983bbf3f809506469a4d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/532be287c9ce0dff490983bbf3f809506469a4d1", "html_url": "https://github.com/rust-lang/rust/commit/532be287c9ce0dff490983bbf3f809506469a4d1"}], "stats": {"total": 99, "additions": 97, "deletions": 2}, "files": [{"sha": "5c8056b244242343791656967f54d2cd9a92f61a", "filename": "compiler/rustc_typeck/src/check/method/prelude2021.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/13f6d7e4cc60c1179ae0b7c4826893150e6fcd53/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13f6d7e4cc60c1179ae0b7c4826893150e6fcd53/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs?ref=13f6d7e4cc60c1179ae0b7c4826893150e6fcd53", "patch": "@@ -174,8 +174,22 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             sp,\n                             \"disambiguate the associated function\",\n                             format!(\n-                                \"{}::{}({}{})\",\n-                                trait_name, segment.ident.name, self_adjusted, args\n+                                \"{}::{}{}({}{})\",\n+                                trait_name,\n+                                segment.ident.name,\n+                                if let Some(args) = segment.args.as_ref().and_then(|args| self\n+                                    .sess()\n+                                    .source_map()\n+                                    .span_to_snippet(args.span_ext)\n+                                    .ok())\n+                                {\n+                                    // Keep turbofish.\n+                                    format!(\"::{}\", args)\n+                                } else {\n+                                    String::new()\n+                                },\n+                                self_adjusted,\n+                                args,\n                             ),\n                             Applicability::MachineApplicable,\n                         );"}, {"sha": "3e76fced774dbdfc379bd82b6cb4e57192336085", "filename": "src/test/ui/rust-2021/future-prelude-collision-turbofish.fixed", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/13f6d7e4cc60c1179ae0b7c4826893150e6fcd53/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-turbofish.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/13f6d7e4cc60c1179ae0b7c4826893150e6fcd53/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-turbofish.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-turbofish.fixed?ref=13f6d7e4cc60c1179ae0b7c4826893150e6fcd53", "patch": "@@ -0,0 +1,28 @@\n+// See https://github.com/rust-lang/rust/issues/88442\n+// run-rustfix\n+// edition:2018\n+// check-pass\n+#![allow(unused)]\n+#![warn(rust_2021_prelude_collisions)]\n+\n+trait AnnotatableTryInto {\n+    fn try_into<T>(self) -> Result<T, Self::Error>\n+    where Self: std::convert::TryInto<T> {\n+        std::convert::TryInto::try_into(self)\n+    }\n+}\n+\n+impl<T> AnnotatableTryInto for T where T: From<u8> {}\n+\n+fn main() -> Result<(), &'static str> {\n+    let x: u64 = 1;\n+    AnnotatableTryInto::try_into::<usize>(x).or(Err(\"foo\"))?.checked_sub(1);\n+    //~^ WARNING trait method `try_into` will become ambiguous in Rust 2021\n+    //~| WARNING this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n+\n+    AnnotatableTryInto::try_into::<usize>(x).or(Err(\"foo\"))?;\n+    //~^ WARNING trait method `try_into` will become ambiguous in Rust 2021\n+    //~| WARNING this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n+\n+    Ok(())\n+}"}, {"sha": "abb292ef99284ea547597026182673376b4c66b8", "filename": "src/test/ui/rust-2021/future-prelude-collision-turbofish.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/13f6d7e4cc60c1179ae0b7c4826893150e6fcd53/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-turbofish.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13f6d7e4cc60c1179ae0b7c4826893150e6fcd53/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-turbofish.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-turbofish.rs?ref=13f6d7e4cc60c1179ae0b7c4826893150e6fcd53", "patch": "@@ -0,0 +1,28 @@\n+// See https://github.com/rust-lang/rust/issues/88442\n+// run-rustfix\n+// edition:2018\n+// check-pass\n+#![allow(unused)]\n+#![warn(rust_2021_prelude_collisions)]\n+\n+trait AnnotatableTryInto {\n+    fn try_into<T>(self) -> Result<T, Self::Error>\n+    where Self: std::convert::TryInto<T> {\n+        std::convert::TryInto::try_into(self)\n+    }\n+}\n+\n+impl<T> AnnotatableTryInto for T where T: From<u8> {}\n+\n+fn main() -> Result<(), &'static str> {\n+    let x: u64 = 1;\n+    x.try_into::<usize>().or(Err(\"foo\"))?.checked_sub(1);\n+    //~^ WARNING trait method `try_into` will become ambiguous in Rust 2021\n+    //~| WARNING this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n+\n+    x.try_into::<usize>().or(Err(\"foo\"))?;\n+    //~^ WARNING trait method `try_into` will become ambiguous in Rust 2021\n+    //~| WARNING this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n+\n+    Ok(())\n+}"}, {"sha": "2de9020bce7ac53ca39d6399d88b0acceeb95910", "filename": "src/test/ui/rust-2021/future-prelude-collision-turbofish.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/13f6d7e4cc60c1179ae0b7c4826893150e6fcd53/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-turbofish.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/13f6d7e4cc60c1179ae0b7c4826893150e6fcd53/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-turbofish.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-turbofish.stderr?ref=13f6d7e4cc60c1179ae0b7c4826893150e6fcd53", "patch": "@@ -0,0 +1,25 @@\n+warning: trait method `try_into` will become ambiguous in Rust 2021\n+  --> $DIR/future-prelude-collision-turbofish.rs:19:5\n+   |\n+LL |     x.try_into::<usize>().or(Err(\"foo\"))?.checked_sub(1);\n+   |     ^^^^^^^^^^^^^^^^^^^^^ help: disambiguate the associated function: `AnnotatableTryInto::try_into::<usize>(x)`\n+   |\n+note: the lint level is defined here\n+  --> $DIR/future-prelude-collision-turbofish.rs:6:9\n+   |\n+LL | #![warn(rust_2021_prelude_collisions)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/prelude.html>\n+\n+warning: trait method `try_into` will become ambiguous in Rust 2021\n+  --> $DIR/future-prelude-collision-turbofish.rs:23:5\n+   |\n+LL |     x.try_into::<usize>().or(Err(\"foo\"))?;\n+   |     ^^^^^^^^^^^^^^^^^^^^^ help: disambiguate the associated function: `AnnotatableTryInto::try_into::<usize>(x)`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/prelude.html>\n+\n+warning: 2 warnings emitted\n+"}]}