{"sha": "2fb56cc123cc1111cff2803ab7df26a0f0941fae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmYjU2Y2MxMjNjYzExMTFjZmYyODAzYWI3ZGYyNmEwZjA5NDFmYWU=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-02-03T20:00:07Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-02-03T20:00:07Z"}, "message": "Update test to collect item with a different type than the original vec", "tree": {"sha": "343f41d36d1d40a3bd4fa6fdca4b85bb31a0e32d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/343f41d36d1d40a3bd4fa6fdca4b85bb31a0e32d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fb56cc123cc1111cff2803ab7df26a0f0941fae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fb56cc123cc1111cff2803ab7df26a0f0941fae", "html_url": "https://github.com/rust-lang/rust/commit/2fb56cc123cc1111cff2803ab7df26a0f0941fae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fb56cc123cc1111cff2803ab7df26a0f0941fae/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6c8f3bf12bdeba01ba16eaacc5808e5321302f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6c8f3bf12bdeba01ba16eaacc5808e5321302f8", "html_url": "https://github.com/rust-lang/rust/commit/c6c8f3bf12bdeba01ba16eaacc5808e5321302f8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9a0739a27595f7f598e5d085fe2d93d27350524c", "filename": "library/alloc/tests/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2fb56cc123cc1111cff2803ab7df26a0f0941fae/library%2Falloc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fb56cc123cc1111cff2803ab7df26a0f0941fae/library%2Falloc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fvec.rs?ref=2fb56cc123cc1111cff2803ab7df26a0f0941fae", "patch": "@@ -931,7 +931,7 @@ fn test_from_iter_specialization_with_iterator_adapters() {\n         .map_while(Option::Some)\n         .peekable()\n         .skip(1)\n-        .map(|e| if e != 0 { Ok(e) } else { Err(()) });\n+        .map(|e| if e != usize::MAX { Ok(std::num::NonZeroUsize::new(e)) } else { Err(()) });\n     assert_in_place_trait(&iter);\n     let sink = iter.collect::<Result<Vec<_>, _>>().unwrap();\n     let sinkptr = sink.as_ptr();"}]}