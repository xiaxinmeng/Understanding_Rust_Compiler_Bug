{"sha": "7a89255b20d6fcbaf96ceeddcf6de119ee4ae0a5", "node_id": "C_kwDOAAsO6NoAKDdhODkyNTViMjBkNmZjYmFmOTZjZWVkZGNmNmRlMTE5ZWU0YWUwYTU", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-04-20T06:34:33Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-04-20T23:21:45Z"}, "message": "Avoid some tuple destructuring.\n\nSurprisingly, this is a non-trivial performance win.", "tree": {"sha": "7e856f5492ce59713dd077029a37bba82e2496c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e856f5492ce59713dd077029a37bba82e2496c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a89255b20d6fcbaf96ceeddcf6de119ee4ae0a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a89255b20d6fcbaf96ceeddcf6de119ee4ae0a5", "html_url": "https://github.com/rust-lang/rust/commit/7a89255b20d6fcbaf96ceeddcf6de119ee4ae0a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a89255b20d6fcbaf96ceeddcf6de119ee4ae0a5/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "880318c70a3cf676acae9c1e61ac6519f7f67f46", "url": "https://api.github.com/repos/rust-lang/rust/commits/880318c70a3cf676acae9c1e61ac6519f7f67f46", "html_url": "https://github.com/rust-lang/rust/commit/880318c70a3cf676acae9c1e61ac6519f7f67f46"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "450bdb510a54ba1c13f5f6d5977cb55bdc547db4", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7a89255b20d6fcbaf96ceeddcf6de119ee4ae0a5/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a89255b20d6fcbaf96ceeddcf6de119ee4ae0a5/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=7a89255b20d6fcbaf96ceeddcf6de119ee4ae0a5", "patch": "@@ -994,22 +994,24 @@ impl<'a> Parser<'a> {\n \n     /// Advance the parser by one token.\n     pub fn bump(&mut self) {\n-        let (mut next, spacing) = self.token_cursor.inlined_next(self.desugar_doc_comments);\n+        // Note: destructuring here would give nicer code, but it was found in #96210 to be slower\n+        // than `.0`/`.1` access.\n+        let mut next = self.token_cursor.inlined_next(self.desugar_doc_comments);\n         self.token_cursor.num_next_calls += 1;\n         // We've retrieved an token from the underlying\n         // cursor, so we no longer need to worry about\n         // an unglued token. See `break_and_eat` for more details\n         self.token_cursor.break_last_token = false;\n-        if next.span.is_dummy() {\n+        if next.0.span.is_dummy() {\n             // Tweak the location for better diagnostics, but keep syntactic context intact.\n             let fallback_span = self.token.span;\n-            next.span = fallback_span.with_ctxt(next.span.ctxt());\n+            next.0.span = fallback_span.with_ctxt(next.0.span.ctxt());\n         }\n         debug_assert!(!matches!(\n-            next.kind,\n+            next.0.kind,\n             token::OpenDelim(token::NoDelim) | token::CloseDelim(token::NoDelim)\n         ));\n-        self.inlined_bump_with((next, spacing))\n+        self.inlined_bump_with(next)\n     }\n \n     /// Look-ahead `dist` tokens of `self.token` and get access to that token there."}]}