{"sha": "54ad99b6e5b46372ab4c14f700d2c74c2f246a7c", "node_id": "C_kwDOAAsO6NoAKDU0YWQ5OWI2ZTViNDYzNzJhYjRjMTRmNzAwZDJjNzRjMmYyNDZhN2M", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-06-25T12:16:31Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-06-25T12:16:31Z"}, "message": "Fix `#[expect]` for `clippy::implicit_return`", "tree": {"sha": "537c0ebe318941021d8f82f4e6cb0e1778d9c14a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/537c0ebe318941021d8f82f4e6cb0e1778d9c14a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54ad99b6e5b46372ab4c14f700d2c74c2f246a7c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEwgBEOx3xlHwII7PG9cWdDmaeUwIFAmK2/J8ACgkQ9cWdDmae\nUwJBzBAAqQEyeIDaesJBhx04SOB8eRvny9eItRvFBBM751qtZGyNWUf5AquVy+SN\nPOdi/loWYG9V/zWuUpHwodrRfkWMyLgdqvcbcijA2h4v3WA5xaEL9Drgd2rfpmrp\ndvH0pPkQIC3ARLysCCx7rgmO3WzWQQbIBY1hPyUO98oScJK3Ew1PGKcjJD8F53WO\n1Dh1174q4MUAVFMDDVW8h7ZHH/qj2HrIJkG8MxNnQ1qeJKXRZ8+sNa3Ia9GbTpZI\nhJ9eK5pCuzsnzOdz4vTLpwaTdrApFgUe7Z9qHdAD0disTrm51VblprAHorX/nCBg\n2JeWTgFY+bg7clxdMWdf+njaVpRlT+yx/VSjJeTfrzKz198WsLh7tuQPHw+hcHMF\ndFVo06JftArYpwNmwHvaKf4E+ktkqrFg27tZHEojVJ4e59A3c90cHxgpOLLQTzFi\nysX6D4FMZGRN2Vp01rqVYvrB+ZsRJEX1c0KoJd/fgU850LYHiDeJ90vz4FqbGdQ1\nXie2xytC6YP4ed7bAz4jqR+oLjbOB5CLtxmoHeqYsAXTMxZ5x5BICTO3q9JqMDyh\n0ewyAqHNVSEl/hV0wCYRKJXvc+ey09JvE+gxf/WP1vKSzUVoKCbrD8Ze4JDG56V7\nf8U/+erD+x2chCvU2NfLD06HYrHlmv6J10tXZ1vseN7ylsQ/78M=\n=AeQN\n-----END PGP SIGNATURE-----", "payload": "tree 537c0ebe318941021d8f82f4e6cb0e1778d9c14a\nparent b2976980b59106971cbf29c4a9ba318c3804caeb\nauthor xFrednet <xFrednet@gmail.com> 1656159391 +0200\ncommitter xFrednet <xFrednet@gmail.com> 1656159391 +0200\n\nFix `#[expect]` for `clippy::implicit_return`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54ad99b6e5b46372ab4c14f700d2c74c2f246a7c", "html_url": "https://github.com/rust-lang/rust/commit/54ad99b6e5b46372ab4c14f700d2c74c2f246a7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54ad99b6e5b46372ab4c14f700d2c74c2f246a7c/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2976980b59106971cbf29c4a9ba318c3804caeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2976980b59106971cbf29c4a9ba318c3804caeb", "html_url": "https://github.com/rust-lang/rust/commit/b2976980b59106971cbf29c4a9ba318c3804caeb"}], "stats": {"total": 63, "additions": 45, "deletions": 18}, "files": [{"sha": "a6610ade37e56291400196d6ab02553ba11abe7f", "filename": "clippy_lints/src/implicit_return.rs", "status": "modified", "additions": 23, "deletions": 16, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/54ad99b6e5b46372ab4c14f700d2c74c2f246a7c/clippy_lints%2Fsrc%2Fimplicit_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54ad99b6e5b46372ab4c14f700d2c74c2f246a7c/clippy_lints%2Fsrc%2Fimplicit_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fimplicit_return.rs?ref=54ad99b6e5b46372ab4c14f700d2c74c2f246a7c", "patch": "@@ -1,5 +1,5 @@\n use clippy_utils::{\n-    diagnostics::span_lint_and_sugg,\n+    diagnostics::span_lint_hir_and_then,\n     get_async_fn_body, is_async_fn,\n     source::{snippet_with_applicability, snippet_with_context, walk_span_to_context},\n     visitors::expr_visitor_no_bodies,\n@@ -43,31 +43,38 @@ declare_clippy_lint! {\n \n declare_lint_pass!(ImplicitReturn => [IMPLICIT_RETURN]);\n \n-fn lint_return(cx: &LateContext<'_>, span: Span) {\n+fn lint_return(cx: &LateContext<'_>, emission_place: HirId, span: Span) {\n     let mut app = Applicability::MachineApplicable;\n     let snip = snippet_with_applicability(cx, span, \"..\", &mut app);\n-    span_lint_and_sugg(\n+    span_lint_hir_and_then(\n         cx,\n         IMPLICIT_RETURN,\n+        emission_place,\n         span,\n         \"missing `return` statement\",\n-        \"add `return` as shown\",\n-        format!(\"return {}\", snip),\n-        app,\n+        |diag| {\n+            diag.span_suggestion(span, \"add `return` as shown\", format!(\"return {}\", snip), app);\n+        },\n     );\n }\n \n-fn lint_break(cx: &LateContext<'_>, break_span: Span, expr_span: Span) {\n+fn lint_break(cx: &LateContext<'_>, emission_place: HirId, break_span: Span, expr_span: Span) {\n     let mut app = Applicability::MachineApplicable;\n     let snip = snippet_with_context(cx, expr_span, break_span.ctxt(), \"..\", &mut app).0;\n-    span_lint_and_sugg(\n+    span_lint_hir_and_then(\n         cx,\n         IMPLICIT_RETURN,\n+        emission_place,\n         break_span,\n         \"missing `return` statement\",\n-        \"change `break` to `return` as shown\",\n-        format!(\"return {}\", snip),\n-        app,\n+        |diag| {\n+            diag.span_suggestion(\n+                break_span,\n+                \"change `break` to `return` as shown\",\n+                format!(\"return {}\", snip),\n+                app,\n+            );\n+        },\n     );\n }\n \n@@ -152,7 +159,7 @@ fn lint_implicit_returns(\n                             // At this point sub_expr can be `None` in async functions which either diverge, or return\n                             // the unit type.\n                             if let Some(sub_expr) = sub_expr {\n-                                lint_break(cx, e.span, sub_expr.span);\n+                                lint_break(cx, e.hir_id, e.span, sub_expr.span);\n                             }\n                         } else {\n                             // the break expression is from a macro call, add a return to the loop\n@@ -166,10 +173,10 @@ fn lint_implicit_returns(\n             if add_return {\n                 #[expect(clippy::option_if_let_else)]\n                 if let Some(span) = call_site_span {\n-                    lint_return(cx, span);\n+                    lint_return(cx, expr.hir_id, span);\n                     LintLocation::Parent\n                 } else {\n-                    lint_return(cx, expr.span);\n+                    lint_return(cx, expr.hir_id, expr.span);\n                     LintLocation::Inner\n                 }\n             } else {\n@@ -198,10 +205,10 @@ fn lint_implicit_returns(\n         {\n             #[expect(clippy::option_if_let_else)]\n             if let Some(span) = call_site_span {\n-                lint_return(cx, span);\n+                lint_return(cx, expr.hir_id, span);\n                 LintLocation::Parent\n             } else {\n-                lint_return(cx, expr.span);\n+                lint_return(cx, expr.hir_id, expr.span);\n                 LintLocation::Inner\n             }\n         },"}, {"sha": "5e55b8b6739198d74b68dd706d80054528f9133b", "filename": "tests/ui/implicit_return.fixed", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/54ad99b6e5b46372ab4c14f700d2c74c2f246a7c/tests%2Fui%2Fimplicit_return.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/54ad99b6e5b46372ab4c14f700d2c74c2f246a7c/tests%2Fui%2Fimplicit_return.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_return.fixed?ref=54ad99b6e5b46372ab4c14f700d2c74c2f246a7c", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-\n+#![feature(lint_reasons)]\n #![warn(clippy::implicit_return)]\n #![allow(clippy::needless_return, clippy::needless_bool, unused, clippy::never_loop)]\n \n@@ -128,3 +128,13 @@ async fn foo() -> bool {\n }\n \n fn main() {}\n+\n+fn check_expect() -> bool {\n+    if true {\n+        // no error!\n+        return true;\n+    }\n+\n+    #[expect(clippy::implicit_return)]\n+    true\n+}"}, {"sha": "76f0a98035209f63e1b33f5afa67fef1a91eb5f1", "filename": "tests/ui/implicit_return.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/54ad99b6e5b46372ab4c14f700d2c74c2f246a7c/tests%2Fui%2Fimplicit_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54ad99b6e5b46372ab4c14f700d2c74c2f246a7c/tests%2Fui%2Fimplicit_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_return.rs?ref=54ad99b6e5b46372ab4c14f700d2c74c2f246a7c", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-\n+#![feature(lint_reasons)]\n #![warn(clippy::implicit_return)]\n #![allow(clippy::needless_return, clippy::needless_bool, unused, clippy::never_loop)]\n \n@@ -128,3 +128,13 @@ async fn foo() -> bool {\n }\n \n fn main() {}\n+\n+fn check_expect() -> bool {\n+    if true {\n+        // no error!\n+        return true;\n+    }\n+\n+    #[expect(clippy::implicit_return)]\n+    true\n+}"}]}