{"sha": "6c7d82e1ca246e914e96beb1874a75f7306ac9dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjN2Q4MmUxY2EyNDZlOTE0ZTk2YmViMTg3NGE3NWY3MzA2YWM5ZGQ=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-11-05T13:05:23Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-11-05T14:26:02Z"}, "message": "Make `ui/borrowck/borrowck-reborrow-from-mut.rs` robust w.r.t. NLL.", "tree": {"sha": "af109f281713692a38d13ca9f168668404d45801", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af109f281713692a38d13ca9f168668404d45801"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c7d82e1ca246e914e96beb1874a75f7306ac9dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c7d82e1ca246e914e96beb1874a75f7306ac9dd", "html_url": "https://github.com/rust-lang/rust/commit/6c7d82e1ca246e914e96beb1874a75f7306ac9dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c7d82e1ca246e914e96beb1874a75f7306ac9dd/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f9bf94b8dcb9acc4c0419dec256d1ece3139b1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f9bf94b8dcb9acc4c0419dec256d1ece3139b1c", "html_url": "https://github.com/rust-lang/rust/commit/9f9bf94b8dcb9acc4c0419dec256d1ece3139b1c"}], "stats": {"total": 154, "additions": 135, "deletions": 19}, "files": [{"sha": "1b4f9e77da80b77d17041e91862687bb23b3d34a", "filename": "src/test/ui/borrowck/borrowck-reborrow-from-mut.nll.stderr", "status": "modified", "additions": 107, "deletions": 2, "changes": 109, "blob_url": "https://github.com/rust-lang/rust/blob/6c7d82e1ca246e914e96beb1874a75f7306ac9dd/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reborrow-from-mut.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c7d82e1ca246e914e96beb1874a75f7306ac9dd/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reborrow-from-mut.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reborrow-from-mut.nll.stderr?ref=6c7d82e1ca246e914e96beb1874a75f7306ac9dd", "patch": "@@ -1,3 +1,107 @@\n+error[E0499]: cannot borrow `foo.bar1` as mutable more than once at a time\n+  --> $DIR/borrowck-reborrow-from-mut.rs:23:17\n+   |\n+LL |     let _bar1 = &mut foo.bar1;\n+   |                 ------------- first mutable borrow occurs here\n+LL |     let _bar2 = &mut foo.bar1;  //~ ERROR cannot borrow\n+   |                 ^^^^^^^^^^^^^ second mutable borrow occurs here\n+LL |     use_mut(_bar1);\n+   |             ----- first borrow later used here\n+\n+error[E0502]: cannot borrow `foo.bar1` as immutable because it is also borrowed as mutable\n+  --> $DIR/borrowck-reborrow-from-mut.rs:28:17\n+   |\n+LL |     let _bar1 = &mut foo.bar1;\n+   |                 ------------- mutable borrow occurs here\n+LL |     let _bar2 = &foo.bar1;  //~ ERROR cannot borrow\n+   |                 ^^^^^^^^^ immutable borrow occurs here\n+LL |     use_mut(_bar1);\n+   |             ----- mutable borrow later used here\n+\n+error[E0502]: cannot borrow `foo.bar1` as mutable because it is also borrowed as immutable\n+  --> $DIR/borrowck-reborrow-from-mut.rs:33:17\n+   |\n+LL |     let _bar1 = &foo.bar1;\n+   |                 --------- immutable borrow occurs here\n+LL |     let _bar2 = &mut foo.bar1;  //~ ERROR cannot borrow\n+   |                 ^^^^^^^^^^^^^ mutable borrow occurs here\n+LL |     use_imm(_bar1);\n+   |             ----- immutable borrow later used here\n+\n+error[E0499]: cannot borrow `foo.bar1` as mutable more than once at a time\n+  --> $DIR/borrowck-reborrow-from-mut.rs:55:21\n+   |\n+LL |     let _bar1 = &mut foo.bar1;\n+   |                 ------------- first mutable borrow occurs here\n+LL |     match *foo {\n+LL |         Foo { bar1: ref mut _bar1, bar2: _ } => {}\n+   |                     ^^^^^^^^^^^^^ second mutable borrow occurs here\n+...\n+LL |     use_mut(_bar1);\n+   |             ----- first borrow later used here\n+\n+error[E0502]: cannot borrow `foo.bar1` as immutable because it is also borrowed as mutable\n+  --> $DIR/borrowck-reborrow-from-mut.rs:62:17\n+   |\n+LL |     let _bar1 = &mut foo.bar1.int1;\n+   |                 ------------------ mutable borrow occurs here\n+LL |     let _foo1 = &foo.bar1; //~ ERROR cannot borrow\n+   |                 ^^^^^^^^^ immutable borrow occurs here\n+LL |     let _foo2 = &*foo; //~ ERROR cannot borrow\n+LL |     use_mut(_bar1);\n+   |             ----- mutable borrow later used here\n+\n+error[E0502]: cannot borrow `*foo` as immutable because it is also borrowed as mutable\n+  --> $DIR/borrowck-reborrow-from-mut.rs:63:17\n+   |\n+LL |     let _bar1 = &mut foo.bar1.int1;\n+   |                 ------------------ mutable borrow occurs here\n+LL |     let _foo1 = &foo.bar1; //~ ERROR cannot borrow\n+LL |     let _foo2 = &*foo; //~ ERROR cannot borrow\n+   |                 ^^^^^ immutable borrow occurs here\n+LL |     use_mut(_bar1);\n+   |             ----- mutable borrow later used here\n+\n+error[E0499]: cannot borrow `foo.bar1` as mutable more than once at a time\n+  --> $DIR/borrowck-reborrow-from-mut.rs:68:17\n+   |\n+LL |     let _bar1 = &mut foo.bar1.int1;\n+   |                 ------------------ first mutable borrow occurs here\n+LL |     let _foo1 = &mut foo.bar1; //~ ERROR cannot borrow\n+   |                 ^^^^^^^^^^^^^ second mutable borrow occurs here\n+LL |     use_mut(_bar1);\n+   |             ----- first borrow later used here\n+\n+error[E0499]: cannot borrow `*foo` as mutable more than once at a time\n+  --> $DIR/borrowck-reborrow-from-mut.rs:73:17\n+   |\n+LL |     let _bar1 = &mut foo.bar1.int1;\n+   |                 ------------------ first mutable borrow occurs here\n+LL |     let _foo2 = &mut *foo; //~ ERROR cannot borrow\n+   |                 ^^^^^^^^^ second mutable borrow occurs here\n+LL |     use_mut(_bar1);\n+   |             ----- first borrow later used here\n+\n+error[E0502]: cannot borrow `foo.bar1` as mutable because it is also borrowed as immutable\n+  --> $DIR/borrowck-reborrow-from-mut.rs:78:17\n+   |\n+LL |     let _bar1 = &foo.bar1.int1;\n+   |                 -------------- immutable borrow occurs here\n+LL |     let _foo1 = &mut foo.bar1; //~ ERROR cannot borrow\n+   |                 ^^^^^^^^^^^^^ mutable borrow occurs here\n+LL |     use_imm(_bar1);\n+   |             ----- immutable borrow later used here\n+\n+error[E0502]: cannot borrow `*foo` as mutable because it is also borrowed as immutable\n+  --> $DIR/borrowck-reborrow-from-mut.rs:83:17\n+   |\n+LL |     let _bar1 = &foo.bar1.int1;\n+   |                 -------------- immutable borrow occurs here\n+LL |     let _foo2 = &mut *foo; //~ ERROR cannot borrow\n+   |                 ^^^^^^^^^ mutable borrow occurs here\n+LL |     use_imm(_bar1);\n+   |             ----- immutable borrow later used here\n+\n error[E0596]: cannot borrow `foo.bar1` as mutable, as it is behind a `&` reference\n   --> $DIR/borrowck-reborrow-from-mut.rs:98:17\n    |\n@@ -6,6 +110,7 @@ LL | fn borrow_mut_from_imm(foo: &Foo) {\n LL |     let _bar1 = &mut foo.bar1; //~ ERROR cannot borrow\n    |                 ^^^^^^^^^^^^^ `foo` is a `&` reference, so the data it refers to cannot be borrowed as mutable\n \n-error: aborting due to previous error\n+error: aborting due to 11 previous errors\n \n-For more information about this error, try `rustc --explain E0596`.\n+Some errors occurred: E0499, E0502, E0596.\n+For more information about an error, try `rustc --explain E0499`."}, {"sha": "9235d900a7e792db5a978ebcc8550601269eb84e", "filename": "src/test/ui/borrowck/borrowck-reborrow-from-mut.rs", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/6c7d82e1ca246e914e96beb1874a75f7306ac9dd/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reborrow-from-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c7d82e1ca246e914e96beb1874a75f7306ac9dd/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reborrow-from-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reborrow-from-mut.rs?ref=6c7d82e1ca246e914e96beb1874a75f7306ac9dd", "patch": "@@ -21,86 +21,89 @@ struct Bar {\n fn borrow_same_field_twice_mut_mut(foo: &mut Foo) {\n     let _bar1 = &mut foo.bar1;\n     let _bar2 = &mut foo.bar1;  //~ ERROR cannot borrow\n+    use_mut(_bar1);\n }\n-\n fn borrow_same_field_twice_mut_imm(foo: &mut Foo) {\n     let _bar1 = &mut foo.bar1;\n     let _bar2 = &foo.bar1;  //~ ERROR cannot borrow\n+    use_mut(_bar1);\n }\n-\n fn borrow_same_field_twice_imm_mut(foo: &mut Foo) {\n     let _bar1 = &foo.bar1;\n     let _bar2 = &mut foo.bar1;  //~ ERROR cannot borrow\n+    use_imm(_bar1);\n }\n-\n fn borrow_same_field_twice_imm_imm(foo: &mut Foo) {\n     let _bar1 = &foo.bar1;\n     let _bar2 = &foo.bar1;\n+    use_imm(_bar1);\n }\n-\n fn borrow_both_mut(foo: &mut Foo) {\n     let _bar1 = &mut foo.bar1;\n     let _bar2 = &mut foo.bar2;\n+    use_mut(_bar1);\n }\n-\n fn borrow_both_mut_pattern(foo: &mut Foo) {\n     match *foo {\n-        Foo { bar1: ref mut _bar1, bar2: ref mut _bar2 } => {}\n+        Foo { bar1: ref mut _bar1, bar2: ref mut _bar2 } =>\n+        { use_mut(_bar1); use_mut(_bar2); }\n     }\n }\n-\n fn borrow_var_and_pattern(foo: &mut Foo) {\n     let _bar1 = &mut foo.bar1;\n     match *foo {\n         Foo { bar1: ref mut _bar1, bar2: _ } => {}\n         //~^ ERROR cannot borrow\n     }\n+    use_mut(_bar1);\n }\n-\n fn borrow_mut_and_base_imm(foo: &mut Foo) {\n     let _bar1 = &mut foo.bar1.int1;\n     let _foo1 = &foo.bar1; //~ ERROR cannot borrow\n     let _foo2 = &*foo; //~ ERROR cannot borrow\n+    use_mut(_bar1);\n }\n-\n fn borrow_mut_and_base_mut(foo: &mut Foo) {\n     let _bar1 = &mut foo.bar1.int1;\n     let _foo1 = &mut foo.bar1; //~ ERROR cannot borrow\n+    use_mut(_bar1);\n }\n-\n fn borrow_mut_and_base_mut2(foo: &mut Foo) {\n     let _bar1 = &mut foo.bar1.int1;\n     let _foo2 = &mut *foo; //~ ERROR cannot borrow\n+    use_mut(_bar1);\n }\n-\n fn borrow_imm_and_base_mut(foo: &mut Foo) {\n     let _bar1 = &foo.bar1.int1;\n     let _foo1 = &mut foo.bar1; //~ ERROR cannot borrow\n+    use_imm(_bar1);\n }\n-\n fn borrow_imm_and_base_mut2(foo: &mut Foo) {\n     let _bar1 = &foo.bar1.int1;\n     let _foo2 = &mut *foo; //~ ERROR cannot borrow\n+    use_imm(_bar1);\n }\n-\n fn borrow_imm_and_base_imm(foo: &mut Foo) {\n     let _bar1 = &foo.bar1.int1;\n     let _foo1 = &foo.bar1;\n     let _foo2 = &*foo;\n+    use_imm(_bar1);\n }\n-\n fn borrow_mut_and_imm(foo: &mut Foo) {\n     let _bar1 = &mut foo.bar1;\n     let _foo1 = &foo.bar2;\n+    use_mut(_bar1);\n }\n-\n fn borrow_mut_from_imm(foo: &Foo) {\n     let _bar1 = &mut foo.bar1; //~ ERROR cannot borrow\n }\n \n fn borrow_long_path_both_mut(foo: &mut Foo) {\n     let _bar1 = &mut foo.bar1.int1;\n     let _foo1 = &mut foo.bar2.int2;\n+    use_mut(_bar1);\n }\n-\n fn main() {}\n+\n+fn use_mut<T>(_: &mut T) { }\n+fn use_imm<T>(_: &T) { }"}, {"sha": "1310e38cb3ee6f7567b57d9f51b80f9889374bad", "filename": "src/test/ui/borrowck/borrowck-reborrow-from-mut.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6c7d82e1ca246e914e96beb1874a75f7306ac9dd/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reborrow-from-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c7d82e1ca246e914e96beb1874a75f7306ac9dd/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reborrow-from-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reborrow-from-mut.stderr?ref=6c7d82e1ca246e914e96beb1874a75f7306ac9dd", "patch": "@@ -5,6 +5,7 @@ LL |     let _bar1 = &mut foo.bar1;\n    |                      -------- first mutable borrow occurs here\n LL |     let _bar2 = &mut foo.bar1;  //~ ERROR cannot borrow\n    |                      ^^^^^^^^ second mutable borrow occurs here\n+LL |     use_mut(_bar1);\n LL | }\n    | - first borrow ends here\n \n@@ -15,6 +16,7 @@ LL |     let _bar1 = &mut foo.bar1;\n    |                      -------- mutable borrow occurs here\n LL |     let _bar2 = &foo.bar1;  //~ ERROR cannot borrow\n    |                  ^^^^^^^^ immutable borrow occurs here\n+LL |     use_mut(_bar1);\n LL | }\n    | - mutable borrow ends here\n \n@@ -25,6 +27,7 @@ LL |     let _bar1 = &foo.bar1;\n    |                  -------- immutable borrow occurs here\n LL |     let _bar2 = &mut foo.bar1;  //~ ERROR cannot borrow\n    |                      ^^^^^^^^ mutable borrow occurs here\n+LL |     use_imm(_bar1);\n LL | }\n    | - immutable borrow ends here\n \n@@ -47,7 +50,7 @@ LL |     let _bar1 = &mut foo.bar1.int1;\n    |                      ------------- mutable borrow occurs here\n LL |     let _foo1 = &foo.bar1; //~ ERROR cannot borrow\n    |                  ^^^^^^^^ immutable borrow occurs here\n-LL |     let _foo2 = &*foo; //~ ERROR cannot borrow\n+...\n LL | }\n    | - mutable borrow ends here\n \n@@ -59,6 +62,7 @@ LL |     let _bar1 = &mut foo.bar1.int1;\n LL |     let _foo1 = &foo.bar1; //~ ERROR cannot borrow\n LL |     let _foo2 = &*foo; //~ ERROR cannot borrow\n    |                  ^^^^ immutable borrow occurs here\n+LL |     use_mut(_bar1);\n LL | }\n    | - mutable borrow ends here\n \n@@ -69,6 +73,7 @@ LL |     let _bar1 = &mut foo.bar1.int1;\n    |                      ------------- first mutable borrow occurs here\n LL |     let _foo1 = &mut foo.bar1; //~ ERROR cannot borrow\n    |                      ^^^^^^^^ second mutable borrow occurs here\n+LL |     use_mut(_bar1);\n LL | }\n    | - first borrow ends here\n \n@@ -79,6 +84,7 @@ LL |     let _bar1 = &mut foo.bar1.int1;\n    |                      ------------- first mutable borrow occurs here\n LL |     let _foo2 = &mut *foo; //~ ERROR cannot borrow\n    |                      ^^^^ second mutable borrow occurs here\n+LL |     use_mut(_bar1);\n LL | }\n    | - first borrow ends here\n \n@@ -89,6 +95,7 @@ LL |     let _bar1 = &foo.bar1.int1;\n    |                  ------------- immutable borrow occurs here\n LL |     let _foo1 = &mut foo.bar1; //~ ERROR cannot borrow\n    |                      ^^^^^^^^ mutable borrow occurs here\n+LL |     use_imm(_bar1);\n LL | }\n    | - immutable borrow ends here\n \n@@ -99,6 +106,7 @@ LL |     let _bar1 = &foo.bar1.int1;\n    |                  ------------- immutable borrow occurs here\n LL |     let _foo2 = &mut *foo; //~ ERROR cannot borrow\n    |                      ^^^^ mutable borrow occurs here\n+LL |     use_imm(_bar1);\n LL | }\n    | - immutable borrow ends here\n "}]}