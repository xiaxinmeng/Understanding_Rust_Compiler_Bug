{"sha": "87c820573a0ed8733523bb697a78021620a9bf94", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3YzgyMDU3M2EwZWQ4NzMzNTIzYmI2OTdhNzgwMjE2MjBhOWJmOTQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-08-03T23:05:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-03T23:05:50Z"}, "message": "Rollup merge of #87267 - dtolnay:negspace, r=Aaron1011\n\nRemove space after negative sign in Literal to_string\n\nNegative proc macro literal tokens used to be printed with a space between the minus sign and the magnitude. That's because `impl ToString for Literal` used to convert the Literal into a TokenStream, which splits the minus sign into a separate Punct token.\n\n```rust\nLiteral::isize_unsuffixed(-10).to_string()  // \"- 10\"\n```\n\nThis PR updates the ToString impl to directly use `rustc_ast::token::Lit`'s ToString, which matches the way Rust negative numbers are idiomatically written without a space.\n\n```rust\nLiteral::isize_unsuffixed(-10).to_string()  // \"-10\"\n```", "tree": {"sha": "34cf10d227c9af4757ec40f1fdb75916e0372ff0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34cf10d227c9af4757ec40f1fdb75916e0372ff0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87c820573a0ed8733523bb697a78021620a9bf94", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhCcvPCRBK7hj4Ov3rIwAAx/cIAAtJu9tbGj9MxW/kl92e02od\ny+Gb3EZoWK1VdnBXgCT7euoAZCuI+Q9+5KVA0ZdVFlUpDkkiiv7eIfvsMn8ynZ+C\n4SAn2oG2bNz5tDp+SSWdp+UgOcUv/xRJSTVxKUT0d4pZlWHja2Ritqjk13RFJ88i\nPGORnr6S77fNvsFLfiT2J4sJu2MIwyBpbBBrE3HG2Tt6t2urb0GHWkbEvj8al2hE\nBEzkA+Tw8cCXE0lcbF+JbULqMY8mMrrm/thWiJEbUzogRXv6An8Kdag/onr9/0WR\n/v9jBfgiwVYO31Dne5x+Uwy7AhksNA+F4JrQajMTnuLUo9OpgFJGR+C241NLdAg=\n=gcrK\n-----END PGP SIGNATURE-----\n", "payload": "tree 34cf10d227c9af4757ec40f1fdb75916e0372ff0\nparent ad74828b506866a96c6b25501f64b1262a5693f8\nparent 3744dc868793e42200c5221ba4496ef5c17b8899\nauthor Yuki Okushi <jtitor@2k36.org> 1628031950 +0900\ncommitter GitHub <noreply@github.com> 1628031950 +0900\n\nRollup merge of #87267 - dtolnay:negspace, r=Aaron1011\n\nRemove space after negative sign in Literal to_string\n\nNegative proc macro literal tokens used to be printed with a space between the minus sign and the magnitude. That's because `impl ToString for Literal` used to convert the Literal into a TokenStream, which splits the minus sign into a separate Punct token.\n\n```rust\nLiteral::isize_unsuffixed(-10).to_string()  // \"- 10\"\n```\n\nThis PR updates the ToString impl to directly use `rustc_ast::token::Lit`'s ToString, which matches the way Rust negative numbers are idiomatically written without a space.\n\n```rust\nLiteral::isize_unsuffixed(-10).to_string()  // \"-10\"\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87c820573a0ed8733523bb697a78021620a9bf94", "html_url": "https://github.com/rust-lang/rust/commit/87c820573a0ed8733523bb697a78021620a9bf94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87c820573a0ed8733523bb697a78021620a9bf94/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad74828b506866a96c6b25501f64b1262a5693f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad74828b506866a96c6b25501f64b1262a5693f8", "html_url": "https://github.com/rust-lang/rust/commit/ad74828b506866a96c6b25501f64b1262a5693f8"}, {"sha": "3744dc868793e42200c5221ba4496ef5c17b8899", "url": "https://api.github.com/repos/rust-lang/rust/commits/3744dc868793e42200c5221ba4496ef5c17b8899", "html_url": "https://github.com/rust-lang/rust/commit/3744dc868793e42200c5221ba4496ef5c17b8899"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "42ae8e972c274ee8c61a703842d53fae2731a7b3", "filename": "compiler/rustc_expand/src/proc_macro_server.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/87c820573a0ed8733523bb697a78021620a9bf94/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87c820573a0ed8733523bb697a78021620a9bf94/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs?ref=87c820573a0ed8733523bb697a78021620a9bf94", "patch": "@@ -582,6 +582,9 @@ impl server::Literal for Rustc<'_> {\n \n         Ok(Literal { lit, span: self.call_site })\n     }\n+    fn to_string(&mut self, literal: &Self::Literal) -> String {\n+        literal.lit.to_string()\n+    }\n     fn debug_kind(&mut self, literal: &Self::Literal) -> String {\n         format!(\"{:?}\", literal.lit.kind)\n     }"}, {"sha": "7001e827ad8456778b1225f190a2fcdf596551d2", "filename": "library/proc_macro/src/bridge/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/87c820573a0ed8733523bb697a78021620a9bf94/library%2Fproc_macro%2Fsrc%2Fbridge%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87c820573a0ed8733523bb697a78021620a9bf94/library%2Fproc_macro%2Fsrc%2Fbridge%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Fbridge%2Fmod.rs?ref=87c820573a0ed8733523bb697a78021620a9bf94", "patch": "@@ -109,6 +109,7 @@ macro_rules! with_api {\n                 fn drop($self: $S::Literal);\n                 fn clone($self: &$S::Literal) -> $S::Literal;\n                 fn from_str(s: &str) -> Result<$S::Literal, ()>;\n+                fn to_string($self: &$S::Literal) -> String;\n                 fn debug_kind($self: &$S::Literal) -> String;\n                 fn symbol($self: &$S::Literal) -> String;\n                 fn suffix($self: &$S::Literal) -> Option<String>;"}, {"sha": "46f564199d0c291504c9267165190b02e86f7715", "filename": "library/proc_macro/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87c820573a0ed8733523bb697a78021620a9bf94/library%2Fproc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87c820573a0ed8733523bb697a78021620a9bf94/library%2Fproc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Flib.rs?ref=87c820573a0ed8733523bb697a78021620a9bf94", "patch": "@@ -1195,7 +1195,7 @@ impl FromStr for Literal {\n #[stable(feature = \"proc_macro_lib\", since = \"1.15.0\")]\n impl ToString for Literal {\n     fn to_string(&self) -> String {\n-        TokenStream::from(TokenTree::from(self.clone())).to_string()\n+        self.0.to_string()\n     }\n }\n "}, {"sha": "93551ebaf82d598416d68dcc58bfea5953f904d2", "filename": "src/test/ui/proc-macro/auxiliary/api/parse.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/87c820573a0ed8733523bb697a78021620a9bf94/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fapi%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87c820573a0ed8733523bb697a78021620a9bf94/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fapi%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fapi%2Fparse.rs?ref=87c820573a0ed8733523bb697a78021620a9bf94", "patch": "@@ -6,8 +6,8 @@ pub fn test() {\n }\n \n fn test_display_literal() {\n-    assert_eq!(Literal::isize_unsuffixed(-10).to_string(), \"- 10\");\n-    assert_eq!(Literal::isize_suffixed(-10).to_string(), \"- 10isize\");\n+    assert_eq!(Literal::isize_unsuffixed(-10).to_string(), \"-10\");\n+    assert_eq!(Literal::isize_suffixed(-10).to_string(), \"-10isize\");\n }\n \n fn test_parse_literal() {\n@@ -18,7 +18,7 @@ fn test_parse_literal() {\n     assert_eq!(\"b\\\"\\\"\".parse::<Literal>().unwrap().to_string(), \"b\\\"\\\"\");\n     assert_eq!(\"r##\\\"\\\"##\".parse::<Literal>().unwrap().to_string(), \"r##\\\"\\\"##\");\n     assert_eq!(\"10ulong\".parse::<Literal>().unwrap().to_string(), \"10ulong\");\n-    assert_eq!(\"-10ulong\".parse::<Literal>().unwrap().to_string(), \"- 10ulong\");\n+    assert_eq!(\"-10ulong\".parse::<Literal>().unwrap().to_string(), \"-10ulong\");\n \n     assert!(\"true\".parse::<Literal>().is_err());\n     assert!(\".8\".parse::<Literal>().is_err());"}]}