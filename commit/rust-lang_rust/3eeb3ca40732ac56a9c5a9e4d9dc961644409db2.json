{"sha": "3eeb3ca40732ac56a9c5a9e4d9dc961644409db2", "node_id": "C_kwDOAAsO6NoAKDNlZWIzY2E0MDczMmFjNTZhOWM1YTllNGQ5ZGM5NjE2NDQ0MDlkYjI", "commit": {"author": {"name": "Tavian Barnes", "email": "tavianator@tavianator.com", "date": "2022-01-14T19:19:09Z"}, "committer": {"name": "Tavian Barnes", "email": "tavianator@tavianator.com", "date": "2022-01-21T12:59:14Z"}, "message": "fs: Use readdir() instead of readdir_r() on Android\n\nBionic also guarantees that readdir() is thread-safe enough.", "tree": {"sha": "b2e5f538ca573a9f5e6fe215f2e5c49270bb67b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2e5f538ca573a9f5e6fe215f2e5c49270bb67b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3eeb3ca40732ac56a9c5a9e4d9dc961644409db2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3eeb3ca40732ac56a9c5a9e4d9dc961644409db2", "html_url": "https://github.com/rust-lang/rust/commit/3eeb3ca40732ac56a9c5a9e4d9dc961644409db2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3eeb3ca40732ac56a9c5a9e4d9dc961644409db2/comments", "author": {"login": "tavianator", "id": 1692591, "node_id": "MDQ6VXNlcjE2OTI1OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1692591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tavianator", "html_url": "https://github.com/tavianator", "followers_url": "https://api.github.com/users/tavianator/followers", "following_url": "https://api.github.com/users/tavianator/following{/other_user}", "gists_url": "https://api.github.com/users/tavianator/gists{/gist_id}", "starred_url": "https://api.github.com/users/tavianator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tavianator/subscriptions", "organizations_url": "https://api.github.com/users/tavianator/orgs", "repos_url": "https://api.github.com/users/tavianator/repos", "events_url": "https://api.github.com/users/tavianator/events{/privacy}", "received_events_url": "https://api.github.com/users/tavianator/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tavianator", "id": 1692591, "node_id": "MDQ6VXNlcjE2OTI1OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1692591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tavianator", "html_url": "https://github.com/tavianator", "followers_url": "https://api.github.com/users/tavianator/followers", "following_url": "https://api.github.com/users/tavianator/following{/other_user}", "gists_url": "https://api.github.com/users/tavianator/gists{/gist_id}", "starred_url": "https://api.github.com/users/tavianator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tavianator/subscriptions", "organizations_url": "https://api.github.com/users/tavianator/orgs", "repos_url": "https://api.github.com/users/tavianator/repos", "events_url": "https://api.github.com/users/tavianator/events{/privacy}", "received_events_url": "https://api.github.com/users/tavianator/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc04a4eac47dcdc9feb3061dcc683e9d420227ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc04a4eac47dcdc9feb3061dcc683e9d420227ab", "html_url": "https://github.com/rust-lang/rust/commit/bc04a4eac47dcdc9feb3061dcc683e9d420227ab"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "1617188ca60fad63bae871c6d672c010d7c2d0cb", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3eeb3ca40732ac56a9c5a9e4d9dc961644409db2/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eeb3ca40732ac56a9c5a9e4d9dc961644409db2/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=3eeb3ca40732ac56a9c5a9e4d9dc961644409db2", "patch": "@@ -35,6 +35,7 @@ use libc::dirfd;\n #[cfg(any(target_os = \"linux\", target_os = \"emscripten\"))]\n use libc::fstatat64;\n #[cfg(any(\n+    target_os = \"android\",\n     target_os = \"solaris\",\n     target_os = \"fuchsia\",\n     target_os = \"redox\",\n@@ -46,6 +47,7 @@ use libc::readdir64;\n #[cfg(any(target_os = \"emscripten\", target_os = \"l4re\"))]\n use libc::readdir64_r;\n #[cfg(not(any(\n+    target_os = \"android\",\n     target_os = \"linux\",\n     target_os = \"emscripten\",\n     target_os = \"solaris\",\n@@ -211,6 +213,7 @@ struct InnerReadDir {\n pub struct ReadDir {\n     inner: Arc<InnerReadDir>,\n     #[cfg(not(any(\n+        target_os = \"android\",\n         target_os = \"linux\",\n         target_os = \"solaris\",\n         target_os = \"illumos\",\n@@ -232,6 +235,7 @@ pub struct DirEntry {\n     // readdir() (not readdir_r()), because a) struct dirent may use a flexible\n     // array to store the name, b) it lives only until the next readdir() call.\n     #[cfg(any(\n+        target_os = \"android\",\n         target_os = \"linux\",\n         target_os = \"solaris\",\n         target_os = \"illumos\",\n@@ -459,6 +463,7 @@ impl Iterator for ReadDir {\n     type Item = io::Result<DirEntry>;\n \n     #[cfg(any(\n+        target_os = \"android\",\n         target_os = \"linux\",\n         target_os = \"solaris\",\n         target_os = \"fuchsia\",\n@@ -498,6 +503,7 @@ impl Iterator for ReadDir {\n     }\n \n     #[cfg(not(any(\n+        target_os = \"android\",\n         target_os = \"linux\",\n         target_os = \"solaris\",\n         target_os = \"fuchsia\",\n@@ -665,6 +671,7 @@ impl DirEntry {\n     }\n \n     #[cfg(not(any(\n+        target_os = \"android\",\n         target_os = \"linux\",\n         target_os = \"solaris\",\n         target_os = \"illumos\",\n@@ -675,6 +682,7 @@ impl DirEntry {\n         unsafe { CStr::from_ptr(self.entry.d_name.as_ptr()) }\n     }\n     #[cfg(any(\n+        target_os = \"android\",\n         target_os = \"linux\",\n         target_os = \"solaris\",\n         target_os = \"illumos\",\n@@ -1086,6 +1094,7 @@ pub fn readdir(p: &Path) -> io::Result<ReadDir> {\n             Ok(ReadDir {\n                 inner: Arc::new(inner),\n                 #[cfg(not(any(\n+                    target_os = \"android\",\n                     target_os = \"linux\",\n                     target_os = \"solaris\",\n                     target_os = \"illumos\",\n@@ -1622,6 +1631,7 @@ mod remove_dir_impl {\n             ReadDir {\n                 inner: Arc::new(InnerReadDir { dirp, root: dummy_root }),\n                 #[cfg(not(any(\n+                    target_os = \"android\",\n                     target_os = \"linux\",\n                     target_os = \"solaris\",\n                     target_os = \"illumos\","}]}