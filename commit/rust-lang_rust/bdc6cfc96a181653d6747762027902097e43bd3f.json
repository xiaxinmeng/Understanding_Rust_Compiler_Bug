{"sha": "bdc6cfc96a181653d6747762027902097e43bd3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkYzZjZmM5NmExODE2NTNkNjc0Nzc2MjAyNzkwMjA5N2U0M2JkM2Y=", "commit": {"author": {"name": "Baoshan Pang", "email": "baoshan.pang@windriver.com", "date": "2019-09-05T18:26:29Z"}, "committer": {"name": "Baoshan Pang", "email": "baoshan.pang@windriver.com", "date": "2019-09-05T21:00:26Z"}, "message": "simplify is_vxworks_pure_dynamic", "tree": {"sha": "27222553812d4eef26294de6986407c3f968f1b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27222553812d4eef26294de6986407c3f968f1b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdc6cfc96a181653d6747762027902097e43bd3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdc6cfc96a181653d6747762027902097e43bd3f", "html_url": "https://github.com/rust-lang/rust/commit/bdc6cfc96a181653d6747762027902097e43bd3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdc6cfc96a181653d6747762027902097e43bd3f/comments", "author": {"login": "bpangWR", "id": 53950092, "node_id": "MDQ6VXNlcjUzOTUwMDky", "avatar_url": "https://avatars.githubusercontent.com/u/53950092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpangWR", "html_url": "https://github.com/bpangWR", "followers_url": "https://api.github.com/users/bpangWR/followers", "following_url": "https://api.github.com/users/bpangWR/following{/other_user}", "gists_url": "https://api.github.com/users/bpangWR/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpangWR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpangWR/subscriptions", "organizations_url": "https://api.github.com/users/bpangWR/orgs", "repos_url": "https://api.github.com/users/bpangWR/repos", "events_url": "https://api.github.com/users/bpangWR/events{/privacy}", "received_events_url": "https://api.github.com/users/bpangWR/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bpangWR", "id": 53950092, "node_id": "MDQ6VXNlcjUzOTUwMDky", "avatar_url": "https://avatars.githubusercontent.com/u/53950092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpangWR", "html_url": "https://github.com/bpangWR", "followers_url": "https://api.github.com/users/bpangWR/followers", "following_url": "https://api.github.com/users/bpangWR/following{/other_user}", "gists_url": "https://api.github.com/users/bpangWR/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpangWR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpangWR/subscriptions", "organizations_url": "https://api.github.com/users/bpangWR/orgs", "repos_url": "https://api.github.com/users/bpangWR/repos", "events_url": "https://api.github.com/users/bpangWR/events{/privacy}", "received_events_url": "https://api.github.com/users/bpangWR/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a6f7b4ac983537e10fbc4213475e920bd537102", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a6f7b4ac983537e10fbc4213475e920bd537102", "html_url": "https://github.com/rust-lang/rust/commit/3a6f7b4ac983537e10fbc4213475e920bd537102"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "26fdfe9d1ef1b05bf7074edc9f376a2e26422531", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bdc6cfc96a181653d6747762027902097e43bd3f/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdc6cfc96a181653d6747762027902097e43bd3f/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=bdc6cfc96a181653d6747762027902097e43bd3f", "patch": "@@ -1733,14 +1733,7 @@ impl<'test> TestCx<'test> {\n     }\n \n     fn is_vxworks_pure_dynamic(&self) -> bool {\n-        if self.config.target.contains(\"vxworks\") {\n-            match env::var(\"RUST_VXWORKS_TEST_DYLINK\") {\n-                Ok(s) => s == \"1\",\n-                _ => false\n-            }\n-        } else {\n-            false\n-        }\n+        self.config.target.contains(\"vxworks\") && !self.is_vxworks_pure_static()\n     }\n \n     fn compose_and_run_compiler(&self, mut rustc: Command, input: Option<String>) -> ProcRes {"}]}