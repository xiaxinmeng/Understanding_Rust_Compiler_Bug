{"sha": "1aba42128f79993a092a8c0b3747acdc8f1b1be7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhYmE0MjEyOGY3OTk5M2EwOTJhOGMwYjM3NDdhY2RjOGYxYjFiZTc=", "commit": {"author": {"name": "Erlend Tobiassen", "email": "erlend.tobiassen@gmail.com", "date": "2019-01-22T00:25:00Z"}, "committer": {"name": "Erlend Tobiassen", "email": "erlend.tobiassen@gmail.com", "date": "2019-01-22T00:25:00Z"}, "message": "Don't leave a marker hanging without completing it.", "tree": {"sha": "46d6267cc0aa0580ba58607f822d7c1352b6d60b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46d6267cc0aa0580ba58607f822d7c1352b6d60b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1aba42128f79993a092a8c0b3747acdc8f1b1be7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1aba42128f79993a092a8c0b3747acdc8f1b1be7", "html_url": "https://github.com/rust-lang/rust/commit/1aba42128f79993a092a8c0b3747acdc8f1b1be7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1aba42128f79993a092a8c0b3747acdc8f1b1be7/comments", "author": {"login": "regiontog", "id": 9137819, "node_id": "MDQ6VXNlcjkxMzc4MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/9137819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regiontog", "html_url": "https://github.com/regiontog", "followers_url": "https://api.github.com/users/regiontog/followers", "following_url": "https://api.github.com/users/regiontog/following{/other_user}", "gists_url": "https://api.github.com/users/regiontog/gists{/gist_id}", "starred_url": "https://api.github.com/users/regiontog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regiontog/subscriptions", "organizations_url": "https://api.github.com/users/regiontog/orgs", "repos_url": "https://api.github.com/users/regiontog/repos", "events_url": "https://api.github.com/users/regiontog/events{/privacy}", "received_events_url": "https://api.github.com/users/regiontog/received_events", "type": "User", "site_admin": false}, "committer": {"login": "regiontog", "id": 9137819, "node_id": "MDQ6VXNlcjkxMzc4MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/9137819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regiontog", "html_url": "https://github.com/regiontog", "followers_url": "https://api.github.com/users/regiontog/followers", "following_url": "https://api.github.com/users/regiontog/following{/other_user}", "gists_url": "https://api.github.com/users/regiontog/gists{/gist_id}", "starred_url": "https://api.github.com/users/regiontog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regiontog/subscriptions", "organizations_url": "https://api.github.com/users/regiontog/orgs", "repos_url": "https://api.github.com/users/regiontog/repos", "events_url": "https://api.github.com/users/regiontog/events{/privacy}", "received_events_url": "https://api.github.com/users/regiontog/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1059ec74e2147559b43aab9b12f84849319910cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/1059ec74e2147559b43aab9b12f84849319910cc", "html_url": "https://github.com/rust-lang/rust/commit/1059ec74e2147559b43aab9b12f84849319910cc"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "f33ec10f538330714fcb55ea9e903e55227a1408", "filename": "crates/ra_syntax/src/grammar/type_params.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1aba42128f79993a092a8c0b3747acdc8f1b1be7/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftype_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1aba42128f79993a092a8c0b3747acdc8f1b1be7/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftype_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftype_params.rs?ref=1aba42128f79993a092a8c0b3747acdc8f1b1be7", "patch": "@@ -118,7 +118,7 @@ pub(super) fn opt_where_clause(p: &mut Parser) {\n             }\n \n             if !comma {\n-                p.error(\"expected comma\")\n+                p.error(\"expected comma\");\n             }\n         }\n     }\n@@ -143,7 +143,6 @@ fn where_predicate(p: &mut Parser) {\n         }\n         IMPL_KW => {\n             p.error(\"expected lifetime or type\");\n-            return;\n         }\n         _ => {\n             types::type_(p);"}]}