{"sha": "453affaaa1762a065d2857970b8333017211208c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1M2FmZmFhYTE3NjJhMDY1ZDI4NTc5NzBiODMzMzAxNzIxMTIwOGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-31T16:04:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-31T16:04:22Z"}, "message": "Auto merge of #1820 - Aaron1011:rustup-const-err, r=RalfJung\n\nRustup for const_err changes", "tree": {"sha": "048a9d8fddd70edd391af8b3887dd217f5a31bbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/048a9d8fddd70edd391af8b3887dd217f5a31bbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/453affaaa1762a065d2857970b8333017211208c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/453affaaa1762a065d2857970b8333017211208c", "html_url": "https://github.com/rust-lang/rust/commit/453affaaa1762a065d2857970b8333017211208c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/453affaaa1762a065d2857970b8333017211208c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "178ae8e44c5ecbe7445772a499679f62efd54a91", "url": "https://api.github.com/repos/rust-lang/rust/commits/178ae8e44c5ecbe7445772a499679f62efd54a91", "html_url": "https://github.com/rust-lang/rust/commit/178ae8e44c5ecbe7445772a499679f62efd54a91"}, {"sha": "73700bc01c25c4bdf08a99803eee09ea4ca32fac", "url": "https://api.github.com/repos/rust-lang/rust/commits/73700bc01c25c4bdf08a99803eee09ea4ca32fac", "html_url": "https://github.com/rust-lang/rust/commit/73700bc01c25c4bdf08a99803eee09ea4ca32fac"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "089b4f55511b9a84d3fbece0421a0f846f0bfa7c", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/453affaaa1762a065d2857970b8333017211208c/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/453affaaa1762a065d2857970b8333017211208c/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=453affaaa1762a065d2857970b8333017211208c", "patch": "@@ -1 +1 @@\n-ce0d64e03ef9875e0935bb60e989542b7ec29579\n+d9feaaa548ce380159a1de68f4f6e605db9a9fc5"}, {"sha": "456b6fb4d419e11ebec2605c3cf878ff504ef335", "filename": "src/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/453affaaa1762a065d2857970b8333017211208c/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/453affaaa1762a065d2857970b8333017211208c/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=453affaaa1762a065d2857970b8333017211208c", "patch": "@@ -84,8 +84,10 @@ pub fn report_error<'tcx, 'mir>(\n                     \"resource exhaustion\",\n                 InvalidProgram(InvalidProgramInfo::ReferencedConstant) =>\n                     \"post-monomorphization error\",\n-                _ =>\n-                    bug!(\"This error should be impossible in Miri: {}\", e),\n+                InvalidProgram(InvalidProgramInfo::AlreadyReported(_)) =>\n+                    \"error occurred\",\n+                kind =>\n+                    bug!(\"This error should be impossible in Miri: {:?}\", kind),\n             };\n             #[rustfmt::skip]\n             let helps = match e.kind() {"}, {"sha": "f193dee94ebc1e87378f19c4dfe3c97ce9dd1e16", "filename": "tests/compile-fail/erroneous_const.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/453affaaa1762a065d2857970b8333017211208c/tests%2Fcompile-fail%2Ferroneous_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/453affaaa1762a065d2857970b8333017211208c/tests%2Fcompile-fail%2Ferroneous_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ferroneous_const.rs?ref=453affaaa1762a065d2857970b8333017211208c", "patch": "@@ -8,13 +8,12 @@\n \n struct PrintName<T>(T);\n impl<T> PrintName<T> {\n-    const VOID: ! = panic!(); //~WARN any use of this value will cause an error\n-    //~^ WARN this was previously accepted\n+    const VOID: ! = panic!(); //~ERROR any use of this value will cause an error\n }\n \n fn no_codegen<T>() {\n     if false {\n-        let _ = PrintName::<T>::VOID; //~ERROR referenced constant has errors\n+        let _ = PrintName::<T>::VOID; //~ERROR error occurred: encountered constant\n     }\n }\n fn main() {"}]}