{"sha": "dd732e5862ba4601959bbae7993eb4924ddf8ee6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNzMyZTU4NjJiYTQ2MDE5NTliYmFlNzk5M2ViNDkyNGRkZjhlZTY=", "commit": {"author": {"name": "Christian Poveda", "email": "cpovedar@fnal.gov", "date": "2019-06-22T14:25:16Z"}, "committer": {"name": "Christian Poveda", "email": "cpovedar@fnal.gov", "date": "2019-06-22T14:25:16Z"}, "message": "Force intptrcast for binary operations", "tree": {"sha": "d47d208167b56c99911c8c05c69a7f1dff4d68d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d47d208167b56c99911c8c05c69a7f1dff4d68d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd732e5862ba4601959bbae7993eb4924ddf8ee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd732e5862ba4601959bbae7993eb4924ddf8ee6", "html_url": "https://github.com/rust-lang/rust/commit/dd732e5862ba4601959bbae7993eb4924ddf8ee6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd732e5862ba4601959bbae7993eb4924ddf8ee6/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e57447014d0cc8ab9ec86c30bc94e48c588d4526", "url": "https://api.github.com/repos/rust-lang/rust/commits/e57447014d0cc8ab9ec86c30bc94e48c588d4526", "html_url": "https://github.com/rust-lang/rust/commit/e57447014d0cc8ab9ec86c30bc94e48c588d4526"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "17b20d003e93d0d14f040538053473ce2440e1a2", "filename": "src/lib.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/dd732e5862ba4601959bbae7993eb4924ddf8ee6/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd732e5862ba4601959bbae7993eb4924ddf8ee6/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=dd732e5862ba4601959bbae7993eb4924ddf8ee6", "patch": "@@ -637,26 +637,28 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n \n         let alloc = memory.get(ptr.alloc_id)?;\n \n-        let base_addr = match alloc.extra.base_addr.borrow().clone() { \n-            Some(base_addr) => base_addr,\n+        let mut base_addr = alloc.extra.base_addr.borrow_mut();\n+        \n+        let addr = match *base_addr { \n+            Some(addr) => addr,\n             None => {\n-                let base_addr = extra.addr;\n+                let addr = extra.addr;\n                 extra.addr += alloc.bytes.len() as u64;\n \n-                *alloc.extra.base_addr.borrow_mut() = Some(base_addr);\n+                *base_addr = Some(addr);\n \n-                let elem = (base_addr, ptr.alloc_id);\n+                let elem = (addr, ptr.alloc_id);\n \n                 if let Err(pos) = extra.vec.binary_search(&elem) {\n                     extra.vec.insert(pos, elem);\n                 } else {\n                     return err!(Unreachable);\n                 }\n \n-                base_addr\n+                addr\n             }\n         };\n \n-        Ok(base_addr + ptr.offset.bytes())\n+        Ok(addr + ptr.offset.bytes())\n     }\n }"}, {"sha": "7dd3b3526cdc0604878387b40cf62c3947d6231d", "filename": "src/operator.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd732e5862ba4601959bbae7993eb4924ddf8ee6/src%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd732e5862ba4601959bbae7993eb4924ddf8ee6/src%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foperator.rs?ref=dd732e5862ba4601959bbae7993eb4924ddf8ee6", "patch": "@@ -44,6 +44,16 @@ impl<'mir, 'tcx> EvalContextExt<'tcx> for super::MiriEvalContext<'mir, 'tcx> {\n \n         trace!(\"ptr_op: {:?} {:?} {:?}\", *left, bin_op, *right);\n \n+        if self.memory().extra.seed.is_some() && bin_op != Offset {\n+            let l_bits = self.force_bits(left.imm.to_scalar()?, left.layout.size)?;\n+            let r_bits = self.force_bits(right.imm.to_scalar()?, right.layout.size)?;\n+            \n+            let left = ImmTy::from_scalar(Scalar::from_uint(l_bits, left.layout.size), left.layout);\n+            let right = ImmTy::from_scalar(Scalar::from_uint(r_bits, left.layout.size), right.layout);\n+\n+            return self.binary_op(bin_op, left, right);\n+        } \n+\n         // Operations that support fat pointers\n         match bin_op {\n             Eq | Ne => {"}, {"sha": "7c49af87f88653c6a22d92cf8354338ec8f60cda", "filename": "tests/run-pass/intptrcast-truncate.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dd732e5862ba4601959bbae7993eb4924ddf8ee6/tests%2Frun-pass%2Fintptrcast-truncate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd732e5862ba4601959bbae7993eb4924ddf8ee6/tests%2Frun-pass%2Fintptrcast-truncate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fintptrcast-truncate.rs?ref=dd732e5862ba4601959bbae7993eb4924ddf8ee6", "patch": "@@ -0,0 +1,8 @@\n+// compile-flags: -Zmiri-seed=0000000000000000\n+\n+fn main() {\n+    let x = &42 as *const i32 as usize; \n+    let y = x * 2;\n+    let z = y as u8 as usize;\n+    assert_eq!(z, y % 256);\n+}"}]}