{"sha": "7afb56f51e52030fbdda07c38f9ae09a1daeed9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhZmI1NmY1MWU1MjAzMGZiZGRhMDdjMzhmOWFlMDlhMWRhZWVkOWY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-01-06T19:21:28Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-02-06T20:56:31Z"}, "message": "Add emscripten support to compiletest", "tree": {"sha": "83257dd207b6d5636ce4a24aedb03df23a8e54d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83257dd207b6d5636ce4a24aedb03df23a8e54d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7afb56f51e52030fbdda07c38f9ae09a1daeed9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7afb56f51e52030fbdda07c38f9ae09a1daeed9f", "html_url": "https://github.com/rust-lang/rust/commit/7afb56f51e52030fbdda07c38f9ae09a1daeed9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7afb56f51e52030fbdda07c38f9ae09a1daeed9f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd3fe498e5d1587e8081607731113593cee1c0dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd3fe498e5d1587e8081607731113593cee1c0dc", "html_url": "https://github.com/rust-lang/rust/commit/bd3fe498e5d1587e8081607731113593cee1c0dc"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "ada6ea200d1d567f92a4ceff0e8c89f6b6b9bb87", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7afb56f51e52030fbdda07c38f9ae09a1daeed9f/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7afb56f51e52030fbdda07c38f9ae09a1daeed9f/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=7afb56f51e52030fbdda07c38f9ae09a1daeed9f", "patch": "@@ -1357,7 +1357,12 @@ fn make_lib_name(config: &Config, auxfile: &Path, testfile: &Path) -> PathBuf {\n \n fn make_exe_name(config: &Config, testfile: &Path) -> PathBuf {\n     let mut f = output_base_name(config, testfile);\n-    if !env::consts::EXE_SUFFIX.is_empty() {\n+    // FIXME: This is using the host architecture exe suffix, not target!\n+    if config.target == \"asmjs-unknown-emscripten\" {\n+        let mut fname = f.file_name().unwrap().to_os_string();\n+        fname.push(\".js\");\n+        f.set_file_name(&fname);\n+    } else if !env::consts::EXE_SUFFIX.is_empty() {\n         let mut fname = f.file_name().unwrap().to_os_string();\n         fname.push(env::consts::EXE_SUFFIX);\n         f.set_file_name(&fname);\n@@ -1370,6 +1375,12 @@ fn make_run_args(config: &Config, props: &TestProps, testfile: &Path)\n     // If we've got another tool to run under (valgrind),\n     // then split apart its command\n     let mut args = split_maybe_args(&config.runtool);\n+\n+    // If this is emscripten, then run tests under nodejs\n+    if config.target == \"asmjs-unknown-emscripten\" {\n+        args.push(\"nodejs\".to_owned());\n+    }\n+\n     let exe_file = make_exe_name(config, testfile);\n \n     // FIXME (#9639): This needs to handle non-utf8 paths"}, {"sha": "69b839c5b7d9d0e94cdf58623574ef3ecd8e9dc3", "filename": "src/compiletest/util.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7afb56f51e52030fbdda07c38f9ae09a1daeed9f/src%2Fcompiletest%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7afb56f51e52030fbdda07c38f9ae09a1daeed9f/src%2Fcompiletest%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Futil.rs?ref=7afb56f51e52030fbdda07c38f9ae09a1daeed9f", "patch": "@@ -26,6 +26,7 @@ const OS_TABLE: &'static [(&'static str, &'static str)] = &[\n     (\"win32\", \"windows\"),\n     (\"windows\", \"windows\"),\n     (\"solaris\", \"solaris\"),\n+    (\"emscripten\", \"emscripten\"),\n ];\n \n const ARCH_TABLE: &'static [(&'static str, &'static str)] = &[\n@@ -44,6 +45,7 @@ const ARCH_TABLE: &'static [(&'static str, &'static str)] = &[\n     (\"sparc\", \"sparc\"),\n     (\"x86_64\", \"x86_64\"),\n     (\"xcore\", \"xcore\"),\n+    (\"asmjs\", \"asmjs\"),\n ];\n \n pub fn get_os(triple: &str) -> &'static str {"}]}