{"sha": "78a16443a3f9b617b83c1dda15b94b3636c2895d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4YTE2NDQzYTNmOWI2MTdiODNjMWRkYTE1Yjk0YjM2MzZjMjg5NWQ=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2018-05-30T20:48:20Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2018-06-12T18:50:21Z"}, "message": "Respect -Z no-verify during LTO\n\nCurrently -Z no-verify only controls IR verification prior to\nLLVM codegen, while verification is performed unconditionally\nboth before and after linking with (Thin)LTO.", "tree": {"sha": "af88d61150eeb0b090b0e60dc638839354f0b50e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af88d61150eeb0b090b0e60dc638839354f0b50e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78a16443a3f9b617b83c1dda15b94b3636c2895d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78a16443a3f9b617b83c1dda15b94b3636c2895d", "html_url": "https://github.com/rust-lang/rust/commit/78a16443a3f9b617b83c1dda15b94b3636c2895d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78a16443a3f9b617b83c1dda15b94b3636c2895d/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef8cb40c9c03fe60aac47c8736045231633dbdac", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef8cb40c9c03fe60aac47c8736045231633dbdac", "html_url": "https://github.com/rust-lang/rust/commit/ef8cb40c9c03fe60aac47c8736045231633dbdac"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "415dd605220c2d37b21e3ad5c3083aa9079dca9f", "filename": "src/librustc_codegen_llvm/back/lto.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/78a16443a3f9b617b83c1dda15b94b3636c2895d/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78a16443a3f9b617b83c1dda15b94b3636c2895d/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs?ref=78a16443a3f9b617b83c1dda15b94b3636c2895d", "patch": "@@ -461,9 +461,12 @@ fn run_pass_manager(cgcx: &CodegenContext,\n     unsafe {\n         let pm = llvm::LLVMCreatePassManager();\n         llvm::LLVMRustAddAnalysisPasses(tm, pm, llmod);\n-        let pass = llvm::LLVMRustFindAndCreatePass(\"verify\\0\".as_ptr() as *const _);\n-        assert!(!pass.is_null());\n-        llvm::LLVMRustAddPass(pm, pass);\n+\n+        if !config.no_verify {\n+            let pass = llvm::LLVMRustFindAndCreatePass(\"verify\\0\".as_ptr() as *const _);\n+            assert!(!pass.is_null());\n+            llvm::LLVMRustAddPass(pm, pass);\n+        }\n \n         // When optimizing for LTO we don't actually pass in `-O0`, but we force\n         // it to always happen at least with `-O1`.\n@@ -494,9 +497,11 @@ fn run_pass_manager(cgcx: &CodegenContext,\n             }\n         });\n \n-        let pass = llvm::LLVMRustFindAndCreatePass(\"verify\\0\".as_ptr() as *const _);\n-        assert!(!pass.is_null());\n-        llvm::LLVMRustAddPass(pm, pass);\n+        if !config.no_verify {\n+            let pass = llvm::LLVMRustFindAndCreatePass(\"verify\\0\".as_ptr() as *const _);\n+            assert!(!pass.is_null());\n+            llvm::LLVMRustAddPass(pm, pass);\n+        }\n \n         time_ext(cgcx.time_passes, None, \"LTO passes\", ||\n              llvm::LLVMRunPassManager(pm, llmod));"}, {"sha": "b34dae98d7a3a9f5fc55b5f6960ae789cb163570", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78a16443a3f9b617b83c1dda15b94b3636c2895d/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78a16443a3f9b617b83c1dda15b94b3636c2895d/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=78a16443a3f9b617b83c1dda15b94b3636c2895d", "patch": "@@ -232,7 +232,7 @@ pub struct ModuleConfig {\n     emit_obj: bool,\n     // Miscellaneous flags.  These are mostly copied from command-line\n     // options.\n-    no_verify: bool,\n+    pub no_verify: bool,\n     no_prepopulate_passes: bool,\n     no_builtins: bool,\n     time_passes: bool,"}]}