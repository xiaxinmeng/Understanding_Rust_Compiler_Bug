{"sha": "a5cb3cca5ed28ccf865e7dbe74262e9744427bbe", "node_id": "C_kwDOAAsO6NoAKGE1Y2IzY2NhNWVkMjhjY2Y4NjVlN2RiZTc0MjYyZTk3NDQ0MjdiYmU", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2022-03-14T02:24:10Z"}, "committer": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2022-09-11T06:04:15Z"}, "message": "loosen restriction on when GeneratorWitness: Clone", "tree": {"sha": "d36b5c1d118077df47255cf268f829dc3e219120", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d36b5c1d118077df47255cf268f829dc3e219120"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5cb3cca5ed28ccf865e7dbe74262e9744427bbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5cb3cca5ed28ccf865e7dbe74262e9744427bbe", "html_url": "https://github.com/rust-lang/rust/commit/a5cb3cca5ed28ccf865e7dbe74262e9744427bbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5cb3cca5ed28ccf865e7dbe74262e9744427bbe/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0228c073e07bc36ab4dbb88ab7f3cbdf00832d59", "url": "https://api.github.com/repos/rust-lang/rust/commits/0228c073e07bc36ab4dbb88ab7f3cbdf00832d59", "html_url": "https://github.com/rust-lang/rust/commit/0228c073e07bc36ab4dbb88ab7f3cbdf00832d59"}], "stats": {"total": 30, "additions": 13, "deletions": 17}, "files": [{"sha": "5f9f9847b23823f56ec69afcbf6e12b9699ccbe3", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 13, "deletions": 17, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a5cb3cca5ed28ccf865e7dbe74262e9744427bbe/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5cb3cca5ed28ccf865e7dbe74262e9744427bbe/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=a5cb3cca5ed28ccf865e7dbe74262e9744427bbe", "patch": "@@ -1958,23 +1958,19 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             }\n \n             ty::GeneratorWitness(binder) => {\n-                match binder.no_bound_vars() {\n-                    Some(tys) => {\n-                        let mut iter = tys.iter();\n-                        loop {\n-                            let ty = match iter.next() {\n-                                Some(ty) => ty,\n-                                Option::None => {\n-                                    break Where(obligation.predicate.rebind(tys.to_vec()))\n-                                },\n-                            };\n-                            let resolved = self.infcx.shallow_resolve(ty);\n-                            if matches!(resolved.kind(), ty::Infer(ty::TyVar(_))) {\n-                                break Ambiguous;\n-                            }\n-                        }\n-                    },\n-                    Option::None => None,\n+                let tys = self.tcx().erase_late_bound_regions(binder);\n+                let mut iter = tys.iter();\n+                loop {\n+                    let ty = match iter.next() {\n+                        Some(ty) => ty,\n+                        Option::None => {\n+                            break Where(obligation.predicate.rebind(tys.to_vec()))\n+                        },\n+                    };\n+                    let resolved = self.infcx.shallow_resolve(ty);\n+                    if matches!(resolved.kind(), ty::Infer(ty::TyVar(_))) {\n+                        break Ambiguous;\n+                    }\n                 }\n             }\n "}]}