{"sha": "0e2b1b7b8fe484f439804432cdb2374db082c8e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMmIxYjdiOGZlNDg0ZjQzOTgwNDQzMmNkYjIzNzRkYjA4MmM4ZTQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-08T19:07:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-08T19:07:59Z"}, "message": "Merge #6768\n\n6768: Fix `concat!` with integer literals r=jonas-schievink a=jonas-schievink\n\nAddresses https://github.com/rust-analyzer/rust-analyzer/issues/6747#issuecomment-740778402\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "76fdb5b0f24175859183644a548b5232867e2f3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76fdb5b0f24175859183644a548b5232867e2f3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e2b1b7b8fe484f439804432cdb2374db082c8e4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfz88PCRBK7hj4Ov3rIwAAdHIIADQYFGyCZuLrdMF07MieneIR\npqee+rAcaRDAlLb7txLWYU5bMeggZvLu4NTvIgLFjaDq1wD0ZBy0JcSkvPVzSUda\nPFWUvi+R2sS4EBgAHsledcbDeDkPQVaj6OqqfukhEfZzN/C3X7DW5gshxw0WNFW1\n371ZATAssZsTQqr3y4q27yG3Pgeb9A/Cbi5CZJVDes2o7riA4Xy2Lfgi8vqZ5md+\n03dk6n8Plze3k0IUpSwtdh8gX0sFXaGSkSO5XM6krpWHvjIYeFVSzMRPYP/tW3fA\nVSYKAaO/tm3j2pNQFMKpxy4s+bp4RaZgbrZbIraM2aappEBOZ0W4EJl+pwmtwVM=\n=yFrO\n-----END PGP SIGNATURE-----\n", "payload": "tree 76fdb5b0f24175859183644a548b5232867e2f3f\nparent 9145b973c9a65614d0c6b6432021d402fa4abded\nparent bb28aef9184c98450b81ec7faca99a5c327619ea\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1607454479 +0000\ncommitter GitHub <noreply@github.com> 1607454479 +0000\n\nMerge #6768\n\n6768: Fix `concat!` with integer literals r=jonas-schievink a=jonas-schievink\n\nAddresses https://github.com/rust-analyzer/rust-analyzer/issues/6747#issuecomment-740778402\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e2b1b7b8fe484f439804432cdb2374db082c8e4", "html_url": "https://github.com/rust-lang/rust/commit/0e2b1b7b8fe484f439804432cdb2374db082c8e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e2b1b7b8fe484f439804432cdb2374db082c8e4/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9145b973c9a65614d0c6b6432021d402fa4abded", "url": "https://api.github.com/repos/rust-lang/rust/commits/9145b973c9a65614d0c6b6432021d402fa4abded", "html_url": "https://github.com/rust-lang/rust/commit/9145b973c9a65614d0c6b6432021d402fa4abded"}, {"sha": "bb28aef9184c98450b81ec7faca99a5c327619ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb28aef9184c98450b81ec7faca99a5c327619ea", "html_url": "https://github.com/rust-lang/rust/commit/bb28aef9184c98450b81ec7faca99a5c327619ea"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "79b970850481d8223f952026cea55b402fd9cf60", "filename": "crates/hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 34, "deletions": 8, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/0e2b1b7b8fe484f439804432cdb2374db082c8e4/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e2b1b7b8fe484f439804432cdb2374db082c8e4/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=0e2b1b7b8fe484f439804432cdb2374db082c8e4", "patch": "@@ -287,23 +287,34 @@ fn concat_expand(\n     _arg_id: EagerMacroId,\n     tt: &tt::Subtree,\n ) -> ExpandResult<Option<(tt::Subtree, FragmentKind)>> {\n+    let mut err = None;\n     let mut text = String::new();\n     for (i, t) in tt.token_trees.iter().enumerate() {\n         match t {\n             tt::TokenTree::Leaf(tt::Leaf::Literal(it)) if i % 2 == 0 => {\n-                text += &match unquote_str(&it) {\n-                    Some(s) => s,\n-                    None => {\n-                        return ExpandResult::only_err(mbe::ExpandError::ConversionError);\n-                    }\n-                };\n+                // concat works with string and char literals, so remove any quotes.\n+                // It also works with integer, float and boolean literals, so just use the rest\n+                // as-is.\n+\n+                text += it\n+                    .text\n+                    .trim_start_matches(|c| match c {\n+                        'r' | '#' | '\\'' | '\"' => true,\n+                        _ => false,\n+                    })\n+                    .trim_end_matches(|c| match c {\n+                        '#' | '\\'' | '\"' => true,\n+                        _ => false,\n+                    });\n             }\n             tt::TokenTree::Leaf(tt::Leaf::Punct(punct)) if i % 2 == 1 && punct.char == ',' => (),\n-            _ => return ExpandResult::only_err(mbe::ExpandError::UnexpectedToken),\n+            _ => {\n+                err.get_or_insert(mbe::ExpandError::UnexpectedToken);\n+            }\n         }\n     }\n \n-    ExpandResult::ok(Some((quote!(#text), FragmentKind::Expr)))\n+    ExpandResult { value: Some((quote!(#text), FragmentKind::Expr)), err }\n }\n \n fn relative_file(\n@@ -686,4 +697,19 @@ mod tests {\n \n         assert_eq!(expanded, r#\"b\"\"\"#);\n     }\n+\n+    #[test]\n+    fn test_concat_expand() {\n+        let expanded = expand_builtin_macro(\n+            r##\"\n+            #[rustc_builtin_macro]\n+            macro_rules! concat {}\n+            concat!(\"foo\", 0, r#\"bar\"#);\n+            \"##,\n+        );\n+\n+        assert_eq!(expanded, r#\"\"foo0bar\"\"#);\n+\n+        // FIXME: `true`/`false` literals don't work.\n+    }\n }"}]}