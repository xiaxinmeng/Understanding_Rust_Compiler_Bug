{"sha": "6341a8b0e5155abf4bf338d3df7f6d2971f83adb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzNDFhOGIwZTUxNTVhYmY0YmYzMzhkM2RmN2Y2ZDI5NzFmODNhZGI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-03-25T06:40:24Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-03-25T19:57:54Z"}, "message": "Clarify suggetion for field used as method\n\nInstead of\n\n```\nerror: no method named `src_addr` found for type `&wire::ipv4::Repr` in the current scope\n   --> src/wire/ipv4.rs:409:34\n    |\n409 |         packet.set_src_addr(self.src_addr());\n    |                                  ^^^^^^^^\n    |\nnote: did you mean to write `self.src_addr`?\n   --> src/wire/ipv4.rs:409:34\n    |\n409 |         packet.set_src_addr(self.src_addr());\n    |                                  ^^^^^^^^\n```\n\npresent\n\n```\nerror: no method named `src_addr` found for type `&wire::ipv4::Repr` in the current scope\n   --> src/wire/ipv4.rs:409:34\n    |\n409 |         packet.set_src_addr(self.src_addr());\n    |                                  ^^^^^^^^ `src_addr` is a field, not a method\n    |\n    = help: did you mean to write `self.src_addr` instead of `self.src_addr(...)`?\n```", "tree": {"sha": "d9f8aa68a31260d37fe8cdffdd9a3f5cd30d1b8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9f8aa68a31260d37fe8cdffdd9a3f5cd30d1b8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6341a8b0e5155abf4bf338d3df7f6d2971f83adb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6341a8b0e5155abf4bf338d3df7f6d2971f83adb", "html_url": "https://github.com/rust-lang/rust/commit/6341a8b0e5155abf4bf338d3df7f6d2971f83adb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6341a8b0e5155abf4bf338d3df7f6d2971f83adb/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c62e532f3de4c0254b772c36fe629b2042efd107", "url": "https://api.github.com/repos/rust-lang/rust/commits/c62e532f3de4c0254b772c36fe629b2042efd107", "html_url": "https://github.com/rust-lang/rust/commit/c62e532f3de4c0254b772c36fe629b2042efd107"}], "stats": {"total": 86, "additions": 56, "deletions": 30}, "files": [{"sha": "b458c1af71d0650a4a955ba7d5b31f4f1d57997b", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/6341a8b0e5155abf4bf338d3df7f6d2971f83adb/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6341a8b0e5155abf4bf338d3df7f6d2971f83adb/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=6341a8b0e5155abf4bf338d3df7f6d2971f83adb", "patch": "@@ -197,17 +197,23 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                     let field_ty = field.ty(tcx, substs);\n \n                                     if self.is_fn_ty(&field_ty, span) {\n-                                        err.span_note(span,\n-                                                      &format!(\"use `({0}.{1})(...)` if you \\\n-                                                                meant to call the function \\\n-                                                                stored in the `{1}` field\",\n-                                                               expr_string,\n-                                                               item_name));\n+                                        err.help(&format!(\"use `({0}.{1})(...)` if you \\\n+                                                           meant to call the function \\\n+                                                           stored in the `{1}` field\",\n+                                                          expr_string,\n+                                                          item_name));\n+                                        err.span_label(span,\n+                                                       &format!(\"`{}` is a field storing a \\\n+                                                                 function, not a method\",\n+                                                                item_name));\n                                     } else {\n-                                        err.span_note(span,\n-                                                      &format!(\"did you mean to write `{0}.{1}`?\",\n-                                                               expr_string,\n-                                                               item_name));\n+                                        err.help(&format!(\"did you mean to write `{0}.{1}` \\\n+                                                           instead of `{0}.{1}(...)`?\",\n+                                                          expr_string,\n+                                                          item_name));\n+                                        err.span_label(span,\n+                                                       &format!(\"`{}` is a field, not a method\",\n+                                                                item_name));\n                                     }\n                                     break;\n                                 }"}, {"sha": "a095bb4812610037e7f5ff661826fee102586db9", "filename": "src/test/compile-fail/issue-18343.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6341a8b0e5155abf4bf338d3df7f6d2971f83adb/src%2Ftest%2Fcompile-fail%2Fissue-18343.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6341a8b0e5155abf4bf338d3df7f6d2971f83adb/src%2Ftest%2Fcompile-fail%2Fissue-18343.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18343.rs?ref=6341a8b0e5155abf4bf338d3df7f6d2971f83adb", "patch": "@@ -14,6 +14,8 @@ struct Obj<F> where F: FnMut() -> u32 {\n \n fn main() {\n     let o = Obj { closure: || 42 };\n-    o.closure(); //~ ERROR no method named `closure` found\n-    //~^ NOTE use `(o.closure)(...)` if you meant to call the function stored in the `closure` field\n+    o.closure();\n+    //~^ ERROR no method named `closure` found\n+    //~| HELP use `(o.closure)(...)` if you meant to call the function stored in the `closure` field\n+    //~| NOTE `closure` is a field storing a function, not a method\n }"}, {"sha": "12389f885364ddbc4cc5740ea7967a22a90fdd7c", "filename": "src/test/compile-fail/issue-2392.rs", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/6341a8b0e5155abf4bf338d3df7f6d2971f83adb/src%2Ftest%2Fcompile-fail%2Fissue-2392.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6341a8b0e5155abf4bf338d3df7f6d2971f83adb/src%2Ftest%2Fcompile-fail%2Fissue-2392.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2392.rs?ref=6341a8b0e5155abf4bf338d3df7f6d2971f83adb", "patch": "@@ -48,45 +48,58 @@ fn main() {\n \n     let o_closure = Obj { closure: || 42, not_closure: 42 };\n     o_closure.closure(); //~ ERROR no method named `closure` found\n-    //~^ NOTE use `(o_closure.closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(o_closure.closure)(...)` if you meant to call the function stored\n+    //~| NOTE `closure` is a field storing a function, not a method\n \n-    o_closure.not_closure(); //~ ERROR no method named `not_closure` found\n-    //~^ NOTE did you mean to write `o_closure.not_closure`?\n+    o_closure.not_closure();\n+    //~^ ERROR no method named `not_closure` found\n+    //~| NOTE `not_closure` is a field, not a method\n+    //~| HELP did you mean to write `o_closure.not_closure` instead of `o_closure.not_closure(...)`?\n \n     let o_func = Obj { closure: func, not_closure: 5 };\n     o_func.closure(); //~ ERROR no method named `closure` found\n-    //~^ NOTE use `(o_func.closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(o_func.closure)(...)` if you meant to call the function stored\n+    //~| NOTE `closure` is a field storing a function, not a method\n \n     let boxed_fn = BoxedObj { boxed_closure: Box::new(func) };\n     boxed_fn.boxed_closure();//~ ERROR no method named `boxed_closure` found\n-    //~^ NOTE use `(boxed_fn.boxed_closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(boxed_fn.boxed_closure)(...)` if you meant to call the function stored\n+    //~| NOTE `boxed_closure` is a field storing a function, not a method\n \n     let boxed_closure = BoxedObj { boxed_closure: Box::new(|| 42_u32) as Box<FnBox() -> u32> };\n     boxed_closure.boxed_closure();//~ ERROR no method named `boxed_closure` found\n-    //~^ NOTE use `(boxed_closure.boxed_closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(boxed_closure.boxed_closure)(...)` if you meant to call the function stored\n+    //~| NOTE `boxed_closure` is a field storing a function, not a method\n \n     // test expression writing in the notes\n \n     let w = Wrapper { wrap: o_func };\n     w.wrap.closure();//~ ERROR no method named `closure` found\n-    //~^ NOTE use `(w.wrap.closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(w.wrap.closure)(...)` if you meant to call the function stored\n+    //~| NOTE `closure` is a field storing a function, not a method\n \n-    w.wrap.not_closure();//~ ERROR no method named `not_closure` found\n-    //~^ NOTE did you mean to write `w.wrap.not_closure`?\n+    w.wrap.not_closure();\n+    //~^ ERROR no method named `not_closure` found\n+    //~| NOTE `not_closure` is a field, not a method\n+    //~| HELP did you mean to write `w.wrap.not_closure` instead of `w.wrap.not_closure(...)`?\n \n     check_expression().closure();//~ ERROR no method named `closure` found\n-    //~^ NOTE use `(check_expression().closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(check_expression().closure)(...)` if you meant to call the function stored\n+    //~| NOTE `closure` is a field storing a function, not a method\n }\n \n impl FuncContainerOuter {\n     fn run(&self) {\n         unsafe {\n             (*self.container).f1(1); //~ ERROR no method named `f1` found\n-            //~^ NOTE use `((*self.container).f1)(...)`\n+            //~^ HELP use `((*self.container).f1)(...)`\n+            //~| NOTE `f1` is a field storing a function, not a method\n             (*self.container).f2(1); //~ ERROR no method named `f2` found\n-            //~^ NOTE use `((*self.container).f2)(...)`\n+            //~^ HELP use `((*self.container).f2)(...)`\n+            //~| NOTE `f2` is a field storing a function, not a method\n             (*self.container).f3(1); //~ ERROR no method named `f3` found\n-            //~^ NOTE use `((*self.container).f3)(...)`\n+            //~^ HELP use `((*self.container).f3)(...)`\n+            //~| NOTE `f3` is a field storing a function, not a method\n         }\n     }\n }"}, {"sha": "74fbb33296e4b9112931309443fe6f905aab9110", "filename": "src/test/compile-fail/issue-32128.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6341a8b0e5155abf4bf338d3df7f6d2971f83adb/src%2Ftest%2Fcompile-fail%2Fissue-32128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6341a8b0e5155abf4bf338d3df7f6d2971f83adb/src%2Ftest%2Fcompile-fail%2Fissue-32128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-32128.rs?ref=6341a8b0e5155abf4bf338d3df7f6d2971f83adb", "patch": "@@ -19,7 +19,9 @@ fn main() {\n         })\n     };\n \n-    demo.example(1);    //~ ERROR no method named `example`\n-                        //~^ NOTE use `(demo.example)(...)`\n+    demo.example(1);\n+    //~^ ERROR no method named `example`\n+    //~| HELP use `(demo.example)(...)`\n+    //~| NOTE `example` is a field storing a function, not a method\n     // (demo.example)(1);\n }"}, {"sha": "03c84fc57befee8ee745e39e22dc7c42af87fff1", "filename": "src/test/compile-fail/issue-33784.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6341a8b0e5155abf4bf338d3df7f6d2971f83adb/src%2Ftest%2Fcompile-fail%2Fissue-33784.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6341a8b0e5155abf4bf338d3df7f6d2971f83adb/src%2Ftest%2Fcompile-fail%2Fissue-33784.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-33784.rs?ref=6341a8b0e5155abf4bf338d3df7f6d2971f83adb", "patch": "@@ -35,12 +35,15 @@ fn main() {\n     let o = Obj { fn_ptr: empty, closure: || 42 };\n     let p = &o;\n     p.closure(); //~ ERROR no method named `closure` found\n-    //~^ NOTE use `(p.closure)(...)` if you meant to call the function stored in the `closure` field\n+    //~^ HELP use `(p.closure)(...)` if you meant to call the function stored in the `closure` field\n+    //~| NOTE `closure` is a field storing a function, not a method\n     let q = &p;\n     q.fn_ptr(); //~ ERROR no method named `fn_ptr` found\n-    //~^ NOTE use `(q.fn_ptr)(...)` if you meant to call the function stored in the `fn_ptr` field\n+    //~^ HELP use `(q.fn_ptr)(...)` if you meant to call the function stored in the `fn_ptr` field\n+    //~| NOTE `fn_ptr` is a field storing a function, not a method\n     let r = D(C { c_fn_ptr: empty });\n     let s = &r;\n     s.c_fn_ptr(); //~ ERROR no method named `c_fn_ptr` found\n-    //~^ NOTE use `(s.c_fn_ptr)(...)` if you meant to call the function stored in the `c_fn_ptr`\n+    //~^ HELP use `(s.c_fn_ptr)(...)` if you meant to call the function stored in the `c_fn_ptr`\n+    //~| NOTE `c_fn_ptr` is a field storing a function, not a method\n }"}]}