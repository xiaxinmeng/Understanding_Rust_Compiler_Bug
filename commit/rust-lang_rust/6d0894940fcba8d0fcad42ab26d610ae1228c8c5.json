{"sha": "6d0894940fcba8d0fcad42ab26d610ae1228c8c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkMDg5NDk0MGZjYmE4ZDBmY2FkNDJhYjI2ZDYxMGFlMTIyOGM4YzU=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-10-01T19:09:27Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-10-03T01:58:20Z"}, "message": "Migrate `VariantKind` construction function to associated function.", "tree": {"sha": "cf454a6a4519d0490f8974a68a5d7df7f2830ce9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf454a6a4519d0490f8974a68a5d7df7f2830ce9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d0894940fcba8d0fcad42ab26d610ae1228c8c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d0894940fcba8d0fcad42ab26d610ae1228c8c5", "html_url": "https://github.com/rust-lang/rust/commit/6d0894940fcba8d0fcad42ab26d610ae1228c8c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d0894940fcba8d0fcad42ab26d610ae1228c8c5/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d0f1b4690027d32eddf6c2adfa2e089d1d5d3a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d0f1b4690027d32eddf6c2adfa2e089d1d5d3a0", "html_url": "https://github.com/rust-lang/rust/commit/0d0f1b4690027d32eddf6c2adfa2e089d1d5d3a0"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "141a186d1e07e6de682c14ccc5cef86ebd86b527", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6d0894940fcba8d0fcad42ab26d610ae1228c8c5/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d0894940fcba8d0fcad42ab26d610ae1228c8c5/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=6d0894940fcba8d0fcad42ab26d610ae1228c8c5", "patch": "@@ -2026,7 +2026,7 @@ impl Clean<Item> for doctree::Variant {\n             deprecation: self.depr.clean(cx),\n             def_id: cx.map.local_def_id(self.def.id()),\n             inner: VariantItem(Variant {\n-                kind: struct_def_to_variant_kind(&self.def, cx),\n+                kind: VariantKind::from_struct_def(&self.def, cx),\n             }),\n         }\n     }\n@@ -2080,13 +2080,15 @@ pub enum VariantKind {\n     StructVariant(VariantStruct),\n }\n \n-fn struct_def_to_variant_kind(struct_def: &hir::VariantData, cx: &DocContext) -> VariantKind {\n-    if struct_def.is_struct() {\n-        StructVariant(struct_def.clean(cx))\n-    } else if struct_def.is_unit() {\n-        CLikeVariant\n-    } else {\n-        TupleVariant(struct_def.fields().iter().map(|x| x.ty.clean(cx)).collect())\n+impl VariantKind {\n+    fn from_struct_def(struct_def: &hir::VariantData, cx: &DocContext) -> VariantKind {\n+        if struct_def.is_struct() {\n+            StructVariant(struct_def.clean(cx))\n+        } else if struct_def.is_unit() {\n+            CLikeVariant\n+        } else {\n+            TupleVariant(struct_def.fields().iter().map(|x| x.ty.clean(cx)).collect())\n+        }\n     }\n }\n "}]}