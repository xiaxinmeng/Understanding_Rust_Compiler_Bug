{"sha": "bb9f717a80814165dcdb4fa3f9d37a6551bcb264", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiOWY3MTdhODA4MTQxNjVkY2RiNGZhM2Y5ZDM3YTY1NTFiY2IyNjQ=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-12-13T09:04:28Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-01T19:05:02Z"}, "message": "`const_to_op` is now `lazy_const_to_op`", "tree": {"sha": "e820572c98b86ee5ba0995a11329f53f523293b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e820572c98b86ee5ba0995a11329f53f523293b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb9f717a80814165dcdb4fa3f9d37a6551bcb264", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb9f717a80814165dcdb4fa3f9d37a6551bcb264", "html_url": "https://github.com/rust-lang/rust/commit/bb9f717a80814165dcdb4fa3f9d37a6551bcb264", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb9f717a80814165dcdb4fa3f9d37a6551bcb264/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f36c6559eabef7ad74818f8f7d952a474c64feaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/f36c6559eabef7ad74818f8f7d952a474c64feaa", "html_url": "https://github.com/rust-lang/rust/commit/f36c6559eabef7ad74818f8f7d952a474c64feaa"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "2722355b050f9aa3e96ef54e17bb2629fe894e02", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bb9f717a80814165dcdb4fa3f9d37a6551bcb264/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb9f717a80814165dcdb4fa3f9d37a6551bcb264/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=bb9f717a80814165dcdb4fa3f9d37a6551bcb264", "patch": "@@ -137,7 +137,7 @@ pub fn op_to_const<'tcx>(\n     Ok(ty::Const::from_const_value(ecx.tcx.tcx, val, op.layout.ty))\n }\n \n-pub fn const_to_op<'tcx>(\n+pub fn lazy_const_to_op<'tcx>(\n     ecx: &CompileTimeEvalContext<'_, '_, 'tcx>,\n     cnst: ty::LazyConst<'tcx>,\n     ty: ty::Ty<'tcx>,\n@@ -516,7 +516,7 @@ pub fn const_field<'a, 'tcx>(\n     let ecx = mk_eval_cx(tcx, instance, param_env).unwrap();\n     let result = (|| {\n         // get the operand again\n-        let op = const_to_op(&ecx, ty::LazyConst::Evaluated(value), value.ty)?;\n+        let op = lazy_const_to_op(&ecx, ty::LazyConst::Evaluated(value), value.ty)?;\n         // downcast\n         let down = match variant {\n             None => op,\n@@ -543,7 +543,7 @@ pub fn const_variant_index<'a, 'tcx>(\n ) -> EvalResult<'tcx, VariantIdx> {\n     trace!(\"const_variant_index: {:?}, {:?}\", instance, val);\n     let ecx = mk_eval_cx(tcx, instance, param_env).unwrap();\n-    let op = const_to_op(&ecx, ty::LazyConst::Evaluated(val), val.ty)?;\n+    let op = lazy_const_to_op(&ecx, ty::LazyConst::Evaluated(val), val.ty)?;\n     Ok(ecx.read_discriminant(op)?.1)\n }\n "}, {"sha": "2e72f80425d62ee68a201fb8a1bc3646389147d8", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb9f717a80814165dcdb4fa3f9d37a6551bcb264/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb9f717a80814165dcdb4fa3f9d37a6551bcb264/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=bb9f717a80814165dcdb4fa3f9d37a6551bcb264", "patch": "@@ -20,7 +20,7 @@ use rustc::ty::layout::{\n \n use interpret::{self, EvalContext, ScalarMaybeUndef, Immediate, OpTy, MemoryKind};\n use const_eval::{\n-    CompileTimeInterpreter, const_to_op, error_to_const_error, eval_promoted, mk_borrowck_eval_cx\n+    CompileTimeInterpreter, lazy_const_to_op, error_to_const_error, eval_promoted, mk_borrowck_eval_cx\n };\n use transform::{MirPass, MirSource};\n \n@@ -255,7 +255,7 @@ impl<'a, 'mir, 'tcx> ConstPropagator<'a, 'mir, 'tcx> {\n         source_info: SourceInfo,\n     ) -> Option<Const<'tcx>> {\n         self.ecx.tcx.span = source_info.span;\n-        match const_to_op(&self.ecx, *c.literal, c.ty) {\n+        match lazy_const_to_op(&self.ecx, *c.literal, c.ty) {\n             Ok(op) => {\n                 Some((op, c.span))\n             },"}]}