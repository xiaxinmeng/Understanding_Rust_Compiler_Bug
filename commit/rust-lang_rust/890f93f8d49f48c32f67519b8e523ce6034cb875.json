{"sha": "890f93f8d49f48c32f67519b8e523ce6034cb875", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MGY5M2Y4ZDQ5ZjQ4YzMyZjY3NTE5YjhlNTIzY2U2MDM0Y2I4NzU=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-08-07T15:45:06Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-08-11T10:11:38Z"}, "message": "Use ItemLocalId as key for TypeckTables::liberated_fn_sigs.", "tree": {"sha": "988fd5acae0bede2849dab962bcfae6a2e174d12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/988fd5acae0bede2849dab962bcfae6a2e174d12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/890f93f8d49f48c32f67519b8e523ce6034cb875", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/890f93f8d49f48c32f67519b8e523ce6034cb875", "html_url": "https://github.com/rust-lang/rust/commit/890f93f8d49f48c32f67519b8e523ce6034cb875", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/890f93f8d49f48c32f67519b8e523ce6034cb875/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cd44a9d5e2a8013bac858ed9f412badefaa8a43", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cd44a9d5e2a8013bac858ed9f412badefaa8a43", "html_url": "https://github.com/rust-lang/rust/commit/6cd44a9d5e2a8013bac858ed9f412badefaa8a43"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "740b4c428dc1ada1a9f19b54d8fb7fc193d6672c", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/890f93f8d49f48c32f67519b8e523ce6034cb875/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890f93f8d49f48c32f67519b8e523ce6034cb875/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=890f93f8d49f48c32f67519b8e523ce6034cb875", "patch": "@@ -656,7 +656,7 @@ for ty::TypeckTables<'gcx> {\n \n             ich::hash_stable_itemlocalmap(hcx, hasher, closure_tys);\n             ich::hash_stable_itemlocalmap(hcx, hasher, closure_kinds);\n-            ich::hash_stable_nodemap(hcx, hasher, liberated_fn_sigs);\n+            ich::hash_stable_itemlocalmap(hcx, hasher, liberated_fn_sigs);\n             ich::hash_stable_nodemap(hcx, hasher, fru_field_types);\n             ich::hash_stable_nodemap(hcx, hasher, cast_kinds);\n "}, {"sha": "5ec39b78e307348e909e5b9f067284211164b84c", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/890f93f8d49f48c32f67519b8e523ce6034cb875/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890f93f8d49f48c32f67519b8e523ce6034cb875/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=890f93f8d49f48c32f67519b8e523ce6034cb875", "patch": "@@ -247,7 +247,7 @@ pub struct TypeckTables<'tcx> {\n     /// (including late-bound regions) are replaced with free\n     /// equivalents. This table is not used in trans (since regions\n     /// are erased there) and hence is not serialized to metadata.\n-    pub liberated_fn_sigs: NodeMap<ty::FnSig<'tcx>>,\n+    pub liberated_fn_sigs: ItemLocalMap<ty::FnSig<'tcx>>,\n \n     /// For each FRU expression, record the normalized types of the fields\n     /// of the struct - this is needed because it is non-trivial to\n@@ -285,7 +285,7 @@ impl<'tcx> TypeckTables<'tcx> {\n             upvar_capture_map: FxHashMap(),\n             closure_tys: ItemLocalMap(),\n             closure_kinds: ItemLocalMap(),\n-            liberated_fn_sigs: NodeMap(),\n+            liberated_fn_sigs: ItemLocalMap(),\n             fru_field_types: NodeMap(),\n             cast_kinds: NodeMap(),\n             used_trait_imports: DefIdSet(),"}, {"sha": "ae951d50a8cd898ced221bfffe272575663a06be", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/890f93f8d49f48c32f67519b8e523ce6034cb875/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890f93f8d49f48c32f67519b8e523ce6034cb875/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=890f93f8d49f48c32f67519b8e523ce6034cb875", "patch": "@@ -90,7 +90,9 @@ pub fn mir_build<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> Mir<'t\n         } else if let MirSource::Fn(id) = src {\n             // fetch the fully liberated fn signature (that is, all bound\n             // types/lifetimes replaced)\n-            let fn_sig = cx.tables().liberated_fn_sigs[&id].clone();\n+            let fn_hir_id = tcx.hir.node_to_hir_id(id);\n+            cx.tables().validate_hir_id(fn_hir_id);\n+            let fn_sig = cx.tables().liberated_fn_sigs[&fn_hir_id.local_id].clone();\n \n             let ty = tcx.type_of(tcx.hir.local_def_id(id));\n             let mut abi = fn_sig.abi;"}, {"sha": "0d484d2ce36985a6c35a7880bbad3242a39a2197", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/890f93f8d49f48c32f67519b8e523ce6034cb875/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890f93f8d49f48c32f67519b8e523ce6034cb875/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=890f93f8d49f48c32f67519b8e523ce6034cb875", "patch": "@@ -1028,7 +1028,12 @@ fn check_fn<'a, 'gcx, 'tcx>(inherited: &'a Inherited<'a, 'gcx, 'tcx>,\n         fcx.write_ty(arg.hir_id, arg_ty);\n     }\n \n-    inherited.tables.borrow_mut().liberated_fn_sigs.insert(fn_id, fn_sig);\n+    {\n+        let mut inh_tables = inherited.tables.borrow_mut();\n+        let fn_hir_id = fcx.tcx.hir.node_to_hir_id(fn_id);\n+        inh_tables.validate_hir_id(fn_hir_id);\n+        inh_tables.liberated_fn_sigs.insert(fn_hir_id.local_id, fn_sig);\n+    }\n \n     fcx.check_return_expr(&body.value);\n "}, {"sha": "c9c8f3363cee00f355a3899f2681a984c2d55d45", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/890f93f8d49f48c32f67519b8e523ce6034cb875/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890f93f8d49f48c32f67519b8e523ce6034cb875/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=890f93f8d49f48c32f67519b8e523ce6034cb875", "patch": "@@ -309,8 +309,10 @@ impl<'a, 'gcx, 'tcx> RegionCtxt<'a, 'gcx, 'tcx> {\n         let old_call_site_scope = self.set_call_site_scope(Some(call_site));\n \n         let fn_sig = {\n-            let fn_sig_map = &self.tables.borrow().liberated_fn_sigs;\n-            match fn_sig_map.get(&id) {\n+            let tables = self.tables.borrow();\n+            let fn_hir_id = self.tcx.hir.node_to_hir_id(id);\n+            tables.validate_hir_id(fn_hir_id);\n+            match tables.liberated_fn_sigs.get(&fn_hir_id.local_id) {\n                 Some(f) => f.clone(),\n                 None => {\n                     bug!(\"No fn-sig entry for id={}\", id);"}, {"sha": "499afe62b4f933860ec9f269c12eecfbae893c15", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/890f93f8d49f48c32f67519b8e523ce6034cb875/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890f93f8d49f48c32f67519b8e523ce6034cb875/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=890f93f8d49f48c32f67519b8e523ce6034cb875", "patch": "@@ -348,9 +348,16 @@ impl<'cx, 'gcx, 'tcx> WritebackCx<'cx, 'gcx, 'tcx> {\n     }\n \n     fn visit_liberated_fn_sigs(&mut self) {\n-        for (&node_id, fn_sig) in self.fcx.tables.borrow().liberated_fn_sigs.iter() {\n-            let fn_sig = self.resolve(fn_sig, &node_id);\n-            self.tables.liberated_fn_sigs.insert(node_id, fn_sig.clone());\n+        let fcx_tables = self.fcx.tables.borrow();\n+        debug_assert_eq!(fcx_tables.local_id_root, self.tables.local_id_root);\n+\n+        for (&local_id, fn_sig) in fcx_tables.liberated_fn_sigs.iter() {\n+            let hir_id = hir::HirId {\n+                owner: fcx_tables.local_id_root.index,\n+                local_id,\n+            };\n+            let fn_sig = self.resolve(fn_sig, &hir_id);\n+            self.tables.liberated_fn_sigs.insert(local_id, fn_sig.clone());\n         }\n     }\n "}]}