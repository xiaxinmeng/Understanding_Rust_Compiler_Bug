{"sha": "de12cbcb32a53a06e1f73e7d9cdfa11e41d79ded", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMTJjYmNiMzJhNTNhMDZlMWY3M2U3ZDljZGZhMTFlNDFkNzlkZWQ=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-23T13:58:25Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-23T13:58:25Z"}, "message": "Fix documentation", "tree": {"sha": "f2a0153d7050d48394b1e2c752ade8508bf33814", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2a0153d7050d48394b1e2c752ade8508bf33814"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de12cbcb32a53a06e1f73e7d9cdfa11e41d79ded", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de12cbcb32a53a06e1f73e7d9cdfa11e41d79ded", "html_url": "https://github.com/rust-lang/rust/commit/de12cbcb32a53a06e1f73e7d9cdfa11e41d79ded", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de12cbcb32a53a06e1f73e7d9cdfa11e41d79ded/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb4cb5bf4af633ca057a84b995bab3b08333df41", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb4cb5bf4af633ca057a84b995bab3b08333df41", "html_url": "https://github.com/rust-lang/rust/commit/fb4cb5bf4af633ca057a84b995bab3b08333df41"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "0245540debbe74bf18b5d18c4d1b3b3df6781fc1", "filename": "src/helpers.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/de12cbcb32a53a06e1f73e7d9cdfa11e41d79ded/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de12cbcb32a53a06e1f73e7d9cdfa11e41d79ded/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=de12cbcb32a53a06e1f73e7d9cdfa11e41d79ded", "patch": "@@ -414,8 +414,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     /// Helper function to write an OsStr as a null-terminated sequence of bytes, which is what\n     /// the Unix APIs usually handle. This function returns `Ok(false)` without trying to write if\n     /// `size` is not large enough to fit the contents of `os_string` plus a null terminator. It\n-    /// returns `Ok(true)` if the writing process was successful. Otherwise it returns an\n-    /// `InterpError`.\n+    /// returns `Ok(true)` if the writing process was successful.\n     fn write_os_str_to_c_string(\n         &mut self,\n         os_str: &OsStr,"}]}