{"sha": "3032233bb277202a5336c2dedee999a1b3e698c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMzIyMzNiYjI3NzIwMmE1MzM2YzJkZWRlZTk5OWExYjNlNjk4YzM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-11-07T00:20:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-07T00:20:42Z"}, "message": "Rollup merge of #66114 - golddranks:improve_thread_docs, r=Centril\n\nImprove std::thread::Result documentation\n\nThanks to @dtolnay for pointing out the different premise of the contents of the `Err` variant in `std::thread::Result` WRT normal error handling.", "tree": {"sha": "e36866d9132fb0cba5e150902e9f4f2967411316", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e36866d9132fb0cba5e150902e9f4f2967411316"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3032233bb277202a5336c2dedee999a1b3e698c3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdw2NaCRBK7hj4Ov3rIwAAdHIIAB6pc8/aD4Hr0cW/Cvu+Au32\nPrzWCjpoTrqSxKXhbaZwUsejc/Ax13fUHWX4RF5OrCr4mvD+/l8vir945JJF3dOk\nWJu0wnn3GxhBKXaITloE9sIGlwooSUdtVgWYpxSXFoKUkrQHnyNKx8N45D9ResUC\n7caBlIvGdy2AcJO6YSTaTKMoNwW51teu/RNYWZTKq/qifat0Q6NHHLf8D/sC76DS\nlzcqtJI60w8woNVdWzWTsbN3C6v017x/pDwskOOVyOaGZwfuZdGEy5Cm32aoK8Sg\n5LqHEW0ybkHl0IP5OxIq2sWmVb0HBMxnFUGLuIEjyVvBXmPei/W8x/dMiKM24aA=\n=td0a\n-----END PGP SIGNATURE-----\n", "payload": "tree e36866d9132fb0cba5e150902e9f4f2967411316\nparent b94a2f9e388c98f0f21d97558d0205578482422d\nparent 8568204f4e934ff93817f948b13a9c804277a6bf\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1573086042 +0900\ncommitter GitHub <noreply@github.com> 1573086042 +0900\n\nRollup merge of #66114 - golddranks:improve_thread_docs, r=Centril\n\nImprove std::thread::Result documentation\n\nThanks to @dtolnay for pointing out the different premise of the contents of the `Err` variant in `std::thread::Result` WRT normal error handling.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3032233bb277202a5336c2dedee999a1b3e698c3", "html_url": "https://github.com/rust-lang/rust/commit/3032233bb277202a5336c2dedee999a1b3e698c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3032233bb277202a5336c2dedee999a1b3e698c3/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b94a2f9e388c98f0f21d97558d0205578482422d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b94a2f9e388c98f0f21d97558d0205578482422d", "html_url": "https://github.com/rust-lang/rust/commit/b94a2f9e388c98f0f21d97558d0205578482422d"}, {"sha": "8568204f4e934ff93817f948b13a9c804277a6bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/8568204f4e934ff93817f948b13a9c804277a6bf", "html_url": "https://github.com/rust-lang/rust/commit/8568204f4e934ff93817f948b13a9c804277a6bf"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "0c632d2afbdd4b449a80113133c052d71a92ea49", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3032233bb277202a5336c2dedee999a1b3e698c3/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3032233bb277202a5336c2dedee999a1b3e698c3/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=3032233bb277202a5336c2dedee999a1b3e698c3", "patch": "@@ -1271,6 +1271,18 @@ impl fmt::Debug for Thread {\n ///\n /// Indicates the manner in which a thread exited.\n ///\n+/// The value contained in the `Result::Err` variant\n+/// is the value the thread panicked with;\n+/// that is, the argument the `panic!` macro was called with.\n+/// Unlike with normal errors, this value doesn't implement\n+/// the [`Error`](crate::error::Error) trait.\n+///\n+/// Thus, a sensible way to handle a thread panic is to either:\n+/// 1. `unwrap` the `Result<T>`, propagating the panic\n+/// 2. or in case the thread is intended to be a subsystem boundary\n+/// that is supposed to isolate system-level failures,\n+/// match on the `Err` variant and handle the panic in an appropriate way.\n+///\n /// A thread that completes without panicking is considered to exit successfully.\n ///\n /// # Examples"}]}