{"sha": "616b94b66c20085e81ed43e450e78207177f54c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNmI5NGI2NmMyMDA4NWU4MWVkNDNlNDUwZTc4MjA3MTc3ZjU0YzY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-05-01T05:42:18Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-05-01T14:50:21Z"}, "message": "Rollup merge of #25021 - frewsxcv:an-utf, r=steveklabnik\n\nEven spelled out, one would say 'a Universal Character Set'", "tree": {"sha": "474df956d29dcc2a2409e179c8b1d6bd5741c56a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/474df956d29dcc2a2409e179c8b1d6bd5741c56a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/616b94b66c20085e81ed43e450e78207177f54c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/616b94b66c20085e81ed43e450e78207177f54c6", "html_url": "https://github.com/rust-lang/rust/commit/616b94b66c20085e81ed43e450e78207177f54c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/616b94b66c20085e81ed43e450e78207177f54c6/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac7a75ec976f05eb940b800e072e60c1a52b78a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac7a75ec976f05eb940b800e072e60c1a52b78a1", "html_url": "https://github.com/rust-lang/rust/commit/ac7a75ec976f05eb940b800e072e60c1a52b78a1"}, {"sha": "554da45762ff11def1d7ef85c68d4ed86550aa40", "url": "https://api.github.com/repos/rust-lang/rust/commits/554da45762ff11def1d7ef85c68d4ed86550aa40", "html_url": "https://github.com/rust-lang/rust/commit/554da45762ff11def1d7ef85c68d4ed86550aa40"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "f4c85f18a7e6795fc4b17fdaa9b7ed91b0037a9c", "filename": "src/librustc_unicode/u_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/616b94b66c20085e81ed43e450e78207177f54c6/src%2Flibrustc_unicode%2Fu_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/616b94b66c20085e81ed43e450e78207177f54c6/src%2Flibrustc_unicode%2Fu_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_unicode%2Fu_str.rs?ref=616b94b66c20085e81ed43e450e78207177f54c6", "patch": "@@ -525,7 +525,7 @@ pub struct Utf16Encoder<I> {\n }\n \n impl<I> Utf16Encoder<I> {\n-    /// Create an UTF-16 encoder from any `char` iterator.\n+    /// Create a UTF-16 encoder from any `char` iterator.\n     pub fn new(chars: I) -> Utf16Encoder<I> where I: Iterator<Item=char> {\n         Utf16Encoder { chars: chars, extra: 0 }\n     }"}, {"sha": "9089b417fcb99422082d9f86f1e66d6810db0b39", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/616b94b66c20085e81ed43e450e78207177f54c6/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/616b94b66c20085e81ed43e450e78207177f54c6/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=616b94b66c20085e81ed43e450e78207177f54c6", "patch": "@@ -236,7 +236,7 @@ pub trait Read {\n \n     /// Transforms this `Read` instance to an `Iterator` over `char`s.\n     ///\n-    /// This adaptor will attempt to interpret this reader as an UTF-8 encoded\n+    /// This adaptor will attempt to interpret this reader as a UTF-8 encoded\n     /// sequence of characters. The returned iterator will return `None` once\n     /// EOF is reached for this reader. Otherwise each element yielded will be a\n     /// `Result<char, E>` where `E` may contain information about what I/O error"}, {"sha": "cb9239ed7ba57032fb320a6614d68adac27ee1b3", "filename": "src/libstd/sys/common/wtf8.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/616b94b66c20085e81ed43e450e78207177f54c6/src%2Flibstd%2Fsys%2Fcommon%2Fwtf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/616b94b66c20085e81ed43e450e78207177f54c6/src%2Flibstd%2Fsys%2Fcommon%2Fwtf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fwtf8.rs?ref=616b94b66c20085e81ed43e450e78207177f54c6", "patch": "@@ -161,7 +161,7 @@ impl Wtf8Buf {\n         Wtf8Buf { bytes: Vec::with_capacity(n) }\n     }\n \n-    /// Creates a WTF-8 string from an UTF-8 `String`.\n+    /// Creates a WTF-8 string from a UTF-8 `String`.\n     ///\n     /// This takes ownership of the `String` and does not copy.\n     ///\n@@ -171,7 +171,7 @@ impl Wtf8Buf {\n         Wtf8Buf { bytes: string.into_bytes() }\n     }\n \n-    /// Creates a WTF-8 string from an UTF-8 `&str` slice.\n+    /// Creates a WTF-8 string from a UTF-8 `&str` slice.\n     ///\n     /// This copies the content of the slice.\n     ///\n@@ -245,7 +245,7 @@ impl Wtf8Buf {\n         self.bytes.capacity()\n     }\n \n-    /// Append an UTF-8 slice at the end of the string.\n+    /// Append a UTF-8 slice at the end of the string.\n     #[inline]\n     pub fn push_str(&mut self, other: &str) {\n         self.bytes.push_all(other.as_bytes())\n@@ -527,7 +527,7 @@ impl Wtf8 {\n     }\n \n     /// Lossily converts the string to UTF-8.\n-    /// Returns an UTF-8 `&str` slice if the contents are well-formed in UTF-8.\n+    /// Returns a UTF-8 `&str` slice if the contents are well-formed in UTF-8.\n     ///\n     /// Surrogates are replaced with `\"\\u{FFFD}\"` (the replacement character \u201c\ufffd\u201d).\n     ///"}]}