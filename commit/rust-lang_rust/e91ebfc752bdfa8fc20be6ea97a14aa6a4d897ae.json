{"sha": "e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MWViZmM3NTJiZGZhOGZjMjBiZTZlYTk3YTE0YWE2YTRkODk3YWU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-27T09:13:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-27T09:13:07Z"}, "message": "Cleanup imports", "tree": {"sha": "0b097685cdd13f91b36362296eefa1d2edee540d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b097685cdd13f91b36362296eefa1d2edee540d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae", "html_url": "https://github.com/rust-lang/rust/commit/e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a0929fca7a52605526c6f89be4e3e86c5d0359d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a0929fca7a52605526c6f89be4e3e86c5d0359d", "html_url": "https://github.com/rust-lang/rust/commit/3a0929fca7a52605526c6f89be4e3e86c5d0359d"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "3fb5d8a83bec1e0f140e434e41b9e9c2ce053b9f", "filename": "crates/ra_hir/src/ty/infer/coerce.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Fcoerce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Fcoerce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Fcoerce.rs?ref=e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae", "patch": "@@ -7,6 +7,7 @@\n use hir_def::{\n     lang_item::LangItemTarget,\n     resolver::{HasResolver, Resolver},\n+    type_ref::Mutability,\n     AdtId,\n };\n use rustc_hash::FxHashMap;\n@@ -15,7 +16,6 @@ use test_utils::tested_by;\n use crate::{\n     db::HirDatabase,\n     ty::{autoderef, Substs, TraitRef, Ty, TypeCtor, TypeWalk},\n-    Mutability,\n };\n \n use super::{InEnvironment, InferTy, InferenceContext, TypeVarValue};"}, {"sha": "57f845dfa4e203c22991348050aa371dbb211ad9", "filename": "crates/ra_hir/src/ty/infer/expr.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Fexpr.rs?ref=e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae", "patch": "@@ -5,22 +5,21 @@ use std::sync::Arc;\n \n use hir_def::{\n     builtin_type::Signedness,\n+    expr::{Array, BinaryOp, Expr, ExprId, Literal, Statement, UnaryOp},\n     generics::GenericParams,\n     path::{GenericArg, GenericArgs},\n     resolver::resolver_for_expr,\n     AdtId, ContainerId, Lookup, StructFieldId,\n };\n-use hir_expand::name;\n+use hir_expand::name::{self, Name};\n \n use crate::{\n     db::HirDatabase,\n-    expr::{Array, BinaryOp, Expr, ExprId, Literal, Statement, UnaryOp},\n     ty::{\n         autoderef, method_resolution, op, traits::InEnvironment, CallableDef, InferTy, IntTy,\n         Mutability, Obligation, ProjectionPredicate, ProjectionTy, Substs, TraitRef, Ty, TypeCtor,\n         TypeWalk, Uncertain,\n     },\n-    Name,\n };\n \n use super::{BindingMode, Expectation, InferenceContext, InferenceDiagnostic, TypeMismatch};"}, {"sha": "6dbf03eb20d145c56c491f13528a3df4ca2397f5", "filename": "crates/ra_hir/src/ty/infer/pat.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Fpat.rs?ref=e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae", "patch": "@@ -3,14 +3,18 @@\n use std::iter::repeat;\n use std::sync::Arc;\n \n+use hir_def::{\n+    expr::{BindingAnnotation, Pat, PatId, RecordFieldPat},\n+    path::Path,\n+    type_ref::Mutability,\n+};\n+use hir_expand::name::Name;\n use test_utils::tested_by;\n \n use super::{BindingMode, InferenceContext};\n use crate::{\n     db::HirDatabase,\n-    expr::{BindingAnnotation, Pat, PatId, RecordFieldPat},\n-    ty::{Mutability, Substs, Ty, TypeCtor, TypeWalk},\n-    Name, Path,\n+    ty::{Substs, Ty, TypeCtor, TypeWalk},\n };\n \n impl<'a, D: HirDatabase> InferenceContext<'a, D> {"}, {"sha": "8d8b56d2d0c09b4e396acb36be35798fa62e56d6", "filename": "crates/ra_hir/src/ty/infer/path.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Fpath.rs?ref=e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae", "patch": "@@ -1,14 +1,15 @@\n //! Path expression resolution.\n \n use hir_def::{\n-    path::PathSegment,\n+    path::{Path, PathSegment},\n     resolver::{ResolveValueResult, Resolver, TypeNs, ValueNs},\n };\n+use hir_expand::name::Name;\n \n use crate::{\n     db::HirDatabase,\n     ty::{method_resolution, Substs, Ty, TypeWalk, ValueTyDefId},\n-    AssocItem, Container, Function, Name, Path,\n+    AssocItem, Container, Function,\n };\n \n use super::{ExprOrPatId, InferenceContext, TraitRef};"}, {"sha": "e27bb2f825a8c300b3586cfb899040c47719dee0", "filename": "crates/ra_hir/src/ty/infer/unify.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Funify.rs?ref=e91ebfc752bdfa8fc20be6ea97a14aa6a4d897ae", "patch": "@@ -1,12 +1,14 @@\n //! Unification and canonicalization logic.\n \n use super::{InferenceContext, Obligation};\n-use crate::db::HirDatabase;\n-use crate::ty::{\n-    Canonical, InEnvironment, InferTy, ProjectionPredicate, ProjectionTy, Substs, TraitRef, Ty,\n-    TypeWalk,\n+use crate::{\n+    db::HirDatabase,\n+    ty::{\n+        Canonical, InEnvironment, InferTy, ProjectionPredicate, ProjectionTy, Substs, TraitRef, Ty,\n+        TypeWalk,\n+    },\n+    util::make_mut_slice,\n };\n-use crate::util::make_mut_slice;\n \n impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n     pub(super) fn canonicalizer<'b>(&'b mut self) -> Canonicalizer<'a, 'b, D>"}]}