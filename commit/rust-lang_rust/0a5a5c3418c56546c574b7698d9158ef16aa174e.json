{"sha": "0a5a5c3418c56546c574b7698d9158ef16aa174e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNWE1YzM0MThjNTY1NDZjNTc0Yjc2OThkOTE1OGVmMTZhYTE3NGU=", "commit": {"author": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2018-03-22T20:41:07Z"}, "committer": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2018-03-27T01:58:36Z"}, "message": "revert making casts atomic, test order dependency", "tree": {"sha": "2490fbfafc588a38ec7d8cd269799e3dcd8b42f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2490fbfafc588a38ec7d8cd269799e3dcd8b42f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a5a5c3418c56546c574b7698d9158ef16aa174e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a5a5c3418c56546c574b7698d9158ef16aa174e", "html_url": "https://github.com/rust-lang/rust/commit/0a5a5c3418c56546c574b7698d9158ef16aa174e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a5a5c3418c56546c574b7698d9158ef16aa174e/comments", "author": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7353ef744e1ff4e8b511f77969eab316e8e06f5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7353ef744e1ff4e8b511f77969eab316e8e06f5b", "html_url": "https://github.com/rust-lang/rust/commit/7353ef744e1ff4e8b511f77969eab316e8e06f5b"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "7ebacc92babf8bc41509580179daa655a555078c", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a5a5c3418c56546c574b7698d9158ef16aa174e/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a5a5c3418c56546c574b7698d9158ef16aa174e/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=0a5a5c3418c56546c574b7698d9158ef16aa174e", "patch": "@@ -389,8 +389,8 @@ impl<'a, 'gcx, 'tcx> CastCheck<'tcx> {\n     }\n \n     pub fn check(mut self, fcx: &FnCtxt<'a, 'gcx, 'tcx>) {\n-        self.expr_ty = fcx.resolve_type_vars_if_possible(&self.expr_ty);\n-        self.cast_ty = fcx.resolve_type_vars_if_possible(&self.cast_ty);\n+        self.expr_ty = fcx.structurally_resolved_type(self.span, self.expr_ty);\n+        self.cast_ty = fcx.structurally_resolved_type(self.span, self.cast_ty);\n \n         debug!(\"check_cast({}, {:?} as {:?})\",\n                self.expr.id,"}, {"sha": "69879bbe85d6e4e50d22af815d071c08be95a4f2", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a5a5c3418c56546c574b7698d9158ef16aa174e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a5a5c3418c56546c574b7698d9158ef16aa174e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=0a5a5c3418c56546c574b7698d9158ef16aa174e", "patch": "@@ -3639,7 +3639,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                                                                needs);\n \n             if !oprnd_t.references_error() {\n-                oprnd_t = self.resolve_type_vars_with_obligations(&oprnd_t);\n+                oprnd_t = self.structurally_resolved_type(expr.span, oprnd_t);\n                 match unop {\n                     hir::UnDeref => {\n                         if let Some(mt) = oprnd_t.builtin_deref(true) {"}, {"sha": "80fa5362a8be940c134ea9a112487991f03e805c", "filename": "src/test/run-pass/cast.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0a5a5c3418c56546c574b7698d9158ef16aa174e/src%2Ftest%2Frun-pass%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a5a5c3418c56546c574b7698d9158ef16aa174e/src%2Ftest%2Frun-pass%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcast.rs?ref=0a5a5c3418c56546c574b7698d9158ef16aa174e", "patch": "@@ -19,4 +19,9 @@ pub fn main() {\n     assert_eq!(i as u8 as i8, 'Q' as u8 as i8);\n     assert_eq!(0x51 as char, 'Q');\n     assert_eq!(0 as u32, false as u32);\n+\n+    // Test that `_` is correctly inferred.\n+    let x = &\"hello\";\n+    let mut y = x as *const _;\n+    y = 0 as *const _;\n }"}, {"sha": "afcd402343b25b33d2e83d4c4c64a336cc027904", "filename": "src/test/ui/order-dependent-cast-inference.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0a5a5c3418c56546c574b7698d9158ef16aa174e/src%2Ftest%2Fui%2Forder-dependent-cast-inference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a5a5c3418c56546c574b7698d9158ef16aa174e/src%2Ftest%2Fui%2Forder-dependent-cast-inference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Forder-dependent-cast-inference.rs?ref=0a5a5c3418c56546c574b7698d9158ef16aa174e", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    // Tests case where inference fails due to the order in which casts are checked.\n+    // Ideally this would compile, see #48270.\n+    let x = &\"hello\";\n+    let mut y = 0 as *const _;\n+    //~^ ERROR cannot cast to a pointer of an unknown kind\n+    y = x as *const _;\n+}"}, {"sha": "556acc87cffaf14308fd2bf07f0bd47b61757146", "filename": "src/test/ui/order-dependent-cast-inference.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0a5a5c3418c56546c574b7698d9158ef16aa174e/src%2Ftest%2Fui%2Forder-dependent-cast-inference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0a5a5c3418c56546c574b7698d9158ef16aa174e/src%2Ftest%2Fui%2Forder-dependent-cast-inference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Forder-dependent-cast-inference.stderr?ref=0a5a5c3418c56546c574b7698d9158ef16aa174e", "patch": "@@ -0,0 +1,13 @@\n+error[E0641]: cannot cast to a pointer of an unknown kind\n+  --> $DIR/order-dependent-cast-inference.rs:15:17\n+   |\n+LL |     let mut y = 0 as *const _;\n+   |                 ^^^^^--------\n+   |                      |\n+   |                      help: consider giving more type information\n+   |\n+   = note: The type information given here is insufficient to check whether the pointer cast is valid\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0641`."}]}