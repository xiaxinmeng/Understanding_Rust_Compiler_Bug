{"sha": "55ad73b0266bef8dfb3ee6f9d7d6b3cf5d119e77", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1YWQ3M2IwMjY2YmVmOGRmYjNlZTZmOWQ3ZDZiM2NmNWQxMTllNzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-09T15:42:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-09T15:42:47Z"}, "message": "Auto merge of #43117 - MJDSys:fix_rustbuild_libdir_2, r=alexcrichton\n\nFix stage 2 builds with a custom libdir.\n\nWhen copying libstd for the stage 2 compiler, the builder ignores the\nconfigured libdir/libdir_relative configuration parameters.  This causes\nthe compiler to fail to find libstd, which cause any tools built with the\nstage 2 compiler to fail.\n\nTo fix this, make the copy steps of rustbuild aware of the libdir_relative\nparameter when the stage >= 2.  Also update the dist target to be aware of\nthe new location of libstd.", "tree": {"sha": "23eb14a4eb47afa5ab1c4f3bcbad7fe2f82ae14e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23eb14a4eb47afa5ab1c4f3bcbad7fe2f82ae14e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55ad73b0266bef8dfb3ee6f9d7d6b3cf5d119e77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55ad73b0266bef8dfb3ee6f9d7d6b3cf5d119e77", "html_url": "https://github.com/rust-lang/rust/commit/55ad73b0266bef8dfb3ee6f9d7d6b3cf5d119e77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55ad73b0266bef8dfb3ee6f9d7d6b3cf5d119e77/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12fef71f18df9c688193deecef4b95331c9346a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/12fef71f18df9c688193deecef4b95331c9346a7", "html_url": "https://github.com/rust-lang/rust/commit/12fef71f18df9c688193deecef4b95331c9346a7"}, {"sha": "ce3abc5801f94292be9bc5fbe00b52f1ccb28672", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce3abc5801f94292be9bc5fbe00b52f1ccb28672", "html_url": "https://github.com/rust-lang/rust/commit/ce3abc5801f94292be9bc5fbe00b52f1ccb28672"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "8fae1dd99d8b96e4f6b1e90329ca401be06b1a19", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/55ad73b0266bef8dfb3ee6f9d7d6b3cf5d119e77/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55ad73b0266bef8dfb3ee6f9d7d6b3cf5d119e77/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=55ad73b0266bef8dfb3ee6f9d7d6b3cf5d119e77", "patch": "@@ -405,8 +405,9 @@ pub fn std(build: &Build, compiler: &Compiler, target: &str) {\n \n     let dst = image.join(\"lib/rustlib\").join(target);\n     t!(fs::create_dir_all(&dst));\n-    let src = build.sysroot(compiler).join(\"lib/rustlib\");\n-    cp_r(&src.join(target), &dst);\n+    let mut src = build.sysroot_libdir(compiler, target);\n+    src.pop(); // Remove the trailing /lib folder from the sysroot_libdir\n+    cp_r(&src, &dst);\n \n     let mut cmd = rust_installer(build);\n     cmd.arg(\"generate\")"}, {"sha": "032231582ef185889f161b9b2ecc85e904437d7d", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/55ad73b0266bef8dfb3ee6f9d7d6b3cf5d119e77/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55ad73b0266bef8dfb3ee6f9d7d6b3cf5d119e77/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=55ad73b0266bef8dfb3ee6f9d7d6b3cf5d119e77", "patch": "@@ -645,8 +645,14 @@ impl Build {\n     /// Returns the libdir where the standard library and other artifacts are\n     /// found for a compiler's sysroot.\n     fn sysroot_libdir(&self, compiler: &Compiler, target: &str) -> PathBuf {\n-        self.sysroot(compiler).join(\"lib\").join(\"rustlib\")\n-            .join(target).join(\"lib\")\n+        if compiler.stage >= 2 {\n+            if let Some(ref libdir_relative) = self.config.libdir_relative {\n+                return self.sysroot(compiler).join(libdir_relative)\n+                    .join(\"rustlib\").join(target).join(\"lib\")\n+            }\n+        }\n+       self.sysroot(compiler).join(\"lib\").join(\"rustlib\")\n+           .join(target).join(\"lib\")\n     }\n \n     /// Returns the root directory for all output generated in a particular"}]}