{"sha": "6f09deaa32ba8a4f26a46c28ffecbb3efc3d165e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmMDlkZWFhMzJiYThhNGYyNmE0NmMyOGZmZWNiYjNlZmMzZDE2NWU=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-31T04:44:04Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-31T05:12:10Z"}, "message": "Fix suggestions", "tree": {"sha": "cef41d1da48ba08c8f4477009b3383b606fd0e03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cef41d1da48ba08c8f4477009b3383b606fd0e03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f09deaa32ba8a4f26a46c28ffecbb3efc3d165e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f09deaa32ba8a4f26a46c28ffecbb3efc3d165e", "html_url": "https://github.com/rust-lang/rust/commit/6f09deaa32ba8a4f26a46c28ffecbb3efc3d165e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f09deaa32ba8a4f26a46c28ffecbb3efc3d165e/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d9db595661a96c37f4a5f9cf310c20da08efa5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d9db595661a96c37f4a5f9cf310c20da08efa5f", "html_url": "https://github.com/rust-lang/rust/commit/3d9db595661a96c37f4a5f9cf310c20da08efa5f"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "2aa8925fb54b58be6ce79fa23e7f30f34b457a3e", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6f09deaa32ba8a4f26a46c28ffecbb3efc3d165e/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f09deaa32ba8a4f26a46c28ffecbb3efc3d165e/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=6f09deaa32ba8a4f26a46c28ffecbb3efc3d165e", "patch": "@@ -537,8 +537,14 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n         match (&value_result, &type_result) {\n             (&Indeterminate, _) | (_, &Indeterminate) => return Indeterminate,\n             (&Failed(_), &Failed(_)) => {\n-                let children = target_module.resolutions.borrow();\n-                let names = children.keys().map(|&(ref name, _)| name);\n+                let resolutions = target_module.resolutions.borrow();\n+                let names = resolutions.iter().filter_map(|(&(ref name, _), resolution)| {\n+                    match *resolution.borrow() {\n+                        NameResolution { binding: Some(_), .. } => Some(name),\n+                        NameResolution { single_imports: SingleImports::None, .. } => None,\n+                        _ => Some(name),\n+                    }\n+                });\n                 let lev_suggestion = match find_best_match_for_name(names, &source.as_str(), None) {\n                     Some(name) => format!(\". Did you mean to use `{}`?\", name),\n                     None => \"\".to_owned(),"}]}