{"sha": "66882f1a249983a1b262a219dbcd47a0e2835418", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ODgyZjFhMjQ5OTgzYTFiMjYyYTIxOWRiY2Q0N2EwZTI4MzU0MTg=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-05-03T18:35:21Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-05-03T18:35:21Z"}, "message": "Move snake case method to heck", "tree": {"sha": "57e672bb5bc4a0aba430740650ce29fdc1982db1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57e672bb5bc4a0aba430740650ce29fdc1982db1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66882f1a249983a1b262a219dbcd47a0e2835418", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66882f1a249983a1b262a219dbcd47a0e2835418", "html_url": "https://github.com/rust-lang/rust/commit/66882f1a249983a1b262a219dbcd47a0e2835418", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66882f1a249983a1b262a219dbcd47a0e2835418/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba8ffab6444e0a6f4b9e5254adbef2adc6169cf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba8ffab6444e0a6f4b9e5254adbef2adc6169cf9", "html_url": "https://github.com/rust-lang/rust/commit/ba8ffab6444e0a6f4b9e5254adbef2adc6169cf9"}], "stats": {"total": 31, "additions": 16, "deletions": 15}, "files": [{"sha": "79c6ff4e13c525b54fdde34764fa409257f8dbd5", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/66882f1a249983a1b262a219dbcd47a0e2835418/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66882f1a249983a1b262a219dbcd47a0e2835418/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=66882f1a249983a1b262a219dbcd47a0e2835418", "patch": "@@ -9,6 +9,7 @@ use ra_syntax::{\n };\n \n use crate::{FileId, FunctionSignature};\n+use stdx::to_lower_snake_case;\n \n #[derive(Clone, Debug, PartialEq, Eq)]\n pub struct InlayHintsConfig {\n@@ -279,25 +280,11 @@ fn is_enum_name_similar_to_param_name(\n     param_name: &str,\n ) -> bool {\n     match sema.type_of_expr(argument).and_then(|t| t.as_adt()) {\n-        Some(Adt::Enum(e)) => &camel_case_to_snake_case(e.name(sema.db).to_string()) == param_name,\n+        Some(Adt::Enum(e)) => to_lower_snake_case(&e.name(sema.db).to_string()) == param_name,\n         _ => false,\n     }\n }\n \n-fn camel_case_to_snake_case(s: String) -> String {\n-    let mut buf = String::with_capacity(s.len());\n-    let mut prev = false;\n-    for c in s.chars() {\n-        if c.is_ascii_uppercase() && prev {\n-            buf.push('_')\n-        }\n-        prev = true;\n-\n-        buf.push(c.to_ascii_lowercase());\n-    }\n-    buf\n-}\n-\n fn get_string_representation(expr: &ast::Expr) -> Option<String> {\n     match expr {\n         ast::Expr::MethodCallExpr(method_call_expr) => {"}, {"sha": "0f34ce70e1a20e9d0f103e3a55e45ef83c6eba32", "filename": "crates/stdx/src/lib.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/66882f1a249983a1b262a219dbcd47a0e2835418/crates%2Fstdx%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66882f1a249983a1b262a219dbcd47a0e2835418/crates%2Fstdx%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fstdx%2Fsrc%2Flib.rs?ref=66882f1a249983a1b262a219dbcd47a0e2835418", "patch": "@@ -102,3 +102,17 @@ pub fn timeit(label: &'static str) -> impl Drop {\n \n     Guard { label, start: Instant::now() }\n }\n+\n+pub fn to_lower_snake_case(s: &str) -> String {\n+    let mut buf = String::with_capacity(s.len());\n+    let mut prev = false;\n+    for c in s.chars() {\n+        if c.is_ascii_uppercase() && prev {\n+            buf.push('_')\n+        }\n+        prev = true;\n+\n+        buf.push(c.to_ascii_lowercase());\n+    }\n+    buf\n+}"}]}