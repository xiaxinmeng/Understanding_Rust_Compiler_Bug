{"sha": "d96446c53cbe19814ea1b3bfce58b474fb0c0b44", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5NjQ0NmM1M2NiZTE5ODE0ZWExYjNiZmNlNThiNDc0ZmIwYzBiNDQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-05-29T13:23:57Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-04T11:20:04Z"}, "message": "Use SyncOnceCell in get_codegen_backend\n\nThis reduces the amount of unsafe code in get_codegen_backend", "tree": {"sha": "ee7953c54b83f09adf55fc84f24cafdd81ca88a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee7953c54b83f09adf55fc84f24cafdd81ca88a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d96446c53cbe19814ea1b3bfce58b474fb0c0b44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d96446c53cbe19814ea1b3bfce58b474fb0c0b44", "html_url": "https://github.com/rust-lang/rust/commit/d96446c53cbe19814ea1b3bfce58b474fb0c0b44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d96446c53cbe19814ea1b3bfce58b474fb0c0b44/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1870f9b05f42b36747a9acce8cbb0e3dc81a3c9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1870f9b05f42b36747a9acce8cbb0e3dc81a3c9c", "html_url": "https://github.com/rust-lang/rust/commit/1870f9b05f42b36747a9acce8cbb0e3dc81a3c9c"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "d1d0eee365d48f1e91418b606a31f65c88d5b81b", "filename": "compiler/rustc_interface/src/util.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d96446c53cbe19814ea1b3bfce58b474fb0c0b44/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d96446c53cbe19814ea1b3bfce58b474fb0c0b44/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Futil.rs?ref=d96446c53cbe19814ea1b3bfce58b474fb0c0b44", "patch": "@@ -32,7 +32,7 @@ use std::ops::DerefMut;\n use std::panic;\n use std::path::{Path, PathBuf};\n use std::sync::atomic::{AtomicBool, Ordering};\n-use std::sync::{Arc, Mutex, Once};\n+use std::sync::{Arc, Mutex};\n use std::thread;\n use tracing::info;\n \n@@ -251,29 +251,27 @@ pub fn get_codegen_backend(\n     maybe_sysroot: &Option<PathBuf>,\n     backend_name: Option<&str>,\n ) -> Box<dyn CodegenBackend> {\n-    static INIT: Once = Once::new();\n+    static LOAD: SyncOnceCell<unsafe fn() -> Box<dyn CodegenBackend>> = SyncOnceCell::new();\n \n-    static mut LOAD: fn() -> Box<dyn CodegenBackend> = || unreachable!();\n-\n-    INIT.call_once(|| {\n+    let load = LOAD.get_or_init(|| {\n         #[cfg(feature = \"llvm\")]\n         const DEFAULT_CODEGEN_BACKEND: &str = \"llvm\";\n \n         #[cfg(not(feature = \"llvm\"))]\n         const DEFAULT_CODEGEN_BACKEND: &str = \"cranelift\";\n \n-        let backend = match backend_name.unwrap_or(DEFAULT_CODEGEN_BACKEND) {\n+        match backend_name.unwrap_or(DEFAULT_CODEGEN_BACKEND) {\n             filename if filename.contains('.') => load_backend_from_dylib(filename.as_ref()),\n             #[cfg(feature = \"llvm\")]\n             \"llvm\" => rustc_codegen_llvm::LlvmCodegenBackend::new,\n             backend_name => get_codegen_sysroot(maybe_sysroot, backend_name),\n-        };\n-\n-        unsafe {\n-            LOAD = backend;\n         }\n     });\n-    unsafe { LOAD() }\n+\n+    // SAFETY: In case of a builtin codegen backend this is safe. In case of an external codegen\n+    // backend we hope that the backend links against the same rustc_driver version. If this is not\n+    // the case, we get UB.\n+    unsafe { load() }\n }\n \n // This is used for rustdoc, but it uses similar machinery to codegen backend"}]}