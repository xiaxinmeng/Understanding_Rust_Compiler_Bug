{"sha": "ee8afff71486a59334a812b69b8ebe0c4c2afba9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlOGFmZmY3MTQ4NmE1OTMzNGE4MTJiNjliOGViZTBjNGMyYWZiYTk=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-11-28T21:46:25Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-11-28T21:59:24Z"}, "message": "Show type of self param on hover", "tree": {"sha": "c35e9043c016d6367159348e12f7b025ae3e60c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c35e9043c016d6367159348e12f7b025ae3e60c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee8afff71486a59334a812b69b8ebe0c4c2afba9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee8afff71486a59334a812b69b8ebe0c4c2afba9", "html_url": "https://github.com/rust-lang/rust/commit/ee8afff71486a59334a812b69b8ebe0c4c2afba9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee8afff71486a59334a812b69b8ebe0c4c2afba9/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c66d477f5a72247b04b9025f6ba9c403ca628d41", "url": "https://api.github.com/repos/rust-lang/rust/commits/c66d477f5a72247b04b9025f6ba9c403ca628d41", "html_url": "https://github.com/rust-lang/rust/commit/c66d477f5a72247b04b9025f6ba9c403ca628d41"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "94ad800a085b2945734672bd430764e9a4e576f7", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 43, "deletions": 3, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/ee8afff71486a59334a812b69b8ebe0c4c2afba9/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee8afff71486a59334a812b69b8ebe0c4c2afba9/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=ee8afff71486a59334a812b69b8ebe0c4c2afba9", "patch": "@@ -139,14 +139,17 @@ pub(crate) fn hover(\n         }\n     }\n \n-    let node = token\n-        .ancestors()\n-        .find(|n| ast::Expr::cast(n.clone()).is_some() || ast::Pat::cast(n.clone()).is_some())?;\n+    let node = token.ancestors().find(|n| {\n+        ast::Expr::can_cast(n.kind())\n+            || ast::Pat::can_cast(n.kind())\n+            || ast::SelfParam::can_cast(n.kind())\n+    })?;\n \n     let ty = match_ast! {\n         match node {\n             ast::Expr(it) => sema.type_of_expr(&it)?,\n             ast::Pat(it) => sema.type_of_pat(&it)?,\n+            ast::SelfParam(self_param) => sema.type_of_self(&self_param)?,\n             // If this node is a MACRO_CALL, it means that `descend_into_macros` failed to resolve.\n             // (e.g expanding a builtin macro). So we give up here.\n             ast::MacroCall(_it) => return None,\n@@ -3282,4 +3285,41 @@ fn main() {\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn hover_self_param_shows_type() {\n+        check(\n+            r#\"\n+struct Foo {}\n+impl Foo {\n+    fn bar(&sel<|>f) {}\n+}\n+\"#,\n+            expect![[r#\"\n+                *&self*\n+                ```rust\n+                &Foo\n+                ```\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn hover_self_param_shows_type_for_arbitrary_self_type() {\n+        check(\n+            r#\"\n+struct Arc<T>(T);\n+struct Foo {}\n+impl Foo {\n+    fn bar(sel<|>f: Arc<Foo>) {}\n+}\n+\"#,\n+            expect![[r#\"\n+                *self: Arc<Foo>*\n+                ```rust\n+                Arc<Foo>\n+                ```\n+            \"#]],\n+        );\n+    }\n }"}]}