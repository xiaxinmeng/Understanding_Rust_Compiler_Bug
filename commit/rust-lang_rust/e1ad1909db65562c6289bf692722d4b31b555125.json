{"sha": "e1ad1909db65562c6289bf692722d4b31b555125", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYWQxOTA5ZGI2NTU2MmM2Mjg5YmY2OTI3MjJkNGIzMWI1NTUxMjU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-12T20:15:29Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-12T20:15:29Z"}, "message": "rename trait to conform with 'getter trait' pattern", "tree": {"sha": "4dd75f9dda64fc0e2ed0dcc20f24538c3798d691", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4dd75f9dda64fc0e2ed0dcc20f24538c3798d691"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1ad1909db65562c6289bf692722d4b31b555125", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1ad1909db65562c6289bf692722d4b31b555125", "html_url": "https://github.com/rust-lang/rust/commit/e1ad1909db65562c6289bf692722d4b31b555125", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1ad1909db65562c6289bf692722d4b31b555125/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66fce33ecb56c8aae8d77ffd4fc0562aadf66a0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/66fce33ecb56c8aae8d77ffd4fc0562aadf66a0b", "html_url": "https://github.com/rust-lang/rust/commit/66fce33ecb56c8aae8d77ffd4fc0562aadf66a0b"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "d176ae761e181aa03460c7dc92262196fa8aa7b9", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e1ad1909db65562c6289bf692722d4b31b555125/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1ad1909db65562c6289bf692722d4b31b555125/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=e1ad1909db65562c6289bf692722d4b31b555125", "patch": "@@ -69,18 +69,18 @@ macro_rules! newtype_index {\n /// Types for locals\n type LocalDecls<'tcx> = IndexVec<Local, LocalDecl<'tcx>>;\n \n-pub trait AsLocalDeclsRef<'tcx> {\n-    fn as_ref(&self) -> &LocalDecls<'tcx>;\n+pub trait HasLocalDecls<'tcx> {\n+    fn local_decls(&self) -> &LocalDecls<'tcx>;\n }\n \n-impl<'tcx> AsLocalDeclsRef<'tcx> for LocalDecls<'tcx> {\n-    fn as_ref(&self) -> &LocalDecls<'tcx> {\n+impl<'tcx> HasLocalDecls<'tcx> for LocalDecls<'tcx> {\n+    fn local_decls(&self) -> &LocalDecls<'tcx> {\n         self\n     }\n }\n \n-impl<'tcx> AsLocalDeclsRef<'tcx> for Mir<'tcx> {\n-    fn as_ref(&self) -> &LocalDecls<'tcx> {\n+impl<'tcx> HasLocalDecls<'tcx> for Mir<'tcx> {\n+    fn local_decls(&self) -> &LocalDecls<'tcx> {\n         &self.local_decls\n     }\n }"}, {"sha": "d3b87c1201dcfacd444b027dd3ac4b4bd1528baa", "filename": "src/librustc/mir/tcx.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e1ad1909db65562c6289bf692722d4b31b555125/src%2Flibrustc%2Fmir%2Ftcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1ad1909db65562c6289bf692722d4b31b555125/src%2Flibrustc%2Fmir%2Ftcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Ftcx.rs?ref=e1ad1909db65562c6289bf692722d4b31b555125", "patch": "@@ -121,10 +121,10 @@ impl<'tcx> TypeFoldable<'tcx> for LvalueTy<'tcx> {\n }\n \n impl<'tcx> Lvalue<'tcx> {\n-    pub fn ty<'a, 'gcx, D: AsLocalDeclsRef<'tcx>>(&self, local_decls: &D, tcx: TyCtxt<'a, 'gcx, 'tcx>) -> LvalueTy<'tcx> {\n+    pub fn ty<'a, 'gcx, D: HasLocalDecls<'tcx>>(&self, local_decls: &D, tcx: TyCtxt<'a, 'gcx, 'tcx>) -> LvalueTy<'tcx> {\n         match *self {\n             Lvalue::Local(index) =>\n-                LvalueTy::Ty { ty: local_decls.as_ref()[index].ty },\n+                LvalueTy::Ty { ty: local_decls.local_decls()[index].ty },\n             Lvalue::Static(ref data) =>\n                 LvalueTy::Ty { ty: data.ty },\n             Lvalue::Projection(ref proj) =>\n@@ -134,7 +134,7 @@ impl<'tcx> Lvalue<'tcx> {\n }\n \n impl<'tcx> Rvalue<'tcx> {\n-    pub fn ty<'a, 'gcx, D: AsLocalDeclsRef<'tcx>>(&self, local_decls: &D, tcx: TyCtxt<'a, 'gcx, 'tcx>) -> Ty<'tcx>\n+    pub fn ty<'a, 'gcx, D: HasLocalDecls<'tcx>>(&self, local_decls: &D, tcx: TyCtxt<'a, 'gcx, 'tcx>) -> Ty<'tcx>\n     {\n         match *self {\n             Rvalue::Use(ref operand) => operand.ty(local_decls, tcx),\n@@ -206,7 +206,7 @@ impl<'tcx> Rvalue<'tcx> {\n }\n \n impl<'tcx> Operand<'tcx> {\n-    pub fn ty<'a, 'gcx, D: AsLocalDeclsRef<'tcx>>(&self, local_decls: &D, tcx: TyCtxt<'a, 'gcx, 'tcx>) -> Ty<'tcx> {\n+    pub fn ty<'a, 'gcx, D: HasLocalDecls<'tcx>>(&self, local_decls: &D, tcx: TyCtxt<'a, 'gcx, 'tcx>) -> Ty<'tcx> {\n         match self {\n             &Operand::Consume(ref l) => l.ty(local_decls, tcx).to_ty(tcx),\n             &Operand::Constant(ref c) => c.ty,"}]}