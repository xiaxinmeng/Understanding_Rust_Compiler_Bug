{"sha": "41ab324539976cadc01f3d150b976cc4d2ca9d1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxYWIzMjQ1Mzk5NzZjYWRjMDFmM2QxNTBiOTc2Y2M0ZDJjYTlkMWQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-28T22:15:54Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-30T00:34:49Z"}, "message": "rustc: Generate types in trans for the C-stack native ABI", "tree": {"sha": "2c8d078aec43b0dc5d5a7f12d431a67a533c469b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c8d078aec43b0dc5d5a7f12d431a67a533c469b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41ab324539976cadc01f3d150b976cc4d2ca9d1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41ab324539976cadc01f3d150b976cc4d2ca9d1d", "html_url": "https://github.com/rust-lang/rust/commit/41ab324539976cadc01f3d150b976cc4d2ca9d1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41ab324539976cadc01f3d150b976cc4d2ca9d1d/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4dafbcd992f756c41943b2444e57bddb6127ab3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dafbcd992f756c41943b2444e57bddb6127ab3a", "html_url": "https://github.com/rust-lang/rust/commit/4dafbcd992f756c41943b2444e57bddb6127ab3a"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "765e5815983b6df8324ad81524e7abcec6779525", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/41ab324539976cadc01f3d150b976cc4d2ca9d1d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41ab324539976cadc01f3d150b976cc4d2ca9d1d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=41ab324539976cadc01f3d150b976cc4d2ca9d1d", "patch": "@@ -194,8 +194,12 @@ fn type_of_inner(cx: @crate_ctxt, sp: span, t: ty::t)\n         T_fn_pair(*cx, type_of_fn_from_ty(cx, sp, t, 0u))\n       }\n       ty::ty_native_fn(abi, args, out) {\n-        let nft = native_fn_wrapper_type(cx, sp, 0u, t);\n-        T_fn_pair(*cx, nft)\n+        if native_abi_requires_pair(abi) {\n+            let nft = native_fn_wrapper_type(cx, sp, 0u, t);\n+            T_fn_pair(*cx, nft)\n+        } else {\n+            raw_native_fn_type(cx, sp, args, out)\n+        }\n       }\n       ty::ty_obj(meths) { cx.rust_object_type }\n       ty::ty_res(_, sub, tps) {\n@@ -5658,6 +5662,15 @@ fn native_fn_ty_param_count(cx: @crate_ctxt, id: ast::node_id) -> uint {\n     ret count;\n }\n \n+fn native_abi_requires_pair(abi: ast::native_abi) -> bool {\n+    alt abi {\n+        ast::native_abi_rust. | ast::native_abi_cdecl. |\n+        ast::native_abi_llvm. | ast::native_abi_rust_intrinsic. |\n+        ast::native_abi_x86stdcall. { ret true; }\n+        ast::native_abi_c_stack_cdecl. { ret false; }\n+    }\n+}\n+\n fn native_fn_wrapper_type(cx: @crate_ctxt, sp: span, ty_param_count: uint,\n                           x: ty::t) -> TypeRef {\n     alt ty::struct(cx.tcx, x) {\n@@ -5669,6 +5682,12 @@ fn native_fn_wrapper_type(cx: @crate_ctxt, sp: span, ty_param_count: uint,\n     }\n }\n \n+fn raw_native_fn_type(ccx: @crate_ctxt, sp: span, args: [ty::arg],\n+                      ret_ty: ty::t) -> TypeRef {\n+    check type_has_static_size(ccx, ret_ty);\n+    ret T_fn(type_of_explicit_args(ccx, sp, args), type_of(ccx, sp, ret_ty));\n+}\n+\n fn register_native_fn(ccx: @crate_ctxt, sp: span, path: [str], name: str,\n                            id: ast::node_id) {\n     let path = path;"}]}