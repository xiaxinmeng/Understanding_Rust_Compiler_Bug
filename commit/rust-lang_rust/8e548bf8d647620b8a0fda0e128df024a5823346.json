{"sha": "8e548bf8d647620b8a0fda0e128df024a5823346", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlNTQ4YmY4ZDY0NzYyMGI4YTBmZGEwZTEyOGRmMDI0YTU4MjMzNDY=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-10-14T08:48:03Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-10-18T08:31:58Z"}, "message": "Remove weird slice conversion", "tree": {"sha": "686b3e80886196f74adbd94e736aaeec84af3b9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/686b3e80886196f74adbd94e736aaeec84af3b9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e548bf8d647620b8a0fda0e128df024a5823346", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e548bf8d647620b8a0fda0e128df024a5823346", "html_url": "https://github.com/rust-lang/rust/commit/8e548bf8d647620b8a0fda0e128df024a5823346", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e548bf8d647620b8a0fda0e128df024a5823346/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f43af26e9492c51777d5153c7bfdfb9a7cc374d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f43af26e9492c51777d5153c7bfdfb9a7cc374d", "html_url": "https://github.com/rust-lang/rust/commit/6f43af26e9492c51777d5153c7bfdfb9a7cc374d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f567dd83bc13dc6b4b6ae3aee3fc1d04b3b60b4f", "filename": "compiler/rustc_passes/src/dead.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e548bf8d647620b8a0fda0e128df024a5823346/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e548bf8d647620b8a0fda0e128df024a5823346/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdead.rs?ref=8e548bf8d647620b8a0fda0e128df024a5823346", "patch": "@@ -547,7 +547,7 @@ impl DeadVisitor<'tcx> {\n         let def_id = self.tcx.hir().local_def_id(id);\n         let inherent_impls = self.tcx.inherent_impls(def_id);\n         for &impl_did in inherent_impls.iter() {\n-            for &item_did in &self.tcx.associated_item_def_ids(impl_did)[..] {\n+            for item_did in self.tcx.associated_item_def_ids(impl_did) {\n                 if let Some(did) = item_did.as_local() {\n                     let item_hir_id = self.tcx.hir().local_def_id_to_hir_id(did);\n                     if self.live_symbols.contains(&item_hir_id) {"}]}