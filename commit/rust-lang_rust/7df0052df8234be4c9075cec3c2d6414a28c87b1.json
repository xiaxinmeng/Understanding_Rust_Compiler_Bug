{"sha": "7df0052df8234be4c9075cec3c2d6414a28c87b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkZjAwNTJkZjgyMzRiZTRjOTA3NWNlYzNjMmQ2NDE0YTI4Yzg3YjE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-11-28T15:11:25Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-12-01T15:26:51Z"}, "message": "Created NestedMetaItem::name_value_literal_span method", "tree": {"sha": "8c73da06a79f3d5159d2b6f8274344414501451e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c73da06a79f3d5159d2b6f8274344414501451e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7df0052df8234be4c9075cec3c2d6414a28c87b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7df0052df8234be4c9075cec3c2d6414a28c87b1", "html_url": "https://github.com/rust-lang/rust/commit/7df0052df8234be4c9075cec3c2d6414a28c87b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7df0052df8234be4c9075cec3c2d6414a28c87b1/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fa9d31c41cfa5f60dbce1204104eb8d8261be5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fa9d31c41cfa5f60dbce1204104eb8d8261be5f", "html_url": "https://github.com/rust-lang/rust/commit/0fa9d31c41cfa5f60dbce1204104eb8d8261be5f"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "30050002046e654d81fb724b916700b8fc939372", "filename": "compiler/rustc_ast/src/attr/mod.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7df0052df8234be4c9075cec3c2d6414a28c87b1/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7df0052df8234be4c9075cec3c2d6414a28c87b1/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs?ref=7df0052df8234be4c9075cec3c2d6414a28c87b1", "patch": "@@ -115,6 +115,10 @@ impl NestedMetaItem {\n     pub fn is_meta_item_list(&self) -> bool {\n         self.meta_item_list().is_some()\n     }\n+\n+    pub fn name_value_literal_span(&self) -> Option<Span> {\n+        self.meta_item()?.name_value_literal_span()\n+    }\n }\n \n impl Attribute {\n@@ -175,6 +179,13 @@ impl Attribute {\n     pub fn is_value_str(&self) -> bool {\n         self.value_str().is_some()\n     }\n+\n+    pub fn name_value_literal_span(&self) -> Option<Span> {\n+        match self.kind {\n+            AttrKind::Normal(ref item, _) => item.meta(self.span).and_then(|meta| meta.name_value_literal_span()),\n+            AttrKind::DocComment(..) => None,\n+        }\n+    }\n }\n \n impl MetaItem {\n@@ -227,6 +238,10 @@ impl MetaItem {\n     pub fn is_value_str(&self) -> bool {\n         self.value_str().is_some()\n     }\n+\n+    pub fn name_value_literal_span(&self) -> Option<Span> {\n+        Some(self.name_value_literal()?.span)\n+    }\n }\n \n impl AttrItem {"}, {"sha": "bb7562bc80c7cd08319456cfaaf7ba8d27d49eb9", "filename": "compiler/rustc_attr/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7df0052df8234be4c9075cec3c2d6414a28c87b1/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7df0052df8234be4c9075cec3c2d6414a28c87b1/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs?ref=7df0052df8234be4c9075cec3c2d6414a28c87b1", "patch": "@@ -294,7 +294,7 @@ where\n                                                     or \\\"none\\\"\",\n                                                 )\n                                                 .span_label(\n-                                                    mi.name_value_literal().unwrap().span,\n+                                                    mi.name_value_literal_span().unwrap(),\n                                                     msg,\n                                                 )\n                                                 .emit();"}, {"sha": "37ff6b9b368e7878b2ae79b7da82651b50cf65dc", "filename": "compiler/rustc_expand/src/expand.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7df0052df8234be4c9075cec3c2d6414a28c87b1/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7df0052df8234be4c9075cec3c2d6414a28c87b1/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs?ref=7df0052df8234be4c9075cec3c2d6414a28c87b1", "patch": "@@ -1603,23 +1603,22 @@ impl<'a, 'b> MutVisitor for InvocationCollector<'a, 'b> {\n                             items.push(ast::NestedMetaItem::MetaItem(item));\n                         }\n                         Err(e) => {\n-                            let lit =\n-                                it.meta_item().and_then(|item| item.name_value_literal()).unwrap();\n+                            let lit_span = it.name_value_literal_span().unwrap();\n \n                             if e.kind() == ErrorKind::InvalidData {\n                                 self.cx\n                                     .struct_span_err(\n-                                        lit.span,\n+                                        lit_span,\n                                         &format!(\"{} wasn't a utf-8 file\", filename.display()),\n                                     )\n-                                    .span_label(lit.span, \"contains invalid utf-8\")\n+                                    .span_label(lit_span, \"contains invalid utf-8\")\n                                     .emit();\n                             } else {\n                                 let mut err = self.cx.struct_span_err(\n-                                    lit.span,\n+                                    lit_span,\n                                     &format!(\"couldn't read {}: {}\", filename.display(), e),\n                                 );\n-                                err.span_label(lit.span, \"couldn't read file\");\n+                                err.span_label(lit_span, \"couldn't read file\");\n \n                                 err.emit();\n                             }"}, {"sha": "61f850c2fc166fa86da21a1b1462158ea5372bbf", "filename": "compiler/rustc_middle/src/middle/limits.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7df0052df8234be4c9075cec3c2d6414a28c87b1/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Flimits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7df0052df8234be4c9075cec3c2d6414a28c87b1/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Flimits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Flimits.rs?ref=7df0052df8234be4c9075cec3c2d6414a28c87b1", "patch": "@@ -43,8 +43,7 @@ fn update_limit(\n \n                     let value_span = attr\n                         .meta()\n-                        .and_then(|meta| meta.name_value_literal().cloned())\n-                        .map(|lit| lit.span)\n+                        .and_then(|meta| meta.name_value_literal_span())\n                         .unwrap_or(attr.span);\n \n                     let error_str = match e.kind() {"}]}