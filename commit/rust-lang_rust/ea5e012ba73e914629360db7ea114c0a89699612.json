{"sha": "ea5e012ba73e914629360db7ea114c0a89699612", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhNWUwMTJiYTczZTkxNDYyOTM2MGRiN2VhMTE0YzBhODk2OTk2MTI=", "commit": {"author": {"name": "LinkTed", "email": "LinkTed@users.noreply.github.com", "date": "2020-10-21T15:51:53Z"}, "committer": {"name": "LinkTed", "email": "LinkTed@users.noreply.github.com", "date": "2020-10-28T17:22:16Z"}, "message": "Fix test cases for MacOs", "tree": {"sha": "b91f1a7eafde582f8a34d94a9d3f1de229a08c59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b91f1a7eafde582f8a34d94a9d3f1de229a08c59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea5e012ba73e914629360db7ea114c0a89699612", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea5e012ba73e914629360db7ea114c0a89699612", "html_url": "https://github.com/rust-lang/rust/commit/ea5e012ba73e914629360db7ea114c0a89699612", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea5e012ba73e914629360db7ea114c0a89699612/comments", "author": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79273fa30c62f2277688ed19649a0b45b902c8a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/79273fa30c62f2277688ed19649a0b45b902c8a1", "html_url": "https://github.com/rust-lang/rust/commit/79273fa30c62f2277688ed19649a0b45b902c8a1"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "97a016904b4a4be83e6b0338a19adec039ac859e", "filename": "library/std/src/sys/unix/ext/net/tests.rs", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ea5e012ba73e914629360db7ea114c0a89699612/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea5e012ba73e914629360db7ea114c0a89699612/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Ftests.rs?ref=ea5e012ba73e914629360db7ea114c0a89699612", "patch": "@@ -1,7 +1,25 @@\n use super::*;\n use crate::io::prelude::*;\n use crate::io::{self, ErrorKind, IoSlice, IoSliceMut};\n+#[cfg(any(\n+    target_os = \"android\",\n+    target_os = \"dragonfly\",\n+    target_os = \"emscripten\",\n+    target_os = \"freebsd\",\n+    target_os = \"linux\",\n+    target_os = \"netbsd\",\n+    target_os = \"openbsd\",\n+))]\n use crate::iter::FromIterator;\n+#[cfg(any(\n+    target_os = \"android\",\n+    target_os = \"dragonfly\",\n+    target_os = \"emscripten\",\n+    target_os = \"freebsd\",\n+    target_os = \"linux\",\n+    target_os = \"netbsd\",\n+    target_os = \"openbsd\",\n+))]\n use crate::os::unix::io::AsRawFd;\n use crate::sys_common::io::test::tmpdir;\n use crate::thread;\n@@ -454,6 +472,15 @@ fn test_unix_datagram_peek_from() {\n     assert_eq!(msg, &buf[..]);\n }\n \n+#[cfg(any(\n+    target_os = \"android\",\n+    target_os = \"dragonfly\",\n+    target_os = \"emscripten\",\n+    target_os = \"freebsd\",\n+    target_os = \"linux\",\n+    target_os = \"netbsd\",\n+    target_os = \"openbsd\",\n+))]\n #[test]\n fn test_send_vectored_fds_unix_stream() {\n     let (s1, s2) = or_panic!(UnixStream::pair());\n@@ -491,7 +518,7 @@ fn test_send_vectored_fds_unix_stream() {\n     }\n }\n \n-#[cfg(any(test, target_os = \"android\", target_os = \"emscripten\", target_os = \"linux\",))]\n+#[cfg(any(target_os = \"android\", target_os = \"emscripten\", target_os = \"linux\",))]\n #[test]\n fn test_send_vectored_with_ancillary_to_unix_datagram() {\n     fn getpid() -> libc::pid_t {\n@@ -559,7 +586,6 @@ fn test_send_vectored_with_ancillary_to_unix_datagram() {\n }\n \n #[cfg(any(\n-    test,\n     target_os = \"android\",\n     target_os = \"dragonfly\",\n     target_os = \"emscripten\","}]}