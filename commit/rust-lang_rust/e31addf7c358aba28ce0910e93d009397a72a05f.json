{"sha": "e31addf7c358aba28ce0910e93d009397a72a05f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMWFkZGY3YzM1OGFiYTI4Y2UwOTEwZTkzZDAwOTM5N2E3MmEwNWY=", "commit": {"author": {"name": "Emilio Cobos \u00c1lvarez", "email": "emilio@crisal.io", "date": "2018-03-12T20:15:16Z"}, "committer": {"name": "Emilio Cobos \u00c1lvarez", "email": "emilio@crisal.io", "date": "2018-03-25T01:30:06Z"}, "message": "librustc_trans: Gate the preinliner with another -Z flag.\n\nSigned-off-by: Emilio Cobos \u00c1lvarez <emilio@crisal.io>", "tree": {"sha": "da2cfad0130f9a2087fbeda65f2a9b0cc2df549c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da2cfad0130f9a2087fbeda65f2a9b0cc2df549c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e31addf7c358aba28ce0910e93d009397a72a05f", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE+uMrE+H37zcdV8pyBWtye7nBAnwFAlq2+54ACgkQBWtye7nB\nAnyrsgf/WcZT6NgG3H+QC31k0AMCaLeap5xZNQeZsQTm0sdLC8hIeB2d9VV9jy0r\nn4+xZKzp9GFWn0pxDDfX/MlbX6ijO2se/zD1HT/2dM2VumNSkOTk/KNR+UL7VBOO\nRr8OH0Cr8gbR7bkDZQj7KrdN8vYfBi+FiazXAy+++NgGbL1p9/mVWcd6D82wN685\nmTCnyBdQYateidTLJtArZWfY1eORcyZ1Tw80If5pyAjXo2cC5c11jfLQS5UprK/S\nxKFJzgVH1/F8no91dnS75Cf+3yYrL2vSYe7dR27x9j55ccxWjH1ygIZgLCxddS+/\nEuF7mBBljp4BH9s1rwWTIjaPre12bQ==\n=d/Hh\n-----END PGP SIGNATURE-----", "payload": "tree da2cfad0130f9a2087fbeda65f2a9b0cc2df549c\nparent 688275a4009a7a87fb211f0b690f386fc2de8740\nauthor Emilio Cobos \u00c1lvarez <emilio@crisal.io> 1520885716 +0100\ncommitter Emilio Cobos \u00c1lvarez <emilio@crisal.io> 1521941406 +0200\n\nlibrustc_trans: Gate the preinliner with another -Z flag.\n\nSigned-off-by: Emilio Cobos \u00c1lvarez <emilio@crisal.io>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e31addf7c358aba28ce0910e93d009397a72a05f", "html_url": "https://github.com/rust-lang/rust/commit/e31addf7c358aba28ce0910e93d009397a72a05f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e31addf7c358aba28ce0910e93d009397a72a05f/comments", "author": {"login": "emilio", "id": 1323194, "node_id": "MDQ6VXNlcjEzMjMxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1323194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilio", "html_url": "https://github.com/emilio", "followers_url": "https://api.github.com/users/emilio/followers", "following_url": "https://api.github.com/users/emilio/following{/other_user}", "gists_url": "https://api.github.com/users/emilio/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilio/subscriptions", "organizations_url": "https://api.github.com/users/emilio/orgs", "repos_url": "https://api.github.com/users/emilio/repos", "events_url": "https://api.github.com/users/emilio/events{/privacy}", "received_events_url": "https://api.github.com/users/emilio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emilio", "id": 1323194, "node_id": "MDQ6VXNlcjEzMjMxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1323194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilio", "html_url": "https://github.com/emilio", "followers_url": "https://api.github.com/users/emilio/followers", "following_url": "https://api.github.com/users/emilio/following{/other_user}", "gists_url": "https://api.github.com/users/emilio/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilio/subscriptions", "organizations_url": "https://api.github.com/users/emilio/orgs", "repos_url": "https://api.github.com/users/emilio/repos", "events_url": "https://api.github.com/users/emilio/events{/privacy}", "received_events_url": "https://api.github.com/users/emilio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "688275a4009a7a87fb211f0b690f386fc2de8740", "url": "https://api.github.com/repos/rust-lang/rust/commits/688275a4009a7a87fb211f0b690f386fc2de8740", "html_url": "https://github.com/rust-lang/rust/commit/688275a4009a7a87fb211f0b690f386fc2de8740"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "9fd370c54be92f39805bccbc5cdeee5ac0a0653b", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e31addf7c358aba28ce0910e93d009397a72a05f/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e31addf7c358aba28ce0910e93d009397a72a05f/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=e31addf7c358aba28ce0910e93d009397a72a05f", "patch": "@@ -1254,6 +1254,9 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n          location if it's empty.\"),\n     pgo_use: String = (String::new(), parse_string, [TRACKED],\n         \"Use PGO profile data from the given profile file.\"),\n+    disable_instrumentation_preinliner: bool =\n+        (false, parse_bool, [TRACKED], \"Disable the instrumentation pre-inliner, \\\n+        useful for profiling / PGO.\"),\n     relro_level: Option<RelroLevel> = (None, parse_relro_level, [TRACKED],\n         \"choose which RELRO level to use\"),\n     nll: bool = (false, parse_bool, [UNTRACKED],"}, {"sha": "1c8f09ce7b3f1960bcfb5705e36f2143a18c4651", "filename": "src/librustc_trans/llvm_util.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e31addf7c358aba28ce0910e93d009397a72a05f/src%2Flibrustc_trans%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e31addf7c358aba28ce0910e93d009397a72a05f/src%2Flibrustc_trans%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fllvm_util.rs?ref=e31addf7c358aba28ce0910e93d009397a72a05f", "patch": "@@ -61,7 +61,9 @@ unsafe fn configure_llvm(sess: &Session) {\n         add(\"rustc\"); // fake program name\n         if sess.time_llvm_passes() { add(\"-time-passes\"); }\n         if sess.print_llvm_passes() { add(\"-debug-pass=Structure\"); }\n-        add(\"-disable-preinline\");\n+        if sess.opts.debugging_opts.disable_instrumentation_preinliner {\n+            add(\"-disable-preinline\");\n+        }\n \n         for arg in &sess.opts.cg.llvm_args {\n             add(&(*arg));"}]}