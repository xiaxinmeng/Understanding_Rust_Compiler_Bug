{"sha": "b6fe46055bd9b16fd74df43cbbcb89e612a82b4d", "node_id": "C_kwDOAAsO6NoAKGI2ZmU0NjA1NWJkOWIxNmZkNzRkZjQzY2JiY2I4OWU2MTJhODJiNGQ", "commit": {"author": {"name": "ice1000", "email": "ice1000kotlin@foxmail.com", "date": "2022-08-19T01:06:00Z"}, "committer": {"name": "ice1000", "email": "ice1000kotlin@foxmail.com", "date": "2022-08-19T01:06:00Z"}, "message": "feat: Improved inline_call to replace `Self`", "tree": {"sha": "c3250cedcb158d70e56eb9bd5424045886196125", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3250cedcb158d70e56eb9bd5424045886196125"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6fe46055bd9b16fd74df43cbbcb89e612a82b4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6fe46055bd9b16fd74df43cbbcb89e612a82b4d", "html_url": "https://github.com/rust-lang/rust/commit/b6fe46055bd9b16fd74df43cbbcb89e612a82b4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6fe46055bd9b16fd74df43cbbcb89e612a82b4d/comments", "author": {"login": "ice1000", "id": 16398479, "node_id": "MDQ6VXNlcjE2Mzk4NDc5", "avatar_url": "https://avatars.githubusercontent.com/u/16398479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ice1000", "html_url": "https://github.com/ice1000", "followers_url": "https://api.github.com/users/ice1000/followers", "following_url": "https://api.github.com/users/ice1000/following{/other_user}", "gists_url": "https://api.github.com/users/ice1000/gists{/gist_id}", "starred_url": "https://api.github.com/users/ice1000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ice1000/subscriptions", "organizations_url": "https://api.github.com/users/ice1000/orgs", "repos_url": "https://api.github.com/users/ice1000/repos", "events_url": "https://api.github.com/users/ice1000/events{/privacy}", "received_events_url": "https://api.github.com/users/ice1000/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ice1000", "id": 16398479, "node_id": "MDQ6VXNlcjE2Mzk4NDc5", "avatar_url": "https://avatars.githubusercontent.com/u/16398479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ice1000", "html_url": "https://github.com/ice1000", "followers_url": "https://api.github.com/users/ice1000/followers", "following_url": "https://api.github.com/users/ice1000/following{/other_user}", "gists_url": "https://api.github.com/users/ice1000/gists{/gist_id}", "starred_url": "https://api.github.com/users/ice1000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ice1000/subscriptions", "organizations_url": "https://api.github.com/users/ice1000/orgs", "repos_url": "https://api.github.com/users/ice1000/repos", "events_url": "https://api.github.com/users/ice1000/events{/privacy}", "received_events_url": "https://api.github.com/users/ice1000/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "917bd68b37de4e60e7203061a0a9c23b74d2b5c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/917bd68b37de4e60e7203061a0a9c23b74d2b5c2", "html_url": "https://github.com/rust-lang/rust/commit/917bd68b37de4e60e7203061a0a9c23b74d2b5c2"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "c78c5eaa9f42d0d1a685ce5d5b32d6c992d35411", "filename": "crates/ide-assists/src/handlers/inline_call.rs", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/b6fe46055bd9b16fd74df43cbbcb89e612a82b4d/crates%2Fide-assists%2Fsrc%2Fhandlers%2Finline_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6fe46055bd9b16fd74df43cbbcb89e612a82b4d/crates%2Fide-assists%2Fsrc%2Fhandlers%2Finline_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Finline_call.rs?ref=b6fe46055bd9b16fd74df43cbbcb89e612a82b4d", "patch": "@@ -13,7 +13,7 @@ use ide_db::{\n use itertools::{izip, Itertools};\n use syntax::{\n     ast::{self, edit_in_place::Indent, HasArgList, PathExpr},\n-    ted, AstNode,\n+    ted, AstNode, SyntaxKind,\n };\n \n use crate::{\n@@ -311,6 +311,16 @@ fn inline(\n     } else {\n         fn_body.clone_for_update()\n     };\n+    // TODO: use if-let chains - https://github.com/rust-lang/rust/pull/94927\n+    if let Some(i) = body.syntax().ancestors().find_map(ast::Impl::cast) {\n+        if let Some(st) = i.self_ty() {\n+            for tok in body.syntax().descendants_with_tokens().filter_map(|t| t.into_token()) {\n+                if tok.kind() == SyntaxKind::SELF_TYPE_KW {\n+                    ted::replace(tok, st.syntax());\n+                }\n+            }\n+        }\n+    }\n     let usages_for_locals = |local| {\n         Definition::Local(local)\n             .usages(sema)\n@@ -345,6 +355,7 @@ fn inline(\n             }\n         })\n         .collect();\n+\n     if function.self_param(sema.db).is_some() {\n         let this = || make::name_ref(\"this\").syntax().clone_for_update();\n         if let Some(self_local) = params[0].2.as_local(sema.db) {\n@@ -1188,6 +1199,31 @@ fn bar() -> u32 {\n       x\n     }\n }\n+\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn inline_call_with_self_type() {\n+        check_assist(\n+            inline_call,\n+            r#\"\n+struct A(u32);\n+impl A {\n+    fn f() -> Self { Self(114514) }\n+}\n+fn main() {\n+    A::f$0();\n+}\n+\"#,\n+            r#\"\n+struct A(u32);\n+impl A {\n+    fn f() -> Self { Self(114514) }\n+}\n+fn main() {\n+    A(114514);\n+}\n \"#,\n         )\n     }"}]}