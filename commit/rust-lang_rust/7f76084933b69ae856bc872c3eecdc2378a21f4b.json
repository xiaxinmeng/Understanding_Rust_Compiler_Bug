{"sha": "7f76084933b69ae856bc872c3eecdc2378a21f4b", "node_id": "C_kwDOAAsO6NoAKDdmNzYwODQ5MzNiNjlhZTg1NmJjODcyYzNlZWNkYzIzNzhhMjFmNGI", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-03-17T17:46:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-17T17:46:38Z"}, "message": "Add clarifying comments", "tree": {"sha": "a26d74903d318b2798fa397819b5e4cf1d61ea3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a26d74903d318b2798fa397819b5e4cf1d61ea3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f76084933b69ae856bc872c3eecdc2378a21f4b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkFKd+CRBK7hj4Ov3rIwAARMcIAKbzmFvzgPBLwyMXSJAS8SnA\nMRJ4sKeoIv3tZcA8jvY3z3R+MjvgyA2rdF7njC4YsnyRyGejIsvLWwXsjdF7a8yN\njyWhbhLRzXt5zw6/X2uF3cSDgKFopI4WoJICc1PtOPKrimVgPXX/eIELDq8kBqGz\nMDpHoAdKlh9PgBITO2GjJzObI3+qBGIGufD7J58moojqQpko774XznRVOib6BPji\nFnsEXZMwlIcOfFr0qHWRBwlvpRsm90iUdUT4B6CUyOrrMWycq/UciKgD7g9If6+N\nDwOfR22PviOdcBmRzEYB286XlV6IFrNtVJnybIw+Z1S+H5wSl+nceOATV+H6O9g=\n=L9ka\n-----END PGP SIGNATURE-----\n", "payload": "tree a26d74903d318b2798fa397819b5e4cf1d61ea3a\nparent bfb66eb4bb4ada8a0b4d48d73a93e8f5df0e54be\nauthor Michael Howell <michael@notriddle.com> 1679075198 -0700\ncommitter GitHub <noreply@github.com> 1679075198 -0700\n\nAdd clarifying comments"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f76084933b69ae856bc872c3eecdc2378a21f4b", "html_url": "https://github.com/rust-lang/rust/commit/7f76084933b69ae856bc872c3eecdc2378a21f4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f76084933b69ae856bc872c3eecdc2378a21f4b/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfb66eb4bb4ada8a0b4d48d73a93e8f5df0e54be", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfb66eb4bb4ada8a0b4d48d73a93e8f5df0e54be", "html_url": "https://github.com/rust-lang/rust/commit/bfb66eb4bb4ada8a0b4d48d73a93e8f5df0e54be"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "7dbb3f76a0a8366826f9e39d099b69a4649d9b62", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7f76084933b69ae856bc872c3eecdc2378a21f4b/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f76084933b69ae856bc872c3eecdc2378a21f4b/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=7f76084933b69ae856bc872c3eecdc2378a21f4b", "patch": "@@ -1496,6 +1496,8 @@ impl Type {\n     /// An owned type is also the same as its borrowed variants (this is commutative),\n     /// but `&T` is not the same as `&mut T`.\n     pub(crate) fn is_doc_subtype_of(&self, other: &Self, cache: &Cache) -> bool {\n+        // Strip the references so that it can compare the actual types, unless both are references.\n+        // If both are references, leave them alone and compare the mutabilities later.\n         let (self_cleared, other_cleared) = if !self.is_borrowed_ref() || !other.is_borrowed_ref() {\n             (self.without_borrowed_ref(), other.without_borrowed_ref())\n         } else {\n@@ -1518,6 +1520,7 @@ impl Type {\n             // Placeholders are equal to all other types.\n             (Type::Infer, _) | (_, Type::Infer) => true,\n             // Generics match everything on the right, but not on the left.\n+            // If both sides are generic, this returns true.\n             (_, Type::Generic(_)) => true,\n             (Type::Generic(_), _) => false,\n             // Paths account for both the path itself and its generics."}]}