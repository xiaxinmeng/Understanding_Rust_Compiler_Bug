{"sha": "047421e69efa88f1a5f65c39b1562063ab859436", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NzQyMWU2OWVmYTg4ZjFhNWY2NWMzOWIxNTYyMDYzYWI4NTk0MzY=", "commit": {"author": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-06-20T07:37:20Z"}, "committer": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-06-20T07:51:15Z"}, "message": "Add unit tests for unescaping raw (byte) strings", "tree": {"sha": "08f09d12a4d56ce7680ec63c864414eb12144c21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08f09d12a4d56ce7680ec63c864414eb12144c21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/047421e69efa88f1a5f65c39b1562063ab859436", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/047421e69efa88f1a5f65c39b1562063ab859436", "html_url": "https://github.com/rust-lang/rust/commit/047421e69efa88f1a5f65c39b1562063ab859436", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/047421e69efa88f1a5f65c39b1562063ab859436/comments", "author": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e0c6a69e075d9c7d19e28264bb8941f72ecaf4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e0c6a69e075d9c7d19e28264bb8941f72ecaf4e", "html_url": "https://github.com/rust-lang/rust/commit/5e0c6a69e075d9c7d19e28264bb8941f72ecaf4e"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "87cc9c1c9e323efd1b9dee8bc763eb1400889d20", "filename": "src/libsyntax/parse/unescape.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/047421e69efa88f1a5f65c39b1562063ab859436/src%2Flibsyntax%2Fparse%2Funescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/047421e69efa88f1a5f65c39b1562063ab859436/src%2Flibsyntax%2Fparse%2Funescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Funescape.rs?ref=047421e69efa88f1a5f65c39b1562063ab859436", "patch": "@@ -569,4 +569,34 @@ mod tests {\n         check(\"hello \\\\\\r\\n     world\", b\"hello world\");\n         check(\"thread's\", b\"thread's\")\n     }\n+\n+    #[test]\n+    fn test_unescape_raw_str() {\n+        fn check(literal: &str, expected: &[(Range<usize>, Result<char, EscapeError>)]) {\n+            let mut unescaped = Vec::with_capacity(literal.len());\n+            unescape_raw_str(literal, &mut |range, res| unescaped.push((range, res)));\n+            assert_eq!(unescaped, expected);\n+        }\n+\n+        check(\"\\r\\n\", &[(0..2, Ok('\\n'))]);\n+        check(\"\\r\", &[(0..1, Err(EscapeError::BareCarriageReturnInRawString))]);\n+        check(\"\\rx\", &[(0..1, Err(EscapeError::BareCarriageReturnInRawString)), (1..2, Ok('x'))]);\n+    }\n+\n+    #[test]\n+    fn test_unescape_raw_byte_str() {\n+        fn check(literal: &str, expected: &[(Range<usize>, Result<u8, EscapeError>)]) {\n+            let mut unescaped = Vec::with_capacity(literal.len());\n+            unescape_raw_byte_str(literal, &mut |range, res| unescaped.push((range, res)));\n+            assert_eq!(unescaped, expected);\n+        }\n+\n+        check(\"\\r\\n\", &[(0..2, Ok(byte_from_char('\\n')))]);\n+        check(\"\\r\", &[(0..1, Err(EscapeError::BareCarriageReturnInRawString))]);\n+        check(\"\ud83e\udd80\", &[(0..4, Err(EscapeError::NonAsciiCharInByteString))]);\n+        check(\n+            \"\ud83e\udd80a\",\n+            &[(0..4, Err(EscapeError::NonAsciiCharInByteString)), (4..5, Ok(byte_from_char('a')))],\n+        );\n+    }\n }"}]}