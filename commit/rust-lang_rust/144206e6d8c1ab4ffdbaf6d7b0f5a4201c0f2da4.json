{"sha": "144206e6d8c1ab4ffdbaf6d7b0f5a4201c0f2da4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NDIwNmU2ZDhjMWFiNGZmZGJhZjZkN2IwZjVhNDIwMWMwZjJkYTQ=", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2020-06-13T05:18:53Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2020-06-13T05:18:53Z"}, "message": "Don't implement Fn* traits for #[target_feature] functions", "tree": {"sha": "aefa08e9943299c9fb943dc558403eaffd1f99b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aefa08e9943299c9fb943dc558403eaffd1f99b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/144206e6d8c1ab4ffdbaf6d7b0f5a4201c0f2da4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/144206e6d8c1ab4ffdbaf6d7b0f5a4201c0f2da4", "html_url": "https://github.com/rust-lang/rust/commit/144206e6d8c1ab4ffdbaf6d7b0f5a4201c0f2da4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/144206e6d8c1ab4ffdbaf6d7b0f5a4201c0f2da4/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fb612bd15bb3ef098fd24c20d0727de573b4410", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fb612bd15bb3ef098fd24c20d0727de573b4410", "html_url": "https://github.com/rust-lang/rust/commit/1fb612bd15bb3ef098fd24c20d0727de573b4410"}], "stats": {"total": 79, "additions": 78, "deletions": 1}, "files": [{"sha": "91c4d1d62aa70f43f4f6a07c3be3bf157afdf882", "filename": "src/librustc_trait_selection/traits/select/candidate_assembly.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/144206e6d8c1ab4ffdbaf6d7b0f5a4201c0f2da4/src%2Flibrustc_trait_selection%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/144206e6d8c1ab4ffdbaf6d7b0f5a4201c0f2da4/src%2Flibrustc_trait_selection%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fselect%2Fcandidate_assembly.rs?ref=144206e6d8c1ab4ffdbaf6d7b0f5a4201c0f2da4", "patch": "@@ -306,7 +306,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 candidates.ambiguous = true; // Could wind up being a fn() type.\n             }\n             // Provide an impl, but only for suitable `fn` pointers.\n-            ty::FnDef(..) | ty::FnPtr(_) => {\n+            ty::FnPtr(_) => {\n                 if let ty::FnSig {\n                     unsafety: hir::Unsafety::Normal,\n                     abi: Abi::Rust,\n@@ -317,6 +317,20 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                     candidates.vec.push(FnPointerCandidate);\n                 }\n             }\n+            // Provide an impl for suitable functions, rejecting `#[target_feature]` functions (RFC 2396).\n+            ty::FnDef(def_id, _) => {\n+                if let ty::FnSig {\n+                    unsafety: hir::Unsafety::Normal,\n+                    abi: Abi::Rust,\n+                    c_variadic: false,\n+                    ..\n+                } = self_ty.fn_sig(self.tcx()).skip_binder()\n+                {\n+                    if self.tcx().codegen_fn_attrs(def_id).target_features.is_empty() {\n+                        candidates.vec.push(FnPointerCandidate);\n+                    }\n+                }\n+            }\n             _ => {}\n         }\n "}, {"sha": "58070b69bc1f8ffe6c24072c5a697c3f73bb62b2", "filename": "src/test/ui/rfcs/rfc-2396-target_feature-11/fn-traits.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/144206e6d8c1ab4ffdbaf6d7b0f5a4201c0f2da4/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffn-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/144206e6d8c1ab4ffdbaf6d7b0f5a4201c0f2da4/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffn-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffn-traits.rs?ref=144206e6d8c1ab4ffdbaf6d7b0f5a4201c0f2da4", "patch": "@@ -0,0 +1,24 @@\n+// only-x86_64\n+\n+#![feature(target_feature_11)]\n+\n+#[target_feature(enable = \"avx\")]\n+fn foo() {}\n+\n+fn call(f: impl Fn()) {\n+    f()\n+}\n+\n+fn call_mut(f: impl FnMut()) {\n+    f()\n+}\n+\n+fn call_once(f: impl FnOnce()) {\n+    f()\n+}\n+\n+fn main() {\n+    call(foo); //~ ERROR expected a `std::ops::Fn<()>` closure, found `fn() {foo}`\n+    call_mut(foo); //~ ERROR expected a `std::ops::FnMut<()>` closure, found `fn() {foo}`\n+    call_once(foo); //~ ERROR expected a `std::ops::FnOnce<()>` closure, found `fn() {foo}`\n+}"}, {"sha": "6dcf31b4c742afa8aab1f38c713c5700dc708fe5", "filename": "src/test/ui/rfcs/rfc-2396-target_feature-11/fn-traits.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/144206e6d8c1ab4ffdbaf6d7b0f5a4201c0f2da4/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffn-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/144206e6d8c1ab4ffdbaf6d7b0f5a4201c0f2da4/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffn-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Ffn-traits.stderr?ref=144206e6d8c1ab4ffdbaf6d7b0f5a4201c0f2da4", "patch": "@@ -0,0 +1,39 @@\n+error[E0277]: expected a `std::ops::Fn<()>` closure, found `fn() {foo}`\n+  --> $DIR/fn-traits.rs:21:10\n+   |\n+LL | fn call(f: impl Fn()) {\n+   |                 ---- required by this bound in `call`\n+...\n+LL |     call(foo);\n+   |          ^^^ expected an `Fn<()>` closure, found `fn() {foo}`\n+   |\n+   = help: the trait `std::ops::Fn<()>` is not implemented for `fn() {foo}`\n+   = note: wrap the `fn() {foo}` in a closure with no arguments: `|| { /* code */ }\n+\n+error[E0277]: expected a `std::ops::FnMut<()>` closure, found `fn() {foo}`\n+  --> $DIR/fn-traits.rs:22:14\n+   |\n+LL | fn call_mut(f: impl FnMut()) {\n+   |                     ------- required by this bound in `call_mut`\n+...\n+LL |     call_mut(foo);\n+   |              ^^^ expected an `FnMut<()>` closure, found `fn() {foo}`\n+   |\n+   = help: the trait `std::ops::FnMut<()>` is not implemented for `fn() {foo}`\n+   = note: wrap the `fn() {foo}` in a closure with no arguments: `|| { /* code */ }\n+\n+error[E0277]: expected a `std::ops::FnOnce<()>` closure, found `fn() {foo}`\n+  --> $DIR/fn-traits.rs:23:15\n+   |\n+LL | fn call_once(f: impl FnOnce()) {\n+   |                      -------- required by this bound in `call_once`\n+...\n+LL |     call_once(foo);\n+   |               ^^^ expected an `FnOnce<()>` closure, found `fn() {foo}`\n+   |\n+   = help: the trait `std::ops::FnOnce<()>` is not implemented for `fn() {foo}`\n+   = note: wrap the `fn() {foo}` in a closure with no arguments: `|| { /* code */ }\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}