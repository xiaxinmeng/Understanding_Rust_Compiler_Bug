{"sha": "fa1a172f9c8b5071a7bc9d818bfa6ae26401ec5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhMWExNzJmOWM4YjUwNzFhN2JjOWQ4MThiZmE2YWUyNjQwMWVjNWI=", "commit": {"author": {"name": "Matthijs Hofstra", "email": "thiezz@gmail.com", "date": "2013-05-12T22:12:14Z"}, "committer": {"name": "Matthijs Hofstra", "email": "thiezz@gmail.com", "date": "2013-05-12T22:12:14Z"}, "message": "Removed unnecessary check from build.rs", "tree": {"sha": "6b8ff71bfd2655ba1c39f496fb92a0adc533c95c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b8ff71bfd2655ba1c39f496fb92a0adc533c95c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa1a172f9c8b5071a7bc9d818bfa6ae26401ec5b", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa1a172f9c8b5071a7bc9d818bfa6ae26401ec5b", "html_url": "https://github.com/rust-lang/rust/commit/fa1a172f9c8b5071a7bc9d818bfa6ae26401ec5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa1a172f9c8b5071a7bc9d818bfa6ae26401ec5b/comments", "author": {"login": "Thiez", "id": 204550, "node_id": "MDQ6VXNlcjIwNDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/204550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thiez", "html_url": "https://github.com/Thiez", "followers_url": "https://api.github.com/users/Thiez/followers", "following_url": "https://api.github.com/users/Thiez/following{/other_user}", "gists_url": "https://api.github.com/users/Thiez/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thiez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thiez/subscriptions", "organizations_url": "https://api.github.com/users/Thiez/orgs", "repos_url": "https://api.github.com/users/Thiez/repos", "events_url": "https://api.github.com/users/Thiez/events{/privacy}", "received_events_url": "https://api.github.com/users/Thiez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Thiez", "id": 204550, "node_id": "MDQ6VXNlcjIwNDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/204550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thiez", "html_url": "https://github.com/Thiez", "followers_url": "https://api.github.com/users/Thiez/followers", "following_url": "https://api.github.com/users/Thiez/following{/other_user}", "gists_url": "https://api.github.com/users/Thiez/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thiez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thiez/subscriptions", "organizations_url": "https://api.github.com/users/Thiez/orgs", "repos_url": "https://api.github.com/users/Thiez/repos", "events_url": "https://api.github.com/users/Thiez/events{/privacy}", "received_events_url": "https://api.github.com/users/Thiez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9f21326062b0b455aebd2459e8406b03a048a26", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9f21326062b0b455aebd2459e8406b03a048a26", "html_url": "https://github.com/rust-lang/rust/commit/a9f21326062b0b455aebd2459e8406b03a048a26"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "b2af91887ecbfe89a4f3ce53af3e51cd80e29ebc", "filename": "src/librustc/middle/trans/build.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fa1a172f9c8b5071a7bc9d818bfa6ae26401ec5b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa1a172f9c8b5071a7bc9d818bfa6ae26401ec5b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs?ref=fa1a172f9c8b5071a7bc9d818bfa6ae26401ec5b", "patch": "@@ -541,10 +541,7 @@ pub fn AtomicLoad(cx: block, PointerVal: ValueRef, order: AtomicOrdering) -> Val\n     unsafe {\n         let ccx = cx.fcx.ccx;\n         if cx.unreachable {\n-            let ty = val_ty(PointerVal);\n-            let eltty = if llvm::LLVMGetTypeKind(ty) == lib::llvm::Array {\n-                llvm::LLVMGetElementType(ty) } else { ccx.int_type };\n-            return llvm::LLVMGetUndef(eltty);\n+            return llvm::LLVMGetUndef(ccx.int_type);\n         }\n         count_insn(cx, \"load.atomic\");\n         return llvm::LLVMBuildAtomicLoad(B(cx), PointerVal, order);"}]}