{"sha": "b473c2bd2a56a61275a47b95f75b0aff8fdb600a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0NzNjMmJkMmE1NmE2MTI3NWE0N2I5NWY3NWIwYWZmOGZkYjYwMGE=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-07-13T19:51:56Z"}, "committer": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-07-15T21:33:01Z"}, "message": "Format loops", "tree": {"sha": "65f8004ed6c801481747e5a658d4cd3a79b30ede", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65f8004ed6c801481747e5a658d4cd3a79b30ede"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b473c2bd2a56a61275a47b95f75b0aff8fdb600a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b473c2bd2a56a61275a47b95f75b0aff8fdb600a", "html_url": "https://github.com/rust-lang/rust/commit/b473c2bd2a56a61275a47b95f75b0aff8fdb600a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b473c2bd2a56a61275a47b95f75b0aff8fdb600a/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04cf309f3280fdd95570593833b4e3bd67765d07", "url": "https://api.github.com/repos/rust-lang/rust/commits/04cf309f3280fdd95570593833b4e3bd67765d07", "html_url": "https://github.com/rust-lang/rust/commit/04cf309f3280fdd95570593833b4e3bd67765d07"}], "stats": {"total": 69, "additions": 67, "deletions": 2}, "files": [{"sha": "4cce45e5eb3af31a4a0f4a2198f108244fc200da", "filename": "src/changes.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b473c2bd2a56a61275a47b95f75b0aff8fdb600a/src%2Fchanges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b473c2bd2a56a61275a47b95f75b0aff8fdb600a/src%2Fchanges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchanges.rs?ref=b473c2bd2a56a61275a47b95f75b0aff8fdb600a", "patch": "@@ -99,6 +99,14 @@ impl<'a> ChangeSet<'a> {\n         self.push_str(&file_name, text)\n     }\n \n+    // Fetch the output buffer for the given file name.\n+    // Panics on unknown files.\n+    pub fn get(&mut self, file_name: &str) -> &StringBuffer {\n+        self.file_map.get(file_name).unwrap()\n+    }\n+\n+    // Fetch a mutable reference to the output buffer for the given file name.\n+    // Panics on unknown files.\n     pub fn get_mut(&mut self, file_name: &str) -> &mut StringBuffer {\n         self.file_map.get_mut(file_name).unwrap()\n     }"}, {"sha": "e87020f4ae1025b3ea731c820a2afa5080112177", "filename": "src/expr.rs", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b473c2bd2a56a61275a47b95f75b0aff8fdb600a/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b473c2bd2a56a61275a47b95f75b0aff8fdb600a/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=b473c2bd2a56a61275a47b95f75b0aff8fdb600a", "patch": "@@ -12,11 +12,13 @@ use rewrite::{Rewrite, RewriteContext};\n use lists::{write_list, itemize_list, ListFormatting, SeparatorTactic, ListTactic};\n use string::{StringFormat, rewrite_string};\n use utils::{span_after, make_indent};\n+use visitor::FmtVisitor;\n \n use syntax::{ast, ptr};\n-use syntax::codemap::{Pos, Span, BytePos};\n+use syntax::codemap::{Pos, Span, BytePos, mk_sp};\n use syntax::parse::token;\n use syntax::print::pprust;\n+use syntax::visit::Visitor;\n \n impl Rewrite for ast::Expr {\n     fn rewrite(&self, context: &RewriteContext, width: usize, offset: usize) -> Option<String> {\n@@ -53,11 +55,38 @@ impl Rewrite for ast::Expr {\n             ast::Expr_::ExprTup(ref items) => {\n                 rewrite_tuple_lit(context, items, self.span, width, offset)\n             }\n+            ast::Expr_::ExprLoop(ref block, _) => {\n+                // FIXME: this drops any comment between \"loop\" and the block.\n+                // TODO: format label\n+                block.rewrite(context, width, offset).map(|result| {\n+                    format!(\"loop {}\", result)\n+                })\n+            }\n             _ => context.codemap.span_to_snippet(self.span).ok()\n         }\n     }\n }\n \n+impl Rewrite for ast::Block {\n+    fn rewrite(&self, context: &RewriteContext, _: usize, _: usize) -> Option<String> {\n+        let mut visitor = FmtVisitor::from_codemap(context.codemap, context.config);\n+        visitor.last_pos = self.span.lo;\n+        visitor.block_indent = context.block_indent;\n+\n+        visitor.visit_block(self);\n+\n+        // Push text between last block item and end of block\n+        let snippet = visitor.snippet(mk_sp(visitor.last_pos, self.span.hi));\n+        visitor.changes.push_str_span(self.span, &snippet);\n+\n+        // Stringify visitor\n+        let file_name = context.codemap.span_to_filename(self.span);\n+        let string_buffer = visitor.changes.get(&file_name);\n+\n+        Some(string_buffer.to_string())\n+    }\n+}\n+\n fn rewrite_string_lit(context: &RewriteContext,\n                       s: &str,\n                       span: Span,"}, {"sha": "33e4d5fbbf33dd2971424b84444e6f01c1220a06", "filename": "src/rewrite.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b473c2bd2a56a61275a47b95f75b0aff8fdb600a/src%2Frewrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b473c2bd2a56a61275a47b95f75b0aff8fdb600a/src%2Frewrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frewrite.rs?ref=b473c2bd2a56a61275a47b95f75b0aff8fdb600a", "patch": "@@ -28,4 +28,5 @@ pub trait Rewrite {\n pub struct RewriteContext<'a> {\n     pub codemap: &'a CodeMap,\n     pub config: &'a Config,\n+    pub block_indent: usize,\n }"}, {"sha": "1b1fd9d17c64a13bd34039a327a47be94e3d569a", "filename": "src/visitor.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b473c2bd2a56a61275a47b95f75b0aff8fdb600a/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b473c2bd2a56a61275a47b95f75b0aff8fdb600a/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=b473c2bd2a56a61275a47b95f75b0aff8fdb600a", "patch": "@@ -38,7 +38,9 @@ impl<'a, 'v> visit::Visitor<'v> for FmtVisitor<'a> {\n                self.codemap.lookup_char_pos(ex.span.hi));\n         self.format_missing(ex.span.lo);\n         let offset = self.changes.cur_offset_span(ex.span);\n-        let context = RewriteContext { codemap: self.codemap, config: self.config };\n+        let context = RewriteContext { codemap: self.codemap,\n+                                       config: self.config,\n+                                       block_indent: self.block_indent, };\n         let rewrite = ex.rewrite(&context, self.config.max_width - offset, offset);\n \n         if let Some(new_str) = rewrite {"}, {"sha": "ad5ef93521d1fef0acd61c190e1a9b9e64282ba8", "filename": "tests/source/loop.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b473c2bd2a56a61275a47b95f75b0aff8fdb600a/tests%2Fsource%2Floop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b473c2bd2a56a61275a47b95f75b0aff8fdb600a/tests%2Fsource%2Floop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Floop.rs?ref=b473c2bd2a56a61275a47b95f75b0aff8fdb600a", "patch": "@@ -0,0 +1,11 @@\n+\n+fn main() {\n+    loop    \n+    {   return some_val;}\n+\n+let x = loop { do_forever(); };\n+\n+         loop {\n+        // Just comments\n+    }\n+}"}, {"sha": "3eb506eb6ede4ffc7d72a842a0e5afc3a0bd9872", "filename": "tests/target/loop.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b473c2bd2a56a61275a47b95f75b0aff8fdb600a/tests%2Ftarget%2Floop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b473c2bd2a56a61275a47b95f75b0aff8fdb600a/tests%2Ftarget%2Floop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Floop.rs?ref=b473c2bd2a56a61275a47b95f75b0aff8fdb600a", "patch": "@@ -0,0 +1,14 @@\n+\n+fn main() {\n+    loop {\n+        return some_val;\n+    }\n+\n+    let x = loop {\n+        do_forever();\n+    };\n+\n+    loop {\n+        // Just comments\n+    }\n+}"}]}