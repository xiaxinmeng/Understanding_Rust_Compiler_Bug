{"sha": "7448e79dd20b6342d8084e8a2ee420900e53776e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NDhlNzlkZDIwYjYzNDJkODA4NGU4YTJlZTQyMDkwMGU1Mzc3NmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-07T07:05:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-07T07:05:52Z"}, "message": "Auto merge of #1550 - RalfJung:vecdeque, r=RalfJung\n\ntest VecDeque::iter_mut aliasing\n\nBlocked on https://github.com/rust-lang/rust/pull/76911", "tree": {"sha": "70404fd144a80845336ff52e2193c648eaa63fe2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70404fd144a80845336ff52e2193c648eaa63fe2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7448e79dd20b6342d8084e8a2ee420900e53776e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7448e79dd20b6342d8084e8a2ee420900e53776e", "html_url": "https://github.com/rust-lang/rust/commit/7448e79dd20b6342d8084e8a2ee420900e53776e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7448e79dd20b6342d8084e8a2ee420900e53776e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a342a6ecb305b6d789646036ae463f8ebfc6f6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a342a6ecb305b6d789646036ae463f8ebfc6f6f", "html_url": "https://github.com/rust-lang/rust/commit/6a342a6ecb305b6d789646036ae463f8ebfc6f6f"}, {"sha": "63a0f04ed05af0b0822bfe000511e37489b71662", "url": "https://api.github.com/repos/rust-lang/rust/commits/63a0f04ed05af0b0822bfe000511e37489b71662", "html_url": "https://github.com/rust-lang/rust/commit/63a0f04ed05af0b0822bfe000511e37489b71662"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "56a6f1228ab597941e1c8f0aff0b912cfdb5ab49", "filename": "ci.sh", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7448e79dd20b6342d8084e8a2ee420900e53776e/ci.sh", "raw_url": "https://github.com/rust-lang/rust/raw/7448e79dd20b6342d8084e8a2ee420900e53776e/ci.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci.sh?ref=7448e79dd20b6342d8084e8a2ee420900e53776e", "patch": "@@ -25,8 +25,7 @@ function run_tests {\n   ./miri test --locked\n   if ! [ -n \"${MIRI_TEST_TARGET+exists}\" ]; then\n     # Only for host architecture: tests with MIR optimizations\n-    #FIXME: Only testing opt level 1 due to <https://github.com/rust-lang/rust/issues/77564>.\n-    MIRIFLAGS=\"-Z mir-opt-level=1\" ./miri test --locked\n+    MIRIFLAGS=\"-Z mir-opt-level=3\" ./miri test --locked\n   fi\n   # \"miri test\" has built the sysroot for us, now this should pass without\n   # any interactive questions."}, {"sha": "79ba8eebc1923414317ea3a1f96ca779f6f9ae26", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7448e79dd20b6342d8084e8a2ee420900e53776e/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/7448e79dd20b6342d8084e8a2ee420900e53776e/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=7448e79dd20b6342d8084e8a2ee420900e53776e", "patch": "@@ -1 +1 @@\n-efbaa413061c2a6e52f06f00a60ee7830fcf3ea5\n+c9ced8523bbb90561385aab305232f2167228a83"}, {"sha": "34f32ee1d9c12afe493d3dec2161057fc02c9159", "filename": "tests/run-pass/vecdeque.rs", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7448e79dd20b6342d8084e8a2ee420900e53776e/tests%2Frun-pass%2Fvecdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7448e79dd20b6342d8084e8a2ee420900e53776e/tests%2Frun-pass%2Fvecdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fvecdeque.rs?ref=7448e79dd20b6342d8084e8a2ee420900e53776e", "patch": "@@ -1,5 +1,17 @@\n use std::collections::VecDeque;\n \n+fn test_all_refs<'a, T: 'a>(dummy: &mut T, iter: impl Iterator<Item = &'a mut T>) {\n+    // Gather all those references.\n+    let mut refs: Vec<&mut T> = iter.collect();\n+    // Use them all. Twice, to be sure we got all interleavings.\n+    for r in refs.iter_mut() {\n+        std::mem::swap(dummy, r);\n+    }\n+    for r in refs {\n+        std::mem::swap(dummy, r);\n+    }\n+}\n+\n fn main() {\n     let mut dst = VecDeque::new();\n     dst.push_front(Box::new(1));\n@@ -18,6 +30,21 @@ fn main() {\n     println!(\"{:?}\", VecDeque::<u32>::new().iter());\n \n     for a in dst {\n-      assert_eq!(*a, 2);\n+        assert_eq!(*a, 2);\n     }\n+\n+    // # Aliasing tests.\n+    let mut v = std::collections::VecDeque::new();\n+    v.push_back(1);\n+    v.push_back(2);\n+\n+    // Test `fold` bad aliasing.\n+    let mut it = v.iter_mut();\n+    let ref0 = it.next().unwrap();\n+    let sum = it.fold(0, |x, y| x + *y);\n+    assert_eq!(*ref0 + sum, 3);\n+\n+    // Test general iterator aliasing.\n+    v.push_front(0);\n+    test_all_refs(&mut 0, v.iter_mut());\n }"}]}