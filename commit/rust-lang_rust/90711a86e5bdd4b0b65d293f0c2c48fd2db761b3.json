{"sha": "90711a86e5bdd4b0b65d293f0c2c48fd2db761b3", "node_id": "C_kwDOAAsO6NoAKDkwNzExYTg2ZTViZGQ0YjBiNjVkMjkzZjBjMmM0OGZkMmRiNzYxYjM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-30T14:03:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-30T14:03:36Z"}, "message": "Auto merge of #99814 - aliemjay:patch-2, r=jackh726\n\nfix universe map in ifcx.instantiate_canonical_*\n\nPreviously, `infcx.instantiate_canonical_*` maps the root universe in `canonical` into `ty::UniverseIndex::Root`, I think because it assumes it works with a fresh `infcx` but this is not true for the use cases in mir typeck. Now the root universe is mapped into `infcx.universe()`.\n\nI catched this accidentally while reviewing the code. I'm not sure if this is the right fix or if it is really a bug!", "tree": {"sha": "d9d31fe9b8a07fb945a3c99170146c181ea72283", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9d31fe9b8a07fb945a3c99170146c181ea72283"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90711a86e5bdd4b0b65d293f0c2c48fd2db761b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90711a86e5bdd4b0b65d293f0c2c48fd2db761b3", "html_url": "https://github.com/rust-lang/rust/commit/90711a86e5bdd4b0b65d293f0c2c48fd2db761b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90711a86e5bdd4b0b65d293f0c2c48fd2db761b3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24606deaf48e56f604a6125fa11fb9f70cf4f1f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/24606deaf48e56f604a6125fa11fb9f70cf4f1f4", "html_url": "https://github.com/rust-lang/rust/commit/24606deaf48e56f604a6125fa11fb9f70cf4f1f4"}, {"sha": "70200ac1907812a0f2abb7e9534e2bc26ae9f103", "url": "https://api.github.com/repos/rust-lang/rust/commits/70200ac1907812a0f2abb7e9534e2bc26ae9f103", "html_url": "https://github.com/rust-lang/rust/commit/70200ac1907812a0f2abb7e9534e2bc26ae9f103"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "e59715b706b29c0c4da6afde7ba99fe9b5a3f737", "filename": "compiler/rustc_infer/src/infer/canonical/mod.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/90711a86e5bdd4b0b65d293f0c2c48fd2db761b3/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90711a86e5bdd4b0b65d293f0c2c48fd2db761b3/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fmod.rs?ref=90711a86e5bdd4b0b65d293f0c2c48fd2db761b3", "patch": "@@ -41,7 +41,7 @@ impl<'tcx> InferCtxt<'tcx> {\n     /// inference variables and applies it to the canonical value.\n     /// Returns both the instantiated result *and* the substitution S.\n     ///\n-    /// This is only meant to be invoked as part of constructing an\n+    /// This can be invoked as part of constructing an\n     /// inference context at the start of a query (see\n     /// `InferCtxtBuilder::build_with_canonical`). It basically\n     /// brings the canonical value \"into scope\" within your new infcx.\n@@ -63,8 +63,11 @@ impl<'tcx> InferCtxt<'tcx> {\n         // in them, so this code has no effect, but it is looking\n         // forward to the day when we *do* want to carry universes\n         // through into queries.\n-        let universes: IndexVec<ty::UniverseIndex, _> = std::iter::once(ty::UniverseIndex::ROOT)\n-            .chain((0..canonical.max_universe.as_u32()).map(|_| self.create_next_universe()))\n+        //\n+        // Instantiate the root-universe content into the current universe,\n+        // and create fresh universes for the higher universes.\n+        let universes: IndexVec<ty::UniverseIndex, _> = std::iter::once(self.universe())\n+            .chain((1..=canonical.max_universe.as_u32()).map(|_| self.create_next_universe()))\n             .collect();\n \n         let canonical_inference_vars ="}]}