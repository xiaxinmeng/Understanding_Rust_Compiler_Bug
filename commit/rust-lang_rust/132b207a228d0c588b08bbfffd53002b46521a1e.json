{"sha": "132b207a228d0c588b08bbfffd53002b46521a1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzMmIyMDdhMjI4ZDBjNTg4YjA4YmJmZmZkNTMwMDJiNDY1MjFhMWU=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-03-18T19:08:32Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-03-18T19:08:32Z"}, "message": "Merge #994\n\n994: Upgrade ra_vfs to use new Filtering r=matklad a=vipentti\n\nUpgrade `ra_vfs` to `0.2.0` that includes the filtering.\r\n\r\nCurrently this matches the previous filtering, meaning all roots are filtered\r\nusing the same rules.\n\nCo-authored-by: Ville Penttinen <villem.penttinen@gmail.com>", "tree": {"sha": "378e1f7c549a1ecf857df1019d74cdcb10d11d3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/378e1f7c549a1ecf857df1019d74cdcb10d11d3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/132b207a228d0c588b08bbfffd53002b46521a1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/132b207a228d0c588b08bbfffd53002b46521a1e", "html_url": "https://github.com/rust-lang/rust/commit/132b207a228d0c588b08bbfffd53002b46521a1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/132b207a228d0c588b08bbfffd53002b46521a1e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "1cd18f9237b6ac48ca8461307f2a4eaf273ee394", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cd18f9237b6ac48ca8461307f2a4eaf273ee394", "html_url": "https://github.com/rust-lang/rust/commit/1cd18f9237b6ac48ca8461307f2a4eaf273ee394"}, {"sha": "e70e2361b602f7837e8fbed36ae1c51cd8e2f3b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e70e2361b602f7837e8fbed36ae1c51cd8e2f3b5", "html_url": "https://github.com/rust-lang/rust/commit/e70e2361b602f7837e8fbed36ae1c51cd8e2f3b5"}], "stats": {"total": 71, "additions": 61, "deletions": 10}, "files": [{"sha": "ad9f6970b39f1e31c0f6887e340640e0e5b1ebae", "filename": "Cargo.lock", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/132b207a228d0c588b08bbfffd53002b46521a1e/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/132b207a228d0c588b08bbfffd53002b46521a1e/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=132b207a228d0c588b08bbfffd53002b46521a1e", "patch": "@@ -928,7 +928,7 @@ dependencies = [\n  \"ra_hir 0.1.0\",\n  \"ra_project_model 0.1.0\",\n  \"ra_syntax 0.1.0\",\n- \"ra_vfs 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"ra_vfs 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"test_utils 0.1.0\",\n ]\n@@ -1050,7 +1050,7 @@ dependencies = [\n  \"ra_project_model 0.1.0\",\n  \"ra_syntax 0.1.0\",\n  \"ra_text_edit 0.1.0\",\n- \"ra_vfs 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"ra_vfs 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1131,7 +1131,7 @@ dependencies = [\n \n [[package]]\n name = \"ra_vfs\"\n-version = \"0.1.1\"\n+version = \"0.2.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"crossbeam-channel 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1996,7 +1996,7 @@ dependencies = [\n \"checksum proptest 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8ea66c78d75f2c6e9f304269eaef90899798daecc69f1a625d5a3dd793ff3522\"\n \"checksum quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9274b940887ce9addde99c4eee6b5c44cc494b182b97e73dc8ffdcb3397fd3f0\"\n \"checksum quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cdd8e04bd9c52e0342b406469d494fcb033be4bdbe5c606016defbb1681411e1\"\n-\"checksum ra_vfs 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5978b0ced52f013ce44bfca6ac903141359e7cc3baea462a4a670de9e5087101\"\n+\"checksum ra_vfs 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bb1839e4e003d865b58b8b6c231aae6c463dfcd01bfbbddffbdb7662a7b5a627\"\n \"checksum rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6d71dacdc3c88c1fde3885a3be3fbab9f35724e6ce99467f7d9c5026132184ca\"\n \"checksum rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"556d3a1ca6600bfcbab7c7c91ccb085ac7fbbcd70e008a98742e7847f4f7bcef\"\n \"checksum rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7a6fdeb83b075e8266dcc8762c22776f6877a63111121f5f8c7411e5be7eed4b\""}, {"sha": "3037e27c418b4d5b0c0dc89e9e8210d1c2f52aad", "filename": "crates/ra_batch/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/132b207a228d0c588b08bbfffd53002b46521a1e/crates%2Fra_batch%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/132b207a228d0c588b08bbfffd53002b46521a1e/crates%2Fra_batch%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_batch%2FCargo.toml?ref=132b207a228d0c588b08bbfffd53002b46521a1e", "patch": "@@ -10,7 +10,7 @@ rustc-hash = \"1.0\"\n \n failure = \"0.1.4\"\n \n-ra_vfs = \"0.1.0\"\n+ra_vfs = \"0.2.0\"\n ra_syntax = { path = \"../ra_syntax\" }\n ra_db = { path = \"../ra_db\" }\n ra_hir = { path = \"../ra_hir\" }"}, {"sha": "a054d0da30e6e823a012edf23024f4acca35f72f", "filename": "crates/ra_batch/src/lib.rs", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/132b207a228d0c588b08bbfffd53002b46521a1e/crates%2Fra_batch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/132b207a228d0c588b08bbfffd53002b46521a1e/crates%2Fra_batch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_batch%2Fsrc%2Flib.rs?ref=132b207a228d0c588b08bbfffd53002b46521a1e", "patch": "@@ -1,5 +1,5 @@\n use std::sync::Arc;\n-use std::path::Path;\n+use std::path::{Path, PathBuf};\n use std::collections::HashSet;\n \n use rustc_hash::FxHashMap;\n@@ -9,7 +9,7 @@ use ra_db::{\n };\n use ra_hir::{db, HirInterner};\n use ra_project_model::ProjectWorkspace;\n-use ra_vfs::{Vfs, VfsChange};\n+use ra_vfs::{Vfs, VfsChange, RootEntry, Filter, RelativePath};\n \n type Result<T> = std::result::Result<T, failure::Error>;\n \n@@ -43,6 +43,30 @@ fn vfs_root_to_id(r: ra_vfs::VfsRoot) -> SourceRootId {\n     SourceRootId(r.0.into())\n }\n \n+struct IncludeRustFiles;\n+\n+impl IncludeRustFiles {\n+    fn to_entry(path: PathBuf) -> RootEntry {\n+        RootEntry::new(path, Box::new(Self {}))\n+    }\n+}\n+\n+impl Filter for IncludeRustFiles {\n+    fn include_dir(&self, dir_path: &RelativePath) -> bool {\n+        const IGNORED_FOLDERS: &[&str] = &[\"node_modules\", \"target\", \".git\"];\n+\n+        let is_ignored = dir_path.components().any(|c| IGNORED_FOLDERS.contains(&c.as_str()));\n+\n+        let hidden = dir_path.components().any(|c| c.as_str().starts_with(\".\"));\n+\n+        !is_ignored && !hidden\n+    }\n+\n+    fn include_file(&self, file_path: &RelativePath) -> bool {\n+        file_path.extension() == Some(\"rs\")\n+    }\n+}\n+\n impl BatchDatabase {\n     pub fn load(crate_graph: CrateGraph, vfs: &mut Vfs) -> BatchDatabase {\n         let mut db =\n@@ -100,6 +124,7 @@ impl BatchDatabase {\n         let mut roots = Vec::new();\n         roots.push(root.clone());\n         roots.extend(ws.to_roots());\n+        let roots = roots.into_iter().map(IncludeRustFiles::to_entry).collect::<Vec<_>>();\n         let (mut vfs, roots) = Vfs::new(roots);\n         let mut load = |path: &Path| {\n             let vfs_file = vfs.load(path);"}, {"sha": "d824107004c256abaa037a0d467b8511aba21ec1", "filename": "crates/ra_lsp_server/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/132b207a228d0c588b08bbfffd53002b46521a1e/crates%2Fra_lsp_server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/132b207a228d0c588b08bbfffd53002b46521a1e/crates%2Fra_lsp_server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2FCargo.toml?ref=132b207a228d0c588b08bbfffd53002b46521a1e", "patch": "@@ -19,7 +19,7 @@ lsp-types = \"0.56.0\"\n rustc-hash = \"1.0\"\n parking_lot = \"0.7.0\"\n \n-ra_vfs = \"0.1.0\"\n+ra_vfs = \"0.2.0\"\n thread_worker = { path = \"../thread_worker\" }\n ra_syntax = { path = \"../ra_syntax\" }\n ra_text_edit = { path = \"../ra_text_edit\" }"}, {"sha": "cf7c17c5cffbd3d5349f48d78345ee06e0fc09be", "filename": "crates/ra_lsp_server/src/server_world.rs", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/132b207a228d0c588b08bbfffd53002b46521a1e/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/132b207a228d0c588b08bbfffd53002b46521a1e/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs?ref=132b207a228d0c588b08bbfffd53002b46521a1e", "patch": "@@ -8,8 +8,8 @@ use ra_ide_api::{\n     Analysis, AnalysisChange, AnalysisHost, CrateGraph, FileId, LibraryData,\n     SourceRootId\n };\n-use ra_vfs::{Vfs, VfsChange, VfsFile, VfsRoot};\n-use relative_path::RelativePathBuf;\n+use ra_vfs::{Vfs, VfsChange, VfsFile, VfsRoot, RootEntry, Filter};\n+use relative_path::{RelativePath, RelativePathBuf};\n use parking_lot::RwLock;\n use failure::format_err;\n \n@@ -33,6 +33,30 @@ pub struct ServerWorld {\n     pub vfs: Arc<RwLock<Vfs>>,\n }\n \n+struct IncludeRustFiles;\n+\n+impl IncludeRustFiles {\n+    fn to_entry(path: PathBuf) -> RootEntry {\n+        RootEntry::new(path, Box::new(Self {}))\n+    }\n+}\n+\n+impl Filter for IncludeRustFiles {\n+    fn include_dir(&self, dir_path: &RelativePath) -> bool {\n+        const IGNORED_FOLDERS: &[&str] = &[\"node_modules\", \"target\", \".git\"];\n+\n+        let is_ignored = dir_path.components().any(|c| IGNORED_FOLDERS.contains(&c.as_str()));\n+\n+        let hidden = dir_path.components().any(|c| c.as_str().starts_with(\".\"));\n+\n+        !is_ignored && !hidden\n+    }\n+\n+    fn include_file(&self, file_path: &RelativePath) -> bool {\n+        file_path.extension() == Some(\"rs\")\n+    }\n+}\n+\n impl ServerWorldState {\n     pub fn new(root: PathBuf, workspaces: Vec<ProjectWorkspace>) -> ServerWorldState {\n         let mut change = AnalysisChange::new();\n@@ -42,6 +66,8 @@ impl ServerWorldState {\n         for ws in workspaces.iter() {\n             roots.extend(ws.to_roots());\n         }\n+        let roots = roots.into_iter().map(IncludeRustFiles::to_entry).collect::<Vec<_>>();\n+\n         let (mut vfs, roots) = Vfs::new(roots);\n         let roots_to_scan = roots.len();\n         for r in roots {"}]}