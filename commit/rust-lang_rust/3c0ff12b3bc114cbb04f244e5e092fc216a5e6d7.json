{"sha": "3c0ff12b3bc114cbb04f244e5e092fc216a5e6d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMGZmMTJiM2JjMTE0Y2JiMDRmMjQ0ZTVlMDkyZmMyMTZhNWU2ZDc=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-06-01T12:21:38Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-08-01T15:01:33Z"}, "message": "Use Rust integer types instead of libc's fixed-width types", "tree": {"sha": "c064928c500ac78626b8bb5950a52cc755e2e2fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c064928c500ac78626b8bb5950a52cc755e2e2fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c0ff12b3bc114cbb04f244e5e092fc216a5e6d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c0ff12b3bc114cbb04f244e5e092fc216a5e6d7", "html_url": "https://github.com/rust-lang/rust/commit/3c0ff12b3bc114cbb04f244e5e092fc216a5e6d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c0ff12b3bc114cbb04f244e5e092fc216a5e6d7/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ea83f9732d7a15467bed88d4a996487713c70d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ea83f9732d7a15467bed88d4a996487713c70d4", "html_url": "https://github.com/rust-lang/rust/commit/9ea83f9732d7a15467bed88d4a996487713c70d4"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9f9410560e373f64bffd853522bc0482352ae26a", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3c0ff12b3bc114cbb04f244e5e092fc216a5e6d7/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c0ff12b3bc114cbb04f244e5e092fc216a5e6d7/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=3c0ff12b3bc114cbb04f244e5e092fc216a5e6d7", "patch": "@@ -569,7 +569,7 @@ pub mod debuginfo {\n     bitflags! {\n         #[repr(transparent)]\n         #[derive(Default)]\n-        pub struct DIFlags: ::libc::uint32_t {\n+        pub struct DIFlags: u32 {\n             const FlagZero                = 0;\n             const FlagPrivate             = 1;\n             const FlagProtected           = 2;\n@@ -598,7 +598,7 @@ pub mod debuginfo {\n     bitflags! {\n         #[repr(transparent)]\n         #[derive(Default)]\n-        pub struct DISPFlags: ::libc::uint32_t {\n+        pub struct DISPFlags: u32 {\n             const SPFlagZero              = 0;\n             const SPFlagVirtual           = 1;\n             const SPFlagPureVirtual       = 2;"}]}