{"sha": "eb4860c7e1e4109d94e84adc2794f720120604e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNDg2MGM3ZTFlNDEwOWQ5NGU4NGFkYzI3OTRmNzIwMTIwNjA0ZTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-02T02:07:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-02T02:07:45Z"}, "message": "Auto merge of #78864 - Mark-Simulacrum:warn-on-forbids, r=pnkfelix\n\nUse true previous lint level when detecting overriden forbids\n\nPreviously, cap-lints was ignored when checking the previous forbid level, which\nmeant that it was a hard error to do so. This is different from the normal\nbehavior of lints, which are silenced by cap-lints; if the forbid would not take\neffect regardless, there is not much point in complaining about the fact that we\nare reducing its level.\n\nIt might be considered a bug that even `--cap-lints deny` would suffice to\nsilence the error on overriding forbid, depending on if one cares about failing\nthe build or precisely forbid being set. But setting cap-lints to deny is quite\nodd and not really done in practice, so we don't try to handle it specially.\n\nThis also unifies the code paths for nested and same-level scopes. However, the\nspecial case for CLI lint flags is left in place (introduced by #70918) to fix\nthe regression noted in #70819. That means that CLI flags do not lint on forbid\nbeing overridden by a non-forbid level. It is unclear whether this is a bug or a\ndesirable feature, but it is certainly inconsistent. CLI flags are a\nsufficiently different \"type\" of place though that this is deemed out of scope\nfor this commit.\n\nr? `@pnkfelix` perhaps?\n\ncc #77713 -- not marking as \"Fixes\" because of the lack of proper unused attribute handling in this PR", "tree": {"sha": "648bc7482399f55dd21180f48a8f76b7f32f1a17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/648bc7482399f55dd21180f48a8f76b7f32f1a17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb4860c7e1e4109d94e84adc2794f720120604e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb4860c7e1e4109d94e84adc2794f720120604e3", "html_url": "https://github.com/rust-lang/rust/commit/eb4860c7e1e4109d94e84adc2794f720120604e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb4860c7e1e4109d94e84adc2794f720120604e3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18aa5ee209df502e48180b1b607520cfd370990f", "url": "https://api.github.com/repos/rust-lang/rust/commits/18aa5ee209df502e48180b1b607520cfd370990f", "html_url": "https://github.com/rust-lang/rust/commit/18aa5ee209df502e48180b1b607520cfd370990f"}, {"sha": "64efcbe0e9e0e2dc02960031e6df4fe7450782ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/64efcbe0e9e0e2dc02960031e6df4fe7450782ca", "html_url": "https://github.com/rust-lang/rust/commit/64efcbe0e9e0e2dc02960031e6df4fe7450782ca"}], "stats": {"total": 360, "additions": 126, "deletions": 234}, "files": [{"sha": "3e22eba15aaef69a764541f466ac4ee1cb77e274", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 21, "deletions": 49, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -108,18 +108,32 @@ impl<'s> LintLevelsBuilder<'s> {\n         id: LintId,\n         (level, src): LevelSource,\n     ) {\n-        if let Some((old_level, old_src)) = specs.get(&id) {\n-            if old_level == &Level::Forbid && level != Level::Forbid {\n+        // Setting to a non-forbid level is an error if the lint previously had\n+        // a forbid level. Note that this is not necessarily true even with a\n+        // `#[forbid(..)]` attribute present, as that is overriden by `--cap-lints`.\n+        //\n+        // This means that this only errors if we're truly lowering the lint\n+        // level from forbid.\n+        if level != Level::Forbid {\n+            if let (Level::Forbid, old_src) =\n+                self.sets.get_lint_level(id.lint, self.cur, Some(&specs), &self.sess)\n+            {\n                 let mut diag_builder = struct_span_err!(\n                     self.sess,\n                     src.span(),\n                     E0453,\n-                    \"{}({}) incompatible with previous forbid in same scope\",\n+                    \"{}({}) incompatible with previous forbid\",\n                     level.as_str(),\n                     src.name(),\n                 );\n-                match *old_src {\n-                    LintSource::Default => {}\n+                diag_builder.span_label(src.span(), \"overruled by previous forbid\");\n+                match old_src {\n+                    LintSource::Default => {\n+                        diag_builder.note(&format!(\n+                            \"`forbid` lint level is the default for {}\",\n+                            id.to_string()\n+                        ));\n+                    }\n                     LintSource::Node(_, forbid_source_span, reason) => {\n                         diag_builder.span_label(forbid_source_span, \"`forbid` level set here\");\n                         if let Some(rationale) = reason {\n@@ -131,6 +145,8 @@ impl<'s> LintLevelsBuilder<'s> {\n                     }\n                 }\n                 diag_builder.emit();\n+\n+                // Retain the forbid lint level\n                 return;\n             }\n         }\n@@ -414,50 +430,6 @@ impl<'s> LintLevelsBuilder<'s> {\n             }\n         }\n \n-        for (id, &(level, ref src)) in specs.iter() {\n-            if level == Level::Forbid {\n-                continue;\n-            }\n-            let forbid_src = match self.sets.get_lint_id_level(*id, self.cur, None) {\n-                (Some(Level::Forbid), src) => src,\n-                _ => continue,\n-            };\n-            let forbidden_lint_name = match forbid_src {\n-                LintSource::Default => id.to_string(),\n-                LintSource::Node(name, _, _) => name.to_string(),\n-                LintSource::CommandLine(name, _) => name.to_string(),\n-            };\n-            let (lint_attr_name, lint_attr_span) = match *src {\n-                LintSource::Node(name, span, _) => (name, span),\n-                _ => continue,\n-            };\n-            let mut diag_builder = struct_span_err!(\n-                self.sess,\n-                lint_attr_span,\n-                E0453,\n-                \"{}({}) overruled by outer forbid({})\",\n-                level.as_str(),\n-                lint_attr_name,\n-                forbidden_lint_name\n-            );\n-            diag_builder.span_label(lint_attr_span, \"overruled by previous forbid\");\n-            match forbid_src {\n-                LintSource::Default => {}\n-                LintSource::Node(_, forbid_source_span, reason) => {\n-                    diag_builder.span_label(forbid_source_span, \"`forbid` level set here\");\n-                    if let Some(rationale) = reason {\n-                        diag_builder.note(&rationale.as_str());\n-                    }\n-                }\n-                LintSource::CommandLine(_, _) => {\n-                    diag_builder.note(\"`forbid` lint level was set on command line\");\n-                }\n-            }\n-            diag_builder.emit();\n-            // don't set a separate error for every lint in the group\n-            break;\n-        }\n-\n         let prev = self.cur;\n         if !specs.is_empty() {\n             self.cur = self.sets.list.len() as u32;"}, {"sha": "4833f6971c17170b5eb30465469b4d3614c1731b", "filename": "src/test/ui-fulldeps/lint-plugin-forbid-attrs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.rs?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -6,12 +6,12 @@\n //~^ WARN use of deprecated attribute `plugin`\n #![forbid(test_lint)]\n \n-fn lintme() { } //~ ERROR item is named 'lintme'\n+fn lintme() {} //~ ERROR item is named 'lintme'\n \n #[allow(test_lint)]\n-//~^ ERROR allow(test_lint) overruled by outer forbid(test_lint)\n-//~| ERROR allow(test_lint) overruled by outer forbid(test_lint)\n-//~| ERROR allow(test_lint) overruled by outer forbid(test_lint)\n+//~^ ERROR allow(test_lint) incompatible\n+//~| ERROR allow(test_lint) incompatible\n+//~| ERROR allow(test_lint) incompatible\n pub fn main() {\n     lintme();\n }"}, {"sha": "e11a4f844935266a03ee7a6d98652981b36e7903", "filename": "src/test/ui-fulldeps/lint-plugin-forbid-attrs.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.stderr?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -1,4 +1,4 @@\n-error[E0453]: allow(test_lint) overruled by outer forbid(test_lint)\n+error[E0453]: allow(test_lint) incompatible with previous forbid\n   --> $DIR/lint-plugin-forbid-attrs.rs:11:9\n    |\n LL | #![forbid(test_lint)]\n@@ -7,7 +7,7 @@ LL | #![forbid(test_lint)]\n LL | #[allow(test_lint)]\n    |         ^^^^^^^^^ overruled by previous forbid\n \n-error[E0453]: allow(test_lint) overruled by outer forbid(test_lint)\n+error[E0453]: allow(test_lint) incompatible with previous forbid\n   --> $DIR/lint-plugin-forbid-attrs.rs:11:9\n    |\n LL | #![forbid(test_lint)]\n@@ -27,16 +27,16 @@ LL | #![plugin(lint_plugin_test)]\n error: item is named 'lintme'\n   --> $DIR/lint-plugin-forbid-attrs.rs:9:1\n    |\n-LL | fn lintme() { }\n-   | ^^^^^^^^^^^^^^^\n+LL | fn lintme() {}\n+   | ^^^^^^^^^^^^^^\n    |\n note: the lint level is defined here\n   --> $DIR/lint-plugin-forbid-attrs.rs:7:11\n    |\n LL | #![forbid(test_lint)]\n    |           ^^^^^^^^^\n \n-error[E0453]: allow(test_lint) overruled by outer forbid(test_lint)\n+error[E0453]: allow(test_lint) incompatible with previous forbid\n   --> $DIR/lint-plugin-forbid-attrs.rs:11:9\n    |\n LL | #![forbid(test_lint)]"}, {"sha": "ce034ee38d70c115df122f6819a3c1d8d223f92d", "filename": "src/test/ui-fulldeps/lint-plugin-forbid-cmdline.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-cmdline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-cmdline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-cmdline.rs?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -7,9 +7,9 @@\n //~^ WARN use of deprecated attribute `plugin`\n fn lintme() { } //~ ERROR item is named 'lintme'\n \n-#[allow(test_lint)] //~ ERROR allow(test_lint) overruled by outer forbid(test_lint)\n-                    //~| ERROR allow(test_lint) overruled by outer forbid(test_lint)\n-                    //~| ERROR allow(test_lint) overruled by outer forbid(test_lint)\n+#[allow(test_lint)] //~ ERROR allow(test_lint) incompatible\n+                    //~| ERROR allow(test_lint) incompatible\n+                    //~| ERROR allow(test_lint)\n pub fn main() {\n     lintme();\n }"}, {"sha": "09c19af617a2995b5ff6bd51f3f0fe5ac69d426d", "filename": "src/test/ui-fulldeps/lint-plugin-forbid-cmdline.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-cmdline.stderr?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -1,12 +1,12 @@\n-error[E0453]: allow(test_lint) overruled by outer forbid(test_lint)\n+error[E0453]: allow(test_lint) incompatible with previous forbid\n   --> $DIR/lint-plugin-forbid-cmdline.rs:10:9\n    |\n LL | #[allow(test_lint)]\n    |         ^^^^^^^^^ overruled by previous forbid\n    |\n    = note: `forbid` lint level was set on command line\n \n-error[E0453]: allow(test_lint) overruled by outer forbid(test_lint)\n+error[E0453]: allow(test_lint) incompatible with previous forbid\n   --> $DIR/lint-plugin-forbid-cmdline.rs:10:9\n    |\n LL | #[allow(test_lint)]\n@@ -30,7 +30,7 @@ LL | fn lintme() { }\n    |\n    = note: requested on the command line with `-F test-lint`\n \n-error[E0453]: allow(test_lint) overruled by outer forbid(test_lint)\n+error[E0453]: allow(test_lint) incompatible with previous forbid\n   --> $DIR/lint-plugin-forbid-cmdline.rs:10:9\n    |\n LL | #[allow(test_lint)]"}, {"sha": "6fa8dd9717fe6098846834b74b0e55cc955b4fea", "filename": "src/test/ui/error-codes/E0453.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Ferror-codes%2FE0453.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Ferror-codes%2FE0453.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0453.rs?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -1,8 +1,8 @@\n #![forbid(non_snake_case)]\n \n #[allow(non_snake_case)]\n-//~^ ERROR allow(non_snake_case) overruled by outer forbid(non_snake_case)\n-//~| ERROR allow(non_snake_case) overruled by outer forbid(non_snake_case)\n-//~| ERROR allow(non_snake_case) overruled by outer forbid(non_snake_case)\n+//~^ ERROR allow(non_snake_case) incompatible\n+//~| ERROR allow(non_snake_case) incompatible\n+//~| ERROR allow(non_snake_case) incompatible\n fn main() {\n }"}, {"sha": "21c43cc052e54d192902dcfb1cf0c940141251a6", "filename": "src/test/ui/error-codes/E0453.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Ferror-codes%2FE0453.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Ferror-codes%2FE0453.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0453.stderr?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -1,4 +1,4 @@\n-error[E0453]: allow(non_snake_case) overruled by outer forbid(non_snake_case)\n+error[E0453]: allow(non_snake_case) incompatible with previous forbid\n   --> $DIR/E0453.rs:3:9\n    |\n LL | #![forbid(non_snake_case)]\n@@ -7,7 +7,7 @@ LL |\n LL | #[allow(non_snake_case)]\n    |         ^^^^^^^^^^^^^^ overruled by previous forbid\n \n-error[E0453]: allow(non_snake_case) overruled by outer forbid(non_snake_case)\n+error[E0453]: allow(non_snake_case) incompatible with previous forbid\n   --> $DIR/E0453.rs:3:9\n    |\n LL | #![forbid(non_snake_case)]\n@@ -16,7 +16,7 @@ LL |\n LL | #[allow(non_snake_case)]\n    |         ^^^^^^^^^^^^^^ overruled by previous forbid\n \n-error[E0453]: allow(non_snake_case) overruled by outer forbid(non_snake_case)\n+error[E0453]: allow(non_snake_case) incompatible with previous forbid\n   --> $DIR/E0453.rs:3:9\n    |\n LL | #![forbid(non_snake_case)]"}, {"sha": "b56471a756d1e1f145dfbaa00e99412f22aa4af1", "filename": "src/test/ui/lint/forbid-error-capped.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Fforbid-error-capped.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Fforbid-error-capped.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforbid-error-capped.rs?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -0,0 +1,15 @@\n+// check-pass\n+// compile-args: --cap-lints=warn -Fwarnings\n+\n+// This checks that the forbid attribute checking is ignored when the forbidden\n+// lint is capped.\n+\n+#![forbid(warnings)]\n+#![allow(unused)]\n+\n+#[allow(unused)]\n+mod bar {\n+    fn bar() {}\n+}\n+\n+fn main() {}"}, {"sha": "f725304cf29d4b19e58be87a71f907d2f664b419", "filename": "src/test/ui/lint/issue-70819-dont-override-forbid-in-same-scope.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Fissue-70819-dont-override-forbid-in-same-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Fissue-70819-dont-override-forbid-in-same-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-70819-dont-override-forbid-in-same-scope.rs?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -17,11 +17,11 @@\n fn forbid_first(num: i32) -> i32 {\n     #![forbid(unused)]\n     #![deny(unused)]\n-    //~^ ERROR: deny(unused) incompatible with previous forbid in same scope [E0453]\n+    //~^ ERROR: deny(unused) incompatible with previous forbid\n     #![warn(unused)]\n-    //~^ ERROR: warn(unused) incompatible with previous forbid in same scope [E0453]\n+    //~^ ERROR: warn(unused) incompatible with previous forbid\n     #![allow(unused)]\n-    //~^ ERROR: allow(unused) incompatible with previous forbid in same scope [E0453]\n+    //~^ ERROR: allow(unused) incompatible with previous forbid\n \n     num * num\n }"}, {"sha": "9f107411c102a9207f0a941d055db12b8028e89e", "filename": "src/test/ui/lint/issue-70819-dont-override-forbid-in-same-scope.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Fissue-70819-dont-override-forbid-in-same-scope.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Fissue-70819-dont-override-forbid-in-same-scope.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-70819-dont-override-forbid-in-same-scope.stderr?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -1,28 +1,28 @@\n-error[E0453]: deny(unused) incompatible with previous forbid in same scope\n+error[E0453]: deny(unused) incompatible with previous forbid\n   --> $DIR/issue-70819-dont-override-forbid-in-same-scope.rs:19:13\n    |\n LL |     #![forbid(unused)]\n    |               ------ `forbid` level set here\n LL |     #![deny(unused)]\n-   |             ^^^^^^\n+   |             ^^^^^^ overruled by previous forbid\n \n-error[E0453]: warn(unused) incompatible with previous forbid in same scope\n+error[E0453]: warn(unused) incompatible with previous forbid\n   --> $DIR/issue-70819-dont-override-forbid-in-same-scope.rs:21:13\n    |\n LL |     #![forbid(unused)]\n    |               ------ `forbid` level set here\n ...\n LL |     #![warn(unused)]\n-   |             ^^^^^^\n+   |             ^^^^^^ overruled by previous forbid\n \n-error[E0453]: allow(unused) incompatible with previous forbid in same scope\n+error[E0453]: allow(unused) incompatible with previous forbid\n   --> $DIR/issue-70819-dont-override-forbid-in-same-scope.rs:23:14\n    |\n LL |     #![forbid(unused)]\n    |               ------ `forbid` level set here\n ...\n LL |     #![allow(unused)]\n-   |              ^^^^^^\n+   |              ^^^^^^ overruled by previous forbid\n \n error: aborting due to 3 previous errors\n "}, {"sha": "13ebb6dccd82232ddf8dd387acd002675470a3fc", "filename": "src/test/ui/lint/lint-forbid-attr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Flint-forbid-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Flint-forbid-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-forbid-attr.rs?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -1,8 +1,8 @@\n #![forbid(deprecated)]\n \n #[allow(deprecated)]\n-//~^ ERROR allow(deprecated) overruled by outer forbid(deprecated)\n-//~| ERROR allow(deprecated) overruled by outer forbid(deprecated)\n-//~| ERROR allow(deprecated) overruled by outer forbid(deprecated)\n+//~^ ERROR allow(deprecated) incompatible\n+//~| ERROR allow(deprecated) incompatible\n+//~| ERROR allow(deprecated) incompatible\n fn main() {\n }"}, {"sha": "cb0b25d11153eb1739adb0442ad1f469c59ead45", "filename": "src/test/ui/lint/lint-forbid-attr.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Flint-forbid-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Flint-forbid-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-forbid-attr.stderr?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -1,4 +1,4 @@\n-error[E0453]: allow(deprecated) overruled by outer forbid(deprecated)\n+error[E0453]: allow(deprecated) incompatible with previous forbid\n   --> $DIR/lint-forbid-attr.rs:3:9\n    |\n LL | #![forbid(deprecated)]\n@@ -7,7 +7,7 @@ LL |\n LL | #[allow(deprecated)]\n    |         ^^^^^^^^^^ overruled by previous forbid\n \n-error[E0453]: allow(deprecated) overruled by outer forbid(deprecated)\n+error[E0453]: allow(deprecated) incompatible with previous forbid\n   --> $DIR/lint-forbid-attr.rs:3:9\n    |\n LL | #![forbid(deprecated)]\n@@ -16,7 +16,7 @@ LL |\n LL | #[allow(deprecated)]\n    |         ^^^^^^^^^^ overruled by previous forbid\n \n-error[E0453]: allow(deprecated) overruled by outer forbid(deprecated)\n+error[E0453]: allow(deprecated) incompatible with previous forbid\n   --> $DIR/lint-forbid-attr.rs:3:9\n    |\n LL | #![forbid(deprecated)]"}, {"sha": "38bb8d29d3f630ddd4dcbf04479b87067de32647", "filename": "src/test/ui/lint/lint-forbid-cmdline.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Flint-forbid-cmdline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Flint-forbid-cmdline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-forbid-cmdline.rs?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -1,7 +1,7 @@\n // compile-flags: -F deprecated\n \n-#[allow(deprecated)] //~ ERROR allow(deprecated) overruled by outer forbid(deprecated)\n-                     //~| ERROR allow(deprecated) overruled by outer forbid(deprecated)\n-                     //~| ERROR allow(deprecated) overruled by outer forbid(deprecated)\n+#[allow(deprecated)] //~ ERROR allow(deprecated) incompatible\n+                     //~| ERROR allow(deprecated) incompatible\n+                     //~| ERROR allow(deprecated) incompatible\n fn main() {\n }"}, {"sha": "5b1b015c4ddb95c8cfa79d31ca8527c36f12390f", "filename": "src/test/ui/lint/lint-forbid-cmdline.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Flint-forbid-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Flint-forbid-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-forbid-cmdline.stderr?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -1,20 +1,20 @@\n-error[E0453]: allow(deprecated) overruled by outer forbid(deprecated)\n+error[E0453]: allow(deprecated) incompatible with previous forbid\n   --> $DIR/lint-forbid-cmdline.rs:3:9\n    |\n LL | #[allow(deprecated)]\n    |         ^^^^^^^^^^ overruled by previous forbid\n    |\n    = note: `forbid` lint level was set on command line\n \n-error[E0453]: allow(deprecated) overruled by outer forbid(deprecated)\n+error[E0453]: allow(deprecated) incompatible with previous forbid\n   --> $DIR/lint-forbid-cmdline.rs:3:9\n    |\n LL | #[allow(deprecated)]\n    |         ^^^^^^^^^^ overruled by previous forbid\n    |\n    = note: `forbid` lint level was set on command line\n \n-error[E0453]: allow(deprecated) overruled by outer forbid(deprecated)\n+error[E0453]: allow(deprecated) incompatible with previous forbid\n   --> $DIR/lint-forbid-cmdline.rs:3:9\n    |\n LL | #[allow(deprecated)]"}, {"sha": "d45848bf706f32f6153f8c2dbfe49b6507c367a6", "filename": "src/test/ui/lint/outer-forbid.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Fouter-forbid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Fouter-forbid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fouter-forbid.rs?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -4,21 +4,25 @@\n // subsequent allowance of a lint group containing it (here, `nonstandard_style`). See\n // Issue #42873.\n \n+// If you turn off deduplicate diagnostics (which rustc turns on by default but\n+// compiletest turns off when it runs ui tests), then the errors are\n+// (unfortunately) repeated here because the checking is done as we read in the\n+// errors, and currently that happens two or three different times, depending on\n+// compiler flags.\n+//\n+// The test is much cleaner if we deduplicate, though.\n+\n+// compile-flags: -Z deduplicate-diagnostics=yes\n+\n #![forbid(unused, non_snake_case)]\n \n-#[allow(unused_variables)] //~ ERROR overruled\n-                           //~| ERROR overruled\n-                           //~| ERROR overruled\n+#[allow(unused_variables)] //~ ERROR incompatible with previous\n fn foo() {}\n \n-#[allow(unused)] //~ ERROR overruled\n-                 //~| ERROR overruled\n-                 //~| ERROR overruled\n+#[allow(unused)] //~ ERROR incompatible with previous\n fn bar() {}\n \n-#[allow(nonstandard_style)] //~ ERROR overruled\n-                            //~| ERROR overruled\n-                            //~| ERROR overruled\n+#[allow(nonstandard_style)] //~ ERROR incompatible with previous\n fn main() {\n     println!(\"hello forbidden world\")\n }"}, {"sha": "c012c20697e16367633edfadc56a6ed572c624fc", "filename": "src/test/ui/lint/outer-forbid.stderr", "status": "modified", "additions": 6, "deletions": 60, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Fouter-forbid.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Fouter-forbid.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fouter-forbid.stderr?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -1,84 +1,30 @@\n-error[E0453]: allow(unused_variables) overruled by outer forbid(unused)\n-  --> $DIR/outer-forbid.rs:9:9\n-   |\n-LL | #![forbid(unused, non_snake_case)]\n-   |           ------ `forbid` level set here\n-LL | \n-LL | #[allow(unused_variables)]\n-   |         ^^^^^^^^^^^^^^^^ overruled by previous forbid\n-\n-error[E0453]: allow(unused) overruled by outer forbid(unused)\n-  --> $DIR/outer-forbid.rs:14:9\n-   |\n-LL | #![forbid(unused, non_snake_case)]\n-   |           ------ `forbid` level set here\n-...\n-LL | #[allow(unused)]\n-   |         ^^^^^^ overruled by previous forbid\n-\n-error[E0453]: allow(nonstandard_style) overruled by outer forbid(non_snake_case)\n-  --> $DIR/outer-forbid.rs:19:9\n-   |\n-LL | #![forbid(unused, non_snake_case)]\n-   |                   -------------- `forbid` level set here\n-...\n-LL | #[allow(nonstandard_style)]\n-   |         ^^^^^^^^^^^^^^^^^ overruled by previous forbid\n-\n-error[E0453]: allow(unused_variables) overruled by outer forbid(unused)\n-  --> $DIR/outer-forbid.rs:9:9\n-   |\n-LL | #![forbid(unused, non_snake_case)]\n-   |           ------ `forbid` level set here\n-LL | \n-LL | #[allow(unused_variables)]\n-   |         ^^^^^^^^^^^^^^^^ overruled by previous forbid\n-\n-error[E0453]: allow(unused) overruled by outer forbid(unused)\n-  --> $DIR/outer-forbid.rs:14:9\n-   |\n-LL | #![forbid(unused, non_snake_case)]\n-   |           ------ `forbid` level set here\n-...\n-LL | #[allow(unused)]\n-   |         ^^^^^^ overruled by previous forbid\n-\n-error[E0453]: allow(nonstandard_style) overruled by outer forbid(non_snake_case)\n+error[E0453]: allow(unused_variables) incompatible with previous forbid\n   --> $DIR/outer-forbid.rs:19:9\n    |\n-LL | #![forbid(unused, non_snake_case)]\n-   |                   -------------- `forbid` level set here\n-...\n-LL | #[allow(nonstandard_style)]\n-   |         ^^^^^^^^^^^^^^^^^ overruled by previous forbid\n-\n-error[E0453]: allow(unused_variables) overruled by outer forbid(unused)\n-  --> $DIR/outer-forbid.rs:9:9\n-   |\n LL | #![forbid(unused, non_snake_case)]\n    |           ------ `forbid` level set here\n LL | \n LL | #[allow(unused_variables)]\n    |         ^^^^^^^^^^^^^^^^ overruled by previous forbid\n \n-error[E0453]: allow(unused) overruled by outer forbid(unused)\n-  --> $DIR/outer-forbid.rs:14:9\n+error[E0453]: allow(unused) incompatible with previous forbid\n+  --> $DIR/outer-forbid.rs:22:9\n    |\n LL | #![forbid(unused, non_snake_case)]\n    |           ------ `forbid` level set here\n ...\n LL | #[allow(unused)]\n    |         ^^^^^^ overruled by previous forbid\n \n-error[E0453]: allow(nonstandard_style) overruled by outer forbid(non_snake_case)\n-  --> $DIR/outer-forbid.rs:19:9\n+error[E0453]: allow(nonstandard_style) incompatible with previous forbid\n+  --> $DIR/outer-forbid.rs:25:9\n    |\n LL | #![forbid(unused, non_snake_case)]\n    |                   -------------- `forbid` level set here\n ...\n LL | #[allow(nonstandard_style)]\n    |         ^^^^^^^^^^^^^^^^^ overruled by previous forbid\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0453`."}, {"sha": "9c2edec4d521404ceebb54f5a3642d6100938b96", "filename": "src/test/ui/lint/reasons-forbidden.rs", "status": "modified", "additions": 15, "deletions": 22, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Freasons-forbidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Freasons-forbidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Freasons-forbidden.rs?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -1,13 +1,19 @@\n #![feature(lint_reasons)]\n \n+// If you turn off deduplicate diagnostics (which rustc turns on by default but\n+// compiletest turns off when it runs ui tests), then the errors are\n+// (unfortunately) repeated here because the checking is done as we read in the\n+// errors, and currently that happens two or three different times, depending on\n+// compiler flags.\n+//\n+// The test is much cleaner if we deduplicate, though.\n+\n+// compile-flags: -Z deduplicate-diagnostics=yes\n+\n #![forbid(\n     unsafe_code,\n     //~^ NOTE `forbid` level set here\n-    //~| NOTE `forbid` level set here\n-    //~| NOTE `forbid` level set here\n-    //~| NOTE `forbid` level set here\n-    //~| NOTE `forbid` level set here\n-    //~| NOTE `forbid` level set here\n+    //~| NOTE the lint level is defined here\n     reason = \"our errors & omissions insurance policy doesn't cover unsafe Rust\"\n )]\n \n@@ -17,25 +23,12 @@ fn main() {\n     let a_billion_dollar_mistake = ptr::null();\n \n     #[allow(unsafe_code)]\n-    //~^ ERROR allow(unsafe_code) overruled by outer forbid(unsafe_code)\n-    //~| ERROR allow(unsafe_code) overruled by outer forbid(unsafe_code)\n-    //~| ERROR allow(unsafe_code) overruled by outer forbid(unsafe_code)\n-    //~| ERROR allow(unsafe_code) overruled by outer forbid(unsafe_code)\n-    //~| ERROR allow(unsafe_code) overruled by outer forbid(unsafe_code)\n-    //~| ERROR allow(unsafe_code) overruled by outer forbid(unsafe_code)\n-    //~| NOTE overruled by previous forbid\n-    //~| NOTE overruled by previous forbid\n-    //~| NOTE overruled by previous forbid\n-    //~| NOTE overruled by previous forbid\n-    //~| NOTE overruled by previous forbid\n-    //~| NOTE overruled by previous forbid\n-    //~| NOTE our errors & omissions insurance policy doesn't cover unsafe Rust\n-    //~| NOTE our errors & omissions insurance policy doesn't cover unsafe Rust\n-    //~| NOTE our errors & omissions insurance policy doesn't cover unsafe Rust\n-    //~| NOTE our errors & omissions insurance policy doesn't cover unsafe Rust\n-    //~| NOTE our errors & omissions insurance policy doesn't cover unsafe Rust\n+    //~^ ERROR allow(unsafe_code) incompatible with previous forbid\n     //~| NOTE our errors & omissions insurance policy doesn't cover unsafe Rust\n+    //~| NOTE overruled by previous forbid\n     unsafe {\n+        //~^ ERROR usage of an `unsafe` block\n+        //~| NOTE our errors & omissions insurance policy doesn't cover unsafe Rust\n         *a_billion_dollar_mistake\n     }\n }"}, {"sha": "ab6f19a019d43fd85d2a9eb07112dfe648391a99", "filename": "src/test/ui/lint/reasons-forbidden.stderr", "status": "modified", "additions": 14, "deletions": 52, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Freasons-forbidden.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c7e1e4109d94e84adc2794f720120604e3/src%2Ftest%2Fui%2Flint%2Freasons-forbidden.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Freasons-forbidden.stderr?ref=eb4860c7e1e4109d94e84adc2794f720120604e3", "patch": "@@ -1,5 +1,5 @@\n-error[E0453]: allow(unsafe_code) overruled by outer forbid(unsafe_code)\n-  --> $DIR/reasons-forbidden.rs:19:13\n+error[E0453]: allow(unsafe_code) incompatible with previous forbid\n+  --> $DIR/reasons-forbidden.rs:25:13\n    |\n LL |     unsafe_code,\n    |     ----------- `forbid` level set here\n@@ -9,61 +9,23 @@ LL |     #[allow(unsafe_code)]\n    |\n    = note: our errors & omissions insurance policy doesn't cover unsafe Rust\n \n-error[E0453]: allow(unsafe_code) overruled by outer forbid(unsafe_code)\n-  --> $DIR/reasons-forbidden.rs:19:13\n+error: usage of an `unsafe` block\n+  --> $DIR/reasons-forbidden.rs:29:5\n    |\n-LL |     unsafe_code,\n-   |     ----------- `forbid` level set here\n-...\n-LL |     #[allow(unsafe_code)]\n-   |             ^^^^^^^^^^^ overruled by previous forbid\n-   |\n-   = note: our errors & omissions insurance policy doesn't cover unsafe Rust\n-\n-error[E0453]: allow(unsafe_code) overruled by outer forbid(unsafe_code)\n-  --> $DIR/reasons-forbidden.rs:19:13\n-   |\n-LL |     unsafe_code,\n-   |     ----------- `forbid` level set here\n-...\n-LL |     #[allow(unsafe_code)]\n-   |             ^^^^^^^^^^^ overruled by previous forbid\n+LL | /     unsafe {\n+LL | |\n+LL | |\n+LL | |         *a_billion_dollar_mistake\n+LL | |     }\n+   | |_____^\n    |\n    = note: our errors & omissions insurance policy doesn't cover unsafe Rust\n-\n-error[E0453]: allow(unsafe_code) overruled by outer forbid(unsafe_code)\n-  --> $DIR/reasons-forbidden.rs:19:13\n+note: the lint level is defined here\n+  --> $DIR/reasons-forbidden.rs:14:5\n    |\n LL |     unsafe_code,\n-   |     ----------- `forbid` level set here\n-...\n-LL |     #[allow(unsafe_code)]\n-   |             ^^^^^^^^^^^ overruled by previous forbid\n-   |\n-   = note: our errors & omissions insurance policy doesn't cover unsafe Rust\n-\n-error[E0453]: allow(unsafe_code) overruled by outer forbid(unsafe_code)\n-  --> $DIR/reasons-forbidden.rs:19:13\n-   |\n-LL |     unsafe_code,\n-   |     ----------- `forbid` level set here\n-...\n-LL |     #[allow(unsafe_code)]\n-   |             ^^^^^^^^^^^ overruled by previous forbid\n-   |\n-   = note: our errors & omissions insurance policy doesn't cover unsafe Rust\n-\n-error[E0453]: allow(unsafe_code) overruled by outer forbid(unsafe_code)\n-  --> $DIR/reasons-forbidden.rs:19:13\n-   |\n-LL |     unsafe_code,\n-   |     ----------- `forbid` level set here\n-...\n-LL |     #[allow(unsafe_code)]\n-   |             ^^^^^^^^^^^ overruled by previous forbid\n-   |\n-   = note: our errors & omissions insurance policy doesn't cover unsafe Rust\n+   |     ^^^^^^^^^^^\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0453`."}]}