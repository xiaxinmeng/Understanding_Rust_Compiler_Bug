{"sha": "36184d286c9fed8d7bb9b64848cd9b155dc54e0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MTg0ZDI4NmM5ZmVkOGQ3YmI5YjY0ODQ4Y2Q5YjE1NWRjNTRlMGM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-13T09:46:59Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-13T09:46:59Z"}, "message": "Remove outdated FIXME and add some new FIXME", "tree": {"sha": "a96b625a83551f15e54854311058881c65b001e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a96b625a83551f15e54854311058881c65b001e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36184d286c9fed8d7bb9b64848cd9b155dc54e0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36184d286c9fed8d7bb9b64848cd9b155dc54e0c", "html_url": "https://github.com/rust-lang/rust/commit/36184d286c9fed8d7bb9b64848cd9b155dc54e0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36184d286c9fed8d7bb9b64848cd9b155dc54e0c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f93cd924ec50ba9e6ccf346bd0341e908fd87de0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f93cd924ec50ba9e6ccf346bd0341e908fd87de0", "html_url": "https://github.com/rust-lang/rust/commit/f93cd924ec50ba9e6ccf346bd0341e908fd87de0"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "3e2a1e5e816e03121811fdcc842ea8f345b1c016", "filename": "src/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/36184d286c9fed8d7bb9b64848cd9b155dc54e0c/src%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36184d286c9fed8d7bb9b64848cd9b155dc54e0c/src%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics.rs?ref=36184d286c9fed8d7bb9b64848cd9b155dc54e0c", "patch": "@@ -502,7 +502,6 @@ pub fn codegen_intrinsic_call<'a, 'tcx: 'a>(\n             ret.write_cvalue(fx, res);\n         };\n         _ if intrinsic.starts_with(\"saturating_\"), <T> (c x, c y) {\n-            // FIXME implement saturating behavior\n             assert_eq!(x.layout().ty, y.layout().ty);\n             let bin_op = match intrinsic {\n                 \"saturating_add\" => BinOp::Add,\n@@ -610,6 +609,7 @@ pub fn codegen_intrinsic_call<'a, 'tcx: 'a>(\n             fx.bcx.call_memset(fx.module.target_config(), dst_ptr, val, count);\n         };\n         ctlz | ctlz_nonzero, <T> (v arg) {\n+            // FIXME trap on `ctlz_nonzero` with zero arg.\n             let res = if T == fx.tcx.types.u128 || T == fx.tcx.types.i128 {\n                 // FIXME verify this algorithm is correct\n                 let (lsb, msb) = fx.bcx.ins().isplit(arg);\n@@ -625,6 +625,7 @@ pub fn codegen_intrinsic_call<'a, 'tcx: 'a>(\n             ret.write_cvalue(fx, res);\n         };\n         cttz | cttz_nonzero, <T> (v arg) {\n+            // FIXME trap on `cttz_nonzero` with zero arg.\n             let res = if T == fx.tcx.types.u128 || T == fx.tcx.types.i128 {\n                 // FIXME verify this algorithm is correct\n                 let (lsb, msb) = fx.bcx.ins().isplit(arg);"}]}