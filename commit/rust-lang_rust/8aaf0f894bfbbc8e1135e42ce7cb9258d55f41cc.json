{"sha": "8aaf0f894bfbbc8e1135e42ce7cb9258d55f41cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhYWYwZjg5NGJmYmJjOGUxMTM1ZTQyY2U3Y2I5MjU4ZDU1ZjQxY2M=", "commit": {"author": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2016-07-17T19:00:24Z"}, "committer": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2016-07-17T19:00:24Z"}, "message": "doc/book: fix tests for non-x86 architectures, such as aarch64\n\n`rustdoc --test` gets confused when \"main\" exists for some architectures but not others.", "tree": {"sha": "39189fe3616d6799788a0c150c4cb4b3693cb2ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39189fe3616d6799788a0c150c4cb4b3693cb2ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8aaf0f894bfbbc8e1135e42ce7cb9258d55f41cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8aaf0f894bfbbc8e1135e42ce7cb9258d55f41cc", "html_url": "https://github.com/rust-lang/rust/commit/8aaf0f894bfbbc8e1135e42ce7cb9258d55f41cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8aaf0f894bfbbc8e1135e42ce7cb9258d55f41cc/comments", "author": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e5e36fb79e1cffc6f7c3a9670df222060bb0e4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e5e36fb79e1cffc6f7c3a9670df222060bb0e4b", "html_url": "https://github.com/rust-lang/rust/commit/4e5e36fb79e1cffc6f7c3a9670df222060bb0e4b"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "62e196a7ccdf3a4772db6e8ba86c5808241a6e2f", "filename": "src/doc/book/inline-assembly.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8aaf0f894bfbbc8e1135e42ce7cb9258d55f41cc/src%2Fdoc%2Fbook%2Finline-assembly.md", "raw_url": "https://github.com/rust-lang/rust/raw/8aaf0f894bfbbc8e1135e42ce7cb9258d55f41cc/src%2Fdoc%2Fbook%2Finline-assembly.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Finline-assembly.md?ref=8aaf0f894bfbbc8e1135e42ce7cb9258d55f41cc", "patch": "@@ -60,6 +60,8 @@ asm!(\"xor %eax, %eax\"\n     : \"eax\"\n    );\n # } }\n+# #[cfg(not(any(target_arch = \"x86\", target_arch = \"x86_64\")))]\n+# fn main() {}\n ```\n \n Whitespace also doesn't matter:\n@@ -70,6 +72,8 @@ Whitespace also doesn't matter:\n # fn main() { unsafe {\n asm!(\"xor %eax, %eax\" ::: \"eax\");\n # } }\n+# #[cfg(not(any(target_arch = \"x86\", target_arch = \"x86_64\")))]\n+# fn main() {}\n ```\n \n ## Operands\n@@ -129,6 +133,8 @@ stay valid.\n // Put the value 0x200 in eax\n asm!(\"mov $$0x200, %eax\" : /* no outputs */ : /* no inputs */ : \"eax\");\n # } }\n+# #[cfg(not(any(target_arch = \"x86\", target_arch = \"x86_64\")))]\n+# fn main() {}\n ```\n \n Input and output registers need not be listed since that information\n@@ -164,6 +170,8 @@ unsafe {\n }\n println!(\"eax is currently {}\", result);\n # }\n+# #[cfg(not(any(target_arch = \"x86\", target_arch = \"x86_64\")))]\n+# fn main() {}\n ```\n \n ## More Information"}]}