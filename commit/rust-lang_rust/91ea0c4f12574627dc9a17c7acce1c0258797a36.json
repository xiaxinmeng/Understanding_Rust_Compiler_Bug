{"sha": "91ea0c4f12574627dc9a17c7acce1c0258797a36", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxZWEwYzRmMTI1NzQ2MjdkYzlhMTdjN2FjY2UxYzAyNTg3OTdhMzY=", "commit": {"author": {"name": "Jan Bujak", "email": "j@exia.io", "date": "2015-05-03T10:09:40Z"}, "committer": {"name": "Jan Bujak", "email": "j@exia.io", "date": "2015-05-03T10:09:40Z"}, "message": "Add #[inline(always)] to str::from_utf8_unchecked\n\nWithout the inline annotation this:\n    str::from_utf8_unchecked( slice::from_raw_parts( ptr, len ) )\ndoesn't get inlined which can be pretty brutal performance-wise\nwhen used in an inner loop of a low level string manipulation method.", "tree": {"sha": "2489f310340eebf6b777b49d7747896b8076e4c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2489f310340eebf6b777b49d7747896b8076e4c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91ea0c4f12574627dc9a17c7acce1c0258797a36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91ea0c4f12574627dc9a17c7acce1c0258797a36", "html_url": "https://github.com/rust-lang/rust/commit/91ea0c4f12574627dc9a17c7acce1c0258797a36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91ea0c4f12574627dc9a17c7acce1c0258797a36/comments", "author": {"login": "koute", "id": 246574, "node_id": "MDQ6VXNlcjI0NjU3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/246574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koute", "html_url": "https://github.com/koute", "followers_url": "https://api.github.com/users/koute/followers", "following_url": "https://api.github.com/users/koute/following{/other_user}", "gists_url": "https://api.github.com/users/koute/gists{/gist_id}", "starred_url": "https://api.github.com/users/koute/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koute/subscriptions", "organizations_url": "https://api.github.com/users/koute/orgs", "repos_url": "https://api.github.com/users/koute/repos", "events_url": "https://api.github.com/users/koute/events{/privacy}", "received_events_url": "https://api.github.com/users/koute/received_events", "type": "User", "site_admin": false}, "committer": {"login": "koute", "id": 246574, "node_id": "MDQ6VXNlcjI0NjU3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/246574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koute", "html_url": "https://github.com/koute", "followers_url": "https://api.github.com/users/koute/followers", "following_url": "https://api.github.com/users/koute/following{/other_user}", "gists_url": "https://api.github.com/users/koute/gists{/gist_id}", "starred_url": "https://api.github.com/users/koute/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koute/subscriptions", "organizations_url": "https://api.github.com/users/koute/orgs", "repos_url": "https://api.github.com/users/koute/repos", "events_url": "https://api.github.com/users/koute/events{/privacy}", "received_events_url": "https://api.github.com/users/koute/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d7d3ec9d2b314af0188a820c58fbd95ee905793", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d7d3ec9d2b314af0188a820c58fbd95ee905793", "html_url": "https://github.com/rust-lang/rust/commit/0d7d3ec9d2b314af0188a820c58fbd95ee905793"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "6b65d74625614f7944f8a9bec635f553ddec9370", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/91ea0c4f12574627dc9a17c7acce1c0258797a36/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91ea0c4f12574627dc9a17c7acce1c0258797a36/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=91ea0c4f12574627dc9a17c7acce1c0258797a36", "patch": "@@ -136,6 +136,7 @@ pub fn from_utf8(v: &[u8]) -> Result<&str, Utf8Error> {\n \n /// Converts a slice of bytes to a string slice without checking\n /// that the string contains valid UTF-8.\n+#[inline(always)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub unsafe fn from_utf8_unchecked<'a>(v: &'a [u8]) -> &'a str {\n     mem::transmute(v)"}]}