{"sha": "ae5ea85c361e2b383b01c1101d731843795ea0cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNWVhODVjMzYxZTJiMzgzYjAxYzExMDFkNzMxODQzNzk1ZWEwY2I=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-07T03:15:31Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-07T03:15:39Z"}, "message": "core: Resolve a FIXME in box::ptr_eq", "tree": {"sha": "74b0669bb68034004c653e56c131fdc138a88861", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74b0669bb68034004c653e56c131fdc138a88861"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae5ea85c361e2b383b01c1101d731843795ea0cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae5ea85c361e2b383b01c1101d731843795ea0cb", "html_url": "https://github.com/rust-lang/rust/commit/ae5ea85c361e2b383b01c1101d731843795ea0cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae5ea85c361e2b383b01c1101d731843795ea0cb/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04e7bd675881bc091db2154e84caebb255b0ff8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/04e7bd675881bc091db2154e84caebb255b0ff8c", "html_url": "https://github.com/rust-lang/rust/commit/04e7bd675881bc091db2154e84caebb255b0ff8c"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "dc96aebcebc49dec61db03337f975f96419c5c24", "filename": "src/libcore/box.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ae5ea85c361e2b383b01c1101d731843795ea0cb/src%2Flibcore%2Fbox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5ea85c361e2b383b01c1101d731843795ea0cb/src%2Flibcore%2Fbox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbox.rs?ref=ae5ea85c361e2b383b01c1101d731843795ea0cb", "patch": "@@ -3,13 +3,8 @@ export ptr_eq;\n #[doc(\n   brief = \"Determine if two shared boxes point to the same object\"\n )]\n-pure fn ptr_eq<T>(a: @T, b: @T) -> bool {\n-    // FIXME: ptr::addr_of\n-    unsafe {\n-        let a_ptr: uint = unsafe::reinterpret_cast(a);\n-        let b_ptr: uint = unsafe::reinterpret_cast(b);\n-        ret a_ptr == b_ptr;\n-    }\n+pure fn ptr_eq<T>(a: @T, b: @T) -> bool unchecked {\n+    ptr::addr_of(*a) == ptr::addr_of(*b)\n }\n \n #[test]"}]}