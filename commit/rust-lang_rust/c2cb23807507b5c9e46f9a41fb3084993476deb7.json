{"sha": "c2cb23807507b5c9e46f9a41fb3084993476deb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyY2IyMzgwNzUwN2I1YzllNDZmOWE0MWZiMzA4NDk5MzQ3NmRlYjc=", "commit": {"author": {"name": "Ramkumar Ramachandra", "email": "artagnon@gmail.com", "date": "2013-06-06T13:39:56Z"}, "committer": {"name": "Ramkumar Ramachandra", "email": "artagnon@gmail.com", "date": "2013-06-06T13:53:52Z"}, "message": "test/compile-fail: clarify bad-for-loop\n\nThere are two distinct kinds of bad-for-loops to check for with two\ndistinct error messages.  The current bad-for-loop.rs does not make this\nclear, so rewrite it into bad-for-loop{,-2}.rs.  The two failing\nprototypes are:\n\n  fn quux(_: &fn(&int) -> int) -> bool { true }\n  fn quux(_: &fn(&int) -> bool) -> () { }\n\nNote that the second one runs fine in rust-0.6 (the latest release), and\nonly fails with a rust built from `incoming`.\n\nSigned-off-by: Ramkumar Ramachandra <artagnon@gmail.com>", "tree": {"sha": "c8432c4da19e3a69cba2b7cdba3c698d0c3ad3d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8432c4da19e3a69cba2b7cdba3c698d0c3ad3d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2cb23807507b5c9e46f9a41fb3084993476deb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2cb23807507b5c9e46f9a41fb3084993476deb7", "html_url": "https://github.com/rust-lang/rust/commit/c2cb23807507b5c9e46f9a41fb3084993476deb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2cb23807507b5c9e46f9a41fb3084993476deb7/comments", "author": {"login": "artagnon", "id": 37226, "node_id": "MDQ6VXNlcjM3MjI2", "avatar_url": "https://avatars.githubusercontent.com/u/37226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artagnon", "html_url": "https://github.com/artagnon", "followers_url": "https://api.github.com/users/artagnon/followers", "following_url": "https://api.github.com/users/artagnon/following{/other_user}", "gists_url": "https://api.github.com/users/artagnon/gists{/gist_id}", "starred_url": "https://api.github.com/users/artagnon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artagnon/subscriptions", "organizations_url": "https://api.github.com/users/artagnon/orgs", "repos_url": "https://api.github.com/users/artagnon/repos", "events_url": "https://api.github.com/users/artagnon/events{/privacy}", "received_events_url": "https://api.github.com/users/artagnon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artagnon", "id": 37226, "node_id": "MDQ6VXNlcjM3MjI2", "avatar_url": "https://avatars.githubusercontent.com/u/37226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artagnon", "html_url": "https://github.com/artagnon", "followers_url": "https://api.github.com/users/artagnon/followers", "following_url": "https://api.github.com/users/artagnon/following{/other_user}", "gists_url": "https://api.github.com/users/artagnon/gists{/gist_id}", "starred_url": "https://api.github.com/users/artagnon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artagnon/subscriptions", "organizations_url": "https://api.github.com/users/artagnon/orgs", "repos_url": "https://api.github.com/users/artagnon/repos", "events_url": "https://api.github.com/users/artagnon/events{/privacy}", "received_events_url": "https://api.github.com/users/artagnon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ce700aa6528df24b39b65e2e8c3c6cd1758a02b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ce700aa6528df24b39b65e2e8c3c6cd1758a02b", "html_url": "https://github.com/rust-lang/rust/commit/7ce700aa6528df24b39b65e2e8c3c6cd1758a02b"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "4f90ff5802d7c6d37b2706c7189dccc5ba33353b", "filename": "src/test/compile-fail/bad-for-loop-2.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c2cb23807507b5c9e46f9a41fb3084993476deb7/src%2Ftest%2Fcompile-fail%2Fbad-for-loop-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2cb23807507b5c9e46f9a41fb3084993476deb7/src%2Ftest%2Fcompile-fail%2Fbad-for-loop-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-for-loop-2.rs?ref=c2cb23807507b5c9e46f9a41fb3084993476deb7", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    fn quux(_: &fn(&int) -> bool) -> () { }\n+    for quux |_| { } //~ ERROR expected `for` closure to return\n+                     // `bool`, but found `()`\n+}"}, {"sha": "83616b708f2aaf13386e0d4f51ec31dcfff093b3", "filename": "src/test/compile-fail/bad-for-loop.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c2cb23807507b5c9e46f9a41fb3084993476deb7/src%2Ftest%2Fcompile-fail%2Fbad-for-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2cb23807507b5c9e46f9a41fb3084993476deb7/src%2Ftest%2Fcompile-fail%2Fbad-for-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-for-loop.rs?ref=c2cb23807507b5c9e46f9a41fb3084993476deb7", "patch": "@@ -9,7 +9,8 @@\n // except according to those terms.\n \n fn main() {\n-    fn baz(_x: &fn(y: int) -> int) {}\n-    for baz |_e| { } //~ ERROR A `for` loop iterator should expect a closure that returns `bool`\n-                     //~^ ERROR expected `for` closure to return `bool`\n+    fn quux(_: &fn(&int) -> int) -> bool { true }\n+    for quux |_| { } //~ ERROR A `for` loop iterator should expect a\n+                     // closure that returns `bool`.  This iterator\n+                     // expects a closure that returns `int`.\n }"}]}