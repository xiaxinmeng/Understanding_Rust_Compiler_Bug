{"sha": "8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiMDcxZWJlNGM3Y2MxZTk4NmYxNWU1ZGNhMDBjM2VlN2UzMWRiM2E=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-21T06:24:59Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-22T00:14:02Z"}, "message": "rustdoc: Make it easy to switch between parallel and sequential folds", "tree": {"sha": "5a09f48d8f9a9dc4b52bb2fce6e8ba877ac4b044", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a09f48d8f9a9dc4b52bb2fce6e8ba877ac4b044"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a", "html_url": "https://github.com/rust-lang/rust/commit/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ee139ae1f61309fee44b37034ee1f2a42aba8f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ee139ae1f61309fee44b37034ee1f2a42aba8f1", "html_url": "https://github.com/rust-lang/rust/commit/1ee139ae1f61309fee44b37034ee1f2a42aba8f1"}], "stats": {"total": 41, "additions": 28, "deletions": 13}, "files": [{"sha": "474189f361997b181fd8a77ed99d2798990ee795", "filename": "src/rustdoc/attr_pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Fattr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Fattr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_pass.rs?ref=8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a", "patch": "@@ -27,7 +27,7 @@ fn run(\n         fold_res: fold_res,\n         fold_iface: fold_iface,\n         fold_impl: fold_impl\n-        with *fold::default_par_fold(srv)\n+        with *fold::default_any_fold(srv)\n     });\n     fold.fold_crate(fold, doc)\n }"}, {"sha": "9dbda071ba4d29a7cf642d7baa065dd1852bb183", "filename": "src/rustdoc/desc_pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Fdesc_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Fdesc_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fdesc_pass.rs?ref=8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a", "patch": "@@ -22,7 +22,7 @@ fn run(\n         fold_res: fold_res,\n         fold_iface: fold_iface,\n         fold_impl: fold_impl\n-        with *fold::default_par_fold(op)\n+        with *fold::default_any_fold(op)\n     });\n     fold.fold_crate(fold, doc)\n }"}, {"sha": "b506f502933750ec2e9f41ee4a1bfd23e7bd687e", "filename": "src/rustdoc/desc_to_brief_pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Fdesc_to_brief_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Fdesc_to_brief_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fdesc_to_brief_pass.rs?ref=8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a", "patch": "@@ -21,7 +21,7 @@ fn run(\n         fold_item: fold_item,\n         fold_iface: fold_iface,\n         fold_impl: fold_impl\n-        with *fold::default_par_fold(())\n+        with *fold::default_any_fold(())\n     });\n     fold.fold_crate(fold, doc)\n }"}, {"sha": "61a281508253d2de6131ff92cbbbd86371f1bc2f", "filename": "src/rustdoc/fold.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ffold.rs?ref=8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a", "patch": "@@ -13,6 +13,8 @@ export default_seq_fold_impl;\n export default_seq_fold_type;\n export default_par_fold;\n export default_par_fold_mod;\n+export default_any_fold;\n+export default_any_fold_mod;\n \n enum fold<T> = t<T>;\n \n@@ -104,6 +106,12 @@ fn default_par_fold<T:send>(ctxt: T) -> fold<T> {\n     )\n }\n \n+// Just a convenient wrapper to convert back and forth between\n+// parallel and sequential folds for perf testing\n+fn default_any_fold<T:send>(ctxt: T) -> fold<T> {\n+    default_par_fold(ctxt)\n+}\n+\n fn default_seq_fold_crate<T>(\n     fold: fold<T>,\n     doc: doc::cratedoc\n@@ -146,6 +154,13 @@ fn default_par_fold_mod<T:send>(\n     }\n }\n \n+fn default_any_fold_mod<T:send>(\n+    fold: fold<T>,\n+    doc: doc::moddoc\n+) -> doc::moddoc {\n+    default_par_fold_mod(fold, doc)\n+}\n+\n fn fold_itemtag<T>(fold: fold<T>, doc: doc::itemtag) -> doc::itemtag {\n     alt doc {\n       doc::modtag(moddoc) {"}, {"sha": "66b6d10f9fa93017e9e79d7705bbf6d8b11a4550", "filename": "src/rustdoc/path_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Fpath_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Fpath_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fpath_pass.rs?ref=8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a", "patch": "@@ -17,7 +17,7 @@ fn run(srv: astsrv::srv, doc: doc::cratedoc) -> doc::cratedoc {\n     let fold = fold::fold({\n         fold_item: fold_item,\n         fold_mod: fold_mod\n-        with *fold::default_par_fold(ctxt)\n+        with *fold::default_any_fold(ctxt)\n     });\n     fold.fold_crate(fold, doc)\n }\n@@ -33,7 +33,7 @@ fn fold_mod(fold: fold::fold<ctxt>, doc: doc::moddoc) -> doc::moddoc {\n     let is_topmod = doc.id() == rustc::syntax::ast::crate_node_id;\n \n     if !is_topmod { vec::push(fold.ctxt.path, doc.name()); }\n-    let doc = fold::default_par_fold_mod(fold, doc);\n+    let doc = fold::default_any_fold_mod(fold, doc);\n     if !is_topmod { vec::pop(fold.ctxt.path); }\n \n     {"}, {"sha": "6e8865dbd03e796a7bd2eed007a720d6671635ea", "filename": "src/rustdoc/prune_undoc_details_pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Fprune_undoc_details_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Fprune_undoc_details_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fprune_undoc_details_pass.rs?ref=8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a", "patch": "@@ -16,7 +16,7 @@ fn run(\n         fold_res: fold_res,\n         fold_iface: fold_iface,\n         fold_impl: fold_impl\n-        with *fold::default_par_fold(())\n+        with *fold::default_any_fold(())\n     });\n     fold.fold_crate(fold, doc)\n }"}, {"sha": "d8a75a8334bb81c2873584108d2c18f252c48b6a", "filename": "src/rustdoc/prune_undoc_items_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Fprune_undoc_items_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Fprune_undoc_items_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fprune_undoc_items_pass.rs?ref=8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a", "patch": "@@ -26,7 +26,7 @@ fn run(\n         fold_iface: fold_iface,\n         fold_impl: fold_impl,\n         fold_type: fold_type\n-        with *fold::default_par_fold(ctxt)\n+        with *fold::default_any_fold(ctxt)\n     });\n     fold.fold_crate(fold, doc)\n }\n@@ -105,7 +105,7 @@ fn fold_mod(\n               _ { some(itemtag) }\n             }\n         }\n-        with fold::default_par_fold_mod(fold, doc)\n+        with fold::default_any_fold_mod(fold, doc)\n     };\n     fold.ctxt.have_docs =\n         doc.brief() != none"}, {"sha": "dc7b240a155337a851218d6eb8d11045f2829fd4", "filename": "src/rustdoc/prune_unexported_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Fprune_unexported_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Fprune_unexported_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fprune_unexported_pass.rs?ref=8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a", "patch": "@@ -13,13 +13,13 @@ fn mk_pass() -> pass {\n fn run(srv: astsrv::srv, doc: doc::cratedoc) -> doc::cratedoc {\n     let fold = fold::fold({\n         fold_mod: fold_mod\n-        with *fold::default_par_fold(srv)\n+        with *fold::default_any_fold(srv)\n     });\n     fold.fold_crate(fold, doc)\n }\n \n fn fold_mod(fold: fold::fold<astsrv::srv>, doc: doc::moddoc) -> doc::moddoc {\n-    let doc = fold::default_par_fold_mod(fold, doc);\n+    let doc = fold::default_any_fold_mod(fold, doc);\n     {\n         items: ~exported_items(fold.ctxt, doc)\n         with doc"}, {"sha": "32dee0d095d72f903e34e7fa184138f4d8d6c112", "filename": "src/rustdoc/sort_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Fsort_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Fsort_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fsort_pass.rs?ref=8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a", "patch": "@@ -19,7 +19,7 @@ fn run(\n ) -> doc::cratedoc {\n     let fold = fold::fold({\n         fold_mod: fold_mod\n-        with *fold::default_par_fold(lteq)\n+        with *fold::default_any_fold(lteq)\n     });\n     fold.fold_crate(fold, doc)\n }\n@@ -28,7 +28,7 @@ fn fold_mod(\n     fold: fold::fold<item_lteq>,\n     doc: doc::moddoc\n ) -> doc::moddoc {\n-    let doc = fold::default_par_fold_mod(fold, doc);\n+    let doc = fold::default_any_fold_mod(fold, doc);\n     {\n         items: ~sort::merge_sort(fold.ctxt, *doc.items)\n         with doc"}, {"sha": "c4a2a0423137b2d5b4486b95cce13a478c3cae03", "filename": "src/rustdoc/tystr_pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Ftystr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a/src%2Frustdoc%2Ftystr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ftystr_pass.rs?ref=8b071ebe4c7cc1e986f15e5dca00c3ee7e31db3a", "patch": "@@ -23,7 +23,7 @@ fn run(\n         fold_iface: fold_iface,\n         fold_impl: fold_impl,\n         fold_type: fold_type\n-        with *fold::default_par_fold(srv)\n+        with *fold::default_any_fold(srv)\n     });\n     fold.fold_crate(fold, doc)\n }"}]}