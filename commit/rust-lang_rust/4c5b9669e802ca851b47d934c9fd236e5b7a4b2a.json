{"sha": "4c5b9669e802ca851b47d934c9fd236e5b7a4b2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjNWI5NjY5ZTgwMmNhODUxYjQ3ZDkzNGM5ZmQyMzZlNWI3YTRiMmE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-11-26T17:47:01Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-11-27T00:50:12Z"}, "message": "rollup merge of #19322: DiamondLovesYou/multi-llvmdeps", "tree": {"sha": "cc8e9aaf2882c07d42083e20dcb906f9c8cc606a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc8e9aaf2882c07d42083e20dcb906f9c8cc606a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c5b9669e802ca851b47d934c9fd236e5b7a4b2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c5b9669e802ca851b47d934c9fd236e5b7a4b2a", "html_url": "https://github.com/rust-lang/rust/commit/4c5b9669e802ca851b47d934c9fd236e5b7a4b2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c5b9669e802ca851b47d934c9fd236e5b7a4b2a/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99338cf8f6c9b611b18df2f0cdd165522489ca5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/99338cf8f6c9b611b18df2f0cdd165522489ca5a", "html_url": "https://github.com/rust-lang/rust/commit/99338cf8f6c9b611b18df2f0cdd165522489ca5a"}, {"sha": "ce507c6c2217f88394f8c3fc10f7c36af6867fb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce507c6c2217f88394f8c3fc10f7c36af6867fb2", "html_url": "https://github.com/rust-lang/rust/commit/ce507c6c2217f88394f8c3fc10f7c36af6867fb2"}], "stats": {"total": 143, "additions": 68, "deletions": 75}, "files": [{"sha": "898e4eb8c75cd4d08ef114a2e193c3eb7897e390", "filename": "mk/docs.mk", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4c5b9669e802ca851b47d934c9fd236e5b7a4b2a/mk%2Fdocs.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4c5b9669e802ca851b47d934c9fd236e5b7a4b2a/mk%2Fdocs.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdocs.mk?ref=4c5b9669e802ca851b47d934c9fd236e5b7a4b2a", "patch": "@@ -279,7 +279,8 @@ $(2) += doc/$(1)/index.html\n doc/$(1)/index.html: CFG_COMPILER_HOST_TRIPLE = $(CFG_TARGET)\n doc/$(1)/index.html: $$(LIB_DOC_DEP_$(1)) doc/$(1)/\n \t@$$(call E, rustdoc: $$@)\n-\t$$(Q)$$(RUSTDOC) --cfg dox --cfg stage2 $$<\n+\t$$(Q)CFG_LLVM_LINKAGE_FILE=$$(LLVM_LINKAGE_PATH_$(CFG_BUILD)) \\\n+\t\t$$(RUSTDOC) --cfg dox --cfg stage2 $$<\n endef\n \n $(foreach crate,$(DOC_CRATES),$(eval $(call DEF_LIB_DOC,$(crate),DOC_TARGETS)))"}, {"sha": "ba2e073803935b89632a9e476a40a4293fd45cfb", "filename": "mk/llvm.mk", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4c5b9669e802ca851b47d934c9fd236e5b7a4b2a/mk%2Fllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4c5b9669e802ca851b47d934c9fd236e5b7a4b2a/mk%2Fllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fllvm.mk?ref=4c5b9669e802ca851b47d934c9fd236e5b7a4b2a", "patch": "@@ -49,6 +49,12 @@ else\n LLVM_STDCPP_LOCATION_$(1) =\n endif\n \n+\n+# LLVM linkage:\n+LLVM_LINKAGE_PATH_$(1):=$$(abspath $$(RT_OUTPUT_DIR_$(1))/llvmdeps.rs)\n+$$(LLVM_LINKAGE_PATH_$(1)): $(S)src/etc/mklldeps.py $$(LLVM_CONFIG_$(1))\n+\t$(Q)$(CFG_PYTHON) \"$$<\" \"$$@\" \"$$(LLVM_COMPONENTS)\" \"$$(CFG_ENABLE_LLVM_STATIC_STDCPP)\" \\\n+\t\t$$(LLVM_CONFIG_$(1))\n endef\n \n $(foreach host,$(CFG_HOST), \\\n@@ -57,10 +63,14 @@ $(foreach host,$(CFG_HOST), \\\n $(foreach host,$(CFG_HOST), \\\n  $(eval LLVM_CONFIGS := $(LLVM_CONFIGS) $(LLVM_CONFIG_$(host))))\n \n-$(S)src/librustc_llvm/llvmdeps.rs: \\\n-\t\t    $(LLVM_CONFIGS) \\\n-\t\t    $(S)src/etc/mklldeps.py \\\n-\t\t    $(MKFILE_DEPS)\n-\t$(Q)$(CFG_PYTHON) $(S)src/etc/mklldeps.py \\\n-\t\t\"$@\" \"$(LLVM_COMPONENTS)\" \"$(CFG_ENABLE_LLVM_STATIC_STDCPP)\" \\\n-\t\t$(LLVM_CONFIGS)\n+# This can't be done in target.mk because it's included before this file.\n+define LLVM_LINKAGE_DEPS\n+$$(TLIB$(1)_T_$(2)_H_$(3))/stamp.rustc_llvm: $$(LLVM_LINKAGE_PATH_$(3))\n+endef\n+\n+$(foreach source,$(CFG_HOST), \\\n+ $(foreach target,$(CFG_TARGET), \\\n+  $(eval $(call LLVM_LINKAGE_DEPS,0,$(target),$(source))) \\\n+  $(eval $(call LLVM_LINKAGE_DEPS,1,$(target),$(source))) \\\n+  $(eval $(call LLVM_LINKAGE_DEPS,2,$(target),$(source))) \\\n+  $(eval $(call LLVM_LINKAGE_DEPS,3,$(target),$(source)))))"}, {"sha": "5b0de64574cd3338c4fd915c01fdb256c3b844be", "filename": "mk/target.mk", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4c5b9669e802ca851b47d934c9fd236e5b7a4b2a/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4c5b9669e802ca851b47d934c9fd236e5b7a4b2a/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=4c5b9669e802ca851b47d934c9fd236e5b7a4b2a", "patch": "@@ -79,7 +79,8 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$(4): \\\n \t    $$(dir $$@)$$(call CFG_LIB_GLOB_$(2),$(4)))\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES, \\\n \t    $$(dir $$@)$$(call CFG_RLIB_GLOB,$(4)))\n-\t$$(STAGE$(1)_T_$(2)_H_$(3)) \\\n+\t$(Q)CFG_LLVM_LINKAGE_FILE=$$(LLVM_LINKAGE_PATH_$(2)) \\\n+\t    $$(subst @,,$$(STAGE$(1)_T_$(2)_H_$(3))) \\\n \t\t$$(RUST_LIB_FLAGS_ST$(1)) \\\n \t\t-L \"$$(RT_OUTPUT_DIR_$(2))\" \\\n \t\t-L \"$$(LLVM_LIBDIR_$(2))\" \\\n@@ -134,8 +135,6 @@ SNAPSHOT_RUSTC_POST_CLEANUP=$(HBIN0_H_$(CFG_BUILD))/rustc$(X_$(CFG_BUILD))\n \n define TARGET_HOST_RULES\n \n-$$(TLIB$(1)_T_$(2)_H_$(3))/stamp.rustc_llvm: $(S)src/librustc_llvm/llvmdeps.rs\n-\n $$(TBIN$(1)_T_$(2)_H_$(3))/:\n \tmkdir -p $$@\n "}, {"sha": "0ec0c81f2882e014e0637d7aeda93741a530bd3c", "filename": "mk/tests.mk", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4c5b9669e802ca851b47d934c9fd236e5b7a4b2a/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4c5b9669e802ca851b47d934c9fd236e5b7a4b2a/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=4c5b9669e802ca851b47d934c9fd236e5b7a4b2a", "patch": "@@ -412,7 +412,8 @@ $(3)/stage$(1)/test/$(4)test-$(2)$$(X_$(2)): \\\n \t\t$$(CRATEFILE_$(4)) \\\n \t\t$$(TESTDEP_$(1)_$(2)_$(3)_$(4))\n \t@$$(call E, rustc: $$@)\n-\t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test \\\n+\t$(Q)CFG_LLVM_LINKAGE_FILE=$$(LLVM_LINKAGE_PATH_$(2)) \\\n+\t    $$(subst @,,$$(STAGE$(1)_T_$(2)_H_$(3))) -o $$@ $$< --test \\\n \t\t-L \"$$(RT_OUTPUT_DIR_$(2))\" \\\n \t\t-L \"$$(LLVM_LIBDIR_$(2))\" \\\n \t\t$$(RUSTFLAGS_$(4))\n@@ -890,7 +891,8 @@ endif\n ifeq ($(2),$$(CFG_BUILD))\n $$(call TEST_OK_FILE,$(1),$(2),$(3),doc-crate-$(4)): $$(CRATEDOCTESTDEP_$(1)_$(2)_$(3)_$(4))\n \t@$$(call E, run doc-crate-$(4) [$(2)])\n-\t$$(Q)$$(RUSTDOC_$(1)_T_$(2)_H_$(3)) --test --cfg dox \\\n+\t$$(Q)CFG_LLVM_LINKAGE_FILE=$$(LLVM_LINKAGE_PATH_$(2)) \\\n+\t    $$(RUSTDOC_$(1)_T_$(2)_H_$(3)) --test --cfg dox \\\n \t    \t$$(CRATEFILE_$(4)) --test-args \"$$(TESTARGS)\" && touch $$@\n else\n $$(call TEST_OK_FILE,$(1),$(2),$(3),doc-crate-$(4)):"}, {"sha": "834ba074c62102ecf51184434f4b96fedc5f3648", "filename": "src/etc/mklldeps.py", "status": "modified", "additions": 40, "deletions": 61, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/4c5b9669e802ca851b47d934c9fd236e5b7a4b2a/src%2Fetc%2Fmklldeps.py", "raw_url": "https://github.com/rust-lang/rust/raw/4c5b9669e802ca851b47d934c9fd236e5b7a4b2a/src%2Fetc%2Fmklldeps.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmklldeps.py?ref=4c5b9669e802ca851b47d934c9fd236e5b7a4b2a", "patch": "@@ -19,6 +19,7 @@\n components = sys.argv[2].split(' ')\n components = [i for i in components if i]  # ignore extra whitespaces\n enable_static = sys.argv[3]\n+llconfig = sys.argv[4]\n \n f.write(\"\"\"// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n@@ -44,69 +45,47 @@ def run(args):\n         sys.exit(1)\n     return out\n \n-for llconfig in sys.argv[4:]:\n-    f.write(\"\\n\")\n-\n-    out = run([llconfig, '--host-target'])\n-    arch, os = out.split('-', 1)\n-    arch = 'x86' if arch == 'i686' or arch == 'i386' else arch\n-    if 'darwin' in os:\n-        os = 'macos'\n-    elif 'linux' in os:\n-        os = 'linux'\n-    elif 'freebsd' in os:\n-        os = 'freebsd'\n-    elif 'dragonfly' in os:\n-        os = 'dragonfly'\n-    elif 'android' in os:\n-        os = 'android'\n-    elif 'win' in os or 'mingw' in os:\n-        os = 'windows'\n-    cfg = [\n-        \"target_arch = \\\"\" + arch + \"\\\"\",\n-        \"target_os = \\\"\" + os + \"\\\"\",\n-    ]\n-\n-    f.write(\"#[cfg(all(\" + ', '.join(cfg) + \"))]\\n\")\n-\n-    version = run([llconfig, '--version']).strip()\n-\n-    # LLVM libs\n-    if version < '3.5':\n-      args = [llconfig, '--libs']\n-    else:\n-      args = [llconfig, '--libs', '--system-libs']\n-    args.extend(components)\n-    out = run(args)\n-    for lib in out.strip().replace(\"\\n\", ' ').split(' '):\n-        lib = lib.strip()[2:] # chop of the leading '-l'\n-        f.write(\"#[link(name = \\\"\" + lib + \"\\\"\")\n-        # LLVM libraries are all static libraries\n-        if 'LLVM' in lib:\n-            f.write(\", kind = \\\"static\\\"\")\n-        f.write(\")]\\n\")\n-\n-    # llvm-config before 3.5 didn't have a system-libs flag\n-    if version < '3.5':\n-      if os == 'win32':\n+f.write(\"\\n\")\n+\n+version = run([llconfig, '--version']).strip()\n+\n+# LLVM libs\n+if version < '3.5':\n+    args = [llconfig, '--libs']\n+else:\n+    args = [llconfig, '--libs', '--system-libs']\n+\n+args.extend(components)\n+out = run(args)\n+for lib in out.strip().replace(\"\\n\", ' ').split(' '):\n+    lib = lib.strip()[2:] # chop of the leading '-l'\n+    f.write(\"#[link(name = \\\"\" + lib + \"\\\"\")\n+    # LLVM libraries are all static libraries\n+    if 'LLVM' in lib:\n+        f.write(\", kind = \\\"static\\\"\")\n+    f.write(\")]\\n\")\n+\n+# llvm-config before 3.5 didn't have a system-libs flag\n+if version < '3.5':\n+    if os == 'win32':\n         f.write(\"#[link(name = \\\"imagehlp\\\")]\")\n \n-    # LLVM ldflags\n-    out = run([llconfig, '--ldflags'])\n-    for lib in out.strip().split(' '):\n-        if lib[:2] == \"-l\":\n-            f.write(\"#[link(name = \\\"\" + lib[2:] + \"\\\")]\\n\")\n-\n-    # C++ runtime library\n-    out = run([llconfig, '--cxxflags'])\n-    if enable_static == '1':\n-      assert('stdlib=libc++' not in out)\n-      f.write(\"#[link(name = \\\"stdc++\\\", kind = \\\"static\\\")]\\n\")\n-    else:\n-      if 'stdlib=libc++' in out:\n+# LLVM ldflags\n+out = run([llconfig, '--ldflags'])\n+for lib in out.strip().split(' '):\n+    if lib[:2] == \"-l\":\n+        f.write(\"#[link(name = \\\"\" + lib[2:] + \"\\\")]\\n\")\n+\n+# C++ runtime library\n+out = run([llconfig, '--cxxflags'])\n+if enable_static == '1':\n+    assert('stdlib=libc++' not in out)\n+    f.write(\"#[link(name = \\\"stdc++\\\", kind = \\\"static\\\")]\\n\")\n+else:\n+    if 'stdlib=libc++' in out:\n         f.write(\"#[link(name = \\\"c++\\\")]\\n\")\n-      else:\n+    else:\n         f.write(\"#[link(name = \\\"stdc++\\\")]\\n\")\n \n-    # Attach everything to an extern block\n-    f.write(\"extern {}\\n\")\n+# Attach everything to an extern block\n+f.write(\"extern {}\\n\")"}, {"sha": "eef0ecaae6abaeac38495457e9a63294a15b7720", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4c5b9669e802ca851b47d934c9fd236e5b7a4b2a/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c5b9669e802ca851b47d934c9fd236e5b7a4b2a/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=4c5b9669e802ca851b47d934c9fd236e5b7a4b2a", "patch": "@@ -2211,4 +2211,6 @@ pub unsafe fn static_link_hack_this_sucks() {\n // parts of LLVM that rustllvm depends on aren't thrown away by the linker.\n // Works to the above fix for #15460 to ensure LLVM dependencies that\n // are only used by rustllvm don't get stripped by the linker.\n-mod llvmdeps;\n+mod llvmdeps {\n+    include!(env!(\"CFG_LLVM_LINKAGE_FILE\"))\n+}"}]}