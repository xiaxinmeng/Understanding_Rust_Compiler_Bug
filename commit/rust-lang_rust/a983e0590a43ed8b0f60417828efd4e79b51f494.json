{"sha": "a983e0590a43ed8b0f60417828efd4e79b51f494", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5ODNlMDU5MGE0M2VkOGIwZjYwNDE3ODI4ZWZkNGU3OWI1MWY0OTQ=", "commit": {"author": {"name": "Matthew Kraai", "email": "kraai@ftbfs.org", "date": "2019-12-09T14:49:37Z"}, "committer": {"name": "Matthew Kraai", "email": "kraai@ftbfs.org", "date": "2019-12-09T14:49:37Z"}, "message": "Remove `checked_add` in `Layout::repeat`", "tree": {"sha": "1464e9be05bc7d7e3c3d4e1793f9f6e0bd575a75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1464e9be05bc7d7e3c3d4e1793f9f6e0bd575a75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a983e0590a43ed8b0f60417828efd4e79b51f494", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a983e0590a43ed8b0f60417828efd4e79b51f494", "html_url": "https://github.com/rust-lang/rust/commit/a983e0590a43ed8b0f60417828efd4e79b51f494", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a983e0590a43ed8b0f60417828efd4e79b51f494/comments", "author": {"login": "kraai", "id": 552646, "node_id": "MDQ6VXNlcjU1MjY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/552646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraai", "html_url": "https://github.com/kraai", "followers_url": "https://api.github.com/users/kraai/followers", "following_url": "https://api.github.com/users/kraai/following{/other_user}", "gists_url": "https://api.github.com/users/kraai/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraai/subscriptions", "organizations_url": "https://api.github.com/users/kraai/orgs", "repos_url": "https://api.github.com/users/kraai/repos", "events_url": "https://api.github.com/users/kraai/events{/privacy}", "received_events_url": "https://api.github.com/users/kraai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kraai", "id": 552646, "node_id": "MDQ6VXNlcjU1MjY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/552646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraai", "html_url": "https://github.com/kraai", "followers_url": "https://api.github.com/users/kraai/followers", "following_url": "https://api.github.com/users/kraai/following{/other_user}", "gists_url": "https://api.github.com/users/kraai/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraai/subscriptions", "organizations_url": "https://api.github.com/users/kraai/orgs", "repos_url": "https://api.github.com/users/kraai/repos", "events_url": "https://api.github.com/users/kraai/events{/privacy}", "received_events_url": "https://api.github.com/users/kraai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ff17e7c5faf604dcbfcb96a786df78e80f7e4f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ff17e7c5faf604dcbfcb96a786df78e80f7e4f4", "html_url": "https://github.com/rust-lang/rust/commit/3ff17e7c5faf604dcbfcb96a786df78e80f7e4f4"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "3ebdb916f99358917e7358de02623bea515428ca", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a983e0590a43ed8b0f60417828efd4e79b51f494/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a983e0590a43ed8b0f60417828efd4e79b51f494/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=a983e0590a43ed8b0f60417828efd4e79b51f494", "patch": "@@ -239,8 +239,11 @@ impl Layout {\n     #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n     #[inline]\n     pub fn repeat(&self, n: usize) -> Result<(Self, usize), LayoutErr> {\n-        let padded_size = self.size().checked_add(self.padding_needed_for(self.align()))\n-            .ok_or(LayoutErr { private: () })?;\n+        // This cannot overflow. Quoting from the invariant of Layout:\n+        // > `size`, when rounded up to the nearest multiple of `align`,\n+        // > must not overflow (i.e., the rounded value must be less than\n+        // > `usize::MAX`)\n+        let padded_size = self.size() + self.padding_needed_for(self.align());\n         let alloc_size = padded_size.checked_mul(n)\n             .ok_or(LayoutErr { private: () })?;\n "}]}