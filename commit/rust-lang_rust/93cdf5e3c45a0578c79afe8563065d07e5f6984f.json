{"sha": "93cdf5e3c45a0578c79afe8563065d07e5f6984f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzY2RmNWUzYzQ1YTA1NzhjNzlhZmU4NTYzMDY1ZDA3ZTVmNjk4NGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-27T04:20:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-27T04:20:28Z"}, "message": "Auto merge of #44112 - alexcrichton:thread-join, r=sfackler\n\nstd: Handle OS errors when joining threads\n\nAlso add to the documentation that the `join` method can panic.\n\ncc #34971\ncc #43539", "tree": {"sha": "89335a69e7db0057a54ade2e1365349fa26a9c0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89335a69e7db0057a54ade2e1365349fa26a9c0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93cdf5e3c45a0578c79afe8563065d07e5f6984f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93cdf5e3c45a0578c79afe8563065d07e5f6984f", "html_url": "https://github.com/rust-lang/rust/commit/93cdf5e3c45a0578c79afe8563065d07e5f6984f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93cdf5e3c45a0578c79afe8563065d07e5f6984f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e964612302e649e3c59a0b556001d801357306d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e964612302e649e3c59a0b556001d801357306d", "html_url": "https://github.com/rust-lang/rust/commit/3e964612302e649e3c59a0b556001d801357306d"}, {"sha": "dc7c7ba0c9f401f5597a245e05ee9e8d760715d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc7c7ba0c9f401f5597a245e05ee9e8d760715d3", "html_url": "https://github.com/rust-lang/rust/commit/dc7c7ba0c9f401f5597a245e05ee9e8d760715d3"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "40f1d6a6db15be67ed1664978fa0df604a46591a", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/93cdf5e3c45a0578c79afe8563065d07e5f6984f/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93cdf5e3c45a0578c79afe8563065d07e5f6984f/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=93cdf5e3c45a0578c79afe8563065d07e5f6984f", "patch": "@@ -168,7 +168,8 @@ impl Thread {\n         unsafe {\n             let ret = libc::pthread_join(self.id, ptr::null_mut());\n             mem::forget(self);\n-            debug_assert_eq!(ret, 0);\n+            assert!(ret == 0,\n+                    \"failed to join thread: {}\", io::Error::from_raw_os_error(ret));\n         }\n     }\n "}, {"sha": "7dfcc996e18e2e8202b7f6c061800ea005356204", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93cdf5e3c45a0578c79afe8563065d07e5f6984f/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93cdf5e3c45a0578c79afe8563065d07e5f6984f/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=93cdf5e3c45a0578c79afe8563065d07e5f6984f", "patch": "@@ -273,6 +273,7 @@ pub const FILE_END: DWORD = 2;\n \n pub const WAIT_OBJECT_0: DWORD = 0x00000000;\n pub const WAIT_TIMEOUT: DWORD = 258;\n+pub const WAIT_FAILED: DWORD = 0xFFFFFFFF;\n \n #[cfg(target_env = \"msvc\")]\n pub const MAX_SYM_NAME: usize = 2000;"}, {"sha": "2cdd86e88b0a074eb87125792b9f888aeb9eaaa3", "filename": "src/libstd/sys/windows/thread.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/93cdf5e3c45a0578c79afe8563065d07e5f6984f/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93cdf5e3c45a0578c79afe8563065d07e5f6984f/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs?ref=93cdf5e3c45a0578c79afe8563065d07e5f6984f", "patch": "@@ -61,7 +61,11 @@ impl Thread {\n     }\n \n     pub fn join(self) {\n-        unsafe { c::WaitForSingleObject(self.handle.raw(), c::INFINITE); }\n+        let rc = unsafe { c::WaitForSingleObject(self.handle.raw(), c::INFINITE) };\n+        if rc == c::WAIT_FAILED {\n+            panic!(\"failed to join on thread: {}\",\n+                   io::Error::last_os_error());\n+        }\n     }\n \n     pub fn yield_now() {"}, {"sha": "4912ff93abdb389c19fc458398234220fd0c4b35", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/93cdf5e3c45a0578c79afe8563065d07e5f6984f/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93cdf5e3c45a0578c79afe8563065d07e5f6984f/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=93cdf5e3c45a0578c79afe8563065d07e5f6984f", "patch": "@@ -1230,6 +1230,11 @@ impl<T> JoinHandle<T> {\n     /// [`Err`]: ../../std/result/enum.Result.html#variant.Err\n     /// [`panic`]: ../../std/macro.panic.html\n     ///\n+    /// # Panics\n+    ///\n+    /// This function may panic on some platforms if a thread attempts to join\n+    /// itself or otherwise may create a deadlock with joining threads.\n+    ///\n     /// # Examples\n     ///\n     /// ```"}]}