{"sha": "949443eff640ede205502547ea04a4dd350b255f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0OTQ0M2VmZjY0MGVkZTIwNTUwMjU0N2VhMDRhNGRkMzUwYjI1NWY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-13T04:23:13Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-14T06:59:03Z"}, "message": "core: Allow using failure outside of libcore\n\nDue to our excellent macro hygiene, this involves having a global path and a\nhidden module in libcore itself.", "tree": {"sha": "9ee4a1a668d36ef0bbc6e5c617d1e7d7d3e752d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ee4a1a668d36ef0bbc6e5c617d1e7d7d3e752d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/949443eff640ede205502547ea04a4dd350b255f", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/949443eff640ede205502547ea04a4dd350b255f", "html_url": "https://github.com/rust-lang/rust/commit/949443eff640ede205502547ea04a4dd350b255f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/949443eff640ede205502547ea04a4dd350b255f/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82a8a5ebb3b3c34cd135da511641a9df28e2c30e", "url": "https://api.github.com/repos/rust-lang/rust/commits/82a8a5ebb3b3c34cd135da511641a9df28e2c30e", "html_url": "https://github.com/rust-lang/rust/commit/82a8a5ebb3b3c34cd135da511641a9df28e2c30e"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "8a28f7b13928fc1d2287414a749eb68587fd4413", "filename": "src/libcore/failure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/949443eff640ede205502547ea04a4dd350b255f/src%2Flibcore%2Ffailure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/949443eff640ede205502547ea04a4dd350b255f/src%2Flibcore%2Ffailure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffailure.rs?ref=949443eff640ede205502547ea04a4dd350b255f", "patch": "@@ -10,7 +10,7 @@\n \n //! Failure support for libcore\n \n-#![allow(dead_code)]\n+#![allow(dead_code, missing_doc)]\n \n #[cfg(not(test))]\n use str::raw::c_str_to_static_slice;"}, {"sha": "4eab7e9d45d351c2b83881ff6e8be7d95a546312", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/949443eff640ede205502547ea04a4dd350b255f/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/949443eff640ede205502547ea04a4dd350b255f/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=949443eff640ede205502547ea04a4dd350b255f", "patch": "@@ -106,6 +106,7 @@ pub mod atomics;\n pub mod bool;\n pub mod cell;\n pub mod char;\n+pub mod failure;\n pub mod finally;\n pub mod iter;\n pub mod option;\n@@ -118,13 +119,15 @@ pub mod tuple;\n #[cfg(stage0, not(test))]\n pub mod owned;\n \n-mod failure;\n-\n // FIXME: this module should not exist. Once owned allocations are no longer a\n //        language type, this module can move outside to the owned allocation\n //        crate.\n mod should_not_exist;\n \n+mod core {\n+    pub use failure;\n+}\n+\n mod std {\n     pub use clone;\n     pub use cmp;"}, {"sha": "69be68a34a130eef16c8d8e5e41d80395cb6062e", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/949443eff640ede205502547ea04a4dd350b255f/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/949443eff640ede205502547ea04a4dd350b255f/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=949443eff640ede205502547ea04a4dd350b255f", "patch": "@@ -17,7 +17,7 @@ macro_rules! fail(\n         fail!(\"explicit failure\")\n     );\n     ($msg:expr) => (\n-        ::failure::begin_unwind($msg, file!(), line!())\n+        ::core::failure::begin_unwind($msg, file!(), line!())\n     );\n )\n "}]}