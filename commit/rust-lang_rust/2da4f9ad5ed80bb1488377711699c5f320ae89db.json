{"sha": "2da4f9ad5ed80bb1488377711699c5f320ae89db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkYTRmOWFkNWVkODBiYjE0ODgzNzc3MTE2OTljNWYzMjBhZTg5ZGI=", "commit": {"author": {"name": "scottmcm", "email": "scottmcm@users.noreply.github.com", "date": "2019-06-02T02:47:50Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2019-06-09T05:38:18Z"}, "message": "Apply suggestions from code review\n\nCo-Authored-By: Mazdak Farrokhzad <twingoow@gmail.com>", "tree": {"sha": "385836b71360a53e85e7245c7bc806991ea7ce0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/385836b71360a53e85e7245c7bc806991ea7ce0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2da4f9ad5ed80bb1488377711699c5f320ae89db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2da4f9ad5ed80bb1488377711699c5f320ae89db", "html_url": "https://github.com/rust-lang/rust/commit/2da4f9ad5ed80bb1488377711699c5f320ae89db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2da4f9ad5ed80bb1488377711699c5f320ae89db/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc2a2808d078b0a7d49f7a89fa7d14ead1ebc0df", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc2a2808d078b0a7d49f7a89fa7d14ead1ebc0df", "html_url": "https://github.com/rust-lang/rust/commit/cc2a2808d078b0a7d49f7a89fa7d14ead1ebc0df"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "d1c9de7c83cf1f029f94ac1dc575a4fa94bb5a19", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2da4f9ad5ed80bb1488377711699c5f320ae89db/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2da4f9ad5ed80bb1488377711699c5f320ae89db/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=2da4f9ad5ed80bb1488377711699c5f320ae89db", "patch": "@@ -2707,28 +2707,28 @@ impl<T: fmt::Debug> fmt::Debug for VecDeque<T> {\n     }\n }\n \n-/// Turn a `Vec` into a `VecDeque`.\n+/// Turn a `Vec<T>` into a `VecDeque<T>`.\n ///\n /// This avoids reallocating where possible, but the conditions for that are\n-/// strict, and subject to change, so shouldn't be relied upon unless the\n-/// `Vec` came from `From<VecDeque>` has hasn't been reallocated.\n+/// strict, and subject to change, and so shouldn't be relied upon unless the\n+/// `Vec<T>` came from `From<VecDeque<T>>` has hasn't been reallocated.\n ///\n /// # Examples\n ///\n /// ```\n /// use std::collections::VecDeque;\n ///\n-/// // Start with a VecDeque\n+/// // Start with a `VecDeque<i32>`.\n /// let deque: VecDeque<_> = (1..5).collect();\n ///\n-/// // Turn it into a Vec (no allocation needed)\n+/// // Turn it into a `Vec<i32>` with no allocation needed.\n /// let mut vec = Vec::from(deque);\n ///\n-/// // modify it, being careful to not trigger reallocation\n+/// // Modify it, being careful not to trigger reallocation.\n /// vec.pop();\n /// vec.push(100);\n ///\n-/// // Turn it back into a VecDeque (no allocation needed)\n+/// // Turn it back into a `VecDeque<i32>` with no allocation needed.\n /// let ptr = vec.as_ptr();\n /// let deque = VecDeque::from(vec);\n /// assert_eq!(deque, [1, 2, 3, 100]);\n@@ -2760,7 +2760,7 @@ impl<T> From<Vec<T>> for VecDeque<T> {\n     }\n }\n \n-/// Turn a `VecDeque` into a `Vec`.\n+/// Turn a `VecDeque<T>` into a `Vec<T>`.\n ///\n /// This never needs to re-allocate, but does need to do O(n) data movement if\n /// the circular buffer doesn't happen to be at the beginning of the allocation.\n@@ -2770,14 +2770,14 @@ impl<T> From<Vec<T>> for VecDeque<T> {\n /// ```\n /// use std::collections::VecDeque;\n ///\n-/// // This one is O(1)\n+/// // This one is O(1).\n /// let deque: VecDeque<_> = (1..5).collect();\n /// let ptr = deque.as_slices().0.as_ptr();\n /// let vec = Vec::from(deque);\n /// assert_eq!(vec, [1, 2, 3, 4]);\n /// assert_eq!(vec.as_ptr(), ptr);\n ///\n-/// // This one need data rearranging\n+/// // This one needs data rearranging.\n /// let mut deque: VecDeque<_> = (1..5).collect();\n /// deque.push_front(9);\n /// deque.push_front(8);"}]}