{"sha": "64a73dcfba277587843bd2548b0d6990dc4a4b16", "node_id": "C_kwDOAAsO6NoAKDY0YTczZGNmYmEyNzc1ODc4NDNiZDI1NDhiMGQ2OTkwZGM0YTRiMTY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-18T04:17:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-18T04:17:16Z"}, "message": "Merge #10785\n\n10785: ide: show const value in hover r=jhgg a=jhgg\n\nfixes #10783\r\n\r\nI think my original attempt was incorrect, because it looks like `HirDisplay` is used in more places than just the hover.  \r\n\r\nSo, I've attempted it again in 312eafe, this time specifically just rendering the value in `hover::render`\r\n\r\npictoral:\r\n\r\n![image](https://user-images.githubusercontent.com/5489149/142163890-b6aa2ab4-7bd0-4dd3-b35d-5eaa83fffb7f.png)\r\n\n\nCo-authored-by: Jake Heinz <jh@discordapp.com>\nCo-authored-by: Jake <jh@discordapp.com>", "tree": {"sha": "eb5eaab067a6438a30f92a873982f5a038f6edd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb5eaab067a6438a30f92a873982f5a038f6edd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64a73dcfba277587843bd2548b0d6990dc4a4b16", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhldPMCRBK7hj4Ov3rIwAAB/EIAFpNNZg5q/vT2Hvc3h0jBnkN\nT3g7MXCStu6697Bus8YYnwAlYq8EDmTFaNdYjuUdkpelCZ49qmQE33b+Cq4DYsOp\naPNshhKEtJ56W8ZyjlVW26iBYWIu6jc58pYf6XIDJxcPDjDPPTYFlTwugQb4CzXE\n3Spsoge/IFkyPRubOt9ur9GXle8xms3BeUiioAeEjoEGG8SB8cVsbpxpTHSaGqHV\n5H/cieQ8nBG/rj+8UPh4nlRwN86c4/typAlUaVQ6/AQWLhjqKQBWsWcSg5PhrgzF\nCpMDt68BhZu6H7Nhfs/oSGbErtq3SJy+wNrtmKX2QtDOMh3KwL8GWUxasmH41Sg=\n=Jo8N\n-----END PGP SIGNATURE-----\n", "payload": "tree eb5eaab067a6438a30f92a873982f5a038f6edd2\nparent fdd49b97133a77ff652017d24b72ced37d4a822d\nparent aef8882254e1443fb68d449be5f8006c46533c5a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1637209036 +0000\ncommitter GitHub <noreply@github.com> 1637209036 +0000\n\nMerge #10785\n\n10785: ide: show const value in hover r=jhgg a=jhgg\n\nfixes #10783\r\n\r\nI think my original attempt was incorrect, because it looks like `HirDisplay` is used in more places than just the hover.  \r\n\r\nSo, I've attempted it again in 312eafe, this time specifically just rendering the value in `hover::render`\r\n\r\npictoral:\r\n\r\n![image](https://user-images.githubusercontent.com/5489149/142163890-b6aa2ab4-7bd0-4dd3-b35d-5eaa83fffb7f.png)\r\n\n\nCo-authored-by: Jake Heinz <jh@discordapp.com>\nCo-authored-by: Jake <jh@discordapp.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64a73dcfba277587843bd2548b0d6990dc4a4b16", "html_url": "https://github.com/rust-lang/rust/commit/64a73dcfba277587843bd2548b0d6990dc4a4b16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64a73dcfba277587843bd2548b0d6990dc4a4b16/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdd49b97133a77ff652017d24b72ced37d4a822d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdd49b97133a77ff652017d24b72ced37d4a822d", "html_url": "https://github.com/rust-lang/rust/commit/fdd49b97133a77ff652017d24b72ced37d4a822d"}, {"sha": "aef8882254e1443fb68d449be5f8006c46533c5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/aef8882254e1443fb68d449be5f8006c46533c5a", "html_url": "https://github.com/rust-lang/rust/commit/aef8882254e1443fb68d449be5f8006c46533c5a"}], "stats": {"total": 97, "additions": 69, "deletions": 28}, "files": [{"sha": "a528b2bc2d1f066b906edaa70c9beb17a8174d5e", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64a73dcfba277587843bd2548b0d6990dc4a4b16/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64a73dcfba277587843bd2548b0d6990dc4a4b16/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=64a73dcfba277587843bd2548b0d6990dc4a4b16", "patch": "@@ -1457,6 +1457,10 @@ impl Const {\n         db.const_data(self.id).name.clone()\n     }\n \n+    pub fn value(self, db: &dyn HirDatabase) -> Option<ast::Expr> {\n+        self.source(db)?.value.body()\n+    }\n+\n     pub fn ty(self, db: &dyn HirDatabase) -> Type {\n         let data = db.const_data(self.id);\n         let resolver = self.id.resolver(db.upcast());"}, {"sha": "46fe7f2b7d2394fb9ca39b687172071e1b2b3c96", "filename": "crates/ide/src/hover/render.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/64a73dcfba277587843bd2548b0d6990dc4a4b16/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64a73dcfba277587843bd2548b0d6990dc4a4b16/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Frender.rs?ref=64a73dcfba277587843bd2548b0d6990dc4a4b16", "patch": "@@ -1,6 +1,6 @@\n //! Logic for rendering the different hover messages\n use either::Either;\n-use hir::{AsAssocItem, HasAttrs, HasSource, HirDisplay, Semantics, TypeInfo};\n+use hir::{AsAssocItem, Const, HasAttrs, HasSource, HirDisplay, Semantics, TypeInfo};\n use ide_db::{\n     base_db::SourceDatabase,\n     defs::Definition,\n@@ -352,7 +352,7 @@ pub(super) fn definition(\n         Definition::Function(it) => label_and_docs(db, it),\n         Definition::Adt(it) => label_and_docs(db, it),\n         Definition::Variant(it) => label_and_docs(db, it),\n-        Definition::Const(it) => label_and_docs(db, it),\n+        Definition::Const(it) => const_label_value_and_docs(db, it),\n         Definition::Static(it) => label_and_docs(db, it),\n         Definition::Trait(it) => label_and_docs(db, it),\n         Definition::TypeAlias(it) => label_and_docs(db, it),\n@@ -381,6 +381,21 @@ where\n     (label, docs)\n }\n \n+fn const_label_value_and_docs(\n+    db: &RootDatabase,\n+    konst: Const,\n+) -> (String, Option<hir::Documentation>) {\n+    let label = if let Some(expr) = konst.value(db) {\n+        format!(\"{} = {}\", konst.display(db), expr)\n+    } else {\n+        konst.display(db).to_string()\n+    };\n+\n+    let docs = konst.attrs(db).docs();\n+\n+    (label, docs)\n+}\n+\n fn definition_mod_path(db: &RootDatabase, def: &Definition) -> Option<String> {\n     if let Definition::GenericParam(_) = def {\n         return None;"}, {"sha": "897f8d7b8312a3454aebdedd72bc386285b61ff6", "filename": "crates/ide/src/hover/tests.rs", "status": "modified", "additions": 48, "deletions": 26, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/64a73dcfba277587843bd2548b0d6990dc4a4b16/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64a73dcfba277587843bd2548b0d6990dc4a4b16/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs?ref=64a73dcfba277587843bd2548b0d6990dc4a4b16", "patch": "@@ -503,17 +503,39 @@ fn hover_const_static() {\n     check(\n         r#\"const foo$0: u32 = 123;\"#,\n         expect![[r#\"\n-                *foo*\n+            *foo*\n \n-                ```rust\n-                test\n-                ```\n+            ```rust\n+            test\n+            ```\n \n-                ```rust\n-                const foo: u32\n-                ```\n-            \"#]],\n+            ```rust\n+            const foo: u32 = 123\n+            ```\n+        \"#]],\n     );\n+    check(\n+        r#\"\n+const foo$0: u32 = {\n+    let x = foo();\n+    x + 100\n+};\"#,\n+        expect![[r#\"\n+            *foo*\n+\n+            ```rust\n+            test\n+            ```\n+\n+            ```rust\n+            const foo: u32 = {\n+                let x = foo();\n+                x + 100\n+            }\n+            ```\n+        \"#]],\n+    );\n+\n     check(\n         r#\"static foo$0: u32 = 456;\"#,\n         expect![[r#\"\n@@ -788,16 +810,16 @@ fn main() {\n }\n \"#,\n         expect![[r#\"\n-                *C*\n+            *C*\n \n-                ```rust\n-                test\n-                ```\n+            ```rust\n+            test\n+            ```\n \n-                ```rust\n-                const C: u32\n-                ```\n-            \"#]],\n+            ```rust\n+            const C: u32 = 1\n+            ```\n+        \"#]],\n     )\n }\n \n@@ -3176,20 +3198,20 @@ fn foo() {\n }\n \"#,\n         expect![[r#\"\n-                *FOO*\n+            *FOO*\n \n-                ```rust\n-                test\n-                ```\n+            ```rust\n+            test\n+            ```\n \n-                ```rust\n-                const FOO: usize\n-                ```\n+            ```rust\n+            const FOO: usize = 3\n+            ```\n \n-                ---\n+            ---\n \n-                This is a doc\n-            \"#]],\n+            This is a doc\n+        \"#]],\n     );\n }\n "}]}