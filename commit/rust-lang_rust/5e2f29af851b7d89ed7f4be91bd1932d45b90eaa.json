{"sha": "5e2f29af851b7d89ed7f4be91bd1932d45b90eaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlMmYyOWFmODUxYjdkODllZDdmNGJlOTFiZDE5MzJkNDViOTBlYWE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-10T17:28:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-10T17:43:37Z"}, "message": "Add failing test", "tree": {"sha": "73b41ddfd62434596d58ac24718a1225890512e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73b41ddfd62434596d58ac24718a1225890512e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e2f29af851b7d89ed7f4be91bd1932d45b90eaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e2f29af851b7d89ed7f4be91bd1932d45b90eaa", "html_url": "https://github.com/rust-lang/rust/commit/5e2f29af851b7d89ed7f4be91bd1932d45b90eaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e2f29af851b7d89ed7f4be91bd1932d45b90eaa/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c476742f47dd905fa366e62f480e3f656c62e66c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c476742f47dd905fa366e62f480e3f656c62e66c", "html_url": "https://github.com/rust-lang/rust/commit/c476742f47dd905fa366e62f480e3f656c62e66c"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "f2a9b1c4087b12c60802e60f49c40f4fc430d7a9", "filename": "crates/ra_hir_ty/src/tests/macros.rs", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/5e2f29af851b7d89ed7f4be91bd1932d45b90eaa/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e2f29af851b7d89ed7f4be91bd1932d45b90eaa/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs?ref=5e2f29af851b7d89ed7f4be91bd1932d45b90eaa", "patch": "@@ -1,10 +1,13 @@\n+use std::fs;\n+\n use insta::assert_snapshot;\n use ra_db::fixture::WithFixture;\n-\n-use super::{infer, type_at, type_at_pos};\n+use test_utils::project_dir;\n \n use crate::test_db::TestDB;\n \n+use super::{infer, type_at, type_at_pos};\n+\n #[test]\n fn cfg_impl_def() {\n     let (db, pos) = TestDB::with_position(\n@@ -481,6 +484,30 @@ fn bar() -> u32 {0}\n     assert_eq!(\"u32\", type_at_pos(&db, pos));\n }\n \n+#[test]\n+#[ignore]\n+fn include_accidentally_quadratic() {\n+    let file = project_dir().join(\"crates/ra_syntax/test_data/accidentally_quadratic\");\n+    let big_file = fs::read_to_string(file).unwrap();\n+    let big_file = vec![big_file; 10].join(\"\\n\");\n+\n+    let fixture = r#\"\n+//- /main.rs\n+#[rustc_builtin_macro]\n+macro_rules! include {() => {}}\n+\n+include!(\"foo.rs\");\n+\n+fn main() {\n+    RegisterBlock { }<|>;\n+}\n+    \"#;\n+    let fixture = format!(\"{}\\n//- /foo.rs\\n{}\", fixture, big_file);\n+\n+    let (db, pos) = TestDB::with_position(&fixture);\n+    assert_eq!(\"RegisterBlock\", type_at_pos(&db, pos));\n+}\n+\n #[test]\n fn infer_builtin_macros_include_concat() {\n     let (db, pos) = TestDB::with_position("}]}