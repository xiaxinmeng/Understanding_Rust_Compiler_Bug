{"sha": "c4d577be1acf333ff9c51c85fd1dd19adc46cb59", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0ZDU3N2JlMWFjZjMzM2ZmOWM1MWM4NWZkMWRkMTlhZGM0NmNiNTk=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-08-12T09:15:02Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-08-21T22:59:39Z"}, "message": "Refactor away variant `hir::PathListItem_::Mod`\nand refacotor `hir::PathListItem_::Ident` -> `hir::PathListItem_`.", "tree": {"sha": "c9810d09d0d3f78d088c02dc9ebdcd4a4750e01d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9810d09d0d3f78d088c02dc9ebdcd4a4750e01d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4d577be1acf333ff9c51c85fd1dd19adc46cb59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4d577be1acf333ff9c51c85fd1dd19adc46cb59", "html_url": "https://github.com/rust-lang/rust/commit/c4d577be1acf333ff9c51c85fd1dd19adc46cb59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98ce875b58a87164b763e83be82b5ed32f4398a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/98ce875b58a87164b763e83be82b5ed32f4398a9", "html_url": "https://github.com/rust-lang/rust/commit/98ce875b58a87164b763e83be82b5ed32f4398a9"}], "stats": {"total": 97, "additions": 25, "deletions": 72}, "files": [{"sha": "5e4ca82dd0090312fdfcfbdb3eb0dbabc3a4ca1e", "filename": "src/librustc/hir/fold.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc%2Fhir%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc%2Fhir%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Ffold.rs?ref=c4d577be1acf333ff9c51c85fd1dd19adc46cb59", "patch": "@@ -271,16 +271,10 @@ pub fn noop_fold_view_path<T: Folder>(view_path: P<ViewPath>, fld: &mut T) -> P<\n                     ViewPathList(fld.fold_path(path),\n                                  path_list_idents.move_map(|path_list_ident| {\n                                      Spanned {\n-                                         node: match path_list_ident.node {\n-                                             PathListIdent { id, name, rename } => PathListIdent {\n-                                                 id: fld.new_id(id),\n-                                                 name: name,\n-                                                 rename: rename,\n-                                             },\n-                                             PathListMod { id, rename } => PathListMod {\n-                                                 id: fld.new_id(id),\n-                                                 rename: rename,\n-                                             },\n+                                         node: PathListItem_ {\n+                                             id: fld.new_id(path_list_ident.node.id),\n+                                             name: path_list_ident.node.name,\n+                                             rename: path_list_ident.node.rename,\n                                          },\n                                          span: fld.new_span(path_list_ident.span),\n                                      }"}, {"sha": "bc1dff7c6fc312e27e08d3fa10b2792ebc110e8d", "filename": "src/librustc/hir/intravisit.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc%2Fhir%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc%2Fhir%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fintravisit.rs?ref=c4d577be1acf333ff9c51c85fd1dd19adc46cb59", "patch": "@@ -444,12 +444,12 @@ pub fn walk_path<'v, V: Visitor<'v>>(visitor: &mut V, path: &'v Path) {\n     }\n }\n \n-pub fn walk_path_list_item<'v, V: Visitor<'v>>(visitor: &mut V,\n-                                               _prefix: &'v Path,\n-                                               item: &'v PathListItem) {\n-    visitor.visit_id(item.node.id());\n-    walk_opt_name(visitor, item.span, item.node.name());\n-    walk_opt_name(visitor, item.span, item.node.rename());\n+pub fn walk_path_list_item<'v, V>(visitor: &mut V, _prefix: &'v Path, item: &'v PathListItem)\n+    where V: Visitor<'v>,\n+{\n+    visitor.visit_id(item.node.id);\n+    visitor.visit_name(item.span, item.node.name);\n+    walk_opt_name(visitor, item.span, item.node.rename);\n }\n \n pub fn walk_path_segment<'v, V: Visitor<'v>>(visitor: &mut V,"}, {"sha": "691396b9b7751b9a68b1f4509e3f5ac8d026415a", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=c4d577be1acf333ff9c51c85fd1dd19adc46cb59", "patch": "@@ -218,7 +218,7 @@ impl<'a> LoweringContext<'a> {\n \n     fn lower_path_list_item(&mut self, path_list_ident: &PathListItem) -> hir::PathListItem {\n         Spanned {\n-            node: hir::PathListIdent {\n+            node: hir::PathListItem_ {\n                 id: path_list_ident.node.id,\n                 name: path_list_ident.node.name.name,\n                 rename: path_list_ident.node.rename.map(|rename| rename.name),"}, {"sha": "280c0f304856990810b38169af7f76a4d43b7848", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=c4d577be1acf333ff9c51c85fd1dd19adc46cb59", "patch": "@@ -120,7 +120,7 @@ impl<'ast> Visitor<'ast> for NodeCollector<'ast> {\n                     match view_path.node {\n                         ViewPathList(_, ref paths) => {\n                             for path in paths {\n-                                this.insert(path.node.id(), NodeItem(i));\n+                                this.insert(path.node.id, NodeItem(i));\n                             }\n                         }\n                         _ => ()"}, {"sha": "d6b8a84698a87afa852ea147ff034b851c326975", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 5, "deletions": 34, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=c4d577be1acf333ff9c51c85fd1dd19adc46cb59", "patch": "@@ -20,7 +20,6 @@ pub use self::FunctionRetTy::*;\n pub use self::ForeignItem_::*;\n pub use self::Item_::*;\n pub use self::Mutability::*;\n-pub use self::PathListItem_::*;\n pub use self::PrimTy::*;\n pub use self::Stmt_::*;\n pub use self::TraitItem_::*;\n@@ -1337,39 +1336,11 @@ pub struct Variant_ {\n pub type Variant = Spanned<Variant_>;\n \n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\n-pub enum PathListItem_ {\n-    PathListIdent {\n-        name: Name,\n-        /// renamed in list, eg `use foo::{bar as baz};`\n-        rename: Option<Name>,\n-        id: NodeId,\n-    },\n-    PathListMod {\n-        /// renamed in list, eg `use foo::{self as baz};`\n-        rename: Option<Name>,\n-        id: NodeId,\n-    },\n-}\n-\n-impl PathListItem_ {\n-    pub fn id(&self) -> NodeId {\n-        match *self {\n-            PathListIdent { id, .. } | PathListMod { id, .. } => id,\n-        }\n-    }\n-\n-    pub fn name(&self) -> Option<Name> {\n-        match *self {\n-            PathListIdent { name, .. } => Some(name),\n-            PathListMod { .. } => None,\n-        }\n-    }\n-\n-    pub fn rename(&self) -> Option<Name> {\n-        match *self {\n-            PathListIdent { rename, .. } | PathListMod { rename, .. } => rename,\n-        }\n-    }\n+pub struct PathListItem_ {\n+    pub name: Name,\n+    /// renamed in list, eg `use foo::{bar as baz};`\n+    pub rename: Option<Name>,\n+    pub id: NodeId,\n }\n \n pub type PathListItem = Spanned<PathListItem_>;"}, {"sha": "cdd8a36fbad6c452ab2d8722ce1cca5a4ee3d420", "filename": "src/librustc/hir/print.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=c4d577be1acf333ff9c51c85fd1dd19adc46cb59", "patch": "@@ -2133,16 +2133,7 @@ impl<'a> State<'a> {\n                     self.print_path(path, false, 0)?;\n                     word(&mut self.s, \"::{\")?;\n                 }\n-                self.commasep(Inconsistent, &segments[..], |s, w| {\n-                    match w.node {\n-                        hir::PathListIdent { name, .. } => {\n-                            s.print_name(name)\n-                        }\n-                        hir::PathListMod { .. } => {\n-                            word(&mut s.s, \"self\")\n-                        }\n-                    }\n-                })?;\n+                self.commasep(Inconsistent, &segments[..], |s, w| s.print_name(w.node.name))?;\n                 word(&mut self.s, \"}\")\n             }\n         }"}, {"sha": "cdd774e11d3282ec5e9e586420a6e28b733e42b4", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=c4d577be1acf333ff9c51c85fd1dd19adc46cb59", "patch": "@@ -294,7 +294,7 @@ impl<'a, 'tcx, 'v> Visitor<'v> for MarkSymbolVisitor<'a, 'tcx> {\n     }\n \n     fn visit_path_list_item(&mut self, path: &hir::Path, item: &hir::PathListItem) {\n-        self.lookup_and_handle_definition(item.node.id());\n+        self.lookup_and_handle_definition(item.node.id);\n         intravisit::walk_path_list_item(self, path, item);\n     }\n }"}, {"sha": "6a57f510cdd9a2a94a80ba8b96f73d00b30504dd", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=c4d577be1acf333ff9c51c85fd1dd19adc46cb59", "patch": "@@ -631,7 +631,7 @@ pub fn check_path_list_item<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                                       cb: &mut FnMut(DefId, Span,\n                                                      &Option<&Stability>,\n                                                      &Option<DeprecationEntry>)) {\n-    match tcx.expect_def(item.node.id()) {\n+    match tcx.expect_def(item.node.id) {\n         Def::PrimTy(..) => {}\n         def => {\n             maybe_do_stability_check(tcx, def.def_id(), item.span, cb);"}, {"sha": "1ec0bba5f5bcdfafe48434b806840092885a7c3e", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=c4d577be1acf333ff9c51c85fd1dd19adc46cb59", "patch": "@@ -20,6 +20,7 @@ use std::collections::hash_map::Entry::{Occupied, Vacant};\n use syntax::ast;\n use syntax::attr::{self, AttrMetaMethods};\n use syntax::feature_gate::{KNOWN_ATTRIBUTES, AttributeType};\n+use syntax::parse::token::keywords;\n use syntax::ptr::P;\n use syntax_pos::Span;\n \n@@ -392,13 +393,9 @@ impl LateLintPass for UnusedImportBraces {\n     fn check_item(&mut self, cx: &LateContext, item: &hir::Item) {\n         if let hir::ItemUse(ref view_path) = item.node {\n             if let hir::ViewPathList(_, ref items) = view_path.node {\n-                if items.len() == 1 {\n-                    if let hir::PathListIdent {ref name, ..} = items[0].node {\n-                        let m = format!(\"braces around {} is unnecessary\",\n-                                        name);\n-                        cx.span_lint(UNUSED_IMPORT_BRACES, item.span,\n-                                     &m[..]);\n-                    }\n+                if items.len() == 1 && items[0].node.name != keywords::SelfValue.name() {\n+                    let msg = format!(\"braces around {} is unnecessary\", items[0].node.name);\n+                    cx.span_lint(UNUSED_IMPORT_BRACES, item.span, &msg);\n                 }\n             }\n         }"}, {"sha": "f66f15b238e73fd8eba05395546d54cad68b8cd3", "filename": "src/librustc_typeck/check_unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc_typeck%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4d577be1acf333ff9c51c85fd1dd19adc46cb59/src%2Flibrustc_typeck%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck_unused.rs?ref=c4d577be1acf333ff9c51c85fd1dd19adc46cb59", "patch": "@@ -49,7 +49,7 @@ impl<'a, 'tcx, 'v> Visitor<'v> for UnusedTraitImportVisitor<'a, 'tcx> {\n                 }\n                 hir::ViewPathList(_, ref path_list) => {\n                     for path_item in path_list {\n-                        self.check_import(path_item.node.id(), path_item.span);\n+                        self.check_import(path_item.node.id, path_item.span);\n                     }\n                 }\n             }"}]}