{"sha": "83d290f461c8cf3fe65e682162f3acd4a6369478", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzZDI5MGY0NjFjOGNmM2ZlNjVlNjgyMTYyZjNhY2Q0YTYzNjk0Nzg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-06-03T03:49:39Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-06-07T01:36:29Z"}, "message": "add misc. pure modifiers in core", "tree": {"sha": "c3bf3b81d02c42269c7e3720eb24d91c2e4a5790", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3bf3b81d02c42269c7e3720eb24d91c2e4a5790"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83d290f461c8cf3fe65e682162f3acd4a6369478", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83d290f461c8cf3fe65e682162f3acd4a6369478", "html_url": "https://github.com/rust-lang/rust/commit/83d290f461c8cf3fe65e682162f3acd4a6369478", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83d290f461c8cf3fe65e682162f3acd4a6369478/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60913bf04590e0cb6d80290b0e15b00046dfaeaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/60913bf04590e0cb6d80290b0e15b00046dfaeaa", "html_url": "https://github.com/rust-lang/rust/commit/60913bf04590e0cb6d80290b0e15b00046dfaeaa"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "e0fd21f6c4a1d9a40ea2f6bec51c4ba1728d3246", "filename": "src/libcore/sys.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/83d290f461c8cf3fe65e682162f3acd4a6369478/src%2Flibcore%2Fsys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83d290f461c8cf3fe65e682162f3acd4a6369478/src%2Flibcore%2Fsys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsys.rs?ref=83d290f461c8cf3fe65e682162f3acd4a6369478", "patch": "@@ -17,9 +17,9 @@ enum type_desc = {\n \n #[abi = \"cdecl\"]\n native mod rustrt {\n-    fn refcount(t: *()) -> libc::intptr_t;\n+    pure fn refcount(t: *()) -> libc::intptr_t;\n     fn unsupervise();\n-    fn shape_log_str(t: *sys::type_desc, data: *()) -> str;\n+    pure fn shape_log_str(t: *sys::type_desc, data: *()) -> str;\n }\n \n #[abi = \"rust-intrinsic\"]\n@@ -36,13 +36,13 @@ Returns a pointer to a type descriptor.\n Useful for calling certain function in the Rust runtime or otherwise\n performing dark magick.\n \"]\n-fn get_type_desc<T>() -> *type_desc {\n-    rusti::get_tydesc::<T>() as *type_desc\n+pure fn get_type_desc<T>() -> *type_desc {\n+    unchecked { rusti::get_tydesc::<T>() as *type_desc }\n }\n \n #[doc = \"Returns the size of a type\"]\n-fn size_of<T>() -> uint unsafe {\n-    rusti::size_of::<T>()\n+pure fn size_of<T>() -> uint unsafe {\n+    unchecked { rusti::size_of::<T>() }\n }\n \n #[doc = \"\n@@ -51,23 +51,23 @@ Returns the ABI-required minimum alignment of a type\n This is the alignment used for struct fields. It may be smaller\n than the preferred alignment.\n \"]\n-fn min_align_of<T>() -> uint unsafe {\n-    rusti::min_align_of::<T>()\n+pure fn min_align_of<T>() -> uint unsafe {\n+    unchecked { rusti::min_align_of::<T>() }\n }\n \n #[doc = \"Returns the preferred alignment of a type\"]\n-fn pref_align_of<T>() -> uint unsafe {\n-    rusti::pref_align_of::<T>()\n+pure fn pref_align_of<T>() -> uint unsafe {\n+    unchecked { rusti::pref_align_of::<T>() }\n }\n \n #[doc = \"Returns the refcount of a shared box\"]\n-fn refcount<T>(t: @T) -> uint {\n+pure fn refcount<T>(t: @T) -> uint {\n     unsafe {\n         ret rustrt::refcount(unsafe::reinterpret_cast(t)) as uint;\n     }\n }\n \n-fn log_str<T>(t: T) -> str {\n+pure fn log_str<T>(t: T) -> str {\n     unsafe {\n         let data_ptr: *() = unsafe::reinterpret_cast(ptr::addr_of(t));\n         rustrt::shape_log_str(get_type_desc::<T>(), data_ptr)"}]}