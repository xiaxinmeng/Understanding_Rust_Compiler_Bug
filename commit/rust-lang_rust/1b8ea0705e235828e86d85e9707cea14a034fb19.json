{"sha": "1b8ea0705e235828e86d85e9707cea14a034fb19", "node_id": "C_kwDOAAsO6NoAKDFiOGVhMDcwNWUyMzU4MjhlODZkODVlOTcwN2NlYTE0YTAzNGZiMTk", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-30T16:26:53Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-30T16:35:33Z"}, "message": "Add const_allocate and const_deallocate intrinsics", "tree": {"sha": "d65f2ff199c0b4d4683646f5122046473adefb6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d65f2ff199c0b4d4683646f5122046473adefb6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b8ea0705e235828e86d85e9707cea14a034fb19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b8ea0705e235828e86d85e9707cea14a034fb19", "html_url": "https://github.com/rust-lang/rust/commit/1b8ea0705e235828e86d85e9707cea14a034fb19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b8ea0705e235828e86d85e9707cea14a034fb19/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ff158e3ed06f9d16d7a0067952642751eb176e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ff158e3ed06f9d16d7a0067952642751eb176e1", "html_url": "https://github.com/rust-lang/rust/commit/3ff158e3ed06f9d16d7a0067952642751eb176e1"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "693b0e21444dfad54f03a16a67ab0ed761e8d809", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1b8ea0705e235828e86d85e9707cea14a034fb19/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b8ea0705e235828e86d85e9707cea14a034fb19/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=1b8ea0705e235828e86d85e9707cea14a034fb19", "patch": "@@ -1020,6 +1020,16 @@ fn codegen_regular_intrinsic_call<'tcx>(\n             ret.write_cvalue(fx, CValue::by_val(is_eq_value, ret.layout()));\n         };\n \n+        const_allocate, (c _size, c _align) {\n+            // returns a null pointer at runtime.\n+            let null = fx.bcx.ins().iconst(fx.pointer_type, 0);\n+            ret.write_cvalue(fx, CValue::by_val(null, ret.layout()));\n+        };\n+\n+        const_deallocate, (c _ptr, c _size, c _align) {\n+            // nop at runtime.\n+        };\n+\n         black_box, (c a) {\n             // FIXME implement black_box semantics\n             ret.write_cvalue(fx, a);"}]}