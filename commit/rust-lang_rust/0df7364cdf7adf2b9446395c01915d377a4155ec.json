{"sha": "0df7364cdf7adf2b9446395c01915d377a4155ec", "node_id": "C_kwDOAAsO6NoAKDBkZjczNjRjZGY3YWRmMmI5NDQ2Mzk1YzAxOTE1ZDM3N2E0MTU1ZWM", "commit": {"author": {"name": "leocth", "email": "leocth31@gmail.com", "date": "2022-06-25T16:06:50Z"}, "committer": {"name": "leocth", "email": "leocth31@gmail.com", "date": "2022-06-25T16:06:50Z"}, "message": "temporarily remove tests because I'm not sure if we need them", "tree": {"sha": "62d44d029b03b43984bbaf4809f88d018861f028", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62d44d029b03b43984bbaf4809f88d018861f028"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0df7364cdf7adf2b9446395c01915d377a4155ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0df7364cdf7adf2b9446395c01915d377a4155ec", "html_url": "https://github.com/rust-lang/rust/commit/0df7364cdf7adf2b9446395c01915d377a4155ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0df7364cdf7adf2b9446395c01915d377a4155ec/comments", "author": {"login": "pluiedev", "id": 22406910, "node_id": "MDQ6VXNlcjIyNDA2OTEw", "avatar_url": "https://avatars.githubusercontent.com/u/22406910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pluiedev", "html_url": "https://github.com/pluiedev", "followers_url": "https://api.github.com/users/pluiedev/followers", "following_url": "https://api.github.com/users/pluiedev/following{/other_user}", "gists_url": "https://api.github.com/users/pluiedev/gists{/gist_id}", "starred_url": "https://api.github.com/users/pluiedev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pluiedev/subscriptions", "organizations_url": "https://api.github.com/users/pluiedev/orgs", "repos_url": "https://api.github.com/users/pluiedev/repos", "events_url": "https://api.github.com/users/pluiedev/events{/privacy}", "received_events_url": "https://api.github.com/users/pluiedev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pluiedev", "id": 22406910, "node_id": "MDQ6VXNlcjIyNDA2OTEw", "avatar_url": "https://avatars.githubusercontent.com/u/22406910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pluiedev", "html_url": "https://github.com/pluiedev", "followers_url": "https://api.github.com/users/pluiedev/followers", "following_url": "https://api.github.com/users/pluiedev/following{/other_user}", "gists_url": "https://api.github.com/users/pluiedev/gists{/gist_id}", "starred_url": "https://api.github.com/users/pluiedev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pluiedev/subscriptions", "organizations_url": "https://api.github.com/users/pluiedev/orgs", "repos_url": "https://api.github.com/users/pluiedev/repos", "events_url": "https://api.github.com/users/pluiedev/events{/privacy}", "received_events_url": "https://api.github.com/users/pluiedev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d5f236c3d6c1f7e74bcb6c1cd4f87ea65f7295a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d5f236c3d6c1f7e74bcb6c1cd4f87ea65f7295a", "html_url": "https://github.com/rust-lang/rust/commit/7d5f236c3d6c1f7e74bcb6c1cd4f87ea65f7295a"}], "stats": {"total": 14, "additions": 0, "deletions": 14}, "files": [{"sha": "7f8672f035417bb2c0e8ae51a319bfc60c6d0a2f", "filename": "library/core/tests/atomic.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0df7364cdf7adf2b9446395c01915d377a4155ec/library%2Fcore%2Ftests%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0df7364cdf7adf2b9446395c01915d377a4155ec/library%2Fcore%2Ftests%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fatomic.rs?ref=0df7364cdf7adf2b9446395c01915d377a4155ec", "patch": "@@ -30,18 +30,6 @@ fn bool_nand() {\n     assert_eq!(a.fetch_nand(true, SeqCst), false);\n     assert_eq!(a.load(SeqCst), true);\n }\n-#[test]\n-fn bool_not() {\n-    let a = AtomicBool::new(false);\n-    assert_eq!(a.fetch_not(SeqCst), false);\n-    assert_eq!(a.load(SeqCst), true);\n-    assert_eq!(a.fetch_not(SeqCst), true);\n-    assert_eq!(a.load(SeqCst), false);\n-    assert_eq!(a.fetch_not(SeqCst), false);\n-    assert_eq!(a.load(SeqCst), true);\n-    assert_eq!(a.fetch_not(SeqCst), true);\n-    assert_eq!(a.load(SeqCst), false);\n-}\n \n #[test]\n fn uint_and() {\n@@ -170,8 +158,6 @@ fn atomic_access_bool() {\n         assert_eq!(*ATOMIC.get_mut(), true);\n         ATOMIC.fetch_xor(true, SeqCst);\n         assert_eq!(*ATOMIC.get_mut(), false);\n-        ATOMIC.fetch_not(SeqCst);\n-        assert_eq!(*ATOMIC.get_mut(), true);\n     }\n }\n "}]}