{"sha": "4f12de0660bb26eefac258b03ffb6c43d2debda7", "node_id": "C_kwDOAAsO6NoAKDRmMTJkZTA2NjBiYjI2ZWVmYWMyNThiMDNmZmI2YzQzZDJkZWJkYTc", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-06-23T18:17:42Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-10-01T16:45:52Z"}, "message": "Change feature name to is_some_and", "tree": {"sha": "066f0072b2ad94ede8a1f74fc5a3418f5038902c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/066f0072b2ad94ede8a1f74fc5a3418f5038902c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f12de0660bb26eefac258b03ffb6c43d2debda7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f12de0660bb26eefac258b03ffb6c43d2debda7", "html_url": "https://github.com/rust-lang/rust/commit/4f12de0660bb26eefac258b03ffb6c43d2debda7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f12de0660bb26eefac258b03ffb6c43d2debda7/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed", "html_url": "https://github.com/rust-lang/rust/commit/2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "c7ea7de8f4ead2f5d013192f79aea6010fa4898f", "filename": "compiler/rustc_builtin_macros/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f12de0660bb26eefac258b03ffb6c43d2debda7/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f12de0660bb26eefac258b03ffb6c43d2debda7/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs?ref=4f12de0660bb26eefac258b03ffb6c43d2debda7", "patch": "@@ -7,7 +7,7 @@\n #![feature(box_patterns)]\n #![feature(decl_macro)]\n #![feature(if_let_guard)]\n-#![feature(is_some_with)]\n+#![feature(is_some_and)]\n #![feature(is_sorted)]\n #![feature(let_chains)]\n #![feature(proc_macro_internals)]"}, {"sha": "ebdaf61e43905ea8629635083dc07022cb1951fc", "filename": "compiler/rustc_const_eval/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f12de0660bb26eefac258b03ffb6c43d2debda7/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f12de0660bb26eefac258b03ffb6c43d2debda7/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs?ref=4f12de0660bb26eefac258b03ffb6c43d2debda7", "patch": "@@ -20,7 +20,7 @@ Rust MIR: a lowered representation of Rust.\n #![feature(trusted_step)]\n #![feature(try_blocks)]\n #![feature(yeet_expr)]\n-#![feature(is_some_with)]\n+#![feature(is_some_and)]\n #![recursion_limit = \"256\"]\n #![allow(rustc::potential_query_instability)]\n "}, {"sha": "d31b9b7ae46b4babf25dec076cf243906fa17259", "filename": "compiler/rustc_hir_analysis/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f12de0660bb26eefac258b03ffb6c43d2debda7/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f12de0660bb26eefac258b03ffb6c43d2debda7/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs?ref=4f12de0660bb26eefac258b03ffb6c43d2debda7", "patch": "@@ -70,7 +70,7 @@ This API is completely unstable and subject to change.\n #![feature(once_cell)]\n #![feature(slice_partition_dedup)]\n #![feature(try_blocks)]\n-#![feature(is_some_with)]\n+#![feature(is_some_and)]\n #![feature(type_alias_impl_trait)]\n #![recursion_limit = \"256\"]\n "}, {"sha": "4b57371096e9ab670f3c99e35e8220a47600c972", "filename": "library/core/src/option.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f12de0660bb26eefac258b03ffb6c43d2debda7/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f12de0660bb26eefac258b03ffb6c43d2debda7/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=4f12de0660bb26eefac258b03ffb6c43d2debda7", "patch": "@@ -559,7 +559,7 @@ impl<T> Option<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(is_some_with)]\n+    /// #![feature(is_some_and)]\n     ///\n     /// let x: Option<u32> = Some(2);\n     /// assert_eq!(x.is_some_and(|x| x > 1), true);\n@@ -572,7 +572,7 @@ impl<T> Option<T> {\n     /// ```\n     #[must_use]\n     #[inline]\n-    #[unstable(feature = \"is_some_with\", issue = \"93050\")]\n+    #[unstable(feature = \"is_some_and\", issue = \"93050\")]\n     pub fn is_some_and(self, f: impl FnOnce(T) -> bool) -> bool {\n         match self {\n             None => false,"}, {"sha": "1c6d4cc5279d143fbf2a12baf16e23c7f85af6dc", "filename": "library/core/src/result.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4f12de0660bb26eefac258b03ffb6c43d2debda7/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f12de0660bb26eefac258b03ffb6c43d2debda7/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=4f12de0660bb26eefac258b03ffb6c43d2debda7", "patch": "@@ -548,7 +548,7 @@ impl<T, E> Result<T, E> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(is_some_with)]\n+    /// #![feature(is_some_and)]\n     ///\n     /// let x: Result<u32, &str> = Ok(2);\n     /// assert_eq!(x.is_ok_and(|x| x > 1), true);\n@@ -561,7 +561,7 @@ impl<T, E> Result<T, E> {\n     /// ```\n     #[must_use]\n     #[inline]\n-    #[unstable(feature = \"is_some_with\", issue = \"93050\")]\n+    #[unstable(feature = \"is_some_and\", issue = \"93050\")]\n     pub fn is_ok_and(self, f: impl FnOnce(T) -> bool) -> bool {\n         match self {\n             Err(_) => false,\n@@ -595,7 +595,7 @@ impl<T, E> Result<T, E> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(is_some_with)]\n+    /// #![feature(is_some_and)]\n     /// use std::io::{Error, ErrorKind};\n     ///\n     /// let x: Result<u32, Error> = Err(Error::new(ErrorKind::NotFound, \"!\"));\n@@ -609,7 +609,7 @@ impl<T, E> Result<T, E> {\n     /// ```\n     #[must_use]\n     #[inline]\n-    #[unstable(feature = \"is_some_with\", issue = \"93050\")]\n+    #[unstable(feature = \"is_some_and\", issue = \"93050\")]\n     pub fn is_err_and(self, f: impl FnOnce(E) -> bool) -> bool {\n         match self {\n             Ok(_) => false,"}, {"sha": "acc9f2ceee39bccda6be1bd86c2bc0d748dcfc6d", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f12de0660bb26eefac258b03ffb6c43d2debda7/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f12de0660bb26eefac258b03ffb6c43d2debda7/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=4f12de0660bb26eefac258b03ffb6c43d2debda7", "patch": "@@ -291,7 +291,7 @@\n #![feature(hasher_prefixfree_extras)]\n #![feature(hashmap_internals)]\n #![feature(int_error_internals)]\n-#![feature(is_some_with)]\n+#![feature(is_some_and)]\n #![feature(maybe_uninit_slice)]\n #![feature(maybe_uninit_write_slice)]\n #![feature(nonnull_slice_from_raw_parts)]"}, {"sha": "d07610b19d754176a3f0be6240e0475ad95b5355", "filename": "src/tools/miri/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f12de0660bb26eefac258b03ffb6c43d2debda7/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f12de0660bb26eefac258b03ffb6c43d2debda7/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs?ref=4f12de0660bb26eefac258b03ffb6c43d2debda7", "patch": "@@ -7,7 +7,7 @@\n #![feature(int_log)]\n #![feature(variant_count)]\n #![feature(yeet_expr)]\n-#![feature(is_some_with)]\n+#![feature(is_some_and)]\n #![feature(nonzero_ops)]\n #![feature(local_key_cell_methods)]\n #![cfg_attr(bootstrap, feature(let_else))]"}]}