{"sha": "30a8903821e35c7c7cee7f393917aecaadc92e93", "node_id": "C_kwDOAAsO6NoAKDMwYTg5MDM4MjFlMzVjN2M3Y2VlN2YzOTM5MTdhZWNhYWRjOTJlOTM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-06-10T20:32:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-10T20:32:31Z"}, "message": "Rollup merge of #97940 - GuillaumeGomez:relative-link, r=Dylan-DPC\n\nUse relative links instead of linking to doc.rust-lang.org when possible\n\nPart of https://github.com/rust-lang/rust/issues/97918.", "tree": {"sha": "50758c920985ed26e9cc6a2511742c7d31fb4ed4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50758c920985ed26e9cc6a2511742c7d31fb4ed4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30a8903821e35c7c7cee7f393917aecaadc92e93", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJio6pfCRBK7hj4Ov3rIwAAINIIAACNmvbmjoX6C15oDRmJ4ALN\nCKwvUmYqR3zN4/P3VrGgWp8YXiVP1SFwISjhm0tGU8A+6KfJ/drXgQX96maZMh6+\n1q6zA6NaB3PWj35/FjqLjCIcvCjyON+hVASdg4kl34k0A0GtiL0XA2rEtzqCpB3C\nDfukoPpubixnKLd2Ght0v6UyZicGubs3UI7ibKU8hRhedG4bKh2UiLI28maoEYqY\nOXqcwmGlkbON/HHFu/GZrUMbHA6Art+ggC3cAE24fGS9O/iOZzq3sSuq0qWtE9Ux\nWpZS6xsm4Xhfp2WPLuwtIaCft9lwEo9s5/WdwhSCu8Zvp12ZFllR6wIIuHKaZbs=\n=8HzO\n-----END PGP SIGNATURE-----\n", "payload": "tree 50758c920985ed26e9cc6a2511742c7d31fb4ed4\nparent 35ba4dc03163b30616a7232bb3344d84bd83769e\nparent 28ca3bdeb278cdf0d8b1a87777183689da6f9509\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1654893151 +0200\ncommitter GitHub <noreply@github.com> 1654893151 +0200\n\nRollup merge of #97940 - GuillaumeGomez:relative-link, r=Dylan-DPC\n\nUse relative links instead of linking to doc.rust-lang.org when possible\n\nPart of https://github.com/rust-lang/rust/issues/97918.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30a8903821e35c7c7cee7f393917aecaadc92e93", "html_url": "https://github.com/rust-lang/rust/commit/30a8903821e35c7c7cee7f393917aecaadc92e93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30a8903821e35c7c7cee7f393917aecaadc92e93/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35ba4dc03163b30616a7232bb3344d84bd83769e", "url": "https://api.github.com/repos/rust-lang/rust/commits/35ba4dc03163b30616a7232bb3344d84bd83769e", "html_url": "https://github.com/rust-lang/rust/commit/35ba4dc03163b30616a7232bb3344d84bd83769e"}, {"sha": "28ca3bdeb278cdf0d8b1a87777183689da6f9509", "url": "https://api.github.com/repos/rust-lang/rust/commits/28ca3bdeb278cdf0d8b1a87777183689da6f9509", "html_url": "https://github.com/rust-lang/rust/commit/28ca3bdeb278cdf0d8b1a87777183689da6f9509"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "81bf1dfdf451089e41985e9b578cfc8d87e0f868", "filename": "library/core/src/hash/sip.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30a8903821e35c7c7cee7f393917aecaadc92e93/library%2Fcore%2Fsrc%2Fhash%2Fsip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30a8903821e35c7c7cee7f393917aecaadc92e93/library%2Fcore%2Fsrc%2Fhash%2Fsip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fhash%2Fsip.rs?ref=30a8903821e35c7c7cee7f393917aecaadc92e93", "patch": "@@ -38,7 +38,7 @@ struct SipHasher24 {\n /// SipHash is a general-purpose hashing function: it runs at a good\n /// speed (competitive with Spooky and City) and permits strong _keyed_\n /// hashing. This lets you key your hash tables from a strong RNG, such as\n-/// [`rand::os::OsRng`](https://doc.rust-lang.org/rand/rand/os/struct.OsRng.html).\n+/// [`rand::os::OsRng`](https://docs.rs/rand/latest/rand/rngs/struct.OsRng.html).\n ///\n /// Although the SipHash algorithm is considered to be generally strong,\n /// it is not intended for cryptographic purposes. As such, all"}, {"sha": "b4ea536083392b3ffd39615732f5d00a855a323c", "filename": "library/core/src/mem/maybe_uninit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30a8903821e35c7c7cee7f393917aecaadc92e93/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30a8903821e35c7c7cee7f393917aecaadc92e93/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs?ref=30a8903821e35c7c7cee7f393917aecaadc92e93", "patch": "@@ -865,7 +865,7 @@ impl<T> MaybeUninit<T> {\n     ///\n     /// For instance, you cannot [`Read`] into an uninitialized buffer:\n     ///\n-    /// [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html\n+    /// [`Read`]: ../../std/io/trait.Read.html\n     ///\n     /// ```rust,no_run\n     /// use std::{io, mem::MaybeUninit};"}]}