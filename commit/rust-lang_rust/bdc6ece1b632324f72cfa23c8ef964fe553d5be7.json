{"sha": "bdc6ece1b632324f72cfa23c8ef964fe553d5be7", "node_id": "C_kwDOAAsO6NoAKGJkYzZlY2UxYjYzMjMyNGY3MmNmYTIzYzhlZjk2NGZlNTUzZDViZTc", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-06-25T12:16:31Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-06-25T12:16:31Z"}, "message": "Fix `#[expect]` for `clippy::needless_return`", "tree": {"sha": "a6342d6fa8840bc688016a45887f2964f122cf4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6342d6fa8840bc688016a45887f2964f122cf4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdc6ece1b632324f72cfa23c8ef964fe553d5be7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEwgBEOx3xlHwII7PG9cWdDmaeUwIFAmK2/J8ACgkQ9cWdDmae\nUwL66w/+JVxCWfGInKURyHALHDUt94fKKDXQ3Mnt7jg+TZdpNP0tZ0Xdc7IDUsFS\nrYhhNB2HbcXvGZgbMDLt1gjxdlnT4f7C4c5CN8H4P9ZXuKeV7LRbYg+s3keWJf2x\nwd4DIaZnbmvOUSiv2vcOlpDIDaEERmt710s4KZR5jYYHlCVMV8dIg9LAyQMTLb3B\nT46eJZ7qW/6/UOe+0XnflOxfGobXZUQELT/Z+pVm57m7fGXIUFatuL0Ii+ZKfG1w\nSZeMF92otXBITeh0wVUHO9FGBHAUKIKW1cE9YRQV0dw5iAc4NKIO/S0pQJ8IMtgZ\nfUm60+pEdDVDj74+cCdEwjbzJhCrtqL2keBhlt0ZyLxpnAyOXPxZq4pXKqpYFwSZ\nAPzBQke3vkVomgQTBdW6W6g0Rxfm1X9cU5liimuuT/p6dNNKC8NbKYh8t9dHvSnE\n+w4GSx5p79zaSvX4IeOiIdWxsPVwc5wCSdfWtoYzTTVRx4Nlwi+ui6yVpDPr2IK6\njGP5JjCl1ao7r4YIsFqTE8fnBN1TpJ+9f7tUbm3fnRGhc0H8kGm/qV+cIHpQ7H/M\nDSRJa/J0FnsSuY2Wy7N8w64ka6qcKlsh9NlG8ZmqO7hfvTFy1J2QBISJKNqYv2H/\nupZakJVHPf1xuuz8nXG6eKIIFk0cBq/egM4nrqv+xwnZTWBWuk8=\n=KeIP\n-----END PGP SIGNATURE-----", "payload": "tree a6342d6fa8840bc688016a45887f2964f122cf4f\nparent 54ad99b6e5b46372ab4c14f700d2c74c2f246a7c\nauthor xFrednet <xFrednet@gmail.com> 1656159391 +0200\ncommitter xFrednet <xFrednet@gmail.com> 1656159391 +0200\n\nFix `#[expect]` for `clippy::needless_return`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdc6ece1b632324f72cfa23c8ef964fe553d5be7", "html_url": "https://github.com/rust-lang/rust/commit/bdc6ece1b632324f72cfa23c8ef964fe553d5be7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdc6ece1b632324f72cfa23c8ef964fe553d5be7/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54ad99b6e5b46372ab4c14f700d2c74c2f246a7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/54ad99b6e5b46372ab4c14f700d2c74c2f246a7c", "html_url": "https://github.com/rust-lang/rust/commit/54ad99b6e5b46372ab4c14f700d2c74c2f246a7c"}], "stats": {"total": 165, "additions": 109, "deletions": 56}, "files": [{"sha": "5ae04947b82d0bd789d4cea2c2ee78de34bf910a", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 52, "deletions": 19, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/bdc6ece1b632324f72cfa23c8ef964fe553d5be7/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdc6ece1b632324f72cfa23c8ef964fe553d5be7/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=bdc6ece1b632324f72cfa23c8ef964fe553d5be7", "patch": "@@ -1,4 +1,4 @@\n-use clippy_utils::diagnostics::{span_lint_and_sugg, span_lint_and_then};\n+use clippy_utils::diagnostics::span_lint_hir_and_then;\n use clippy_utils::source::{snippet_opt, snippet_with_context};\n use clippy_utils::{fn_def_id, path_to_local_id};\n use if_chain::if_chain;\n@@ -94,9 +94,10 @@ impl<'tcx> LateLintPass<'tcx> for Return {\n             if !in_external_macro(cx.sess(), retexpr.span);\n             if !local.span.from_expansion();\n             then {\n-                span_lint_and_then(\n+                span_lint_hir_and_then(\n                     cx,\n                     LET_AND_RETURN,\n+                    retexpr.hir_id,\n                     retexpr.span,\n                     \"returning the result of a `let` binding from a block\",\n                     |err| {\n@@ -185,6 +186,7 @@ fn check_final_expr<'tcx>(\n                 if !borrows {\n                     emit_return_lint(\n                         cx,\n+                        inner.map_or(expr.hir_id, |inner| inner.hir_id),\n                         span.expect(\"`else return` is not possible\"),\n                         inner.as_ref().map(|i| i.span),\n                         replacement,\n@@ -220,50 +222,81 @@ fn check_final_expr<'tcx>(\n     }\n }\n \n-fn emit_return_lint(cx: &LateContext<'_>, ret_span: Span, inner_span: Option<Span>, replacement: RetReplacement) {\n+fn emit_return_lint(\n+    cx: &LateContext<'_>,\n+    emission_place: HirId,\n+    ret_span: Span,\n+    inner_span: Option<Span>,\n+    replacement: RetReplacement,\n+) {\n     if ret_span.from_expansion() {\n         return;\n     }\n     match inner_span {\n         Some(inner_span) => {\n             let mut applicability = Applicability::MachineApplicable;\n-            span_lint_and_then(cx, NEEDLESS_RETURN, ret_span, \"unneeded `return` statement\", |diag| {\n-                let (snippet, _) = snippet_with_context(cx, inner_span, ret_span.ctxt(), \"..\", &mut applicability);\n-                diag.span_suggestion(ret_span, \"remove `return`\", snippet, applicability);\n-            });\n+            span_lint_hir_and_then(\n+                cx,\n+                NEEDLESS_RETURN,\n+                emission_place,\n+                ret_span,\n+                \"unneeded `return` statement\",\n+                |diag| {\n+                    let (snippet, _) = snippet_with_context(cx, inner_span, ret_span.ctxt(), \"..\", &mut applicability);\n+                    diag.span_suggestion(ret_span, \"remove `return`\", snippet, applicability);\n+                },\n+            );\n         },\n         None => match replacement {\n             RetReplacement::Empty => {\n-                span_lint_and_sugg(\n+                span_lint_hir_and_then(\n                     cx,\n                     NEEDLESS_RETURN,\n+                    emission_place,\n                     ret_span,\n                     \"unneeded `return` statement\",\n-                    \"remove `return`\",\n-                    String::new(),\n-                    Applicability::MachineApplicable,\n+                    |diag| {\n+                        diag.span_suggestion(\n+                            ret_span,\n+                            \"remove `return`\",\n+                            String::new(),\n+                            Applicability::MachineApplicable,\n+                        );\n+                    },\n                 );\n             },\n             RetReplacement::Block => {\n-                span_lint_and_sugg(\n+                span_lint_hir_and_then(\n                     cx,\n                     NEEDLESS_RETURN,\n+                    emission_place,\n                     ret_span,\n                     \"unneeded `return` statement\",\n-                    \"replace `return` with an empty block\",\n-                    \"{}\".to_string(),\n-                    Applicability::MachineApplicable,\n+                    |diag| {\n+                        diag.span_suggestion(\n+                            ret_span,\n+                            \"replace `return` with an empty block\",\n+                            \"{}\".to_string(),\n+                            Applicability::MachineApplicable,\n+                        );\n+                    },\n                 );\n             },\n             RetReplacement::Unit => {\n-                span_lint_and_sugg(\n+                span_lint_hir_and_then(\n                     cx,\n                     NEEDLESS_RETURN,\n+                    emission_place,\n                     ret_span,\n                     \"unneeded `return` statement\",\n-                    \"replace `return` with a unit value\",\n-                    \"()\".to_string(),\n-                    Applicability::MachineApplicable,\n+                    |diag| {\n+                        diag.span_suggestion(\n+                            ret_span,\n+                            \"replace `return` with a unit value\",\n+                            \"()\".to_string(),\n+                            Applicability::MachineApplicable,\n+                        );\n+                    },\n                 );\n             },\n         },"}, {"sha": "0bc0d0011efe00cd009475cb7972c3162cde1c62", "filename": "tests/ui/needless_return.fixed", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bdc6ece1b632324f72cfa23c8ef964fe553d5be7/tests%2Fui%2Fneedless_return.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/bdc6ece1b632324f72cfa23c8ef964fe553d5be7/tests%2Fui%2Fneedless_return.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.fixed?ref=bdc6ece1b632324f72cfa23c8ef964fe553d5be7", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n \n+#![feature(lint_reasons)]\n #![feature(let_else)]\n #![allow(unused)]\n #![allow(\n@@ -227,4 +228,13 @@ fn needless_return_macro() -> String {\n     format!(\"Hello {}\", \"world!\")\n }\n \n+fn check_expect() -> bool {\n+    if true {\n+        // no error!\n+        return true;\n+    }\n+    #[expect(clippy::needless_return)]\n+    return true;\n+}\n+\n fn main() {}"}, {"sha": "eb9f72e8e7822fe8839060d77bc9ca237d1f5057", "filename": "tests/ui/needless_return.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bdc6ece1b632324f72cfa23c8ef964fe553d5be7/tests%2Fui%2Fneedless_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdc6ece1b632324f72cfa23c8ef964fe553d5be7/tests%2Fui%2Fneedless_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.rs?ref=bdc6ece1b632324f72cfa23c8ef964fe553d5be7", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n \n+#![feature(lint_reasons)]\n #![feature(let_else)]\n #![allow(unused)]\n #![allow(\n@@ -227,4 +228,13 @@ fn needless_return_macro() -> String {\n     return format!(\"Hello {}\", \"world!\");\n }\n \n+fn check_expect() -> bool {\n+    if true {\n+        // no error!\n+        return true;\n+    }\n+    #[expect(clippy::needless_return)]\n+    return true;\n+}\n+\n fn main() {}"}, {"sha": "83ff07638693c7ef5a6d861c84b58bf3486c0d2e", "filename": "tests/ui/needless_return.stderr", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/bdc6ece1b632324f72cfa23c8ef964fe553d5be7/tests%2Fui%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bdc6ece1b632324f72cfa23c8ef964fe553d5be7/tests%2Fui%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.stderr?ref=bdc6ece1b632324f72cfa23c8ef964fe553d5be7", "patch": "@@ -1,223 +1,223 @@\n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:26:5\n+  --> $DIR/needless_return.rs:27:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^^ help: remove `return`: `true`\n    |\n    = note: `-D clippy::needless-return` implied by `-D warnings`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:30:5\n+  --> $DIR/needless_return.rs:31:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:35:9\n+  --> $DIR/needless_return.rs:36:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:37:9\n+  --> $DIR/needless_return.rs:38:9\n    |\n LL |         return false;\n    |         ^^^^^^^^^^^^^ help: remove `return`: `false`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:43:17\n+  --> $DIR/needless_return.rs:44:17\n    |\n LL |         true => return false,\n    |                 ^^^^^^^^^^^^ help: remove `return`: `false`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:45:13\n+  --> $DIR/needless_return.rs:46:13\n    |\n LL |             return true;\n    |             ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:52:9\n+  --> $DIR/needless_return.rs:53:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:54:16\n+  --> $DIR/needless_return.rs:55:16\n    |\n LL |     let _ = || return true;\n    |                ^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:58:5\n+  --> $DIR/needless_return.rs:59:5\n    |\n LL |     return the_answer!();\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `the_answer!()`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:62:5\n+  --> $DIR/needless_return.rs:63:5\n    |\n LL |     return;\n    |     ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:67:9\n+  --> $DIR/needless_return.rs:68:9\n    |\n LL |         return;\n    |         ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:69:9\n+  --> $DIR/needless_return.rs:70:9\n    |\n LL |         return;\n    |         ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:76:14\n+  --> $DIR/needless_return.rs:77:14\n    |\n LL |         _ => return,\n    |              ^^^^^^ help: replace `return` with a unit value: `()`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:85:13\n+  --> $DIR/needless_return.rs:86:13\n    |\n LL |             return;\n    |             ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:87:14\n+  --> $DIR/needless_return.rs:88:14\n    |\n LL |         _ => return,\n    |              ^^^^^^ help: replace `return` with a unit value: `()`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:100:9\n+  --> $DIR/needless_return.rs:101:9\n    |\n LL |         return String::from(\"test\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `String::from(\"test\")`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:102:9\n+  --> $DIR/needless_return.rs:103:9\n    |\n LL |         return String::new();\n    |         ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `String::new()`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:124:32\n+  --> $DIR/needless_return.rs:125:32\n    |\n LL |         bar.unwrap_or_else(|_| return)\n    |                                ^^^^^^ help: replace `return` with an empty block: `{}`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:129:13\n+  --> $DIR/needless_return.rs:130:13\n    |\n LL |             return;\n    |             ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:131:20\n+  --> $DIR/needless_return.rs:132:20\n    |\n LL |         let _ = || return;\n    |                    ^^^^^^ help: replace `return` with an empty block: `{}`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:137:32\n+  --> $DIR/needless_return.rs:138:32\n    |\n LL |         res.unwrap_or_else(|_| return Foo)\n    |                                ^^^^^^^^^^ help: remove `return`: `Foo`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:146:5\n+  --> $DIR/needless_return.rs:147:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:150:5\n+  --> $DIR/needless_return.rs:151:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:155:9\n+  --> $DIR/needless_return.rs:156:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:157:9\n+  --> $DIR/needless_return.rs:158:9\n    |\n LL |         return false;\n    |         ^^^^^^^^^^^^^ help: remove `return`: `false`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:163:17\n+  --> $DIR/needless_return.rs:164:17\n    |\n LL |         true => return false,\n    |                 ^^^^^^^^^^^^ help: remove `return`: `false`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:165:13\n+  --> $DIR/needless_return.rs:166:13\n    |\n LL |             return true;\n    |             ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:172:9\n+  --> $DIR/needless_return.rs:173:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:174:16\n+  --> $DIR/needless_return.rs:175:16\n    |\n LL |     let _ = || return true;\n    |                ^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:178:5\n+  --> $DIR/needless_return.rs:179:5\n    |\n LL |     return the_answer!();\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `the_answer!()`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:182:5\n+  --> $DIR/needless_return.rs:183:5\n    |\n LL |     return;\n    |     ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:187:9\n+  --> $DIR/needless_return.rs:188:9\n    |\n LL |         return;\n    |         ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:189:9\n+  --> $DIR/needless_return.rs:190:9\n    |\n LL |         return;\n    |         ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:196:14\n+  --> $DIR/needless_return.rs:197:14\n    |\n LL |         _ => return,\n    |              ^^^^^^ help: replace `return` with a unit value: `()`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:209:9\n+  --> $DIR/needless_return.rs:210:9\n    |\n LL |         return String::from(\"test\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `String::from(\"test\")`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:211:9\n+  --> $DIR/needless_return.rs:212:9\n    |\n LL |         return String::new();\n    |         ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `String::new()`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:227:5\n+  --> $DIR/needless_return.rs:228:5\n    |\n LL |     return format!(\"Hello {}\", \"world!\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `format!(\"Hello {}\", \"world!\")`"}]}