{"sha": "b9790a23bf4a424ad3ed71b95f36c2d639454381", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5NzkwYTIzYmY0YTQyNGFkM2VkNzFiOTVmMzZjMmQ2Mzk0NTQzODE=", "commit": {"author": {"name": "Wesley Norris", "email": "repnop@outlook.com", "date": "2020-10-26T21:38:23Z"}, "committer": {"name": "Wesley Norris", "email": "repnop@outlook.com", "date": "2020-10-26T21:38:23Z"}, "message": "Don't suggest extracting out 1-tuple enum variants\n\nFixes #6241.", "tree": {"sha": "9550cd534a2daa3dba2c249536763babbc9bc860", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9550cd534a2daa3dba2c249536763babbc9bc860"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9790a23bf4a424ad3ed71b95f36c2d639454381", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9790a23bf4a424ad3ed71b95f36c2d639454381", "html_url": "https://github.com/rust-lang/rust/commit/b9790a23bf4a424ad3ed71b95f36c2d639454381", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9790a23bf4a424ad3ed71b95f36c2d639454381/comments", "author": {"login": "repnop", "id": 24203105, "node_id": "MDQ6VXNlcjI0MjAzMTA1", "avatar_url": "https://avatars.githubusercontent.com/u/24203105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/repnop", "html_url": "https://github.com/repnop", "followers_url": "https://api.github.com/users/repnop/followers", "following_url": "https://api.github.com/users/repnop/following{/other_user}", "gists_url": "https://api.github.com/users/repnop/gists{/gist_id}", "starred_url": "https://api.github.com/users/repnop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/repnop/subscriptions", "organizations_url": "https://api.github.com/users/repnop/orgs", "repos_url": "https://api.github.com/users/repnop/repos", "events_url": "https://api.github.com/users/repnop/events{/privacy}", "received_events_url": "https://api.github.com/users/repnop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "repnop", "id": 24203105, "node_id": "MDQ6VXNlcjI0MjAzMTA1", "avatar_url": "https://avatars.githubusercontent.com/u/24203105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/repnop", "html_url": "https://github.com/repnop", "followers_url": "https://api.github.com/users/repnop/followers", "following_url": "https://api.github.com/users/repnop/following{/other_user}", "gists_url": "https://api.github.com/users/repnop/gists{/gist_id}", "starred_url": "https://api.github.com/users/repnop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/repnop/subscriptions", "organizations_url": "https://api.github.com/users/repnop/orgs", "repos_url": "https://api.github.com/users/repnop/repos", "events_url": "https://api.github.com/users/repnop/events{/privacy}", "received_events_url": "https://api.github.com/users/repnop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0412da4a2c06e50030d13e37002d0440fc7cded", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0412da4a2c06e50030d13e37002d0440fc7cded", "html_url": "https://github.com/rust-lang/rust/commit/f0412da4a2c06e50030d13e37002d0440fc7cded"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "756aa03a245deae036ebc83341259f823c5bd554", "filename": "crates/assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b9790a23bf4a424ad3ed71b95f36c2d639454381/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9790a23bf4a424ad3ed71b95f36c2d639454381/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=b9790a23bf4a424ad3ed71b95f36c2d639454381", "patch": "@@ -37,6 +37,12 @@ pub(crate) fn extract_struct_from_enum_variant(\n         ast::StructKind::Tuple(field_list) => field_list,\n         _ => return None,\n     };\n+\n+    // skip 1-tuple variants\n+    if field_list.fields().count() == 1 {\n+        return None;\n+    }\n+\n     let variant_name = variant.name()?.to_string();\n     let variant_hir = ctx.sema.to_def(&variant)?;\n     if existing_struct_def(ctx.db(), &variant_name, &variant_hir) {\n@@ -228,17 +234,6 @@ mod tests {\n             \"enum A { <|>One(u32, u32) }\",\n             r#\"struct One(pub u32, pub u32);\n \n-enum A { One(One) }\"#,\n-        );\n-    }\n-\n-    #[test]\n-    fn test_extract_struct_one_field() {\n-        check_assist(\n-            extract_struct_from_enum_variant,\n-            \"enum A { <|>One(u32) }\",\n-            r#\"struct One(pub u32);\n-\n enum A { One(One) }\"#,\n         );\n     }\n@@ -324,4 +319,9 @@ fn another_fn() {\n         enum A { <|>One(u8) }\"#,\n         );\n     }\n+\n+    #[test]\n+    fn test_extract_not_applicable_one_field() {\n+        check_not_applicable(r\"enum A { <|>One(u32) }\");\n+    }\n }"}]}