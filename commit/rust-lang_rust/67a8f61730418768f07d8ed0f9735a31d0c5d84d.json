{"sha": "67a8f61730418768f07d8ed0f9735a31d0c5d84d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3YThmNjE3MzA0MTg3NjhmMDdkOGVkMGY5NzM1YTMxZDBjNWQ4NGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-11T15:34:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-11T15:34:24Z"}, "message": "Auto merge of #24269 - benashford:formatting-fix, r=alexcrichton\n\nThis fixes the bug described in issue #23150.  This affected formatting any floating point number into a string in a formatting pattern that: a) required rounding up, and b) required an extra digit on the front.\r\n\r\nSo `format!(\"{:.0}\", 9.9)` would fail, but `format!(\"{:.0}\", 8.9)` would succeed.  This was due to a negative integer being cast to a `usize` resulting in an 'arithmetic operation overflowed' panic.\r\n\r\nThe fix was to change the order of operations so that the number is zero before casting.", "tree": {"sha": "766fd249b394c2a1befc63b6da02e0e306ad9b23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/766fd249b394c2a1befc63b6da02e0e306ad9b23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67a8f61730418768f07d8ed0f9735a31d0c5d84d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67a8f61730418768f07d8ed0f9735a31d0c5d84d", "html_url": "https://github.com/rust-lang/rust/commit/67a8f61730418768f07d8ed0f9735a31d0c5d84d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67a8f61730418768f07d8ed0f9735a31d0c5d84d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acb3e5136c3ca0a0d27150136fa7ffecbee75b92", "url": "https://api.github.com/repos/rust-lang/rust/commits/acb3e5136c3ca0a0d27150136fa7ffecbee75b92", "html_url": "https://github.com/rust-lang/rust/commit/acb3e5136c3ca0a0d27150136fa7ffecbee75b92"}, {"sha": "faef52a847acc0dfe1e15117fe3201731209a95d", "url": "https://api.github.com/repos/rust-lang/rust/commits/faef52a847acc0dfe1e15117fe3201731209a95d", "html_url": "https://github.com/rust-lang/rust/commit/faef52a847acc0dfe1e15117fe3201731209a95d"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "5f19bc5be98cc95a838e0c7cdd9f42006f696164", "filename": "src/libcore/fmt/float.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/67a8f61730418768f07d8ed0f9735a31d0c5d84d/src%2Flibcore%2Ffmt%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67a8f61730418768f07d8ed0f9735a31d0c5d84d/src%2Flibcore%2Ffmt%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Ffloat.rs?ref=67a8f61730418768f07d8ed0f9735a31d0c5d84d", "patch": "@@ -242,7 +242,7 @@ pub fn float_to_str_bytes_common<T: Float, U, F>(\n                     if i < 0\n                     || buf[i as usize] == b'-'\n                     || buf[i as usize] == b'+' {\n-                        for j in (i as usize + 1..end).rev() {\n+                        for j in ((i + 1) as usize..end).rev() {\n                             buf[j + 1] = buf[j];\n                         }\n                         buf[(i + 1) as usize] = value2ascii(1);"}, {"sha": "6b14fa8be8eef5d553d54cf6cdd2755ef405ce95", "filename": "src/libcoretest/fmt/float.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/67a8f61730418768f07d8ed0f9735a31d0c5d84d/src%2Flibcoretest%2Ffmt%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67a8f61730418768f07d8ed0f9735a31d0c5d84d/src%2Flibcoretest%2Ffmt%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Ffmt%2Ffloat.rs?ref=67a8f61730418768f07d8ed0f9735a31d0c5d84d", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[test]\n+fn test_format_float() {\n+    assert!(\"1\" == format!(\"{:.0}\", 1.0f64));\n+    assert!(\"9\" == format!(\"{:.0}\", 9.4f64));\n+    assert!(\"10\" == format!(\"{:.0}\", 9.9f64));\n+    assert!(\"9.9\" == format!(\"{:.1}\", 9.85f64));\n+}"}]}