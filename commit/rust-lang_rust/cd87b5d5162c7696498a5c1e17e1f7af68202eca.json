{"sha": "cd87b5d5162c7696498a5c1e17e1f7af68202eca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkODdiNWQ1MTYyYzc2OTY0OThhNWMxZTE3ZTFmN2FmNjgyMDJlY2E=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-02T13:40:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-02T13:40:35Z"}, "message": "Auto merge of #43605 - RalfJung:mapdoc, r=michaelwoerister\n\nImprove hir::map::Map::get_parent_node doc\n\nThe documentation says\n```\n    /// Similar to get_parent, returns the parent node id or id if there is no\n    /// parent.\n    /// This function returns the immediate parent in the AST, whereas get_parent\n    /// returns the enclosing item.\n```\nOne would think that one can walk up the tree by repeatedly calling `get_parent_node` until it returns the argument, and then work on the `NodeId`s that arise. However, that is not true: `get_parent_node` will return id 0 (the crate itself) for items that sit directly in the crate; calling `get` on that `NodeId` will panic.\n\nSo, the fact that `get_parent_node` returns the root when passed the root is actually not really useful, because the root itself is already a somewhat degenerate node. This improves the doc so hopefully people writing code that \"walks up the tree\" don't run into this issue like I did...", "tree": {"sha": "f7a93522c3616f676d093d6e1ad50627db1de832", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7a93522c3616f676d093d6e1ad50627db1de832"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd87b5d5162c7696498a5c1e17e1f7af68202eca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd87b5d5162c7696498a5c1e17e1f7af68202eca", "html_url": "https://github.com/rust-lang/rust/commit/cd87b5d5162c7696498a5c1e17e1f7af68202eca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd87b5d5162c7696498a5c1e17e1f7af68202eca/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22f256f69e61a0f2ceb7eb842589597f6fe4ce37", "url": "https://api.github.com/repos/rust-lang/rust/commits/22f256f69e61a0f2ceb7eb842589597f6fe4ce37", "html_url": "https://github.com/rust-lang/rust/commit/22f256f69e61a0f2ceb7eb842589597f6fe4ce37"}, {"sha": "e92ddbf5f7b9b1c6d61f3b6138035dfd5eee2c68", "url": "https://api.github.com/repos/rust-lang/rust/commits/e92ddbf5f7b9b1c6d61f3b6138035dfd5eee2c68", "html_url": "https://github.com/rust-lang/rust/commit/e92ddbf5f7b9b1c6d61f3b6138035dfd5eee2c68"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "45b1d6c184101bc2511be389378070dacd0cf715", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cd87b5d5162c7696498a5c1e17e1f7af68202eca/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd87b5d5162c7696498a5c1e17e1f7af68202eca/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=cd87b5d5162c7696498a5c1e17e1f7af68202eca", "patch": "@@ -553,7 +553,9 @@ impl<'hir> Map<'hir> {\n     }\n \n     /// Similar to get_parent, returns the parent node id or id if there is no\n-    /// parent.\n+    /// parent. Note that the parent may be CRATE_NODE_ID, which is not itself\n+    /// present in the map -- so passing the return value of get_parent_node to\n+    /// get may actually panic.\n     /// This function returns the immediate parent in the AST, whereas get_parent\n     /// returns the enclosing item. Note that this might not be the actual parent\n     /// node in the AST - some kinds of nodes are not in the map and these will\n@@ -629,7 +631,7 @@ impl<'hir> Map<'hir> {\n     }\n \n     /// Retrieve the NodeId for `id`'s enclosing method, unless there's a\n-    /// `while` or `loop` before reacing it, as block tail returns are not\n+    /// `while` or `loop` before reaching it, as block tail returns are not\n     /// available in them.\n     ///\n     /// ```"}]}