{"sha": "10cf626d0ea7be3eb971691772b5eb30013d4f02", "node_id": "C_kwDOAAsO6NoAKDEwY2Y2MjZkMGVhN2JlM2ViOTcxNjkxNzcyYjVlYjMwMDEzZDRmMDI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-12-29T08:19:57Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-02-12T00:26:17Z"}, "message": "Bless nll tests.", "tree": {"sha": "467a503f0fff9afabdc84dcf5f6067452cff67d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/467a503f0fff9afabdc84dcf5f6067452cff67d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10cf626d0ea7be3eb971691772b5eb30013d4f02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10cf626d0ea7be3eb971691772b5eb30013d4f02", "html_url": "https://github.com/rust-lang/rust/commit/10cf626d0ea7be3eb971691772b5eb30013d4f02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10cf626d0ea7be3eb971691772b5eb30013d4f02/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6a3f5d6062f55779e52de24a6465cf87ffbdd19", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6a3f5d6062f55779e52de24a6465cf87ffbdd19", "html_url": "https://github.com/rust-lang/rust/commit/c6a3f5d6062f55779e52de24a6465cf87ffbdd19"}], "stats": {"total": 64, "additions": 37, "deletions": 27}, "files": [{"sha": "0f0d3eaa2938b03917bc6d30f03d77995c3d4e6b", "filename": "compiler/rustc_borrowck/src/region_infer/mod.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/10cf626d0ea7be3eb971691772b5eb30013d4f02/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10cf626d0ea7be3eb971691772b5eb30013d4f02/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fmod.rs?ref=10cf626d0ea7be3eb971691772b5eb30013d4f02", "patch": "@@ -2156,6 +2156,24 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n                 }\n             }\n \n+            // When in async fn, prefer errors that come from inside the closure.\n+            if !categorized_path[i].from_closure {\n+                let span = categorized_path.iter().find_map(|p| {\n+                    if p.from_closure\n+                        && p.category == categorized_path[i].category\n+                        && categorized_path[i].cause.span.contains(p.cause.span)\n+                    {\n+                        Some(p.cause.span)\n+                    } else {\n+                        None\n+                    }\n+                });\n+\n+                if let Some(span) = span {\n+                    categorized_path[i].cause.span = span;\n+                }\n+            }\n+\n             return categorized_path[i].clone();\n         }\n "}, {"sha": "b0ea6af0050041970c92f1bd0ffdae6a36b9b5bb", "filename": "src/test/ui/async-await/multiple-lifetimes/ret-impl-trait-one.nll.stderr", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/10cf626d0ea7be3eb971691772b5eb30013d4f02/src%2Ftest%2Fui%2Fasync-await%2Fmultiple-lifetimes%2Fret-impl-trait-one.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/10cf626d0ea7be3eb971691772b5eb30013d4f02/src%2Ftest%2Fui%2Fasync-await%2Fmultiple-lifetimes%2Fret-impl-trait-one.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fmultiple-lifetimes%2Fret-impl-trait-one.nll.stderr?ref=10cf626d0ea7be3eb971691772b5eb30013d4f02", "patch": "@@ -1,15 +1,13 @@\n error: lifetime may not live long enough\n-  --> $DIR/ret-impl-trait-one.rs:10:85\n+  --> $DIR/ret-impl-trait-one.rs:12:5\n    |\n-LL |   async fn async_ret_impl_trait3<'a, 'b>(a: &'a u8, b: &'b u8) -> impl Trait<'a> + 'b {\n-   |  ________________________________--__--_______________________________________________^\n-   | |                                |   |\n-   | |                                |   lifetime `'b` defined here\n-   | |                                lifetime `'a` defined here\n-LL | |\n-LL | |     (a, b)\n-LL | | }\n-   | |_^ function was supposed to return data with lifetime `'b` but it is returning data with lifetime `'a`\n+LL | async fn async_ret_impl_trait3<'a, 'b>(a: &'a u8, b: &'b u8) -> impl Trait<'a> + 'b {\n+   |                                --  -- lifetime `'b` defined here\n+   |                                |\n+   |                                lifetime `'a` defined here\n+LL |\n+LL |     (a, b)\n+   |     ^^^^^^ function was supposed to return data with lifetime `'b` but it is returning data with lifetime `'a`\n    |\n    = help: consider adding the following bound: `'a: 'b`\n "}, {"sha": "d5b747d42fb1861b8bfd7eb284bc5f997a145d37", "filename": "src/test/ui/dropck/drop-with-active-borrows-2.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/10cf626d0ea7be3eb971691772b5eb30013d4f02/src%2Ftest%2Fui%2Fdropck%2Fdrop-with-active-borrows-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/10cf626d0ea7be3eb971691772b5eb30013d4f02/src%2Ftest%2Fui%2Fdropck%2Fdrop-with-active-borrows-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Fdrop-with-active-borrows-2.stderr?ref=10cf626d0ea7be3eb971691772b5eb30013d4f02", "patch": "@@ -1,10 +1,9 @@\n error[E0515]: cannot return value referencing local variable `raw_lines`\n-  --> $DIR/drop-with-active-borrows-2.rs:3:5\n+  --> $DIR/drop-with-active-borrows-2.rs:3:30\n    |\n LL |     raw_lines.iter().map(|l| l.trim()).collect()\n-   |     ----------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ----------------         ^^^^^^^^ returns a value referencing data owned by the current function\n    |     |\n-   |     returns a value referencing data owned by the current function\n    |     `raw_lines` is borrowed here\n \n error: aborting due to previous error"}, {"sha": "32abe2b854312311b6c221c315c63a40aee5ccd6", "filename": "src/test/ui/issues/issue-13497-2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/10cf626d0ea7be3eb971691772b5eb30013d4f02/src%2Ftest%2Fui%2Fissues%2Fissue-13497-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10cf626d0ea7be3eb971691772b5eb30013d4f02/src%2Ftest%2Fui%2Fissues%2Fissue-13497-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13497-2.rs?ref=10cf626d0ea7be3eb971691772b5eb30013d4f02", "patch": "@@ -1,7 +1,7 @@\n fn read_lines_borrowed<'a>() -> Vec<&'a str> {\n     let rawLines: Vec<String> = vec![\"foo  \".to_string(), \"  bar\".to_string()];\n-    rawLines //~ ERROR cannot return value referencing local variable `rawLines`\n-        .iter().map(|l| l.trim()).collect()\n+    rawLines.iter().map(|l| l.trim()).collect()\n+    //~^ ERROR cannot return value referencing local variable `rawLines`\n }\n \n fn main() {}"}, {"sha": "1b78e7ec1c64d3261a31f4194a1079ffa0f703be", "filename": "src/test/ui/issues/issue-13497-2.stderr", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/10cf626d0ea7be3eb971691772b5eb30013d4f02/src%2Ftest%2Fui%2Fissues%2Fissue-13497-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/10cf626d0ea7be3eb971691772b5eb30013d4f02/src%2Ftest%2Fui%2Fissues%2Fissue-13497-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13497-2.stderr?ref=10cf626d0ea7be3eb971691772b5eb30013d4f02", "patch": "@@ -1,14 +1,10 @@\n error[E0515]: cannot return value referencing local variable `rawLines`\n-  --> $DIR/issue-13497-2.rs:3:5\n+  --> $DIR/issue-13497-2.rs:3:29\n    |\n-LL |        rawLines\n-   |   _____^\n-   |  |_____|\n-   | ||\n-LL | ||         .iter().map(|l| l.trim()).collect()\n-   | ||_______________-___________________________^ returns a value referencing data owned by the current function\n-   | |________________|\n-   |                  `rawLines` is borrowed here\n+LL |     rawLines.iter().map(|l| l.trim()).collect()\n+   |     ---------------         ^^^^^^^^ returns a value referencing data owned by the current function\n+   |     |\n+   |     `rawLines` is borrowed here\n \n error: aborting due to previous error\n "}, {"sha": "aaed3665149a21ccb8911de35b95a3319d77def9", "filename": "src/test/ui/self/arbitrary_self_types_pin_lifetime_mismatch-async.nll.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/10cf626d0ea7be3eb971691772b5eb30013d4f02/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/10cf626d0ea7be3eb971691772b5eb30013d4f02/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch-async.nll.stderr?ref=10cf626d0ea7be3eb971691772b5eb30013d4f02", "patch": "@@ -20,9 +20,8 @@ error: lifetime may not live long enough\n   --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:17:64\n    |\n LL |     async fn bar<'a>(self: Alias<&Self>, arg: &'a ()) -> &() { arg }\n-   |                  --              -                             ^^^ associated function was supposed to return data with lifetime `'1` but it is returning data with lifetime `'a`\n-   |                  |               |\n-   |                  |               let's call the lifetime of this reference `'1`\n+   |                  --  ---- has type `Pin<&'1 Foo>`              ^^^ associated function was supposed to return data with lifetime `'1` but it is returning data with lifetime `'a`\n+   |                  |\n    |                  lifetime `'a` defined here\n \n error: aborting due to 3 previous errors"}]}