{"sha": "3faec69865f8d2b9abab76c7c2f0371361e167a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmYWVjNjk4NjVmOGQyYjlhYmFiNzZjN2MyZjAzNzEzNjFlMTY3YTM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-04-06T02:24:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-06T02:24:21Z"}, "message": "Rollup merge of #70827 - estebank:shorten-sugg-span-add-lt, r=ecstatic-morse\n\nUse smaller span for suggestion restricting lifetime", "tree": {"sha": "3c84417fe48d024af8cb27fcb27343b332536d20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c84417fe48d024af8cb27fcb27343b332536d20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3faec69865f8d2b9abab76c7c2f0371361e167a3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeipLVCRBK7hj4Ov3rIwAAdHIIAGdpqv4hbBzEH7YKyrIrtCYR\nFJpMq3Am+5mseDLi72XG9jb4XuSYEK7JVo8DsXnecZ+UNF/7FCHklZ6e5o2V4BCB\nc7fu0ZIYAV4xjP1sw2O6raZL6Q2/pzHrqwCRhikd9gxfKi8HhyZcq1YrAgRMNYP3\nPvqXKMFV5+rDfCETzaITLJwGsmKtyNpsZKnI0my8aLxGneR/T41Ov1zZjylHwKCk\nkzm1pYKCw4E9spMoR8I7qERFQfPQ3FHcKryr1u5cSJ8wNrRcpqu58royNDiuBlwJ\nLunrWvS3cRZmV6QYD7BO3DFSLaW4wkdV0QEglUEPl439XcL/C4q9lJBmAaah7rE=\n=UzUJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 3c84417fe48d024af8cb27fcb27343b332536d20\nparent 17fa3440d2c2577942c6dc30edbffbf99f3738d7\nparent 0664b8191573524a845fc2639b9d3a740e442723\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1586139861 +0200\ncommitter GitHub <noreply@github.com> 1586139861 +0200\n\nRollup merge of #70827 - estebank:shorten-sugg-span-add-lt, r=ecstatic-morse\n\nUse smaller span for suggestion restricting lifetime\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3faec69865f8d2b9abab76c7c2f0371361e167a3", "html_url": "https://github.com/rust-lang/rust/commit/3faec69865f8d2b9abab76c7c2f0371361e167a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3faec69865f8d2b9abab76c7c2f0371361e167a3/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17fa3440d2c2577942c6dc30edbffbf99f3738d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/17fa3440d2c2577942c6dc30edbffbf99f3738d7", "html_url": "https://github.com/rust-lang/rust/commit/17fa3440d2c2577942c6dc30edbffbf99f3738d7"}, {"sha": "0664b8191573524a845fc2639b9d3a740e442723", "url": "https://api.github.com/repos/rust-lang/rust/commits/0664b8191573524a845fc2639b9d3a740e442723", "html_url": "https://github.com/rust-lang/rust/commit/0664b8191573524a845fc2639b9d3a740e442723"}], "stats": {"total": 45, "additions": 17, "deletions": 28}, "files": [{"sha": "7645182ad1fb33a39809bd08cef6ea354343e83e", "filename": "src/librustc_mir/borrow_check/diagnostics/explain_borrow.rs", "status": "modified", "additions": 16, "deletions": 27, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/3faec69865f8d2b9abab76c7c2f0371361e167a3/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3faec69865f8d2b9abab76c7c2f0371361e167a3/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs?ref=3faec69865f8d2b9abab76c7c2f0371361e167a3", "patch": "@@ -208,45 +208,34 @@ impl BorrowExplanation {\n                     );\n                 };\n \n-                self.add_lifetime_bound_suggestion_to_diagnostic(\n-                    tcx,\n-                    err,\n-                    &category,\n-                    span,\n-                    region_name,\n-                );\n+                self.add_lifetime_bound_suggestion_to_diagnostic(err, &category, span, region_name);\n             }\n             _ => {}\n         }\n     }\n-    pub(in crate::borrow_check) fn add_lifetime_bound_suggestion_to_diagnostic<'tcx>(\n+    pub(in crate::borrow_check) fn add_lifetime_bound_suggestion_to_diagnostic(\n         &self,\n-        tcx: TyCtxt<'tcx>,\n         err: &mut DiagnosticBuilder<'_>,\n         category: &ConstraintCategory,\n         span: Span,\n         region_name: &RegionName,\n     ) {\n         if let ConstraintCategory::OpaqueType = category {\n-            if let Ok(snippet) = tcx.sess.source_map().span_to_snippet(span) {\n-                let suggestable_name = if region_name.was_named() {\n-                    region_name.to_string()\n-                } else {\n-                    \"'_\".to_string()\n-                };\n+            let suggestable_name =\n+                if region_name.was_named() { region_name.to_string() } else { \"'_\".to_string() };\n \n-                err.span_suggestion(\n-                    span,\n-                    &format!(\n-                        \"you can add a bound to the {}to make it last less than \\\n-                             `'static` and match `{}`\",\n-                        category.description(),\n-                        region_name,\n-                    ),\n-                    format!(\"{} + {}\", snippet, suggestable_name),\n-                    Applicability::Unspecified,\n-                );\n-            }\n+            let msg = format!(\n+                \"you can add a bound to the {}to make it last less than `'static` and match `{}`\",\n+                category.description(),\n+                region_name,\n+            );\n+\n+            err.span_suggestion_verbose(\n+                span.shrink_to_hi(),\n+                &msg,\n+                format!(\" + {}\", suggestable_name),\n+                Applicability::Unspecified,\n+            );\n         }\n     }\n }"}, {"sha": "9cff4bcd8b579df62d664c6f3b3f9cdc17d0833c", "filename": "src/test/ui/impl-trait/does-not-live-long-enough.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3faec69865f8d2b9abab76c7c2f0371361e167a3/src%2Ftest%2Fui%2Fimpl-trait%2Fdoes-not-live-long-enough.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3faec69865f8d2b9abab76c7c2f0371361e167a3/src%2Ftest%2Fui%2Fimpl-trait%2Fdoes-not-live-long-enough.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fdoes-not-live-long-enough.stderr?ref=3faec69865f8d2b9abab76c7c2f0371361e167a3", "patch": "@@ -14,7 +14,7 @@ LL |     }\n help: you can add a bound to the opaque type to make it last less than `'static` and match `'a`\n    |\n LL |     fn started_with<'a>(&'a self, prefix: &'a str) -> impl Iterator<Item=&'a str> + 'a {\n-   |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                                                                   ^^^^\n \n error: aborting due to previous error\n "}]}