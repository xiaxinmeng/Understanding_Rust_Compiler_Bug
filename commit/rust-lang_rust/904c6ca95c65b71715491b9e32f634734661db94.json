{"sha": "904c6ca95c65b71715491b9e32f634734661db94", "node_id": "C_kwDOAAsO6NoAKDkwNGM2Y2E5NWM2NWI3MTcxNTQ5MWI5ZTMyZjYzNDczNDY2MWRiOTQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-04T16:31:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-04T16:31:04Z"}, "message": "Rollup merge of #94236 - reez12g:add_track_caller_87707, r=yaahc\n\nAdd #[track_caller] to track callers when initializing poisoned Once\n\nThis PR is for this Issue.\nhttps://github.com/rust-lang/rust/issues/87707\n\nWith this fix, we expect to be able to track the caller when poisoned Once is initialized.", "tree": {"sha": "86b9a4d156ef0117e45877f8e4bd7591f33bc139", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86b9a4d156ef0117e45877f8e4bd7591f33bc139"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/904c6ca95c65b71715491b9e32f634734661db94", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiIj7ICRBK7hj4Ov3rIwAANsQIAEYMiT5kfOPwBbHQic7re4CV\nP2w65MNWb7wleSUs4cvSQcU0WHwnWrZvidXZ3OAFRAxN4/i4dH7um2gh0BXUrP5F\nxD9sxw9ThVRroAkVEoomxr0O+b+amewibkVogAAaz5jJ6ghOUBk6rxlgnWnSY3eB\ndsW8M+uMjwLscN6/SZb1yvhbdYbB+7F/TDrXn5F6c3lHeVot4HxvpHIWMCM/0G12\n5uc3WGPeoqGeoED4fBY6stn4sC221yZvHTVZFgIUHhUDPqo4u/q24l1Gswa3P8Us\nY5KlrZz2HPFGr7NySRLORugp1hYkwExlqv3NK6nscmmnieHldw/OC0TRtN+0IP8=\n=BGSo\n-----END PGP SIGNATURE-----\n", "payload": "tree 86b9a4d156ef0117e45877f8e4bd7591f33bc139\nparent b4bf56cd66ca83e908fd43bde4c627f94b2a8a9f\nparent bca67fe02f010754b5522c2c6234375cffa66b81\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1646411464 +0100\ncommitter GitHub <noreply@github.com> 1646411464 +0100\n\nRollup merge of #94236 - reez12g:add_track_caller_87707, r=yaahc\n\nAdd #[track_caller] to track callers when initializing poisoned Once\n\nThis PR is for this Issue.\nhttps://github.com/rust-lang/rust/issues/87707\n\nWith this fix, we expect to be able to track the caller when poisoned Once is initialized.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/904c6ca95c65b71715491b9e32f634734661db94", "html_url": "https://github.com/rust-lang/rust/commit/904c6ca95c65b71715491b9e32f634734661db94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/904c6ca95c65b71715491b9e32f634734661db94/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4bf56cd66ca83e908fd43bde4c627f94b2a8a9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4bf56cd66ca83e908fd43bde4c627f94b2a8a9f", "html_url": "https://github.com/rust-lang/rust/commit/b4bf56cd66ca83e908fd43bde4c627f94b2a8a9f"}, {"sha": "bca67fe02f010754b5522c2c6234375cffa66b81", "url": "https://api.github.com/repos/rust-lang/rust/commits/bca67fe02f010754b5522c2c6234375cffa66b81", "html_url": "https://github.com/rust-lang/rust/commit/bca67fe02f010754b5522c2c6234375cffa66b81"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "511de863dc51bae59f8eadf508225db02d6db31e", "filename": "library/std/src/sync/once.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/904c6ca95c65b71715491b9e32f634734661db94/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/904c6ca95c65b71715491b9e32f634734661db94/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs?ref=904c6ca95c65b71715491b9e32f634734661db94", "patch": "@@ -256,6 +256,7 @@ impl Once {\n     ///\n     /// [poison]: struct.Mutex.html#poisoning\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[track_caller]\n     pub fn call_once<F>(&self, f: F)\n     where\n         F: FnOnce(),\n@@ -390,6 +391,7 @@ impl Once {\n     // currently no way to take an `FnOnce` and call it via virtual dispatch\n     // without some allocation overhead.\n     #[cold]\n+    #[track_caller]\n     fn call_inner(&self, ignore_poisoning: bool, init: &mut dyn FnMut(&OnceState)) {\n         let mut state_and_queue = self.state_and_queue.load(Ordering::Acquire);\n         loop {"}, {"sha": "d2e9343f86cd50fa853f993610390868e4f2cff0", "filename": "src/test/ui/issues/issue-87707.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/904c6ca95c65b71715491b9e32f634734661db94/src%2Ftest%2Fui%2Fissues%2Fissue-87707.rs", "raw_url": "https://github.com/rust-lang/rust/raw/904c6ca95c65b71715491b9e32f634734661db94/src%2Ftest%2Fui%2Fissues%2Fissue-87707.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-87707.rs?ref=904c6ca95c65b71715491b9e32f634734661db94", "patch": "@@ -0,0 +1,15 @@\n+// test for #87707\n+// edition:2018\n+// run-fail\n+// check-run-results\n+\n+use std::sync::Once;\n+use std::panic;\n+\n+fn main() {\n+    let o = Once::new();\n+    let _ = panic::catch_unwind(|| {\n+        o.call_once(|| panic!(\"Here Once instance is poisoned.\"));\n+    });\n+    o.call_once(|| {});\n+}"}, {"sha": "8f82ccc0c2abeb19ce4a013e6ca7c704865e7feb", "filename": "src/test/ui/issues/issue-87707.run.stderr", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/904c6ca95c65b71715491b9e32f634734661db94/src%2Ftest%2Fui%2Fissues%2Fissue-87707.run.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/904c6ca95c65b71715491b9e32f634734661db94/src%2Ftest%2Fui%2Fissues%2Fissue-87707.run.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-87707.run.stderr?ref=904c6ca95c65b71715491b9e32f634734661db94", "patch": "@@ -0,0 +1,3 @@\n+thread 'main' panicked at 'Here Once instance is poisoned.', $DIR/issue-87707.rs:12:24\n+note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n+thread 'main' panicked at 'Once instance has previously been poisoned', $DIR/issue-87707.rs:14:7"}]}