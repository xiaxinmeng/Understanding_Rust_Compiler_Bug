{"sha": "d089d9f9ed01464940ef6e383ec239bbd5612e8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwODlkOWY5ZWQwMTQ2NDk0MGVmNmUzODNlYzIzOWJiZDU2MTJlOGM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-06T19:02:04Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-06T19:38:00Z"}, "message": "rustllvm: Add a binding to the LLVM standard module passes", "tree": {"sha": "bbf2f7067e12ab91ae9536dd49fe49e6bfbebb9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbf2f7067e12ab91ae9536dd49fe49e6bfbebb9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d089d9f9ed01464940ef6e383ec239bbd5612e8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d089d9f9ed01464940ef6e383ec239bbd5612e8c", "html_url": "https://github.com/rust-lang/rust/commit/d089d9f9ed01464940ef6e383ec239bbd5612e8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d089d9f9ed01464940ef6e383ec239bbd5612e8c/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e2088f2faf5e53ebf8af52d9bd7e034c5fc61c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e2088f2faf5e53ebf8af52d9bd7e034c5fc61c2", "html_url": "https://github.com/rust-lang/rust/commit/5e2088f2faf5e53ebf8af52d9bd7e034c5fc61c2"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "df728ffd844e4bcb10c2b4f9b452b6d5222b99dc", "filename": "mk/rustllvm.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d089d9f9ed01464940ef6e383ec239bbd5612e8c/mk%2Frustllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d089d9f9ed01464940ef6e383ec239bbd5612e8c/mk%2Frustllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frustllvm.mk?ref=d089d9f9ed01464940ef6e383ec239bbd5612e8c", "patch": "@@ -3,7 +3,7 @@\n ######################################################################\n \n RUSTLLVM_LIB_CS := $(addprefix rustllvm/, \\\n-                     MachOObjectFile.cpp Passes.cpp)\n+                     MachOObjectFile.cpp Passes.cpp Passes2.cpp)\n \n RUSTLLVM_OBJS_CS := $(addprefix rustllvm/, RustWrapper.cpp)\n "}, {"sha": "1d2529ccf001e26425189581a7bddb8f1bea6611", "filename": "src/comp/lib/llvm.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d089d9f9ed01464940ef6e383ec239bbd5612e8c/src%2Fcomp%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d089d9f9ed01464940ef6e383ec239bbd5612e8c/src%2Fcomp%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Flib%2Fllvm.rs?ref=d089d9f9ed01464940ef6e383ec239bbd5612e8c", "patch": "@@ -802,6 +802,16 @@ native mod llvm = llvm_lib {\n     fn LLVMAddTypeBasedAliasAnalysisPass(PassManagerRef PM);\n     fn LLVMAddBasicAliasAnalysisPass(PassManagerRef PM);\n \n+    // FIXME: Native stubs don't allow this many arguments yet.\n+    /*fn LLVMAddStandardModulePasses(PassManagerRef PM,\n+                                   uint OptimizationLevel,\n+                                   Bool OptimizeSize,\n+                                   Bool UnitAtATime,\n+                                   Bool UnrollLoops,\n+                                   Bool SimplifyLibCalls,\n+                                   Bool HaveExceptions,\n+                                   uint InliningThreshold);*/\n+\n     /** Destroys a memory buffer. */\n     fn LLVMDisposeMemoryBuffer(MemoryBufferRef MemBuf);\n "}, {"sha": "a0a6a20c5c4b83a572412a2193c81244d93791f4", "filename": "src/rustllvm/Passes2.cpp", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d089d9f9ed01464940ef6e383ec239bbd5612e8c/src%2Frustllvm%2FPasses2.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/d089d9f9ed01464940ef6e383ec239bbd5612e8c/src%2Frustllvm%2FPasses2.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPasses2.cpp?ref=d089d9f9ed01464940ef6e383ec239bbd5612e8c", "patch": "@@ -0,0 +1,24 @@\n+#include \"llvm/Analysis/Passes.h\"\n+#include \"llvm/Support/StandardPasses.h\"\n+#include \"llvm/PassManager.h\"\n+#include \"llvm-c/Core.h\"\n+#include <cstdlib>\n+\n+using namespace llvm;\n+\n+extern \"C\" void LLVMAddStandardModulePasses(LLVMPassManagerRef PM,\n+    unsigned int OptimizationLevel, bool OptimizeSize, bool UnitAtATime,\n+    bool UnrollLoops, bool SimplifyLibCalls, bool HaveExceptions,\n+    unsigned int InliningThreshold) {\n+  Pass *InliningPass;\n+  if (InliningThreshold)\n+    InliningPass = createFunctionInliningPass(InliningThreshold);\n+  else\n+    InliningPass = NULL;\n+\n+  createStandardModulePasses(unwrap(PM), OptimizationLevel, OptimizeSize,\n+                             UnitAtATime, UnrollLoops, SimplifyLibCalls,\n+                             HaveExceptions, InliningPass);\n+}\n+\n+"}, {"sha": "e52f29084154445996d0ffeccac23daab281eb7d", "filename": "src/rustllvm/rustllvm.def.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d089d9f9ed01464940ef6e383ec239bbd5612e8c/src%2Frustllvm%2Frustllvm.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/d089d9f9ed01464940ef6e383ec239bbd5612e8c/src%2Frustllvm%2Frustllvm.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Frustllvm.def.in?ref=d089d9f9ed01464940ef6e383ec239bbd5612e8c", "patch": "@@ -68,6 +68,7 @@ LLVMAddScalarReplAggregatesPass\n LLVMAddScalarReplAggregatesPassSSA\n LLVMAddScalarReplAggregatesPassWithThreshold\n LLVMAddSimplifyLibCallsPass\n+LLVMAddStandardModulePasses\n LLVMAddStripDeadPrototypesPass\n LLVMAddStripSymbolsPass\n LLVMAddTailCallEliminationPass"}]}