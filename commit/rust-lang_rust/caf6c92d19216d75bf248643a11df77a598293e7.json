{"sha": "caf6c92d19216d75bf248643a11df77a598293e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZjZjOTJkMTkyMTZkNzViZjI0ODY0M2ExMWRmNzdhNTk4MjkzZTc=", "commit": {"author": {"name": "Anthony Ramine", "email": "nox@nox.paris", "date": "2020-09-12T11:30:21Z"}, "committer": {"name": "Anthony Ramine", "email": "nox@nox.paris", "date": "2020-09-12T16:35:57Z"}, "message": "Clean up some language trait items comparisons", "tree": {"sha": "a74ac48c69bec651b34da80cc1887e911429bd42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a74ac48c69bec651b34da80cc1887e911429bd42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/caf6c92d19216d75bf248643a11df77a598293e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/caf6c92d19216d75bf248643a11df77a598293e7", "html_url": "https://github.com/rust-lang/rust/commit/caf6c92d19216d75bf248643a11df77a598293e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/caf6c92d19216d75bf248643a11df77a598293e7/comments", "author": {"login": "nox", "id": 123095, "node_id": "MDQ6VXNlcjEyMzA5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/123095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nox", "html_url": "https://github.com/nox", "followers_url": "https://api.github.com/users/nox/followers", "following_url": "https://api.github.com/users/nox/following{/other_user}", "gists_url": "https://api.github.com/users/nox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nox/subscriptions", "organizations_url": "https://api.github.com/users/nox/orgs", "repos_url": "https://api.github.com/users/nox/repos", "events_url": "https://api.github.com/users/nox/events{/privacy}", "received_events_url": "https://api.github.com/users/nox/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nox", "id": 123095, "node_id": "MDQ6VXNlcjEyMzA5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/123095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nox", "html_url": "https://github.com/nox", "followers_url": "https://api.github.com/users/nox/followers", "following_url": "https://api.github.com/users/nox/following{/other_user}", "gists_url": "https://api.github.com/users/nox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nox/subscriptions", "organizations_url": "https://api.github.com/users/nox/orgs", "repos_url": "https://api.github.com/users/nox/repos", "events_url": "https://api.github.com/users/nox/events{/privacy}", "received_events_url": "https://api.github.com/users/nox/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75f0f7af3172cedaa01e9bf066c06017bfe9a426", "url": "https://api.github.com/repos/rust-lang/rust/commits/75f0f7af3172cedaa01e9bf066c06017bfe9a426", "html_url": "https://github.com/rust-lang/rust/commit/75f0f7af3172cedaa01e9bf066c06017bfe9a426"}], "stats": {"total": 27, "additions": 6, "deletions": 21}, "files": [{"sha": "611280b413dd7ab4f2f299d4bf1027fd37b013ca", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/caf6c92d19216d75bf248643a11df77a598293e7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/caf6c92d19216d75bf248643a11df77a598293e7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=caf6c92d19216d75bf248643a11df77a598293e7", "patch": "@@ -1507,12 +1507,7 @@ impl<'a, 'tcx> InferCtxtPrivExt<'tcx> for InferCtxt<'a, 'tcx> {\n                 // avoid inundating the user with unnecessary errors, but we now\n                 // check upstream for type errors and don't add the obligations to\n                 // begin with in those cases.\n-                if self\n-                    .tcx\n-                    .lang_items()\n-                    .sized_trait()\n-                    .map_or(false, |sized_id| sized_id == trait_ref.def_id())\n-                {\n+                if self.tcx.lang_items().sized_trait() == Some(trait_ref.def_id()) {\n                     self.need_type_info_err(body_id, span, self_ty, ErrorCode::E0282).emit();\n                     return;\n                 }"}, {"sha": "2fad54013ad5bebc5d836fb7963b129f98f8658d", "filename": "compiler/rustc_traits/src/chalk/db.rs", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/caf6c92d19216d75bf248643a11df77a598293e7/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/caf6c92d19216d75bf248643a11df77a598293e7/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fdb.rs?ref=caf6c92d19216d75bf248643a11df77a598293e7", "patch": "@@ -110,25 +110,15 @@ impl<'tcx> chalk_solve::RustIrDatabase<RustInterner<'tcx>> for RustIrDatabase<'t\n             .map(|i| chalk_ir::AssocTypeId(i.def_id))\n             .collect();\n \n-        let well_known = if self\n-            .interner\n-            .tcx\n-            .lang_items()\n-            .sized_trait()\n-            .map(|t| def_id == t)\n-            .unwrap_or(false)\n-        {\n+        let well_known = if self.interner.tcx.lang_items().sized_trait() == Some(def_id) {\n             Some(chalk_solve::rust_ir::WellKnownTrait::Sized)\n-        } else if self.interner.tcx.lang_items().copy_trait().map(|t| def_id == t).unwrap_or(false)\n-        {\n+        } else if self.interner.tcx.lang_items().copy_trait() == Some(def_id) {\n             Some(chalk_solve::rust_ir::WellKnownTrait::Copy)\n-        } else if self.interner.tcx.lang_items().clone_trait().map(|t| def_id == t).unwrap_or(false)\n-        {\n+        } else if self.interner.tcx.lang_items().clone_trait() == Some(def_id) {\n             Some(chalk_solve::rust_ir::WellKnownTrait::Clone)\n-        } else if self.interner.tcx.lang_items().drop_trait().map(|t| def_id == t).unwrap_or(false)\n-        {\n+        } else if self.interner.tcx.lang_items().drop_trait() == Some(def_id) {\n             Some(chalk_solve::rust_ir::WellKnownTrait::Drop)\n-        } else if self.interner.tcx.lang_items().fn_trait().map(|t| def_id == t).unwrap_or(false) {\n+        } else if self.interner.tcx.lang_items().fn_trait() == Some(def_id) {\n             Some(chalk_solve::rust_ir::WellKnownTrait::Fn)\n         } else if self\n             .interner"}]}