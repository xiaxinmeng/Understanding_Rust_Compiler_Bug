{"sha": "5cff35505974ac91efb13d17866d3a80c498b972", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZmYzNTUwNTk3NGFjOTFlZmIxM2QxNzg2NmQzYTgwYzQ5OGI5NzI=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-08-05T18:32:07Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-08-21T11:35:34Z"}, "message": "Add another test", "tree": {"sha": "ec25156f872dd25d1725a57d93fcbf71f13568d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec25156f872dd25d1725a57d93fcbf71f13568d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cff35505974ac91efb13d17866d3a80c498b972", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cff35505974ac91efb13d17866d3a80c498b972", "html_url": "https://github.com/rust-lang/rust/commit/5cff35505974ac91efb13d17866d3a80c498b972", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cff35505974ac91efb13d17866d3a80c498b972/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f41053ede247a1e4ae6cd12f74dfc86fee56b83", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f41053ede247a1e4ae6cd12f74dfc86fee56b83", "html_url": "https://github.com/rust-lang/rust/commit/6f41053ede247a1e4ae6cd12f74dfc86fee56b83"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "1919b1fc700e3e8631850aa1a162aefab7a6bff9", "filename": "crates/hir_ty/src/tests/regression.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5cff35505974ac91efb13d17866d3a80c498b972/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cff35505974ac91efb13d17866d3a80c498b972/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs?ref=5cff35505974ac91efb13d17866d3a80c498b972", "patch": "@@ -1094,3 +1094,23 @@ fn parse_arule() {\n         \"#,\n     )\n }\n+\n+#[test]\n+fn call_expected_type_closure() {\n+    check_types(\n+        r#\"\n+//- minicore: fn, option\n+\n+fn map<T, U>(o: Option<T>, f: impl FnOnce(T) -> U) -> Option<U> { loop {} }\n+struct S {\n+    field: u32\n+}\n+\n+fn test() {\n+    let o = Some(S { field: 2 });\n+    let _: Option<()> = map(o, |s| { s.field; });\n+                                  // ^^^^^^^ u32\n+}\n+        \"#,\n+    );\n+}"}]}