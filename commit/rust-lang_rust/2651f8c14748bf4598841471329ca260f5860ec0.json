{"sha": "2651f8c14748bf4598841471329ca260f5860ec0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2NTFmOGMxNDc0OGJmNDU5ODg0MTQ3MTMyOWNhMjYwZjU4NjBlYzA=", "commit": {"author": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2016-02-23T06:46:45Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2016-03-14T22:04:41Z"}, "message": "Add regression tests from initial implementation review", "tree": {"sha": "3593771c67d4258ef41e1a1eeaacb6f24828fe4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3593771c67d4258ef41e1a1eeaacb6f24828fe4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2651f8c14748bf4598841471329ca260f5860ec0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2651f8c14748bf4598841471329ca260f5860ec0", "html_url": "https://github.com/rust-lang/rust/commit/2651f8c14748bf4598841471329ca260f5860ec0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2651f8c14748bf4598841471329ca260f5860ec0/comments", "author": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1726c1b54a12b9f499affdc3ef0b769f3de15a23", "url": "https://api.github.com/repos/rust-lang/rust/commits/1726c1b54a12b9f499affdc3ef0b769f3de15a23", "html_url": "https://github.com/rust-lang/rust/commit/1726c1b54a12b9f499affdc3ef0b769f3de15a23"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "2d293f494a3479945b60e5ab21fb9bf8be32e785", "filename": "src/test/run-pass/specialization-out-of-order.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/2651f8c14748bf4598841471329ca260f5860ec0/src%2Ftest%2Frun-pass%2Fspecialization-out-of-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2651f8c14748bf4598841471329ca260f5860ec0/src%2Ftest%2Frun-pass%2Fspecialization-out-of-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspecialization-out-of-order.rs?ref=2651f8c14748bf4598841471329ca260f5860ec0", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that you can list the more specific impl before the more general one.\n+\n+#![feature(specialization)]\n+\n+trait Foo {\n+    type Out;\n+}\n+\n+impl Foo for bool {\n+    type Out = ();\n+}\n+\n+impl<T> Foo for T {\n+    default type Out = bool;\n+}\n+\n+fn main() {}"}, {"sha": "2250d77e08e8e3db0403f7619c54a03471c4ed2e", "filename": "src/test/run-pass/specialization-projection-alias.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2651f8c14748bf4598841471329ca260f5860ec0/src%2Ftest%2Frun-pass%2Fspecialization-projection-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2651f8c14748bf4598841471329ca260f5860ec0/src%2Ftest%2Frun-pass%2Fspecialization-projection-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspecialization-projection-alias.rs?ref=2651f8c14748bf4598841471329ca260f5860ec0", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(specialization)]\n+\n+// Regression test for ICE when combining specialized associated types and type\n+// aliases\n+\n+trait Id_ {\n+    type Out;\n+}\n+\n+type Id<T> = <T as Id_>::Out;\n+\n+impl<T> Id_ for T {\n+    default type Out = T;\n+}\n+\n+fn main() {\n+    let x: Id<bool> = panic!();\n+}"}]}