{"sha": "ac6aba016e757c6eea58742c9f9cd6348caba616", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjNmFiYTAxNmU3NTdjNmVlYTU4NzQyYzlmOWNkNjM0OGNhYmE2MTY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-12-16T14:55:42Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-12-16T15:17:29Z"}, "message": "rename iter2 to iteri to match typical convention", "tree": {"sha": "9d50103611e2bf36cf82c0852129278d7a89cd1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d50103611e2bf36cf82c0852129278d7a89cd1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac6aba016e757c6eea58742c9f9cd6348caba616", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac6aba016e757c6eea58742c9f9cd6348caba616", "html_url": "https://github.com/rust-lang/rust/commit/ac6aba016e757c6eea58742c9f9cd6348caba616", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac6aba016e757c6eea58742c9f9cd6348caba616/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2833ca478c19d2f8f150570a6d60b93488debdcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/2833ca478c19d2f8f150570a6d60b93488debdcc", "html_url": "https://github.com/rust-lang/rust/commit/2833ca478c19d2f8f150570a6d60b93488debdcc"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "1348e35c154196f64b41cd8ae24f27e53b68de1b", "filename": "src/comp/middle/trans_closure.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ac6aba016e757c6eea58742c9f9cd6348caba616/src%2Fcomp%2Fmiddle%2Ftrans_closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac6aba016e757c6eea58742c9f9cd6348caba616/src%2Fcomp%2Fmiddle%2Ftrans_closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_closure.rs?ref=ac6aba016e757c6eea58742c9f9cd6348caba616", "patch": "@@ -218,15 +218,15 @@ fn store_environment(\n     let {bcx:bcx, val:ty_params_slot} =\n         GEP_tup_like_1(bcx, closure_ty, closure,\n                        [0, abi::closure_elt_ty_params]);\n-    vec::iter2(lltydescs) { |i, td|\n+    vec::iteri(lltydescs) { |i, td|\n         let ty_param_slot = GEPi(bcx, ty_params_slot, [0, i as int]);\n         let cloned_td = maybe_clone_tydesc(bcx, ck, td);\n         Store(bcx, cloned_td, ty_param_slot);\n     }\n \n     // Copy expr values into boxed bindings.\n     // Silly check\n-    vec::iter2(bound_values) { |i, bv|\n+    vec::iteri(bound_values) { |i, bv|\n         let bound = trans::GEP_tup_like_1(bcx, box_ty, box,\n                                           [0, abi::box_rc_field_body,\n                                            abi::closure_elt_bindings,\n@@ -310,7 +310,7 @@ fn load_environment(enclosing_cx: @block_ctxt,\n \n     // Populate the upvars from the environment.\n     let path = [0, abi::box_rc_field_body, abi::closure_elt_bindings];\n-    vec::iter2(*upvars) { |i, upvar_def|\n+    vec::iteri(*upvars) { |i, upvar_def|\n         check type_is_tup_like(bcx, boxed_closure_ty);\n         let upvarptr =\n             GEP_tup_like(bcx, boxed_closure_ty, llclosure, path + [i as int]);"}, {"sha": "d7047dc8cf67a582b6b3dcdd8434ecead89db614", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ac6aba016e757c6eea58742c9f9cd6348caba616/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac6aba016e757c6eea58742c9f9cd6348caba616/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=ac6aba016e757c6eea58742c9f9cd6348caba616", "patch": "@@ -697,18 +697,18 @@ element's value.\n \n */\n fn iter<T>(v: [const T], f: block(T)) {\n-    iter2(v) { |_i, v| f(v) }\n+    iteri(v) { |_i, v| f(v) }\n }\n \n /*\n-Function: iter2\n+Function: iteri\n \n Iterates over a vector's elements and indexes\n \n Iterates over vector `v` and, for each element, calls function `f` with the\n element's value and index.\n */\n-fn iter2<T>(v: [const T], f: block(uint, T)) {\n+fn iteri<T>(v: [const T], f: block(uint, T)) {\n     let i = 0u, l = len(v);\n     while i < l { f(i, v[i]); i += 1u; }\n }\n@@ -723,18 +723,18 @@ element's value.\n \n */\n fn riter<T>(v: [const T], f: block(T)) {\n-    riter2(v) { |_i, v| f(v) }\n+    riteri(v) { |_i, v| f(v) }\n }\n \n /*\n-Function: riter2\n+Function: riteri\n \n Iterates over a vector's elements and indexes in reverse\n \n Iterates over vector `v` and, for each element, calls function `f` with the\n element's value and index.\n */\n-fn riter2<T>(v: [const T], f: block(uint, T)) {\n+fn riteri<T>(v: [const T], f: block(uint, T)) {\n     let i = len(v);\n     while 0u < i {\n         i -= 1u;"}, {"sha": "4bfd41531f6f6da78388b314f44622e8ae7644eb", "filename": "src/test/stdtest/vec.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ac6aba016e757c6eea58742c9f9cd6348caba616/src%2Ftest%2Fstdtest%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac6aba016e757c6eea58742c9f9cd6348caba616/src%2Ftest%2Fstdtest%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fvec.rs?ref=ac6aba016e757c6eea58742c9f9cd6348caba616", "patch": "@@ -329,9 +329,9 @@ fn iter_nonempty() {\n }\n \n #[test]\n-fn iter2() {\n+fn iteri() {\n     let i = 0;\n-    vec::iter2([1, 2, 3], { |j, v|\n+    vec::iteri([1, 2, 3], { |j, v|\n         if i == 0 { assert v == 1; }\n         assert j + 1u == v as uint;\n         i += v;\n@@ -357,9 +357,9 @@ fn riter_nonempty() {\n }\n \n #[test]\n-fn riter2() {\n+fn riteri() {\n     let i = 0;\n-    vec::riter2([0, 1, 2], { |j, v|\n+    vec::riteri([0, 1, 2], { |j, v|\n         if i == 0 { assert v == 2; }\n         assert j == v as uint;\n         i += v;"}]}