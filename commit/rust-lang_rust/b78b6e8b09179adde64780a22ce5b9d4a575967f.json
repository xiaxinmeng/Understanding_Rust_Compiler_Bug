{"sha": "b78b6e8b09179adde64780a22ce5b9d4a575967f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3OGI2ZThiMDkxNzlhZGRlNjQ3ODBhMjJjZTViOWQ0YTU3NTk2N2Y=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-19T15:01:38Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-19T15:42:00Z"}, "message": "Format source codes and update tests", "tree": {"sha": "17acf6feff2834c5fd23fef05c6b4063f6ae9650", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17acf6feff2834c5fd23fef05c6b4063f6ae9650"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b78b6e8b09179adde64780a22ce5b9d4a575967f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b78b6e8b09179adde64780a22ce5b9d4a575967f", "html_url": "https://github.com/rust-lang/rust/commit/b78b6e8b09179adde64780a22ce5b9d4a575967f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b78b6e8b09179adde64780a22ce5b9d4a575967f/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a2567db930478d58cd53e87623fe70a7eff27c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a2567db930478d58cd53e87623fe70a7eff27c2", "html_url": "https://github.com/rust-lang/rust/commit/0a2567db930478d58cd53e87623fe70a7eff27c2"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "1b8cfbe8c045267236ebe39e2594e7a92618f248", "filename": "src/expr.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b78b6e8b09179adde64780a22ce5b9d4a575967f/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b78b6e8b09179adde64780a22ce5b9d4a575967f/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=b78b6e8b09179adde64780a22ce5b9d4a575967f", "patch": "@@ -1686,7 +1686,8 @@ fn rewrite_match_body(\n ) -> Option<String> {\n     let (extend, body) = match body.node {\n         ast::ExprKind::Block(ref block)\n-            if !is_unsafe_block(block) && is_simple_block(block, context.codemap) => {\n+            if !is_unsafe_block(block) && is_simple_block(block, context.codemap) =>\n+        {\n             if let ast::StmtKind::Expr(ref expr) = block.stmts[0].node {\n                 (expr.can_be_overflowed(context, 1), &**expr)\n             } else {"}, {"sha": "2a6a827c1a4b726b928fa8b44a0c92d2f3697c4e", "filename": "src/visitor.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b78b6e8b09179adde64780a22ce5b9d4a575967f/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b78b6e8b09179adde64780a22ce5b9d4a575967f/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=b78b6e8b09179adde64780a22ce5b9d4a575967f", "patch": "@@ -563,7 +563,10 @@ impl<'a> FmtVisitor<'a> {\n                 if s.rewrite(\n                     &self.get_context(),\n                     Shape::indented(self.block_indent, self.config),\n-                ).is_none() => true,\n+                ).is_none() =>\n+            {\n+                true\n+            }\n             None => true,\n             _ => self.failed,\n         };"}, {"sha": "da82d971593cdd3d0337cef9a04d2fb6aac846c6", "filename": "tests/target/long-match-arms-brace-newline.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b78b6e8b09179adde64780a22ce5b9d4a575967f/tests%2Ftarget%2Flong-match-arms-brace-newline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b78b6e8b09179adde64780a22ce5b9d4a575967f/tests%2Ftarget%2Flong-match-arms-brace-newline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Flong-match-arms-brace-newline.rs?ref=b78b6e8b09179adde64780a22ce5b9d4a575967f", "patch": "@@ -7,7 +7,10 @@ fn main() {\n     match x\n     {\n         aaaaaaaa::Bbbbb::Ccccccccccccc(_, Some(ref x))\n-            if x == \"aaaaaaaaaaa aaaaaaa aaaaaa\" => Ok(()),\n+            if x == \"aaaaaaaaaaa aaaaaaa aaaaaa\" =>\n+        {\n+            Ok(())\n+        }\n         _ => Err(x),\n     }\n }"}, {"sha": "29bc85165298646b57bba47b0c7befae59263bef", "filename": "tests/target/match.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b78b6e8b09179adde64780a22ce5b9d4a575967f/tests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b78b6e8b09179adde64780a22ce5b9d4a575967f/tests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch.rs?ref=b78b6e8b09179adde64780a22ce5b9d4a575967f", "patch": "@@ -29,7 +29,10 @@ fn foo() {\n         }\n \n         Patternnnnnnnnnnnnnnnnnnnnnnnnn | Patternnnnnnnnnnnnnnnnnnnnnnnnn\n-            if looooooooooooooooooooooooooooooooooooooooong_guard => meh,\n+            if looooooooooooooooooooooooooooooooooooooooong_guard =>\n+        {\n+            meh\n+        }\n \n         // Test that earlier patterns can take the guard space\n         (aaaa, bbbbb, ccccccc, aaaaa, bbbbbbbb, cccccc, aaaa, bbbbbbbb, cccccc, dddddd) |"}]}