{"sha": "b913df06f26dde04cbc218874fdd893a5c59c67f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MTNkZjA2ZjI2ZGRlMDRjYmMyMTg4NzRmZGQ4OTNhNWM1OWM2N2Y=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-07-23T19:32:12Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-07-25T03:38:22Z"}, "message": "remove `num_universal_regions` etc from RegionValueElements", "tree": {"sha": "f84aa10463abe24b2aba1a6a75a5f7e05725d047", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f84aa10463abe24b2aba1a6a75a5f7e05725d047"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b913df06f26dde04cbc218874fdd893a5c59c67f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b913df06f26dde04cbc218874fdd893a5c59c67f", "html_url": "https://github.com/rust-lang/rust/commit/b913df06f26dde04cbc218874fdd893a5c59c67f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b913df06f26dde04cbc218874fdd893a5c59c67f/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2584216364a9b17364c21b521bcb3d04f7da0e00", "url": "https://api.github.com/repos/rust-lang/rust/commits/2584216364a9b17364c21b521bcb3d04f7da0e00", "html_url": "https://github.com/rust-lang/rust/commit/2584216364a9b17364c21b521bcb3d04f7da0e00"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "63d5de4f2e525f0c8c956ba82d9368f2475adcaa", "filename": "src/librustc_mir/borrow_check/nll/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b913df06f26dde04cbc218874fdd893a5c59c67f/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b913df06f26dde04cbc218874fdd893a5c59c67f/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs?ref=b913df06f26dde04cbc218874fdd893a5c59c67f", "patch": "@@ -104,7 +104,7 @@ pub(in borrow_check) fn compute_regions<'cx, 'gcx, 'tcx>(\n         None\n     };\n \n-    let elements = &Rc::new(RegionValueElements::new(mir, universal_regions.len()));\n+    let elements = &Rc::new(RegionValueElements::new(mir));\n \n     // Run the MIR type-checker.\n     let liveness_map = NllLivenessMap::compute(&mir);"}, {"sha": "3d830c507f247941935bd97bce9679a007e5d044", "filename": "src/librustc_mir/borrow_check/nll/region_infer/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b913df06f26dde04cbc218874fdd893a5c59c67f/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b913df06f26dde04cbc218874fdd893a5c59c67f/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs?ref=b913df06f26dde04cbc218874fdd893a5c59c67f", "patch": "@@ -214,7 +214,10 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         let constraint_graph = Rc::new(constraints.graph(definitions.len()));\n         let constraint_sccs = Rc::new(constraints.compute_sccs(&constraint_graph));\n \n-        let mut scc_values = RegionValues::new(elements);\n+        let mut scc_values = RegionValues::new(\n+            elements,\n+            universal_regions.len(),\n+        );\n \n         for region in liveness_constraints.rows() {\n             let scc = constraint_sccs.scc(region);"}, {"sha": "f6a718fdcf8e218ae437fe095549ddfbae318ba4", "filename": "src/librustc_mir/borrow_check/nll/region_infer/values.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b913df06f26dde04cbc218874fdd893a5c59c67f/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b913df06f26dde04cbc218874fdd893a5c59c67f/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fvalues.rs?ref=b913df06f26dde04cbc218874fdd893a5c59c67f", "patch": "@@ -22,11 +22,10 @@ crate struct RegionValueElements {\n     /// For each basic block, how many points are contained within?\n     statements_before_block: IndexVec<BasicBlock, usize>,\n     num_points: usize,\n-    num_universal_regions: usize,\n }\n \n impl RegionValueElements {\n-    crate fn new(mir: &Mir<'_>, num_universal_regions: usize) -> Self {\n+    crate fn new(mir: &Mir<'_>) -> Self {\n         let mut num_points = 0;\n         let statements_before_block = mir\n             .basic_blocks()\n@@ -37,11 +36,6 @@ impl RegionValueElements {\n                 v\n             })\n             .collect();\n-\n-        debug!(\n-            \"RegionValueElements(num_universal_regions={:?})\",\n-            num_universal_regions\n-        );\n         debug!(\n             \"RegionValueElements: statements_before_block={:#?}\",\n             statements_before_block\n@@ -51,7 +45,6 @@ impl RegionValueElements {\n         Self {\n             statements_before_block,\n             num_points,\n-            num_universal_regions,\n         }\n     }\n \n@@ -191,11 +184,14 @@ impl<N: Idx> RegionValues<N> {\n     /// Creates a new set of \"region values\" that tracks causal information.\n     /// Each of the regions in num_region_variables will be initialized with an\n     /// empty set of points and no causal information.\n-    crate fn new(elements: &Rc<RegionValueElements>) -> Self {\n+    crate fn new(\n+        elements: &Rc<RegionValueElements>,\n+        num_universal_regions: usize,\n+    ) -> Self {\n         Self {\n             elements: elements.clone(),\n             points: SparseBitMatrix::new(elements.num_points),\n-            free_regions: SparseBitMatrix::new(elements.num_universal_regions),\n+            free_regions: SparseBitMatrix::new(num_universal_regions),\n         }\n     }\n "}]}