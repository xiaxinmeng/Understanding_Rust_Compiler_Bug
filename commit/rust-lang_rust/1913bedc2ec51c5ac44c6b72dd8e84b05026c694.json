{"sha": "1913bedc2ec51c5ac44c6b72dd8e84b05026c694", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MTNiZWRjMmVjNTFjNWFjNDRjNmI3MmRkOGU4NGIwNTAyNmM2OTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-20T14:18:52Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-20T14:21:00Z"}, "message": "Make more stuff private", "tree": {"sha": "ad1856de335f35c4a00bb5878060e54491a08c09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad1856de335f35c4a00bb5878060e54491a08c09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1913bedc2ec51c5ac44c6b72dd8e84b05026c694", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1913bedc2ec51c5ac44c6b72dd8e84b05026c694", "html_url": "https://github.com/rust-lang/rust/commit/1913bedc2ec51c5ac44c6b72dd8e84b05026c694", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1913bedc2ec51c5ac44c6b72dd8e84b05026c694/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a300fb68e25ea0cbf2cfba38968a40674cd4c805", "url": "https://api.github.com/repos/rust-lang/rust/commits/a300fb68e25ea0cbf2cfba38968a40674cd4c805", "html_url": "https://github.com/rust-lang/rust/commit/a300fb68e25ea0cbf2cfba38968a40674cd4c805"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "aab792e2889176cf073ea5480f8e8552334fe9de", "filename": "crates/ra_analysis/src/descriptors/module/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1913bedc2ec51c5ac44c6b72dd8e84b05026c694/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1913bedc2ec51c5ac44c6b72dd8e84b05026c694/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fmod.rs?ref=1913bedc2ec51c5ac44c6b72dd8e84b05026c694", "patch": "@@ -146,7 +146,7 @@ pub(crate) struct ModuleTree {\n }\n \n impl ModuleTree {\n-    pub(crate) fn modules_for_source(&self, source: ModuleSource) -> Vec<ModuleId> {\n+    fn modules_for_source(&self, source: ModuleSource) -> Vec<ModuleId> {\n         self.mods\n             .iter()\n             .enumerate()\n@@ -155,7 +155,7 @@ impl ModuleTree {\n             .collect()\n     }\n \n-    pub(crate) fn any_module_for_source(&self, source: ModuleSource) -> Option<ModuleId> {\n+    fn any_module_for_source(&self, source: ModuleSource) -> Option<ModuleId> {\n         self.modules_for_source(source).pop()\n     }\n }\n@@ -261,7 +261,7 @@ struct ModuleData {\n }\n \n impl ModuleSource {\n-    pub(crate) fn new_inline(file_id: FileId, module: ast::Module) -> ModuleSource {\n+    fn new_inline(file_id: FileId, module: ast::Module) -> ModuleSource {\n         assert!(!module.has_semi());\n         let ptr = SyntaxPtr::new(file_id, module.syntax());\n         ModuleSource::Module(ptr)"}]}