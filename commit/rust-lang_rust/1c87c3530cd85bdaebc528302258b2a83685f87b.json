{"sha": "1c87c3530cd85bdaebc528302258b2a83685f87b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjODdjMzUzMGNkODViZGFlYmM1MjgzMDIyNThiMmE4MzY4NWY4N2I=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-09-08T06:05:59Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-09-08T06:05:59Z"}, "message": "Let's see if lifetime elision works in this case", "tree": {"sha": "89c04f2efa2ecf15d409a34271fcbf3087a631e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89c04f2efa2ecf15d409a34271fcbf3087a631e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c87c3530cd85bdaebc528302258b2a83685f87b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c87c3530cd85bdaebc528302258b2a83685f87b", "html_url": "https://github.com/rust-lang/rust/commit/1c87c3530cd85bdaebc528302258b2a83685f87b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c87c3530cd85bdaebc528302258b2a83685f87b/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "658b7eba5b9f226a9f537fa014f17aa4e76bcdf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/658b7eba5b9f226a9f537fa014f17aa4e76bcdf1", "html_url": "https://github.com/rust-lang/rust/commit/658b7eba5b9f226a9f537fa014f17aa4e76bcdf1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "af0d8da05f49ab364d1d5364abc6c96299eef720", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c87c3530cd85bdaebc528302258b2a83685f87b/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c87c3530cd85bdaebc528302258b2a83685f87b/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=1c87c3530cd85bdaebc528302258b2a83685f87b", "patch": "@@ -142,7 +142,7 @@ pub fn split_paths(unparsed: &OsStr) -> SplitPaths {\n     let unparsed = unparsed.as_bytes();\n     SplitPaths {\n         iter: unparsed.split(is_colon as fn(&u8) -> bool)\n-                      .map(bytes_to_path as fn(&'a [u8]) -> PathBuf)\n+                      .map(bytes_to_path as fn(&[u8]) -> PathBuf)\n     }\n }\n "}]}