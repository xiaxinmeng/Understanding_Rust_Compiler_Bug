{"sha": "2720ccc5a78b4cbad1687aff59bb8631d59109c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3MjBjY2M1YTc4YjRjYmFkMTY4N2FmZjU5YmI4NjMxZDU5MTA5YzM=", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2020-12-14T05:27:20Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2020-12-14T05:27:20Z"}, "message": "Fix masks", "tree": {"sha": "91baaed5c0452877616050b89bf52fc61e83f7d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91baaed5c0452877616050b89bf52fc61e83f7d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2720ccc5a78b4cbad1687aff59bb8631d59109c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2720ccc5a78b4cbad1687aff59bb8631d59109c3", "html_url": "https://github.com/rust-lang/rust/commit/2720ccc5a78b4cbad1687aff59bb8631d59109c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2720ccc5a78b4cbad1687aff59bb8631d59109c3/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ddf7acc89d414d12c4fc04c90cf208c78fd8d5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ddf7acc89d414d12c4fc04c90cf208c78fd8d5e", "html_url": "https://github.com/rust-lang/rust/commit/0ddf7acc89d414d12c4fc04c90cf208c78fd8d5e"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "eac5178512e52f894075ffed57011319e4599088", "filename": "crates/core_simd/src/masks/full_masks/mod.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2720ccc5a78b4cbad1687aff59bb8631d59109c3/crates%2Fcore_simd%2Fsrc%2Fmasks%2Ffull_masks%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2720ccc5a78b4cbad1687aff59bb8631d59109c3/crates%2Fcore_simd%2Fsrc%2Fmasks%2Ffull_masks%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fmasks%2Ffull_masks%2Fmod.rs?ref=2720ccc5a78b4cbad1687aff59bb8631d59109c3", "patch": "@@ -22,7 +22,13 @@ macro_rules! define_mask {\n         impl<const $lanes: usize> $name<$lanes> {\n             /// Construct a mask by setting all lanes to the given value.\n             pub fn splat(value: bool) -> Self {\n-                Self(<$type>::splat(value.into()))\n+                Self(<$type>::splat(\n+                    if value {\n+                        -1\n+                    } else {\n+                        0\n+                    }\n+                ))\n             }\n \n             /// Tests the value of the specified lane.\n@@ -31,7 +37,7 @@ macro_rules! define_mask {\n             /// Panics if `lane` is greater than or equal to the number of lanes in the vector.\n             #[inline]\n             pub fn test(&self, lane: usize) -> bool {\n-                self.0[lane] > 0\n+                self.0[lane] == -1\n             }\n \n             /// Sets the value of the specified lane.\n@@ -41,7 +47,7 @@ macro_rules! define_mask {\n             #[inline]\n             pub fn set(&mut self, lane: usize, value: bool) {\n                 self.0[lane] = if value {\n-                    !0\n+                    -1\n                 } else {\n                     0\n                 }\n@@ -57,7 +63,7 @@ macro_rules! define_mask {\n         impl<const $lanes: usize> core::convert::TryFrom<$type> for $name<$lanes> {\n             type Error = TryFromMaskError;\n             fn try_from(value: $type) -> Result<Self, Self::Error> {\n-                if value.as_slice().iter().all(|x| *x == 0 || !*x == 0) {\n+                if value.as_slice().iter().all(|x| *x == 0 || *x == -1) {\n                     Ok(Self(value))\n                 } else {\n                     Err(TryFromMaskError(()))"}]}