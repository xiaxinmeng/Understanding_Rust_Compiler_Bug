{"sha": "840795234695eda5c0be1ae8481add2e897f8bbf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0MDc5NTIzNDY5NWVkYTVjMGJlMWFlODQ4MWFkZDJlODk3ZjhiYmY=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-08-26T04:39:17Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-08-26T04:39:17Z"}, "message": "Do not emit \"class method\" debuginfo for types that are not DICompositeType.", "tree": {"sha": "01f3bd8d952ad10491658812e5bd1e3562cc3dee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01f3bd8d952ad10491658812e5bd1e3562cc3dee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/840795234695eda5c0be1ae8481add2e897f8bbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/840795234695eda5c0be1ae8481add2e897f8bbf", "html_url": "https://github.com/rust-lang/rust/commit/840795234695eda5c0be1ae8481add2e897f8bbf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/840795234695eda5c0be1ae8481add2e897f8bbf/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e07dd59eaeb7be95afd2fb3dc131108ae750c91c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e07dd59eaeb7be95afd2fb3dc131108ae750c91c", "html_url": "https://github.com/rust-lang/rust/commit/e07dd59eaeb7be95afd2fb3dc131108ae750c91c"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "73ed7a5510f3a65191e00a7506ea2ea21844f11a", "filename": "src/librustc_trans/debuginfo/mod.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/840795234695eda5c0be1ae8481add2e897f8bbf/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/840795234695eda5c0be1ae8481add2e897f8bbf/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs?ref=840795234695eda5c0be1ae8481add2e897f8bbf", "patch": "@@ -419,7 +419,15 @@ pub fn create_function_debug_context<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n                 let impl_self_ty = monomorphize::apply_param_substs(cx.tcx(),\n                                                                     instance.substs,\n                                                                     &impl_self_ty);\n-                Some(type_metadata(cx, impl_self_ty, syntax_pos::DUMMY_SP))\n+\n+                // Only \"class\" methods are generally understood by LLVM,\n+                // so avoid methods on other types (e.g. `<*mut T>::null`).\n+                match impl_self_ty.sty {\n+                    ty::TyStruct(..) | ty::TyEnum(..) => {\n+                        Some(type_metadata(cx, impl_self_ty, syntax_pos::DUMMY_SP))\n+                    }\n+                    _ => None\n+                }\n             } else {\n                 // For trait method impls we still use the \"parallel namespace\"\n                 // strategy"}]}