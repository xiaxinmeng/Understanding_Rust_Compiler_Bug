{"sha": "b3570db09486ebf1352f799678f08cc647988689", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNTcwZGIwOTQ4NmViZjEzNTJmNzk5Njc4ZjA4Y2M2NDc5ODg2ODk=", "commit": {"author": {"name": "f001", "email": "changchun.fan@qq.com", "date": "2017-02-12T12:40:38Z"}, "committer": {"name": "f001", "email": "changchun.fan@qq.com", "date": "2017-02-12T12:40:38Z"}, "message": "update via comments", "tree": {"sha": "afde2365a88a2c241f6b20eb8d750b16bbb8927b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afde2365a88a2c241f6b20eb8d750b16bbb8927b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3570db09486ebf1352f799678f08cc647988689", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3570db09486ebf1352f799678f08cc647988689", "html_url": "https://github.com/rust-lang/rust/commit/b3570db09486ebf1352f799678f08cc647988689", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3570db09486ebf1352f799678f08cc647988689/comments", "author": {"login": "F001", "id": 3314340, "node_id": "MDQ6VXNlcjMzMTQzNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/3314340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F001", "html_url": "https://github.com/F001", "followers_url": "https://api.github.com/users/F001/followers", "following_url": "https://api.github.com/users/F001/following{/other_user}", "gists_url": "https://api.github.com/users/F001/gists{/gist_id}", "starred_url": "https://api.github.com/users/F001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F001/subscriptions", "organizations_url": "https://api.github.com/users/F001/orgs", "repos_url": "https://api.github.com/users/F001/repos", "events_url": "https://api.github.com/users/F001/events{/privacy}", "received_events_url": "https://api.github.com/users/F001/received_events", "type": "User", "site_admin": false}, "committer": {"login": "F001", "id": 3314340, "node_id": "MDQ6VXNlcjMzMTQzNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/3314340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F001", "html_url": "https://github.com/F001", "followers_url": "https://api.github.com/users/F001/followers", "following_url": "https://api.github.com/users/F001/following{/other_user}", "gists_url": "https://api.github.com/users/F001/gists{/gist_id}", "starred_url": "https://api.github.com/users/F001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F001/subscriptions", "organizations_url": "https://api.github.com/users/F001/orgs", "repos_url": "https://api.github.com/users/F001/repos", "events_url": "https://api.github.com/users/F001/events{/privacy}", "received_events_url": "https://api.github.com/users/F001/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a039f68f79798947009766c70a8956108d3f228", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a039f68f79798947009766c70a8956108d3f228", "html_url": "https://github.com/rust-lang/rust/commit/5a039f68f79798947009766c70a8956108d3f228"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "46bf23cc21053889da189a8c29780bb445c252a1", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b3570db09486ebf1352f799678f08cc647988689/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3570db09486ebf1352f799678f08cc647988689/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=b3570db09486ebf1352f799678f08cc647988689", "patch": "@@ -500,21 +500,21 @@ declare_lint! {\n     \"using `x.extend(s.chars())` where s is a `&str` or `String`\"\n }\n \n-/// **What it does:** Checks for the use of `.cloned().collect()` on slice to create a Vec.\n+/// **What it does:** Checks for the use of `.cloned().collect()` on slice to create a `Vec`.\n ///\n-/// **Why is this bad?** `.to_owned()` is clearer\n+/// **Why is this bad?** `.to_vec()` is clearer\n ///\n /// **Known problems:** None.\n ///\n /// **Example:**\n /// ```rust\n /// let s = [1,2,3,4,5];\n-/// let s2 : Vec<isize> = s.iter().cloned().collect();\n+/// let s2 : Vec<isize> = s[..].iter().cloned().collect();\n /// ```\n-/// The correct use would be:\n+/// The better use would be:\n /// ```rust\n /// let s = [1,2,3,4,5];\n-/// let s2 : Vec<isize> = s.to_owned();\n+/// let s2 : Vec<isize> = s.to_vec();\n /// ```\n declare_lint! {\n     pub ITER_CLONED_COLLECT,\n@@ -908,8 +908,7 @@ fn lint_iter_cloned_collect(cx: &LateContext, expr: &hir::Expr, iter_args: &[hir\n         span_lint(cx,\n                   ITER_CLONED_COLLECT,\n                   expr.span,\n-                  \"called `cloned().collect()` on a slice to create a `Vec`. This is more succinctly expressed by \\\n-                  calling `to_owned(x)`\");\n+                  \"called `cloned().collect()` on a slice to create a `Vec`. Calling `to_vec()` is both faster and more readable\");\n     }\n }\n "}, {"sha": "e1cd7ae38ea49a89ba47b27beff6e94819a7e8a7", "filename": "tests/ui/methods.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b3570db09486ebf1352f799678f08cc647988689/tests%2Fui%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3570db09486ebf1352f799678f08cc647988689/tests%2Fui%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.rs?ref=b3570db09486ebf1352f799678f08cc647988689", "patch": "@@ -693,4 +693,7 @@ fn temporary_cstring() {\n fn iter_clone_collect() {\n     let v = [1,2,3,4,5];\n     let v2 : Vec<isize> = v.iter().cloned().collect();\n+\n+    let v3 : HashSet<isize> = v.iter().cloned().collect();\n+    let v4 : VecDeque<isize> = v.iter().cloned().collect();\n }"}, {"sha": "da4f5c3f8074efa6dab42d9b0d90e1c077bed6ee", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3570db09486ebf1352f799678f08cc647988689/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3570db09486ebf1352f799678f08cc647988689/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=b3570db09486ebf1352f799678f08cc647988689", "patch": "@@ -950,7 +950,7 @@ help: assign the `CString` to a variable to extend its lifetime\n 687 |     CString::new(\"foo\").unwrap().as_ptr();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: called `cloned().collect()` on a slice to create a `Vec`. This is more succinctly expressed by calling `to_owned(x)`\n+warning: called `cloned().collect()` on a slice to create a `Vec`. Calling `to_vec()` is both faster and more readable\n    --> $DIR/methods.rs:695:27\n     |\n 695 |     let v2 : Vec<isize> = v.iter().cloned().collect();"}]}