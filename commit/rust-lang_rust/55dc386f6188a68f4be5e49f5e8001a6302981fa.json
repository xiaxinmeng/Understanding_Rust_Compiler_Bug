{"sha": "55dc386f6188a68f4be5e49f5e8001a6302981fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ZGMzODZmNjE4OGE2OGY0YmU1ZTQ5ZjVlODAwMWE2MzAyOTgxZmE=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-03-08T08:41:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-08T08:41:42Z"}, "message": "Rollup merge of #58369 - nox:sync-hash-map-entry, r=Amanieu\n\nMake the Entry API of HashMap<K, V> Sync and Send\n\nFixes #45219", "tree": {"sha": "1694084d8337874eb95c5933a782c5697c9dc874", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1694084d8337874eb95c5933a782c5697c9dc874"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55dc386f6188a68f4be5e49f5e8001a6302981fa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcgirGCRBK7hj4Ov3rIwAAdHIIALD/WivAdmrFEwlzlgLs/z4l\nfTW/Q1HsgvkX+RT+3Dw2JEgAGYrbcy8Xzk4tJuhEICf8e+rgwSzCYuoQD9I8fsum\neWWMyNZ2Mpk6WYHvfO+7QHV4lvfHhIBXvzA7VWY86NM0+enF3kf+IgzYJS/x0na4\n9OSOiUxqy32eAg2sntKG3jI3us+Ls2Z0+N3zHxBTaThWsAL9m2k2ciBlJEBCblgq\n25w5EYjRmxZlzgrvN+4+oWY8g6w/zC7UC4McwyxcYq/nB5Lt+BjbhC43Tz1uQDJw\nbLcIS6kdcKdaKmxC//WoIGq3rbNPyof5K98SGSdh7SON0y/QfGWJVaBJr0ECv0s=\n=5xxG\n-----END PGP SIGNATURE-----\n", "payload": "tree 1694084d8337874eb95c5933a782c5697c9dc874\nparent bf7b50254ee7b9fb61c000420084d7929adba66d\nparent 1fec8c28353321048447465506dc68ab3a6c335e\nauthor Pietro Albini <pietro@pietroalbini.org> 1552034502 +0100\ncommitter GitHub <noreply@github.com> 1552034502 +0100\n\nRollup merge of #58369 - nox:sync-hash-map-entry, r=Amanieu\n\nMake the Entry API of HashMap<K, V> Sync and Send\n\nFixes #45219\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55dc386f6188a68f4be5e49f5e8001a6302981fa", "html_url": "https://github.com/rust-lang/rust/commit/55dc386f6188a68f4be5e49f5e8001a6302981fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55dc386f6188a68f4be5e49f5e8001a6302981fa/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf7b50254ee7b9fb61c000420084d7929adba66d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf7b50254ee7b9fb61c000420084d7929adba66d", "html_url": "https://github.com/rust-lang/rust/commit/bf7b50254ee7b9fb61c000420084d7929adba66d"}, {"sha": "1fec8c28353321048447465506dc68ab3a6c335e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fec8c28353321048447465506dc68ab3a6c335e", "html_url": "https://github.com/rust-lang/rust/commit/1fec8c28353321048447465506dc68ab3a6c335e"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "928de29b297fced40874c6617baec89b206c4d63", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/55dc386f6188a68f4be5e49f5e8001a6302981fa/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55dc386f6188a68f4be5e49f5e8001a6302981fa/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=55dc386f6188a68f4be5e49f5e8001a6302981fa", "patch": "@@ -2341,6 +2341,11 @@ pub struct OccupiedEntry<'a, K: 'a, V: 'a> {\n     elem: FullBucket<K, V, &'a mut RawTable<K, V>>,\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+unsafe impl<'a, K: 'a + Send, V: 'a + Send> Send for OccupiedEntry<'a, K, V> {}\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+unsafe impl<'a, K: 'a + Sync, V: 'a + Sync> Sync for OccupiedEntry<'a, K, V> {}\n+\n #[stable(feature= \"debug_hash_map\", since = \"1.12.0\")]\n impl<K: Debug, V: Debug> Debug for OccupiedEntry<'_, K, V> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n@@ -2362,6 +2367,11 @@ pub struct VacantEntry<'a, K: 'a, V: 'a> {\n     elem: VacantEntryState<K, V, &'a mut RawTable<K, V>>,\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+unsafe impl<'a, K: 'a + Send, V: 'a + Send> Send for VacantEntry<'a, K, V> {}\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+unsafe impl<'a, K: 'a + Sync, V: 'a + Sync> Sync for VacantEntry<'a, K, V> {}\n+\n #[stable(feature= \"debug_hash_map\", since = \"1.12.0\")]\n impl<K: Debug, V> Debug for VacantEntry<'_, K, V> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {"}, {"sha": "fd53bb607f79d46bf7d1d5c18d8e3db769371b8a", "filename": "src/test/run-pass/threads-sendsync/sync-send-iterators-in-libcollections.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55dc386f6188a68f4be5e49f5e8001a6302981fa/src%2Ftest%2Frun-pass%2Fthreads-sendsync%2Fsync-send-iterators-in-libcollections.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55dc386f6188a68f4be5e49f5e8001a6302981fa/src%2Ftest%2Frun-pass%2Fthreads-sendsync%2Fsync-send-iterators-in-libcollections.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fthreads-sendsync%2Fsync-send-iterators-in-libcollections.rs?ref=55dc386f6188a68f4be5e49f5e8001a6302981fa", "patch": "@@ -53,6 +53,7 @@ fn main() {\n     is_sync_send!(BTreeSet::<usize>::new(), union(&BTreeSet::<usize>::new()));\n \n     all_sync_send!(HashMap::<usize, usize>::new(), iter, iter_mut, drain, into_iter, keys, values);\n+    is_sync_send!(HashMap::<usize, usize>::new(), entry(0));\n     all_sync_send!(HashSet::<usize>::new(), iter, drain, into_iter);\n     is_sync_send!(HashSet::<usize>::new(), difference(&HashSet::<usize>::new()));\n     is_sync_send!(HashSet::<usize>::new(), symmetric_difference(&HashSet::<usize>::new()));"}]}