{"sha": "4aa4a8f776d9ab3f0110f74f85cc8313b9e4d604", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhYTRhOGY3NzZkOWFiM2YwMTEwZjc0Zjg1Y2M4MzEzYjllNGQ2MDQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-12T00:17:34Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-12T00:17:34Z"}, "message": "Minor cleanup in parse_assoc_expr_with.", "tree": {"sha": "4037207ed7360fb008eaf5cf4056a3ded73e87e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4037207ed7360fb008eaf5cf4056a3ded73e87e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4aa4a8f776d9ab3f0110f74f85cc8313b9e4d604", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4aa4a8f776d9ab3f0110f74f85cc8313b9e4d604", "html_url": "https://github.com/rust-lang/rust/commit/4aa4a8f776d9ab3f0110f74f85cc8313b9e4d604", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4aa4a8f776d9ab3f0110f74f85cc8313b9e4d604/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b680b66dddf0d4ea4286c1ed921ac48511937923", "url": "https://api.github.com/repos/rust-lang/rust/commits/b680b66dddf0d4ea4286c1ed921ac48511937923", "html_url": "https://github.com/rust-lang/rust/commit/b680b66dddf0d4ea4286c1ed921ac48511937923"}], "stats": {"total": 38, "additions": 14, "deletions": 24}, "files": [{"sha": "0e2e4eceabf4478e4bec2a88ac91facd3e970680", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 14, "deletions": 24, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/4aa4a8f776d9ab3f0110f74f85cc8313b9e4d604/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4aa4a8f776d9ab3f0110f74f85cc8313b9e4d604/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=4aa4a8f776d9ab3f0110f74f85cc8313b9e4d604", "patch": "@@ -3573,7 +3573,8 @@ impl<'a> Parser<'a> {\n             } else {\n                 self.restrictions\n             };\n-            if op.precedence() < min_prec {\n+            let prec = op.precedence();\n+            if prec < min_prec {\n                 break;\n             }\n             // Check for deprecated `...` syntax\n@@ -3614,8 +3615,7 @@ impl<'a> Parser<'a> {\n                 // We have 2 alternatives here: `x..y`/`x..=y` and `x..`/`x..=` The other\n                 // two variants are handled with `parse_prefix_range_expr` call above.\n                 let rhs = if self.is_at_start_of_range_notation_rhs() {\n-                    Some(self.parse_assoc_expr_with(op.precedence() + 1,\n-                                                    LhsExpr::NotYetParsed)?)\n+                    Some(self.parse_assoc_expr_with(prec + 1, LhsExpr::NotYetParsed)?)\n                 } else {\n                     None\n                 };\n@@ -3635,28 +3635,18 @@ impl<'a> Parser<'a> {\n                 break\n             }\n \n-            let rhs = match op.fixity() {\n-                Fixity::Right => self.with_res(\n-                    restrictions - Restrictions::STMT_EXPR,\n-                    |this| {\n-                        this.parse_assoc_expr_with(op.precedence(),\n-                            LhsExpr::NotYetParsed)\n-                }),\n-                Fixity::Left => self.with_res(\n-                    restrictions - Restrictions::STMT_EXPR,\n-                    |this| {\n-                        this.parse_assoc_expr_with(op.precedence() + 1,\n-                            LhsExpr::NotYetParsed)\n-                }),\n+            let fixity = op.fixity();\n+            let prec_adjustment = match fixity {\n+                Fixity::Right => 0,\n+                Fixity::Left => 1,\n                 // We currently have no non-associative operators that are not handled above by\n                 // the special cases. The code is here only for future convenience.\n-                Fixity::None => self.with_res(\n-                    restrictions - Restrictions::STMT_EXPR,\n-                    |this| {\n-                        this.parse_assoc_expr_with(op.precedence() + 1,\n-                            LhsExpr::NotYetParsed)\n-                }),\n-            }?;\n+                Fixity::None => 1,\n+            };\n+            let rhs = self.with_res(\n+                restrictions - Restrictions::STMT_EXPR,\n+                |this| this.parse_assoc_expr_with(prec + prec_adjustment, LhsExpr::NotYetParsed)\n+            )?;\n \n             // Make sure that the span of the parent node is larger than the span of lhs and rhs,\n             // including the attributes.\n@@ -3702,7 +3692,7 @@ impl<'a> Parser<'a> {\n                 }\n             };\n \n-            if op.fixity() == Fixity::None { break }\n+            if let Fixity::None = fixity { break }\n         }\n         Ok(lhs)\n     }"}]}