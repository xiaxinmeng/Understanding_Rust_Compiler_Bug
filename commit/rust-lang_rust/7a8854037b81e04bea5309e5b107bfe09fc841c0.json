{"sha": "7a8854037b81e04bea5309e5b107bfe09fc841c0", "node_id": "C_kwDOAAsO6NoAKDdhODg1NDAzN2I4MWUwNGJlYTUzMDllNWIxMDdiZmUwOWZjODQxYzA", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-02T19:07:31Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-02T19:54:39Z"}, "message": "Add example to opaque_hidden_inferred_bound lint", "tree": {"sha": "017f2cd3883091c105c39f4f29e3cf77a1720cfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/017f2cd3883091c105c39f4f29e3cf77a1720cfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a8854037b81e04bea5309e5b107bfe09fc841c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a8854037b81e04bea5309e5b107bfe09fc841c0", "html_url": "https://github.com/rust-lang/rust/commit/7a8854037b81e04bea5309e5b107bfe09fc841c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a8854037b81e04bea5309e5b107bfe09fc841c0/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "426424b3200022eba361e171ba84be7c1e7cc837", "url": "https://api.github.com/repos/rust-lang/rust/commits/426424b3200022eba361e171ba84be7c1e7cc837", "html_url": "https://github.com/rust-lang/rust/commit/426424b3200022eba361e171ba84be7c1e7cc837"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "d8ce20db37ce9cfe462335b92d6520a11ef9094a", "filename": "compiler/rustc_lint/src/opaque_hidden_inferred_bound.rs", "status": "modified", "additions": 37, "deletions": 6, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/7a8854037b81e04bea5309e5b107bfe09fc841c0/compiler%2Frustc_lint%2Fsrc%2Fopaque_hidden_inferred_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a8854037b81e04bea5309e5b107bfe09fc841c0/compiler%2Frustc_lint%2Fsrc%2Fopaque_hidden_inferred_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fopaque_hidden_inferred_bound.rs?ref=7a8854037b81e04bea5309e5b107bfe09fc841c0", "patch": "@@ -11,13 +11,44 @@ use crate::{LateContext, LateLintPass, LintContext};\n declare_lint! {\n     /// The `opaque_hidden_inferred_bound` lint detects cases in which nested\n     /// `impl Trait` in associated type bounds are not written generally enough\n-    /// to satisfy the bounds of the associated type. This functionality was\n-    /// removed in #97346, but then rolled back in #99860 because it was made\n-    /// into a hard error too quickly.\n+    /// to satisfy the bounds of the associated type.\n     ///\n-    /// We plan on reintroducing this as a hard error, but in the mean time, this\n-    /// lint serves to warn and suggest fixes for any use-cases which rely on this\n-    /// behavior.\n+    /// ### Explanation\n+    ///\n+    /// This functionality was removed in #97346, but then rolled back in #99860\n+    /// because it caused regressions.\n+    ///\n+    /// We plan on reintroducing this as a hard error, but in the mean time,\n+    /// this lint serves to warn and suggest fixes for any use-cases which rely\n+    /// on this behavior.\n+    ///\n+    /// ### Example\n+    ///\n+    /// ```\n+    /// trait Trait {\n+    ///     type Assoc: Send;\n+    /// }\n+    ///\n+    /// struct Struct;\n+    ///\n+    /// impl Trait for Struct {\n+    ///     type Assoc = i32;\n+    /// }\n+    ///\n+    /// fn test() -> impl Trait<Assoc = impl Sized> {\n+    ///     Struct\n+    /// }\n+    /// ```\n+    ///\n+    /// {{produces}}\n+    ///\n+    /// In this example, `test` declares that the associated type `Assoc` for\n+    /// `impl Trait` is `impl Sized`, which does not satisfy the `Send` bound\n+    /// on the associated type.\n+    ///\n+    /// Although the hidden type, `i32` does satisfy this bound, we do not\n+    /// consider the return type to be well-formed with this lint. It can be\n+    /// fixed by changing `impl Sized` into `impl Sized + Send`.\n     pub OPAQUE_HIDDEN_INFERRED_BOUND,\n     Warn,\n     \"detects the use of nested `impl Trait` types in associated type bounds that are not general enough\""}]}