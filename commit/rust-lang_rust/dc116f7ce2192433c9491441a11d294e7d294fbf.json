{"sha": "dc116f7ce2192433c9491441a11d294e7d294fbf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMTE2ZjdjZTIxOTI0MzNjOTQ5MTQ0MWExMWQyOTRlN2QyOTRmYmY=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-07T18:50:26Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-07T18:50:26Z"}, "message": "Fix return type of Substitution::interned", "tree": {"sha": "2d80f23bb35ce8f19a40e85260dc621a830c20bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d80f23bb35ce8f19a40e85260dc621a830c20bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc116f7ce2192433c9491441a11d294e7d294fbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc116f7ce2192433c9491441a11d294e7d294fbf", "html_url": "https://github.com/rust-lang/rust/commit/dc116f7ce2192433c9491441a11d294e7d294fbf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc116f7ce2192433c9491441a11d294e7d294fbf/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be0084a0bc903544835d5c87df9eb9ce29a191d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/be0084a0bc903544835d5c87df9eb9ce29a191d1", "html_url": "https://github.com/rust-lang/rust/commit/be0084a0bc903544835d5c87df9eb9ce29a191d1"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e0ca96c6d20600c60de221e422715f66e73d92c8", "filename": "crates/hir_ty/src/display.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc116f7ce2192433c9491441a11d294e7d294fbf/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc116f7ce2192433c9491441a11d294e7d294fbf/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs?ref=dc116f7ce2192433c9491441a11d294e7d294fbf", "patch": "@@ -745,7 +745,7 @@ fn write_bounds_like_dyn_trait(\n                 // existential) here, which is the only thing that's\n                 // possible in actual Rust, and hence don't print it\n                 write!(f, \"{}\", f.db.trait_data(trait_).name)?;\n-                if let [_, params @ ..] = &*trait_ref.substitution.interned() {\n+                if let [_, params @ ..] = &*trait_ref.substitution.interned().as_slice() {\n                     if is_fn_trait {\n                         if let Some(args) =\n                             params.first().and_then(|it| it.assert_ty_ref(&Interner).as_tuple())"}, {"sha": "a41e8e116691b244d08ab304b35a9749388873fd", "filename": "crates/hir_ty/src/infer/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc116f7ce2192433c9491441a11d294e7d294fbf/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc116f7ce2192433c9491441a11d294e7d294fbf/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs?ref=dc116f7ce2192433c9491441a11d294e7d294fbf", "patch": "@@ -122,7 +122,7 @@ impl<'a> InferenceContext<'a> {\n         let ty = match &body[pat] {\n             &Pat::Tuple { ref args, ellipsis } => {\n                 let expectations = match expected.as_tuple() {\n-                    Some(parameters) => &*parameters.interned(),\n+                    Some(parameters) => &*parameters.interned().as_slice(),\n                     _ => &[],\n                 };\n "}, {"sha": "89adad10848a0458da1ca7802df1db78a83bcb4e", "filename": "crates/hir_ty/src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc116f7ce2192433c9491441a11d294e7d294fbf/crates%2Fhir_ty%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc116f7ce2192433c9491441a11d294e7d294fbf/crates%2Fhir_ty%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftypes.rs?ref=dc116f7ce2192433c9491441a11d294e7d294fbf", "patch": "@@ -282,7 +282,7 @@ impl GenericArg {\n pub struct Substitution(SmallVec<[GenericArg; 2]>);\n \n impl Substitution {\n-    pub fn interned(&self) -> &[GenericArg] {\n+    pub fn interned(&self) -> &SmallVec<[GenericArg; 2]> {\n         &self.0\n     }\n "}]}