{"sha": "12804230a25d4f996f4738de20c161d95df4933b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyODA0MjMwYTI1ZDRmOTk2ZjQ3MzhkZTIwYzE2MWQ5NWRmNDkzM2I=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-07-30T17:04:16Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-07-30T17:05:34Z"}, "message": "Properly find owner of closure in THIR unsafeck\n\nCo-authored-by: FabianWolff <fabian.wolff@alumni.ethz.ch>", "tree": {"sha": "5563ec76b0c2e0caa03d675f7b3177fbe3e84514", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5563ec76b0c2e0caa03d675f7b3177fbe3e84514"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12804230a25d4f996f4738de20c161d95df4933b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12804230a25d4f996f4738de20c161d95df4933b", "html_url": "https://github.com/rust-lang/rust/commit/12804230a25d4f996f4738de20c161d95df4933b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12804230a25d4f996f4738de20c161d95df4933b/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71a6c7c80398143a67e27b01412f4b2ec12bde8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/71a6c7c80398143a67e27b01412f4b2ec12bde8b", "html_url": "https://github.com/rust-lang/rust/commit/71a6c7c80398143a67e27b01412f4b2ec12bde8b"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "d27ce6ec81a90214d190167c3a652f8ab434c574", "filename": "compiler/rustc_mir_build/src/check_unsafety.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/12804230a25d4f996f4738de20c161d95df4933b/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12804230a25d4f996f4738de20c161d95df4933b/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs?ref=12804230a25d4f996f4738de20c161d95df4933b", "patch": "@@ -599,13 +599,10 @@ pub fn check_unsafety<'tcx>(tcx: TyCtxt<'tcx>, def: ty::WithOptConstParam<LocalD\n \n     // Closures are handled by their owner, if it has a body\n     if tcx.is_closure(def.did.to_def_id()) {\n-        let owner = tcx.hir().local_def_id_to_hir_id(def.did).owner;\n-        let owner_hir_id = tcx.hir().local_def_id_to_hir_id(owner);\n-\n-        if tcx.hir().maybe_body_owned_by(owner_hir_id).is_some() {\n-            tcx.ensure().thir_check_unsafety(owner);\n-            return;\n-        }\n+        let hir = tcx.hir();\n+        let owner = hir.enclosing_body_owner(hir.local_def_id_to_hir_id(def.did));\n+        tcx.ensure().thir_check_unsafety(hir.local_def_id(owner));\n+        return;\n     }\n \n     let (thir, expr) = tcx.thir_body(def);"}, {"sha": "99e40ba4b4c04b0fe0018616f8fbcb8037f55df9", "filename": "src/test/ui/unsafe/issue-87414-query-cycle.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/12804230a25d4f996f4738de20c161d95df4933b/src%2Ftest%2Fui%2Funsafe%2Fissue-87414-query-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12804230a25d4f996f4738de20c161d95df4933b/src%2Ftest%2Fui%2Funsafe%2Fissue-87414-query-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Fissue-87414-query-cycle.rs?ref=12804230a25d4f996f4738de20c161d95df4933b", "patch": "@@ -0,0 +1,15 @@\n+// Regression test for #87414.\n+\n+// check-pass\n+// compile-flags: -Zthir-unsafeck\n+\n+fn bad<T>() -> Box<dyn Iterator<Item = [(); { |x: u32| { x }; 4 }]>> { todo!() }\n+\n+fn foo() -> [(); { |x: u32| { x }; 4 }] { todo!() }\n+fn bar() { let _: [(); { |x: u32| { x }; 4 }]; }\n+\n+// This one should not cause any errors either:\n+unsafe fn unsf() {}\n+fn bad2<T>() -> Box<dyn Iterator<Item = [(); { unsafe { || { unsf() } }; 4 }]>> { todo!() }\n+\n+fn main() {}"}]}