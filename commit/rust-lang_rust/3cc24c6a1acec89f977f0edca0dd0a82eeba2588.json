{"sha": "3cc24c6a1acec89f977f0edca0dd0a82eeba2588", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjYzI0YzZhMWFjZWM4OWY5NzdmMGVkY2EwZGQwYTgyZWViYTI1ODg=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-04-13T23:42:25Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-04-13T23:42:25Z"}, "message": "Merge pull request #928 from matklad/patch-1\n\ndon't silence error unnecessary", "tree": {"sha": "0a9727f1a8f1e33fb898e7507325064c67e1b815", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a9727f1a8f1e33fb898e7507325064c67e1b815"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cc24c6a1acec89f977f0edca0dd0a82eeba2588", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cc24c6a1acec89f977f0edca0dd0a82eeba2588", "html_url": "https://github.com/rust-lang/rust/commit/3cc24c6a1acec89f977f0edca0dd0a82eeba2588", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cc24c6a1acec89f977f0edca0dd0a82eeba2588/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14775eb046b245525c28815033cb85ac646f54c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/14775eb046b245525c28815033cb85ac646f54c6", "html_url": "https://github.com/rust-lang/rust/commit/14775eb046b245525c28815033cb85ac646f54c6"}, {"sha": "b1efb3a39e23b4ccbc4feef0a30c02441a2384e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1efb3a39e23b4ccbc4feef0a30c02441a2384e9", "html_url": "https://github.com/rust-lang/rust/commit/b1efb3a39e23b4ccbc4feef0a30c02441a2384e9"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "d0ff4be72415ebef89cdf84666586358765dd650", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3cc24c6a1acec89f977f0edca0dd0a82eeba2588/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cc24c6a1acec89f977f0edca0dd0a82eeba2588/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=3cc24c6a1acec89f977f0edca0dd0a82eeba2588", "patch": "@@ -422,11 +422,7 @@ pub enum Input {\n \n pub fn run(input: Input, config: &Config) {\n     let (file_map, report) = format_input(input, config);\n-\n-    let ignore_errors = config.write_mode == WriteMode::Plain;\n-    if !ignore_errors {\n-        msg!(\"{}\", report);\n-    }\n+    msg!(\"{}\", report);\n \n     let mut out = stdout();\n     let write_result = filemap::write_all_files(&file_map, &mut out, config);"}]}