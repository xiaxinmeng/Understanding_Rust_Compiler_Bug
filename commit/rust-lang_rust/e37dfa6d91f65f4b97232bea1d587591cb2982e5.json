{"sha": "e37dfa6d91f65f4b97232bea1d587591cb2982e5", "node_id": "C_kwDOAAsO6NoAKGUzN2RmYTZkOTFmNjVmNGI5NzIzMmJlYTFkNTg3NTkxY2IyOTgyZTU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-30T08:27:41Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-30T08:27:51Z"}, "message": "ui_test: support multiple filters", "tree": {"sha": "7ef5784e2eb71ccaaebca44b85b9502f53282b5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ef5784e2eb71ccaaebca44b85b9502f53282b5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e37dfa6d91f65f4b97232bea1d587591cb2982e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e37dfa6d91f65f4b97232bea1d587591cb2982e5", "html_url": "https://github.com/rust-lang/rust/commit/e37dfa6d91f65f4b97232bea1d587591cb2982e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e37dfa6d91f65f4b97232bea1d587591cb2982e5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "065ff89e33b67b3527fcdd56cf8b432e593e32d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/065ff89e33b67b3527fcdd56cf8b432e593e32d4", "html_url": "https://github.com/rust-lang/rust/commit/065ff89e33b67b3527fcdd56cf8b432e593e32d4"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "307272264275fdfcb178a676b049f5e0611e344e", "filename": "tests/compiletest.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e37dfa6d91f65f4b97232bea1d587591cb2982e5/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37dfa6d91f65f4b97232bea1d587591cb2982e5/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=e37dfa6d91f65f4b97232bea1d587591cb2982e5", "patch": "@@ -47,7 +47,8 @@ fn run_tests(mode: Mode, path: &str, target: Option<String>) {\n         (true, true) => panic!(\"cannot use MIRI_BLESS and MIRI_SKIP_UI_CHECKS at the same time\"),\n     };\n \n-    let path_filter = std::env::args().skip(1).next();\n+    // Pass on all arguments as filters.\n+    let path_filter = std::env::args().skip(1);\n \n     let config = Config {\n         args: flags,\n@@ -56,7 +57,7 @@ fn run_tests(mode: Mode, path: &str, target: Option<String>) {\n         stdout_filters: STDOUT.clone(),\n         root_dir: PathBuf::from(path),\n         mode,\n-        path_filter,\n+        path_filter: path_filter.collect(),\n         program: miri_path(),\n         output_conflict_handling,\n     };"}, {"sha": "866a9fe46ace7da829936cf3433774014a0fe45a", "filename": "ui_test/src/lib.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e37dfa6d91f65f4b97232bea1d587591cb2982e5/ui_test%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37dfa6d91f65f4b97232bea1d587591cb2982e5/ui_test%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Flib.rs?ref=e37dfa6d91f65f4b97232bea1d587591cb2982e5", "patch": "@@ -30,8 +30,8 @@ pub struct Config {\n     pub mode: Mode,\n     pub program: PathBuf,\n     pub output_conflict_handling: OutputConflictHandling,\n-    /// Only run tests with this string in their path/name\n-    pub path_filter: Option<String>,\n+    /// Only run tests with one of these strings in their path/name\n+    pub path_filter: Vec<String>,\n }\n \n #[derive(Debug)]\n@@ -77,12 +77,13 @@ pub fn run_tests(config: Config) {\n                     if !path.extension().map(|ext| ext == \"rs\").unwrap_or(false) {\n                         continue;\n                     }\n-                    if let Some(path_filter) = &config.path_filter {\n-                        if !path.display().to_string().contains(path_filter) {\n+                    if !config.path_filter.is_empty() {\n+                        let path_display = path.display().to_string();\n+                        if !config.path_filter.iter().any(|filter| path_display.contains(filter)) {\n                             ignored.fetch_add(1, Ordering::Relaxed);\n                             eprintln!(\n                                 \"{} .. {}\",\n-                                path.display(),\n+                                path_display,\n                                 \"ignored (command line filter)\".yellow()\n                             );\n                             continue;"}, {"sha": "b2544e68ada10b747fa05ca2a72bd03a2299260b", "filename": "ui_test/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e37dfa6d91f65f4b97232bea1d587591cb2982e5/ui_test%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37dfa6d91f65f4b97232bea1d587591cb2982e5/ui_test%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Ftests.rs?ref=e37dfa6d91f65f4b97232bea1d587591cb2982e5", "patch": "@@ -10,7 +10,7 @@ fn config() -> Config {\n         stdout_filters: vec![],\n         root_dir: PathBuf::from(\".\"),\n         mode: Mode::Fail,\n-        path_filter: None,\n+        path_filter: vec![],\n         program: PathBuf::from(\"cake\"),\n         output_conflict_handling: OutputConflictHandling::Error,\n     }"}]}