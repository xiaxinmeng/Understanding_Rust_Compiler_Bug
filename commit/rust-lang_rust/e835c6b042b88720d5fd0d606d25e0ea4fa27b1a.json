{"sha": "e835c6b042b88720d5fd0d606d25e0ea4fa27b1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4MzVjNmIwNDJiODg3MjBkNWZkMGQ2MDZkMjVlMGVhNGZhMjdiMWE=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-08-29T12:28:49Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-08-29T12:55:59Z"}, "message": "rt: remove a series of unfortunate casts.", "tree": {"sha": "3d31195c583a6fc57fe494ac31e7aa4f551412d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d31195c583a6fc57fe494ac31e7aa4f551412d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e835c6b042b88720d5fd0d606d25e0ea4fa27b1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e835c6b042b88720d5fd0d606d25e0ea4fa27b1a", "html_url": "https://github.com/rust-lang/rust/commit/e835c6b042b88720d5fd0d606d25e0ea4fa27b1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e835c6b042b88720d5fd0d606d25e0ea4fa27b1a/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "440f1e2dadaf7c56575b65aa13c30abf9d5cec26", "url": "https://api.github.com/repos/rust-lang/rust/commits/440f1e2dadaf7c56575b65aa13c30abf9d5cec26", "html_url": "https://github.com/rust-lang/rust/commit/440f1e2dadaf7c56575b65aa13c30abf9d5cec26"}], "stats": {"total": 19, "additions": 6, "deletions": 13}, "files": [{"sha": "3f9b7fc83df9822b618ff658f97db38f4cad4999", "filename": "src/libstd/rt/local_ptr.rs", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e835c6b042b88720d5fd0d606d25e0ea4fa27b1a/src%2Flibstd%2Frt%2Flocal_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e835c6b042b88720d5fd0d606d25e0ea4fa27b1a/src%2Flibstd%2Frt%2Flocal_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Flocal_ptr.rs?ref=e835c6b042b88720d5fd0d606d25e0ea4fa27b1a", "patch": "@@ -121,27 +121,20 @@ pub unsafe fn borrow<T>(f: &fn(&mut T)) {\n /// For the Scheduler pointer to be aliased\n pub unsafe fn unsafe_borrow<T>() -> *mut T {\n     let key = tls_key();\n-    let mut void_ptr: *mut c_void = tls::get(key);\n+    let void_ptr = tls::get(key);\n     if void_ptr.is_null() {\n         rtabort!(\"thread-local pointer is null. bogus!\");\n     }\n-    let ptr: *mut *mut c_void = &mut void_ptr;\n-    let ptr: *mut ~T = ptr as *mut ~T;\n-    let ptr: *mut T = &mut **ptr;\n-    return ptr;\n+    void_ptr as *mut T\n }\n \n pub unsafe fn try_unsafe_borrow<T>() -> Option<*mut T> {\n     let key = tls_key();\n-    let mut void_ptr: *mut c_void = tls::get(key);\n+    let void_ptr = tls::get(key);\n     if void_ptr.is_null() {\n-        return None;\n-    }\n-    {\n-        let ptr: *mut *mut c_void = &mut void_ptr;\n-        let ptr: *mut ~T = ptr as *mut ~T;\n-        let ptr: *mut T = &mut **ptr;\n-        return Some(ptr);\n+        None\n+    } else {\n+        Some(void_ptr as *mut T)\n     }\n }\n "}]}