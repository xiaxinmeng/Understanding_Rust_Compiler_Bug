{"sha": "dc83c846623c2d9c0ad31ebe769def34d8f1579f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjODNjODQ2NjIzYzJkOWMwYWQzMWViZTc2OWRlZjM0ZDhmMTU3OWY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-05-18T22:38:54Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-19T18:40:16Z"}, "message": "Add visit_fn_pre and visit_fn_post fields to visitors\n\nAdded visit_fn_pre and visit_fn_post fields that get applied to\nboth regular functions and methods.", "tree": {"sha": "694ce89788f2dab93b73dfd163730cd579ab0e2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/694ce89788f2dab93b73dfd163730cd579ab0e2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc83c846623c2d9c0ad31ebe769def34d8f1579f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc83c846623c2d9c0ad31ebe769def34d8f1579f", "html_url": "https://github.com/rust-lang/rust/commit/dc83c846623c2d9c0ad31ebe769def34d8f1579f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc83c846623c2d9c0ad31ebe769def34d8f1579f/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea1701de8c9ff1b2e5a92c07daa07d9d444d6c51", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea1701de8c9ff1b2e5a92c07daa07d9d444d6c51", "html_url": "https://github.com/rust-lang/rust/commit/ea1701de8c9ff1b2e5a92c07daa07d9d444d6c51"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "27e354273682763d4cf006c9a9953d75e78954fb", "filename": "src/comp/middle/walk.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/dc83c846623c2d9c0ad31ebe769def34d8f1579f/src%2Fcomp%2Fmiddle%2Fwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc83c846623c2d9c0ad31ebe769def34d8f1579f/src%2Fcomp%2Fmiddle%2Fwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fwalk.rs?ref=dc83c846623c2d9c0ad31ebe769def34d8f1579f", "patch": "@@ -31,7 +31,9 @@ type ast_visitor =\n         fn (&@ast::expr e)              visit_expr_pre,\n         fn (&@ast::expr e)              visit_expr_post,\n         fn (&@ast::ty t)                visit_ty_pre,\n-        fn (&@ast::ty t)                visit_ty_post);\n+        fn (&@ast::ty t)                visit_ty_post,\n+        fn (&ast::_fn f, &ast::def_id d_id) visit_fn_pre,\n+        fn (&ast::_fn f, &ast::def_id d_id)  visit_fn_post);\n \n fn walk_crate(&ast_visitor v, &ast::crate c) {\n     if (!v.keep_going()) { ret; }\n@@ -91,8 +93,8 @@ fn walk_item(&ast_visitor v, @ast::item i) {\n             walk_ty(v, t);\n             walk_expr(v, e);\n         }\n-        case (ast::item_fn(_, ?f, _, _, _)) {\n-            walk_fn(v, f);\n+        case (ast::item_fn(_, ?f, _, ?d, _)) {\n+            walk_fn(v, f, d);\n         }\n         case (ast::item_mod(_, ?m, _)) {\n             walk_mod(v, m);\n@@ -116,13 +118,13 @@ fn walk_item(&ast_visitor v, @ast::item i) {\n             }\n             for (@ast::method m in ob.methods) {\n                 v.visit_method_pre(m);\n-                walk_fn(v, m.node.meth);\n+                walk_fn(v, m.node.meth, m.node.id);\n                 v.visit_method_post(m);\n             }\n             alt (ob.dtor) {\n                 case (none[@ast::method]) {}\n                 case (some[@ast::method](?m)) {\n-                    walk_fn(v, m.node.meth);\n+                    walk_fn(v, m.node.meth, m.node.id);\n                 }\n             }\n         }\n@@ -227,10 +229,12 @@ fn walk_fn_decl(&ast_visitor v, &ast::fn_decl fd) {\n     walk_ty(v, fd.output);\n }\n \n-fn walk_fn(&ast_visitor v, &ast::_fn f) {\n+fn walk_fn(&ast_visitor v, &ast::_fn f, &ast::def_id d) {\n     if (!v.keep_going()) { ret; }\n+    v.visit_fn_pre(f, d);\n     walk_fn_decl(v, f.decl);\n     walk_block(v, f.body);\n+    v.visit_fn_post(f, d);\n }\n \n fn walk_block(&ast_visitor v, &ast::block b) {\n@@ -455,6 +459,7 @@ fn def_visit_arm(&ast::arm a) { }\n fn def_visit_decl(&@ast::decl d) { }\n fn def_visit_expr(&@ast::expr e) { }\n fn def_visit_ty(&@ast::ty t) { }\n+fn def_visit_fn(&ast::_fn f, &ast::def_id d) { }\n \n fn default_visitor() -> ast_visitor {\n \n@@ -472,6 +477,7 @@ fn default_visitor() -> ast_visitor {\n     auto d_visit_decl = def_visit_decl;\n     auto d_visit_expr = def_visit_expr;\n     auto d_visit_ty = def_visit_ty;\n+    auto d_visit_fn = def_visit_fn;\n \n     ret rec(keep_going = d_keep_going,\n             want_crate_directives = d_want_crate_directives,\n@@ -498,7 +504,9 @@ fn default_visitor() -> ast_visitor {\n             visit_expr_pre = d_visit_expr,\n             visit_expr_post = d_visit_expr,\n             visit_ty_pre = d_visit_ty,\n-            visit_ty_post = d_visit_ty);\n+            visit_ty_post = d_visit_ty,\n+            visit_fn_pre = d_visit_fn,\n+            visit_fn_post = d_visit_fn);\n }\n \n //"}]}