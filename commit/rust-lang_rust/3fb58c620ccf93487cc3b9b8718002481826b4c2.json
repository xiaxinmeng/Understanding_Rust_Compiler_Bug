{"sha": "3fb58c620ccf93487cc3b9b8718002481826b4c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmYjU4YzYyMGNjZjkzNDg3Y2MzYjliODcxODAwMjQ4MTgyNmI0YzI=", "commit": {"author": {"name": "Evgenii P", "email": "eupn@protonmail.com", "date": "2019-08-07T16:42:28Z"}, "committer": {"name": "Evgenii P", "email": "eupn@protonmail.com", "date": "2019-08-07T16:42:28Z"}, "message": "Add function parameters attributes", "tree": {"sha": "74bd7954df7861c40122f8b3e09f0d293252fc8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74bd7954df7861c40122f8b3e09f0d293252fc8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fb58c620ccf93487cc3b9b8718002481826b4c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fb58c620ccf93487cc3b9b8718002481826b4c2", "html_url": "https://github.com/rust-lang/rust/commit/3fb58c620ccf93487cc3b9b8718002481826b4c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fb58c620ccf93487cc3b9b8718002481826b4c2/comments", "author": {"login": "eupn", "id": 36292692, "node_id": "MDQ6VXNlcjM2MjkyNjky", "avatar_url": "https://avatars.githubusercontent.com/u/36292692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eupn", "html_url": "https://github.com/eupn", "followers_url": "https://api.github.com/users/eupn/followers", "following_url": "https://api.github.com/users/eupn/following{/other_user}", "gists_url": "https://api.github.com/users/eupn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eupn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eupn/subscriptions", "organizations_url": "https://api.github.com/users/eupn/orgs", "repos_url": "https://api.github.com/users/eupn/repos", "events_url": "https://api.github.com/users/eupn/events{/privacy}", "received_events_url": "https://api.github.com/users/eupn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eupn", "id": 36292692, "node_id": "MDQ6VXNlcjM2MjkyNjky", "avatar_url": "https://avatars.githubusercontent.com/u/36292692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eupn", "html_url": "https://github.com/eupn", "followers_url": "https://api.github.com/users/eupn/followers", "following_url": "https://api.github.com/users/eupn/following{/other_user}", "gists_url": "https://api.github.com/users/eupn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eupn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eupn/subscriptions", "organizations_url": "https://api.github.com/users/eupn/orgs", "repos_url": "https://api.github.com/users/eupn/repos", "events_url": "https://api.github.com/users/eupn/events{/privacy}", "received_events_url": "https://api.github.com/users/eupn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ea4ae680a2d3ce2da38cd7fc6c039e5d7d03171", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ea4ae680a2d3ce2da38cd7fc6c039e5d7d03171", "html_url": "https://github.com/rust-lang/rust/commit/9ea4ae680a2d3ce2da38cd7fc6c039e5d7d03171"}], "stats": {"total": 526, "additions": 505, "deletions": 21}, "files": [{"sha": "fce9dd218a83551fe81105c0bf6fb5ffee8414e5", "filename": "crates/ra_parser/src/grammar/params.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs?ref=3fb58c620ccf93487cc3b9b8718002481826b4c2", "patch": "@@ -5,12 +5,15 @@ use super::*;\n // fn b(x: i32) {}\n // fn c(x: i32, ) {}\n // fn d(x: i32, y: ()) {}\n+// fn g1(#[attr1] #[attr2] pat: Type) {}\n+// fn g2(#[attr1] x: u8) {}\n pub(super) fn param_list(p: &mut Parser) {\n     list_(p, Flavor::Normal)\n }\n \n // test param_list_opt_patterns\n // fn foo<F: FnMut(&mut Foo<'a>)>(){}\n+// fn foo<F: FnMut(#[attr] &mut Foo<'a>)>(){}\n pub(super) fn param_list_opt_patterns(p: &mut Parser) {\n     list_(p, Flavor::OptionalPattern)\n }\n@@ -41,9 +44,12 @@ fn list_(p: &mut Parser, flavor: Flavor) {\n     let m = p.start();\n     p.bump();\n     if flavor.type_required() {\n+        attributes::outer_attributes(p);\n         opt_self_param(p);\n     }\n     while !p.at(EOF) && !p.at(ket) && !(flavor.type_required() && p.at(T![...])) {\n+        attributes::outer_attributes(p);\n+\n         if !p.at_ts(VALUE_PARAMETER_FIRST) {\n             p.error(\"expected value parameter\");\n             break;\n@@ -55,6 +61,7 @@ fn list_(p: &mut Parser, flavor: Flavor) {\n     }\n     // test param_list_vararg\n     // extern \"C\" { fn printf(format: *const i8, ...) -> i32; }\n+    // extern \"C\" { fn printf(#[attr] format: *const i8, ...) -> i32; }\n     if flavor.type_required() {\n         p.eat(T![...]);\n     }\n@@ -84,6 +91,7 @@ fn value_parameter(p: &mut Parser, flavor: Flavor) {\n             // test trait_fn_placeholder_parameter\n             // trait Foo {\n             //     fn bar(_: u64, mut x: i32);\n+            //     fn bar(#[attr] _: u64, #[attr] mut x: i32);\n             // }\n             if (la0 == IDENT || la0 == T![_]) && la1 == T![:]\n                 || la0 == T![mut] && la1 == IDENT && la2 == T![:]\n@@ -107,6 +115,12 @@ fn value_parameter(p: &mut Parser, flavor: Flavor) {\n //     fn c(&'a self,) {}\n //     fn d(&'a mut self, x: i32) {}\n //     fn e(mut self) {}\n+//     fn f(#[must_use] self) {}\n+//     fn g1(#[attr] self) {}\n+//     fn g2(#[attr] &self) {}\n+//     fn g3<'a>(#[attr] &mut self) {}\n+//     fn g4<'a>(#[attr] &'a self) {}\n+//     fn g5<'a>(#[attr] &'a mut self) {}\n // }\n fn opt_self_param(p: &mut Parser) {\n     let m;\n@@ -118,6 +132,8 @@ fn opt_self_param(p: &mut Parser) {\n         // impl S {\n         //     fn a(self: &Self) {}\n         //     fn b(mut self: Box<Self>) {}\n+        //     fn c(#[attr] self: Self) {}\n+        //     fn d(#[attr] self: Rc<Self>) {}\n         // }\n         if p.at(T![:]) {\n             types::ascription(p);"}, {"sha": "f322e1d84bdd34d2dbcc2ba319adf3385dfe4ee8", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=3fb58c620ccf93487cc3b9b8718002481826b4c2", "patch": "@@ -2013,6 +2013,7 @@ impl AstNode for Param {\n \n \n impl ast::TypeAscriptionOwner for Param {}\n+impl ast::AttrsOwner for Param {}\n impl Param {\n     pub fn pat(&self) -> Option<Pat> {\n         super::child_opt(self)\n@@ -2667,6 +2668,7 @@ impl AstNode for SelfParam {\n \n \n impl ast::TypeAscriptionOwner for SelfParam {}\n+impl ast::AttrsOwner for SelfParam {}\n impl SelfParam {}\n \n // SlicePat"}, {"sha": "f2c20573e81156d30b06a780ddc578ab7ded22db", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=3fb58c620ccf93487cc3b9b8718002481826b4c2", "patch": "@@ -642,12 +642,14 @@ Grammar(\n         \"SelfParam\": (\n             traits: [\n                 \"TypeAscriptionOwner\",\n+\t\t\t\t\"AttrsOwner\",\n             ]\n         ),\n         \"Param\": (\n             options: [ \"Pat\" ],\n             traits: [\n                 \"TypeAscriptionOwner\",\n+\t\t\t\t\"AttrsOwner\",\n             ]\n         ),\n         \"UseItem\": ("}, {"sha": "7811f52c0201deaf77a5432f21f4f18bf09c75af", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0006_self_param.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.rs?ref=3fb58c620ccf93487cc3b9b8718002481826b4c2", "patch": "@@ -4,4 +4,10 @@ impl S {\n     fn c(&'a self,) {}\n     fn d(&'a mut self, x: i32) {}\n     fn e(mut self) {}\n+    fn f(#[must_use] self) {}\n+    fn g1(#[attr] self) {}\n+    fn g2(#[attr] &self) {}\n+    fn g3<'a>(#[attr] &mut self) {}\n+    fn g4<'a>(#[attr] &'a self) {}\n+    fn g5<'a>(#[attr] &'a mut self) {}\n }"}, {"sha": "5c75b6c751bb322e5d55d6eaaf29a2b6f0104be1", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0006_self_param.txt", "status": "modified", "additions": 165, "deletions": 6, "changes": 171, "blob_url": "https://github.com/rust-lang/rust/blob/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.txt", "raw_url": "https://github.com/rust-lang/rust/raw/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.txt?ref=3fb58c620ccf93487cc3b9b8718002481826b4c2", "patch": "@@ -1,5 +1,5 @@\n-SOURCE_FILE@[0; 128)\n-  IMPL_BLOCK@[0; 127)\n+SOURCE_FILE@[0; 323)\n+  IMPL_BLOCK@[0; 322)\n     IMPL_KW@[0; 4) \"impl\"\n     WHITESPACE@[4; 5) \" \"\n     PATH_TYPE@[5; 6)\n@@ -8,7 +8,7 @@ SOURCE_FILE@[0; 128)\n           NAME_REF@[5; 6)\n             IDENT@[5; 6) \"S\"\n     WHITESPACE@[6; 7) \" \"\n-    ITEM_LIST@[7; 127)\n+    ITEM_LIST@[7; 322)\n       L_CURLY@[7; 8) \"{\"\n       WHITESPACE@[8; 13) \"\\n    \"\n       FN_DEF@[13; 26)\n@@ -111,6 +111,165 @@ SOURCE_FILE@[0; 128)\n         BLOCK@[123; 125)\n           L_CURLY@[123; 124) \"{\"\n           R_CURLY@[124; 125) \"}\"\n-      WHITESPACE@[125; 126) \"\\n\"\n-      R_CURLY@[126; 127) \"}\"\n-  WHITESPACE@[127; 128) \"\\n\"\n+      WHITESPACE@[125; 130) \"\\n    \"\n+      FN_DEF@[130; 155)\n+        FN_KW@[130; 132) \"fn\"\n+        WHITESPACE@[132; 133) \" \"\n+        NAME@[133; 134)\n+          IDENT@[133; 134) \"f\"\n+        PARAM_LIST@[134; 152)\n+          L_PAREN@[134; 135) \"(\"\n+          ATTR@[135; 146)\n+            POUND@[135; 136) \"#\"\n+            TOKEN_TREE@[136; 146)\n+              L_BRACK@[136; 137) \"[\"\n+              IDENT@[137; 145) \"must_use\"\n+              R_BRACK@[145; 146) \"]\"\n+          WHITESPACE@[146; 147) \" \"\n+          SELF_PARAM@[147; 151)\n+            SELF_KW@[147; 151) \"self\"\n+          R_PAREN@[151; 152) \")\"\n+        WHITESPACE@[152; 153) \" \"\n+        BLOCK@[153; 155)\n+          L_CURLY@[153; 154) \"{\"\n+          R_CURLY@[154; 155) \"}\"\n+      WHITESPACE@[155; 160) \"\\n    \"\n+      FN_DEF@[160; 182)\n+        FN_KW@[160; 162) \"fn\"\n+        WHITESPACE@[162; 163) \" \"\n+        NAME@[163; 165)\n+          IDENT@[163; 165) \"g1\"\n+        PARAM_LIST@[165; 179)\n+          L_PAREN@[165; 166) \"(\"\n+          ATTR@[166; 173)\n+            POUND@[166; 167) \"#\"\n+            TOKEN_TREE@[167; 173)\n+              L_BRACK@[167; 168) \"[\"\n+              IDENT@[168; 172) \"attr\"\n+              R_BRACK@[172; 173) \"]\"\n+          WHITESPACE@[173; 174) \" \"\n+          SELF_PARAM@[174; 178)\n+            SELF_KW@[174; 178) \"self\"\n+          R_PAREN@[178; 179) \")\"\n+        WHITESPACE@[179; 180) \" \"\n+        BLOCK@[180; 182)\n+          L_CURLY@[180; 181) \"{\"\n+          R_CURLY@[181; 182) \"}\"\n+      WHITESPACE@[182; 187) \"\\n    \"\n+      FN_DEF@[187; 210)\n+        FN_KW@[187; 189) \"fn\"\n+        WHITESPACE@[189; 190) \" \"\n+        NAME@[190; 192)\n+          IDENT@[190; 192) \"g2\"\n+        PARAM_LIST@[192; 207)\n+          L_PAREN@[192; 193) \"(\"\n+          ATTR@[193; 200)\n+            POUND@[193; 194) \"#\"\n+            TOKEN_TREE@[194; 200)\n+              L_BRACK@[194; 195) \"[\"\n+              IDENT@[195; 199) \"attr\"\n+              R_BRACK@[199; 200) \"]\"\n+          WHITESPACE@[200; 201) \" \"\n+          SELF_PARAM@[201; 206)\n+            AMP@[201; 202) \"&\"\n+            SELF_KW@[202; 206) \"self\"\n+          R_PAREN@[206; 207) \")\"\n+        WHITESPACE@[207; 208) \" \"\n+        BLOCK@[208; 210)\n+          L_CURLY@[208; 209) \"{\"\n+          R_CURLY@[209; 210) \"}\"\n+      WHITESPACE@[210; 215) \"\\n    \"\n+      FN_DEF@[215; 246)\n+        FN_KW@[215; 217) \"fn\"\n+        WHITESPACE@[217; 218) \" \"\n+        NAME@[218; 220)\n+          IDENT@[218; 220) \"g3\"\n+        TYPE_PARAM_LIST@[220; 224)\n+          L_ANGLE@[220; 221) \"<\"\n+          LIFETIME_PARAM@[221; 223)\n+            LIFETIME@[221; 223) \"\\'a\"\n+          R_ANGLE@[223; 224) \">\"\n+        PARAM_LIST@[224; 243)\n+          L_PAREN@[224; 225) \"(\"\n+          ATTR@[225; 232)\n+            POUND@[225; 226) \"#\"\n+            TOKEN_TREE@[226; 232)\n+              L_BRACK@[226; 227) \"[\"\n+              IDENT@[227; 231) \"attr\"\n+              R_BRACK@[231; 232) \"]\"\n+          WHITESPACE@[232; 233) \" \"\n+          SELF_PARAM@[233; 242)\n+            AMP@[233; 234) \"&\"\n+            MUT_KW@[234; 237) \"mut\"\n+            WHITESPACE@[237; 238) \" \"\n+            SELF_KW@[238; 242) \"self\"\n+          R_PAREN@[242; 243) \")\"\n+        WHITESPACE@[243; 244) \" \"\n+        BLOCK@[244; 246)\n+          L_CURLY@[244; 245) \"{\"\n+          R_CURLY@[245; 246) \"}\"\n+      WHITESPACE@[246; 251) \"\\n    \"\n+      FN_DEF@[251; 281)\n+        FN_KW@[251; 253) \"fn\"\n+        WHITESPACE@[253; 254) \" \"\n+        NAME@[254; 256)\n+          IDENT@[254; 256) \"g4\"\n+        TYPE_PARAM_LIST@[256; 260)\n+          L_ANGLE@[256; 257) \"<\"\n+          LIFETIME_PARAM@[257; 259)\n+            LIFETIME@[257; 259) \"\\'a\"\n+          R_ANGLE@[259; 260) \">\"\n+        PARAM_LIST@[260; 278)\n+          L_PAREN@[260; 261) \"(\"\n+          ATTR@[261; 268)\n+            POUND@[261; 262) \"#\"\n+            TOKEN_TREE@[262; 268)\n+              L_BRACK@[262; 263) \"[\"\n+              IDENT@[263; 267) \"attr\"\n+              R_BRACK@[267; 268) \"]\"\n+          WHITESPACE@[268; 269) \" \"\n+          SELF_PARAM@[269; 277)\n+            AMP@[269; 270) \"&\"\n+            LIFETIME@[270; 272) \"\\'a\"\n+            WHITESPACE@[272; 273) \" \"\n+            SELF_KW@[273; 277) \"self\"\n+          R_PAREN@[277; 278) \")\"\n+        WHITESPACE@[278; 279) \" \"\n+        BLOCK@[279; 281)\n+          L_CURLY@[279; 280) \"{\"\n+          R_CURLY@[280; 281) \"}\"\n+      WHITESPACE@[281; 286) \"\\n    \"\n+      FN_DEF@[286; 320)\n+        FN_KW@[286; 288) \"fn\"\n+        WHITESPACE@[288; 289) \" \"\n+        NAME@[289; 291)\n+          IDENT@[289; 291) \"g5\"\n+        TYPE_PARAM_LIST@[291; 295)\n+          L_ANGLE@[291; 292) \"<\"\n+          LIFETIME_PARAM@[292; 294)\n+            LIFETIME@[292; 294) \"\\'a\"\n+          R_ANGLE@[294; 295) \">\"\n+        PARAM_LIST@[295; 317)\n+          L_PAREN@[295; 296) \"(\"\n+          ATTR@[296; 303)\n+            POUND@[296; 297) \"#\"\n+            TOKEN_TREE@[297; 303)\n+              L_BRACK@[297; 298) \"[\"\n+              IDENT@[298; 302) \"attr\"\n+              R_BRACK@[302; 303) \"]\"\n+          WHITESPACE@[303; 304) \" \"\n+          SELF_PARAM@[304; 316)\n+            AMP@[304; 305) \"&\"\n+            LIFETIME@[305; 307) \"\\'a\"\n+            WHITESPACE@[307; 308) \" \"\n+            MUT_KW@[308; 311) \"mut\"\n+            WHITESPACE@[311; 312) \" \"\n+            SELF_KW@[312; 316) \"self\"\n+          R_PAREN@[316; 317) \")\"\n+        WHITESPACE@[317; 318) \" \"\n+        BLOCK@[318; 320)\n+          L_CURLY@[318; 319) \"{\"\n+          R_CURLY@[319; 320) \"}\"\n+      WHITESPACE@[320; 321) \"\\n\"\n+      R_CURLY@[321; 322) \"}\"\n+  WHITESPACE@[322; 323) \"\\n\""}, {"sha": "077216dae5c0bb8f6fadae7c278f72d150e5e700", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0018_arb_self_types.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.rs?ref=3fb58c620ccf93487cc3b9b8718002481826b4c2", "patch": "@@ -1,4 +1,6 @@\n impl S {\n     fn a(self: &Self) {}\n     fn b(mut self: Box<Self>) {}\n+    fn c(#[attr] self: Self) {}\n+    fn d(#[attr] self: Rc<Self>) {}\n }"}, {"sha": "ca49bcc260dc74a22fc8be9e6f821a9fa0a24ed5", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0018_arb_self_types.txt", "status": "modified", "additions": 73, "deletions": 6, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.txt", "raw_url": "https://github.com/rust-lang/rust/raw/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.txt?ref=3fb58c620ccf93487cc3b9b8718002481826b4c2", "patch": "@@ -1,5 +1,5 @@\n-SOURCE_FILE@[0; 69)\n-  IMPL_BLOCK@[0; 68)\n+SOURCE_FILE@[0; 137)\n+  IMPL_BLOCK@[0; 136)\n     IMPL_KW@[0; 4) \"impl\"\n     WHITESPACE@[4; 5) \" \"\n     PATH_TYPE@[5; 6)\n@@ -8,7 +8,7 @@ SOURCE_FILE@[0; 69)\n           NAME_REF@[5; 6)\n             IDENT@[5; 6) \"S\"\n     WHITESPACE@[6; 7) \" \"\n-    ITEM_LIST@[7; 68)\n+    ITEM_LIST@[7; 136)\n       L_CURLY@[7; 8) \"{\"\n       WHITESPACE@[8; 13) \"\\n    \"\n       FN_DEF@[13; 33)\n@@ -67,6 +67,73 @@ SOURCE_FILE@[0; 69)\n         BLOCK@[64; 66)\n           L_CURLY@[64; 65) \"{\"\n           R_CURLY@[65; 66) \"}\"\n-      WHITESPACE@[66; 67) \"\\n\"\n-      R_CURLY@[67; 68) \"}\"\n-  WHITESPACE@[68; 69) \"\\n\"\n+      WHITESPACE@[66; 71) \"\\n    \"\n+      FN_DEF@[71; 98)\n+        FN_KW@[71; 73) \"fn\"\n+        WHITESPACE@[73; 74) \" \"\n+        NAME@[74; 75)\n+          IDENT@[74; 75) \"c\"\n+        PARAM_LIST@[75; 95)\n+          L_PAREN@[75; 76) \"(\"\n+          ATTR@[76; 83)\n+            POUND@[76; 77) \"#\"\n+            TOKEN_TREE@[77; 83)\n+              L_BRACK@[77; 78) \"[\"\n+              IDENT@[78; 82) \"attr\"\n+              R_BRACK@[82; 83) \"]\"\n+          WHITESPACE@[83; 84) \" \"\n+          SELF_PARAM@[84; 94)\n+            SELF_KW@[84; 88) \"self\"\n+            COLON@[88; 89) \":\"\n+            WHITESPACE@[89; 90) \" \"\n+            PATH_TYPE@[90; 94)\n+              PATH@[90; 94)\n+                PATH_SEGMENT@[90; 94)\n+                  NAME_REF@[90; 94)\n+                    IDENT@[90; 94) \"Self\"\n+          R_PAREN@[94; 95) \")\"\n+        WHITESPACE@[95; 96) \" \"\n+        BLOCK@[96; 98)\n+          L_CURLY@[96; 97) \"{\"\n+          R_CURLY@[97; 98) \"}\"\n+      WHITESPACE@[98; 103) \"\\n    \"\n+      FN_DEF@[103; 134)\n+        FN_KW@[103; 105) \"fn\"\n+        WHITESPACE@[105; 106) \" \"\n+        NAME@[106; 107)\n+          IDENT@[106; 107) \"d\"\n+        PARAM_LIST@[107; 131)\n+          L_PAREN@[107; 108) \"(\"\n+          ATTR@[108; 115)\n+            POUND@[108; 109) \"#\"\n+            TOKEN_TREE@[109; 115)\n+              L_BRACK@[109; 110) \"[\"\n+              IDENT@[110; 114) \"attr\"\n+              R_BRACK@[114; 115) \"]\"\n+          WHITESPACE@[115; 116) \" \"\n+          SELF_PARAM@[116; 130)\n+            SELF_KW@[116; 120) \"self\"\n+            COLON@[120; 121) \":\"\n+            WHITESPACE@[121; 122) \" \"\n+            PATH_TYPE@[122; 130)\n+              PATH@[122; 130)\n+                PATH_SEGMENT@[122; 130)\n+                  NAME_REF@[122; 124)\n+                    IDENT@[122; 124) \"Rc\"\n+                  TYPE_ARG_LIST@[124; 130)\n+                    L_ANGLE@[124; 125) \"<\"\n+                    TYPE_ARG@[125; 129)\n+                      PATH_TYPE@[125; 129)\n+                        PATH@[125; 129)\n+                          PATH_SEGMENT@[125; 129)\n+                            NAME_REF@[125; 129)\n+                              IDENT@[125; 129) \"Self\"\n+                    R_ANGLE@[129; 130) \">\"\n+          R_PAREN@[130; 131) \")\"\n+        WHITESPACE@[131; 132) \" \"\n+        BLOCK@[132; 134)\n+          L_CURLY@[132; 133) \"{\"\n+          R_CURLY@[133; 134) \"}\"\n+      WHITESPACE@[134; 135) \"\\n\"\n+      R_CURLY@[135; 136) \"}\"\n+  WHITESPACE@[136; 137) \"\\n\""}, {"sha": "9833dd8f1fc73ce96255a19efc01bc38f8d700c8", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0045_param_list_opt_patterns.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rs?ref=3fb58c620ccf93487cc3b9b8718002481826b4c2", "patch": "@@ -1 +1,2 @@\n fn foo<F: FnMut(&mut Foo<'a>)>(){}\n+fn foo<F: FnMut(#[attr] &mut Foo<'a>)>(){}"}, {"sha": "0b377dfd44ef6b4650a43e0922622e46717c8f6c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0045_param_list_opt_patterns.txt", "status": "modified", "additions": 53, "deletions": 1, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.txt", "raw_url": "https://github.com/rust-lang/rust/raw/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.txt?ref=3fb58c620ccf93487cc3b9b8718002481826b4c2", "patch": "@@ -1,4 +1,4 @@\n-SOURCE_FILE@[0; 35)\n+SOURCE_FILE@[0; 78)\n   FN_DEF@[0; 34)\n     FN_KW@[0; 2) \"fn\"\n     WHITESPACE@[2; 3) \" \"\n@@ -44,3 +44,55 @@ SOURCE_FILE@[0; 35)\n       L_CURLY@[32; 33) \"{\"\n       R_CURLY@[33; 34) \"}\"\n   WHITESPACE@[34; 35) \"\\n\"\n+  FN_DEF@[35; 77)\n+    FN_KW@[35; 37) \"fn\"\n+    WHITESPACE@[37; 38) \" \"\n+    NAME@[38; 41)\n+      IDENT@[38; 41) \"foo\"\n+    TYPE_PARAM_LIST@[41; 73)\n+      L_ANGLE@[41; 42) \"<\"\n+      TYPE_PARAM@[42; 72)\n+        NAME@[42; 43)\n+          IDENT@[42; 43) \"F\"\n+        COLON@[43; 44) \":\"\n+        WHITESPACE@[44; 45) \" \"\n+        TYPE_BOUND_LIST@[45; 72)\n+          TYPE_BOUND@[45; 72)\n+            PATH_TYPE@[45; 72)\n+              PATH@[45; 72)\n+                PATH_SEGMENT@[45; 72)\n+                  NAME_REF@[45; 50)\n+                    IDENT@[45; 50) \"FnMut\"\n+                  PARAM_LIST@[50; 72)\n+                    L_PAREN@[50; 51) \"(\"\n+                    ATTR@[51; 58)\n+                      POUND@[51; 52) \"#\"\n+                      TOKEN_TREE@[52; 58)\n+                        L_BRACK@[52; 53) \"[\"\n+                        IDENT@[53; 57) \"attr\"\n+                        R_BRACK@[57; 58) \"]\"\n+                    WHITESPACE@[58; 59) \" \"\n+                    PARAM@[59; 71)\n+                      REFERENCE_TYPE@[59; 71)\n+                        AMP@[59; 60) \"&\"\n+                        MUT_KW@[60; 63) \"mut\"\n+                        WHITESPACE@[63; 64) \" \"\n+                        PATH_TYPE@[64; 71)\n+                          PATH@[64; 71)\n+                            PATH_SEGMENT@[64; 71)\n+                              NAME_REF@[64; 67)\n+                                IDENT@[64; 67) \"Foo\"\n+                              TYPE_ARG_LIST@[67; 71)\n+                                L_ANGLE@[67; 68) \"<\"\n+                                LIFETIME_ARG@[68; 70)\n+                                  LIFETIME@[68; 70) \"\\'a\"\n+                                R_ANGLE@[70; 71) \">\"\n+                    R_PAREN@[71; 72) \")\"\n+      R_ANGLE@[72; 73) \">\"\n+    PARAM_LIST@[73; 75)\n+      L_PAREN@[73; 74) \"(\"\n+      R_PAREN@[74; 75) \")\"\n+    BLOCK@[75; 77)\n+      L_CURLY@[75; 76) \"{\"\n+      R_CURLY@[76; 77) \"}\"\n+  WHITESPACE@[77; 78) \"\\n\""}, {"sha": "83d870ba747ff713a3819c036ef338e06de98ecf", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0099_param_list.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0099_param_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0099_param_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0099_param_list.rs?ref=3fb58c620ccf93487cc3b9b8718002481826b4c2", "patch": "@@ -2,3 +2,5 @@ fn a() {}\n fn b(x: i32) {}\n fn c(x: i32, ) {}\n fn d(x: i32, y: ()) {}\n+fn g1(#[attr1] #[attr2] pat: Type) {}\n+fn g2(#[attr1] x: u8) {}"}, {"sha": "a9c63fa932faf8b440bf3bf919e2ab4c502c36b0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0099_param_list.txt", "status": "modified", "additions": 70, "deletions": 1, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0099_param_list.txt", "raw_url": "https://github.com/rust-lang/rust/raw/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0099_param_list.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0099_param_list.txt?ref=3fb58c620ccf93487cc3b9b8718002481826b4c2", "patch": "@@ -1,4 +1,4 @@\n-SOURCE_FILE@[0; 67)\n+SOURCE_FILE@[0; 130)\n   FN_DEF@[0; 9)\n     FN_KW@[0; 2) \"fn\"\n     WHITESPACE@[2; 3) \" \"\n@@ -97,3 +97,72 @@ SOURCE_FILE@[0; 67)\n       L_CURLY@[64; 65) \"{\"\n       R_CURLY@[65; 66) \"}\"\n   WHITESPACE@[66; 67) \"\\n\"\n+  FN_DEF@[67; 104)\n+    FN_KW@[67; 69) \"fn\"\n+    WHITESPACE@[69; 70) \" \"\n+    NAME@[70; 72)\n+      IDENT@[70; 72) \"g1\"\n+    PARAM_LIST@[72; 101)\n+      L_PAREN@[72; 73) \"(\"\n+      ATTR@[73; 81)\n+        POUND@[73; 74) \"#\"\n+        TOKEN_TREE@[74; 81)\n+          L_BRACK@[74; 75) \"[\"\n+          IDENT@[75; 80) \"attr1\"\n+          R_BRACK@[80; 81) \"]\"\n+      WHITESPACE@[81; 82) \" \"\n+      ATTR@[82; 90)\n+        POUND@[82; 83) \"#\"\n+        TOKEN_TREE@[83; 90)\n+          L_BRACK@[83; 84) \"[\"\n+          IDENT@[84; 89) \"attr2\"\n+          R_BRACK@[89; 90) \"]\"\n+      WHITESPACE@[90; 91) \" \"\n+      PARAM@[91; 100)\n+        BIND_PAT@[91; 94)\n+          NAME@[91; 94)\n+            IDENT@[91; 94) \"pat\"\n+        COLON@[94; 95) \":\"\n+        WHITESPACE@[95; 96) \" \"\n+        PATH_TYPE@[96; 100)\n+          PATH@[96; 100)\n+            PATH_SEGMENT@[96; 100)\n+              NAME_REF@[96; 100)\n+                IDENT@[96; 100) \"Type\"\n+      R_PAREN@[100; 101) \")\"\n+    WHITESPACE@[101; 102) \" \"\n+    BLOCK@[102; 104)\n+      L_CURLY@[102; 103) \"{\"\n+      R_CURLY@[103; 104) \"}\"\n+  WHITESPACE@[104; 105) \"\\n\"\n+  FN_DEF@[105; 129)\n+    FN_KW@[105; 107) \"fn\"\n+    WHITESPACE@[107; 108) \" \"\n+    NAME@[108; 110)\n+      IDENT@[108; 110) \"g2\"\n+    PARAM_LIST@[110; 126)\n+      L_PAREN@[110; 111) \"(\"\n+      ATTR@[111; 119)\n+        POUND@[111; 112) \"#\"\n+        TOKEN_TREE@[112; 119)\n+          L_BRACK@[112; 113) \"[\"\n+          IDENT@[113; 118) \"attr1\"\n+          R_BRACK@[118; 119) \"]\"\n+      WHITESPACE@[119; 120) \" \"\n+      PARAM@[120; 125)\n+        BIND_PAT@[120; 121)\n+          NAME@[120; 121)\n+            IDENT@[120; 121) \"x\"\n+        COLON@[121; 122) \":\"\n+        WHITESPACE@[122; 123) \" \"\n+        PATH_TYPE@[123; 125)\n+          PATH@[123; 125)\n+            PATH_SEGMENT@[123; 125)\n+              NAME_REF@[123; 125)\n+                IDENT@[123; 125) \"u8\"\n+      R_PAREN@[125; 126) \")\"\n+    WHITESPACE@[126; 127) \" \"\n+    BLOCK@[127; 129)\n+      L_CURLY@[127; 128) \"{\"\n+      R_CURLY@[128; 129) \"}\"\n+  WHITESPACE@[129; 130) \"\\n\""}, {"sha": "90c4dcd2df41a533c3ba1457512e6f22c4afde68", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0116_trait_fn_placeholder_parameter.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0116_trait_fn_placeholder_parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0116_trait_fn_placeholder_parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0116_trait_fn_placeholder_parameter.rs?ref=3fb58c620ccf93487cc3b9b8718002481826b4c2", "patch": "@@ -1,3 +1,4 @@\n trait Foo {\n     fn bar(_: u64, mut x: i32);\n+    fn bar(#[attr] _: u64, #[attr] mut x: i32);\n }"}, {"sha": "b5c6e0a2a34dcff4818938eb35dc267a4f35f24e", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0116_trait_fn_placeholder_parameter.txt", "status": "modified", "additions": 55, "deletions": 6, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0116_trait_fn_placeholder_parameter.txt", "raw_url": "https://github.com/rust-lang/rust/raw/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0116_trait_fn_placeholder_parameter.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0116_trait_fn_placeholder_parameter.txt?ref=3fb58c620ccf93487cc3b9b8718002481826b4c2", "patch": "@@ -1,11 +1,11 @@\n-SOURCE_FILE@[0; 46)\n-  TRAIT_DEF@[0; 45)\n+SOURCE_FILE@[0; 94)\n+  TRAIT_DEF@[0; 93)\n     TRAIT_KW@[0; 5) \"trait\"\n     WHITESPACE@[5; 6) \" \"\n     NAME@[6; 9)\n       IDENT@[6; 9) \"Foo\"\n     WHITESPACE@[9; 10) \" \"\n-    ITEM_LIST@[10; 45)\n+    ITEM_LIST@[10; 93)\n       L_CURLY@[10; 11) \"{\"\n       WHITESPACE@[11; 16) \"\\n    \"\n       FN_DEF@[16; 43)\n@@ -42,6 +42,55 @@ SOURCE_FILE@[0; 46)\n                     IDENT@[38; 41) \"i32\"\n           R_PAREN@[41; 42) \")\"\n         SEMI@[42; 43) \";\"\n-      WHITESPACE@[43; 44) \"\\n\"\n-      R_CURLY@[44; 45) \"}\"\n-  WHITESPACE@[45; 46) \"\\n\"\n+      WHITESPACE@[43; 48) \"\\n    \"\n+      FN_DEF@[48; 91)\n+        FN_KW@[48; 50) \"fn\"\n+        WHITESPACE@[50; 51) \" \"\n+        NAME@[51; 54)\n+          IDENT@[51; 54) \"bar\"\n+        PARAM_LIST@[54; 90)\n+          L_PAREN@[54; 55) \"(\"\n+          ATTR@[55; 62)\n+            POUND@[55; 56) \"#\"\n+            TOKEN_TREE@[56; 62)\n+              L_BRACK@[56; 57) \"[\"\n+              IDENT@[57; 61) \"attr\"\n+              R_BRACK@[61; 62) \"]\"\n+          WHITESPACE@[62; 63) \" \"\n+          PARAM@[63; 69)\n+            PLACEHOLDER_PAT@[63; 64)\n+              UNDERSCORE@[63; 64) \"_\"\n+            COLON@[64; 65) \":\"\n+            WHITESPACE@[65; 66) \" \"\n+            PATH_TYPE@[66; 69)\n+              PATH@[66; 69)\n+                PATH_SEGMENT@[66; 69)\n+                  NAME_REF@[66; 69)\n+                    IDENT@[66; 69) \"u64\"\n+          COMMA@[69; 70) \",\"\n+          WHITESPACE@[70; 71) \" \"\n+          ATTR@[71; 78)\n+            POUND@[71; 72) \"#\"\n+            TOKEN_TREE@[72; 78)\n+              L_BRACK@[72; 73) \"[\"\n+              IDENT@[73; 77) \"attr\"\n+              R_BRACK@[77; 78) \"]\"\n+          WHITESPACE@[78; 79) \" \"\n+          PARAM@[79; 89)\n+            BIND_PAT@[79; 84)\n+              MUT_KW@[79; 82) \"mut\"\n+              WHITESPACE@[82; 83) \" \"\n+              NAME@[83; 84)\n+                IDENT@[83; 84) \"x\"\n+            COLON@[84; 85) \":\"\n+            WHITESPACE@[85; 86) \" \"\n+            PATH_TYPE@[86; 89)\n+              PATH@[86; 89)\n+                PATH_SEGMENT@[86; 89)\n+                  NAME_REF@[86; 89)\n+                    IDENT@[86; 89) \"i32\"\n+          R_PAREN@[89; 90) \")\"\n+        SEMI@[90; 91) \";\"\n+      WHITESPACE@[91; 92) \"\\n\"\n+      R_CURLY@[92; 93) \"}\"\n+  WHITESPACE@[93; 94) \"\\n\""}, {"sha": "8583ede053fc61ae1fa4d1944ec6537987e37e1d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0123_param_list_vararg.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rs?ref=3fb58c620ccf93487cc3b9b8718002481826b4c2", "patch": "@@ -1 +1,2 @@\n extern \"C\" { fn printf(format: *const i8, ...) -> i32; }\n+extern \"C\" { fn printf(#[attr] format: *const i8, ...) -> i32; }"}, {"sha": "164ead2d8921dabde006dfa60657549faacd544c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0123_param_list_vararg.txt", "status": "modified", "additions": 56, "deletions": 1, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.txt", "raw_url": "https://github.com/rust-lang/rust/raw/3fb58c620ccf93487cc3b9b8718002481826b4c2/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.txt?ref=3fb58c620ccf93487cc3b9b8718002481826b4c2", "patch": "@@ -1,4 +1,4 @@\n-SOURCE_FILE@[0; 57)\n+SOURCE_FILE@[0; 122)\n   EXTERN_BLOCK@[0; 56)\n     ABI@[0; 10)\n       EXTERN_KW@[0; 6) \"extern\"\n@@ -47,3 +47,58 @@ SOURCE_FILE@[0; 57)\n       WHITESPACE@[54; 55) \" \"\n       R_CURLY@[55; 56) \"}\"\n   WHITESPACE@[56; 57) \"\\n\"\n+  EXTERN_BLOCK@[57; 121)\n+    ABI@[57; 67)\n+      EXTERN_KW@[57; 63) \"extern\"\n+      WHITESPACE@[63; 64) \" \"\n+      STRING@[64; 67) \"\\\"C\\\"\"\n+    WHITESPACE@[67; 68) \" \"\n+    EXTERN_ITEM_LIST@[68; 121)\n+      L_CURLY@[68; 69) \"{\"\n+      WHITESPACE@[69; 70) \" \"\n+      FN_DEF@[70; 119)\n+        FN_KW@[70; 72) \"fn\"\n+        WHITESPACE@[72; 73) \" \"\n+        NAME@[73; 79)\n+          IDENT@[73; 79) \"printf\"\n+        PARAM_LIST@[79; 111)\n+          L_PAREN@[79; 80) \"(\"\n+          ATTR@[80; 87)\n+            POUND@[80; 81) \"#\"\n+            TOKEN_TREE@[81; 87)\n+              L_BRACK@[81; 82) \"[\"\n+              IDENT@[82; 86) \"attr\"\n+              R_BRACK@[86; 87) \"]\"\n+          WHITESPACE@[87; 88) \" \"\n+          PARAM@[88; 105)\n+            BIND_PAT@[88; 94)\n+              NAME@[88; 94)\n+                IDENT@[88; 94) \"format\"\n+            COLON@[94; 95) \":\"\n+            WHITESPACE@[95; 96) \" \"\n+            POINTER_TYPE@[96; 105)\n+              STAR@[96; 97) \"*\"\n+              CONST_KW@[97; 102) \"const\"\n+              WHITESPACE@[102; 103) \" \"\n+              PATH_TYPE@[103; 105)\n+                PATH@[103; 105)\n+                  PATH_SEGMENT@[103; 105)\n+                    NAME_REF@[103; 105)\n+                      IDENT@[103; 105) \"i8\"\n+          COMMA@[105; 106) \",\"\n+          WHITESPACE@[106; 107) \" \"\n+          DOTDOTDOT@[107; 110) \"...\"\n+          R_PAREN@[110; 111) \")\"\n+        WHITESPACE@[111; 112) \" \"\n+        RET_TYPE@[112; 118)\n+          THIN_ARROW@[112; 114) \"->\"\n+          WHITESPACE@[114; 115) \" \"\n+          PATH_TYPE@[115; 118)\n+            PATH@[115; 118)\n+              PATH_SEGMENT@[115; 118)\n+                NAME_REF@[115; 118)\n+                  IDENT@[115; 118) \"i32\"\n+        SEMI@[118; 119) \";\"\n+      WHITESPACE@[119; 120) \" \"\n+      R_CURLY@[120; 121) \"}\"\n+  WHITESPACE@[121; 122) \"\\n\""}]}