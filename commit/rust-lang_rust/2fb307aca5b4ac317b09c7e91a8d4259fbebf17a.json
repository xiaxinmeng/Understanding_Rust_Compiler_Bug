{"sha": "2fb307aca5b4ac317b09c7e91a8d4259fbebf17a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmYjMwN2FjYTViNGFjMzE3YjA5YzdlOTFhOGQ0MjU5ZmJlYmYxN2E=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-14T14:39:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-14T14:39:17Z"}, "message": "Rollup merge of #74316 - yoshuawuyts:no-wake-type-hints, r=Mark-Simulacrum\n\nRemove unnecessary type hints from Wake internals\n\nWhile working on https://github.com/rust-lang/rust/pull/74304 I noticed we were writing out the type signature twice in some internal `Wake` impl methods; this streamlines that. Thanks!", "tree": {"sha": "7eab5beac149a305437e7a574752e66a4837456d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7eab5beac149a305437e7a574752e66a4837456d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fb307aca5b4ac317b09c7e91a8d4259fbebf17a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDcOVCRBK7hj4Ov3rIwAAdHIIAHv3Qxf7pB/10BNTDTaropD7\nuI2xFId1ct0iCXRqPU/iULZVVD//Ooc2vMAywahOOtrbEcyHYZI4mrgARxraJaDY\n/i+8Kh1Yxhqz8wejOGuR++4TrcTTua+Wi8qemZm5JhqxVbnt60k2MQEQl9QOUraQ\nEhR/+PSBARBZ8ubF+lyDxkYJ8R3yE9MoFO6pI6PkTJq4atpVeGX2m7K67R3K/9Eu\n/eSVQaa6/I90etMWox39ZGP5n3ZeXwcvdiBRgwsazgmlHGxn7fnyCjwDaNHzoTix\nnzdovsmfizmOdGIlfVFIb4et3zzSitB61mB4nLrxR6dOlPrL2m0yt5OqLZZ62Rk=\n=nepi\n-----END PGP SIGNATURE-----\n", "payload": "tree 7eab5beac149a305437e7a574752e66a4837456d\nparent 99c0b9764a6da35fdcb0bb08beaa18f7a3e0224a\nparent 0e9a20f311c7816b8ac4e92f487ce95b813ce6f6\nauthor Manish Goregaokar <manishsmail@gmail.com> 1594737557 -0700\ncommitter GitHub <noreply@github.com> 1594737557 -0700\n\nRollup merge of #74316 - yoshuawuyts:no-wake-type-hints, r=Mark-Simulacrum\n\nRemove unnecessary type hints from Wake internals\n\nWhile working on https://github.com/rust-lang/rust/pull/74304 I noticed we were writing out the type signature twice in some internal `Wake` impl methods; this streamlines that. Thanks!\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fb307aca5b4ac317b09c7e91a8d4259fbebf17a", "html_url": "https://github.com/rust-lang/rust/commit/2fb307aca5b4ac317b09c7e91a8d4259fbebf17a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fb307aca5b4ac317b09c7e91a8d4259fbebf17a/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99c0b9764a6da35fdcb0bb08beaa18f7a3e0224a", "url": "https://api.github.com/repos/rust-lang/rust/commits/99c0b9764a6da35fdcb0bb08beaa18f7a3e0224a", "html_url": "https://github.com/rust-lang/rust/commit/99c0b9764a6da35fdcb0bb08beaa18f7a3e0224a"}, {"sha": "0e9a20f311c7816b8ac4e92f487ce95b813ce6f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e9a20f311c7816b8ac4e92f487ce95b813ce6f6", "html_url": "https://github.com/rust-lang/rust/commit/0e9a20f311c7816b8ac4e92f487ce95b813ce6f6"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "252e04a410548e9ad9f9eb82ade14b6d1ddedd47", "filename": "src/liballoc/task.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2fb307aca5b4ac317b09c7e91a8d4259fbebf17a/src%2Fliballoc%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fb307aca5b4ac317b09c7e91a8d4259fbebf17a/src%2Fliballoc%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftask.rs?ref=2fb307aca5b4ac317b09c7e91a8d4259fbebf17a", "patch": "@@ -69,14 +69,13 @@ fn raw_waker<W: Wake + Send + Sync + 'static>(waker: Arc<W>) -> RawWaker {\n \n     // Wake by value, moving the Arc into the Wake::wake function\n     unsafe fn wake<W: Wake + Send + Sync + 'static>(waker: *const ()) {\n-        let waker: Arc<W> = unsafe { Arc::from_raw(waker as *const W) };\n+        let waker = unsafe { Arc::from_raw(waker as *const W) };\n         <W as Wake>::wake(waker);\n     }\n \n     // Wake by reference, wrap the waker in ManuallyDrop to avoid dropping it\n     unsafe fn wake_by_ref<W: Wake + Send + Sync + 'static>(waker: *const ()) {\n-        let waker: ManuallyDrop<Arc<W>> =\n-            unsafe { ManuallyDrop::new(Arc::from_raw(waker as *const W)) };\n+        let waker = unsafe { ManuallyDrop::new(Arc::from_raw(waker as *const W)) };\n         <W as Wake>::wake_by_ref(&waker);\n     }\n "}]}