{"sha": "3c560f594119244af2a2d10c5f351b95de9f1b37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNTYwZjU5NDExOTI0NGFmMmEyZDEwYzVmMzUxYjk1ZGU5ZjFiMzc=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-07T16:52:32Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-07T16:52:32Z"}, "message": "fix some leftover u128 errors", "tree": {"sha": "960db962561bccf70fc73fedaa4b65d18d9b9567", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/960db962561bccf70fc73fedaa4b65d18d9b9567"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c560f594119244af2a2d10c5f351b95de9f1b37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c560f594119244af2a2d10c5f351b95de9f1b37", "html_url": "https://github.com/rust-lang/rust/commit/3c560f594119244af2a2d10c5f351b95de9f1b37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c560f594119244af2a2d10c5f351b95de9f1b37/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18f4ca3c6b38917976df442c89e15714c4c5ce43", "url": "https://api.github.com/repos/rust-lang/rust/commits/18f4ca3c6b38917976df442c89e15714c4c5ce43", "html_url": "https://github.com/rust-lang/rust/commit/18f4ca3c6b38917976df442c89e15714c4c5ce43"}], "stats": {"total": 88, "additions": 88, "deletions": 0}, "files": [{"sha": "7de006dd5c7e1f1db6e510703bdc9e36fa6a4769", "filename": "src/operator.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3c560f594119244af2a2d10c5f351b95de9f1b37/src%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c560f594119244af2a2d10c5f351b95de9f1b37/src%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foperator.rs?ref=3c560f594119244af2a2d10c5f351b95de9f1b37", "patch": "@@ -80,10 +80,12 @@ macro_rules! int_arithmetic {\n             I16 => overflow!($int_op, l as i16, r as i16),\n             I32 => overflow!($int_op, l as i32, r as i32),\n             I64 => overflow!($int_op, l as i64, r as i64),\n+            I128 => overflow!($int_op, l as i128, r as i128),\n             U8  => overflow!($int_op, l as u8,  r as u8),\n             U16 => overflow!($int_op, l as u16, r as u16),\n             U32 => overflow!($int_op, l as u32, r as u32),\n             U64 => overflow!($int_op, l as u64, r as u64),\n+            U128 => overflow!($int_op, l as u128, r as u128),\n             _ => bug!(\"int_arithmetic should only be called on int primvals\"),\n         }\n     })\n@@ -98,10 +100,12 @@ macro_rules! int_shift {\n             I16 => overflow!($int_op, l as i16, r),\n             I32 => overflow!($int_op, l as i32, r),\n             I64 => overflow!($int_op, l as i64, r),\n+            I128 => overflow!($int_op, l as i128, r),\n             U8  => overflow!($int_op, l as u8,  r),\n             U16 => overflow!($int_op, l as u16, r),\n             U32 => overflow!($int_op, l as u32, r),\n             U64 => overflow!($int_op, l as u64, r),\n+            U128 => overflow!($int_op, l as u128, r),\n             _ => bug!(\"int_shift should only be called on int primvals\"),\n         }\n     })"}, {"sha": "bd68157e4bc22745b8919bbf83303556fa89e07b", "filename": "tests/run-pass/u128.rs", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/3c560f594119244af2a2d10c5f351b95de9f1b37/tests%2Frun-pass%2Fu128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c560f594119244af2a2d10c5f351b95de9f1b37/tests%2Frun-pass%2Fu128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fu128.rs?ref=3c560f594119244af2a2d10c5f351b95de9f1b37", "patch": "@@ -0,0 +1,84 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-stage0\n+// ignore-stage1\n+\n+// ignore-emscripten\n+\n+#![feature(i128_type)]\n+\n+fn b<T>(t: T) -> T { t }\n+\n+fn main() {\n+    let x: u128 = 0xFFFF_FFFF_FFFF_FFFF__FFFF_FFFF_FFFF_FFFF;\n+    assert_eq!(0, !x);\n+    assert_eq!(0, !x);\n+    let y: u128 = 0xFFFF_FFFF_FFFF_FFFF__FFFF_FFFF_FFFF_FFFE;\n+    assert_eq!(!1, y);\n+    assert_eq!(x, y | 1);\n+    assert_eq!(0xFAFF_0000_FF8F_0000__FFFF_0000_FFFF_FFFE,\n+               y &\n+               0xFAFF_0000_FF8F_0000__FFFF_0000_FFFF_FFFF);\n+    let z: u128 = 0xABCD_EF;\n+    assert_eq!(z * z, 0x734C_C2F2_A521);\n+    assert_eq!(z * z * z * z, 0x33EE_0E2A_54E2_59DA_A0E7_8E41);\n+    assert_eq!(z + z + z + z, 0x2AF3_7BC);\n+    let k: u128 = 0x1234_5678_9ABC_DEFF_EDCB_A987_6543_210;\n+    assert_eq!(k + k, 0x2468_ACF1_3579_BDFF_DB97_530E_CA86_420);\n+    assert_eq!(0, k - k);\n+    assert_eq!(0x1234_5678_9ABC_DEFF_EDCB_A987_5A86_421, k - z);\n+    assert_eq!(0x1000_0000_0000_0000_0000_0000_0000_000,\n+               k - 0x234_5678_9ABC_DEFF_EDCB_A987_6543_210);\n+    assert_eq!(0x6EF5_DE4C_D3BC_2AAA_3BB4_CC5D_D6EE_8, k / 42);\n+    assert_eq!(0, k % 42);\n+    assert_eq!(15, z % 42);\n+    assert_eq!(0x169D_A8020_CEC18, k % 0x3ACB_FE49_FF24_AC);\n+    assert_eq!(0x91A2_B3C4_D5E6_F7, k >> 65);\n+    assert_eq!(0xFDB9_7530_ECA8_6420_0000_0000_0000_0000, k << 65);\n+    assert!(k > z);\n+    assert!(y > k);\n+    assert!(y < x);\n+    assert_eq!(x as u64, !0);\n+    assert_eq!(z as u64, 0xABCD_EF);\n+    assert_eq!(k as u64, 0xFEDC_BA98_7654_3210);\n+    assert_eq!(k as i128, 0x1234_5678_9ABC_DEFF_EDCB_A987_6543_210);\n+    assert_eq!((z as f64) as u128, z);\n+    assert_eq!((z as f32) as u128, z);\n+    assert_eq!((z as f64 * 16.0) as u128, z * 16);\n+    assert_eq!((z as f32 * 16.0) as u128, z * 16);\n+    let l :u128 = 432 << 100;\n+    assert_eq!((l as f32) as u128, l);\n+    assert_eq!((l as f64) as u128, l);\n+    // formatting\n+    let j: u128 = 1 << 67;\n+    /*\n+    assert_eq!(\"147573952589676412928\", format!(\"{}\", j));\n+    assert_eq!(\"80000000000000000\", format!(\"{:x}\", j));\n+    assert_eq!(\"20000000000000000000000\", format!(\"{:o}\", j));\n+    assert_eq!(\"10000000000000000000000000000000000000000000000000000000000000000000\",\n+               format!(\"{:b}\", j));\n+    assert_eq!(\"340282366920938463463374607431768211455\",\n+        format!(\"{}\", u128::max_value()));\n+    assert_eq!(\"147573952589676412928\", format!(\"{:?}\", j));\n+    */\n+    // common traits\n+    assert_eq!(x, b(x.clone()));\n+    // overflow checks\n+    assert_eq!((z).checked_mul(z), Some(0x734C_C2F2_A521));\n+    assert_eq!((k).checked_mul(k), None);\n+    let l: u128 = b(u128::max_value() - 10);\n+    let o: u128 = b(17);\n+    assert_eq!(l.checked_add(b(11)), None);\n+    assert_eq!(l.checked_sub(l), Some(0));\n+    assert_eq!(o.checked_sub(b(18)), None);\n+    assert_eq!(b(1u128).checked_shl(b(127)), Some(1 << 127));\n+    assert_eq!(o.checked_shl(b(128)), None);\n+}"}]}