{"sha": "b8c75d98f9c3fe01b23f50c42b36b491e256c7a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4Yzc1ZDk4ZjljM2ZlMDFiMjNmNTBjNDJiMzZiNDkxZTI1NmM3YTE=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-03-20T15:13:44Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-03-20T15:13:44Z"}, "message": "Implement Rule Implemented-From-Env\n\nThis extends the Chalk lowering pass with the \"Implemented-From-Env\" rule for generating program clauses from a trait definition as part of #49177.", "tree": {"sha": "ebb222c6b218161c462121784dd895680c8b51d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebb222c6b218161c462121784dd895680c8b51d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8c75d98f9c3fe01b23f50c42b36b491e256c7a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8c75d98f9c3fe01b23f50c42b36b491e256c7a1", "html_url": "https://github.com/rust-lang/rust/commit/b8c75d98f9c3fe01b23f50c42b36b491e256c7a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8c75d98f9c3fe01b23f50c42b36b491e256c7a1/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de9e6652480ad3de5f6dc52348f8e51865d7cf69", "url": "https://api.github.com/repos/rust-lang/rust/commits/de9e6652480ad3de5f6dc52348f8e51865d7cf69", "html_url": "https://github.com/rust-lang/rust/commit/de9e6652480ad3de5f6dc52348f8e51865d7cf69"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "1092e826a35f96c643a9c9e25d620d28a08172c1", "filename": "src/librustc_traits/lowering.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b8c75d98f9c3fe01b23f50c42b36b491e256c7a1/src%2Flibrustc_traits%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8c75d98f9c3fe01b23f50c42b36b491e256c7a1/src%2Flibrustc_traits%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flowering.rs?ref=b8c75d98f9c3fe01b23f50c42b36b491e256c7a1", "patch": "@@ -12,6 +12,7 @@ use rustc::hir::{self, ImplPolarity};\n use rustc::hir::def_id::DefId;\n use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::ty::{self, TyCtxt};\n+use rustc::ty::subst::Substs;\n use rustc::traits::{QuantifierKind, Goal, DomainGoal, Clause, WhereClauseAtom};\n use syntax::ast;\n use rustc_data_structures::sync::Lrc;\n@@ -104,13 +105,44 @@ crate fn program_clauses_for<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefI\n     let node_id = tcx.hir.as_local_node_id(def_id).unwrap();\n     let item = tcx.hir.expect_item(node_id);\n     match item.node {\n+        hir::ItemTrait(..) => program_clauses_for_trait(tcx, def_id),\n         hir::ItemImpl(..) => program_clauses_for_impl(tcx, def_id),\n \n         // FIXME: other constructions e.g. traits, associated types...\n         _ => Lrc::new(vec![]),\n     }\n }\n \n+fn program_clauses_for_trait<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId)\n+    -> Lrc<Vec<Clause<'tcx>>>\n+{\n+    // Rule Implemented-From-Env (see rustc guide)\n+    //\n+    // `trait Trait<P1..Pn> where WC { .. } // P0 == Self`\n+    //\n+    // ```\n+    // forall<Self, P1..Pn> {\n+    //   Implemented(Self: Trait<P1..Pn>) :- FromEnv(Self: Trait<P1..Pn>)\n+    // }\n+    // ```\n+\n+    // `Self: Trait<P1..Pn>`\n+    let trait_pred = ty::TraitPredicate {\n+        trait_ref: ty::TraitRef {\n+            def_id,\n+            substs: Substs::identity_for_item(tcx, def_id)\n+        }\n+    };\n+    // `FromEnv(Self: Trait<P1..Pn>)`\n+    let from_env = Goal::DomainGoal(DomainGoal::FromEnv(trait_pred.lower()));\n+    // `Implemented(Self: Trait<P1..Pn>)`\n+    let impl_trait = DomainGoal::Holds(WhereClauseAtom::Implemented(trait_pred));\n+\n+    // `Implemented(Self: Trait<P1..Pn>) :- FromEnv(Self: Trait<P1..Pn>)`\n+    let clause = Clause::Implies(vec![from_env], impl_trait);\n+    Lrc::new(vec![clause])\n+}\n+\n fn program_clauses_for_impl<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId)\n     -> Lrc<Vec<Clause<'tcx>>>\n {"}]}