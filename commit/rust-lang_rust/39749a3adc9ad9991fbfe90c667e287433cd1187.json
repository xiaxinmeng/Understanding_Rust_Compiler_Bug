{"sha": "39749a3adc9ad9991fbfe90c667e287433cd1187", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5NzQ5YTNhZGM5YWQ5OTkxZmJmZTkwYzY2N2UyODc0MzNjZDExODc=", "commit": {"author": {"name": "Stefan Bucur", "email": "stefan.bucur@epfl.ch", "date": "2014-10-13T20:17:48Z"}, "committer": {"name": "Stefan Bucur", "email": "stefan.bucur@epfl.ch", "date": "2014-10-13T20:17:48Z"}, "message": "Fix typo in char's from_digit error message", "tree": {"sha": "ebc36aa613ff26e60eb7d23fe087a4e36e15f6fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebc36aa613ff26e60eb7d23fe087a4e36e15f6fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39749a3adc9ad9991fbfe90c667e287433cd1187", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39749a3adc9ad9991fbfe90c667e287433cd1187", "html_url": "https://github.com/rust-lang/rust/commit/39749a3adc9ad9991fbfe90c667e287433cd1187", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39749a3adc9ad9991fbfe90c667e287433cd1187/comments", "author": null, "committer": null, "parents": [{"sha": "daa71e40a98f32084539e7cfe893a3e94f83fe69", "url": "https://api.github.com/repos/rust-lang/rust/commits/daa71e40a98f32084539e7cfe893a3e94f83fe69", "html_url": "https://github.com/rust-lang/rust/commit/daa71e40a98f32084539e7cfe893a3e94f83fe69"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f507556909c8f14f4c001ffe7533d3bf07c5d46d", "filename": "src/libcore/char.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39749a3adc9ad9991fbfe90c667e287433cd1187/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39749a3adc9ad9991fbfe90c667e287433cd1187/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=39749a3adc9ad9991fbfe90c667e287433cd1187", "patch": "@@ -147,7 +147,7 @@ pub fn to_digit(c: char, radix: uint) -> Option<uint> {\n #[inline]\n pub fn from_digit(num: uint, radix: uint) -> Option<char> {\n     if radix > 36 {\n-        fail!(\"from_digit: radix is to high (maximum 36)\");\n+        fail!(\"from_digit: radix is too high (maximum 36)\");\n     }\n     if num < radix {\n         unsafe {"}]}