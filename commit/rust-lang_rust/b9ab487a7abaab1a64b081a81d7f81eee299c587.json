{"sha": "b9ab487a7abaab1a64b081a81d7f81eee299c587", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5YWI0ODdhN2FiYWFiMWE2NGIwODFhODFkN2Y4MWVlZTI5OWM1ODc=", "commit": {"author": {"name": "Maik Klein", "email": "maikklein@googlemail.com", "date": "2017-10-25T15:50:23Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-12-18T15:08:48Z"}, "message": "Rename TransItemExt to MonoItemExt", "tree": {"sha": "dd102ae5240d76069453362630d64c0e690c874b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd102ae5240d76069453362630d64c0e690c874b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9ab487a7abaab1a64b081a81d7f81eee299c587", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9ab487a7abaab1a64b081a81d7f81eee299c587", "html_url": "https://github.com/rust-lang/rust/commit/b9ab487a7abaab1a64b081a81d7f81eee299c587", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9ab487a7abaab1a64b081a81d7f81eee299c587/comments", "author": {"login": "MaikKlein", "id": 1994306, "node_id": "MDQ6VXNlcjE5OTQzMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1994306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaikKlein", "html_url": "https://github.com/MaikKlein", "followers_url": "https://api.github.com/users/MaikKlein/followers", "following_url": "https://api.github.com/users/MaikKlein/following{/other_user}", "gists_url": "https://api.github.com/users/MaikKlein/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaikKlein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaikKlein/subscriptions", "organizations_url": "https://api.github.com/users/MaikKlein/orgs", "repos_url": "https://api.github.com/users/MaikKlein/repos", "events_url": "https://api.github.com/users/MaikKlein/events{/privacy}", "received_events_url": "https://api.github.com/users/MaikKlein/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "531c27d80554e3d0c12a3177d02a4f287e7fc22c", "url": "https://api.github.com/repos/rust-lang/rust/commits/531c27d80554e3d0c12a3177d02a4f287e7fc22c", "html_url": "https://github.com/rust-lang/rust/commit/531c27d80554e3d0c12a3177d02a4f287e7fc22c"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "c32d60b0e58c1bac6b2497f26560283df4843486", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9ab487a7abaab1a64b081a81d7f81eee299c587/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ab487a7abaab1a64b081a81d7f81eee299c587/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=b9ab487a7abaab1a64b081a81d7f81eee299c587", "patch": "@@ -206,7 +206,7 @@ use rustc::mir::visit::Visitor as MirVisitor;\n use monomorphize::{self, Instance};\n use rustc::util::nodemap::{FxHashSet, FxHashMap, DefIdMap};\n \n-use monomorphize::mono_item::{TransItemExt, DefPathBasedNames, InstantiationMode};\n+use monomorphize::mono_item::{MonoItemExt, DefPathBasedNames, InstantiationMode};\n \n use rustc_data_structures::bitvec::BitVector;\n "}, {"sha": "680fad7dc579728b5a2d45c73ac527aee8ecf1aa", "filename": "src/librustc_mir/monomorphize/mono_item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b9ab487a7abaab1a64b081a81d7f81eee299c587/src%2Flibrustc_mir%2Fmonomorphize%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ab487a7abaab1a64b081a81d7f81eee299c587/src%2Flibrustc_mir%2Fmonomorphize%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fmono_item.rs?ref=b9ab487a7abaab1a64b081a81d7f81eee299c587", "patch": "@@ -81,7 +81,7 @@ pub enum InstantiationMode {\n     LocalCopy,\n }\n \n-pub trait TransItemExt<'a, 'tcx>: fmt::Debug {\n+pub trait MonoItemExt<'a, 'tcx>: fmt::Debug {\n     fn as_trans_item(&self) -> &MonoItem<'tcx>;\n \n     fn instantiation_mode(&self,\n@@ -223,7 +223,7 @@ pub trait TransItemExt<'a, 'tcx>: fmt::Debug {\n     }\n }\n \n-impl<'a, 'tcx> TransItemExt<'a, 'tcx> for MonoItem<'tcx> {\n+impl<'a, 'tcx> MonoItemExt<'a, 'tcx> for MonoItem<'tcx> {\n     fn as_trans_item(&self) -> &MonoItem<'tcx> {\n         self\n     }"}, {"sha": "71f66f17dfe8770b897d992ca5bad1aeb2afdfac", "filename": "src/librustc_trans/back/symbol_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9ab487a7abaab1a64b081a81d7f81eee299c587/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ab487a7abaab1a64b081a81d7f81eee299c587/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs?ref=b9ab487a7abaab1a64b081a81d7f81eee299c587", "patch": "@@ -98,7 +98,7 @@\n //! DefPaths which are much more robust in the face of changes to the code base.\n \n use monomorphize::Instance;\n-use trans_item::{BaseTransItemExt, InstantiationMode};\n+use trans_item::{BaseMonoItemExt, InstantiationMode};\n \n use rustc::middle::weak_lang_items;\n use rustc::middle::trans::MonoItem;"}, {"sha": "c8a7ff11bd8da15f52a0578fb8ffd347814f9917", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9ab487a7abaab1a64b081a81d7f81eee299c587/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ab487a7abaab1a64b081a81d7f81eee299c587/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=b9ab487a7abaab1a64b081a81d7f81eee299c587", "patch": "@@ -67,7 +67,7 @@ use monomorphize::Instance;\n use partitioning::{self, PartitioningStrategy, CodegenUnit, CodegenUnitExt};\n use symbol_names_test;\n use time_graph;\n-use trans_item::{MonoItem, BaseTransItemExt, TransItemExt, DefPathBasedNames};\n+use trans_item::{MonoItem, BaseMonoItemExt, MonoItemExt, DefPathBasedNames};\n use type_::Type;\n use type_of::LayoutLlvmExt;\n use rustc::util::nodemap::{NodeSet, FxHashMap, FxHashSet, DefIdSet};"}, {"sha": "1321cf894ac2bdde957e1983b59282c9a59d4902", "filename": "src/librustc_trans/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9ab487a7abaab1a64b081a81d7f81eee299c587/src%2Flibrustc_trans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ab487a7abaab1a64b081a81d7f81eee299c587/src%2Flibrustc_trans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fconsts.rs?ref=b9ab487a7abaab1a64b081a81d7f81eee299c587", "patch": "@@ -16,7 +16,7 @@ use rustc::hir::map as hir_map;\n use rustc::middle::const_val::ConstEvalErr;\n use debuginfo;\n use base;\n-use trans_item::{MonoItem, TransItemExt};\n+use trans_item::{MonoItem, MonoItemExt};\n use common::{self, CrateContext, val_ty};\n use declare;\n use monomorphize::Instance;"}, {"sha": "198b2af89c9a0fc4a631a5366c7eb5ba84a8686b", "filename": "src/librustc_trans/partitioning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9ab487a7abaab1a64b081a81d7f81eee299c587/src%2Flibrustc_trans%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ab487a7abaab1a64b081a81d7f81eee299c587/src%2Flibrustc_trans%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fpartitioning.rs?ref=b9ab487a7abaab1a64b081a81d7f81eee299c587", "patch": "@@ -114,7 +114,7 @@ use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use std::collections::hash_map::Entry;\n use syntax::ast::NodeId;\n use syntax::symbol::{Symbol, InternedString};\n-use trans_item::{MonoItem, BaseTransItemExt, TransItemExt, InstantiationMode};\n+use trans_item::{MonoItem, BaseMonoItemExt, MonoItemExt, InstantiationMode};\n \n pub use rustc::middle::trans::CodegenUnit;\n "}, {"sha": "4ccf46d0b733fae78beb8c3517585190949594e7", "filename": "src/librustc_trans/trans_item.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b9ab487a7abaab1a64b081a81d7f81eee299c587/src%2Flibrustc_trans%2Ftrans_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ab487a7abaab1a64b081a81d7f81eee299c587/src%2Flibrustc_trans%2Ftrans_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans_item.rs?ref=b9ab487a7abaab1a64b081a81d7f81eee299c587", "patch": "@@ -37,9 +37,9 @@ use std::fmt;\n pub use rustc::middle::trans::MonoItem;\n \n pub use rustc_mir::monomorphize::mono_item::*;\n-pub use rustc_mir::monomorphize::mono_item::TransItemExt as BaseTransItemExt;\n+pub use rustc_mir::monomorphize::mono_item::MonoItemExt as BaseMonoItemExt;\n \n-pub trait TransItemExt<'a, 'tcx>: fmt::Debug + BaseTransItemExt<'a, 'tcx> {\n+pub trait MonoItemExt<'a, 'tcx>: fmt::Debug + BaseMonoItemExt<'a, 'tcx> {\n     fn define(&self, ccx: &CrateContext<'a, 'tcx>) {\n         debug!(\"BEGIN IMPLEMENTING '{} ({})' in cgu {}\",\n                self.to_string(ccx.tcx()),\n@@ -164,7 +164,7 @@ pub trait TransItemExt<'a, 'tcx>: fmt::Debug + BaseTransItemExt<'a, 'tcx> {\n     }\n }\n \n-impl<'a, 'tcx> TransItemExt<'a, 'tcx> for MonoItem<'tcx> {}\n+impl<'a, 'tcx> MonoItemExt<'a, 'tcx> for MonoItem<'tcx> {}\n \n fn predefine_static<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n                               node_id: ast::NodeId,"}]}