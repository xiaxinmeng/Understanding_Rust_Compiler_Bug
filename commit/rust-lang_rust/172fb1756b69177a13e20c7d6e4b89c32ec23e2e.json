{"sha": "172fb1756b69177a13e20c7d6e4b89c32ec23e2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3MmZiMTc1NmI2OTE3N2ExM2UyMGM3ZDZlNGI4OWMzMmVjMjNlMmU=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-30T16:12:45Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-30T16:12:45Z"}, "message": "Check in changes I forgot to check in", "tree": {"sha": "66316f2b5004655fcbd3fd0baadb399dbad348d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66316f2b5004655fcbd3fd0baadb399dbad348d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/172fb1756b69177a13e20c7d6e4b89c32ec23e2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/172fb1756b69177a13e20c7d6e4b89c32ec23e2e", "html_url": "https://github.com/rust-lang/rust/commit/172fb1756b69177a13e20c7d6e4b89c32ec23e2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/172fb1756b69177a13e20c7d6e4b89c32ec23e2e/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f64c23fdfd2a6c22d809d573f3db91ec2677952e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f64c23fdfd2a6c22d809d573f3db91ec2677952e", "html_url": "https://github.com/rust-lang/rust/commit/f64c23fdfd2a6c22d809d573f3db91ec2677952e"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "15df0ab5ca9f3574de3a7cacc0d57dc7ba849b14", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/172fb1756b69177a13e20c7d6e4b89c32ec23e2e/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/172fb1756b69177a13e20c7d6e4b89c32ec23e2e/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=172fb1756b69177a13e20c7d6e4b89c32ec23e2e", "patch": "@@ -619,7 +619,7 @@ fn emit_tydescs(ccx: @crate_ctxt) {\n                             C_shape(ccx, shape), // shape\n                             shape_tables, // shape_tables\n                             C_int(ccx, 0), // unused\n-                            C_int(ccx, 0)]/~); // unused\n+                             C_int(ccx, 0)]); // unused\n \n         let gvar = ti.tydesc;\n         llvm::LLVMSetInitializer(gvar, tydesc);\n@@ -703,8 +703,8 @@ fn make_free_glue(bcx: block, v: ValueRef, t: ty::t) {\n       }\n       ty::ty_opaque_box {\n         let v = PointerCast(bcx, v, type_of(ccx, t));\n-        let td = Load(bcx, GEPi(bcx, v, [0u, abi::box_field_tydesc]/~));\n-        let valptr = GEPi(bcx, v, [0u, abi::box_field_body]/~);\n+        let td = Load(bcx, GEPi(bcx, v, ~[0u, abi::box_field_tydesc]));\n+        let valptr = GEPi(bcx, v, ~[0u, abi::box_field_body]);\n         // Generate code that, dynamically, indexes into the\n         // tydesc and calls the drop glue that got set dynamically\n         call_tydesc_glue_full(bcx, valptr, td, abi::tydesc_field_drop_glue,"}, {"sha": "b09171fd84efdb5804b5d4c05613c6fa2c7afe0e", "filename": "src/rustc/middle/trans/type_use.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/172fb1756b69177a13e20c7d6e4b89c32ec23e2e/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/172fb1756b69177a13e20c7d6e4b89c32ec23e2e/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs?ref=172fb1756b69177a13e20c7d6e4b89c32ec23e2e", "patch": "@@ -118,10 +118,10 @@ fn type_needs_inner(cx: ctx, use: uint, ty: ty::t,\n         if ty::type_has_params(ty) {\n             alt ty::get(ty).struct {\n                 /*\n-                  This previously included ty_box -- that was wrong\n-                  because if we cast an @T to an iface (for example) and return\n-                  it, we depend on the drop glue for T (we have to write the\n-                  right tydesc into the result)\n+                 This previously included ty_box -- that was wrong\n+                 because if we cast an @T to an iface (for example) and return\n+                 it, we depend on the drop glue for T (we have to write the\n+                 right tydesc into the result)\n                  */\n               ty::ty_fn(_) | ty::ty_ptr(_) | ty::ty_rptr(_, _)\n                | ty::ty_iface(_, _) { false }"}]}