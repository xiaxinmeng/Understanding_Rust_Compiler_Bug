{"sha": "30a9879c461ce18ff120e513a2f6a16d0f2f4b80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwYTk4NzljNDYxY2UxOGZmMTIwZTUxM2EyZjZhMTZkMGYyZjRiODA=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2018-07-01T10:54:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-01T10:54:06Z"}, "message": "Merge pull request #2888 from mikerite/refactor_lifetimename_static\n\nUse slightly neater check for static lifetimes", "tree": {"sha": "d7f4c98b68996bf4eb3001aee8f4564fde208379", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7f4c98b68996bf4eb3001aee8f4564fde208379"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30a9879c461ce18ff120e513a2f6a16d0f2f4b80", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbOLLOCRBK7hj4Ov3rIwAAdHIIAIT1RBGfcpHdVQ95zwvsOx2J\nTU1qE0Nkrz4mhiZrHGNIrtglOzD2mKnF9jHXc69SN/gjJgSkzSrKEsDhxNTTa6dR\n0xLoome9u3YAYqpZTXO0x24oSzwvhakFCdUmtYS4c5mS7VAly33e2H2af8rD3bjb\nm6rMGYUEGwBwfazj75W27ZhjkVMORpdF93VDZD74ZGTFVnzu9kCwC+stL/LY4rsV\n5y0CTHrvO2HzmaCMDt3ssEVgkR4wvbjWgAVHhm2/MpBUYfnqaMeAB8H4ZyAdGnQ9\nzckRaEWDSVRohfUdtQCDg500LGGgPPBfbLWLIZg1vPKNC4+d1gWEznkPL83s9yk=\n=mJc6\n-----END PGP SIGNATURE-----\n", "payload": "tree d7f4c98b68996bf4eb3001aee8f4564fde208379\nparent b4b6e6558e3ccd5ef11758297dc064acceb15ef2\nparent dfd9e10a2a0213e99435438e7cffdc930c8464ad\nauthor llogiq <bogusandre@gmail.com> 1530442446 +0200\ncommitter GitHub <noreply@github.com> 1530442446 +0200\n\nMerge pull request #2888 from mikerite/refactor_lifetimename_static\n\nUse slightly neater check for static lifetimes"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30a9879c461ce18ff120e513a2f6a16d0f2f4b80", "html_url": "https://github.com/rust-lang/rust/commit/30a9879c461ce18ff120e513a2f6a16d0f2f4b80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30a9879c461ce18ff120e513a2f6a16d0f2f4b80/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4b6e6558e3ccd5ef11758297dc064acceb15ef2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4b6e6558e3ccd5ef11758297dc064acceb15ef2", "html_url": "https://github.com/rust-lang/rust/commit/b4b6e6558e3ccd5ef11758297dc064acceb15ef2"}, {"sha": "dfd9e10a2a0213e99435438e7cffdc930c8464ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfd9e10a2a0213e99435438e7cffdc930c8464ad", "html_url": "https://github.com/rust-lang/rust/commit/dfd9e10a2a0213e99435438e7cffdc930c8464ad"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "3fbbb4daee822e0c2fba66ed30aeb5857a462c8c", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/30a9879c461ce18ff120e513a2f6a16d0f2f4b80/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30a9879c461ce18ff120e513a2f6a16d0f2f4b80/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=30a9879c461ce18ff120e513a2f6a16d0f2f4b80", "patch": "@@ -126,7 +126,7 @@ fn check_fn_inner<'a, 'tcx>(\n                         GenericArg::Type(_) => None,\n                     });\n                     for bound in lifetimes {\n-                        if bound.name.ident().name != \"'static\" && !bound.is_elided() {\n+                        if bound.name != LifetimeName::Static && !bound.is_elided() {\n                             return;\n                         }\n                         bounds_lts.push(bound);\n@@ -251,7 +251,7 @@ fn allowed_lts_from(named_generics: &[GenericParam]) -> HashSet<RefLt> {\n \n fn lts_from_bounds<'a, T: Iterator<Item = &'a Lifetime>>(mut vec: Vec<RefLt>, bounds_lts: T) -> Vec<RefLt> {\n     for lt in bounds_lts {\n-        if lt.name.ident().name != \"'static\" {\n+        if lt.name != LifetimeName::Static {\n             vec.push(RefLt::Named(lt.name.ident().name));\n         }\n     }\n@@ -282,7 +282,7 @@ impl<'v, 't> RefVisitor<'v, 't> {\n \n     fn record(&mut self, lifetime: &Option<Lifetime>) {\n         if let Some(ref lt) = *lifetime {\n-            if lt.name.ident().name == \"'static\" {\n+            if lt.name == LifetimeName::Static {\n                 self.lts.push(RefLt::Static);\n             } else if lt.is_elided() {\n                 self.lts.push(RefLt::Unnamed);"}]}