{"sha": "3899898d75176ce3cd87f9e2acecd7e3a987dda5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4OTk4OThkNzUxNzZjZTNjZDg3ZjllMmFjZWNkN2UzYTk4N2RkYTU=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2018-12-22T21:17:55Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2018-12-23T12:48:04Z"}, "message": "Parse integer / float types", "tree": {"sha": "00dc54ff21b509d1c68ba7d1d0d1bddd2848b45f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00dc54ff21b509d1c68ba7d1d0d1bddd2848b45f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3899898d75176ce3cd87f9e2acecd7e3a987dda5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3899898d75176ce3cd87f9e2acecd7e3a987dda5", "html_url": "https://github.com/rust-lang/rust/commit/3899898d75176ce3cd87f9e2acecd7e3a987dda5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3899898d75176ce3cd87f9e2acecd7e3a987dda5/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ac605e6876056fa56098231cc2f96553faab8f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ac605e6876056fa56098231cc2f96553faab8f0", "html_url": "https://github.com/rust-lang/rust/commit/3ac605e6876056fa56098231cc2f96553faab8f0"}], "stats": {"total": 62, "additions": 58, "deletions": 4}, "files": [{"sha": "087385b98f7fc0883739b636da97c184de897a2e", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3899898d75176ce3cd87f9e2acecd7e3a987dda5/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3899898d75176ce3cd87f9e2acecd7e3a987dda5/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=3899898d75176ce3cd87f9e2acecd7e3a987dda5", "patch": "@@ -9,7 +9,7 @@ use std::collections::HashMap;\n \n use ra_db::LocalSyntaxPtr;\n use ra_syntax::{\n-    TextRange, TextUnit,\n+    TextRange, TextUnit, SmolStr,\n     algo::visit::{visitor, Visitor},\n     ast::{self, AstNode, DocCommentsOwner, NameOwner, LoopBodyOwner, ArgListOwner},\n     SyntaxNodeRef\n@@ -148,7 +148,25 @@ impl Ty {\n             ParenType(_inner) => Ty::Unknown, // TODO\n             TupleType(_inner) => Ty::Unknown, // TODO\n             NeverType(..) => Ty::Never,\n-            PathType(_inner) => Ty::Unknown, // TODO\n+            PathType(inner) => {\n+                let path = if let Some(p) = inner.path() { p } else { return Ty::Unknown };\n+                if path.qualifier().is_none() {\n+                    let name = path.segment().and_then(|s| s.name_ref()).map(|n| n.text()).unwrap_or(SmolStr::new(\"\"));\n+                    if let Some(int_ty) = primitive::IntTy::from_string(&name) {\n+                        Ty::Int(int_ty)\n+                    } else if let Some(uint_ty) = primitive::UintTy::from_string(&name) {\n+                        Ty::Uint(uint_ty)\n+                    } else if let Some(float_ty) = primitive::FloatTy::from_string(&name) {\n+                        Ty::Float(float_ty)\n+                    } else {\n+                        // TODO\n+                        Ty::Unknown\n+                    }\n+                } else {\n+                    // TODO\n+                    Ty::Unknown\n+                }\n+            },\n             PointerType(_inner) => Ty::Unknown, // TODO\n             ArrayType(_inner) => Ty::Unknown, // TODO\n             SliceType(_inner) => Ty::Unknown, // TODO"}, {"sha": "ad79b17e41859f186a759fd0785615d8ba81c07c", "filename": "crates/ra_hir/src/ty/primitive.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/3899898d75176ce3cd87f9e2acecd7e3a987dda5/crates%2Fra_hir%2Fsrc%2Fty%2Fprimitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3899898d75176ce3cd87f9e2acecd7e3a987dda5/crates%2Fra_hir%2Fsrc%2Fty%2Fprimitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Fprimitive.rs?ref=3899898d75176ce3cd87f9e2acecd7e3a987dda5", "patch": "@@ -33,6 +33,18 @@ impl IntTy {\n             IntTy::I128 => \"i128\",\n         }\n     }\n+\n+    pub fn from_string(s: &str) -> Option<IntTy> {\n+        match s {\n+            \"isize\" => Some(IntTy::Isize),\n+            \"i8\" => Some(IntTy::I8),\n+            \"i16\" => Some(IntTy::I16),\n+            \"i32\" => Some(IntTy::I32),\n+            \"i64\" => Some(IntTy::I64),\n+            \"i128\" => Some(IntTy::I128),\n+            _ => None,\n+        }\n+    }\n }\n \n #[derive(Clone, PartialEq, Eq, PartialOrd, Ord, Hash, Copy)]\n@@ -56,6 +68,18 @@ impl UintTy {\n             UintTy::U128 => \"u128\",\n         }\n     }\n+\n+    pub fn from_string(s: &str) -> Option<UintTy> {\n+        match s {\n+            \"usize\" => Some(UintTy::Usize),\n+            \"u8\" => Some(UintTy::U8),\n+            \"u16\" => Some(UintTy::U16),\n+            \"u32\" => Some(UintTy::U32),\n+            \"u64\" => Some(UintTy::U64),\n+            \"u128\" => Some(UintTy::U128),\n+            _ => None,\n+        }\n+    }\n }\n \n impl fmt::Debug for UintTy {\n@@ -95,4 +119,12 @@ impl FloatTy {\n             FloatTy::F64 => \"f64\",\n         }\n     }\n+\n+    pub fn from_string(s: &str) -> Option<FloatTy> {\n+        match s {\n+            \"f32\" => Some(FloatTy::F32),\n+            \"f64\" => Some(FloatTy::F64),\n+            _ => None,\n+        }\n+    }\n }"}, {"sha": "74bf4d3cc3153b5ba04e7814eb70112a0bd143d6", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3899898d75176ce3cd87f9e2acecd7e3a987dda5/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3899898d75176ce3cd87f9e2acecd7e3a987dda5/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=3899898d75176ce3cd87f9e2acecd7e3a987dda5", "patch": "@@ -2697,7 +2697,11 @@ impl<R: TreeRoot<RaTypes>> PathTypeNode<R> {\n }\n \n \n-impl<'a> PathType<'a> {}\n+impl<'a> PathType<'a> {\n+    pub fn path(self) -> Option<Path<'a>> {\n+        super::child_opt(self)\n+    }\n+}\n \n // PlaceholderPat\n #[derive(Debug, Clone, Copy,)]"}, {"sha": "29b84854a35f10e1e372941b7b516590f0f5dd6c", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3899898d75176ce3cd87f9e2acecd7e3a987dda5/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/3899898d75176ce3cd87f9e2acecd7e3a987dda5/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=3899898d75176ce3cd87f9e2acecd7e3a987dda5", "patch": "@@ -304,7 +304,7 @@ Grammar(\n         \"ParenType\": (),\n         \"TupleType\": (),\n         \"NeverType\": (),\n-        \"PathType\": (),\n+        \"PathType\": (options: [\"Path\"]),\n         \"PointerType\": (),\n         \"ArrayType\": (),\n         \"SliceType\": (),"}]}