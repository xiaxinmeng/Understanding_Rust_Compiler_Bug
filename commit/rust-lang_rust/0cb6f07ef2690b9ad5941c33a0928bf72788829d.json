{"sha": "0cb6f07ef2690b9ad5941c33a0928bf72788829d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjYjZmMDdlZjI2OTBiOWFkNTk0MWMzM2EwOTI4YmY3Mjc4ODgyOWQ=", "commit": {"author": {"name": "lrh2000", "email": "lrh2000@pku.edu.cn", "date": "2021-07-09T13:00:51Z"}, "committer": {"name": "lrh2000", "email": "lrh2000@pku.edu.cn", "date": "2021-07-09T15:09:50Z"}, "message": "Avoid unnecessary `String::clone`", "tree": {"sha": "104560217863e4b12de1d99ee2f77db76bfec5f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/104560217863e4b12de1d99ee2f77db76bfec5f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cb6f07ef2690b9ad5941c33a0928bf72788829d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cb6f07ef2690b9ad5941c33a0928bf72788829d", "html_url": "https://github.com/rust-lang/rust/commit/0cb6f07ef2690b9ad5941c33a0928bf72788829d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cb6f07ef2690b9ad5941c33a0928bf72788829d/comments", "author": {"login": "lrh2000", "id": 41988959, "node_id": "MDQ6VXNlcjQxOTg4OTU5", "avatar_url": "https://avatars.githubusercontent.com/u/41988959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrh2000", "html_url": "https://github.com/lrh2000", "followers_url": "https://api.github.com/users/lrh2000/followers", "following_url": "https://api.github.com/users/lrh2000/following{/other_user}", "gists_url": "https://api.github.com/users/lrh2000/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrh2000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrh2000/subscriptions", "organizations_url": "https://api.github.com/users/lrh2000/orgs", "repos_url": "https://api.github.com/users/lrh2000/repos", "events_url": "https://api.github.com/users/lrh2000/events{/privacy}", "received_events_url": "https://api.github.com/users/lrh2000/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lrh2000", "id": 41988959, "node_id": "MDQ6VXNlcjQxOTg4OTU5", "avatar_url": "https://avatars.githubusercontent.com/u/41988959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrh2000", "html_url": "https://github.com/lrh2000", "followers_url": "https://api.github.com/users/lrh2000/followers", "following_url": "https://api.github.com/users/lrh2000/following{/other_user}", "gists_url": "https://api.github.com/users/lrh2000/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrh2000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrh2000/subscriptions", "organizations_url": "https://api.github.com/users/lrh2000/orgs", "repos_url": "https://api.github.com/users/lrh2000/repos", "events_url": "https://api.github.com/users/lrh2000/events{/privacy}", "received_events_url": "https://api.github.com/users/lrh2000/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cda90f55419ce449f3a9db327465d9b2ae7dfce9", "url": "https://api.github.com/repos/rust-lang/rust/commits/cda90f55419ce449f3a9db327465d9b2ae7dfce9", "html_url": "https://github.com/rust-lang/rust/commit/cda90f55419ce449f3a9db327465d9b2ae7dfce9"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2cb126f1a7e4de84c2b7266f683d285deb4bc8b8", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/metadata.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb6f07ef2690b9ad5941c33a0928bf72788829d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb6f07ef2690b9ad5941c33a0928bf72788829d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs?ref=0cb6f07ef2690b9ad5941c33a0928bf72788829d", "patch": "@@ -1314,9 +1314,9 @@ struct TupleMemberDescriptionFactory<'tcx> {\n \n impl<'tcx> TupleMemberDescriptionFactory<'tcx> {\n     fn create_member_descriptions(&self, cx: &CodegenCx<'ll, 'tcx>) -> Vec<MemberDescription<'ll>> {\n-        let capture_names = match *self.ty.kind() {\n+        let mut capture_names = match *self.ty.kind() {\n             ty::Generator(def_id, ..) | ty::Closure(def_id, ..) => {\n-                Some(closure_saved_names_of_captured_variables(cx.tcx, def_id))\n+                Some(closure_saved_names_of_captured_variables(cx.tcx, def_id).into_iter())\n             }\n             _ => None,\n         };\n@@ -1326,8 +1326,8 @@ impl<'tcx> TupleMemberDescriptionFactory<'tcx> {\n             .enumerate()\n             .map(|(i, &component_type)| {\n                 let (size, align) = cx.size_and_align_of(component_type);\n-                let name = if let Some(names) = capture_names.as_ref() {\n-                    names[i].clone()\n+                let name = if let Some(names) = capture_names.as_mut() {\n+                    names.next().unwrap()\n                 } else {\n                     format!(\"__{}\", i)\n                 };"}]}