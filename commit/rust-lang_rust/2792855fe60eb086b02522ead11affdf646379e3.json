{"sha": "2792855fe60eb086b02522ead11affdf646379e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3OTI4NTVmZTYwZWIwODZiMDI1MjJlYWQxMWFmZmRmNjQ2Mzc5ZTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-15T00:06:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-15T00:06:56Z"}, "message": "Auto merge of #25399 - kballard:crate-attributes-cfg_attr, r=alexcrichton\n\nStripping unconfigured items prior to collecting crate metadata means we\ncan say things like `#![cfg_attr(foo, crate_type=\"lib\")]`.\n\nFixes #25347.", "tree": {"sha": "52c6a28b74baef7d826a7a228691a50d68a16cd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52c6a28b74baef7d826a7a228691a50d68a16cd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2792855fe60eb086b02522ead11affdf646379e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2792855fe60eb086b02522ead11affdf646379e3", "html_url": "https://github.com/rust-lang/rust/commit/2792855fe60eb086b02522ead11affdf646379e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2792855fe60eb086b02522ead11affdf646379e3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "571f371b3fce3e023fb1b41a1682de260c943222", "url": "https://api.github.com/repos/rust-lang/rust/commits/571f371b3fce3e023fb1b41a1682de260c943222", "html_url": "https://github.com/rust-lang/rust/commit/571f371b3fce3e023fb1b41a1682de260c943222"}, {"sha": "90b952954bf7e765924f70a8892334b6bb7de93b", "url": "https://api.github.com/repos/rust-lang/rust/commits/90b952954bf7e765924f70a8892334b6bb7de93b", "html_url": "https://github.com/rust-lang/rust/commit/90b952954bf7e765924f70a8892334b6bb7de93b"}], "stats": {"total": 53, "additions": 42, "deletions": 11}, "files": [{"sha": "9c78c5aec00b44cae4399a300d1d31540a7a56c1", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2792855fe60eb086b02522ead11affdf646379e3/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2792855fe60eb086b02522ead11affdf646379e3/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=2792855fe60eb086b02522ead11affdf646379e3", "patch": "@@ -383,17 +383,8 @@ pub fn phase_2_configure_and_expand(sess: &Session,\n                                     -> Option<ast::Crate> {\n     let time_passes = sess.time_passes();\n \n-    *sess.crate_types.borrow_mut() =\n-        collect_crate_types(sess, &krate.attrs);\n-    *sess.crate_metadata.borrow_mut() =\n-        collect_crate_metadata(sess, &krate.attrs);\n-\n-    time(time_passes, \"recursion limit\", (), |_| {\n-        middle::recursion_limit::update_recursion_limit(sess, &krate);\n-    });\n-\n-    // strip before expansion to allow macros to depend on\n-    // configuration variables e.g/ in\n+    // strip before anything else because crate metadata may use #[cfg_attr]\n+    // and so macros can depend on configuration variables, such as\n     //\n     //   #[macro_use] #[cfg(foo)]\n     //   mod bar { macro_rules! baz!(() => {{}}) }\n@@ -403,6 +394,15 @@ pub fn phase_2_configure_and_expand(sess: &Session,\n     krate = time(time_passes, \"configuration 1\", krate, |krate|\n                  syntax::config::strip_unconfigured_items(sess.diagnostic(), krate));\n \n+    *sess.crate_types.borrow_mut() =\n+        collect_crate_types(sess, &krate.attrs);\n+    *sess.crate_metadata.borrow_mut() =\n+        collect_crate_metadata(sess, &krate.attrs);\n+\n+    time(time_passes, \"recursion limit\", (), |_| {\n+        middle::recursion_limit::update_recursion_limit(sess, &krate);\n+    });\n+\n     time(time_passes, \"gated macro checking\", (), |_| {\n         let features =\n             syntax::feature_gate::check_crate_macros(sess.codemap(),"}, {"sha": "0028b51f9d1ee8d6cfc0b56c2944336c70e78afa", "filename": "src/test/auxiliary/crate-attributes-using-cfg_attr.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2792855fe60eb086b02522ead11affdf646379e3/src%2Ftest%2Fauxiliary%2Fcrate-attributes-using-cfg_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2792855fe60eb086b02522ead11affdf646379e3/src%2Ftest%2Fauxiliary%2Fcrate-attributes-using-cfg_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrate-attributes-using-cfg_attr.rs?ref=2792855fe60eb086b02522ead11affdf646379e3", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+// compile-flags: --cfg foo\n+\n+#![cfg_attr(foo, crate_type=\"lib\")]\n+\n+pub fn foo() {}"}, {"sha": "72ccc6723f921324b95a6e7c9186b27b869f1993", "filename": "src/test/run-pass/crate-attributes-using-cfg_attr.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2792855fe60eb086b02522ead11affdf646379e3/src%2Ftest%2Frun-pass%2Fcrate-attributes-using-cfg_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2792855fe60eb086b02522ead11affdf646379e3/src%2Ftest%2Frun-pass%2Fcrate-attributes-using-cfg_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrate-attributes-using-cfg_attr.rs?ref=2792855fe60eb086b02522ead11affdf646379e3", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:crate-attributes-using-cfg_attr.rs\n+\n+extern crate crate_attributes_using_cfg_attr;\n+\n+pub fn main() {}"}]}