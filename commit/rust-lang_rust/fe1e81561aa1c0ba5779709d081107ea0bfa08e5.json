{"sha": "fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMWU4MTU2MWFhMWMwYmE1Nzc5NzA5ZDA4MTEwN2VhMGJmYTA4ZTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-26T05:13:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-26T05:13:14Z"}, "message": "Auto merge of #68517 - oli-obk:spaces2, r=nagisa\n\nDon't use spaces before type ascription like colons\n\nSplit out of #67133 to make that PR simpler\n\nr? @eddyb", "tree": {"sha": "eed6a10a631d52308644155be9b7f3e475efba50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eed6a10a631d52308644155be9b7f3e475efba50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "html_url": "https://github.com/rust-lang/rust/commit/fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "086b2a49ec8cabf4a66cbaec6c115afe1b33c057", "url": "https://api.github.com/repos/rust-lang/rust/commits/086b2a49ec8cabf4a66cbaec6c115afe1b33c057", "html_url": "https://github.com/rust-lang/rust/commit/086b2a49ec8cabf4a66cbaec6c115afe1b33c057"}, {"sha": "ae31436ac739d2fe9fdb45fec1364db6007bd359", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae31436ac739d2fe9fdb45fec1364db6007bd359", "html_url": "https://github.com/rust-lang/rust/commit/ae31436ac739d2fe9fdb45fec1364db6007bd359"}], "stats": {"total": 71, "additions": 35, "deletions": 36}, "files": [{"sha": "db539f9195c9d399f8aa4b4427c96968865445e2", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -889,7 +889,7 @@ pub trait PrettyPrinter<'tcx>:\n                 // fallback\n                 p!(write(\"{:?}\", ct.val));\n                 if print_ty {\n-                    p!(write(\" : \"), print(ct.ty));\n+                    p!(write(\": \"), print(ct.ty));\n                 }\n             }\n         };\n@@ -1009,7 +1009,7 @@ pub trait PrettyPrinter<'tcx>:\n                     // fallback\n                     p!(write(\"{:?}\", ct));\n                     if print_ty {\n-                        p!(write(\" : \"), print(ty));\n+                        p!(write(\": \"), print(ty));\n                     }\n                 }\n             }\n@@ -1610,7 +1610,7 @@ where\n     type Error = P::Error;\n     fn print(&self, mut cx: P) -> Result<Self::Output, Self::Error> {\n         define_scoped_cx!(cx);\n-        p!(print(self.0), write(\" : \"), print(self.1));\n+        p!(print(self.0), write(\": \"), print(self.1));\n         Ok(cx)\n     }\n }"}, {"sha": "2cc09e8b1479c1c3ae71b3cbe436151670566ffc", "filename": "src/test/ui/error-codes/e0119/complex-impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fcomplex-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fcomplex-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fcomplex-impl.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -6,7 +6,7 @@ LL | impl<R> External for (Q, R) {}\n    |\n    = note: conflicting implementation in crate `complex_impl_support`:\n            - impl<'a, 'b, 'c, T, U, V, W> complex_impl_support::External for (T, complex_impl_support::M<'a, 'b, 'c, std::boxed::Box<U>, V, W>)\n-             where <U as std::ops::FnOnce<(T,)>>::Output == V, <V as std::iter::Iterator>::Item == T, 'b : 'a, T : 'a, U: std::ops::FnOnce<(T,)>, U : 'static, V: std::iter::Iterator, V: std::clone::Clone, W: std::ops::Add, <W as std::ops::Add>::Output: std::marker::Copy;\n+             where <U as std::ops::FnOnce<(T,)>>::Output == V, <V as std::iter::Iterator>::Item == T, 'b: 'a, T: 'a, U: std::ops::FnOnce<(T,)>, U: 'static, V: std::iter::Iterator, V: std::clone::Clone, W: std::ops::Add, <W as std::ops::Add>::Output: std::marker::Copy;\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --> $DIR/complex-impl.rs:9:1"}, {"sha": "60466d0bcd040b4e6a8a8c76d59442761c24d279", "filename": "src/test/ui/generic-associated-types/issue-62326-parameter-out-of-range.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-62326-parameter-out-of-range.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-62326-parameter-out-of-range.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-62326-parameter-out-of-range.rs?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -4,9 +4,8 @@\n // FIXME(generic-associated-types) Investigate why this doesn't compile.\n \n trait Iterator {\n-//~^ ERROR the requirement `for<'a> <Self as Iterator>::Item<'a> : 'a` is not satisfied\n+    //~^ ERROR the requirement `for<'a> <Self as Iterator>::Item<'a>: 'a` is not satisfied\n     type Item<'a>: 'a;\n }\n \n-\n fn main() {}"}, {"sha": "4dc69cdd1dcf04d986827d34c55b48291ce607e8", "filename": "src/test/ui/generic-associated-types/issue-62326-parameter-out-of-range.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-62326-parameter-out-of-range.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-62326-parameter-out-of-range.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-62326-parameter-out-of-range.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -1,4 +1,4 @@\n-error[E0280]: the requirement `for<'a> <Self as Iterator>::Item<'a> : 'a` is not satisfied\n+error[E0280]: the requirement `for<'a> <Self as Iterator>::Item<'a>: 'a` is not satisfied\n   --> $DIR/issue-62326-parameter-out-of-range.rs:6:1\n    |\n LL |   trait Iterator {"}, {"sha": "c4671736d79ecbc34616230eb08a275485222f51", "filename": "src/test/ui/reject-specialized-drops-8142.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Freject-specialized-drops-8142.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Freject-specialized-drops-8142.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freject-specialized-drops-8142.rs?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -21,11 +21,11 @@ struct TupleStruct<T>(T);\n union Union<T: Copy> { f: T }\n \n impl<'al,'adds_bnd:'al> Drop for K<'al,'adds_bnd> {                        // REJECT\n-    //~^ ERROR `Drop` impl requires `'adds_bnd : 'al`\n+    //~^ ERROR `Drop` impl requires `'adds_bnd: 'al`\n     fn drop(&mut self) { } }\n \n impl<'al,'adds_bnd>     Drop for L<'al,'adds_bnd> where 'adds_bnd:'al {    // REJECT\n-    //~^ ERROR `Drop` impl requires `'adds_bnd : 'al`\n+    //~^ ERROR `Drop` impl requires `'adds_bnd: 'al`\n     fn drop(&mut self) { } }\n \n impl<'ml>               Drop for M<'ml>         { fn drop(&mut self) { } } // ACCEPT\n@@ -44,7 +44,7 @@ impl<AddsBnd:Bound> Drop for Q<AddsBnd> { fn drop(&mut self) { } } // REJECT\n //~^ ERROR `Drop` impl requires `AddsBnd: Bound`\n \n impl<'rbnd,AddsRBnd:'rbnd> Drop for R<AddsRBnd> { fn drop(&mut self) { } } // REJECT\n-//~^ ERROR `Drop` impl requires `AddsRBnd : 'rbnd`\n+//~^ ERROR `Drop` impl requires `AddsRBnd: 'rbnd`\n \n impl<Bs:Bound>    Drop for S<Bs>          { fn drop(&mut self) { } } // ACCEPT\n "}, {"sha": "c09418de51830a057a35685d967d72220e38731f", "filename": "src/test/ui/reject-specialized-drops-8142.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Freject-specialized-drops-8142.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Freject-specialized-drops-8142.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freject-specialized-drops-8142.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -10,7 +10,7 @@ note: the implementor must specify the same requirement\n LL | union Union<T: Copy> { f: T }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error[E0367]: `Drop` impl requires `'adds_bnd : 'al` but the struct it is implemented for does not\n+error[E0367]: `Drop` impl requires `'adds_bnd: 'al` but the struct it is implemented for does not\n   --> $DIR/reject-specialized-drops-8142.rs:23:20\n    |\n LL | impl<'al,'adds_bnd:'al> Drop for K<'al,'adds_bnd> {                        // REJECT\n@@ -22,7 +22,7 @@ note: the implementor must specify the same requirement\n LL | struct K<'l1,'l2> { x: &'l1 i8, y: &'l2 u8 }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error[E0367]: `Drop` impl requires `'adds_bnd : 'al` but the struct it is implemented for does not\n+error[E0367]: `Drop` impl requires `'adds_bnd: 'al` but the struct it is implemented for does not\n   --> $DIR/reject-specialized-drops-8142.rs:27:67\n    |\n LL | impl<'al,'adds_bnd>     Drop for L<'al,'adds_bnd> where 'adds_bnd:'al {    // REJECT\n@@ -73,7 +73,7 @@ note: the implementor must specify the same requirement\n LL | struct Q<Tq> { x: *const Tq }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error[E0367]: `Drop` impl requires `AddsRBnd : 'rbnd` but the struct it is implemented for does not\n+error[E0367]: `Drop` impl requires `AddsRBnd: 'rbnd` but the struct it is implemented for does not\n   --> $DIR/reject-specialized-drops-8142.rs:46:21\n    |\n LL | impl<'rbnd,AddsRBnd:'rbnd> Drop for R<AddsRBnd> { fn drop(&mut self) { } } // REJECT"}, {"sha": "1da8e648251ad0d71ed6cad3e8995b7336f1fb1f", "filename": "src/test/ui/rfc-2093-infer-outlives/cross-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fcross-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fcross-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fcross-crate.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -6,7 +6,7 @@ LL | |     bar: std::slice::IterMut<'a, T>\n LL | | }\n    | |_^\n    |\n-   = note: T : 'a\n+   = note: T: 'a\n \n error: aborting due to previous error\n "}, {"sha": "868ca2c4587d12159c1176d11ec3264b23a8195b", "filename": "src/test/ui/rfc-2093-infer-outlives/enum.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fenum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fenum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fenum.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -6,7 +6,7 @@ LL | |     One(Bar<'a, T>)\n LL | | }\n    | |_^\n    |\n-   = note: T : 'a\n+   = note: T: 'a\n \n error: rustc_outlives\n   --> $DIR/enum.rs:13:1\n@@ -16,7 +16,7 @@ LL | |     field2: &'b U\n LL | | }\n    | |_^\n    |\n-   = note: U : 'b\n+   = note: U: 'b\n \n error: rustc_outlives\n   --> $DIR/enum.rs:19:1\n@@ -26,7 +26,7 @@ LL | |     One(&'c Yang<K>)\n LL | | }\n    | |_^\n    |\n-   = note: K : 'c\n+   = note: K: 'c\n \n error: aborting due to 3 previous errors\n "}, {"sha": "adb718ad794a68a7ffa836e94f698ef79269e334", "filename": "src/test/ui/rfc-2093-infer-outlives/explicit-dyn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-dyn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-dyn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-dyn.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -7,7 +7,7 @@ LL | |     foo: Box<dyn Trait<'a, A>>\n LL | | }\n    | |_^\n    |\n-   = note: A : 'a\n+   = note: A: 'a\n \n error: aborting due to previous error\n "}, {"sha": "062f5d5e9a73d340aea99756ba8c90b8a613516c", "filename": "src/test/ui/rfc-2093-infer-outlives/explicit-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-enum.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -6,7 +6,7 @@ LL | |     One(Bar<'a, U>)\n LL | | }\n    | |_^\n    |\n-   = note: U : 'a\n+   = note: U: 'a\n \n error: aborting due to previous error\n "}, {"sha": "a85aa3d7565bab7af4c41ee97cc6174996007ec6", "filename": "src/test/ui/rfc-2093-infer-outlives/explicit-projection.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-projection.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-projection.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-projection.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -7,7 +7,7 @@ LL | |     foo: <A as Trait<'a, B>>::Type\n LL | | }\n    | |_^\n    |\n-   = note: B : 'a\n+   = note: B: 'a\n \n error: aborting due to previous error\n "}, {"sha": "309c54bb44934004a48811165bb9023795f872fd", "filename": "src/test/ui/rfc-2093-infer-outlives/explicit-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-struct.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -6,7 +6,7 @@ LL | |     bar: Bar<'b, U>\n LL | | }\n    | |_^\n    |\n-   = note: U : 'b\n+   = note: U: 'b\n \n error: aborting due to previous error\n "}, {"sha": "47c283faf5073b09f6442517e022e1eba60d1f71", "filename": "src/test/ui/rfc-2093-infer-outlives/explicit-union.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-union.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-union.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-union.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -6,7 +6,7 @@ LL | |     bar: Bar<'b, U>\n LL | | }\n    | |_^\n    |\n-   = note: U : 'b\n+   = note: U: 'b\n \n error: aborting due to previous error\n "}, {"sha": "6fbb7cf4cb8a6709ab9b417841572549709864c3", "filename": "src/test/ui/rfc-2093-infer-outlives/infer-static.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Finfer-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Finfer-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Finfer-static.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -6,7 +6,7 @@ LL | |     bar: Bar<U>\n LL | | }\n    | |_^\n    |\n-   = note: U : 'static\n+   = note: U: 'static\n \n error: aborting due to previous error\n "}, {"sha": "10387f51b1e448dcfb785cc53ef7846e2303a970", "filename": "src/test/ui/rfc-2093-infer-outlives/nested-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fnested-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fnested-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fnested-enum.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -7,7 +7,7 @@ LL | |     One(Bar<'a, T>)\n LL | | }\n    | |_^\n    |\n-   = note: T : 'a\n+   = note: T: 'a\n \n error: aborting due to previous error\n "}, {"sha": "ffdd5542bb4b51a956e475d8b628e9d7132e4d98", "filename": "src/test/ui/rfc-2093-infer-outlives/nested-regions.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fnested-regions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fnested-regions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fnested-regions.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -6,9 +6,9 @@ LL | |     x: &'a &'b T\n LL | | }\n    | |_^\n    |\n-   = note: 'b : 'a\n-   = note: T : 'a\n-   = note: T : 'b\n+   = note: 'b: 'a\n+   = note: T: 'a\n+   = note: T: 'b\n \n error: aborting due to previous error\n "}, {"sha": "86bcbe640e4bc1b5c3316b74d4810a3000aaa923", "filename": "src/test/ui/rfc-2093-infer-outlives/nested-structs.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fnested-structs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fnested-structs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fnested-structs.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -6,7 +6,7 @@ LL | |     field1: Bar<'a, T>\n LL | | }\n    | |_^\n    |\n-   = note: T : 'a\n+   = note: T: 'a\n \n error: aborting due to previous error\n "}, {"sha": "e0f248fa38a049334fde2a1f122c63841374b986", "filename": "src/test/ui/rfc-2093-infer-outlives/nested-union.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fnested-union.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fnested-union.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fnested-union.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -6,7 +6,7 @@ LL | |     field1: Bar<'a, T>\n LL | | }\n    | |_^\n    |\n-   = note: T : 'a\n+   = note: T: 'a\n \n error: aborting due to previous error\n "}, {"sha": "3746bab4d549690ac5a80dc82939d688c25ff1ad", "filename": "src/test/ui/rfc-2093-infer-outlives/projection.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fprojection.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fprojection.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fprojection.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -6,7 +6,7 @@ LL | |     bar: &'a T::Item\n LL | | }\n    | |_^\n    |\n-   = note: <T as std::iter::Iterator>::Item : 'a\n+   = note: <T as std::iter::Iterator>::Item: 'a\n \n error: aborting due to previous error\n "}, {"sha": "d69aaf6f849facea00f8d8ffef94ec1068904070", "filename": "src/test/ui/rfc-2093-infer-outlives/reference.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Freference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Freference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Freference.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -6,7 +6,7 @@ LL | |     bar: &'a T,\n LL | | }\n    | |_^\n    |\n-   = note: T : 'a\n+   = note: T: 'a\n \n error: aborting due to previous error\n "}, {"sha": "77577fe09457e65cced7671379c5e92a867655dd", "filename": "src/test/ui/rfc-2093-infer-outlives/self-dyn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fself-dyn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fself-dyn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fself-dyn.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -7,7 +7,7 @@ LL | |     foo: Box<dyn Trait<'a, 'b, A>>\n LL | | }\n    | |_^\n    |\n-   = note: A : 'a\n+   = note: A: 'a\n \n error: aborting due to previous error\n "}, {"sha": "b972ad8446602c062fbe2ae98b8651063cac55a2", "filename": "src/test/ui/rfc-2093-infer-outlives/self-structs.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fself-structs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fself-structs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fself-structs.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -6,7 +6,7 @@ LL | |     field1: dyn Bar<'a, 'b, T>\n LL | | }\n    | |_^\n    |\n-   = note: T : 'a\n+   = note: T: 'a\n \n error: aborting due to previous error\n "}, {"sha": "37cf6f89d67370f95c91817ee104b02903f338af", "filename": "src/test/ui/trivial-bounds/trivial-bounds-lint.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe1e81561aa1c0ba5779709d081107ea0bfa08e5/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-lint.stderr?ref=fe1e81561aa1c0ba5779709d081107ea0bfa08e5", "patch": "@@ -22,19 +22,19 @@ error: Trait bound i32: Z does not depend on any type or lifetime parameters\n LL | fn global_projection() where i32: Z<S = i32> {}\n    |                                   ^^^^^^^^^^\n \n-error: Lifetime bound i32 : 'static does not depend on any type or lifetime parameters\n+error: Lifetime bound i32: 'static does not depend on any type or lifetime parameters\n   --> $DIR/trivial-bounds-lint.rs:29:34\n    |\n LL | fn global_lifetimes() where i32: 'static, &'static str: 'static {}\n    |                                  ^^^^^^^\n \n-error: Lifetime bound &'static str : 'static does not depend on any type or lifetime parameters\n+error: Lifetime bound &'static str: 'static does not depend on any type or lifetime parameters\n   --> $DIR/trivial-bounds-lint.rs:29:57\n    |\n LL | fn global_lifetimes() where i32: 'static, &'static str: 'static {}\n    |                                                         ^^^^^^^\n \n-error: Lifetime bound 'static : 'static does not depend on any type or lifetime parameters\n+error: Lifetime bound 'static: 'static does not depend on any type or lifetime parameters\n   --> $DIR/trivial-bounds-lint.rs:35:37\n    |\n LL | fn global_outlives() where 'static: 'static {}"}]}