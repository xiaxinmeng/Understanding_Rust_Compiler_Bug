{"sha": "0468929ce3f3e142287124a37f3318cc3b53a52b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0Njg5MjljZTNmM2UxNDIyODcxMjRhMzdmMzMxOGNjM2I1M2E1MmI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-04T07:40:13Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-08T21:04:54Z"}, "message": "move error allocation test to error.rs", "tree": {"sha": "ca1ef7e48b951a6c3342894d8ae44ac82a3a535c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca1ef7e48b951a6c3342894d8ae44ac82a3a535c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0468929ce3f3e142287124a37f3318cc3b53a52b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0468929ce3f3e142287124a37f3318cc3b53a52b", "html_url": "https://github.com/rust-lang/rust/commit/0468929ce3f3e142287124a37f3318cc3b53a52b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0468929ce3f3e142287124a37f3318cc3b53a52b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "564758c4c329e89722454dd2fbb35f1ac0b8b47c", "url": "https://api.github.com/repos/rust-lang/rust/commits/564758c4c329e89722454dd2fbb35f1ac0b8b47c", "html_url": "https://github.com/rust-lang/rust/commit/564758c4c329e89722454dd2fbb35f1ac0b8b47c"}], "stats": {"total": 53, "additions": 26, "deletions": 27}, "files": [{"sha": "2310867400cf6f7f5982b3c545c3b198d66b5b5a", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0468929ce3f3e142287124a37f3318cc3b53a52b/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0468929ce3f3e142287124a37f3318cc3b53a52b/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=0468929ce3f3e142287124a37f3318cc3b53a52b", "patch": "@@ -354,7 +354,7 @@ pub enum UnsupportedOpInfo<'tcx> {\n     Unsupported(String),\n \n     /// When const-prop encounters a situation it does not support, it raises this error.\n-    /// This must not allocate for performance reasons.\n+    /// This must not allocate for performance reasons (hence `str`, not `String`).\n     ConstPropUnsupported(&'tcx str),\n \n     // -- Everything below is not categorized yet --\n@@ -612,3 +612,19 @@ impl fmt::Debug for InterpError<'_> {\n         }\n     }\n }\n+\n+impl InterpError<'_> {\n+    /// Some errors allocate to be created as they contain free-from strings.\n+    /// And sometiems we want to be sure that did not happen as it is a\n+    /// waste of resources.\n+    pub fn allocates(&self) -> bool {\n+        match self {\n+            InterpError::MachineStop(_)\n+            | InterpError::Unsupported(UnsupportedOpInfo::Unsupported(_))\n+            | InterpError::Unsupported(UnsupportedOpInfo::ValidationFailure(_))\n+            | InterpError::UndefinedBehavior(UndefinedBehaviorInfo::Ub(_))\n+            | InterpError::UndefinedBehavior(UndefinedBehaviorInfo::UbExperimental(_)) => true,\n+            _ => false,\n+        }\n+    }\n+}"}, {"sha": "1fea9281b931bc24675e191e3446e366aa20074c", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 9, "deletions": 26, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/0468929ce3f3e142287124a37f3318cc3b53a52b/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0468929ce3f3e142287124a37f3318cc3b53a52b/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=0468929ce3f3e142287124a37f3318cc3b53a52b", "patch": "@@ -404,32 +404,15 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n         let r = match f(self) {\n             Ok(val) => Some(val),\n             Err(error) => {\n-                use rustc::mir::interpret::{\n-                    InterpError::*, UndefinedBehaviorInfo, UnsupportedOpInfo,\n-                };\n-                match error.kind {\n-                    MachineStop(_) => bug!(\"ConstProp does not stop\"),\n-\n-                    // Some error shouldn't come up because creating them causes\n-                    // an allocation, which we should avoid. When that happens,\n-                    // dedicated error variants should be introduced instead.\n-                    // Only test this in debug builds though to avoid disruptions.\n-                    Unsupported(UnsupportedOpInfo::Unsupported(_))\n-                    | Unsupported(UnsupportedOpInfo::ValidationFailure(_))\n-                    | UndefinedBehavior(UndefinedBehaviorInfo::Ub(_))\n-                    | UndefinedBehavior(UndefinedBehaviorInfo::UbExperimental(_))\n-                        if cfg!(debug_assertions) =>\n-                    {\n-                        bug!(\"const-prop encountered allocating error: {:?}\", error.kind);\n-                    }\n-\n-                    Unsupported(_)\n-                    | UndefinedBehavior(_)\n-                    | InvalidProgram(_)\n-                    | ResourceExhaustion(_) => {\n-                        // Ignore these errors.\n-                    }\n-                }\n+                // Some errors shouldn't come up because creating them causes\n+                // an allocation, which we should avoid. When that happens,\n+                // dedicated error variants should be introduced instead.\n+                // Only test this in debug builds though to avoid disruptions.\n+                debug_assert!(\n+                    !error.kind.allocates(),\n+                    \"const-prop encountered allocating error: {}\",\n+                    error\n+                );\n                 None\n             }\n         };"}]}