{"sha": "725ceae45531b70eb55219272de20f4262b43cad", "node_id": "C_kwDOAAsO6NoAKDcyNWNlYWU0NTUzMWI3MGViNTUyMTkyNzJkZTIwZjQyNjJiNDNjYWQ", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2022-07-07T13:04:23Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2022-08-12T08:53:07Z"}, "message": "Support wrapping 128-bit tag ranges for cpp-like enum debuginfo.", "tree": {"sha": "46c5ceccf370f3221ac1eaba8ca78e0860b5dfbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46c5ceccf370f3221ac1eaba8ca78e0860b5dfbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/725ceae45531b70eb55219272de20f4262b43cad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/725ceae45531b70eb55219272de20f4262b43cad", "html_url": "https://github.com/rust-lang/rust/commit/725ceae45531b70eb55219272de20f4262b43cad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/725ceae45531b70eb55219272de20f4262b43cad/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "063ebfa5707015f895fc50c3a1dd70ab6867bc9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/063ebfa5707015f895fc50c3a1dd70ab6867bc9b", "html_url": "https://github.com/rust-lang/rust/commit/063ebfa5707015f895fc50c3a1dd70ab6867bc9b"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "bf5c006c4de43849cd167f341eb07825410a45b3", "filename": "src/etc/natvis/intrinsic.natvis", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/725ceae45531b70eb55219272de20f4262b43cad/src%2Fetc%2Fnatvis%2Fintrinsic.natvis", "raw_url": "https://github.com/rust-lang/rust/raw/725ceae45531b70eb55219272de20f4262b43cad/src%2Fetc%2Fnatvis%2Fintrinsic.natvis", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fnatvis%2Fintrinsic.natvis?ref=725ceae45531b70eb55219272de20f4262b43cad", "patch": "@@ -1,4 +1,4 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <AutoVisualizer xmlns=\"http://schemas.microsoft.com/vstudio/debugger/natvis/2010\">\n   <Type Name=\"str\">\n     <DisplayString>{(char*)data_ptr,[length]s8}</DisplayString>\n@@ -179,7 +179,9 @@\n       <Parameter Name=\"y_lo\" Type=\"unsigned __int64\" />\n     </Intrinsic>\n \n-    <Intrinsic Name=\"in_range128\" Expression=\"lt_or_eq128(begin_hi, begin_lo, tag128_hi, tag128_lo) &amp;&amp; lt_or_eq128(tag128_hi, tag128_lo, end_hi, end_lo)\">\n+    <Intrinsic Name=\"in_range128\" Expression=\"(lt128(begin_hi, begin_lo, end_hi, end_lo)) ?\n+                                              (lt_or_eq128(begin_hi, begin_lo, tag128_hi, tag128_lo) &amp;&amp; lt_or_eq128(tag128_hi, tag128_lo, end_hi, end_lo)) :\n+                                              (lt_or_eq128(begin_hi, begin_lo, tag128_hi, tag128_lo) || lt_or_eq128(tag128_hi, tag128_lo, end_hi, end_lo))\">\n       <Parameter Name=\"begin_hi\" Type=\"unsigned __int64\" />\n       <Parameter Name=\"begin_lo\" Type=\"unsigned __int64\" />\n       <Parameter Name=\"end_hi\" Type=\"unsigned __int64\" />"}, {"sha": "10b16c2f89783b5f842a4f495a7fc2cb24cdd6ea", "filename": "src/test/debuginfo/msvc-pretty-enums.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/725ceae45531b70eb55219272de20f4262b43cad/src%2Ftest%2Fdebuginfo%2Fmsvc-pretty-enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/725ceae45531b70eb55219272de20f4262b43cad/src%2Ftest%2Fdebuginfo%2Fmsvc-pretty-enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmsvc-pretty-enums.rs?ref=725ceae45531b70eb55219272de20f4262b43cad", "patch": "@@ -53,6 +53,18 @@\n // cdb-command: dx niche128_none\n // cdb-check: niche128_none    : None [Type: enum2$<core::option::Option<core::num::nonzero::NonZeroI128> >]\n \n+// cdb-command: dx wrapping_niche128_dataful\n+// cdb-check: wrapping_niche128_dataful : X [Type: enum2$<msvc_pretty_enums::Wrapping128Niche>]\n+// cdb-check:    [+0x000] __0              [Type: msvc_pretty_enums::Wrapping128]\n+\n+// cdb-command: dx wrapping_niche128_none1\n+// cdb-check: wrapping_niche128_none1 : Y [Type: enum2$<msvc_pretty_enums::Wrapping128Niche>]\n+// cdb-check:    [+0x000] __0              [Type: msvc_pretty_enums::Wrapping128]\n+\n+// cdb-command: dx wrapping_niche128_none2\n+// cdb-check: wrapping_niche128_none2 : Z [Type: enum2$<msvc_pretty_enums::Wrapping128Niche>]\n+// cdb-check:    [+0x000] __0              [Type: msvc_pretty_enums::Wrapping128]\n+\n // cdb-command: dx niche_w_fields_1_some,d\n // cdb-check: niche_w_fields_1_some,d : A [Type: enum2$<msvc_pretty_enums::NicheLayoutWithFields1>]\n // cdb-check:     [+0x[...]] __0              : 0x[...] : 77 [Type: unsigned char *]\n@@ -64,6 +76,7 @@\n \n // cdb-command: dx niche_w_fields_2_some,d\n // cdb-check: niche_w_fields_2_some,d : A [Type: enum2$<msvc_pretty_enums::NicheLayoutWithFields2>]\n+// cdb-check:     [<Raw View>]     [Type: enum2$<msvc_pretty_enums::NicheLayoutWithFields2>]\n // cdb-check:     [+0x[...]] __0              : 800 [Type: core::num::nonzero::NonZeroU32]\n // cdb-check:     [+0x[...]] __1              : 900 [Type: unsigned __int64]\n \n@@ -105,6 +118,8 @@\n // cdb-check: niche_w_fields_std_result_err,d : Err [Type: enum2$<core::result::Result<alloc::boxed::Box<slice$<u8>,alloc::alloc::Global>,u64> >]\n // cdb-check:    [+0x[...]] __0              : 789 [Type: unsigned __int64]\n \n+#![feature(rustc_attrs)]\n+\n use std::num::{NonZeroI128, NonZeroU32};\n \n pub enum CStyleEnum {\n@@ -141,6 +156,18 @@ enum NicheLayoutWithFields3 {\n     F,\n }\n \n+#[rustc_layout_scalar_valid_range_start(340282366920938463463374607431768211454)]\n+#[rustc_layout_scalar_valid_range_end(1)]\n+#[repr(transparent)]\n+struct Wrapping128(u128);\n+\n+// #[rustc_layout(debug)]\n+enum Wrapping128Niche {\n+    X(Wrapping128),\n+    Y,\n+    Z,\n+}\n+\n fn main() {\n     let a = Some(CStyleEnum::Low);\n     let b = Option::<CStyleEnum>::None;\n@@ -157,6 +184,11 @@ fn main() {\n     let niche128_some = Some(NonZeroI128::new(123456).unwrap());\n     let niche128_none: Option<NonZeroI128> = None;\n \n+    let wrapping_niche128_dataful =\n+        unsafe { Wrapping128Niche::X(Wrapping128(340282366920938463463374607431768211454)) };\n+    let wrapping_niche128_none1 = Wrapping128Niche::Y;\n+    let wrapping_niche128_none2 = Wrapping128Niche::Z;\n+\n     let niche_w_fields_1_some = NicheLayoutWithFields1::A(&77, 7);\n     let niche_w_fields_1_none = NicheLayoutWithFields1::B(99);\n "}]}