{"sha": "f089cf9b2ff2602edd989480b7cd9d4b8b820f84", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwODljZjliMmZmMjYwMmVkZDk4OTQ4MGI3Y2Q5ZDRiOGI4MjBmODQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-17T19:05:06Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-18T13:05:43Z"}, "message": "Update E0102's example (fixes #33057)", "tree": {"sha": "1c187b77bf8ad2f1506b2f98b3b9f9366e8781be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c187b77bf8ad2f1506b2f98b3b9f9366e8781be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f089cf9b2ff2602edd989480b7cd9d4b8b820f84", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXFNunAAoJEDu/TT4u95+Y5QMQAKYKGf8nvwN1A2AFQ54P5Bp+\npa9J8mrVccQiUF2borzz1nmdRgsEY0xbXEBpxIFrDS5qnmXTvtaN1QabBdQNIJYw\nEtItFSPywljFUgwIvdiwLhgMXCENgtNuPqpcpiNa2kNhF+5QWbKF9m8T/BMwswqi\nkYMU4dSb+ypIpf6mgfa6mDEesqbCZsPAwYgRwcXMfWmBiGfobKMs0e9B0xw8d5G0\nwjnKx/ZlHIRYvr7ll12BmG6lE1jF8h/d+nmvN7qc5HlfVMhXkPIAnXDbd07hT+tP\nYBD4HO8NyAA5UgvsHVhK+kRyk6yHZXgu+OH3y99zAfqlpAlAduufbA0zzwdq5WWu\n2oJqhPgiytY2ywZF9tsv4llfPyPt8lTWCvCMkdNmNwiPfJhg18QH197+3BgFiGTa\nlBdV9LDt2j3KD6aKO19aoWbv8ATDGuW37Lyy4zLIz5a3r3aOue15Qi/U2HZODmjp\nRgDnzEfd6xQk1OYL4N1I6irhYesUgKaIFbWp8S9KjLM3oZQqqZACmYfN4E59+T2q\nhlCM/fWRqxJRjmml1ESxHZLtfBSuB7Y0RsjcOxudD02N75blJc67O9xGWIYcZF56\nUml5cy6tVhPGxed7XatUOPtdErjXwhJNLQFl6777TK1DR66aQ0NvohgwWiEH1G8K\nIVYUEC6Yb4OCAh92Ad0y\n=x4Vj\n-----END PGP SIGNATURE-----", "payload": "tree 1c187b77bf8ad2f1506b2f98b3b9f9366e8781be\nparent a7c3a294bf33880d27fc7c3f662a981b1625c0bb\nauthor Manish Goregaokar <manishsmail@gmail.com> 1460919906 +0530\ncommitter Manish Goregaokar <manishsmail@gmail.com> 1460984743 +0530\n\nUpdate E0102's example (fixes #33057)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f089cf9b2ff2602edd989480b7cd9d4b8b820f84", "html_url": "https://github.com/rust-lang/rust/commit/f089cf9b2ff2602edd989480b7cd9d4b8b820f84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f089cf9b2ff2602edd989480b7cd9d4b8b820f84/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7c3a294bf33880d27fc7c3f662a981b1625c0bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7c3a294bf33880d27fc7c3f662a981b1625c0bb", "html_url": "https://github.com/rust-lang/rust/commit/a7c3a294bf33880d27fc7c3f662a981b1625c0bb"}], "stats": {"total": 33, "additions": 6, "deletions": 27}, "files": [{"sha": "ed74a5166d40a256c76f7b78812c137df5191889", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 6, "deletions": 27, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/f089cf9b2ff2602edd989480b7cd9d4b8b820f84/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f089cf9b2ff2602edd989480b7cd9d4b8b820f84/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=f089cf9b2ff2602edd989480b7cd9d4b8b820f84", "patch": "@@ -1420,45 +1420,24 @@ fn main() {\n \"##,\n \n E0102: r##\"\n-You hit this error because the compiler lacks information to\n-determine a type for this variable. Erroneous code example:\n+You hit this error because the compiler lacks the information to\n+determine the type of this variable. Erroneous code example:\n \n ```compile_fail\n-fn demo(devil: fn () -> !) {\n-    let x: &_ = devil();\n-    // error: cannot determine a type for this local variable\n-}\n-\n-fn oh_no() -> ! { panic!(\"the devil is in the details\") }\n-\n fn main() {\n-    demo(oh_no);\n+    // could be an array of anything\n+    let x = []; // error: cannot determine a type for this local variable\n }\n ```\n \n To solve this situation, constrain the type of the variable.\n Examples:\n \n-```no_run\n+```\n #![allow(unused_variables)]\n \n-fn some_func(x: &u32) {\n-    // some code\n-}\n-\n-fn demo(devil: fn () -> !) {\n-    let x: &u32 = devil();\n-    // Here we defined the type at the variable creation\n-\n-    let x: &_ = devil();\n-    some_func(x);\n-    // Here, the type is determined by the function argument type\n-}\n-\n-fn oh_no() -> ! { panic!(\"the devil is in the details\") }\n-\n fn main() {\n-    demo(oh_no);\n+    let x: [u8; 0] = [];\n }\n ```\n \"##,"}]}