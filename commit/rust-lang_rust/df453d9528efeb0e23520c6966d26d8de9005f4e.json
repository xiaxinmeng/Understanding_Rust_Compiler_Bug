{"sha": "df453d9528efeb0e23520c6966d26d8de9005f4e", "node_id": "C_kwDOAAsO6NoAKGRmNDUzZDk1MjhlZmViMGUyMzUyMGM2OTY2ZDI2ZDhkZTkwMDVmNGU", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2023-03-27T16:56:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-27T16:56:20Z"}, "message": "Rollup merge of #109445 - Teapot4195:issue-109407-fix, r=ozkanonur\n\nAllow passing the --nocapture flag to compiletest\n\ncloses #109407", "tree": {"sha": "6a1df7cb63fae0fcd3b1ab911f1c4e58e7c3c296", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a1df7cb63fae0fcd3b1ab911f1c4e58e7c3c296"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df453d9528efeb0e23520c6966d26d8de9005f4e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkIcq0CRBK7hj4Ov3rIwAA464IAJk2PvmaIQcDwvOVETqDW4TA\njSAXlvYBtZ3efPEE/Px7P+UOfMNopHq6Siu039H7ClTEY13g+SniNnb+8ZuW4Wbo\n7Nme3akf3a2gQZOK1M1eoUIrWqqBmMKe1Os/tbnaGY1yhVKnjPF0m/6xjGgGGd3N\ntxwI8BrlDPukme9Fuueri8APsjhmaExtea2pxsRhhk/o4pTN09kRMR1tSbWOHNNL\nj8Kbhz8ahxnxoY07Quij1ZuF5ZtYMFFZ1MlcQA8uqg6TA5MrfxVuigvMutXHd/SW\nPbuPP0b/CFkwXAVz5guet1ZN40UdfUdhyFMuWddoF0vpJI+mKSGRmMcGjiFXi0g=\n=/Fby\n-----END PGP SIGNATURE-----\n", "payload": "tree 6a1df7cb63fae0fcd3b1ab911f1c4e58e7c3c296\nparent b1e8be783f13dfb2f6e7ade995bde66778a5a43d\nparent 2fe4cad77f03e9eb323382e531d136f0e32b3645\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1679936180 +0200\ncommitter GitHub <noreply@github.com> 1679936180 +0200\n\nRollup merge of #109445 - Teapot4195:issue-109407-fix, r=ozkanonur\n\nAllow passing the --nocapture flag to compiletest\n\ncloses #109407\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df453d9528efeb0e23520c6966d26d8de9005f4e", "html_url": "https://github.com/rust-lang/rust/commit/df453d9528efeb0e23520c6966d26d8de9005f4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df453d9528efeb0e23520c6966d26d8de9005f4e/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1e8be783f13dfb2f6e7ade995bde66778a5a43d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1e8be783f13dfb2f6e7ade995bde66778a5a43d", "html_url": "https://github.com/rust-lang/rust/commit/b1e8be783f13dfb2f6e7ade995bde66778a5a43d"}, {"sha": "2fe4cad77f03e9eb323382e531d136f0e32b3645", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fe4cad77f03e9eb323382e531d136f0e32b3645", "html_url": "https://github.com/rust-lang/rust/commit/2fe4cad77f03e9eb323382e531d136f0e32b3645"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "28c045f83824b2a506ab68b4ce0dd4ca6b4bec56", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df453d9528efeb0e23520c6966d26d8de9005f4e/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df453d9528efeb0e23520c6966d26d8de9005f4e/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=df453d9528efeb0e23520c6966d26d8de9005f4e", "patch": "@@ -384,6 +384,8 @@ pub struct Config {\n     pub only_modified: bool,\n \n     pub target_cfg: LazyCell<TargetCfg>,\n+\n+    pub nocapture: bool,\n }\n \n impl Config {"}, {"sha": "bce61c55c3d0a57617bd2542ed2ca064a4191d83", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/df453d9528efeb0e23520c6966d26d8de9005f4e/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df453d9528efeb0e23520c6966d26d8de9005f4e/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=df453d9528efeb0e23520c6966d26d8de9005f4e", "patch": "@@ -152,6 +152,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         )\n         .optflag(\"\", \"force-rerun\", \"rerun tests even if the inputs are unchanged\")\n         .optflag(\"\", \"only-modified\", \"only run tests that result been modified\")\n+        .optflag(\"\", \"nocapture\", \"\")\n         .optflag(\"h\", \"help\", \"show this message\")\n         .reqopt(\"\", \"channel\", \"current Rust channel\", \"CHANNEL\")\n         .optopt(\"\", \"edition\", \"default Rust edition\", \"EDITION\");\n@@ -310,6 +311,8 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         force_rerun: matches.opt_present(\"force-rerun\"),\n \n         target_cfg: LazyCell::new(),\n+\n+        nocapture: matches.opt_present(\"nocapture\"),\n     }\n }\n \n@@ -502,6 +505,13 @@ fn configure_lldb(config: &Config) -> Option<Config> {\n }\n \n pub fn test_opts(config: &Config) -> test::TestOpts {\n+    if env::var(\"RUST_TEST_NOCAPTURE\").is_ok() {\n+        eprintln!(\n+            \"WARNING: RUST_TEST_NOCAPTURE is no longer used. \\\n+                   Use the `--nocapture` flag instead.\"\n+        );\n+    }\n+\n     test::TestOpts {\n         exclude_should_panic: false,\n         filters: config.filters.clone(),\n@@ -511,10 +521,7 @@ pub fn test_opts(config: &Config) -> test::TestOpts {\n         logfile: config.logfile.clone(),\n         run_tests: true,\n         bench_benchmarks: true,\n-        nocapture: match env::var(\"RUST_TEST_NOCAPTURE\") {\n-            Ok(val) => &val != \"0\",\n-            Err(_) => false,\n-        },\n+        nocapture: config.nocapture,\n         color: config.color,\n         shuffle: false,\n         shuffle_seed: None,"}]}