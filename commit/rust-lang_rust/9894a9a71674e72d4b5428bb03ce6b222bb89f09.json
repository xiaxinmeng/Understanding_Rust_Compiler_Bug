{"sha": "9894a9a71674e72d4b5428bb03ce6b222bb89f09", "node_id": "C_kwDOAAsO6NoAKDk4OTRhOWE3MTY3NGU3MmQ0YjU0MjhiYjAzY2U2YjIyMmJiODlmMDk", "commit": {"author": {"name": "Xavier Denis", "email": "xldenis@gmail.com", "date": "2021-10-25T20:16:07Z"}, "committer": {"name": "Xavier Denis", "email": "xldenis@gmail.com", "date": "2021-10-25T20:16:07Z"}, "message": "Add BorrowSet to public api", "tree": {"sha": "584c07832b94b0d9a5d5f09218e4231b6cd75753", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/584c07832b94b0d9a5d5f09218e4231b6cd75753"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9894a9a71674e72d4b5428bb03ce6b222bb89f09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9894a9a71674e72d4b5428bb03ce6b222bb89f09", "html_url": "https://github.com/rust-lang/rust/commit/9894a9a71674e72d4b5428bb03ce6b222bb89f09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9894a9a71674e72d4b5428bb03ce6b222bb89f09/comments", "author": {"login": "xldenis", "id": 451373, "node_id": "MDQ6VXNlcjQ1MTM3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/451373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xldenis", "html_url": "https://github.com/xldenis", "followers_url": "https://api.github.com/users/xldenis/followers", "following_url": "https://api.github.com/users/xldenis/following{/other_user}", "gists_url": "https://api.github.com/users/xldenis/gists{/gist_id}", "starred_url": "https://api.github.com/users/xldenis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xldenis/subscriptions", "organizations_url": "https://api.github.com/users/xldenis/orgs", "repos_url": "https://api.github.com/users/xldenis/repos", "events_url": "https://api.github.com/users/xldenis/events{/privacy}", "received_events_url": "https://api.github.com/users/xldenis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xldenis", "id": 451373, "node_id": "MDQ6VXNlcjQ1MTM3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/451373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xldenis", "html_url": "https://github.com/xldenis", "followers_url": "https://api.github.com/users/xldenis/followers", "following_url": "https://api.github.com/users/xldenis/following{/other_user}", "gists_url": "https://api.github.com/users/xldenis/gists{/gist_id}", "starred_url": "https://api.github.com/users/xldenis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xldenis/subscriptions", "organizations_url": "https://api.github.com/users/xldenis/orgs", "repos_url": "https://api.github.com/users/xldenis/repos", "events_url": "https://api.github.com/users/xldenis/events{/privacy}", "received_events_url": "https://api.github.com/users/xldenis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf708558b758f4473c4f35986d9492ace7bf906d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf708558b758f4473c4f35986d9492ace7bf906d", "html_url": "https://github.com/rust-lang/rust/commit/cf708558b758f4473c4f35986d9492ace7bf906d"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "952e18c1e570db6463ce2bf8b9e349bfc0a629f0", "filename": "compiler/rustc_borrowck/src/borrow_set.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9894a9a71674e72d4b5428bb03ce6b222bb89f09/compiler%2Frustc_borrowck%2Fsrc%2Fborrow_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9894a9a71674e72d4b5428bb03ce6b222bb89f09/compiler%2Frustc_borrowck%2Fsrc%2Fborrow_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fborrow_set.rs?ref=9894a9a71674e72d4b5428bb03ce6b222bb89f09", "patch": "@@ -12,22 +12,22 @@ use rustc_mir_dataflow::move_paths::MoveData;\n use std::fmt;\n use std::ops::Index;\n \n-crate struct BorrowSet<'tcx> {\n+pub struct BorrowSet<'tcx> {\n     /// The fundamental map relating bitvector indexes to the borrows\n     /// in the MIR. Each borrow is also uniquely identified in the MIR\n     /// by the `Location` of the assignment statement in which it\n     /// appears on the right hand side. Thus the location is the map\n     /// key, and its position in the map corresponds to `BorrowIndex`.\n-    crate location_map: FxIndexMap<Location, BorrowData<'tcx>>,\n+    pub location_map: FxIndexMap<Location, BorrowData<'tcx>>,\n \n     /// Locations which activate borrows.\n     /// NOTE: a given location may activate more than one borrow in the future\n     /// when more general two-phase borrow support is introduced, but for now we\n     /// only need to store one borrow index.\n-    crate activation_map: FxHashMap<Location, Vec<BorrowIndex>>,\n+    pub activation_map: FxHashMap<Location, Vec<BorrowIndex>>,\n \n     /// Map from local to all the borrows on that local.\n-    crate local_map: FxHashMap<mir::Local, FxHashSet<BorrowIndex>>,\n+    pub local_map: FxHashMap<mir::Local, FxHashSet<BorrowIndex>>,\n \n     crate locals_state_at_exit: LocalsStateAtExit,\n }\n@@ -43,27 +43,27 @@ impl<'tcx> Index<BorrowIndex> for BorrowSet<'tcx> {\n /// Location where a two-phase borrow is activated, if a borrow\n /// is in fact a two-phase borrow.\n #[derive(Copy, Clone, PartialEq, Eq, Debug)]\n-crate enum TwoPhaseActivation {\n+pub enum TwoPhaseActivation {\n     NotTwoPhase,\n     NotActivated,\n     ActivatedAt(Location),\n }\n \n #[derive(Debug, Clone)]\n-crate struct BorrowData<'tcx> {\n+pub struct BorrowData<'tcx> {\n     /// Location where the borrow reservation starts.\n     /// In many cases, this will be equal to the activation location but not always.\n-    crate reserve_location: Location,\n+    pub reserve_location: Location,\n     /// Location where the borrow is activated.\n-    crate activation_location: TwoPhaseActivation,\n+    pub activation_location: TwoPhaseActivation,\n     /// What kind of borrow this is\n-    crate kind: mir::BorrowKind,\n+    pub kind: mir::BorrowKind,\n     /// The region for which this borrow is live\n-    crate region: RegionVid,\n+    pub region: RegionVid,\n     /// Place from which we are borrowing\n-    crate borrowed_place: mir::Place<'tcx>,\n+    pub borrowed_place: mir::Place<'tcx>,\n     /// Place to which the borrow was stored\n-    crate assigned_place: mir::Place<'tcx>,\n+    pub assigned_place: mir::Place<'tcx>,\n }\n \n impl<'tcx> fmt::Display for BorrowData<'tcx> {\n@@ -78,7 +78,7 @@ impl<'tcx> fmt::Display for BorrowData<'tcx> {\n     }\n }\n \n-crate enum LocalsStateAtExit {\n+pub enum LocalsStateAtExit {\n     AllAreInvalidated,\n     SomeAreInvalidated { has_storage_dead_or_moved: BitSet<Local> },\n }"}, {"sha": "f698ffb6aeba8ff90ec0731db6753d6a799310fb", "filename": "compiler/rustc_borrowck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9894a9a71674e72d4b5428bb03ce6b222bb89f09/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9894a9a71674e72d4b5428bb03ce6b222bb89f09/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs?ref=9894a9a71674e72d4b5428bb03ce6b222bb89f09", "patch": "@@ -64,7 +64,7 @@ use facts::AllFacts;\n \n use self::path_utils::*;\n \n-mod borrow_set;\n+pub mod borrow_set;\n mod borrowck_errors;\n mod constraint_generation;\n mod constraints;"}]}