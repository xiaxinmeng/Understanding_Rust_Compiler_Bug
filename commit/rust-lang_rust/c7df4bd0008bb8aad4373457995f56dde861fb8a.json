{"sha": "c7df4bd0008bb8aad4373457995f56dde861fb8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ZGY0YmQwMDA4YmI4YWFkNDM3MzQ1Nzk5NWY1NmRkZTg2MWZiOGE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-11-05T02:50:28Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-11-05T02:50:28Z"}, "message": "Rustup to rustc 1.6.0-nightly (effcd2965 2015-11-04)\n\nfixes #437", "tree": {"sha": "934da86375281ee8e04a9a0cc8eb1781878c5fd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/934da86375281ee8e04a9a0cc8eb1781878c5fd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7df4bd0008bb8aad4373457995f56dde861fb8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7df4bd0008bb8aad4373457995f56dde861fb8a", "html_url": "https://github.com/rust-lang/rust/commit/c7df4bd0008bb8aad4373457995f56dde861fb8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7df4bd0008bb8aad4373457995f56dde861fb8a/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "729b2daf27292afe79b5ae90433da38b0141b7a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/729b2daf27292afe79b5ae90433da38b0141b7a9", "html_url": "https://github.com/rust-lang/rust/commit/729b2daf27292afe79b5ae90433da38b0141b7a9"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f9eceabfc852f85fc62c60cf36abfd937d2e05cf", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7df4bd0008bb8aad4373457995f56dde861fb8a/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c7df4bd0008bb8aad4373457995f56dde861fb8a/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=c7df4bd0008bb8aad4373457995f56dde861fb8a", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"clippy\"\n-version = \"0.0.22\"\n+version = \"0.0.23\"\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\",\n \t\"Andre Bogus <bogusandre@gmail.com>\","}, {"sha": "eaa3e0026a3d2d90dad1a1cc639f24024a24add1", "filename": "src/matches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7df4bd0008bb8aad4373457995f56dde861fb8a/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7df4bd0008bb8aad4373457995f56dde861fb8a/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=c7df4bd0008bb8aad4373457995f56dde861fb8a", "patch": "@@ -38,7 +38,7 @@ impl LateLintPass for MatchPass {\n                 // since the exhaustiveness check will ensure the last one is a catch-all,\n                 // but in some cases, an explicit match is preferred to catch situations\n                 // when an enum is extended, so we don't consider these cases\n-                arms[1].pats[0].node == PatWild(PatWildSingle) &&\n+                arms[1].pats[0].node == PatWild &&\n                 // we don't want any content in the second arm (unit or empty block)\n                 is_unit_expr(&arms[1].body) &&\n                 // finally, MATCH_BOOL doesn't apply here"}, {"sha": "01ecb2c2cf80fa34c87c8d3aa001e32b952c6359", "filename": "src/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7df4bd0008bb8aad4373457995f56dde861fb8a/src%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7df4bd0008bb8aad4373457995f56dde861fb8a/src%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmisc.rs?ref=c7df4bd0008bb8aad4373457995f56dde861fb8a", "patch": "@@ -252,7 +252,7 @@ impl LintPass for PatternPass {\n impl LateLintPass for PatternPass {\n     fn check_pat(&mut self, cx: &LateContext, pat: &Pat) {\n         if let PatIdent(_, ref ident, Some(ref right)) = pat.node {\n-            if right.node == PatWild(PatWildSingle) {\n+            if right.node == PatWild {\n                 cx.span_lint(REDUNDANT_PATTERN, pat.span, &format!(\n                     \"the `{} @ _` pattern can be written as just `{}`\",\n                     ident.node.name, ident.node.name));"}]}