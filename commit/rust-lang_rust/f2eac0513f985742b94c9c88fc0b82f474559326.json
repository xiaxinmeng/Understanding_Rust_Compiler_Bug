{"sha": "f2eac0513f985742b94c9c88fc0b82f474559326", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZWFjMDUxM2Y5ODU3NDJiOTRjOWM4OGZjMGI4MmY0NzQ1NTkzMjY=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-03-02T01:25:57Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-03-02T01:27:33Z"}, "message": "Fix trailing comma tests", "tree": {"sha": "c9a7b1c3456315ab0bb77ef6bda1204e19a7cfca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9a7b1c3456315ab0bb77ef6bda1204e19a7cfca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2eac0513f985742b94c9c88fc0b82f474559326", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2eac0513f985742b94c9c88fc0b82f474559326", "html_url": "https://github.com/rust-lang/rust/commit/f2eac0513f985742b94c9c88fc0b82f474559326", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2eac0513f985742b94c9c88fc0b82f474559326/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "248f2aba56d12958d4c42c2fd38347a849564280", "url": "https://api.github.com/repos/rust-lang/rust/commits/248f2aba56d12958d4c42c2fd38347a849564280", "html_url": "https://github.com/rust-lang/rust/commit/248f2aba56d12958d4c42c2fd38347a849564280"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "ceba598b8af3d73b65c58c2bbb6d4fa4f6959279", "filename": "src/expr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f2eac0513f985742b94c9c88fc0b82f474559326/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2eac0513f985742b94c9c88fc0b82f474559326/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=f2eac0513f985742b94c9c88fc0b82f474559326", "patch": "@@ -1121,7 +1121,7 @@ fn rewrite_match(context: &RewriteContext,\n             // We couldn't format the arm, just reproduce the source.\n             let snippet = context.snippet(mk_sp(arm_start_pos(arm), arm_end_pos(arm)));\n             result.push_str(&snippet);\n-            result.push_str(arm_comma(context.config, arm, &arm.body));\n+            result.push_str(arm_comma(context.config, &arm.body));\n         }\n     }\n     // BytePos(1) = closing match brace.\n@@ -1149,7 +1149,7 @@ fn arm_end_pos(arm: &ast::Arm) -> BytePos {\n     arm.body.span.hi\n }\n \n-fn arm_comma(config: &Config, arm: &ast::Arm, body: &ast::Expr) -> &'static str {\n+fn arm_comma(config: &Config, body: &ast::Expr) -> &'static str {\n     if config.match_block_trailing_comma {\n         \",\"\n     } else if let ast::ExprKind::Block(ref block) = body.node {\n@@ -1237,7 +1237,7 @@ impl Rewrite for ast::Arm {\n             _ => &**body,\n         };\n \n-        let comma = arm_comma(&context.config, self, body);\n+        let comma = arm_comma(&context.config, body);\n         let alt_block_sep = String::from(\"\\n\") +\n                             &shape.indent.block_only().to_string(context.config);\n "}, {"sha": "60a06f3dc5fd31afe71cb29189aac15c4fb674e9", "filename": "src/items.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f2eac0513f985742b94c9c88fc0b82f474559326/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2eac0513f985742b94c9c88fc0b82f474559326/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=f2eac0513f985742b94c9c88fc0b82f474559326", "patch": "@@ -526,6 +526,7 @@ pub fn format_impl(context: &RewriteContext, item: &ast::Item, offset: Indent) -\n                                                                            offset.block_only()),\n                                                              context.config.where_density,\n                                                              \"{\",\n+                                                             false,\n                                                              None));\n \n         if try_opt!(is_impl_single_line(context, &items, &result, &where_clause_str, &item)) {\n@@ -794,6 +795,7 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n                                                                            offset.block_only()),\n                                                              where_density,\n                                                              \"{\",\n+                                                             !has_body,\n                                                              None));\n         // If the where clause cannot fit on the same line,\n         // put the where clause on a new line\n@@ -1008,6 +1010,7 @@ fn format_tuple_struct(context: &RewriteContext,\n                                           Shape::legacy(where_budget, offset.block_only()),\n                                           Density::Compressed,\n                                           \";\",\n+                                          true,\n                                           None))\n         }\n         None => \"\".to_owned(),\n@@ -1100,6 +1103,7 @@ pub fn rewrite_type_alias(context: &RewriteContext,\n                                                          Shape::legacy(where_budget, indent),\n                                                          context.config.where_density,\n                                                          \"=\",\n+                                                         true,\n                                                          Some(span.hi)));\n     result.push_str(&where_clause_str);\n     result.push_str(\" = \");\n@@ -1657,6 +1661,7 @@ fn rewrite_fn_base(context: &RewriteContext,\n                                                          Shape::legacy(where_budget, indent),\n                                                          where_density,\n                                                          \"{\",\n+                                                         !has_body,\n                                                          Some(span.hi)));\n \n     if last_line_width(&result) + where_clause_str.len() > context.config.max_width &&\n@@ -1940,6 +1945,7 @@ fn rewrite_where_clause(context: &RewriteContext,\n                         shape: Shape,\n                         density: Density,\n                         terminator: &str,\n+                        suppress_comma: bool,\n                         span_end: Option<BytePos>)\n                         -> Option<String> {\n     if where_clause.predicates.is_empty() {\n@@ -1982,7 +1988,7 @@ fn rewrite_where_clause(context: &RewriteContext,\n \n     let mut comma_tactic = context.config.trailing_comma;\n     // Kind of a hack because we don't usually have trailing commas in where clauses.\n-    if comma_tactic == SeparatorTactic::Vertical {\n+    if comma_tactic == SeparatorTactic::Vertical || suppress_comma {\n         comma_tactic = SeparatorTactic::Never;\n     }\n \n@@ -2049,6 +2055,7 @@ fn format_generics(context: &RewriteContext,\n                                                                            offset.block_only()),\n                                                              Density::Tall,\n                                                              terminator,\n+                                                             false,\n                                                              Some(span.hi)));\n         result.push_str(&where_clause_str);\n         if !force_same_line_brace &&"}, {"sha": "3e5fcc8080ffca58aebf41690b9ce43f4d0fe95c", "filename": "tests/source/trailing_commas.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f2eac0513f985742b94c9c88fc0b82f474559326/tests%2Fsource%2Ftrailing_commas.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2eac0513f985742b94c9c88fc0b82f474559326/tests%2Fsource%2Ftrailing_commas.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ftrailing_commas.rs?ref=f2eac0513f985742b94c9c88fc0b82f474559326", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-match_block_trailing_comma: true\n // rustfmt-trailing_comma: Always\n \n fn main() {"}, {"sha": "9e74266b396d62d8a9e8af15118a4a4f986b9cb9", "filename": "tests/target/trailing_commas.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f2eac0513f985742b94c9c88fc0b82f474559326/tests%2Ftarget%2Ftrailing_commas.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2eac0513f985742b94c9c88fc0b82f474559326/tests%2Ftarget%2Ftrailing_commas.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftrailing_commas.rs?ref=f2eac0513f985742b94c9c88fc0b82f474559326", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-match_block_trailing_comma: true\n // rustfmt-trailing_comma: Always\n \n fn main() {"}]}