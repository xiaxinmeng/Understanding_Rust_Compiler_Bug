{"sha": "a77180f4f5ae5c61b0e80748b749a7fac71b7bf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3NzE4MGY0ZjVhZTVjNjFiMGU4MDc0OGI3NDlhN2ZhYzcxYjdiZjU=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-15T20:36:55Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-15T20:54:13Z"}, "message": "Add support for producing shared libraries directly in the rust driver.", "tree": {"sha": "fc872809df4f936c0e06c2109185d43f6c3106e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc872809df4f936c0e06c2109185d43f6c3106e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a77180f4f5ae5c61b0e80748b749a7fac71b7bf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a77180f4f5ae5c61b0e80748b749a7fac71b7bf5", "html_url": "https://github.com/rust-lang/rust/commit/a77180f4f5ae5c61b0e80748b749a7fac71b7bf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a77180f4f5ae5c61b0e80748b749a7fac71b7bf5/comments", "author": null, "committer": null, "parents": [{"sha": "9b5ebe726c1f9dc83b11fb3b77dd24f201d7b777", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b5ebe726c1f9dc83b11fb3b77dd24f201d7b777", "html_url": "https://github.com/rust-lang/rust/commit/9b5ebe726c1f9dc83b11fb3b77dd24f201d7b777"}], "stats": {"total": 52, "additions": 22, "deletions": 30}, "files": [{"sha": "d8604ed999e74fbff1659b4e2f227331467ce55d", "filename": "mk/stage3.mk", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a77180f4f5ae5c61b0e80748b749a7fac71b7bf5/mk%2Fstage3.mk", "raw_url": "https://github.com/rust-lang/rust/raw/a77180f4f5ae5c61b0e80748b749a7fac71b7bf5/mk%2Fstage3.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage3.mk?ref=a77180f4f5ae5c61b0e80748b749a7fac71b7bf5", "patch": "@@ -1,13 +1,8 @@\n-stage3/std.o: $(STDLIB_CRATE) $(STDLIB_INPUTS) \\\n+stage3/$(CFG_STDLIB): $(STDLIB_CRATE) $(STDLIB_INPUTS) \\\n               stage2/rustc$(X) stage2/$(CFG_STDLIB) stage2/intrinsics.bc \\\n               $(LREQ) $(MKFILES)\n-\t@$(call E, compile: $@)\n-\t$(STAGE2) -c --shared -o $@ $<\n-\n-stage3/$(CFG_STDLIB): stage2/std.o stage2/glue.o\n-\t@$(call E, link: $@)\n-\t$(Q)gcc $(CFG_GCCISH_CFLAGS) stage2/glue.o $(CFG_GCCISH_LINK_FLAGS) -o \\\n-        $@ $< -Lstage2 -Lrt -lrustrt\n+\t@$(call E, compile_and_link: $@)\n+\t$(STAGE2)  --shared -o $@ $<\n \n stage3/librustc.o: $(COMPILER_CRATE) $(COMPILER_INPUTS) $(SREQ2)\n \t@$(call E, compile: $@)"}, {"sha": "e2f1164ed0c6c471231b2b0dd7f2b4da045fa4d5", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 19, "deletions": 22, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/a77180f4f5ae5c61b0e80748b749a7fac71b7bf5/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a77180f4f5ae5c61b0e80748b749a7fac71b7bf5/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=a77180f4f5ae5c61b0e80748b749a7fac71b7bf5", "patch": "@@ -399,37 +399,34 @@ fn main(vec[str] args) {\n         let str prog = \"gcc\";\n         // The invocations of gcc share some flags across platforms\n \n-        let vec[str] common_cflags =\n-            [\"-fno-strict-aliasing\", \"-fPIC\", \"-Wall\", \"-fno-rtti\",\n-             \"-fno-exceptions\", \"-g\"];\n-        let vec[str] common_libs =\n-            [stage, \"-Lrustllvm\", \"-Lrt\", \"-lrustrt\", \"-lrustllvm\", \"-lstd\",\n-             \"-lm\"];\n+        let vec[str] common_args = [stage, \"-Lrt\", \"-lrustrt\",\n+         \"-fno-strict-aliasing\", \"-fPIC\", \"-Wall\",\n+         \"-fno-rtti\", \"-fno-exceptions\", \"-g\", glu, \"-o\",\n+         saved_out_filename, saved_out_filename + \".o\"];\n+\n+       auto shared_cmd;\n+\n         alt (sess.get_targ_cfg().os) {\n             case (session::os_win32) {\n-                gcc_args =\n-                    common_cflags +\n-                        [\"-march=i686\", \"-O2\", glu, main, \"-o\",\n-                         saved_out_filename, saved_out_filename + \".o\"] +\n-                        common_libs;\n+                shared_cmd = \"-shared\";\n+                gcc_args = common_args + [\"-march=i686\", \"-O2\"];\n             }\n             case (session::os_macos) {\n-                gcc_args =\n-                    common_cflags +\n-                        [\"-arch i386\", \"-O0\", \"-m32\", glu, main, \"-o\",\n-                         saved_out_filename, saved_out_filename + \".o\"] +\n-                        common_libs;\n+                shared_cmd = \"-dynamiclib\";\n+                gcc_args = common_args + [\"-arch i386\", \"-O0\", \"-m32\"];\n             }\n             case (session::os_linux) {\n-                gcc_args =\n-                    common_cflags +\n-                        [\"-march=i686\", \"-O2\", \"-m32\", glu, main, \"-o\",\n-                         saved_out_filename, saved_out_filename + \".o\"] +\n-                        common_libs;\n+                shared_cmd = \"-shared\";\n+                gcc_args = common_args + [\"-march=i686\", \"-O2\", \"-m32\"];\n             }\n         }\n-        // We run 'gcc' here\n+        if (sopts.shared) {\n+           gcc_args += [shared_cmd];\n+        } else {\n+           gcc_args += [\"-Lrustllvm\", \"-lrustllvm\", \"-lstd\", \"-lm\", main];\n+        }\n \n+        // We run 'gcc' here\n         run::run_program(prog, gcc_args);\n         // Clean up on Darwin\n "}]}