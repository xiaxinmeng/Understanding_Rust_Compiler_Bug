{"sha": "35ae48c7356d4594e533c482902e1048057685d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1YWU0OGM3MzU2ZDQ1OTRlNTMzYzQ4MjkwMmUxMDQ4MDU3Njg1ZDU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-26T01:07:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-26T01:07:17Z"}, "message": "Rollup merge of #69457 - GuillaumeGomez:clean-up-e0370-e0371, r=Dylan-DPC\n\nClean up e0370 e0371\n\nr? @Dylan-DPC", "tree": {"sha": "9d3e8c16831624489a0324a07a7ec0c6311448da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d3e8c16831624489a0324a07a7ec0c6311448da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35ae48c7356d4594e533c482902e1048057685d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeVcTFCRBK7hj4Ov3rIwAAdHIIAAj2Z51oRECFl/QsQqfSqgso\nanlhCDWFCLJCvX9MG8f5WNFoJ8TDV02IJdhrl+3/FljkkGNGQgxc38JX64BBb6J7\nQe8T/zhBxN6RSHaFkdNl/atzQ4KHFsl7jbn7VFH2B5qLnZYKpnB+0RBbqLl+L7py\nk6PBojPSDEnBJv++ZsAWT1W3cSANj3rWJu66f2adnk2FwPJr+l1W12SJrzY6RbJI\nJvrrOyTPBPUAafA+deDOeUy6SBGpkhqdUi0ywVtIZLkW8b7/YGIppYC4lmjzDj/E\nZ5PmU1vCty2sSgqHShAfossMQizL3McaxdTp1G2NYKn4enk3aK99FGqtb/jnGWQ=\n=ysyx\n-----END PGP SIGNATURE-----\n", "payload": "tree 9d3e8c16831624489a0324a07a7ec0c6311448da\nparent ab3fb8b05aa0c90233982fc8a8d35672d12a93a1\nparent d6f83c541d3bfc6116971249e907889e22129514\nauthor Dylan DPC <dylan.dpc@gmail.com> 1582679237 +0100\ncommitter GitHub <noreply@github.com> 1582679237 +0100\n\nRollup merge of #69457 - GuillaumeGomez:clean-up-e0370-e0371, r=Dylan-DPC\n\nClean up e0370 e0371\n\nr? @Dylan-DPC\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35ae48c7356d4594e533c482902e1048057685d5", "html_url": "https://github.com/rust-lang/rust/commit/35ae48c7356d4594e533c482902e1048057685d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35ae48c7356d4594e533c482902e1048057685d5/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab3fb8b05aa0c90233982fc8a8d35672d12a93a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab3fb8b05aa0c90233982fc8a8d35672d12a93a1", "html_url": "https://github.com/rust-lang/rust/commit/ab3fb8b05aa0c90233982fc8a8d35672d12a93a1"}, {"sha": "d6f83c541d3bfc6116971249e907889e22129514", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6f83c541d3bfc6116971249e907889e22129514", "html_url": "https://github.com/rust-lang/rust/commit/d6f83c541d3bfc6116971249e907889e22129514"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "14e954722a2501c34ef182a978eb35f78b8346e8", "filename": "src/librustc_error_codes/error_codes/E0370.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/35ae48c7356d4594e533c482902e1048057685d5/src%2Flibrustc_error_codes%2Ferror_codes%2FE0370.md", "raw_url": "https://github.com/rust-lang/rust/raw/35ae48c7356d4594e533c482902e1048057685d5/src%2Flibrustc_error_codes%2Ferror_codes%2FE0370.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0370.md?ref=35ae48c7356d4594e533c482902e1048057685d5", "patch": "@@ -1,5 +1,7 @@\n The maximum value of an enum was reached, so it cannot be automatically\n-set in the next enum value. Erroneous code example:\n+set in the next enum value.\n+\n+Erroneous code example:\n \n ```compile_fail,E0370\n #[repr(i64)]"}, {"sha": "a44721346e20dc8377bd7a2d612c4e46b3617779", "filename": "src/librustc_error_codes/error_codes/E0371.md", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/35ae48c7356d4594e533c482902e1048057685d5/src%2Flibrustc_error_codes%2Ferror_codes%2FE0371.md", "raw_url": "https://github.com/rust-lang/rust/raw/35ae48c7356d4594e533c482902e1048057685d5/src%2Flibrustc_error_codes%2Ferror_codes%2FE0371.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0371.md?ref=35ae48c7356d4594e533c482902e1048057685d5", "patch": "@@ -1,9 +1,6 @@\n-When `Trait2` is a subtrait of `Trait1` (for example, when `Trait2` has a\n-definition like `trait Trait2: Trait1 { ... }`), it is not allowed to implement\n-`Trait1` for `Trait2`. This is because `Trait2` already implements `Trait1` by\n-definition, so it is not useful to do this.\n+A trait was implemented on another which already automatically implemented it.\n \n-Example:\n+Erroneous code examples:\n \n ```compile_fail,E0371\n trait Foo { fn foo(&self) { } }\n@@ -15,3 +12,8 @@ impl Foo for Baz { } // error, `Baz` implements `Bar` which implements `Foo`\n impl Baz for Baz { } // error, `Baz` (trivially) implements `Baz`\n impl Baz for Bar { } // Note: This is OK\n ```\n+\n+When `Trait2` is a subtrait of `Trait1` (for example, when `Trait2` has a\n+definition like `trait Trait2: Trait1 { ... }`), it is not allowed to implement\n+`Trait1` for `Trait2`. This is because `Trait2` already implements `Trait1` by\n+definition, so it is not useful to do this."}]}