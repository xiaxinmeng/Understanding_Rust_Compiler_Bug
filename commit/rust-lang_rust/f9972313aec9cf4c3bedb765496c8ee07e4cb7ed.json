{"sha": "f9972313aec9cf4c3bedb765496c8ee07e4cb7ed", "node_id": "C_kwDOAAsO6NoAKGY5OTcyMzEzYWVjOWNmNGMzYmVkYjc2NTQ5NmM4ZWUwN2U0Y2I3ZWQ", "commit": {"author": {"name": "Tshepang Mbambo", "email": "tshepang@gmail.com", "date": "2023-02-16T16:58:08Z"}, "committer": {"name": "Tshepang Mbambo", "email": "tshepang@gmail.com", "date": "2023-02-16T16:58:08Z"}, "message": "fix some lines, and do a consistency fix", "tree": {"sha": "2a950ae5517e4ae863f7d1f863fbe20f7360f252", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a950ae5517e4ae863f7d1f863fbe20f7360f252"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9972313aec9cf4c3bedb765496c8ee07e4cb7ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9972313aec9cf4c3bedb765496c8ee07e4cb7ed", "html_url": "https://github.com/rust-lang/rust/commit/f9972313aec9cf4c3bedb765496c8ee07e4cb7ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9972313aec9cf4c3bedb765496c8ee07e4cb7ed/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af3c8b27266e290cf65704284f6862d0f90ee4fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/af3c8b27266e290cf65704284f6862d0f90ee4fc", "html_url": "https://github.com/rust-lang/rust/commit/af3c8b27266e290cf65704284f6862d0f90ee4fc"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "9116e71beac83f0aa9b1ac94b1f21ee331f2ac02", "filename": "compiler/rustc_codegen_llvm/src/consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f9972313aec9cf4c3bedb765496c8ee07e4cb7ed/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9972313aec9cf4c3bedb765496c8ee07e4cb7ed/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs?ref=f9972313aec9cf4c3bedb765496c8ee07e4cb7ed", "patch": "@@ -521,7 +521,7 @@ impl<'ll> StaticMethods for CodegenCx<'ll, '_> {\n \n                 // The semantics of #[used] in Rust only require the symbol to make it into the\n                 // object file. It is explicitly allowed for the linker to strip the symbol if it\n-                // is dead, which means we are allowed use `llvm.compiler.used` instead of\n+                // is dead, which means we are allowed to use `llvm.compiler.used` instead of\n                 // `llvm.used` here.\n                 //\n                 // Additionally, https://reviews.llvm.org/D97448 in LLVM 13 started emitting unique\n@@ -532,7 +532,7 @@ impl<'ll> StaticMethods for CodegenCx<'ll, '_> {\n                 // That said, we only ever emit these when compiling for ELF targets, unless\n                 // `#[used(compiler)]` is explicitly requested. This is to avoid similar breakage\n                 // on other targets, in particular MachO targets have *their* static constructor\n-                // lists broken if `llvm.compiler.used` is emitted rather than llvm.used. However,\n+                // lists broken if `llvm.compiler.used` is emitted rather than `llvm.used`. However,\n                 // that check happens when assigning the `CodegenFnAttrFlags` in `rustc_hir_analysis`,\n                 // so we don't need to take care of it here.\n                 self.add_compiler_used_global(g);"}, {"sha": "c4601a1fb4189423219953d201a8ffa0a6058016", "filename": "compiler/rustc_middle/src/middle/codegen_fn_attrs.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f9972313aec9cf4c3bedb765496c8ee07e4cb7ed/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcodegen_fn_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9972313aec9cf4c3bedb765496c8ee07e4cb7ed/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcodegen_fn_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcodegen_fn_attrs.rs?ref=f9972313aec9cf4c3bedb765496c8ee07e4cb7ed", "patch": "@@ -91,7 +91,8 @@ bitflags! {\n         /// the MIR `InstrumentCoverage` pass and not added to the coverage map\n         /// during codegen.\n         const NO_COVERAGE               = 1 << 15;\n-        /// `#[used(linker)]`: indicates that LLVM nor the linker can eliminate this function.\n+        /// `#[used(linker)]`:\n+        /// indicates that neither LLVM nor the linker will eliminate this function.\n         const USED_LINKER               = 1 << 16;\n         /// `#[rustc_deallocator]`: a hint to LLVM that the function only deallocates memory.\n         const DEALLOCATOR               = 1 << 17;"}]}