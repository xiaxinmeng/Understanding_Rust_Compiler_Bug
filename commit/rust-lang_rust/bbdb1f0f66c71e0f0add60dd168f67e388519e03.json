{"sha": "bbdb1f0f66c71e0f0add60dd168f67e388519e03", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZGIxZjBmNjZjNzFlMGYwYWRkNjBkZDE2OGY2N2UzODg1MTllMDM=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-11-05T02:57:52Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-11-05T02:57:52Z"}, "message": "Clean up some intra-doc links", "tree": {"sha": "afc13d26f9ae9473daf20fc61d8796ccf94c66ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afc13d26f9ae9473daf20fc61d8796ccf94c66ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbdb1f0f66c71e0f0add60dd168f67e388519e03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbdb1f0f66c71e0f0add60dd168f67e388519e03", "html_url": "https://github.com/rust-lang/rust/commit/bbdb1f0f66c71e0f0add60dd168f67e388519e03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbdb1f0f66c71e0f0add60dd168f67e388519e03/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3084a55d54c2e0ee1c97525f64f40b54091b93e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3084a55d54c2e0ee1c97525f64f40b54091b93e4", "html_url": "https://github.com/rust-lang/rust/commit/3084a55d54c2e0ee1c97525f64f40b54091b93e4"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "9353642767a62d3feb23a4a9e2e52b7135a5f374", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bbdb1f0f66c71e0f0add60dd168f67e388519e03/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbdb1f0f66c71e0f0add60dd168f67e388519e03/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=bbdb1f0f66c71e0f0add60dd168f67e388519e03", "patch": "@@ -389,7 +389,7 @@ mod prim_unit {}\n //\n /// Raw, unsafe pointers, `*const T`, and `*mut T`.\n ///\n-/// *[See also the `std::ptr` module][`ptr`].*\n+/// *[See also the `std::ptr` module](ptr).*\n ///\n /// Working with raw pointers in Rust is uncommon, typically limited to a few patterns.\n /// Raw pointers can be unaligned or [`null`]. However, when a raw pointer is\n@@ -580,7 +580,7 @@ mod prim_array {}\n /// means that elements are laid out so that every element is the same\n /// distance from its neighbors.\n ///\n-/// *[See also the `std::slice` module][`crate::slice`].*\n+/// *[See also the `std::slice` module](crate::slice).*\n ///\n /// Slices are a view into a block of memory represented as a pointer and a\n /// length.\n@@ -625,7 +625,7 @@ mod prim_slice {}\n //\n /// String slices.\n ///\n-/// *[See also the `std::str` module][`crate::str`].*\n+/// *[See also the `std::str` module](crate::str).*\n ///\n /// The `str` type, also called a 'string slice', is the most primitive string\n /// type. It is usually seen in its borrowed form, `&str`. It is also the type\n@@ -820,7 +820,7 @@ mod prim_tuple {}\n ///\n /// For more information on floating point numbers, see [Wikipedia][wikipedia].\n ///\n-/// *[See also the `std::f32::consts` module][`crate::f32::consts`].*\n+/// *[See also the `std::f32::consts` module](crate::f32::consts).*\n ///\n /// [wikipedia]: https://en.wikipedia.org/wiki/Single-precision_floating-point_format\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -834,7 +834,7 @@ mod prim_f32 {}\n /// `f32`][`f32`] or [Wikipedia on double precision\n /// values][wikipedia] for more information.\n ///\n-/// *[See also the `std::f64::consts` module][`crate::f64::consts`].*\n+/// *[See also the `std::f64::consts` module](crate::f64::consts).*\n ///\n /// [`f32`]: prim@f32\n /// [wikipedia]: https://en.wikipedia.org/wiki/Double-precision_floating-point_format"}]}