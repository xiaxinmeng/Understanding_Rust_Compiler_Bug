{"sha": "49e976d771d9a3282bb0f58f28e5e92d10c2e4c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ZTk3NmQ3NzFkOWEzMjgyYmIwZjU4ZjI4ZTVlOTJkMTBjMmU0YzY=", "commit": {"author": {"name": "Florian Hahn", "email": "flo@fhahn.com", "date": "2014-10-01T09:38:54Z"}, "committer": {"name": "Florian Hahn", "email": "flo@fhahn.com", "date": "2014-10-01T09:46:04Z"}, "message": "Limit recursion depth for macro expansions, closes #17628", "tree": {"sha": "26080db909dc531efc47abbcbc0efe10ec7aef12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26080db909dc531efc47abbcbc0efe10ec7aef12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49e976d771d9a3282bb0f58f28e5e92d10c2e4c6", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49e976d771d9a3282bb0f58f28e5e92d10c2e4c6", "html_url": "https://github.com/rust-lang/rust/commit/49e976d771d9a3282bb0f58f28e5e92d10c2e4c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49e976d771d9a3282bb0f58f28e5e92d10c2e4c6/comments", "author": {"login": "fhahn", "id": 450489, "node_id": "MDQ6VXNlcjQ1MDQ4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/450489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhahn", "html_url": "https://github.com/fhahn", "followers_url": "https://api.github.com/users/fhahn/followers", "following_url": "https://api.github.com/users/fhahn/following{/other_user}", "gists_url": "https://api.github.com/users/fhahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhahn/subscriptions", "organizations_url": "https://api.github.com/users/fhahn/orgs", "repos_url": "https://api.github.com/users/fhahn/repos", "events_url": "https://api.github.com/users/fhahn/events{/privacy}", "received_events_url": "https://api.github.com/users/fhahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhahn", "id": 450489, "node_id": "MDQ6VXNlcjQ1MDQ4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/450489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhahn", "html_url": "https://github.com/fhahn", "followers_url": "https://api.github.com/users/fhahn/followers", "following_url": "https://api.github.com/users/fhahn/following{/other_user}", "gists_url": "https://api.github.com/users/fhahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhahn/subscriptions", "organizations_url": "https://api.github.com/users/fhahn/orgs", "repos_url": "https://api.github.com/users/fhahn/repos", "events_url": "https://api.github.com/users/fhahn/events{/privacy}", "received_events_url": "https://api.github.com/users/fhahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60e7317345f246a8169bbfe721473f693d54cade", "url": "https://api.github.com/repos/rust-lang/rust/commits/60e7317345f246a8169bbfe721473f693d54cade", "html_url": "https://github.com/rust-lang/rust/commit/60e7317345f246a8169bbfe721473f693d54cade"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "e81df63a67e46cb6e2221cc7dc56b994586c3595", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49e976d771d9a3282bb0f58f28e5e92d10c2e4c6/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49e976d771d9a3282bb0f58f28e5e92d10c2e4c6/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=49e976d771d9a3282bb0f58f28e5e92d10c2e4c6", "patch": "@@ -291,6 +291,7 @@ pub fn phase_2_configure_and_expand(sess: &Session,\n                 crate_name: crate_name.to_string(),\n                 deriving_hash_type_parameter: sess.features.borrow().default_type_params,\n                 enable_quotes: sess.features.borrow().quote,\n+                recursion_limit: sess.recursion_limit.get(),\n             };\n             let ret = syntax::ext::expand::expand_crate(&sess.parse_sess,\n                                               cfg,"}, {"sha": "a137f6e78b8b6f7811521632cc71d4ab1a8de6bf", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/49e976d771d9a3282bb0f58f28e5e92d10c2e4c6/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49e976d771d9a3282bb0f58f28e5e92d10c2e4c6/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=49e976d771d9a3282bb0f58f28e5e92d10c2e4c6", "patch": "@@ -463,6 +463,7 @@ pub struct ExtCtxt<'a> {\n     pub exported_macros: Vec<P<ast::Item>>,\n \n     pub syntax_env: SyntaxEnv,\n+    pub recursion_count: uint,\n }\n \n impl<'a> ExtCtxt<'a> {\n@@ -478,6 +479,7 @@ impl<'a> ExtCtxt<'a> {\n             trace_mac: false,\n             exported_macros: Vec::new(),\n             syntax_env: env,\n+            recursion_count: 0,\n         }\n     }\n \n@@ -552,6 +554,13 @@ impl<'a> ExtCtxt<'a> {\n         return v;\n     }\n     pub fn bt_push(&mut self, ei: ExpnInfo) {\n+        self.recursion_count += 1;\n+        if self.recursion_count > self.ecfg.recursion_limit {\n+            self.span_fatal(ei.call_site,\n+                            format!(\"Recursion limit reached while expanding the macro `{}`\",\n+                                    ei.callee.name).as_slice());\n+        }\n+\n         let mut call_site = ei.call_site;\n         call_site.expn_id = self.backtrace;\n         self.backtrace = self.codemap().record_expansion(ExpnInfo {\n@@ -563,6 +572,7 @@ impl<'a> ExtCtxt<'a> {\n         match self.backtrace {\n             NO_EXPANSION => self.bug(\"tried to pop without a push\"),\n             expn_id => {\n+                self.recursion_count -= 1;\n                 self.backtrace = self.codemap().with_expn_info(expn_id, |expn_info| {\n                     expn_info.map_or(NO_EXPANSION, |ei| ei.call_site.expn_id)\n                 });"}, {"sha": "efe4b76354f56b0cd731f24c82ca191f12a41351", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49e976d771d9a3282bb0f58f28e5e92d10c2e4c6/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49e976d771d9a3282bb0f58f28e5e92d10c2e4c6/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=49e976d771d9a3282bb0f58f28e5e92d10c2e4c6", "patch": "@@ -1069,6 +1069,7 @@ pub struct ExpansionConfig {\n     pub crate_name: String,\n     pub deriving_hash_type_parameter: bool,\n     pub enable_quotes: bool,\n+    pub recursion_limit: uint,\n }\n \n impl ExpansionConfig {\n@@ -1077,6 +1078,7 @@ impl ExpansionConfig {\n             crate_name: crate_name,\n             deriving_hash_type_parameter: false,\n             enable_quotes: false,\n+            recursion_limit: 64,\n         }\n     }\n }"}, {"sha": "3ea5671735d0448071ce29b62dfc0697e82bb698", "filename": "src/test/compile-fail/infinite-macro-expansion.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/49e976d771d9a3282bb0f58f28e5e92d10c2e4c6/src%2Ftest%2Fcompile-fail%2Finfinite-macro-expansion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49e976d771d9a3282bb0f58f28e5e92d10c2e4c6/src%2Ftest%2Fcompile-fail%2Finfinite-macro-expansion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finfinite-macro-expansion.rs?ref=49e976d771d9a3282bb0f58f28e5e92d10c2e4c6", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(macro_rules)]\n+\n+macro_rules! recursive(\n+      () => (\n+                recursive!() //~ ERROR Recursion limit reached while expanding the macro `recursive`\n+              )\n+      )\n+\n+fn main() {\n+    recursive!()\n+}\n+"}]}