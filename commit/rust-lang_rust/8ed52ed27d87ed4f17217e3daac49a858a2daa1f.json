{"sha": "8ed52ed27d87ed4f17217e3daac49a858a2daa1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlZDUyZWQyN2Q4N2VkNGYxNzIxN2UzZGFhYzQ5YTg1OGEyZGFhMWY=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2016-12-13T16:31:48Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2016-12-13T16:31:48Z"}, "message": "Document --test-args for rustbuild", "tree": {"sha": "98fe2b6f2c30ba7c425e9dc56e2c873ffad586f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98fe2b6f2c30ba7c425e9dc56e2c873ffad586f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ed52ed27d87ed4f17217e3daac49a858a2daa1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ed52ed27d87ed4f17217e3daac49a858a2daa1f", "html_url": "https://github.com/rust-lang/rust/commit/8ed52ed27d87ed4f17217e3daac49a858a2daa1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ed52ed27d87ed4f17217e3daac49a858a2daa1f/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a2b50b33df6015e5bae97c5224e3180885dcc66", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a2b50b33df6015e5bae97c5224e3180885dcc66", "html_url": "https://github.com/rust-lang/rust/commit/5a2b50b33df6015e5bae97c5224e3180885dcc66"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "cdbabeaddfba8a17ee886aff226ac3461328186a", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8ed52ed27d87ed4f17217e3daac49a858a2daa1f/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/8ed52ed27d87ed4f17217e3daac49a858a2daa1f/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=8ed52ed27d87ed4f17217e3daac49a858a2daa1f", "patch": "@@ -212,12 +212,13 @@ Some common invocations of `x.py` are:\n   & everything builds in the correct manner.\n - `x.py test src/libstd --stage 1` - test the standard library without\n   recompiling stage 2.\n-- `x.py test src/test/run-pass --filter TESTNAME` - Run a matching set of tests.\n+- `x.py test src/test/run-pass --test-args TESTNAME` - Run a matching set of\n+  tests.\n   - `TESTNAME` should be a substring of the tests to match against e.g. it could\n     be the fully qualified test name, or just a part of it.\n     `TESTNAME=collections::hash::map::test_map::test_capacity_not_less_than_len`\n     or `TESTNAME=test_capacity_not_less_than_len`.\n-- `x.py test src/test/run-pass --stage 1 --filter <substring-of-test-name>` -\n+- `x.py test src/test/run-pass --stage 1 --test-args <substring-of-test-name>` -\n   Run a single rpass test with the stage1 compiler (this will be quicker than\n   running the command above as we only build the stage1 compiler, not the entire\n   thing).  You can also leave off the directory argument to run all stage1 test\n@@ -284,7 +285,7 @@ been approved. The PR then enters the [merge queue][merge-queue], where @bors\n will run all the tests on every platform we support. If it all works out,\n @bors will merge your code into `master` and close the pull request.\n \n-[merge-queue]: http://buildbot.rust-lang.org/homu/queue/rust\n+[merge-queue]: https://buildbot.rust-lang.org/homu/queue/rust\n \n Speaking of tests, Rust has a comprehensive test suite. More information about\n it can be found\n@@ -403,4 +404,4 @@ are:\n [tlgba]: http://tomlee.co/2014/04/a-more-detailed-tour-of-the-rust-compiler/\n [ro]: http://www.rustaceans.org/\n [rctd]: ./COMPILER_TESTS.md\n-[cheatsheet]: http://buildbot.rust-lang.org/homu/\n+[cheatsheet]: https://buildbot.rust-lang.org/homu/"}, {"sha": "b6e66fe3411f7126b9580709ab8913bb0796bdef", "filename": "src/bootstrap/README.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8ed52ed27d87ed4f17217e3daac49a858a2daa1f/src%2Fbootstrap%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/8ed52ed27d87ed4f17217e3daac49a858a2daa1f/src%2Fbootstrap%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FREADME.md?ref=8ed52ed27d87ed4f17217e3daac49a858a2daa1f", "patch": "@@ -22,7 +22,7 @@ Note that if you're on Unix you should be able to execute the script directly:\n ./x.py build\n ```\n \n-The script accepts commands, flags, and filters to determine what to do:\n+The script accepts commands, flags, and arguments to determine what to do:\n \n * `build` - a general purpose command for compiling code. Alone `build` will\n   bootstrap the entire compiler, and otherwise arguments passed indicate what to\n@@ -54,7 +54,7 @@ The script accepts commands, flags, and filters to determine what to do:\n   ./x.py test src/test/run-pass\n \n   # execute only some tests in the run-pass test suite\n-  ./x.py test src/test/run-pass --filter my-filter\n+  ./x.py test src/test/run-pass --test-args substring-of-test-name\n \n   # execute tests in the standard library in stage0\n   ./x.py test --stage 0 src/libstd"}, {"sha": "c19d0fdf89816ab702515611a7240ff8f92d11c2", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ed52ed27d87ed4f17217e3daac49a858a2daa1f/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ed52ed27d87ed4f17217e3daac49a858a2daa1f/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=8ed52ed27d87ed4f17217e3daac49a858a2daa1f", "patch": "@@ -108,7 +108,6 @@ Arguments:\n     tests that should be compiled and run. For example:\n \n         ./x.py test src/test/run-pass\n-        ./x.py test src/test/run-pass/assert-*\n         ./x.py test src/libstd --test-args hash_map\n         ./x.py test src/libstd --stage 0\n "}]}