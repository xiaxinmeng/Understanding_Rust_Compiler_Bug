{"sha": "488472d754a70d6b1c98e4d901dff438257ab06d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4ODQ3MmQ3NTRhNzBkNmIxYzk4ZTRkOTAxZGZmNDM4MjU3YWIwNmQ=", "commit": {"author": {"name": "Jethro Beekman", "email": "jethro@jbeekman.nl", "date": "2018-07-13T17:14:16Z"}, "committer": {"name": "Jethro Beekman", "email": "jethro@jbeekman.nl", "date": "2018-07-13T17:14:16Z"}, "message": "Don't silently ignore invalid data in target spec", "tree": {"sha": "c4c39acecd93104c1f78abf90b9ad53e3caa7d19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4c39acecd93104c1f78abf90b9ad53e3caa7d19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/488472d754a70d6b1c98e4d901dff438257ab06d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/488472d754a70d6b1c98e4d901dff438257ab06d", "html_url": "https://github.com/rust-lang/rust/commit/488472d754a70d6b1c98e4d901dff438257ab06d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/488472d754a70d6b1c98e4d901dff438257ab06d/comments", "author": null, "committer": null, "parents": [{"sha": "e5f6498d3d5c9dac841009d7b49738923826af75", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5f6498d3d5c9dac841009d7b49738923826af75", "html_url": "https://github.com/rust-lang/rust/commit/e5f6498d3d5c9dac841009d7b49738923826af75"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "07c3ae6973969038e93ca9e43db257fb51ed3aa6", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/488472d754a70d6b1c98e4d901dff438257ab06d/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/488472d754a70d6b1c98e4d901dff438257ab06d/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=488472d754a70d6b1c98e4d901dff438257ab06d", "patch": "@@ -861,23 +861,27 @@ impl Target {\n             } );\n             ($key_name:ident, link_args) => ( {\n                 let name = (stringify!($key_name)).replace(\"_\", \"-\");\n-                if let Some(obj) = obj.find(&name[..]).and_then(|o| o.as_object()) {\n+                if let Some(val) = obj.find(&name[..]) {\n+                    let obj = val.as_object().ok_or_else(|| format!(\"{}: expected a \\\n+                        JSON object with fields per linker-flavor.\", name))?;\n                     let mut args = LinkArgs::new();\n                     for (k, v) in obj {\n-                        let k = LinkerFlavor::from_str(&k).ok_or_else(|| {\n+                        let flavor = LinkerFlavor::from_str(&k).ok_or_else(|| {\n                             format!(\"{}: '{}' is not a valid value for linker-flavor. \\\n                                      Use 'em', 'gcc', 'ld' or 'msvc'\", name, k)\n                         })?;\n \n-                        let v = v.as_array().map(|a| {\n-                            a\n-                                .iter()\n-                                .filter_map(|o| o.as_string())\n-                                .map(|s| s.to_owned())\n-                                .collect::<Vec<_>>()\n-                        }).unwrap_or(vec![]);\n-\n-                        args.insert(k, v);\n+                        let v = v.as_array().ok_or_else(||\n+                            format!(\"{}.{}: expected a JSON array\", name, k)\n+                        )?.iter().enumerate()\n+                            .map(|(i,s)| {\n+                                let s = s.as_string().ok_or_else(||\n+                                    format!(\"{}.{}[{}]: expected a JSON string\", name, k, i))?;\n+                                Ok(s.to_owned())\n+                            })\n+                            .collect::<Result<Vec<_>, String>>()?;\n+\n+                        args.insert(flavor, v);\n                     }\n                     base.options.$key_name = args;\n                 }"}, {"sha": "48040ae3da0ef37223989998078d64bd383f1d5f", "filename": "src/test/run-make-fulldeps/target-specs/my-x86_64-unknown-linux-gnu-platform.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/488472d754a70d6b1c98e4d901dff438257ab06d/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Fmy-x86_64-unknown-linux-gnu-platform.json", "raw_url": "https://github.com/rust-lang/rust/raw/488472d754a70d6b1c98e4d901dff438257ab06d/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Fmy-x86_64-unknown-linux-gnu-platform.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Fmy-x86_64-unknown-linux-gnu-platform.json?ref=488472d754a70d6b1c98e4d901dff438257ab06d", "patch": "@@ -1,5 +1,5 @@\n {\n-    \"pre-link-args\": [\"-m64\"],\n+    \"pre-link-args\": {\"gcc\": [\"-m64\"]},\n     \"data-layout\": \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\",\n     \"linker-flavor\": \"gcc\",\n     \"llvm-target\": \"x86_64-unknown-linux-gnu\","}]}