{"sha": "43c82bdb453523be57512c91d267bac05018ed19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzYzgyYmRiNDUzNTIzYmU1NzUxMmM5MWQyNjdiYWMwNTAxOGVkMTk=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2012-03-22T18:48:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-06T22:35:48Z"}, "message": "fixed passing in uv_buf_t ptr array in uv_write.. return status 0\n\nways to go, still..", "tree": {"sha": "a3d099d0fc03a6c95fefee93e223bf2a190704b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3d099d0fc03a6c95fefee93e223bf2a190704b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43c82bdb453523be57512c91d267bac05018ed19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43c82bdb453523be57512c91d267bac05018ed19", "html_url": "https://github.com/rust-lang/rust/commit/43c82bdb453523be57512c91d267bac05018ed19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43c82bdb453523be57512c91d267bac05018ed19/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f179029296b8b8cf90b2b4e1a0cdd448e74e2a7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f179029296b8b8cf90b2b4e1a0cdd448e74e2a7d", "html_url": "https://github.com/rust-lang/rust/commit/f179029296b8b8cf90b2b4e1a0cdd448e74e2a7d"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "30c8cbd9c4e0f84ade828e6b1e6c13718818a40f", "filename": "src/libstd/uv.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/43c82bdb453523be57512c91d267bac05018ed19/src%2Flibstd%2Fuv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43c82bdb453523be57512c91d267bac05018ed19/src%2Flibstd%2Fuv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv.rs?ref=43c82bdb453523be57512c91d267bac05018ed19", "patch": "@@ -282,7 +282,7 @@ native mod rustrt {\n                            addr: *libc::c_void,\n                            after_cb: *u8) -> libc::c_int;\n     fn rust_uv_write(req: *libc::c_void, stream: *libc::c_void,\n-             buf_in: *uv_buf_t, buf_cnt: libc::c_int,\n+             buf_in: **libc::c_void, buf_cnt: libc::c_int,\n              cb: *u8) -> libc::c_int;\n \n     // sizeof testing helpers\n@@ -336,8 +336,11 @@ mod direct {\n                                     address, after_connect_cb);\n     }\n \n+    // TODO github #1402 -- the buf_in is a vector of pointers\n+    // to malloc'd buffers .. these will have to be translated\n+    // back into their value types in c. sigh.\n     unsafe fn write(req: *libc::c_void, stream: *libc::c_void,\n-             buf_in: *[uv_buf_t], cb: *u8) -> libc::c_int {\n+             buf_in: *[*libc::c_void], cb: *u8) -> libc::c_int {\n         let buf_ptr = vec::unsafe::to_ptr(*buf_in);\n         let buf_cnt = vec::len(*buf_in) as i32;\n         ret rustrt::rust_uv_write(req, stream, buf_ptr, buf_cnt, cb);\n@@ -945,7 +948,7 @@ fn test_uv_timer() {\n \n type request_wrapper = {\n     write_req: *uv_write_t,\n-    req_buf: *[uv_buf_t]\n+    req_buf: *[*libc::c_void]\n };\n \n crust fn on_alloc(handle: *libc::c_void,"}, {"sha": "c62af8edf4058f4d7f918c90fe505bf72202dbcc", "filename": "src/rt/rust_uv.cpp", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/43c82bdb453523be57512c91d267bac05018ed19/src%2Frt%2Frust_uv.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/43c82bdb453523be57512c91d267bac05018ed19/src%2Frt%2Frust_uv.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_uv.cpp?ref=43c82bdb453523be57512c91d267bac05018ed19", "patch": "@@ -302,9 +302,15 @@ rust_uv_tcp_connect(uv_connect_t* connect_ptr,\n \n extern \"C\" int\n rust_uv_write(uv_write_t* req, uv_stream_t* handle,\n-\t\t\t  uv_buf_t* bufs, int buf_cnt,\n+\t\t\t  void** bufs, int buf_cnt,\n \t\t\t  uv_write_cb cb) {\n-\treturn uv_write(req, handle, bufs, buf_cnt, cb);\n+\t// TODO github #1402 -- convert this array of pointers to\n+    // uv_buf_t into an array of uv_buf_t values\n+\tuv_buf_t buf_vals[buf_cnt];\n+\tfor(int ctr = 0; ctr < buf_cnt; ctr++) {\n+\t  buf_vals[ctr] = *((uv_buf_t*)bufs[ctr]);\n+\t}\n+\treturn uv_write(req, handle, buf_vals, buf_cnt, cb);\n }\n \n extern \"C\" sockaddr_in"}]}