{"sha": "64fbdc37799b44a85a2dd6cb491ee96e6931cb5d", "node_id": "C_kwDOAAsO6NoAKDY0ZmJkYzM3Nzk5YjQ0YTg1YTJkZDZjYjQ5MWVlOTZlNjkzMWNiNWQ", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-04-14T13:44:05Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-04-14T13:44:05Z"}, "message": " explicit adt_dtorck_constraint for ManuallyDrop", "tree": {"sha": "3303b5f8116f493cc22b8165dda8ca2bb1c0958a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3303b5f8116f493cc22b8165dda8ca2bb1c0958a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64fbdc37799b44a85a2dd6cb491ee96e6931cb5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64fbdc37799b44a85a2dd6cb491ee96e6931cb5d", "html_url": "https://github.com/rust-lang/rust/commit/64fbdc37799b44a85a2dd6cb491ee96e6931cb5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64fbdc37799b44a85a2dd6cb491ee96e6931cb5d/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e565f1a27a19f7da48c7109500b4351c0819e68", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e565f1a27a19f7da48c7109500b4351c0819e68", "html_url": "https://github.com/rust-lang/rust/commit/3e565f1a27a19f7da48c7109500b4351c0819e68"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "58117c46f04303201eb9c2ab42ff183f7970f052", "filename": "compiler/rustc_traits/src/dropck_outlives.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64fbdc37799b44a85a2dd6cb491ee96e6931cb5d/compiler%2Frustc_traits%2Fsrc%2Fdropck_outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64fbdc37799b44a85a2dd6cb491ee96e6931cb5d/compiler%2Frustc_traits%2Fsrc%2Fdropck_outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fdropck_outlives.rs?ref=64fbdc37799b44a85a2dd6cb491ee96e6931cb5d", "patch": "@@ -292,7 +292,9 @@ pub(crate) fn adt_dtorck_constraint(\n     let span = tcx.def_span(def_id);\n     debug!(\"dtorck_constraint: {:?}\", def);\n \n-    if def.is_phantom_data() {\n+    if def.is_manually_drop() {\n+        bug!(\"`ManuallyDrop` should have been handled by `trivial_dropck_outlives`\");\n+    } else if def.is_phantom_data() {\n         // The first generic parameter here is guaranteed to be a type because it's\n         // `PhantomData`.\n         let substs = InternalSubsts::identity_for_item(tcx, def_id);"}]}