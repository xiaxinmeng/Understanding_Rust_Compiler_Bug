{"sha": "637a93cb5d2ac75ce683d71bf83695907abc323a", "node_id": "C_kwDOAAsO6NoAKDYzN2E5M2NiNWQyYWM3NWNlNjgzZDcxYmY4MzY5NTkwN2FiYzMyM2E", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-05-03T02:40:35Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-05-03T20:15:29Z"}, "message": "Speed up `Token::{ident,lifetime}`.\n\nThey're hot enough that the repeated matching done by `uninterpolate`\nhas a measurable effect.", "tree": {"sha": "44a8066968aff7db2cc8b69d187498438e7c5c88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44a8066968aff7db2cc8b69d187498438e7c5c88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/637a93cb5d2ac75ce683d71bf83695907abc323a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/637a93cb5d2ac75ce683d71bf83695907abc323a", "html_url": "https://github.com/rust-lang/rust/commit/637a93cb5d2ac75ce683d71bf83695907abc323a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/637a93cb5d2ac75ce683d71bf83695907abc323a/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baaa3b682986879c7784b5733ecea942e9ae7de3", "url": "https://api.github.com/repos/rust-lang/rust/commits/baaa3b682986879c7784b5733ecea942e9ae7de3", "html_url": "https://github.com/rust-lang/rust/commit/baaa3b682986879c7784b5733ecea942e9ae7de3"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "4eb494aeb9b5a8cac37c6a6eb191477736f34259", "filename": "compiler/rustc_ast/src/token.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/637a93cb5d2ac75ce683d71bf83695907abc323a/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/637a93cb5d2ac75ce683d71bf83695907abc323a/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs?ref=637a93cb5d2ac75ce683d71bf83695907abc323a", "patch": "@@ -475,19 +475,29 @@ impl Token {\n     }\n \n     /// Returns an identifier if this token is an identifier.\n+    #[inline]\n     pub fn ident(&self) -> Option<(Ident, /* is_raw */ bool)> {\n-        let token = self.uninterpolate();\n-        match token.kind {\n-            Ident(name, is_raw) => Some((Ident::new(name, token.span), is_raw)),\n+        // We avoid using `Token::uninterpolate` here because it's slow.\n+        match &self.kind {\n+            &Ident(name, is_raw) => Some((Ident::new(name, self.span), is_raw)),\n+            Interpolated(nt) => match **nt {\n+                NtIdent(ident, is_raw) => Some((ident, is_raw)),\n+                _ => None,\n+            },\n             _ => None,\n         }\n     }\n \n     /// Returns a lifetime identifier if this token is a lifetime.\n+    #[inline]\n     pub fn lifetime(&self) -> Option<Ident> {\n-        let token = self.uninterpolate();\n-        match token.kind {\n-            Lifetime(name) => Some(Ident::new(name, token.span)),\n+        // We avoid using `Token::uninterpolate` here because it's slow.\n+        match &self.kind {\n+            &Lifetime(name) => Some(Ident::new(name, self.span)),\n+            Interpolated(nt) => match **nt {\n+                NtLifetime(ident) => Some(ident),\n+                _ => None,\n+            },\n             _ => None,\n         }\n     }"}]}