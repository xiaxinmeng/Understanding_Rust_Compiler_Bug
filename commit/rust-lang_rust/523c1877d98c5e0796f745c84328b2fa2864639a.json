{"sha": "523c1877d98c5e0796f745c84328b2fa2864639a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyM2MxODc3ZDk4YzVlMDc5NmY3NDVjODQzMjhiMmZhMjg2NDYzOWE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2017-02-10T20:59:29Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2017-02-10T20:59:29Z"}, "message": "print local fields as `_2.1` instead of `_2 (field 1)`", "tree": {"sha": "4db2e387c58fc5d4a7db4b69659844a72160d409", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4db2e387c58fc5d4a7db4b69659844a72160d409"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/523c1877d98c5e0796f745c84328b2fa2864639a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/523c1877d98c5e0796f745c84328b2fa2864639a", "html_url": "https://github.com/rust-lang/rust/commit/523c1877d98c5e0796f745c84328b2fa2864639a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/523c1877d98c5e0796f745c84328b2fa2864639a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e7481f96e2b17c269c2f96b6820efa15971d30f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e7481f96e2b17c269c2f96b6820efa15971d30f", "html_url": "https://github.com/rust-lang/rust/commit/1e7481f96e2b17c269c2f96b6820efa15971d30f"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "280117a4247edfc56b0eed9b4d2086b37efbbc1b", "filename": "src/eval_context.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/523c1877d98c5e0796f745c84328b2fa2864639a/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523c1877d98c5e0796f745c84328b2fa2864639a/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=523c1877d98c5e0796f745c84328b2fa2864639a", "patch": "@@ -1367,13 +1367,13 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         if let Lvalue::Local { frame, local, field } = lvalue {\n             let mut allocs = Vec::new();\n             let mut msg = format!(\"{:?}\", local);\n+            if let Some(field) = field {\n+                write!(msg, \".{}\", field).unwrap();\n+            }\n             let last_frame = self.stack.len() - 1;\n             if frame != last_frame {\n                 write!(msg, \" ({} frames up)\", last_frame - frame).unwrap();\n             }\n-            if let Some(field) = field {\n-                write!(msg, \" (field {:?})\", field).unwrap();\n-            }\n             write!(msg, \":\").unwrap();\n \n             match self.stack[frame].get_local(local, field.map(|(i, _)| i)) {"}]}