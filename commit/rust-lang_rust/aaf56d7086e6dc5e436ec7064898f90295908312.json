{"sha": "aaf56d7086e6dc5e436ec7064898f90295908312", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhZjU2ZDcwODZlNmRjNWU0MzZlYzcwNjQ4OThmOTAyOTU5MDgzMTI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-04-21T05:28:25Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-05-02T22:51:01Z"}, "message": "Fix tests", "tree": {"sha": "a161c53e0f095da018f389977df8c9f0f60026f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a161c53e0f095da018f389977df8c9f0f60026f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aaf56d7086e6dc5e436ec7064898f90295908312", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aaf56d7086e6dc5e436ec7064898f90295908312", "html_url": "https://github.com/rust-lang/rust/commit/aaf56d7086e6dc5e436ec7064898f90295908312", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aaf56d7086e6dc5e436ec7064898f90295908312/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52a2b33a4b1c9f10e7034a758d4dff4f53129a49", "url": "https://api.github.com/repos/rust-lang/rust/commits/52a2b33a4b1c9f10e7034a758d4dff4f53129a49", "html_url": "https://github.com/rust-lang/rust/commit/52a2b33a4b1c9f10e7034a758d4dff4f53129a49"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "dc181d106f488ac7623617d172857b34d937e464", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aaf56d7086e6dc5e436ec7064898f90295908312/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaf56d7086e6dc5e436ec7064898f90295908312/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=aaf56d7086e6dc5e436ec7064898f90295908312", "patch": "@@ -447,7 +447,10 @@ impl<'a> CompilerCalls<'a> for RustcDefaultCalls {\n             .and_then(|| RustcDefaultCalls::list_metadata(sess, matches, input))\n     }\n \n-    fn build_controller(&mut self, sess: &Session, matches: &getopts::Matches) -> CompileController<'a> {\n+    fn build_controller(&mut self,\n+                        sess: &Session,\n+                        matches: &getopts::Matches)\n+                        -> CompileController<'a> {\n         let mut control = CompileController::basic();\n \n         if let Some((ppm, opt_uii)) = parse_pretty(sess, matches) {"}, {"sha": "4e07728807643ab4c6e32e5103f8d0dc6d65201d", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aaf56d7086e6dc5e436ec7064898f90295908312/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaf56d7086e6dc5e436ec7064898f90295908312/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=aaf56d7086e6dc5e436ec7064898f90295908312", "patch": "@@ -949,7 +949,9 @@ fn print_with_analysis<'tcx, 'a: 'tcx>(sess: &'a Session,\n                         });\n                         match ppm {\n                             PpmMir => write_mir_pretty(tcx, iter::once((&nodeid, mir)), &mut out),\n-                            PpmMirCFG => write_mir_graphviz(tcx, iter::once((&nodeid, mir)), &mut out),\n+                            PpmMirCFG => {\n+                                write_mir_graphviz(tcx, iter::once((&nodeid, mir)), &mut out)\n+                            }\n                             _ => unreachable!(),\n                         }?;\n                     } else {"}, {"sha": "af641d717edd9224b4719bc4ef419fb8c01979bb", "filename": "src/test/run-pass-fulldeps/compiler-calls.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aaf56d7086e6dc5e436ec7064898f90295908312/src%2Ftest%2Frun-pass-fulldeps%2Fcompiler-calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaf56d7086e6dc5e436ec7064898f90295908312/src%2Ftest%2Frun-pass-fulldeps%2Fcompiler-calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fcompiler-calls.rs?ref=aaf56d7086e6dc5e436ec7064898f90295908312", "patch": "@@ -69,7 +69,10 @@ impl<'a> CompilerCalls<'a> for TestCalls {\n         panic!(\"This shouldn't happen\");\n     }\n \n-    fn build_controller(&mut self, _: &Session, _: &getopts::Matches) -> driver::CompileController<'a> {\n+    fn build_controller(&mut self,\n+                        _: &Session,\n+                        _: &getopts::Matches)\n+                        -> driver::CompileController<'a> {\n         panic!(\"This shouldn't be called\");\n     }\n }"}]}