{"sha": "f0a14346ee79086ecb64bb65ced517568fbfc986", "node_id": "C_kwDOAAsO6NoAKGYwYTE0MzQ2ZWU3OTA4NmVjYjY0YmI2NWNlZDUxNzU2OGZiZmM5ODY", "commit": {"author": {"name": "unexge", "email": "unexge@gmail.com", "date": "2022-10-29T23:00:53Z"}, "committer": {"name": "unexge", "email": "unexge@gmail.com", "date": "2022-10-29T23:00:53Z"}, "message": "Update auto generated tests", "tree": {"sha": "9958010f2d2b55cea12c266147f0491d088a51da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9958010f2d2b55cea12c266147f0491d088a51da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0a14346ee79086ecb64bb65ced517568fbfc986", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0a14346ee79086ecb64bb65ced517568fbfc986", "html_url": "https://github.com/rust-lang/rust/commit/f0a14346ee79086ecb64bb65ced517568fbfc986", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0a14346ee79086ecb64bb65ced517568fbfc986/comments", "author": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48efc9d30354eeb98b2992c002f753565e2fe07d", "url": "https://api.github.com/repos/rust-lang/rust/commits/48efc9d30354eeb98b2992c002f753565e2fe07d", "html_url": "https://github.com/rust-lang/rust/commit/48efc9d30354eeb98b2992c002f753565e2fe07d"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "9df029748c0505ce44a99a4de4738c82200bedc7", "filename": "crates/ide-assists/src/tests/generated.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f0a14346ee79086ecb64bb65ced517568fbfc986/crates%2Fide-assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0a14346ee79086ecb64bb65ced517568fbfc986/crates%2Fide-assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=f0a14346ee79086ecb64bb65ced517568fbfc986", "patch": "@@ -407,6 +407,26 @@ fn main() {\n     )\n }\n \n+#[test]\n+fn doctest_convert_match_to_let_else() {\n+    check_doc_test(\n+        \"convert_match_to_let_else\",\n+        r#####\"\n+fn foo(opt: Option<()>) {\n+    let val = $0match opt {\n+        Some(it) => it,\n+        None => return,\n+    };\n+}\n+\"#####,\n+        r#####\"\n+fn foo(opt: Option<()>) {\n+    let Some(val) = opt else { return };\n+}\n+\"#####,\n+    )\n+}\n+\n #[test]\n fn doctest_convert_named_struct_to_tuple_struct() {\n     check_doc_test("}]}