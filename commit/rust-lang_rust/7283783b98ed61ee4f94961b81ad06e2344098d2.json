{"sha": "7283783b98ed61ee4f94961b81ad06e2344098d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyODM3ODNiOThlZDYxZWU0Zjk0OTYxYjgxYWQwNmUyMzQ0MDk4ZDI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-09-29T18:50:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-29T18:50:46Z"}, "message": "Merge #6094\n\n6094: More panic_context r=matklad a=matklad\n\nbors r+\\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "3e533d158bb8954c46c5e1a7dcd4ba03ba044c0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e533d158bb8954c46c5e1a7dcd4ba03ba044c0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7283783b98ed61ee4f94961b81ad06e2344098d2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfc4IGCRBK7hj4Ov3rIwAAdHIIABuGthZlW7nG4mTytLj+p3wg\n4J49xqPhgf7lg4MzPb2rT2b8wSdR6XwvZiFcNS13moI+inphV8cFf3u9PlIkS+Ed\n8gtgg6GveekHQICOyWNjCsAvq50Hy34sF/m4cJAMquolhsjJmVsV96AnYCzB8A0K\n/IChryza/FrcmewoVm/PO5Qd5FYu7+szopapyVdoAQp9yGw6mv9BX080G4LLl4oe\nwvxA80kFmbtBj90KTfiGOeTgtFGc7d5P0djt2ni0cuOIlpltEq3Bc+HTEGPKKMmg\n8IP4wC5/qk/u3wyutl2pcNHAyXGE6RUP5Vg8qMNKHtOS5nWw0UllmAbVSb4lzv8=\n=5h55\n-----END PGP SIGNATURE-----\n", "payload": "tree 3e533d158bb8954c46c5e1a7dcd4ba03ba044c0a\nparent 4ecab09cbc835976efe6e64780bffdec99562ddb\nparent 8e34c0fb736837a766029613382a3bf295e1157f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1601405446 +0000\ncommitter GitHub <noreply@github.com> 1601405446 +0000\n\nMerge #6094\n\n6094: More panic_context r=matklad a=matklad\n\nbors r+\\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7283783b98ed61ee4f94961b81ad06e2344098d2", "html_url": "https://github.com/rust-lang/rust/commit/7283783b98ed61ee4f94961b81ad06e2344098d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7283783b98ed61ee4f94961b81ad06e2344098d2/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ecab09cbc835976efe6e64780bffdec99562ddb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ecab09cbc835976efe6e64780bffdec99562ddb", "html_url": "https://github.com/rust-lang/rust/commit/4ecab09cbc835976efe6e64780bffdec99562ddb"}, {"sha": "8e34c0fb736837a766029613382a3bf295e1157f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e34c0fb736837a766029613382a3bf295e1157f", "html_url": "https://github.com/rust-lang/rust/commit/8e34c0fb736837a766029613382a3bf295e1157f"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "9c8815e29e8875d14b5f7bd4bc833ee84e412076", "filename": "crates/rust-analyzer/src/dispatch.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7283783b98ed61ee4f94961b81ad06e2344098d2/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7283783b98ed61ee4f94961b81ad06e2344098d2/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs?ref=7283783b98ed61ee4f94961b81ad06e2344098d2", "patch": "@@ -23,7 +23,7 @@ impl<'a> RequestDispatcher<'a> {\n     ) -> Result<&mut Self>\n     where\n         R: lsp_types::request::Request + 'static,\n-        R::Params: DeserializeOwned + panic::UnwindSafe + 'static,\n+        R::Params: DeserializeOwned + panic::UnwindSafe + fmt::Debug + 'static,\n         R::Result: Serialize + 'static,\n     {\n         let (id, params) = match self.parse::<R>() {\n@@ -34,6 +34,7 @@ impl<'a> RequestDispatcher<'a> {\n         };\n         let world = panic::AssertUnwindSafe(&mut *self.global_state);\n         let response = panic::catch_unwind(move || {\n+            stdx::panic_context::enter(format!(\"request: {} {:#?}\", R::METHOD, params));\n             let result = f(world.0, params);\n             result_to_response::<R>(id, result)\n         })\n@@ -159,6 +160,7 @@ impl<'a> NotificationDispatcher<'a> {\n                 return Ok(self);\n             }\n         };\n+        stdx::panic_context::enter(format!(\"notification: {}\", N::METHOD));\n         f(self.global_state, params)?;\n         Ok(self)\n     }"}]}