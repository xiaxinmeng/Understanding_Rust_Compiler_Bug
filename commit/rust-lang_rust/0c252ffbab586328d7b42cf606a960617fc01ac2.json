{"sha": "0c252ffbab586328d7b42cf606a960617fc01ac2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjMjUyZmZiYWI1ODYzMjhkN2I0MmNmNjA2YTk2MDYxN2ZjMDFhYzI=", "commit": {"author": {"name": "Eitan Adler", "email": "lists@eitanadler.com", "date": "2016-09-18T14:35:58Z"}, "committer": {"name": "Eitan Adler", "email": "lists@eitanadler.com", "date": "2016-09-18T14:36:02Z"}, "message": "per timnn", "tree": {"sha": "a5f77847714616c8c619f710368d9968e1ecffae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5f77847714616c8c619f710368d9968e1ecffae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c252ffbab586328d7b42cf606a960617fc01ac2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c252ffbab586328d7b42cf606a960617fc01ac2", "html_url": "https://github.com/rust-lang/rust/commit/0c252ffbab586328d7b42cf606a960617fc01ac2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c252ffbab586328d7b42cf606a960617fc01ac2/comments", "author": {"login": "grimreaper", "id": 433817, "node_id": "MDQ6VXNlcjQzMzgxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/433817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grimreaper", "html_url": "https://github.com/grimreaper", "followers_url": "https://api.github.com/users/grimreaper/followers", "following_url": "https://api.github.com/users/grimreaper/following{/other_user}", "gists_url": "https://api.github.com/users/grimreaper/gists{/gist_id}", "starred_url": "https://api.github.com/users/grimreaper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grimreaper/subscriptions", "organizations_url": "https://api.github.com/users/grimreaper/orgs", "repos_url": "https://api.github.com/users/grimreaper/repos", "events_url": "https://api.github.com/users/grimreaper/events{/privacy}", "received_events_url": "https://api.github.com/users/grimreaper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "grimreaper", "id": 433817, "node_id": "MDQ6VXNlcjQzMzgxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/433817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grimreaper", "html_url": "https://github.com/grimreaper", "followers_url": "https://api.github.com/users/grimreaper/followers", "following_url": "https://api.github.com/users/grimreaper/following{/other_user}", "gists_url": "https://api.github.com/users/grimreaper/gists{/gist_id}", "starred_url": "https://api.github.com/users/grimreaper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grimreaper/subscriptions", "organizations_url": "https://api.github.com/users/grimreaper/orgs", "repos_url": "https://api.github.com/users/grimreaper/repos", "events_url": "https://api.github.com/users/grimreaper/events{/privacy}", "received_events_url": "https://api.github.com/users/grimreaper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fad6a09c940f49052ea63792714d92918a91e19a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fad6a09c940f49052ea63792714d92918a91e19a", "html_url": "https://github.com/rust-lang/rust/commit/fad6a09c940f49052ea63792714d92918a91e19a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d49cf3eced4e28e1e9c58cf473422ba6bd37b46e", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c252ffbab586328d7b42cf606a960617fc01ac2/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c252ffbab586328d7b42cf606a960617fc01ac2/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=0c252ffbab586328d7b42cf606a960617fc01ac2", "patch": "@@ -2913,7 +2913,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n \n     /// See `ParameterEnvironment` struct def'n for details.\n     /// If you were using `free_id: NodeId`, you might try `self.region_maps.item_extent(free_id)`\n-    /// for the `free_id_outlive` parameter. (But note that is not always quite right.)\n+    /// for the `free_id_outlive` parameter. (But note that this is not always quite right.)\n     pub fn construct_parameter_environment(self,\n                                            span: Span,\n                                            def_id: DefId,"}]}