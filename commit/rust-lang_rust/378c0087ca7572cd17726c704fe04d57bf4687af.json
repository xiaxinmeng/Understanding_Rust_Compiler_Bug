{"sha": "378c0087ca7572cd17726c704fe04d57bf4687af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3OGMwMDg3Y2E3NTcyY2QxNzcyNmM3MDRmZTA0ZDU3YmY0Njg3YWY=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-01-30T22:18:19Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-10T20:12:10Z"}, "message": "Parse 'be' statement. Pass tailcall tests. No actual tailcalls yet.", "tree": {"sha": "c158d769375cee5b19b4be83d314c46acab28b12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c158d769375cee5b19b4be83d314c46acab28b12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/378c0087ca7572cd17726c704fe04d57bf4687af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/378c0087ca7572cd17726c704fe04d57bf4687af", "html_url": "https://github.com/rust-lang/rust/commit/378c0087ca7572cd17726c704fe04d57bf4687af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/378c0087ca7572cd17726c704fe04d57bf4687af/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0f997be21ae6b98aa77818dc90bff07544f1c20", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0f997be21ae6b98aa77818dc90bff07544f1c20", "html_url": "https://github.com/rust-lang/rust/commit/c0f997be21ae6b98aa77818dc90bff07544f1c20"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "5c3f297f788600b372155bf0cda448025ba3ed21", "filename": "src/Makefile", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/378c0087ca7572cd17726c704fe04d57bf4687af/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/378c0087ca7572cd17726c704fe04d57bf4687af/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=378c0087ca7572cd17726c704fe04d57bf4687af", "patch": "@@ -517,6 +517,9 @@ TEST_XFAILS_RUSTC := $(filter-out \\\n                         simple-obj.rs \\\n                         stateful-obj.rs \\\n                         str-idx.rs \\\n+                        tail-call-arg-leak.rs \\\n+                        tail-cps.rs \\\n+                        tail-direct.rs \\\n                         type-in-nested-module.rs \\\n                         type-param.rs \\\n                         tup.rs \\"}, {"sha": "756a7ad1e6b0062b05ac4bdb2857b3190c86e327", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/378c0087ca7572cd17726c704fe04d57bf4687af/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/378c0087ca7572cd17726c704fe04d57bf4687af/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=378c0087ca7572cd17726c704fe04d57bf4687af", "patch": "@@ -116,6 +116,7 @@ type stmt = spanned[stmt_];\n tag stmt_ {\n     stmt_decl(@decl);\n     stmt_ret(option.t[@expr]);\n+    stmt_be(@expr);\n     stmt_log(@expr);\n     stmt_check_expr(@expr);\n     stmt_fail;"}, {"sha": "a1b519ba7f5e38e4f7bbdbcb0c932a0ed7d2dc35", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/378c0087ca7572cd17726c704fe04d57bf4687af/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/378c0087ca7572cd17726c704fe04d57bf4687af/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=378c0087ca7572cd17726c704fe04d57bf4687af", "patch": "@@ -1200,6 +1200,12 @@ impure fn parse_stmt(parser p) -> @ast.stmt {\n             }\n         }\n \n+        case (token.BE) {\n+            p.bump();\n+            auto e = parse_expr(p);\n+            ret @spanned(lo, e.span, ast.stmt_be(e));\n+        }\n+\n         case (token.LET) {\n             auto decl = parse_let(p);\n             auto hi = p.get_span();\n@@ -1340,6 +1346,7 @@ fn stmt_ends_with_semi(@ast.stmt stmt) -> bool {\n             }\n         }\n         case (ast.stmt_ret(_))                  { ret true; }\n+        case (ast.stmt_be(_))                   { ret true; }\n         case (ast.stmt_log(_))                  { ret true; }\n         case (ast.stmt_check_expr(_))           { ret true; }\n         case (ast.stmt_fail)                    { ret true; }"}, {"sha": "9194f734beedd872fbea5cb009be9f05237c513a", "filename": "src/comp/middle/fold.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/378c0087ca7572cd17726c704fe04d57bf4687af/src%2Fcomp%2Fmiddle%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/378c0087ca7572cd17726c704fe04d57bf4687af/src%2Fcomp%2Fmiddle%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ffold.rs?ref=378c0087ca7572cd17726c704fe04d57bf4687af", "patch": "@@ -176,6 +176,9 @@ type ast_fold[ENV] =\n      (fn(&ENV e, &span sp,\n          &option.t[@expr] rv) -> @stmt)           fold_stmt_ret,\n \n+     (fn(&ENV e, &span sp,\n+         @expr e) -> @stmt)                       fold_stmt_be,\n+\n      (fn(&ENV e, &span sp,\n          @expr e) -> @stmt)                       fold_stmt_log,\n \n@@ -636,6 +639,11 @@ fn fold_stmt[ENV](&ENV env, ast_fold[ENV] fld, &@stmt s) -> @stmt {\n             ret fld.fold_stmt_ret(env_, s.span, oee);\n         }\n \n+        case (ast.stmt_be(?e)) {\n+            auto ee = fold_expr(env_, fld, e);\n+            ret fld.fold_stmt_be(env_, s.span, ee);\n+        }\n+\n         case (ast.stmt_log(?e)) {\n             auto ee = fold_expr(env_, fld, e);\n             ret fld.fold_stmt_log(env_, s.span, ee);\n@@ -1136,6 +1144,10 @@ fn identity_fold_stmt_ret[ENV](&ENV env, &span sp,\n     ret @respan(sp, ast.stmt_ret(rv));\n }\n \n+fn identity_fold_stmt_be[ENV](&ENV env, &span sp, @expr x) -> @stmt {\n+    ret @respan(sp, ast.stmt_be(x));\n+}\n+\n fn identity_fold_stmt_log[ENV](&ENV e, &span sp, @expr x) -> @stmt {\n     ret @respan(sp, ast.stmt_log(x));\n }\n@@ -1366,6 +1378,7 @@ fn new_identity_fold[ENV]() -> ast_fold[ENV] {\n \n          fold_stmt_decl   = bind identity_fold_stmt_decl[ENV](_,_,_),\n          fold_stmt_ret    = bind identity_fold_stmt_ret[ENV](_,_,_),\n+         fold_stmt_be     = bind identity_fold_stmt_be[ENV](_,_,_),\n          fold_stmt_log    = bind identity_fold_stmt_log[ENV](_,_,_),\n          fold_stmt_check_expr\n                           = bind identity_fold_stmt_check_expr[ENV](_,_,_),"}, {"sha": "499ab027d507119cd76182fbe6b24439481696ab", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/378c0087ca7572cd17726c704fe04d57bf4687af/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/378c0087ca7572cd17726c704fe04d57bf4687af/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=378c0087ca7572cd17726c704fe04d57bf4687af", "patch": "@@ -3128,6 +3128,11 @@ fn trans_ret(@block_ctxt cx, &option.t[@ast.expr] e) -> result {\n     ret res(bcx, C_nil());\n }\n \n+fn trans_be(@block_ctxt cx, @ast.expr e) -> result {\n+    // FIXME: So this isn't actually a tail call\n+    ret trans_ret(cx, some(e));\n+}\n+\n fn init_local(@block_ctxt cx, @ast.local local) -> result {\n \n     // Make a note to drop this slot on the way out.\n@@ -3178,6 +3183,10 @@ fn trans_stmt(@block_ctxt cx, &ast.stmt s) -> result {\n             bcx = trans_ret(cx, e).bcx;\n         }\n \n+        case (ast.stmt_be(?e)) {\n+            bcx = trans_be(cx, e).bcx;\n+        }\n+\n         case (ast.stmt_expr(?e)) {\n             bcx = trans_expr(cx, e).bcx;\n         }"}, {"sha": "7a2b0616d2b294517323b01e4c266bdd3f7c8adb", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/378c0087ca7572cd17726c704fe04d57bf4687af/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/378c0087ca7572cd17726c704fe04d57bf4687af/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=378c0087ca7572cd17726c704fe04d57bf4687af", "patch": "@@ -1719,6 +1719,21 @@ fn check_stmt(&@fn_ctxt fcx, &@ast.stmt stmt) -> @ast.stmt {\n             }\n         }\n \n+        case (ast.stmt_be(?expr)) {\n+            alt (expr.node) {\n+                case (ast.expr_call(_, _, _)) {\n+                    auto expr_0 = check_expr(fcx, expr);\n+                    auto expr_1 = demand_expr(fcx, fcx.ret_ty, expr_0);\n+                    ret @fold.respan[ast.stmt_](stmt.span,\n+                                                ast.stmt_be(expr_1));\n+                }\n+                case (_) {\n+                    fcx.ccx.sess.err(\"Non-call expression in tail call\");\n+                    fail;\n+                }\n+            }\n+        }\n+\n         case (ast.stmt_log(?expr)) {\n             auto expr_t = check_expr(fcx, expr);\n             ret @fold.respan[ast.stmt_](stmt.span, ast.stmt_log(expr_t));"}]}