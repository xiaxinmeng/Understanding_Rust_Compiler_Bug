{"sha": "dbf60d9ca1db6fb1ae296f25af02b27b8264577d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZjYwZDljYTFkYjZmYjFhZTI5NmYyNWFmMDJiMjdiODI2NDU3N2Q=", "commit": {"author": {"name": "Aaron Stillwell", "email": "aaron@stillwell.tech", "date": "2019-02-17T16:41:05Z"}, "committer": {"name": "Aaron Stillwell", "email": "aaron@stillwell.tech", "date": "2019-02-17T16:41:05Z"}, "message": "Fixes for implementation of PathBuf methods (aliases for OsString)\n\n- Fixed incorrect `mut` usage\n- Fixed style in accordance with tidy\n- Marked all methods as unstable\n- Changed feature identifier to path_buf_alias_os_string_methods", "tree": {"sha": "6c66d0098bbc4998899fc03092e8c98e6dc680c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c66d0098bbc4998899fc03092e8c98e6dc680c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbf60d9ca1db6fb1ae296f25af02b27b8264577d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbf60d9ca1db6fb1ae296f25af02b27b8264577d", "html_url": "https://github.com/rust-lang/rust/commit/dbf60d9ca1db6fb1ae296f25af02b27b8264577d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbf60d9ca1db6fb1ae296f25af02b27b8264577d/comments", "author": {"login": "aaronstillwell", "id": 6533711, "node_id": "MDQ6VXNlcjY1MzM3MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/6533711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronstillwell", "html_url": "https://github.com/aaronstillwell", "followers_url": "https://api.github.com/users/aaronstillwell/followers", "following_url": "https://api.github.com/users/aaronstillwell/following{/other_user}", "gists_url": "https://api.github.com/users/aaronstillwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronstillwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronstillwell/subscriptions", "organizations_url": "https://api.github.com/users/aaronstillwell/orgs", "repos_url": "https://api.github.com/users/aaronstillwell/repos", "events_url": "https://api.github.com/users/aaronstillwell/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronstillwell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aaronstillwell", "id": 6533711, "node_id": "MDQ6VXNlcjY1MzM3MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/6533711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronstillwell", "html_url": "https://github.com/aaronstillwell", "followers_url": "https://api.github.com/users/aaronstillwell/followers", "following_url": "https://api.github.com/users/aaronstillwell/following{/other_user}", "gists_url": "https://api.github.com/users/aaronstillwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronstillwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronstillwell/subscriptions", "organizations_url": "https://api.github.com/users/aaronstillwell/orgs", "repos_url": "https://api.github.com/users/aaronstillwell/repos", "events_url": "https://api.github.com/users/aaronstillwell/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronstillwell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a23c40ec9435dd7b784e833e876a133c627aff92", "url": "https://api.github.com/repos/rust-lang/rust/commits/a23c40ec9435dd7b784e833e876a133c627aff92", "html_url": "https://github.com/rust-lang/rust/commit/a23c40ec9435dd7b784e833e876a133c627aff92"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "0761b1d0a8fe64dc1aa352acb72d11c9c4f136b8", "filename": "src/libstd/path.rs", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/dbf60d9ca1db6fb1ae296f25af02b27b8264577d/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbf60d9ca1db6fb1ae296f25af02b27b8264577d/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=dbf60d9ca1db6fb1ae296f25af02b27b8264577d", "patch": "@@ -1137,34 +1137,34 @@ impl PathBuf {\n     ///\n     /// ```\n     /// use std::path::PathBuf;\n-    /// \n+    ///\n     /// let path = PathBuf::new();\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn new() -> PathBuf {\n         PathBuf { inner: OsString::new() }\n     }\n \n-    /// Creates a new `PathBuf` with a given capacity used to create the \n+    /// Creates a new `PathBuf` with a given capacity used to create the\n     /// internal [`OsString`]. See [`with_capacity`] defined on [`OsString`].\n     ///\n     /// # Examples\n-    /// \n+    ///\n     /// ```\n     /// use std::path::PathBuf;\n-    /// \n+    ///\n     /// let path = PathBuf::with_capacity(10);\n     /// let capacity = path.capacity();\n-    /// \n+    ///\n     /// // This push is done without reallocating\n     /// path.push(r\"C:\\\");\n     ///\n     /// assert_eq!(capacity, path.capacity());\n     /// ```\n-    /// \n+    ///\n     /// [`with_capacity`]: ../ffi/struct.OsString.html#method.with_capacity\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[stable(feature = \"path_buf_os_string_methods\", since = \"1.33.0\")]\n+    #[unstable(feature = \"path_buf_alias_os_string_methods\", issue = \"58234\")]\n     pub fn with_capacity(capacity: usize) -> PathBuf {\n         PathBuf {\n             inner: OsString::with_capacity(capacity)\n@@ -1404,53 +1404,53 @@ impl PathBuf {\n     ///\n     /// [`capacity`]: ../ffi/struct.OsString.html#method.capacity\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[stable(feature = \"path_buf_os_string_methods\", since = \"1.33.0\")]\n-    pub fn capacity(self) -> usize {\n+    #[unstable(feature = \"path_buf_alias_os_string_methods\", issue = \"58234\")]\n+    pub fn capacity(&self) -> usize {\n         self.inner.capacity()\n     }\n \n     /// Invokes [`clear`] on the underlying instance of [`OsString`].\n     ///\n     /// [`clear`]: ../ffi/struct.OsString.html#method.clear\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[stable(feature = \"path_buf_os_string_methods\", since = \"1.33.0\")]\n-    pub fn clear(mut self) {\n+    #[unstable(feature = \"path_buf_alias_os_string_methods\", issue = \"58234\")]\n+    pub fn clear(&mut self) {\n         self.inner.clear()\n     }\n \n     /// Invokes [`reserve`] on the underlying instance of [`OsString`].\n     ///\n     /// [`reserve`]: ../ffi/struct.OsString.html#method.reserve\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[stable(feature = \"path_buf_os_string_methods\", since = \"1.33.0\")]\n-    pub fn reserve(mut self, additional: usize) {\n+    #[unstable(feature = \"path_buf_alias_os_string_methods\", issue = \"58234\")]\n+    pub fn reserve(&mut self, additional: usize) {\n         self.inner.reserve(additional)\n     }\n \n     /// Invokes [`reserve_exact`] on the underlying instance of [`OsString`].\n     ///\n     /// [`reserve_exact`]: ../ffi/struct.OsString.html#method.reserve_exact\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[stable(feature = \"path_buf_os_string_methods\", since = \"1.33.0\")]\n-    pub fn reserve_exact(mut self, additional: usize) {\n+    #[unstable(feature = \"path_buf_alias_os_string_methods\", issue = \"58234\")]\n+    pub fn reserve_exact(&mut self, additional: usize) {\n         self.inner.reserve_exact(additional)\n     }\n \n     /// Invokes [`shrink_to_fit`] on the underlying instance of [`OsString`].\n     ///\n     /// [`shrink_to_fit`]: ../ffi/struct.OsString.html#method.shrink_to_fit\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[stable(feature = \"path_buf_os_string_methods\", since = \"1.33.0\")]\n-    pub fn shrink_to_fit(mut self) {\n+    #[unstable(feature = \"path_buf_alias_os_string_methods\", issue = \"58234\")]\n+    pub fn shrink_to_fit(&mut self) {\n         self.inner.shrink_to_fit()\n     }\n \n     /// Invokes [`shrink_to`] on the underlying instance of [`OsString`].\n     ///\n     /// [`shrink_to`]: ../ffi/struct.OsString.html#method.shrink_to\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[stable(feature = \"path_buf_os_string_methods\", since = \"1.33.0\")]\n-    pub fn shrink_to(mut self, min_capacity: usize) {\n+    #[unstable(feature = \"path_buf_alias_os_string_methods\", issue = \"58234\")]\n+    pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.inner.shrink_to(min_capacity)\n     }\n }"}]}