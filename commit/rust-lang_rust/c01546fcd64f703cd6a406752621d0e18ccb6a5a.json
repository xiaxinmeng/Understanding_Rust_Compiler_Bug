{"sha": "c01546fcd64f703cd6a406752621d0e18ccb6a5a", "node_id": "C_kwDOAAsO6NoAKGMwMTU0NmZjZDY0ZjcwM2NkNmE0MDY3NTI2MjFkMGUxOGNjYjZhNWE", "commit": {"author": {"name": "SLASHLogin", "email": "loginmlgxd@gmail.com", "date": "2022-08-26T17:01:22Z"}, "committer": {"name": "SLASHLogin", "email": "loginmlgxd@gmail.com", "date": "2022-11-09T13:56:21Z"}, "message": "Port `DlltoolFailImportLibrary` and implement `IntoDiagnosticArg` for `Cow<'a, str>`", "tree": {"sha": "ede6949b10341937cbe59804eb76ae651e208118", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ede6949b10341937cbe59804eb76ae651e208118"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c01546fcd64f703cd6a406752621d0e18ccb6a5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c01546fcd64f703cd6a406752621d0e18ccb6a5a", "html_url": "https://github.com/rust-lang/rust/commit/c01546fcd64f703cd6a406752621d0e18ccb6a5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c01546fcd64f703cd6a406752621d0e18ccb6a5a/comments", "author": {"login": "SLASHLogin", "id": 24846525, "node_id": "MDQ6VXNlcjI0ODQ2NTI1", "avatar_url": "https://avatars.githubusercontent.com/u/24846525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SLASHLogin", "html_url": "https://github.com/SLASHLogin", "followers_url": "https://api.github.com/users/SLASHLogin/followers", "following_url": "https://api.github.com/users/SLASHLogin/following{/other_user}", "gists_url": "https://api.github.com/users/SLASHLogin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SLASHLogin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SLASHLogin/subscriptions", "organizations_url": "https://api.github.com/users/SLASHLogin/orgs", "repos_url": "https://api.github.com/users/SLASHLogin/repos", "events_url": "https://api.github.com/users/SLASHLogin/events{/privacy}", "received_events_url": "https://api.github.com/users/SLASHLogin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SLASHLogin", "id": 24846525, "node_id": "MDQ6VXNlcjI0ODQ2NTI1", "avatar_url": "https://avatars.githubusercontent.com/u/24846525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SLASHLogin", "html_url": "https://github.com/SLASHLogin", "followers_url": "https://api.github.com/users/SLASHLogin/followers", "following_url": "https://api.github.com/users/SLASHLogin/following{/other_user}", "gists_url": "https://api.github.com/users/SLASHLogin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SLASHLogin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SLASHLogin/subscriptions", "organizations_url": "https://api.github.com/users/SLASHLogin/orgs", "repos_url": "https://api.github.com/users/SLASHLogin/repos", "events_url": "https://api.github.com/users/SLASHLogin/events{/privacy}", "received_events_url": "https://api.github.com/users/SLASHLogin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81f7a8d7f1ddcbe9ed49757a925366d0041eda31", "url": "https://api.github.com/repos/rust-lang/rust/commits/81f7a8d7f1ddcbe9ed49757a925366d0041eda31", "html_url": "https://github.com/rust-lang/rust/commit/81f7a8d7f1ddcbe9ed49757a925366d0041eda31"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "9be104fde6c4c65fd90a012b381e4d13e4ea0cd4", "filename": "compiler/rustc_codegen_llvm/src/back/archive.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c01546fcd64f703cd6a406752621d0e18ccb6a5a/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c01546fcd64f703cd6a406752621d0e18ccb6a5a/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Farchive.rs?ref=c01546fcd64f703cd6a406752621d0e18ccb6a5a", "patch": "@@ -13,7 +13,8 @@ use object::read::macho::FatArch;\n \n use crate::common;\n use crate::errors::{\n-    ArchiveBuildFailure, ErrorCallingDllTool, ErrorCreatingImportLibrary, ErrorWritingDEFFile,\n+    ArchiveBuildFailure, DlltoolFailImportLibrary, ErrorCallingDllTool, ErrorCreatingImportLibrary,\n+    ErrorWritingDEFFile,\n };\n use crate::llvm::archive_ro::{ArchiveRO, Child};\n use crate::llvm::{self, ArchiveKind, LLVMMachineType, LLVMRustCOFFShortExport};\n@@ -244,11 +245,12 @@ impl ArchiveBuilderBuilder for LlvmArchiveBuilderBuilder {\n                 Err(e) => {\n                     sess.emit_fatal(ErrorCallingDllTool { error: e });\n                 }\n-                Ok(output) if !output.status.success() => sess.fatal(&format!(\n-                    \"Dlltool could not create import library: {}\\n{}\",\n-                    String::from_utf8_lossy(&output.stdout),\n-                    String::from_utf8_lossy(&output.stderr)\n-                )),\n+                Ok(output) if !output.status.success() => {\n+                    sess.emit_fatal(DlltoolFailImportLibrary {\n+                        stdout: String::from_utf8_lossy(&output.stdout),\n+                        stderr: String::from_utf8_lossy(&output.stderr),\n+                    })\n+                }\n                 _ => {}\n             }\n         } else {"}, {"sha": "68c2e69283041ab601e875c694b250b9f0681567", "filename": "compiler/rustc_codegen_llvm/src/errors.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c01546fcd64f703cd6a406752621d0e18ccb6a5a/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c01546fcd64f703cd6a406752621d0e18ccb6a5a/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs?ref=c01546fcd64f703cd6a406752621d0e18ccb6a5a", "patch": "@@ -1,3 +1,5 @@\n+use std::borrow::Cow;\n+\n use rustc_errors::fluent;\n use rustc_errors::DiagnosticBuilder;\n use rustc_macros::SessionDiagnostic;\n@@ -102,3 +104,10 @@ pub(crate) struct ErrorWritingDEFFile {\n pub(crate) struct ErrorCallingDllTool {\n     pub error: std::io::Error,\n }\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(codegen_llvm::dlltool_fail_import_library)]\n+pub(crate) struct DlltoolFailImportLibrary<'a> {\n+    pub stdout: Cow<'a, str>,\n+    pub stderr: Cow<'a, str>,\n+}"}, {"sha": "f9266b54d137a967c556c6c954403acdd55d3eed", "filename": "compiler/rustc_error_messages/locales/en-US/codegen_llvm.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c01546fcd64f703cd6a406752621d0e18ccb6a5a/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_llvm.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/c01546fcd64f703cd6a406752621d0e18ccb6a5a/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_llvm.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_llvm.ftl?ref=c01546fcd64f703cd6a406752621d0e18ccb6a5a", "patch": "@@ -45,3 +45,6 @@ codegen_llvm_error_writing_def_file =\n \n codegen_llvm_error_calling_dlltool =\n     Error calling dlltool: {$error}\n+\n+codegen_llvm_dlltool_fail_import_library =\n+    Dlltool could not create import library: {$stdout}\\n{$stderr}"}, {"sha": "c6035705e39fa70d2022800fee8d488c82fb115b", "filename": "compiler/rustc_errors/src/diagnostic_impls.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c01546fcd64f703cd6a406752621d0e18ccb6a5a/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c01546fcd64f703cd6a406752621d0e18ccb6a5a/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_impls.rs?ref=c01546fcd64f703cd6a406752621d0e18ccb6a5a", "patch": "@@ -107,6 +107,12 @@ impl IntoDiagnosticArg for String {\n     }\n }\n \n+impl<'a> IntoDiagnosticArg for Cow<'a, str> {\n+    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n+        DiagnosticArgValue::Str(Cow::Owned(self.into_owned()))\n+    }\n+}\n+\n impl<'a> IntoDiagnosticArg for &'a Path {\n     fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n         DiagnosticArgValue::Str(Cow::Owned(self.display().to_string()))"}]}