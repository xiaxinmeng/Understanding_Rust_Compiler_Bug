{"sha": "848e1d827e9a76f16cbb6d3f777edd6242390906", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0OGUxZDgyN2U5YTc2ZjE2Y2JiNmQzZjc3N2VkZDYyNDIzOTA5MDY=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-10-29T22:23:36Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-11-11T20:14:35Z"}, "message": "More work on miri_start_panic", "tree": {"sha": "0b1e845c5a81b34c7c81259a483f00988608204b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b1e845c5a81b34c7c81259a483f00988608204b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/848e1d827e9a76f16cbb6d3f777edd6242390906", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl3JwSsACgkQtAh+UQ6Y\nsWR5GBAArCyGgwKbr5iNhvggmOy4jqg2FvzN/TlLzGHIoPO9BC13jI5iHDUR7Lib\nyphx4u0Jzd18v/kCMRfzVg+KHzQ/+V46JHsuff6TLKmEzxNC9unddyatGfR4L/rz\nvFyy4S3zLl9LKN7d7zU3x5If0nR1kQxcsQDmRmI6iS4oetSDssEIuRwncmkY8akg\nHzLUSGrSfO0ZXwmYOgxtj8XOrZPQ4/YeaI6lf8JZNMXAXIOQ50pvUvNfXrRUNTwe\nLRujHCaIwKdlBs3h34cQFGUxhs4Uvb4Oqq8CgyoqkgtXm3RfISmd/8d6fyPAen9n\n7rZiRibdRzNdTomePrX3TKxCJlJ5x2im5K5qB9i0s26MYjBrI3hLgtp+7OWueXoe\nH7NaadvUvkHF/OQ8NC2KefbY3kWIy9mDcLhpFtRak+vXgB3E234QQybMV/bKtFJ8\nmZK7UHIFACE/o6gIuDs76F6OtmHAcplO0YeASNlFYce1F2NpiF4XHPt1GXlfNgsE\nI7EXIZJ35Mb3CLH/feHEuc3FU9NcnQm9Or/bBZKT70RIofqhQQaVrp3zzk7c2pVX\ndcpjYIwp0CUahInAqXbRf/9UZ0AM4A8Zz5JEPdBOw/akgQqyYJ+wY7YaNkKhf//U\nFuG+UIdCc+3AN3gAQ2R8fWwfwXbAvPnhTdAU4ihGvF7lh3ryUFo=\n=DBMp\n-----END PGP SIGNATURE-----", "payload": "tree 0b1e845c5a81b34c7c81259a483f00988608204b\nparent fe88fc03c50be57e1dc12cf308c45dc9c8d6473a\nauthor Aaron Hill <aa1ronham@gmail.com> 1572387816 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1573503275 -0500\n\nMore work on miri_start_panic\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/848e1d827e9a76f16cbb6d3f777edd6242390906", "html_url": "https://github.com/rust-lang/rust/commit/848e1d827e9a76f16cbb6d3f777edd6242390906", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/848e1d827e9a76f16cbb6d3f777edd6242390906/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe88fc03c50be57e1dc12cf308c45dc9c8d6473a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe88fc03c50be57e1dc12cf308c45dc9c8d6473a", "html_url": "https://github.com/rust-lang/rust/commit/fe88fc03c50be57e1dc12cf308c45dc9c8d6473a"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "9a4c81f699b5d9872b747118e09fad7e8e187b9d", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/848e1d827e9a76f16cbb6d3f777edd6242390906/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/848e1d827e9a76f16cbb6d3f777edd6242390906/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=848e1d827e9a76f16cbb6d3f777edd6242390906", "patch": "@@ -1352,7 +1352,12 @@ extern \"rust-intrinsic\" {\n     /// Internal hook used by Miri to implement unwinding.\n     /// Perma-unstable: do not use\n     #[cfg(not(bootstrap))]\n-    pub fn miri_start_panic(data: u128) -> !;\n+    // Note that the type is data is pretty arbitrary:\n+    // we just need something that's guarnateed to be a fat\n+    // pointer. Using `*mut [()]` instead of the actual type\n+    // `*mut (Any + Send)` allows us to avoid making `Any` and `Send`\n+    // lang items\n+    pub fn miri_start_panic(data: *mut [()]) -> !;\n }\n \n // Some functions are defined here because they accidentally got made"}, {"sha": "90fd5cafc37cc1dec9f307d48698c5def0a4267b", "filename": "src/libpanic_unwind/miri.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/848e1d827e9a76f16cbb6d3f777edd6242390906/src%2Flibpanic_unwind%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/848e1d827e9a76f16cbb6d3f777edd6242390906/src%2Flibpanic_unwind%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Fmiri.rs?ref=848e1d827e9a76f16cbb6d3f777edd6242390906", "patch": "@@ -6,11 +6,19 @@ pub fn payload() -> *mut u8 {\n }\n \n pub unsafe fn panic(data: Box<dyn Any + Send>) -> ! {\n-    let raw_val = core::mem::transmute::<_, u128>(Box::into_raw(data));\n+    let raw_val: *mut [()] = core::mem::transmute::<*mut (dyn Any + Send), _>(Box::into_raw(data));\n     core::intrinsics::miri_start_panic(raw_val)\n }\n \n pub unsafe fn cleanup(ptr: *mut u8) -> Box<dyn Any + Send> {\n     Box::from_raw(ptr)\n }\n \n+\n+// This is required by the compiler to exist (e.g., it's a lang item),\n+// but is never used by Miri. Therefore, we just use a stub here\n+#[lang = \"eh_personality\"]\n+#[cfg(not(test))]\n+fn rust_eh_personality() {\n+    unsafe { core::intrinsics::abort() }\n+}"}, {"sha": "50985a3a2320037da81d73d957e2d7b84d300bea", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/848e1d827e9a76f16cbb6d3f777edd6242390906/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/848e1d827e9a76f16cbb6d3f777edd6242390906/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=848e1d827e9a76f16cbb6d3f777edd6242390906", "patch": "@@ -385,7 +385,7 @@ pub fn check_intrinsic_type(tcx: TyCtxt<'_>, it: &hir::ForeignItem) {\n             }\n \n             \"miri_start_panic\" => {\n-                (0, vec![tcx.types.u128], tcx.types.never)\n+                (0, vec![tcx.mk_mut_ptr(tcx.mk_slice(tcx.mk_unit()))], tcx.types.never)\n             }\n \n             ref other => {"}]}