{"sha": "a3f7c4db0373aa077f86cdd1bf11122845d3b65a", "node_id": "C_kwDOAAsO6NoAKGEzZjdjNGRiMDM3M2FhMDc3Zjg2Y2RkMWJmMTExMjI4NDVkM2I2NWE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-23T03:06:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-23T03:06:21Z"}, "message": "Auto merge of #90054 - michaelwoerister:v0-mangling-in-compiler, r=Mark-Simulacrum\n\nMake new symbol mangling scheme default for compiler itself.\n\nAs suggest in https://github.com/rust-lang/rust/pull/89917#issuecomment-945888574, this PR enables the new symbol mangling scheme for the compiler itself. The standard library is still compiled using the legacy mangling scheme so that the new symbol format does not show up in user code (yet).\n\nr? `@Mark-Simulacrum`", "tree": {"sha": "83cc1cd209897f3d0c7ff4c8d6633ede02694a13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83cc1cd209897f3d0c7ff4c8d6633ede02694a13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3f7c4db0373aa077f86cdd1bf11122845d3b65a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3f7c4db0373aa077f86cdd1bf11122845d3b65a", "html_url": "https://github.com/rust-lang/rust/commit/a3f7c4db0373aa077f86cdd1bf11122845d3b65a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3f7c4db0373aa077f86cdd1bf11122845d3b65a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "514b3877956dc594823106b66c164f8cdbc8b3da", "url": "https://api.github.com/repos/rust-lang/rust/commits/514b3877956dc594823106b66c164f8cdbc8b3da", "html_url": "https://github.com/rust-lang/rust/commit/514b3877956dc594823106b66c164f8cdbc8b3da"}, {"sha": "456283c95dfc21a94a3f48e26a0809bc8976afbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/456283c95dfc21a94a3f48e26a0809bc8976afbe", "html_url": "https://github.com/rust-lang/rust/commit/456283c95dfc21a94a3f48e26a0809bc8976afbe"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "4dd953a495d675a0499149dbfc3537a881dfb9d8", "filename": "config.toml.example", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a3f7c4db0373aa077f86cdd1bf11122845d3b65a/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/a3f7c4db0373aa077f86cdd1bf11122845d3b65a/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=a3f7c4db0373aa077f86cdd1bf11122845d3b65a", "patch": "@@ -609,7 +609,11 @@ changelog-seen = 2\n \n # Enable symbol-mangling-version v0. This can be helpful when profiling rustc,\n # as generics will be preserved in symbols (rather than erased into opaque T).\n-#new-symbol-mangling = false\n+# When no setting is given, the new scheme will be used when compiling the\n+# compiler and its tools and the legacy scheme will be used when compiling the\n+# standard library.\n+# If an explicit setting is given, it will be used for all parts of the codebase.\n+#new-symbol-mangling = true|false (see comment)\n \n # =============================================================================\n # Options for specific targets"}, {"sha": "d5656f0f37e0389f336276d4942016847e60bc3a", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a3f7c4db0373aa077f86cdd1bf11122845d3b65a/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3f7c4db0373aa077f86cdd1bf11122845d3b65a/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=a3f7c4db0373aa077f86cdd1bf11122845d3b65a", "patch": "@@ -972,8 +972,26 @@ impl<'a> Builder<'a> {\n             }\n         }\n \n-        if self.config.rust_new_symbol_mangling {\n+        let use_new_symbol_mangling = match self.config.rust_new_symbol_mangling {\n+            Some(setting) => {\n+                // If an explicit setting is given, use that\n+                setting\n+            }\n+            None => {\n+                if mode == Mode::Std {\n+                    // The standard library defaults to the legacy scheme\n+                    false\n+                } else {\n+                    // The compiler and tools default to the new scheme\n+                    true\n+                }\n+            }\n+        };\n+\n+        if use_new_symbol_mangling {\n             rustflags.arg(\"-Zsymbol-mangling-version=v0\");\n+        } else {\n+            rustflags.arg(\"-Zsymbol-mangling-version=legacy\");\n         }\n \n         // FIXME: It might be better to use the same value for both `RUSTFLAGS` and `RUSTDOCFLAGS`,"}, {"sha": "68e20f90b7fa4e3043193721d5f832d335c9b69a", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a3f7c4db0373aa077f86cdd1bf11122845d3b65a/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3f7c4db0373aa077f86cdd1bf11122845d3b65a/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=a3f7c4db0373aa077f86cdd1bf11122845d3b65a", "patch": "@@ -141,7 +141,7 @@ pub struct Config {\n     pub rust_verify_llvm_ir: bool,\n     pub rust_thin_lto_import_instr_limit: Option<u32>,\n     pub rust_remap_debuginfo: bool,\n-    pub rust_new_symbol_mangling: bool,\n+    pub rust_new_symbol_mangling: Option<bool>,\n     pub rust_profile_use: Option<String>,\n     pub rust_profile_generate: Option<String>,\n     pub llvm_profile_use: Option<String>,\n@@ -874,7 +874,7 @@ impl Config {\n             config.rust_run_dsymutil = rust.run_dsymutil.unwrap_or(false);\n             optimize = rust.optimize;\n             ignore_git = rust.ignore_git;\n-            set(&mut config.rust_new_symbol_mangling, rust.new_symbol_mangling);\n+            config.rust_new_symbol_mangling = rust.new_symbol_mangling;\n             set(&mut config.rust_optimize_tests, rust.optimize_tests);\n             set(&mut config.codegen_tests, rust.codegen_tests);\n             set(&mut config.rust_rpath, rust.rpath);"}]}