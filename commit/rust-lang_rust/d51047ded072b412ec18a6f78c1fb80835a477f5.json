{"sha": "d51047ded072b412ec18a6f78c1fb80835a477f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1MTA0N2RlZDA3MmI0MTJlYzE4YTZmNzhjMWZiODA4MzVhNDc3ZjU=", "commit": {"author": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2015-03-14T23:29:28Z"}, "committer": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2015-03-15T16:08:21Z"}, "message": "Strip all leading/trailing newlines", "tree": {"sha": "11375d93af72aa30a59d518356569d64d65484af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11375d93af72aa30a59d518356569d64d65484af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d51047ded072b412ec18a6f78c1fb80835a477f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d51047ded072b412ec18a6f78c1fb80835a477f5", "html_url": "https://github.com/rust-lang/rust/commit/d51047ded072b412ec18a6f78c1fb80835a477f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d51047ded072b412ec18a6f78c1fb80835a477f5/comments", "author": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95018eec69679681acdfae8608779c1e2674322d", "url": "https://api.github.com/repos/rust-lang/rust/commits/95018eec69679681acdfae8608779c1e2674322d", "html_url": "https://github.com/rust-lang/rust/commit/95018eec69679681acdfae8608779c1e2674322d"}], "stats": {"total": 418, "additions": 5, "deletions": 413}, "files": [{"sha": "e5866094ee84f7b181fc0de2f8c86d4210c5f881", "filename": "mk/cfg/x86_64-unknown-linux-gnu.mk", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/mk%2Fcfg%2Fx86_64-unknown-linux-gnu.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/mk%2Fcfg%2Fx86_64-unknown-linux-gnu.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Fx86_64-unknown-linux-gnu.mk?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -25,4 +25,3 @@ CFG_LDPATH_x86_64-unknown-linux-gnu :=\n CFG_RUN_x86_64-unknown-linux-gnu=$(2)\n CFG_RUN_TARG_x86_64-unknown-linux-gnu=$(call CFG_RUN_x86_64-unknown-linux-gnu,,$(2))\n CFG_GNU_TRIPLE_x86_64-unknown-linux-gnu := x86_64-unknown-linux-gnu\n-"}, {"sha": "4ded8a7916b9ba4d386d61f3d5198fffc5109063", "filename": "mk/prepare.mk", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/mk%2Fprepare.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/mk%2Fprepare.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fprepare.mk?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -221,5 +221,3 @@ prepare-maybe-clean-$(1):\n \n \n endef\n-\n-"}, {"sha": "b419c0bbe8ebe4e5f7169fe4d27ab068e6912bab", "filename": "mk/util.mk", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/mk%2Futil.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/mk%2Futil.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Futil.mk?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -17,4 +17,3 @@ else\n endif\n \n S := $(CFG_SRC_DIR)\n-"}, {"sha": "eae2bf1925a99622c2f8b8f2486270da30d96897", "filename": "src/doc/not_found.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Fdoc%2Fnot_found.md", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Fdoc%2Fnot_found.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnot_found.md?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -63,4 +63,3 @@ function populate_rust_search() {\n populate_site_search();\n populate_rust_search();\n </script>\n-"}, {"sha": "02ab5ec7d6b465c5b8350c227be29559fae6ec31", "filename": "src/doc/trpl/documentation.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Fdoc%2Ftrpl%2Fdocumentation.md", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Fdoc%2Ftrpl%2Fdocumentation.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fdocumentation.md?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -521,4 +521,3 @@ This sets a few different options, with a logo, favicon, and a root URL.\n - `--html-before-content FILE`: includes the contents of FILE directly after\n   `<body>`, before the rendered content (including the search bar).\n - `--html-after-content FILE`: includes the contents of FILE after all the rendered content.\n-"}, {"sha": "20b0ffc1b286200c751e294ad684787f3c6ad49e", "filename": "src/doc/trpl/ffi.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Fdoc%2Ftrpl%2Fffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Fdoc%2Ftrpl%2Fffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fffi.md?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -543,4 +543,3 @@ The `extern` makes this function adhere to the C calling convention, as\n discussed above in \"[Foreign Calling\n Conventions](ffi.html#foreign-calling-conventions)\". The `no_mangle`\n attribute turns off Rust's name mangling, so that it is easier to link to.\n-"}, {"sha": "86fa779cced5fe81f02fb8eb2f417a5c2209955a", "filename": "src/etc/featureck.py", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Fetc%2Ffeatureck.py", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Fetc%2Ffeatureck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ffeatureck.py?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -242,4 +242,3 @@\n for line in lines:\n     print \"* \" + line\n print\n-"}, {"sha": "4e489df7dd75a76412e4e417751845fbb7f41153", "filename": "src/etc/gdb_rust_pretty_printing.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Fetc%2Fgdb_rust_pretty_printing.py", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Fetc%2Fgdb_rust_pretty_printing.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_rust_pretty_printing.py?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -340,4 +340,4 @@ def extract_length_and_data_ptr_from_std_vec(vec_val):\n     unique_ptr_val = vec_ptr_val[first_field(vec_ptr_val)]\n     data_ptr = unique_ptr_val[first_field(unique_ptr_val)]\n     assert data_ptr.type.code == gdb.TYPE_CODE_PTR\n-    return (length, data_ptr)\n\\ No newline at end of file\n+    return (length, data_ptr)"}, {"sha": "e86f7fb58a4656330ebdfab5e75d72f86f5e9af9", "filename": "src/etc/third-party/COPYING.RUNTIME", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Fetc%2Fthird-party%2FCOPYING.RUNTIME", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Fetc%2Fthird-party%2FCOPYING.RUNTIME", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fthird-party%2FCOPYING.RUNTIME?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -70,4 +70,3 @@ consistent with the licensing of the Independent Modules.\n The availability of this Exception does not imply any general\n presumption that third-party software is unaffected by the copyleft\n requirements of the license of GCC.\n-"}, {"sha": "b0628303b6601e39e3092647649306783e7446f4", "filename": "src/grammar/check.sh", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Fgrammar%2Fcheck.sh", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Fgrammar%2Fcheck.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fcheck.sh?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -50,4 +50,3 @@ else\n     printf \"failed. $passed passed; $failed failed; $skipped skipped\\n\\n\"\n     exit 1\n fi\n-"}, {"sha": "d5e08d93f6c3063f4f7e3937fa0230edd9a5275d", "filename": "src/libbacktrace/configure", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibbacktrace%2Fconfigure", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fconfigure?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -15153,4 +15153,3 @@ if test -n \"$ac_unrecognized_opts\" && test \"$enable_option_checking\" != no; then\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts\" >&5\n $as_echo \"$as_me: WARNING: unrecognized options: $ac_unrecognized_opts\" >&2;}\n fi\n-"}, {"sha": "84f5be9249e7caae28e6c16faccaba9f84096f12", "filename": "src/libbacktrace/ltmain.sh", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibbacktrace%2Fltmain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibbacktrace%2Fltmain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fltmain.sh?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -8633,4 +8633,3 @@ build_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n # sh-indentation:2\n # End:\n # vi:sw=2\n-"}, {"sha": "910cf805f39985b9bc809a7ad0b2dcdb186bf753", "filename": "src/libcore/default.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibcore%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibcore%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fdefault.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -164,4 +164,3 @@ default_impl! { i64, 0 }\n \n default_impl! { f32, 0.0f32 }\n default_impl! { f64, 0.0f64 }\n-"}, {"sha": "19cd34cdb0933e71f0a9470d9d6dae718146d6f2", "filename": "src/libcore/finally.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibcore%2Ffinally.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibcore%2Ffinally.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffinally.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -107,4 +107,3 @@ impl<'a, A, F> Drop for Finallyalizer<'a, A, F> where F: FnMut(&mut A) {\n         (self.dtor)(self.mutate);\n     }\n }\n-"}, {"sha": "b3adef53dabeebc8a7a03ed478fb691dd7ed28d6", "filename": "src/libcore/num/float_macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibcore%2Fnum%2Ffloat_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibcore%2Fnum%2Ffloat_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Ffloat_macros.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -18,4 +18,3 @@ macro_rules! assert_approx_eq {\n                 \"{} is not approximately equal to {}\", *a, *b);\n     })\n }\n-"}, {"sha": "c99fb8c197d834bb7815910085b729cf2870777f", "filename": "src/libcoretest/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibcoretest%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibcoretest%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fintrinsics.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -28,4 +28,3 @@ fn test_typeid_unsized_types() {\n     assert_eq!(TypeId::of::<Y>(), TypeId::of::<Y>());\n     assert!(TypeId::of::<X>() != TypeId::of::<Y>());\n }\n-"}, {"sha": "80eb1601035a89c20faa3357541a3cd412d5947c", "filename": "src/liblog/macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Fliblog%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Fliblog%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblog%2Fmacros.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -197,4 +197,3 @@ macro_rules! log_enabled {\n         ::log::mod_enabled(lvl, module_path!())\n     })\n }\n-"}, {"sha": "70303bb3410b71cbdbc61c19d4a76cd8eeb8e38b", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -132,4 +132,3 @@ register_diagnostics! {\n }\n \n __build_diagnostic_array! { DIAGNOSTICS }\n-"}, {"sha": "d1a946d933f142fae19c0b351a437475f4c3b564", "filename": "src/librustc/metadata/tydecode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftydecode.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -963,4 +963,3 @@ fn parse_region_bounds_<'a, 'tcx, F>(st: &mut PState<'a, 'tcx>, conv: &mut F)\n         }\n     }\n }\n-"}, {"sha": "ac6524dad805792385953260aac1d9c850ed84ec", "filename": "src/librustc/middle/cfg/graphviz.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc%2Fmiddle%2Fcfg%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc%2Fmiddle%2Fcfg%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcfg%2Fgraphviz.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -124,4 +124,3 @@ impl<'a, 'ast> dot::GraphWalk<'a, Node<'a>, Edge<'a>> for LabelledCFG<'a, 'ast>\n     fn source(&'a self, edge: &Edge<'a>) -> Node<'a> { self.cfg.source(edge) }\n     fn target(&'a self, edge: &Edge<'a>) -> Node<'a> { self.cfg.target(edge) }\n }\n-"}, {"sha": "f9bdc5dc313f4af4ca8a6f99ebf5fbf45d91c653", "filename": "src/librustc/middle/fast_reject.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc%2Fmiddle%2Ffast_reject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc%2Fmiddle%2Ffast_reject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ffast_reject.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -96,4 +96,3 @@ pub fn simplify_type(tcx: &ty::ctxt,\n         ty::ty_infer(_) | ty::ty_err => None,\n     }\n }\n-"}, {"sha": "b9025d01068cc9fc76c2cb7eeb011ad5ea807cc6", "filename": "src/librustc/middle/infer/resolve.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc%2Fmiddle%2Finfer%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc%2Fmiddle%2Finfer%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fresolve.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -112,4 +112,3 @@ impl<'a, 'tcx> ty_fold::TypeFolder<'tcx> for FullTypeResolver<'a, 'tcx> {\n         }\n     }\n }\n-"}, {"sha": "a92c960cd3aa14906aa01729c2e9babf29f013d5", "filename": "src/librustc/middle/infer/sub.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc%2Fmiddle%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc%2Fmiddle%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fsub.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -153,4 +153,3 @@ impl<'f, 'tcx> Combine<'tcx> for Sub<'f, 'tcx> {\n         self.higher_ranked_sub(a, b)\n     }\n }\n-"}, {"sha": "a57ea3759de9b3bb2967be9670ab164b3f2ed0c7", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1635,4 +1635,3 @@ impl<'tcx> UserString<'tcx> for Upvar {\n         format!(\"captured outer variable in an `{}` closure\", kind)\n     }\n }\n-"}, {"sha": "88b721ce958622c7b345dbe53c7c88b9e1b389b4", "filename": "src/librustc/middle/traits/util.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc%2Fmiddle%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc%2Fmiddle%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Futil.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -568,5 +568,3 @@ impl<'tcx> fmt::Debug for super::MismatchedProjectionTypes<'tcx> {\n         write!(f, \"MismatchedProjectionTypes(..)\")\n     }\n }\n-\n-"}, {"sha": "aec8ac38a5ad3a48fc94aff7b690e14c32576621", "filename": "src/librustc_back/archive.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_back%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_back%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Farchive.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -324,4 +324,3 @@ impl<'a> ArchiveBuilder<'a> {\n         Ok(())\n     }\n }\n-"}, {"sha": "a56621ff97ea541cba2cd0e500a2ce471d4ef5d1", "filename": "src/librustc_back/target/dragonfly_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -32,4 +32,3 @@ pub fn opts() -> TargetOptions {\n         .. Default::default()\n     }\n }\n-"}, {"sha": "dcf1a12f2c9ad762dd6f1b84cc0227e473d88c9b", "filename": "src/librustc_back/target/freebsd_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -27,4 +27,3 @@ pub fn opts() -> TargetOptions {\n         .. Default::default()\n     }\n }\n-"}, {"sha": "0f2ab32be2431e059a37eeec09adb539ba7bbcef", "filename": "src/librustc_back/target/openbsd_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -30,4 +30,3 @@ pub fn opts() -> TargetOptions {\n         .. Default::default()\n     }\n }\n-"}, {"sha": "fa2c54528ae8b5580776dee186beb141b0406b8c", "filename": "src/librustc_trans/back/lto.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_trans%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_trans%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flto.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -213,4 +213,3 @@ fn read_from_le_bytes<T: Int>(bytes: &[u8], position_in_bytes: uint) -> T {\n \n     Int::from_le(data)\n }\n-"}, {"sha": "c1bc7219ad8253942eb826dcdbbc22aa739ac9b4", "filename": "src/librustc_trans/trans/closure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_trans%2Ftrans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_trans%2Ftrans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fclosure.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -259,4 +259,3 @@ pub fn trans_closure_expr<'a, 'tcx>(dest: Dest<'a, 'tcx>,\n \n     Some(bcx)\n }\n-"}, {"sha": "6dd566797970e5aa820675ee245706d293a424b7", "filename": "src/librustc_trans/trans/llrepr.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_trans%2Ftrans%2Fllrepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_trans%2Ftrans%2Fllrepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fllrepr.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -34,5 +34,3 @@ impl LlvmRepr for ValueRef {\n         ccx.tn().val_to_string(*self)\n     }\n }\n-\n-"}, {"sha": "32f91a175f3c3eed8d9eb73355aea543127124a8", "filename": "src/librustc_typeck/check/closure.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -248,5 +248,3 @@ fn self_type_matches_expected_vid<'a,'tcx>(\n         _ => None,\n     }\n }\n-\n-"}, {"sha": "17fc2aad286ea35f5d59441d4f3f1712e30584af", "filename": "src/librustc_typeck/check/upvar.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -556,5 +556,3 @@ impl<'a,'tcx> euv::Delegate<'tcx> for AdjustBorrowKind<'a,'tcx> {\n         self.adjust_upvar_borrow_kind_for_mut(assignee_cmt);\n     }\n }\n-\n-"}, {"sha": "963be9aa2e2d2b0cb77e2320f19796e5ebdb2c1e", "filename": "src/librustc_typeck/check/vtable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -302,4 +302,3 @@ pub fn select_new_fcx_obligations(fcx: &FnCtxt) {\n         Err(errors) => { report_fulfillment_errors(fcx.infcx(), &errors); }\n     }\n }\n-"}, {"sha": "396d060de9e9017d40282758553a4f84ca6a0f9e", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -181,4 +181,3 @@ register_diagnostics! {\n }\n \n __build_diagnostic_array! { DIAGNOSTICS }\n-"}, {"sha": "ac1ff29e7f5455407c9eecd35e1dc4c46c2cc493", "filename": "src/librustc_typeck/variance.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_typeck%2Fvariance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustc_typeck%2Fvariance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1350,4 +1350,3 @@ fn glb(v1: ty::Variance, v2: ty::Variance) -> ty::Variance {\n         (x, ty::Bivariant) | (ty::Bivariant, x) => x,\n     }\n }\n-"}, {"sha": "d2385702a73d2c2c35fc85453890a3c56f7be2c5", "filename": "src/librustdoc/html/item_type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustdoc%2Fhtml%2Fitem_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustdoc%2Fhtml%2Fitem_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fitem_type.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -111,4 +111,3 @@ impl fmt::Display for ItemType {\n         self.to_static_str().fmt(f)\n     }\n }\n-"}, {"sha": "06b3c4e42d6334c3f7e962dd6aa12de0c1ff1198", "filename": "src/librustdoc/html/static/playpen.js", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fplaypen.js", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fplaypen.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fplaypen.js?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -25,4 +25,3 @@\n         });\n     }\n }());\n-"}, {"sha": "df703b3e43e32768e40a2ba60fc961b96b8aa4c5", "filename": "src/libstd/bool.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibstd%2Fbool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Flibstd%2Fbool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbool.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -12,4 +12,3 @@\n \n #![doc(primitive = \"bool\")]\n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n-"}, {"sha": "7de08af314a5adc14b986990b838166382feef44", "filename": "src/rt/msvc/typeof.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Frt%2Fmsvc%2Ftypeof.h", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Frt%2Fmsvc%2Ftypeof.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fmsvc%2Ftypeof.h?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -94,4 +94,3 @@ namespace msvc_typeof_impl {\n #endif\n \n #endif\n-"}, {"sha": "ee72707d3194e52584d8cb7f0df5fe971a95899f", "filename": "src/rt/valgrind/memcheck.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Frt%2Fvalgrind%2Fmemcheck.h", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Frt%2Fvalgrind%2Fmemcheck.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fvalgrind%2Fmemcheck.h?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n /*\n    ----------------------------------------------------------------\n \n@@ -284,4 +283,3 @@ typedef\n                                     (zznbytes), 0, 0 )\n \n #endif\n-"}, {"sha": "28eae023d684b6186682116279b3965266e74323", "filename": "src/test/auxiliary/changing-crates-a2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fchanging-crates-a2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fchanging-crates-a2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fchanging-crates-a2.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -11,4 +11,3 @@\n #![crate_name = \"a\"]\n \n pub fn foo<T>() { println!(\"hello!\"); }\n-"}, {"sha": "93d8fd3da88fb0a04fae16938dfdc12533b6aaf3", "filename": "src/test/auxiliary/coherence-orphan-lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fcoherence-orphan-lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fcoherence-orphan-lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcoherence-orphan-lib.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -11,4 +11,3 @@\n pub trait TheTrait<T> : ::std::marker::PhantomFn<T> {\n     fn the_fn(&self);\n }\n-"}, {"sha": "fe852e5d8eaee4c95df68851587fde0643bb912e", "filename": "src/test/auxiliary/default_type_params_xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fdefault_type_params_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fdefault_type_params_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fdefault_type_params_xc.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -13,4 +13,3 @@ pub struct Heap;\n pub struct FakeHeap;\n \n pub struct FakeVec<T, A = FakeHeap> { pub f: Option<(T,A)> }\n-"}, {"sha": "b231efa0fece4c3a6f82bcc029349254e5743079", "filename": "src/test/auxiliary/iss.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fiss.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fiss.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fiss.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -20,4 +20,3 @@ fn no_op() { }\n pub const D : C<fn()> = C {\n     k: no_op as fn()\n };\n-"}, {"sha": "cf1953005ba44c241cecd2af2db5dbc0f0480971", "filename": "src/test/auxiliary/issue-12133-dylib2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue-12133-dylib2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue-12133-dylib2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-12133-dylib2.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -14,4 +14,3 @@\n \n extern crate \"issue-12133-rlib\" as a;\n extern crate \"issue-12133-dylib\" as b;\n-"}, {"sha": "f1f16af6f0e3f5adea1260ff025c0b696df66382", "filename": "src/test/auxiliary/issue-13560-3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue-13560-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue-13560-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-13560-3.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -14,4 +14,3 @@\n \n #[macro_use] #[no_link] extern crate \"issue-13560-1\" as t1;\n #[macro_use] extern crate \"issue-13560-2\" as t2;\n-"}, {"sha": "b3b04b4a5ac13534824b834bff6100ab2d5c2193", "filename": "src/test/auxiliary/issue-16725.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue-16725.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue-16725.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-16725.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -11,4 +11,3 @@\n extern {\n     fn bar();\n }\n-"}, {"sha": "2ffdddcc798ca8b28e94c686be7694a3e9986b43", "filename": "src/test/auxiliary/issue-5521.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue-5521.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue-5521.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-5521.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -12,4 +12,3 @@\n use std::collections::HashMap;\n \n pub type map = Box<HashMap<uint, uint>>;\n-"}, {"sha": "c2acc514346150c8208fcb316731e009316ea146", "filename": "src/test/auxiliary/issue13213aux.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue13213aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue13213aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue13213aux.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -27,4 +27,3 @@ mod private {\n }\n \n pub static A: S = S { p: private::THREE };\n-"}, {"sha": "c118f7e4854fa762ed5962045da93f2dcfb1d7a7", "filename": "src/test/auxiliary/issue_3907.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue_3907.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue_3907.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_3907.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -13,4 +13,3 @@ use std::marker::MarkerTrait;\n pub trait Foo : MarkerTrait {\n     fn bar();\n }\n-"}, {"sha": "e12af579c571d7c481b8b16c0916432d071c2fcd", "filename": "src/test/auxiliary/issue_5844_aux.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue_5844_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue_5844_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_5844_aux.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -13,4 +13,3 @@ extern crate libc;\n extern \"C\" {\n     pub fn rand() -> libc::c_int;\n }\n-"}, {"sha": "04b56442d0b8fc7c3d094bd2973460eb7573e75c", "filename": "src/test/auxiliary/issue_8401.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue_8401.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue_8401.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_8401.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -24,4 +24,3 @@ fn foo<T>(t: &T) {\n     let b = B;\n     bar(unsafe { mem::transmute(&b as &A) }, t)\n }\n-"}, {"sha": "8c2546e76cfd4675eda28c4f2988955d3da15586", "filename": "src/test/auxiliary/issue_9123.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue_9123.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue_9123.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_9123.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -17,4 +17,3 @@ pub trait X {\n     }\n     fn dummy(&self) { }\n }\n-"}, {"sha": "d17e4afb5e8acb48e82ae930fd87afdd517fd81b", "filename": "src/test/auxiliary/issue_9188.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue_9188.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fissue_9188.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_9188.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -21,4 +21,3 @@ pub fn foo<T>() -> &'static int {\n pub fn bar() -> &'static int {\n     foo::<int>()\n }\n-"}, {"sha": "82f182c04bd3899f716a96867e3a5da393c1dba3", "filename": "src/test/auxiliary/kinds_in_metadata.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fkinds_in_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fkinds_in_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fkinds_in_metadata.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -16,4 +16,3 @@\n #![crate_type=\"lib\"]\n \n pub fn f<T:Copy>() {}\n-"}, {"sha": "c5d4182eae6533d44a3f549b9274f384f044edd9", "filename": "src/test/auxiliary/lang-item-public.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Flang-item-public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Flang-item-public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flang-item-public.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -32,5 +32,3 @@ extern fn eh_personality() {}\n pub trait Copy : PhantomFn<Self> {\n     // Empty.\n }\n-\n-"}, {"sha": "3c0138a7077178c724cde33340d6122cdf22c065", "filename": "src/test/auxiliary/namespaced_enums.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fnamespaced_enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fnamespaced_enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fnamespaced_enums.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -18,4 +18,3 @@ impl Foo {\n     pub fn foo() {}\n     pub fn bar(&self) {}\n }\n-"}, {"sha": "420151c471ea636a067c210738a8eeb4f690fc86", "filename": "src/test/auxiliary/plugin_crate_outlive_expansion_phase.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fplugin_crate_outlive_expansion_phase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fplugin_crate_outlive_expansion_phase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fplugin_crate_outlive_expansion_phase.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -32,4 +32,3 @@ pub fn registrar(_: &mut Registry) {\n     thread_local!(static FOO: RefCell<Option<Box<Any+Send>>> = RefCell::new(None));\n     FOO.with(|s| *s.borrow_mut() = Some(box Foo { foo: 10 } as Box<Any+Send>));\n }\n-"}, {"sha": "8d9b304aa51e0c783979b78fa57401688a4b1034", "filename": "src/test/auxiliary/struct_variant_privacy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fstruct_variant_privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fstruct_variant_privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fstruct_variant_privacy.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -11,4 +11,3 @@\n enum Bar {\n     Baz { a: int }\n }\n-"}, {"sha": "beee83f9f7cd5eaa445a33ffda6cb5cc7b209d20", "filename": "src/test/auxiliary/trait_bounds_on_structs_and_enums_xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Ftrait_bounds_on_structs_and_enums_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Ftrait_bounds_on_structs_and_enums_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftrait_bounds_on_structs_and_enums_xc.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -21,4 +21,3 @@ pub enum Bar<T:Trait> {\n     BBar(T),\n     CBar(uint),\n }\n-"}, {"sha": "85f49b4bb7fad0a1e744cd48fa10f45e91a91481", "filename": "src/test/auxiliary/weak-lang-items.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fweak-lang-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fweak-lang-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fweak-lang-items.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -34,4 +34,3 @@ pub fn foo() {\n mod std {\n     pub use core::{option, fmt};\n }\n-"}, {"sha": "4549bd719c65e15618646725a20e17df4ef108fe", "filename": "src/test/auxiliary/where_clauses_xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fwhere_clauses_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fwhere_clauses_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fwhere_clauses_xc.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -27,4 +27,3 @@ impl<T> Equal for T where T: Eq {\n pub fn equal<T>(x: &T, y: &T) -> bool where T: Eq {\n     x == y\n }\n-"}, {"sha": "5556ee6971c4a6728de4f17998ade8e033ebf0ca", "filename": "src/test/auxiliary/xcrate_struct_aliases.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fxcrate_struct_aliases.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fxcrate_struct_aliases.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fxcrate_struct_aliases.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -14,4 +14,3 @@ pub struct S {\n }\n \n pub type S2 = S;\n-"}, {"sha": "538abf00a67037a99c8db482d2924e7eeb377e3e", "filename": "src/test/auxiliary/xcrate_unit_struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fxcrate_unit_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fauxiliary%2Fxcrate_unit_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fxcrate_unit_struct.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -36,4 +36,3 @@ pub enum EnumWithVariants {\n     EnumVariant,\n     EnumVariantArg(int)\n }\n-"}, {"sha": "915cb077787ea41c05330ce1185ce497633afac0", "filename": "src/test/compile-fail/associated-types-coherence-failure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fassociated-types-coherence-failure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fassociated-types-coherence-failure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-types-coherence-failure.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -57,4 +57,3 @@ pub trait ToOwned {\n \n \n fn main() {}\n-"}, {"sha": "5c36e3356a5c026c8d3175fc64d567eae3355179", "filename": "src/test/compile-fail/associated-types-issue-17359.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fassociated-types-issue-17359.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fassociated-types-issue-17359.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-types-issue-17359.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -18,4 +18,3 @@ trait Trait : ::std::marker::MarkerTrait {\n impl Trait for isize {}  //~ ERROR missing: `Type`\n \n fn main() {}\n-"}, {"sha": "6425908672d12d3ee74a6d3dbffca2ab17870b6d", "filename": "src/test/compile-fail/bad-crate-id2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fbad-crate-id2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fbad-crate-id2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-crate-id2.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -11,4 +11,3 @@\n extern crate \"#a\" as bar; //~ ERROR: invalid character `#` in crate name: `#a`\n \n fn main() {}\n-"}, {"sha": "c980e77df6f967c38a7f858e586bab4c857a44db", "filename": "src/test/compile-fail/borrowck-box-insensitivity.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-box-insensitivity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-box-insensitivity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-box-insensitivity.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -152,4 +152,3 @@ fn main() {\n     borrow_after_mut_borrow_nested();\n     mut_borrow_after_borrow_nested();\n }\n-"}, {"sha": "247a4fe89a501b4e2cfd189638ffcad9fd1c13b5", "filename": "src/test/compile-fail/borrowck-closures-unique-imm.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-closures-unique-imm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-closures-unique-imm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-closures-unique-imm.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -22,4 +22,3 @@ pub fn main() {\n     };\n     r()\n }\n-"}, {"sha": "13fd5fce95569590f09886fb4a1d2e69b0ad6e78", "filename": "src/test/compile-fail/borrowck-field-sensitivity.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-field-sensitivity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-field-sensitivity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-field-sensitivity.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -124,4 +124,3 @@ fn main() {\n     borrow_after_field_assign_after_uninit();\n     move_after_field_assign_after_uninit();\n }\n-"}, {"sha": "31ec5aea7f3a6e9912d91bbcd13224f69d1884d0", "filename": "src/test/compile-fail/borrowck-for-loop-correct-cmt-for-pattern.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-for-loop-correct-cmt-for-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-for-loop-correct-cmt-for-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-for-loop-correct-cmt-for-pattern.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -32,4 +32,3 @@ fn main() {\n     for &a in x.iter() {    //~ ERROR cannot move out\n     }\n }\n-"}, {"sha": "b79fc5b2bf622eb8fa252628374a8ff0cb6e48a5", "filename": "src/test/compile-fail/borrowck-for-loop-head-linkage.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-for-loop-head-linkage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-for-loop-head-linkage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-for-loop-head-linkage.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -18,4 +18,3 @@ fn main() {\n         vector[1] = 5;   //~ ERROR cannot borrow\n     }\n }\n-"}, {"sha": "8278b4fb971c300520ffde6534473ab6227b2a06", "filename": "src/test/compile-fail/borrowck-issue-14498.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-issue-14498.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-issue-14498.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-issue-14498.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -62,4 +62,3 @@ fn main() {\n     borrow_in_field_from_var();\n     borrow_in_field_from_field();\n }\n-"}, {"sha": "d760f3db0c2cc9b85370bc03f11365d3d78c778b", "filename": "src/test/compile-fail/borrowck-let-suggestion.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-let-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-let-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-let-suggestion.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -17,4 +17,3 @@ fn f() {\n fn main() {\n     f();\n }\n-"}, {"sha": "042b914ce41a49d0fccca3b5272d7fa8825a6c0f", "filename": "src/test/compile-fail/borrowck-multiple-captures.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-multiple-captures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-multiple-captures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-multiple-captures.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -63,4 +63,3 @@ fn main() {\n     same_var_after_borrow();\n     same_var_after_move();\n }\n-"}, {"sha": "e35edca639e4535f18ff2e0fc4a3f69243507624", "filename": "src/test/compile-fail/borrowck-mutate-in-guard.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-mutate-in-guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-mutate-in-guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-mutate-in-guard.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -30,4 +30,3 @@ fn foo() -> isize {\n fn main() {\n     foo();\n }\n-"}, {"sha": "021b3f38e0019d9d57441d93c24b89d011c6582d", "filename": "src/test/compile-fail/borrowck-object-lifetime.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-object-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-object-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-object-lifetime.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -37,4 +37,3 @@ fn imm_owned_receiver(mut x: Box<Foo>) {\n }\n \n fn main() {}\n-"}, {"sha": "1bdc32b09750bd8162e6bbd1bf8af762b9b7c4c9", "filename": "src/test/compile-fail/borrowck-object-mutability.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-object-mutability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-object-mutability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-object-mutability.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -35,4 +35,3 @@ fn mut_owned_receiver(mut x: Box<Foo>) {\n }\n \n fn main() {}\n-"}, {"sha": "673c025e86345098b695e0d832673a7777d315ac", "filename": "src/test/compile-fail/borrowck-overloaded-call.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-overloaded-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-overloaded-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-overloaded-call.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -77,4 +77,3 @@ fn h() {\n }\n \n fn main() {}\n-"}, {"sha": "430f2fcc13a73c0a075cd0ae286739c9bbcb54ea", "filename": "src/test/compile-fail/borrowck-overloaded-index-and-overloaded-deref.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-overloaded-index-and-overloaded-deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-overloaded-index-and-overloaded-deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-overloaded-index-and-overloaded-deref.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -44,4 +44,3 @@ fn main() {\n }\n \n fn read(_: usize) { }\n-"}, {"sha": "c9cdeff9c7a17afa830f39a69cba68ed838abfc7", "filename": "src/test/compile-fail/borrowck-partial-reinit-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-partial-reinit-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-partial-reinit-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-partial-reinit-2.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -31,4 +31,3 @@ fn main() {\n     stuff();\n     println!(\"Hello, world!\")\n }\n-"}, {"sha": "3eca850e493c7231687dddfe6ad84c54235dd696", "filename": "src/test/compile-fail/borrowck-unboxed-closures.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-unboxed-closures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-unboxed-closures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-unboxed-closures.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -26,4 +26,3 @@ fn c<F:FnOnce(isize, isize) -> isize>(f: F) {\n }\n \n fn main() {}\n-"}, {"sha": "e14df7329eac4129b76636606fee3be7551ce709", "filename": "src/test/compile-fail/borrowck-use-mut-borrow.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-use-mut-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fborrowck-use-mut-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-use-mut-borrow.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -94,4 +94,3 @@ fn main() {\n     field_deref_after_var_borrow();\n     field_deref_after_field_borrow();\n }\n-"}, {"sha": "490734d463da4ceb43eb37cde1f4fd966949d4fd", "filename": "src/test/compile-fail/closure-reform-bad.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fclosure-reform-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fclosure-reform-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-reform-bad.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -20,4 +20,3 @@ fn main() {\n     let f = |s: &str| println!(\"{}{}\", s, string);\n     call_bare(f)    //~ ERROR mismatched types\n }\n-"}, {"sha": "d60fb1d5d19669651b8ab45804a84efcd1196f56", "filename": "src/test/compile-fail/cross-borrow-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fcross-borrow-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fcross-borrow-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcross-borrow-trait.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -24,4 +24,3 @@ pub fn main() {\n                         //~| expected &-ptr\n                         //~| found box\n }\n-"}, {"sha": "903365fb909f5d7de2741785336c79a3ed2acd40", "filename": "src/test/compile-fail/drop-with-active-borrows-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fdrop-with-active-borrows-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fdrop-with-active-borrows-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdrop-with-active-borrows-1.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -16,4 +16,3 @@ fn main() {\n         println!(\"{}\", *s);\n     }\n }\n-"}, {"sha": "7586bc61cd6d4e64e896c711a005a85ae8ad2a8d", "filename": "src/test/compile-fail/duplicate-parameter.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fduplicate-parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fduplicate-parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fduplicate-parameter.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -13,4 +13,3 @@ fn f(a: isize, a: isize) {}\n \n fn main() {\n }\n-"}, {"sha": "42b67337c64e58bccdbfdfc2890937a5b2532835", "filename": "src/test/compile-fail/duplicate-type-parameter.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fduplicate-type-parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fduplicate-type-parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fduplicate-type-parameter.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -36,4 +36,3 @@ impl<T,T> Qux<T,T> for Option<T> {}\n \n fn main() {\n }\n-"}, {"sha": "922e58698dd754e273fcec3315230b7c21ac29e1", "filename": "src/test/compile-fail/explicit-self-lifetime-mismatch.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fexplicit-self-lifetime-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fexplicit-self-lifetime-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fexplicit-self-lifetime-mismatch.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -26,4 +26,3 @@ impl<'a,'b> Foo<'a,'b> {\n }\n \n fn main() {}\n-"}, {"sha": "2553bdcbb273ef48cb3c5e33ff053cf2722a550d", "filename": "src/test/compile-fail/extern-with-type-bounds.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fextern-with-type-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fextern-with-type-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fextern-with-type-bounds.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -28,4 +28,3 @@ extern \"rust-intrinsic\" {\n }\n \n fn main() {}\n-"}, {"sha": "a4524ccd9db08108f1e16dd397b5dac21fe34501", "filename": "src/test/compile-fail/feature-gate-advanced-slice-features.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ffeature-gate-advanced-slice-features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ffeature-gate-advanced-slice-features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-advanced-slice-features.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -16,4 +16,3 @@ fn main() {\n         [ 1, 2, xs.. ] => {}    // OK without feature gate\n     }\n }\n-"}, {"sha": "8f8b035f4a96b82b16ee2dd136df4005076f2637", "filename": "src/test/compile-fail/feature-gate-box-expr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-expr.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -20,4 +20,3 @@ fn main() {\n     let x = box (HEAP) 'c'; //~ ERROR box expression syntax is experimental\n     println!(\"x: {}\", x);\n }\n-"}, {"sha": "7a0924d8adf1ba8fce115cfc36bbfb917e25f826", "filename": "src/test/compile-fail/feature-gate-start.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ffeature-gate-start.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ffeature-gate-start.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-start.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -10,4 +10,3 @@\n \n #[start]\n fn foo() {} //~ ERROR: a #[start] function is an experimental feature\n-"}, {"sha": "4163d531e870e9003046e676de9a7d6ea5898c89", "filename": "src/test/compile-fail/generic-no-mangle.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fgeneric-no-mangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fgeneric-no-mangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgeneric-no-mangle.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -15,4 +15,3 @@ fn foo<T>() {} //~ ERROR generic functions must be mangled\n \n #[no_mangle]\n extern fn foo<T>() {} //~ ERROR generic functions must be mangled\n-"}, {"sha": "3ca00fcb66ac16e1a51dbc48fa99feb96fa6a21d", "filename": "src/test/compile-fail/indexing-requires-a-uint.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Findexing-requires-a-uint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Findexing-requires-a-uint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Findexing-requires-a-uint.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -23,4 +23,3 @@ fn main() {\n     bar::<isize>(i);  // i should not be re-coerced back to an isize\n     //~^ ERROR: mismatched types\n }\n-"}, {"sha": "14d22702db7a45d873bd41f8cb3c702d366f8813", "filename": "src/test/compile-fail/infinite-macro-expansion.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Finfinite-macro-expansion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Finfinite-macro-expansion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finfinite-macro-expansion.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -15,4 +15,3 @@ macro_rules! recursive {\n fn main() {\n     recursive!()\n }\n-"}, {"sha": "b83f0f73436cffe488e9f358ed532eec95f091e0", "filename": "src/test/compile-fail/intrinsic-return-address.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fintrinsic-return-address.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fintrinsic-return-address.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fintrinsic-return-address.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -27,5 +27,3 @@ unsafe fn g() -> isize {\n }\n \n fn main() {}\n-\n-"}, {"sha": "3b0ea55cfa9c1550ae8927240c6b06098380dbb4", "filename": "src/test/compile-fail/issue-10536.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-10536.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-10536.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-10536.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -29,4 +29,3 @@ pub fn main() {\n     // least throw a conventional error.\n     assert!({one! two});\n }\n-"}, {"sha": "7d8a1528aba36973a5cc86d395b82a716d36772c", "filename": "src/test/compile-fail/issue-11192.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-11192.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-11192.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-11192.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -30,4 +30,3 @@ fn main() {\n     test(&*ptr);\n     //~^ ERROR: cannot borrow `*ptr` as immutable\n }\n-"}, {"sha": "2749438433d16fd150e063a693c7a5cb408e3a48", "filename": "src/test/compile-fail/issue-11593.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-11593.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-11593.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-11593.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -18,4 +18,3 @@ impl private_trait_xc::Foo for Bar {}\n //~^ ERROR: trait `Foo` is private\n \n fn main() {}\n-"}, {"sha": "a6dbe954ec0aca714e14c2c5b4891fe0d824ad70", "filename": "src/test/compile-fail/issue-11844.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-11844.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-11844.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-11844.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -18,4 +18,3 @@ fn main() {\n         None => panic!()\n     }\n }\n-"}, {"sha": "f0f4bf5ca71bb611031a86f871bdf974ce923717", "filename": "src/test/compile-fail/issue-12041.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-12041.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-12041.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12041.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -21,4 +21,3 @@ fn main() {\n         }\n     });\n }\n-"}, {"sha": "41cd38630013891204a37132626df3a426ed795e", "filename": "src/test/compile-fail/issue-12612.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-12612.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-12612.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12612.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -20,4 +20,3 @@ mod test {\n }\n \n fn main() {}\n-"}, {"sha": "53d1486288984477a2afe57140c08c1459a7a5bf", "filename": "src/test/compile-fail/issue-13446.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-13446.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-13446.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-13446.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -16,4 +16,3 @@\n static VEC: [u32; 256] = vec!();\n \n fn main() {}\n-"}, {"sha": "c87dcb8ae79b21119b3b01b4ccd13b1afa1d4949", "filename": "src/test/compile-fail/issue-14092.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-14092.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-14092.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-14092.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -11,4 +11,3 @@\n fn fn1(0: Box) {} //~ ERROR: wrong number of type arguments: expected 1, found 0\n \n fn main() {}\n-"}, {"sha": "4954c95fcd1f2ec307c4e997102ad1966024cc2c", "filename": "src/test/compile-fail/issue-16149.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-16149.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-16149.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16149.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -19,4 +19,3 @@ fn main() {\n         _ => false\n     };\n }\n-"}, {"sha": "ba369734daa47abd55b3b4444353e9eaa793dc96", "filename": "src/test/compile-fail/issue-16338.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-16338.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-16338.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16338.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -18,4 +18,3 @@ fn main() {\n     //~| expected &-ptr\n     //~| found struct `core::raw::Slice`\n }\n-"}, {"sha": "67fcd820429ce5d6f309f525de8dc200f7f10501", "filename": "src/test/compile-fail/issue-16725.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-16725.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-16725.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16725.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -16,4 +16,3 @@ fn main() {\n     unsafe { foo::bar(); }\n     //~^ ERROR: function `bar` is private\n }\n-"}, {"sha": "6ee869d65a8f20f2078550262a1d73f25d8b4ace", "filename": "src/test/compile-fail/issue-17718-const-bad-values.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-17718-const-bad-values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-17718-const-bad-values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17718-const-bad-values.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -17,4 +17,3 @@ const C2: &'static mut usize = &mut S;\n //~^^ ERROR: references in constants may only refer to immutable values\n \n fn main() {}\n-"}, {"sha": "c744dff0c04d46231f9b5385f317e061c87aa73e", "filename": "src/test/compile-fail/issue-3008-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-3008-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-3008-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3008-2.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -15,4 +15,3 @@ struct bar { x: bar }\n \n fn main() {\n }\n-"}, {"sha": "a3d90a00d038ec14a4d2e218e20b167ddc8b88df", "filename": "src/test/compile-fail/issue-3907.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-3907.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-3907.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3907.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -28,4 +28,3 @@ fn main() {\n     };\n     s.bar();\n }\n-"}, {"sha": "02e5b9b092197f94b08fe0a7452081a22002fe78", "filename": "src/test/compile-fail/issue-5844.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-5844.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-5844.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5844.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -15,4 +15,3 @@ extern crate issue_5844_aux;\n fn main () {\n     issue_5844_aux::rand(); //~ ERROR: requires unsafe\n }\n-"}, {"sha": "40c3d96bc9a119fb9eaf2bc3b5a5790df8d87d89", "filename": "src/test/compile-fail/issue-7607-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-7607-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-7607-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7607-1.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -17,4 +17,3 @@ impl Fo { //~ ERROR use of undeclared type name `Fo`\n }\n \n fn main() {}\n-"}, {"sha": "9abd8c9e3fcda2acfa5c6b16255dcff546913d20", "filename": "src/test/compile-fail/issue-8767.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-8767.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fissue-8767.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-8767.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -15,4 +15,3 @@ impl B { //~ ERROR use of undeclared type name `B`\n \n fn main() {\n }\n-"}, {"sha": "d5bfe3d16925c70b1b76a3ac8390c3a18fef64a4", "filename": "src/test/compile-fail/kindck-copy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fkindck-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fkindck-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-copy.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -80,4 +80,3 @@ fn test<'a,T,U:Copy>(_: &'a isize) {\n \n pub fn main() {\n }\n-"}, {"sha": "bf2a209c4c48ed01a16223d5f0eaa474fef7a4eb", "filename": "src/test/compile-fail/kindck-nonsendable-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fkindck-nonsendable-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fkindck-nonsendable-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-nonsendable-1.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -20,4 +20,3 @@ fn main() {\n     bar(move|| foo(x));\n     //~^ ERROR `core::marker::Send` is not implemented\n }\n-"}, {"sha": "1fa7284f6b5dcab6e7a2726173b2c2ed7f34c427", "filename": "src/test/compile-fail/lifetime-elision-return-type-requires-explicit-lifetime.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Flifetime-elision-return-type-requires-explicit-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Flifetime-elision-return-type-requires-explicit-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flifetime-elision-return-type-requires-explicit-lifetime.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -37,4 +37,3 @@ fn i(_x: isize) -> &isize { //~ ERROR missing lifetime specifier\n }\n \n fn main() {}\n-"}, {"sha": "8343f718902dc02f7ec291d1b69812b7bd906d3b", "filename": "src/test/compile-fail/linkage3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Flinkage3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Flinkage3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flinkage3.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -18,4 +18,3 @@ extern {\n fn main() {\n     println!(\"{:?}\", foo);\n }\n-"}, {"sha": "171dedd5b2e5881ce5422307c2ee7188666d1e04", "filename": "src/test/compile-fail/lint-exceeding-bitshifts.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Flint-exceeding-bitshifts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Flint-exceeding-bitshifts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-exceeding-bitshifts.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -60,4 +60,3 @@ fn main() {\n       let n = 1_isize << std::isize::BITS; //~ ERROR: bitshift exceeds the type's number of bits\n       let n = 1_usize << std::usize::BITS; //~ ERROR: bitshift exceeds the type's number of bits\n }\n-"}, {"sha": "44a36f215f3d4c6e8c2100e0954635da8674e1de", "filename": "src/test/compile-fail/lint-stability3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Flint-stability3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Flint-stability3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability3.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -22,4 +22,3 @@ use lint_stability::*;\n fn main() {\n     macro_test_arg_nested!(deprecated_text);\n }\n-"}, {"sha": "517be0eb8acd9e6c869ec244338fb05bb67d33e9", "filename": "src/test/compile-fail/lint-uppercase-variables.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Flint-uppercase-variables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Flint-uppercase-variables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-uppercase-variables.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -40,4 +40,3 @@ fn main() {\n \n     let _ = Something { X: 0 };\n }\n-"}, {"sha": "abf0ed420e7a26c59cf03009f84cdcaae0e8364d", "filename": "src/test/compile-fail/macro-inner-attributes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fmacro-inner-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fmacro-inner-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-inner-attributes.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -29,4 +29,3 @@ fn main() {\n     //~^^ ERROR unresolved name `a::bar`\n     b::bar();\n }\n-"}, {"sha": "0469a9d1cc859fd57c89674df4b50007a4d403b2", "filename": "src/test/compile-fail/macro-outer-attributes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fmacro-outer-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fmacro-outer-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-outer-attributes.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -28,4 +28,3 @@ fn main() {\n     a::bar(); //~ ERROR unresolved name `a::bar`\n     b::bar();\n }\n-"}, {"sha": "c251ce6a3c834960942f371f538b704cb7e6294b", "filename": "src/test/compile-fail/manual-link-bad-form.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fmanual-link-bad-form.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fmanual-link-bad-form.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmanual-link-bad-form.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -13,5 +13,3 @@\n \n fn main() {\n }\n-\n-"}, {"sha": "5ab073c33bcb310e15588af7249852e143f069c8", "filename": "src/test/compile-fail/manual-link-bad-kind.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fmanual-link-bad-kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fmanual-link-bad-kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmanual-link-bad-kind.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -13,4 +13,3 @@\n \n fn main() {\n }\n-"}, {"sha": "c1d4551fd9ec44784fc594ab5a763320508b0eb0", "filename": "src/test/compile-fail/method-ambig-two-traits-cross-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fmethod-ambig-two-traits-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fmethod-ambig-two-traits-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmethod-ambig-two-traits-cross-crate.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -19,4 +19,3 @@ trait me2 {\n }\n impl me2 for usize { fn me(&self) -> usize { *self } }\n fn main() { 1_usize.me(); } //~ ERROR E0034\n-"}, {"sha": "b13d4250ee958574256c4493c0e3416099a35fb1", "filename": "src/test/compile-fail/method-missing-call.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fmethod-missing-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fmethod-missing-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmethod-missing-call.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -40,4 +40,3 @@ fn main() {\n               .filter_map; //~ ERROR attempted to take value of method `filter_map` on type\n               //~^ HELP maybe a `()` to call it is missing\n }\n-"}, {"sha": "73982fa2811a0871d2713fdddb82921a73de1395", "filename": "src/test/compile-fail/mut-cross-borrowing.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fmut-cross-borrowing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fmut-cross-borrowing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmut-cross-borrowing.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -16,4 +16,3 @@ fn main() {\n     let mut x: Box<_> = box 3;\n     f(x)    //~ ERROR mismatched types\n }\n-"}, {"sha": "36356cb7d527e2442b1bfdccdf7ca520acc1bc49", "filename": "src/test/compile-fail/object-safety-by-value-self-use.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fobject-safety-by-value-self-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fobject-safety-by-value-self-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobject-safety-by-value-self-use.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -26,4 +26,3 @@ fn use_bar(t: Box<Bar>) {\n }\n \n fn main() { }\n-"}, {"sha": "bc18b52a0c1c9e3f8fdfd0f65994e4e2e0daf464", "filename": "src/test/compile-fail/opt-in-copy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fopt-in-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fopt-in-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fopt-in-copy.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -30,4 +30,3 @@ impl Copy for IWantToCopyThisToo {}\n //~^ ERROR the trait `Copy` may not be implemented for this type\n \n fn main() {}\n-"}, {"sha": "c4019fa22097a92391cb533d7fd144df0101eefa", "filename": "src/test/compile-fail/overloaded-calls-nontuple.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Foverloaded-calls-nontuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Foverloaded-calls-nontuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Foverloaded-calls-nontuple.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -31,4 +31,3 @@ fn main() {\n     };\n     drop(s(3))  //~ ERROR cannot use call notation\n }\n-"}, {"sha": "da2a97b0ca8abb4bb999f2693b367033b3d685ca", "filename": "src/test/compile-fail/pattern-bindings-after-at.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fpattern-bindings-after-at.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fpattern-bindings-after-at.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpattern-bindings-after-at.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -23,4 +23,3 @@ fn main() {\n         _ => ()\n     }\n }\n-"}, {"sha": "0b7886842b49e002cf60699b42561cde22118ff1", "filename": "src/test/compile-fail/pattern-ident-path-generics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fpattern-ident-path-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fpattern-ident-path-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpattern-ident-path-generics.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -14,4 +14,3 @@ fn main() {\n         Some(_) => {}\n     }\n }\n-"}, {"sha": "b73c283fa515e3527f1a745893876a2d2f5d49be", "filename": "src/test/compile-fail/region-bound-on-closure-outlives-call.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregion-bound-on-closure-outlives-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregion-bound-on-closure-outlives-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregion-bound-on-closure-outlives-call.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -13,4 +13,3 @@ fn call_rec<F>(mut f: F) -> usize where F: FnMut(usize) -> usize {\n }\n \n fn main() {}\n-"}, {"sha": "1e615be9d6acc57a452f69059a0cda171c0697dc", "filename": "src/test/compile-fail/region-object-lifetime-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregion-object-lifetime-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregion-object-lifetime-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregion-object-lifetime-1.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -26,4 +26,3 @@ fn borrowed_receiver_same_lifetime<'a>(x: &'a Foo) -> &'a () {\n \n #[rustc_error]\n fn main() {} //~ ERROR compilation successful\n-"}, {"sha": "e011b8f56972be4d1818665aeaf7021ed3dfdafc", "filename": "src/test/compile-fail/region-object-lifetime-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregion-object-lifetime-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregion-object-lifetime-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregion-object-lifetime-2.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -21,4 +21,3 @@ fn borrowed_receiver_different_lifetimes<'a,'b>(x: &'a Foo) -> &'b () {\n }\n \n fn main() {}\n-"}, {"sha": "84dd97643a107ab88370cd4eaf1dee394d3873ca", "filename": "src/test/compile-fail/region-object-lifetime-3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregion-object-lifetime-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregion-object-lifetime-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregion-object-lifetime-3.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -26,4 +26,3 @@ fn borrowed_receiver_related_lifetimes<'a,'b>(x: &'a (Foo+'b)) -> &'a () {\n \n #[rustc_error]\n fn main() {} //~ ERROR compilation successful\n-"}, {"sha": "0a68e7f1076caffab8c67f7fec2c567d046f88cd", "filename": "src/test/compile-fail/region-object-lifetime-4.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregion-object-lifetime-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregion-object-lifetime-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregion-object-lifetime-4.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -23,4 +23,3 @@ fn borrowed_receiver_related_lifetimes2<'a,'b>(x: &'a (Foo+'b)) -> &'b () {\n }\n \n fn main() {}\n-"}, {"sha": "26aad0e33b1b4ff3da1b3c7e339df1a83fd72983", "filename": "src/test/compile-fail/region-object-lifetime-5.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregion-object-lifetime-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregion-object-lifetime-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregion-object-lifetime-5.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -22,4 +22,3 @@ fn owned_receiver(x: Box<Foo>) -> &'static () {\n }\n \n fn main() {}\n-"}, {"sha": "5db9a01c01286760b8e5c6c6fd9c68365e8f02d5", "filename": "src/test/compile-fail/regionck-unboxed-closure-lifetimes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregionck-unboxed-closure-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregionck-unboxed-closure-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregionck-unboxed-closure-lifetimes.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -20,4 +20,3 @@ fn main() {\n         f = move |a: isize, b: isize| { a + b + *c_ref };\n     }\n }\n-"}, {"sha": "f80b0ffa5aadf09eb20cc9447601b900dc949f3c", "filename": "src/test/compile-fail/regions-close-associated-type-into-object.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregions-close-associated-type-into-object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregions-close-associated-type-into-object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-close-associated-type-into-object.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -84,4 +84,3 @@ fn meh1<'a, T: Iter>(v: &'a T) -> Box<X+'a>\n }\n \n fn main() {}\n-"}, {"sha": "4c831a2b65953d15aae100091a9ca609251646dd", "filename": "src/test/compile-fail/regions-close-object-into-object-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregions-close-object-into-object-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregions-close-object-into-object-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-close-object-into-object-1.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -25,4 +25,3 @@ fn f<'a, T:'static, U>(v: Box<A<T>+'static>) -> Box<X+'static> {\n }\n \n fn main() {}\n-"}, {"sha": "b723efff3c902e182d6140d1045c7bcf3018bbb3", "filename": "src/test/compile-fail/regions-close-object-into-object-3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregions-close-object-into-object-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregions-close-object-into-object-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-close-object-into-object-3.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -24,4 +24,3 @@ fn h<'a, T, U>(v: Box<A<U>+'static>) -> Box<X+'static> {\n }\n \n fn main() {}\n-"}, {"sha": "9b311588bb1ea7275312ead2b05331dc1efaca0b", "filename": "src/test/compile-fail/regions-close-object-into-object-4.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregions-close-object-into-object-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregions-close-object-into-object-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-close-object-into-object-4.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -23,4 +23,3 @@ fn i<'a, T, U>(v: Box<A<U>+'a>) -> Box<X+'static> {\n }\n \n fn main() {}\n-"}, {"sha": "f3b5ccabe79eb7afef291eea61b5b03b2e599f17", "filename": "src/test/compile-fail/regions-close-object-into-object-5.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregions-close-object-into-object-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregions-close-object-into-object-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-close-object-into-object-5.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -27,4 +27,3 @@ fn f<'a, T, U>(v: Box<A<T>+'static>) -> Box<X+'static> {\n }\n \n fn main() {}\n-"}, {"sha": "7324d4a4a0ed624e314b3ed46eb80c90ac9576b3", "filename": "src/test/compile-fail/regions-close-param-into-object.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregions-close-param-into-object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fregions-close-param-into-object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-close-param-into-object.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -37,4 +37,3 @@ fn p4<'a,T>(v: Box<T>) -> Box<X+'a>\n }\n \n fn main() {}\n-"}, {"sha": "af3ee7f353731c13141ce7b07fdcad5cf5d69d84", "filename": "src/test/compile-fail/resolve-conflict-extern-crate-vs-extern-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-extern-crate-vs-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-extern-crate-vs-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-extern-crate-vs-extern-crate.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -12,4 +12,3 @@ extern crate std;\n //~^ ERROR an external crate named `std` has already been imported\n \n fn main(){}\n-"}, {"sha": "0c601a81178b3ad28fcc71a301491f016ead71b6", "filename": "src/test/compile-fail/resolve-conflict-import-vs-extern-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-extern-crate.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -12,4 +12,3 @@ use std::slice as std; //~ ERROR import `std` conflicts with imported crate\n \n fn main() {\n }\n-"}, {"sha": "10afe82f2ef0fc65a347623e92b95ba81b4601b7", "filename": "src/test/compile-fail/resolve-conflict-import-vs-import.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-import.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -14,4 +14,3 @@ use std::mem::transmute;\n \n fn main() {\n }\n-"}, {"sha": "e685353592f52cd8684777fbcc56529dc19a4555", "filename": "src/test/compile-fail/resolve-conflict-item-vs-extern-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-extern-crate.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -12,4 +12,3 @@ fn std() {}    //~ ERROR the name `std` conflicts with an external crate\n \n fn main() {\n }\n-"}, {"sha": "1edf815ecaeca402f5b6be30fef47213f07d8dec", "filename": "src/test/compile-fail/resolve-conflict-item-vs-import.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-import.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -15,4 +15,3 @@ fn transmute() {}\n \n fn main() {\n }\n-"}, {"sha": "fd4dce51fc8dbe17e9b6ee4db8002c92928a4f29", "filename": "src/test/compile-fail/resolve-unknown-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fresolve-unknown-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fresolve-unknown-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-unknown-trait.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -17,4 +17,3 @@ impl SomeNonExistentTrait for isize {}\n \n fn f<T:SomeNonExistentTrait>() {}\n //~^ ERROR use of undeclared trait name `SomeNonExistentTrait`\n-"}, {"sha": "e847d3324169ce7a5d17cdbecdf837afd224fe8d", "filename": "src/test/compile-fail/shadowing-in-the-same-pattern.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fshadowing-in-the-same-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fshadowing-in-the-same-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fshadowing-in-the-same-pattern.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -15,4 +15,3 @@ fn f((a, a): (isize, isize)) {} //~ ERROR identifier `a` is bound more than once\n fn main() {\n     let (a, a) = (1, 1);    //~ ERROR identifier `a` is bound more than once\n }\n-"}, {"sha": "b8be7d0cdc20a59aa6f03d8e2d2beaba82c4a41f", "filename": "src/test/compile-fail/struct-variant-privacy-xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fstruct-variant-privacy-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fstruct-variant-privacy-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-variant-privacy-xc.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -18,4 +18,3 @@ fn f(b: struct_variant_privacy::Bar) { //~ ERROR enum `Bar` is private\n }\n \n fn main() {}\n-"}, {"sha": "02c4f3d5d5268fd5fcc46ee291c0372d336ce88f", "filename": "src/test/compile-fail/structure-constructor-type-mismatch.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fstructure-constructor-type-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fstructure-constructor-type-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstructure-constructor-type-mismatch.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -62,4 +62,3 @@ fn main() {\n         y: 10,\n     };\n }\n-"}, {"sha": "1fd711ca4fb2c4eb898df30eaacf112ae0307693", "filename": "src/test/compile-fail/trait-as-struct-constructor.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftrait-as-struct-constructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftrait-as-struct-constructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-as-struct-constructor.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -14,4 +14,3 @@ fn main() {\n     TraitNotAStruct{ value: 0 };\n     //~^ ERROR: use of trait `TraitNotAStruct` as a struct constructor [E0159]\n }\n-"}, {"sha": "217540415a7dd185c3b7f2c42f417729cfe29416", "filename": "src/test/compile-fail/trait-bounds-impl-comparison-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-impl-comparison-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-impl-comparison-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-impl-comparison-2.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -32,4 +32,3 @@ struct ZipIterator<T, U> {\n }\n \n fn main() {}\n-"}, {"sha": "d39b7e15edc34e9d2f7e2b20839c9258ee62882f", "filename": "src/test/compile-fail/trait-bounds-on-structs-and-enums-locals.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums-locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums-locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums-locals.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -25,4 +25,3 @@ fn main() {\n     let baz: Foo<usize> = panic!();\n     //~^ ERROR not implemented\n }\n-"}, {"sha": "d93c9bafaef27c36c205a5e933f106810aac50f1", "filename": "src/test/compile-fail/trait-bounds-on-structs-and-enums-static.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums-static.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -23,4 +23,3 @@ static X: Foo<usize> = Foo {\n \n fn main() {\n }\n-"}, {"sha": "5f95a7ca6e20455ba2959975c8228334fbee5ebd", "filename": "src/test/compile-fail/trait-bounds-on-structs-and-enums-xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums-xc.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -22,4 +22,3 @@ fn kaboom(y: Bar<f32>) {}\n \n fn main() {\n }\n-"}, {"sha": "840787022e65cc736d40a70d35087032bdc81e7e", "filename": "src/test/compile-fail/trait-bounds-on-structs-and-enums-xc1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums-xc1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums-xc1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums-xc1.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -23,4 +23,3 @@ fn main() {\n     //~^ ERROR not implemented\n     let _ = bar;\n }\n-"}, {"sha": "ce0a7d3bb36cf1bca80b0de8ba253f9450c2335d", "filename": "src/test/compile-fail/trait-bounds-on-structs-and-enums.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-on-structs-and-enums.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -66,4 +66,3 @@ impl PolyTrait<Foo<usize>> for Struct {\n \n fn main() {\n }\n-"}, {"sha": "9ba017e150e6112a1f1c3f4db1f2d6da1d7188e3", "filename": "src/test/compile-fail/trait-coercion-generic-regions.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftrait-coercion-generic-regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftrait-coercion-generic-regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-coercion-generic-regions.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -28,4 +28,3 @@ fn main() {\n     // FIXME (#22405): Replace `Box::new` with `box` here when/if possible.\n     let s: Box<Trait<&'static str>> = Box::new(Struct { person: person });\n }\n-"}, {"sha": "918589b8fd3ac0f665d45b57e716d26f8234ff61", "filename": "src/test/compile-fail/transmute-different-sizes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftransmute-different-sizes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftransmute-different-sizes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftransmute-different-sizes.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -25,5 +25,3 @@ unsafe fn g<T>(x: &T) {\n }\n \n fn main() {}\n-\n-"}, {"sha": "71e9113603a6061a50e20fa57dd62ae06cc7022f", "filename": "src/test/compile-fail/type-params-in-different-spaces-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftype-params-in-different-spaces-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftype-params-in-different-spaces-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-params-in-different-spaces-2.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -29,4 +29,3 @@ trait B<T>: Tr<T> {\n \n fn main() {\n }\n-"}, {"sha": "3ad1e9ab538dbac58c286d07977659f9bf429d63", "filename": "src/test/compile-fail/type-params-in-different-spaces-3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftype-params-in-different-spaces-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Ftype-params-in-different-spaces-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-params-in-different-spaces-3.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -15,4 +15,3 @@ trait Tr : Sized {\n }\n \n fn main() {}\n-"}, {"sha": "5d2b5fa52db41b29910a9952974f2c2258f12358", "filename": "src/test/compile-fail/ufcs-explicit-self-bad.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fufcs-explicit-self-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fufcs-explicit-self-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fufcs-explicit-self-bad.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -63,4 +63,3 @@ fn main() {\n     };\n     println!(\"{} {}\", bar.foo(2), bar.bar(2));\n }\n-"}, {"sha": "8e60064beca170487a7b0834d63e90d86f62d4e6", "filename": "src/test/compile-fail/ufcs-qpath-self-mismatch.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fufcs-qpath-self-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fufcs-qpath-self-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fufcs-qpath-self-mismatch.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -18,4 +18,3 @@ fn main() {\n     <i32 as Add<i32>>::add(1, 2u32);\n     //~^ ERROR mismatched types\n }\n-"}, {"sha": "b195a932acaa63d21e6a304fb1d5202d39d10896", "filename": "src/test/compile-fail/unboxed-closure-sugar-nonexistent-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-nonexistent-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-nonexistent-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-nonexistent-trait.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -17,4 +17,3 @@ type Typedef = isize;\n fn g<F:Typedef(isize) -> isize>(x: F) {} //~ ERROR `Typedef` is not a trait\n \n fn main() {}\n-"}, {"sha": "55156e28cd703e3e33b75ebf58028076a9e01fdd", "filename": "src/test/compile-fail/unboxed-closure-sugar-not-used-on-fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-not-used-on-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-not-used-on-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-not-used-on-fn.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -20,4 +20,3 @@ fn bar2<T>(x: &T) where T: Fn<()> {\n }\n \n fn main() { }\n-"}, {"sha": "1e36c47c0973b443b5104abcf31245495554a81f", "filename": "src/test/compile-fail/unboxed-closure-sugar-used-on-struct-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-used-on-struct-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-used-on-struct-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-used-on-struct-1.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -22,4 +22,3 @@ fn bar() {\n }\n \n fn main() { }\n-"}, {"sha": "f50d91a4ddd9faf571eed087af1e867f1d394942", "filename": "src/test/compile-fail/unboxed-closure-sugar-used-on-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-used-on-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-used-on-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-used-on-struct.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -20,4 +20,3 @@ fn foo(b: Box<Bar()>) {\n }\n \n fn main() { }\n-"}, {"sha": "e6e18d996b9e2e7adce47d19f41e49daa46c2204", "filename": "src/test/compile-fail/unboxed-closure-sugar-wrong-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-wrong-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-wrong-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-wrong-trait.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -17,4 +17,3 @@ fn f<F:Trait(isize) -> isize>(x: F) {}\n //~| ERROR no associated type `Output`\n \n fn main() {}\n-"}, {"sha": "92e6affa4c2027f4dd28f9fa80664a3c9cf96c73", "filename": "src/test/compile-fail/unboxed-closures-fnmut-as-fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closures-fnmut-as-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closures-fnmut-as-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closures-fnmut-as-fn.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -35,4 +35,3 @@ fn main() {\n     //~^ ERROR not implemented\n     //~| ERROR not implemented\n }\n-"}, {"sha": "226b516e09db26730b5b64e9aec3234f33fd2315", "filename": "src/test/compile-fail/unboxed-closures-infer-explicit-call-too-early.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closures-infer-explicit-call-too-early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closures-infer-explicit-call-too-early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closures-infer-explicit-call-too-early.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -15,4 +15,3 @@ fn main() {\n     let () = zero.call_mut(());\n     //~^ ERROR we have not yet inferred what kind of closure it is\n }\n-"}, {"sha": "7c5ea031596563b71a8868e7dfed7f4b5ea7c10d", "filename": "src/test/compile-fail/unboxed-closures-infer-fnmut-calling-fnmut-no-mut.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closures-infer-fnmut-calling-fnmut-no-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closures-infer-fnmut-calling-fnmut-no-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closures-infer-fnmut-calling-fnmut-no-mut.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -29,4 +29,3 @@ fn main() {\n \n     tick2(); //~ ERROR cannot borrow\n }\n-"}, {"sha": "1a52e22419eb46c6c59a61b2f505ec0c235d00c2", "filename": "src/test/compile-fail/unboxed-closures-static-call-wrong-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closures-static-call-wrong-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closures-static-call-wrong-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closures-static-call-wrong-trait.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -16,4 +16,3 @@ fn main() {\n     let mut_ = to_fn_mut(|x| x);\n     mut_.call((0, )); //~ ERROR does not implement any method in scope named `call`\n }\n-"}, {"sha": "28e8b8db2a46bde8037790eee0ca456b2f9dd90b", "filename": "src/test/compile-fail/unboxed-closures-vtable-mismatch.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closures-vtable-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closures-vtable-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closures-vtable-mismatch.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -25,4 +25,3 @@ pub fn main() {\n     //~| ERROR type mismatch\n     println!(\"{}\", z);\n }\n-"}, {"sha": "40655f8a3cec4e0be973a4bc8cf76a2d2d0fd7b9", "filename": "src/test/compile-fail/unboxed-closures-wrong-abi.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closures-wrong-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Funboxed-closures-wrong-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closures-wrong-abi.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -35,4 +35,3 @@ fn c() {\n }\n \n fn main() { }\n-"}, {"sha": "60690012485e28b4a22d137089d77a7da8fe12c4", "filename": "src/test/compile-fail/variance-issue-20533.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fvariance-issue-20533.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fvariance-issue-20533.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariance-issue-20533.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -51,4 +51,3 @@ fn main() {\n         drop(x);\n     }\n }\n-"}, {"sha": "ec020f18818938c7a7ddcb48e84f9c42065b1ab0", "filename": "src/test/compile-fail/variance-trait-matching.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fvariance-trait-matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fvariance-trait-matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariance-trait-matching.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -27,4 +27,3 @@ fn f() -> &'static mut isize {\n }\n \n fn main() {}\n-"}, {"sha": "97e67cd2eae273b1e9b06c03ef53138059305e94", "filename": "src/test/compile-fail/vector-cast-weirdness.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fvector-cast-weirdness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fvector-cast-weirdness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvector-cast-weirdness.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -28,4 +28,3 @@ fn main() {\n     let t1: *mut [u8; 2] = &mut x1.y as *mut _;\n     let h1: *mut [u8; 2] = &mut x1.y as *mut [u8; 2];\n }\n-"}, {"sha": "10503084b9d9fc1d39e1ddefd84608d43bf42490", "filename": "src/test/compile-fail/walk-struct-literal-with.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fwalk-struct-literal-with.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fwalk-struct-literal-with.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwalk-struct-literal-with.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -25,4 +25,3 @@ fn main(){\n     let end = Mine{other_val:1, ..start.make_string_bar()};\n     println!(\"{}\", start.test); //~ ERROR use of moved value: `start.test`\n }\n-"}, {"sha": "269df212489cb5f8f0abf3864249e05ed7b399a8", "filename": "src/test/compile-fail/where-clauses-unsatisfied.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fwhere-clauses-unsatisfied.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fcompile-fail%2Fwhere-clauses-unsatisfied.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwhere-clauses-unsatisfied.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -17,4 +17,3 @@ fn main() {\n     drop(equal(&Struct, &Struct))\n     //~^ ERROR the trait `core::cmp::Eq` is not implemented\n }\n-"}, {"sha": "7cefb6044f64f257de3722343de6f09a8394cbc2", "filename": "src/test/debuginfo/function-arg-initialization.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Ffunction-arg-initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Ffunction-arg-initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ffunction-arg-initialization.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -330,6 +330,3 @@ fn main() {\n     while_expr(40, 41, 42);\n     loop_expr(43, 44, 45);\n }\n-\n-\n-"}, {"sha": "07b6d745544bbe4c29b7f3e586b9c390c685758b", "filename": "src/test/debuginfo/generic-method-on-generic-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fgeneric-method-on-generic-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fgeneric-method-on-generic-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-method-on-generic-struct.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -149,4 +149,3 @@ fn main() {\n }\n \n fn zzz() {()}\n-"}, {"sha": "59935e55b3337d4c86dc24707078fef9e55eb0e5", "filename": "src/test/debuginfo/lexical-scope-in-parameterless-closure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-parameterless-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-parameterless-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-parameterless-closure.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -20,4 +20,3 @@ fn main() {\n     let _ = ||();\n     let _ = (1_usize..3).map(|_| 5);\n }\n-"}, {"sha": "c140390604b94c3a0cda28faa47a0015b992b596", "filename": "src/test/debuginfo/limited-debuginfo.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Flimited-debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Flimited-debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flimited-debuginfo.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -54,4 +54,3 @@ fn some_function(a: int, b: int) {\n }\n \n fn some_other_function(a: int, b: int) -> bool { true }\n-"}, {"sha": "7172a880f4c3d71e3356febbb0da4ee52de22504", "filename": "src/test/debuginfo/method-on-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fmethod-on-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fmethod-on-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-enum.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -151,4 +151,3 @@ fn main() {\n }\n \n fn zzz() {()}\n-"}, {"sha": "bf6635f833f6ec349b5cb0bb464ec34d7213ccc8", "filename": "src/test/debuginfo/method-on-generic-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fmethod-on-generic-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fmethod-on-generic-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-generic-struct.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -150,4 +150,3 @@ fn main() {\n }\n \n fn zzz() {()}\n-"}, {"sha": "54779e007088fbe1c91717da8bf6aafab9e10891", "filename": "src/test/debuginfo/method-on-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fmethod-on-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fmethod-on-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-struct.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -150,4 +150,3 @@ fn main() {\n }\n \n fn zzz() {()}\n-"}, {"sha": "7954bcae1b231d1db009017abc2ceb8ce39b99a2", "filename": "src/test/debuginfo/method-on-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fmethod-on-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fmethod-on-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-trait.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -156,4 +156,3 @@ fn main() {\n }\n \n fn zzz() {()}\n-"}, {"sha": "af1287066504e2746b4c9ebcd28bd86a4ffbbd0a", "filename": "src/test/debuginfo/method-on-tuple-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fmethod-on-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fmethod-on-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-tuple-struct.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -148,4 +148,3 @@ fn main() {\n }\n \n fn zzz() {()}\n-"}, {"sha": "f39e8ee222932e1cf1a9557ca3f3d41cfeee5c37", "filename": "src/test/debuginfo/no-debug-attribute.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fno-debug-attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fno-debug-attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fno-debug-attribute.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -40,4 +40,3 @@ fn main() {\n     function_without_debuginfo();\n     function_with_debuginfo();\n }\n-"}, {"sha": "fe262a7ea8da6da574fa9d2c7968de105b43130d", "filename": "src/test/debuginfo/recursive-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Frecursive-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Frecursive-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Frecursive-struct.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -219,4 +219,3 @@ fn main() {\n }\n \n fn zzz() {()}\n-"}, {"sha": "008eeda92d055661572c12acb90fde04081d084b", "filename": "src/test/debuginfo/self-in-default-method.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fself-in-default-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fself-in-default-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fself-in-default-method.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -150,4 +150,3 @@ fn main() {\n }\n \n fn zzz() {()}\n-"}, {"sha": "94e5f6f6c1052aaa435b37c6f89bedc84fc1b1b2", "filename": "src/test/debuginfo/self-in-generic-default-method.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fself-in-generic-default-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Fself-in-generic-default-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fself-in-generic-default-method.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -151,4 +151,3 @@ fn main() {\n }\n \n fn zzz() {()}\n-"}, {"sha": "91e2445c4aa9d12d6d7ed9cd2aef088c97c8f498", "filename": "src/test/debuginfo/text-to-include-1.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Ftext-to-include-1.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Ftext-to-include-1.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftext-to-include-1.txt?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1 +1 @@\n-some text to include in another file as string 1\n\\ No newline at end of file\n+some text to include in another file as string 1"}, {"sha": "dbf811872d9be3cec64a2d0fb92bd14f463d93ea", "filename": "src/test/debuginfo/text-to-include-2.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Ftext-to-include-2.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Ftext-to-include-2.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftext-to-include-2.txt?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1 +1 @@\n-some text to include in another file as string 2.\n\\ No newline at end of file\n+some text to include in another file as string 2."}, {"sha": "eeed83b3d46e6d0b56c276eb6ce98090eb7e7de2", "filename": "src/test/debuginfo/text-to-include-3.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Ftext-to-include-3.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fdebuginfo%2Ftext-to-include-3.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftext-to-include-3.txt?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1 +1 @@\n-some text to include in another file as string 3..\n\\ No newline at end of file\n+some text to include in another file as string 3.."}, {"sha": "bcfcc4347039b05e884b27b5f09f5069b7ae0f76", "filename": "src/test/parse-fail/ascii-only-character-escape.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fascii-only-character-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fascii-only-character-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fascii-only-character-escape.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -14,4 +14,3 @@ fn main() {\n     let z = \"\\xe2\"; //~ ERROR may only be used\n     let a = b\"\\x00e2\";  // ok because byte literal\n }\n-"}, {"sha": "08935a24a1b61bd89af3670cc952c94bddfc6e8d", "filename": "src/test/parse-fail/byte-literals.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fbyte-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fbyte-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fbyte-literals.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -21,5 +21,3 @@ pub fn main() {\n     b'\u00e9';  //~ ERROR byte constant must be ASCII\n     b'a  //~ ERROR unterminated byte constant\n }\n-\n-"}, {"sha": "ee3d86a6638d8bb34a931dfa2f77b03c18ef32b6", "filename": "src/test/parse-fail/byte-string-literals.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fbyte-string-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fbyte-string-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fbyte-string-literals.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -19,5 +19,3 @@ pub fn main() {\n     b\"\u00e9\";  //~ ERROR byte constant must be ASCII\n     b\"a  //~ ERROR unterminated double quote byte string\n }\n-\n-"}, {"sha": "2a3dd7fba0cff265e1224933d51c3a12ab5bd864", "filename": "src/test/parse-fail/issue-10392-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fissue-10392-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fissue-10392-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-10392-2.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -15,4 +15,3 @@ fn a() -> A { panic!() }\n fn main() {\n     let A { .., } = a(); //~ ERROR: expected `}`\n }\n-"}, {"sha": "b7feeecbfd91eeb1d08e638d9f0ebe1b7131d474", "filename": "src/test/parse-fail/issue-17718-const-mut.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fissue-17718-const-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fissue-17718-const-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-17718-const-mut.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -15,4 +15,3 @@ FOO: usize = 3;\n \n fn main() {\n }\n-"}, {"sha": "a50a757160dde4a2d4cf9724e4d61c909f427bfe", "filename": "src/test/parse-fail/issue-20711-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fissue-20711-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fissue-20711-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-20711-2.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -17,4 +17,3 @@ impl Foo {\n } //~ ERROR expected one of `extern`, `fn`, `pub`, `type`, or `unsafe`, found `}`\n \n fn main() {}\n-"}, {"sha": "48cdeeb0d7027629f309d28e563895dd531fc459", "filename": "src/test/parse-fail/issue-2354-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fissue-2354-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fissue-2354-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-2354-1.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -9,4 +9,3 @@\n // except according to those terms.\n \n static foo: isize = 2; } //~ ERROR incorrect close delimiter:\n-"}, {"sha": "ba04a5ac9af09f71f315d99dc8744ba24892b327", "filename": "src/test/parse-fail/keywords-followed-by-double-colon.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fkeywords-followed-by-double-colon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fkeywords-followed-by-double-colon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fkeywords-followed-by-double-colon.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -12,4 +12,3 @@ fn main() {\n     struct::foo();  //~ ERROR expected identifier\n     mut::baz(); //~ ERROR expected identifier\n }\n-"}, {"sha": "52f867fe913b8af0a3de2bcc19a46ecfcf443b66", "filename": "src/test/parse-fail/macro-attribute.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fmacro-attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fmacro-attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fmacro-attribute.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -10,4 +10,3 @@\n \n #[doc = $not_there] //~ error: unexpected token: `$`\n fn main() { }\n-"}, {"sha": "23b27b49a86f654392ecfb9958c0317c707d0975", "filename": "src/test/parse-fail/macros-no-semicolon.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fmacros-no-semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fmacros-no-semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fmacros-no-semicolon.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -13,4 +13,3 @@ fn main() {\n     assert!(3 == 4) //~ ERROR expected one of `.`, `;`, `}`, or an operator, found `assert`\n     println!(\"hello\");\n }\n-"}, {"sha": "4767c66c2a0580c8379c4af5a421c8beff7ee02c", "filename": "src/test/parse-fail/obsolete-proc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fobsolete-proc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fobsolete-proc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fobsolete-proc.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -14,4 +14,4 @@ fn foo(p: proc()) { } //~ ERROR `proc` is a reserved keyword\n \n fn bar() { proc() 1; }\n \n-fn main() { }\n\\ No newline at end of file\n+fn main() { }"}, {"sha": "ccf9e2d86882b9d0648c32f1797a6d28fc8eb498", "filename": "src/test/parse-fail/raw-byte-string-eof.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fraw-byte-string-eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fraw-byte-string-eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fraw-byte-string-eof.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -12,5 +12,3 @@\n pub fn main() {\n     br##\"a\"#;  //~ unterminated raw string\n }\n-\n-"}, {"sha": "d6073a10307fdbd43603d4d4e40b5110f451459e", "filename": "src/test/parse-fail/raw-byte-string-literals.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fraw-byte-string-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fraw-byte-string-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fraw-byte-string-literals.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -13,5 +13,3 @@ pub fn main() {\n     br\"\u00e9\";  //~ raw byte string must be ASCII\n     br##~\"a\"~##;  //~ only `#` is allowed in raw string delimitation\n }\n-\n-"}, {"sha": "a6d4da526fb0eacf9bb695f8b473e70bd413e370", "filename": "src/test/parse-fail/struct-literal-in-for.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-for.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -25,4 +25,3 @@ fn main() {\n         println!(\"yo\");\n     }\n }\n-"}, {"sha": "00ece3fcca341d52ac15d7a3cfe7e368d8e79e80", "filename": "src/test/parse-fail/struct-literal-in-if.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-if.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -25,4 +25,3 @@ fn main() {\n         println!(\"yo\");\n     }\n }\n-"}, {"sha": "cdcf98a42f94b0582e7cb2211b8c7f096eb16948", "filename": "src/test/parse-fail/struct-literal-in-match-discriminant.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-match-discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-match-discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-match-discriminant.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -21,4 +21,3 @@ fn main() {\n         } => {}\n     }\n }\n-"}, {"sha": "c23b5dbb9cc867a8bffe911b63af1fce02cca23a", "filename": "src/test/parse-fail/struct-literal-in-while.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-while.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -25,4 +25,3 @@ fn main() {\n         println!(\"yo\");\n     }\n }\n-"}, {"sha": "191bd78212458f50ce2d5ab4d77bcbe784a33557", "filename": "src/test/parse-fail/type-parameters-in-field-exprs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Ftype-parameters-in-field-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Ftype-parameters-in-field-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Ftype-parameters-in-field-exprs.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -21,4 +21,3 @@ fn main() {\n     f.x::<isize>;\n     //~^ ERROR field expressions may not have type parameters\n }\n-"}, {"sha": "de6291c7cc38beb683bb7107b5463aa7224aaa0c", "filename": "src/test/parse-fail/unboxed-closure-sugar-used-on-struct-3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Funboxed-closure-sugar-used-on-struct-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Funboxed-closure-sugar-used-on-struct-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Funboxed-closure-sugar-used-on-struct-3.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -26,4 +26,3 @@ fn bar() {\n }\n \n fn main() { }\n-"}, {"sha": "52d0d1a5fba1538017cccde64624b051f48eb118", "filename": "src/test/parse-fail/use-mod-4.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fuse-mod-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fuse-mod-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fuse-mod-4.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -12,4 +12,3 @@ use foo::self;\n //~^ ERROR expected identifier, found keyword `self`\n \n fn main() {}\n-"}, {"sha": "ebdbdc4b2b54f1c83a579cf69330326429356d93", "filename": "src/test/parse-fail/where-clauses-no-bounds-or-predicates.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fwhere-clauses-no-bounds-or-predicates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fparse-fail%2Fwhere-clauses-no-bounds-or-predicates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fwhere-clauses-no-bounds-or-predicates.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -20,4 +20,3 @@ fn equal2<T>(_: &T, _: &T) -> bool where T: {\n \n fn main() {\n }\n-"}, {"sha": "c72add8d3d68a41f323ab68702b360e8d25a5cc4", "filename": "src/test/pretty/asm-clobbers.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fpretty%2Fasm-clobbers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fpretty%2Fasm-clobbers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fasm-clobbers.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -11,4 +11,3 @@\n #![feature(asm)]\n \n pub fn main() { unsafe { asm!(\"\" : : : \"hello\", \"world\") }; }\n-"}, {"sha": "33a80f469469ce8017b9c43f23f239cc108774e0", "filename": "src/test/pretty/closure-reform-pretty.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fpretty%2Fclosure-reform-pretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fpretty%2Fclosure-reform-pretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fclosure-reform-pretty.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -24,4 +24,3 @@ fn call_extern(f: fn() -> int) { }\n fn call_abid_extern(f: extern \"C\" fn() -> int) { }\n \n pub fn main() { }\n-"}, {"sha": "0a20300e4f4de797ebe8dbd3eccba7fd3ed28547", "filename": "src/test/pretty/path-type-bounds.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fpretty%2Fpath-type-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fpretty%2Fpath-type-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fpath-type-bounds.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -23,4 +23,3 @@ fn main() {\n \n     Box::new(1) as Box<Tr+ Sync>;\n }\n-"}, {"sha": "ad582ac1b62bedbd4f8fba29d4f1cb3773d4489e", "filename": "src/test/pretty/where-clauses.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fpretty%2Fwhere-clauses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Fpretty%2Fwhere-clauses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fwhere-clauses.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -13,4 +13,3 @@\n fn f<'a, 'b, T>(t: T) -> int where T: 'a, 'a:'b, T: Eq { 0 }\n \n fn main() { }\n-"}, {"sha": "c14006cc2e052b7a0bd77f6ae17dc0fa668b23cb", "filename": "src/test/run-make/allow-non-lint-warnings-cmdline/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fallow-non-lint-warnings-cmdline%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fallow-non-lint-warnings-cmdline%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fallow-non-lint-warnings-cmdline%2FMakefile?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -9,4 +9,3 @@ all: foo\n # This is just to make sure the above command actually succeeds\n foo:\n \t$(RUSTC) foo.rs -A warnings\n-"}, {"sha": "3eecaf9314226c884551faa7241a621a3f9db70f", "filename": "src/test/run-make/allow-warnings-cmdline-stability/Makefile", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2FMakefile?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -13,7 +13,3 @@ bar:\n \n foo: bar\n \t$(RUSTC) foo.rs -A warnings\n-\n-\n-\n-"}, {"sha": "b5c54558a4f0ac9165b8d7436171a619be766388", "filename": "src/test/run-make/compiler-lookup-paths/c.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fcompiler-lookup-paths%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fcompiler-lookup-paths%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fcompiler-lookup-paths%2Fc.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -10,4 +10,3 @@\n \n #![crate_type = \"lib\"]\n extern crate b;\n-"}, {"sha": "a397d6bc749fe4de75f64cf3c0c9d3b2367847f5", "filename": "src/test/run-make/crate-name-priority/foo1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fcrate-name-priority%2Ffoo1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fcrate-name-priority%2Ffoo1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fcrate-name-priority%2Ffoo1.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -11,4 +11,3 @@\n #![crate_name = \"foo\"]\n \n fn main() {}\n-"}, {"sha": "81930e969a9f6a1adf43e1842cb9e7322969a8c6", "filename": "src/test/run-make/extern-flag-disambiguates/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fextern-flag-disambiguates%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fextern-flag-disambiguates%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-flag-disambiguates%2FMakefile?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -23,4 +23,3 @@ all:\n \t@echo after\n \t$(RUSTC) --cfg after  d.rs --extern a=$(TMPDIR)/liba-1.rlib\n \t$(call RUN,d)\n-"}, {"sha": "e6c760257380c6639446ab5e533b74c2a17b7a3e", "filename": "src/test/run-make/extern-flag-fun/bar.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fextern-flag-fun%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fextern-flag-fun%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-flag-fun%2Fbar.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -7,4 +7,3 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-"}, {"sha": "451841e736899aba7746a755900ba610b6f12c67", "filename": "src/test/run-make/extern-overrides-distribution/main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fextern-overrides-distribution%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fextern-overrides-distribution%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-overrides-distribution%2Fmain.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -13,4 +13,3 @@ extern crate libc;\n fn main() {\n     libc::foo();\n }\n-"}, {"sha": "cf7683479f08e648341db30acada9f0988dcd6e7", "filename": "src/test/run-make/interdependent-c-libraries/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2FMakefile?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -12,4 +12,3 @@ all: $(call STATICLIB,foo) $(call STATICLIB,bar)\n \t$(RUSTC) foo.rs\n \t$(RUSTC) bar.rs\n \t$(RUSTC) main.rs -Z print-link-args\n-"}, {"sha": "88fc98615f0b342cb29b537627cfa2947bc59a13", "filename": "src/test/run-make/interdependent-c-libraries/bar.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Fbar.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -20,4 +20,3 @@ extern {\n pub fn doit() {\n     unsafe { bar(); }\n }\n-"}, {"sha": "c19d3d5c30f1473a41d571e54edea4a4404805ce", "filename": "src/test/run-make/issue-14500/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fissue-14500%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fissue-14500%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-14500%2FMakefile?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -11,4 +11,3 @@ all:\n \t$(RUSTC) bar.rs --crate-type=staticlib -C lto -L. -o $(TMPDIR)/libbar.a\n \t$(CC) foo.c -lbar -o $(call RUN_BINFILE,foo) $(EXTRACFLAGS)\n \t$(call RUN,foo)\n-"}, {"sha": "cc3b257a5c5bf6b9efa35011a6962f4638f6ff61", "filename": "src/test/run-make/libs-and-bins/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Flibs-and-bins%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Flibs-and-bins%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Flibs-and-bins%2FMakefile?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -4,4 +4,3 @@ all:\n \t$(RUSTC) foo.rs\n \t$(call RUN,foo)\n \trm $(TMPDIR)/$(call DYLIB_GLOB,foo)\n-"}, {"sha": "116c7ae991cf67ae778218719addc8542f7c838f", "filename": "src/test/run-make/link-path-order/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Flink-path-order%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Flink-path-order%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Flink-path-order%2FMakefile?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -14,4 +14,3 @@ all: $(TMPDIR)/libcorrect.a $(TMPDIR)/libwrong.a\n \t$(call RUN,should_succeed)\n \t$(RUSTC) main.rs -o $(TMPDIR)/should_fail -L $(WRONG_DIR) -L $(CORRECT_DIR)\n \t$(call FAIL,should_fail)\n-"}, {"sha": "1871a5bbdc7f6dd0befd848c07e5a19b071bacbd", "filename": "src/test/run-make/linkage-attr-on-static/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Flinkage-attr-on-static%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Flinkage-attr-on-static%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Flinkage-attr-on-static%2FMakefile?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -5,4 +5,3 @@ all:\n \t$(AR) rcs $(TMPDIR)/libfoo.a $(TMPDIR)/foo.o\n \t$(RUSTC) bar.rs -lfoo -L $(TMPDIR)\n \t$(call RUN,bar) || exit 1\n-"}, {"sha": "dccf0d99b0f8207c9316fdf51c547920b89c1c77", "filename": "src/test/run-make/manual-link/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fmanual-link%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fmanual-link%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmanual-link%2FMakefile?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -4,4 +4,3 @@ all: $(TMPDIR)/libbar.a\n \t$(RUSTC) foo.rs -lstatic=bar\n \t$(RUSTC) main.rs\n \t$(call RUN,main)\n-"}, {"sha": "c5066ccd6566f1dd2282637738a34b93970047ea", "filename": "src/test/run-make/mixing-formats/baz2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fmixing-formats%2Fbaz2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fmixing-formats%2Fbaz2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmixing-formats%2Fbaz2.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -12,4 +12,3 @@ extern crate bar1;\n extern crate bar2;\n \n fn main() {}\n-"}, {"sha": "e6c8b8eb179e6341990348735af236ebd952c8b6", "filename": "src/test/run-make/obey-crate-type-flag/test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fobey-crate-type-flag%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Fobey-crate-type-flag%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fobey-crate-type-flag%2Ftest.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -10,4 +10,3 @@\n \n #![crate_type = \"rlib\"]\n #![crate_type = \"dylib\"]\n-"}, {"sha": "60a2f7202f8fca779149a7668b2e5c4dd5c9c08b", "filename": "src/test/run-make/rustdoc-default-impl/bar.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Frustdoc-default-impl%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Frustdoc-default-impl%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-default-impl%2Fbar.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -14,4 +14,3 @@ pub use foo::bar;\n \n pub fn wut<T: bar::Bar>() {\n }\n-"}, {"sha": "55cbd2da6ae2ebdf0b9b2be12cbc54da9121ffee", "filename": "src/test/run-make/rustdoc-extern-method/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Frustdoc-extern-method%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Frustdoc-extern-method%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-extern-method%2FMakefile?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -5,4 +5,3 @@ all: foo.rs bar.rs\n \t$(HOST_RPATH_ENV) $(RUSTDOC) -w html -o $(TMPDIR)/doc foo.rs\n \t$(HOST_RPATH_ENV) $(RUSTDOC) -L $(TMPDIR) -w html -o $(TMPDIR)/doc bar.rs\n \t$(HTMLDOCCK) $(TMPDIR)/doc bar.rs\n-"}, {"sha": "c1b1683efdb7fad32880ae69c03656b5510e2be7", "filename": "src/test/run-make/rustdoc-negative-impl/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Frustdoc-negative-impl%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Frustdoc-negative-impl%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-negative-impl%2FMakefile?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -3,4 +3,3 @@\n all: foo.rs\n \t$(HOST_RPATH_ENV) $(RUSTDOC) -w html -o $(TMPDIR)/doc foo.rs\n \t$(HTMLDOCCK) $(TMPDIR)/doc foo.rs\n-"}, {"sha": "ba971836e5a9d64c2ca7df1580e39c9addb7c251", "filename": "src/test/run-make/rustdoc-recursion/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Frustdoc-recursion%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Frustdoc-recursion%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-recursion%2FMakefile?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -9,4 +9,3 @@ all:\n else\n all:\n endif\n-"}, {"sha": "7505d20566dbb45ef209d92c1d86b050393a6d80", "filename": "src/test/run-make/rustdoc-recursion/foo.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Frustdoc-recursion%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Frustdoc-recursion%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-recursion%2Ffoo.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -22,4 +22,3 @@ mod m {\n         pub use super::*;\n     }\n }\n-"}, {"sha": "c1b1683efdb7fad32880ae69c03656b5510e2be7", "filename": "src/test/run-make/rustdoc-viewpath-self/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Frustdoc-viewpath-self%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Frustdoc-viewpath-self%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-viewpath-self%2FMakefile?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -3,4 +3,3 @@\n all: foo.rs\n \t$(HOST_RPATH_ENV) $(RUSTDOC) -w html -o $(TMPDIR)/doc foo.rs\n \t$(HTMLDOCCK) $(TMPDIR)/doc foo.rs\n-"}, {"sha": "c1b1683efdb7fad32880ae69c03656b5510e2be7", "filename": "src/test/run-make/rustdoc-where/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Frustdoc-where%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Frustdoc-where%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-where%2FMakefile?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -3,4 +3,3 @@\n all: foo.rs\n \t$(HOST_RPATH_ENV) $(RUSTDOC) -w html -o $(TMPDIR)/doc foo.rs\n \t$(HTMLDOCCK) $(TMPDIR)/doc foo.rs\n-"}, {"sha": "7b604bedfd00bfe6e459b286ed4a5a626553c751", "filename": "src/test/run-make/tools.mk", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Ftools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-make%2Ftools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftools.mk?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -83,4 +83,3 @@ REMOVE_RLIBS      = rm $(TMPDIR)/$(call RLIB_GLOB,$(1))\n \n $(TMPDIR)/lib%.o: %.c\n \t$(CC) -c -o $@ $<\n-"}, {"sha": "8492424a1457a0d6ac62eb896cd51d8030b63a50", "filename": "src/test/run-pass-fulldeps/compiler-calls.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass-fulldeps%2Fcompiler-calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass-fulldeps%2Fcompiler-calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fcompiler-calls.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -80,4 +80,3 @@ fn main() {\n     rustc_driver::run_compiler(args.as_slice(), &mut tc);\n     assert!(tc.count == 30);\n }\n-"}, {"sha": "0bbb9ed128592d3e3a9cea3ca427bf809b799129", "filename": "src/test/run-pass-valgrind/cleanup-auto-borrow-obj.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass-valgrind%2Fcleanup-auto-borrow-obj.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass-valgrind%2Fcleanup-auto-borrow-obj.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-valgrind%2Fcleanup-auto-borrow-obj.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -36,4 +36,3 @@ pub fn main() {\n         assert!(DROP_RAN);\n     }\n }\n-"}, {"sha": "de294f88a4c9b24cec6a639f7c15d5644c646b74", "filename": "src/test/run-pass/as-precedence.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fas-precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fas-precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fas-precedence.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -15,4 +15,3 @@ fn main() {\n     assert_eq!(3 as uint + 3, 6);\n     assert_eq!(3 as (uint) + 3, 6);\n }\n-"}, {"sha": "f0d36ea976ef71c010d334973f9ccf5e0731df68", "filename": "src/test/run-pass/backtrace-debuginfo-aux.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo-aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo-aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo-aux.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -19,4 +19,3 @@ pub fn callback<F>(f: F) where F: FnOnce((&'static str, u32)) {\n pub fn callback_inlined<F>(f: F) where F: FnOnce((&'static str, u32)) {\n     f((file!(), line!()))\n }\n-"}, {"sha": "088fa19356c4e4a941e05b77dc872640262033b5", "filename": "src/test/run-pass/backtrace-debuginfo.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -157,4 +157,3 @@ fn main() {\n         run_test(&args[0]);\n     }\n }\n-"}, {"sha": "e8118e90a9f3f7f329663f31828632337ebc1ec0", "filename": "src/test/run-pass/bare-fn-implements-fn-mut.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fbare-fn-implements-fn-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fbare-fn-implements-fn-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbare-fn-implements-fn-mut.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -35,4 +35,3 @@ fn main() {\n     assert_eq!(call_g(g, \"foo\".to_string(), \"bar\".to_string()),\n                \"foobar\");\n }\n-"}, {"sha": "e6982949501c2464a75ec387f078c11786456e2c", "filename": "src/test/run-pass/bitv-perf-test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fbitv-perf-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fbitv-perf-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbitv-perf-test.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "533445052ae657e92ac468b768a823272b62dead", "filename": "src/test/run-pass/borrowck-field-sensitivity.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fborrowck-field-sensitivity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fborrowck-field-sensitivity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-field-sensitivity.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -270,4 +270,3 @@ fn main() {\n     borrow_after_assign_after_uninit();\n     move_after_assign_after_uninit();\n }\n-"}, {"sha": "269063bbd05b67712ee44efd55b1072eb2f1b329", "filename": "src/test/run-pass/borrowck-move-by-capture-ok.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fborrowck-move-by-capture-ok.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fborrowck-move-by-capture-ok.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-move-by-capture-ok.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -17,4 +17,3 @@ pub fn main() {\n     let h = || -> int *bar;\n     assert_eq!(h(), 3);\n }\n-"}, {"sha": "4b69e554cda66b66cd6aaae46ed2e849ce6c1c70", "filename": "src/test/run-pass/borrowck-use-mut-borrow.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fborrowck-use-mut-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fborrowck-use-mut-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-use-mut-borrow.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -57,4 +57,3 @@ fn main() {\n     field_move_after_field_borrow();\n     fu_field_move_after_field_borrow();\n }\n-"}, {"sha": "9c8bc5411ef9165df42e5fbbd61adc23ec5349f1", "filename": "src/test/run-pass/can-copy-pod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fcan-copy-pod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fcan-copy-pod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcan-copy-pod.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -21,5 +21,3 @@ fn can_copy_copy<T:Copy>(v: T) {\n }\n \n pub fn main() {}\n-\n-"}, {"sha": "6518df11517e9d60b476d53a07125218f504e3d7", "filename": "src/test/run-pass/capture-clauses-boxed-closures.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fcapture-clauses-boxed-closures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fcapture-clauses-boxed-closures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcapture-clauses-boxed-closures.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -20,4 +20,3 @@ fn main() {\n     each(&elems, |val| sum += *val);\n     assert_eq!(sum, 15);\n }\n-"}, {"sha": "a3f857ab4b069a7d2d61ff6c5c26b77d8237d57d", "filename": "src/test/run-pass/class-exports.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fclass-exports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fclass-exports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-exports.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "cb152f1c64e949b9cd2e52cfb321541db7ff0004", "filename": "src/test/run-pass/cleanup-arm-conditional.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fcleanup-arm-conditional.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fcleanup-arm-conditional.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-arm-conditional.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -52,4 +52,3 @@ pub fn main() {\n     let t = Test { x: 1 };\n     do_something(&t);\n }\n-"}, {"sha": "4466dda6c6927932f3c75286f951f3dfce9aa11f", "filename": "src/test/run-pass/cleanup-shortcircuit.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fcleanup-shortcircuit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fcleanup-shortcircuit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-shortcircuit.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -36,4 +36,3 @@ pub fn main() {\n         unsafe { *(0 as *mut int) = 0; }\n     }\n }\n-"}, {"sha": "af64553b9138712b1212b442d01de5f89ebb0a52", "filename": "src/test/run-pass/closure-reform.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fclosure-reform.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fclosure-reform.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclosure-reform.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -66,4 +66,3 @@ pub fn main() {\n \n     call_bare_again(println);\n }\n-"}, {"sha": "f77be4d9c0631ab0b798d2c3e18d93033b2a657f", "filename": "src/test/run-pass/conditional-compile.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fconditional-compile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fconditional-compile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconditional-compile.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "3164021a72e6481483a516e8388f58c47699268c", "filename": "src/test/run-pass/deriving-meta-multiple.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fderiving-meta-multiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fderiving-meta-multiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-meta-multiple.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "16df6e7004fe4542d02f981f31a7b51f111c444f", "filename": "src/test/run-pass/deriving-meta.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fderiving-meta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fderiving-meta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-meta.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "2d6997341fb5d0af2e6ba5552ee36cdf50e41a2e", "filename": "src/test/run-pass/deriving-via-extension-hash-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fderiving-via-extension-hash-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fderiving-via-extension-hash-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-hash-enum.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "448d5bfd4cb74dfab9a079462d5e935809759b48", "filename": "src/test/run-pass/deriving-via-extension-hash-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fderiving-via-extension-hash-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fderiving-via-extension-hash-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-hash-struct.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "1a31743b4c0c31da5a2e8f7912d6bfc1c4b0719f", "filename": "src/test/run-pass/deriving-via-extension-type-params.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fderiving-via-extension-type-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fderiving-via-extension-type-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-type-params.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "4f1fc91a53cea21be560a58d67d0d9196ce79544", "filename": "src/test/run-pass/drop-with-type-ascription-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fdrop-with-type-ascription-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fdrop-with-type-ascription-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdrop-with-type-ascription-1.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -14,4 +14,3 @@ fn main() {\n     let invalid_string = &foo[0];\n     assert_eq!(*invalid_string, \"hello\");\n }\n-"}, {"sha": "ec8de2a709e6690e5b45a0cb61c15c56f06c7d5b", "filename": "src/test/run-pass/drop-with-type-ascription-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fdrop-with-type-ascription-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fdrop-with-type-ascription-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdrop-with-type-ascription-2.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -14,4 +14,3 @@ fn main() {\n     assert_eq!(arr[0], \"asdf\");\n     assert_eq!(arr[0], \"asdf\");\n }\n-"}, {"sha": "f7b1cef83ea5397b2efda591ca40432defdf7ded", "filename": "src/test/run-pass/duplicated-external-mods.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fduplicated-external-mods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fduplicated-external-mods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fduplicated-external-mods.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -13,4 +13,3 @@\n extern crate anonexternmod;\n \n pub fn main() { }\n-"}, {"sha": "09e816cff0bb58d61728941ec8fb48635f905acd", "filename": "src/test/run-pass/export-multi.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fexport-multi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fexport-multi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexport-multi.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "b7ef4df7ed6c0c43cd3d4c2a66317376fa062931", "filename": "src/test/run-pass/export-non-interference3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fexport-non-interference3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fexport-non-interference3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexport-non-interference3.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "612b6ee14e196510de170be3f2d38683806ccfe0", "filename": "src/test/run-pass/extern-compare-with-return-type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fextern-compare-with-return-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fextern-compare-with-return-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-compare-with-return-type.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -31,4 +31,3 @@ pub fn main() {\n     assert!(uintuintuintuintret as uintuintuintuintret ==\n             uintuintuintuintret as uintuintuintuintret);\n }\n-"}, {"sha": "4d4f5036fc1b8ec3d887a7e1985925f9faa0954f", "filename": "src/test/run-pass/extern-mod-syntax.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fextern-mod-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fextern-mod-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-mod-syntax.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "84218befcd83bed2b3fde9fac1d796b7c0c6516a", "filename": "src/test/run-pass/for-loop-goofiness.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Ffor-loop-goofiness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Ffor-loop-goofiness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffor-loop-goofiness.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -21,4 +21,3 @@ pub fn main() {\n         assert_eq!(*i, 3);\n     }\n }\n-"}, {"sha": "9670d2de3efcab1aeac50b163cae1e39ef65a503", "filename": "src/test/run-pass/format-nan.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fformat-nan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fformat-nan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fformat-nan.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -15,4 +15,3 @@ pub fn main() {\n     assert_eq!(format!(\"{:e}\", f64::NAN), x);\n     assert_eq!(format!(\"{:E}\", f64::NAN), x);\n }\n-"}, {"sha": "38602bef229bcecb09c94a42f6f828228fb40009", "filename": "src/test/run-pass/import-from.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport-from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport-from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-from.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "b46f81479bf0437353236303ed18267a8527cb99", "filename": "src/test/run-pass/import-trailing-comma.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport-trailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport-trailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-trailing-comma.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "4086acc0a8eb43eb0093e36cdf5b00e596f74b96", "filename": "src/test/run-pass/import2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport2.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "2c09eff7b12e5bc5563ef36cf8cec9a262032934", "filename": "src/test/run-pass/import3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport3.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "229813ff55ceb827f80b95187404e72dbbefcaae", "filename": "src/test/run-pass/import4.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport4.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "0cad094d55dd716aed875e41ad601eb7d19f938b", "filename": "src/test/run-pass/import5.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport5.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "545bd7cee5ea8d1f30b4c35ac76455f5c9dddd4c", "filename": "src/test/run-pass/import6.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport6.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "4b9d1328951fe50f2b2f6cf6a02929e343308b4e", "filename": "src/test/run-pass/import7.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport7.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "532c3843284d26b2cf31f1a6933cbf7eab4d6069", "filename": "src/test/run-pass/import8.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fimport8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport8.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "9674c86b379a53195660c5d900771040f40971fb", "filename": "src/test/run-pass/inherent-trait-method-order.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Finherent-trait-method-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Finherent-trait-method-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finherent-trait-method-order.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -31,4 +31,3 @@ fn main() {\n     let x = &(&(&Foo));\n     x.foo();\n }\n-"}, {"sha": "77e7ee6264319d1d78bee4baa081fd3273ae7c15", "filename": "src/test/run-pass/integer-literal-suffix-inference-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Finteger-literal-suffix-inference-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Finteger-literal-suffix-inference-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finteger-literal-suffix-inference-2.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -14,4 +14,3 @@ fn main() {\n     let a = 3;\n     foo(&a as *const _ as *const ());\n }\n-"}, {"sha": "31aca964def1cbc6155927b5d6363e50564af674", "filename": "src/test/run-pass/integer-literal-suffix-inference-3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Finteger-literal-suffix-inference-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Finteger-literal-suffix-inference-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finteger-literal-suffix-inference-3.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -11,4 +11,3 @@\n fn main() {\n     println!(\"{}\", std::mem::size_of_val(&1));\n }\n-"}, {"sha": "837c2d21513de88e392dacb006dbc06a9d72bed8", "filename": "src/test/run-pass/intrinsic-assume.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fintrinsic-assume.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fintrinsic-assume.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsic-assume.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -22,4 +22,3 @@ fn main() {\n     let x = unsafe { f(34) };\n     assert_eq!(x, 42);\n }\n-"}, {"sha": "99578abed38e75ec1f796a53d59841d380dd1e1e", "filename": "src/test/run-pass/intrinsic-return-address.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fintrinsic-return-address.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fintrinsic-return-address.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsic-return-address.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -40,4 +40,3 @@ fn main() {\n     let actual_address = &pt as *const Point as uint;\n     assert_eq!(intrinsic_reported_address, actual_address);\n }\n-"}, {"sha": "028b2bfb0ecdb88184713d10b0891c3f71fccbd5", "filename": "src/test/run-pass/intrinsics-math.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "c6e0a5be76333f3c132b4fc6c2c06ec87ec2506e", "filename": "src/test/run-pass/issue-11736.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fissue-11736.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fissue-11736.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11736.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -32,4 +32,3 @@ fn main() {\n         }\n     }\n }\n-"}, {"sha": "9bf4c94d7e397d379124f98358ed8ace59a81aa2", "filename": "src/test/run-pass/issue-12729.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fissue-12729.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fissue-12729.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-12729.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -18,4 +18,3 @@ mod bar {\n     }\n }\n fn main() {}\n-"}, {"sha": "4bdf5a31c713b94aa1a4828efa80c536ff951dc1", "filename": "src/test/run-pass/issue-14421.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fissue-14421.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d51047ded072b412ec18a6f78c1fb80835a477f5/src%2Ftest%2Frun-pass%2Fissue-14421.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14421.rs?ref=d51047ded072b412ec18a6f78c1fb80835a477f5", "patch": "@@ -19,4 +19,3 @@ pub fn main() {\n     let mut an_A: B = make();\n     an_A.foo();\n }\n-"}]}