{"sha": "651373c13d9b9d06af6150bfc897d0f97fc4d919", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1MTM3M2MxM2Q5YjlkMDZhZjYxNTBiZmM4OTdkMGY5N2ZjNGQ5MTk=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-12-03T16:33:06Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-12-03T16:33:06Z"}, "message": "data_structures: remove tuple_slice", "tree": {"sha": "11d7e6aacb5a5e13e18ac78322e578b0123c87f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11d7e6aacb5a5e13e18ac78322e578b0123c87f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/651373c13d9b9d06af6150bfc897d0f97fc4d919", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/651373c13d9b9d06af6150bfc897d0f97fc4d919", "html_url": "https://github.com/rust-lang/rust/commit/651373c13d9b9d06af6150bfc897d0f97fc4d919", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/651373c13d9b9d06af6150bfc897d0f97fc4d919/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a563ceb3b9471acbb827e27686c5cacadc49a032", "url": "https://api.github.com/repos/rust-lang/rust/commits/a563ceb3b9471acbb827e27686c5cacadc49a032", "html_url": "https://github.com/rust-lang/rust/commit/a563ceb3b9471acbb827e27686c5cacadc49a032"}], "stats": {"total": 71, "additions": 0, "deletions": 71}, "files": [{"sha": "8e0ecb70c689637b34181e2531de90e5eaa47d55", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/651373c13d9b9d06af6150bfc897d0f97fc4d919/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/651373c13d9b9d06af6150bfc897d0f97fc4d919/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=651373c13d9b9d06af6150bfc897d0f97fc4d919", "patch": "@@ -81,7 +81,6 @@ pub mod sync;\n pub mod tiny_list;\n pub mod thin_vec;\n pub mod transitive_relation;\n-pub mod tuple_slice;\n pub use ena::unify;\n pub mod vec_linked_list;\n pub mod work_queue;"}, {"sha": "b7c71dd366469eceaac01605efdafd1bfe33935e", "filename": "src/librustc_data_structures/tuple_slice.rs", "status": "removed", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/a563ceb3b9471acbb827e27686c5cacadc49a032/src%2Flibrustc_data_structures%2Ftuple_slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a563ceb3b9471acbb827e27686c5cacadc49a032/src%2Flibrustc_data_structures%2Ftuple_slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Ftuple_slice.rs?ref=a563ceb3b9471acbb827e27686c5cacadc49a032", "patch": "@@ -1,70 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-use std::slice;\n-\n-/// Allows to view uniform tuples as slices\n-pub trait TupleSlice<T> {\n-    fn as_slice(&self) -> &[T];\n-    fn as_mut_slice(&mut self) -> &mut [T];\n-}\n-\n-macro_rules! impl_tuple_slice {\n-    ($tuple_type:ty, $size:expr) => {\n-        impl<T> TupleSlice<T> for $tuple_type {\n-            fn as_slice(&self) -> &[T] {\n-                unsafe {\n-                    let ptr = &self.0 as *const T;\n-                    slice::from_raw_parts(ptr, $size)\n-                }\n-            }\n-\n-            fn as_mut_slice(&mut self) -> &mut [T] {\n-                unsafe {\n-                    let ptr = &mut self.0 as *mut T;\n-                    slice::from_raw_parts_mut(ptr, $size)\n-                }\n-            }\n-        }\n-    }\n-}\n-\n-impl_tuple_slice!((T, T), 2);\n-impl_tuple_slice!((T, T, T), 3);\n-impl_tuple_slice!((T, T, T, T), 4);\n-impl_tuple_slice!((T, T, T, T, T), 5);\n-impl_tuple_slice!((T, T, T, T, T, T), 6);\n-impl_tuple_slice!((T, T, T, T, T, T, T), 7);\n-impl_tuple_slice!((T, T, T, T, T, T, T, T), 8);\n-\n-#[test]\n-fn test_sliced_tuples() {\n-    let t2 = (100, 101);\n-    assert_eq!(t2.as_slice(), &[100, 101]);\n-\n-    let t3 = (102, 103, 104);\n-    assert_eq!(t3.as_slice(), &[102, 103, 104]);\n-\n-    let t4 = (105, 106, 107, 108);\n-    assert_eq!(t4.as_slice(), &[105, 106, 107, 108]);\n-\n-    let t5 = (109, 110, 111, 112, 113);\n-    assert_eq!(t5.as_slice(), &[109, 110, 111, 112, 113]);\n-\n-    let t6 = (114, 115, 116, 117, 118, 119);\n-    assert_eq!(t6.as_slice(), &[114, 115, 116, 117, 118, 119]);\n-\n-    let t7 = (120, 121, 122, 123, 124, 125, 126);\n-    assert_eq!(t7.as_slice(), &[120, 121, 122, 123, 124, 125, 126]);\n-\n-    let t8 = (127, 128, 129, 130, 131, 132, 133, 134);\n-    assert_eq!(t8.as_slice(), &[127, 128, 129, 130, 131, 132, 133, 134]);\n-\n-}"}]}