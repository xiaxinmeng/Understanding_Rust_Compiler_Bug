{"sha": "899d936dee555ef2ac67e68a5017ccb0d1e9a697", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5OWQ5MzZkZWU1NTVlZjJhYzY3ZTY4YTUwMTdjY2IwZDFlOWE2OTc=", "commit": {"author": {"name": "Denys Zariaiev", "email": "denys.zariaiev@gmail.com", "date": "2019-01-29T18:06:42Z"}, "committer": {"name": "Denys Zariaiev", "email": "denys.zariaiev@gmail.com", "date": "2019-01-29T18:06:42Z"}, "message": "Merge NVPTX and WASM test images into `test-various`", "tree": {"sha": "899aafb007701189d3024e9f10542676e1f6f966", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/899aafb007701189d3024e9f10542676e1f6f966"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/899d936dee555ef2ac67e68a5017ccb0d1e9a697", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/899d936dee555ef2ac67e68a5017ccb0d1e9a697", "html_url": "https://github.com/rust-lang/rust/commit/899d936dee555ef2ac67e68a5017ccb0d1e9a697", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/899d936dee555ef2ac67e68a5017ccb0d1e9a697/comments", "author": {"login": "denzp", "id": 747869, "node_id": "MDQ6VXNlcjc0Nzg2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/747869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denzp", "html_url": "https://github.com/denzp", "followers_url": "https://api.github.com/users/denzp/followers", "following_url": "https://api.github.com/users/denzp/following{/other_user}", "gists_url": "https://api.github.com/users/denzp/gists{/gist_id}", "starred_url": "https://api.github.com/users/denzp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denzp/subscriptions", "organizations_url": "https://api.github.com/users/denzp/orgs", "repos_url": "https://api.github.com/users/denzp/repos", "events_url": "https://api.github.com/users/denzp/events{/privacy}", "received_events_url": "https://api.github.com/users/denzp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "denzp", "id": 747869, "node_id": "MDQ6VXNlcjc0Nzg2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/747869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denzp", "html_url": "https://github.com/denzp", "followers_url": "https://api.github.com/users/denzp/followers", "following_url": "https://api.github.com/users/denzp/following{/other_user}", "gists_url": "https://api.github.com/users/denzp/gists{/gist_id}", "starred_url": "https://api.github.com/users/denzp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denzp/subscriptions", "organizations_url": "https://api.github.com/users/denzp/orgs", "repos_url": "https://api.github.com/users/denzp/repos", "events_url": "https://api.github.com/users/denzp/events{/privacy}", "received_events_url": "https://api.github.com/users/denzp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f86a70ea13cbe8b32c6e6ed76b8f57be4d70c68", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f86a70ea13cbe8b32c6e6ed76b8f57be4d70c68", "html_url": "https://github.com/rust-lang/rust/commit/6f86a70ea13cbe8b32c6e6ed76b8f57be4d70c68"}], "stats": {"total": 31, "additions": 16, "deletions": 15}, "files": [{"sha": "a5ae94262c1cab52ab9a8923fc0dd17a0c3f0a41", "filename": "src/ci/docker/test-various/Dockerfile", "status": "renamed", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/899d936dee555ef2ac67e68a5017ccb0d1e9a697/src%2Fci%2Fdocker%2Ftest-various%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/899d936dee555ef2ac67e68a5017ccb0d1e9a697/src%2Fci%2Fdocker%2Ftest-various%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Ftest-various%2FDockerfile?ref=899d936dee555ef2ac67e68a5017ccb0d1e9a697", "patch": "@@ -13,14 +13,16 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   gdb \\\n   xz-utils\n \n+# FIXME: build the `ptx-linker` instead.\n+RUN curl -sL https://github.com/denzp/rust-ptx-linker/releases/download/v0.9.0-alpha.1/rust-ptx-linker.linux64.tar.gz | \\\n+  tar -xzvC /usr/bin\n+\n RUN curl -sL https://nodejs.org/dist/v9.2.0/node-v9.2.0-linux-x64.tar.xz | \\\n-    tar -xJ\n+  tar -xJ\n \n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n-ENV TARGETS=wasm32-unknown-unknown\n-\n ENV RUST_CONFIGURE_ARGS \\\n   --set build.nodejs=/node-v9.2.0-linux-x64/bin/node \\\n   --set rust.lld\n@@ -31,11 +33,18 @@ ENV RUST_CONFIGURE_ARGS \\\n # other contexts as well\n ENV NO_DEBUG_ASSERTIONS=1\n \n-ENV SCRIPT python2.7 /checkout/x.py test --target $TARGETS \\\n+ENV WASM_TARGETS=wasm32-unknown-unknown\n+ENV WASM_SCRIPT python2.7 /checkout/x.py test --target $WASM_TARGETS \\\n   src/test/run-make \\\n   src/test/ui \\\n   src/test/run-pass \\\n   src/test/compile-fail \\\n   src/test/mir-opt \\\n   src/test/codegen-units \\\n-  src/libcore \\\n+  src/libcore\n+\n+ENV NVPTX_TARGETS=nvptx64-nvidia-cuda\n+ENV NVPTX_SCRIPT python2.7 /checkout/x.py test --target $NVPTX_TARGETS \\\n+  src/test/run-make\n+\n+ENV SCRIPT $WASM_SCRIPT && $NVPTX_SCRIPT", "previous_filename": "src/ci/docker/wasm32-unknown/Dockerfile"}, {"sha": "5e65cca9140b7a23475734c2f04fad860719771a", "filename": "src/test/run-make/nvptx-dylib-crate/kernel.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/899d936dee555ef2ac67e68a5017ccb0d1e9a697/src%2Ftest%2Frun-make%2Fnvptx-dylib-crate%2Fkernel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899d936dee555ef2ac67e68a5017ccb0d1e9a697/src%2Ftest%2Frun-make%2Fnvptx-dylib-crate%2Fkernel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fnvptx-dylib-crate%2Fkernel.rs?ref=899d936dee555ef2ac67e68a5017ccb0d1e9a697", "patch": "@@ -12,7 +12,6 @@ extern crate dep;\n // CHECK: .func (.param .b32 func_retval0) wrapping_external_fn\n // CHECK: .func (.param .b32 func_retval0) panicking_external_fn\n // CHECK: .func [[PANIC_HANDLER:_ZN4core9panicking5panic[a-zA-Z0-9]+]]\n-// CHECK: .func [[PANIC_FMT:_ZN4core9panicking9panic_fmt[a-zA-Z0-9]+]]\n \n // CHECK-LABEL: .visible .entry top_kernel(\n #[no_mangle]\n@@ -47,15 +46,8 @@ pub unsafe extern \"ptx-kernel\" fn top_kernel(a: *const u32, b: *mut u32) {\n // CHECK:   [[PANIC_HANDLER]]\n // CHECK: }\n \n-// Verify whether panic handler is present.\n-// CHECK: .func [[PANIC_HANDLER]]()\n-// CHECK: {\n-// CHECK:   call.uni\n-// CHECK:   [[PANIC_FMT]]\n-// CHECK: }\n-\n-// And finally, check the dummy panic formatter.\n-// CHECK: .func [[PANIC_FMT]]()\n+// Verify whether out dummy panic formatter has a correct body.\n+// CHECK: .func [[PANIC_FMT:_ZN4core9panicking9panic_fmt[a-zA-Z0-9]+]]()\n // CHECK: {\n // CHECK:   trap;\n // CHECK: }"}]}