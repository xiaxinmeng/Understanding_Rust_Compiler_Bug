{"sha": "fe2e0976decadb94cecc4ab85abdd02345cc7a64", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMmUwOTc2ZGVjYWRiOTRjZWNjNGFiODVhYmRkMDIzNDVjYzdhNjQ=", "commit": {"author": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-02-28T12:32:34Z"}, "committer": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-02-28T12:32:34Z"}, "message": "Use if-let for UnusedImportBraces.", "tree": {"sha": "ecb3c27ae8fc1bc4ab15a91698995fb9d7eae021", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecb3c27ae8fc1bc4ab15a91698995fb9d7eae021"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe2e0976decadb94cecc4ab85abdd02345cc7a64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe2e0976decadb94cecc4ab85abdd02345cc7a64", "html_url": "https://github.com/rust-lang/rust/commit/fe2e0976decadb94cecc4ab85abdd02345cc7a64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe2e0976decadb94cecc4ab85abdd02345cc7a64/comments", "author": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a7b6b3ee6a85aa60a1733727a4028a690744fdf", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a7b6b3ee6a85aa60a1733727a4028a690744fdf", "html_url": "https://github.com/rust-lang/rust/commit/8a7b6b3ee6a85aa60a1733727a4028a690744fdf"}], "stats": {"total": 27, "additions": 9, "deletions": 18}, "files": [{"sha": "015c841ea1ddf7736a59f8db29e8c6f4eeaf7a5b", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 9, "deletions": 18, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/fe2e0976decadb94cecc4ab85abdd02345cc7a64/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe2e0976decadb94cecc4ab85abdd02345cc7a64/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=fe2e0976decadb94cecc4ab85abdd02345cc7a64", "patch": "@@ -1218,26 +1218,17 @@ impl LintPass for UnusedImportBraces {\n     }\n \n     fn check_item(&mut self, cx: &Context, item: &ast::Item) {\n-        match item.node {\n-            ast::ItemUse(ref view_path) => {\n-                match view_path.node {\n-                    ast::ViewPathList(_, ref items) => {\n-                        if items.len() == 1 {\n-                            match items[0].node {\n-                                ast::PathListIdent {ref name, ..} => {\n-                                    let m = format!(\"braces around {} is unnecessary\",\n-                                                    &token::get_ident(*name));\n-                                    cx.span_lint(UNUSED_IMPORT_BRACES, item.span,\n-                                                 &m[..]);\n-                                },\n-                                _ => ()\n-                            }\n-                        }\n+        if let ast::ItemUse(ref view_path) = item.node {\n+            if let ast::ViewPathList(_, ref items) = view_path.node {\n+                if items.len() == 1 {\n+                    if let ast::PathListIdent {ref name, ..} = items[0].node {\n+                        let m = format!(\"braces around {} is unnecessary\",\n+                                        &token::get_ident(*name));\n+                        cx.span_lint(UNUSED_IMPORT_BRACES, item.span,\n+                                     &m[..]);\n                     }\n-                    _ => ()\n                 }\n-            },\n-            _ => ()\n+            }\n         }\n     }\n }"}]}