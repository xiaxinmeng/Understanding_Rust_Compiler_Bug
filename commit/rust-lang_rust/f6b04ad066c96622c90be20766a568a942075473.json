{"sha": "f6b04ad066c96622c90be20766a568a942075473", "node_id": "C_kwDOAAsO6NoAKGY2YjA0YWQwNjZjOTY2MjJjOTBiZTIwNzY2YTU2OGE5NDIwNzU0NzM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-06-08T11:43:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-08T11:43:18Z"}, "message": "Rollup merge of #97276 - JohnTitor:stabilize-const-intrinsic-copy, r=dtolnay\n\nStabilize `const_intrinsic_copy`\n\nFCP has been completed: https://github.com/rust-lang/rust/issues/80697#issuecomment-1059825428\nCloses #80697", "tree": {"sha": "1ec61643abbb5a3b91d128b0762b8ee09f5eb091", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ec61643abbb5a3b91d128b0762b8ee09f5eb091"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6b04ad066c96622c90be20766a568a942075473", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJioItWCRBK7hj4Ov3rIwAAkRUIAIGTR6pFs7D8BQTa80C9IFYJ\n3KuWb+Lc5Uc2tBC2cMju1iH1yRfSTcwR5knRdFEbHGHpyILbayTfZGTrS977s7VD\nzQGT9I6PERzNMVzDYwIeQSQiSs/SfGbXpjqMC+2GiupXco9LDtJgbNcHpo8vPS1T\n9Zf70MTDCgrlNOWk6toViIzbUPfRlEjSaCUGQnql1KS3IqSBeyFmF1dAoSFNP90L\n2f1myFgISk93fyOBE2ZuqQgTcCrPT321y3GxmMwFe30DYX6vq7H5/LXWROqTTIk8\nCOa3JkLoaHmm1Lui7snsCLId3uDqW0vnsNofQg+Mi6LsmO45e0WE8AXoXvZgRa8=\n=Two3\n-----END PGP SIGNATURE-----\n", "payload": "tree 1ec61643abbb5a3b91d128b0762b8ee09f5eb091\nparent e45d9973b2665897a768312e971b82cc62633103\nparent 2b58e6314a85d2cb484122eee2a2ed73e3003221\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1654688598 +0200\ncommitter GitHub <noreply@github.com> 1654688598 +0200\n\nRollup merge of #97276 - JohnTitor:stabilize-const-intrinsic-copy, r=dtolnay\n\nStabilize `const_intrinsic_copy`\n\nFCP has been completed: https://github.com/rust-lang/rust/issues/80697#issuecomment-1059825428\nCloses #80697\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6b04ad066c96622c90be20766a568a942075473", "html_url": "https://github.com/rust-lang/rust/commit/f6b04ad066c96622c90be20766a568a942075473", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6b04ad066c96622c90be20766a568a942075473/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e45d9973b2665897a768312e971b82cc62633103", "url": "https://api.github.com/repos/rust-lang/rust/commits/e45d9973b2665897a768312e971b82cc62633103", "html_url": "https://github.com/rust-lang/rust/commit/e45d9973b2665897a768312e971b82cc62633103"}, {"sha": "2b58e6314a85d2cb484122eee2a2ed73e3003221", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b58e6314a85d2cb484122eee2a2ed73e3003221", "html_url": "https://github.com/rust-lang/rust/commit/2b58e6314a85d2cb484122eee2a2ed73e3003221"}], "stats": {"total": 41, "additions": 19, "deletions": 22}, "files": [{"sha": "367cdcdcc061c41eb2a809d705a44e8d23708243", "filename": "library/alloc/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f6b04ad066c96622c90be20766a568a942075473/library%2Falloc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6b04ad066c96622c90be20766a568a942075473/library%2Falloc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Flib.rs?ref=f6b04ad066c96622c90be20766a568a942075473", "patch": "@@ -7,7 +7,6 @@\n #![feature(const_convert)]\n #![feature(const_cow_is_borrowed)]\n #![feature(const_heap)]\n-#![feature(const_intrinsic_copy)]\n #![feature(const_mut_refs)]\n #![feature(const_nonnull_slice_from_raw_parts)]\n #![feature(const_ptr_write)]"}, {"sha": "7c10ed65c4c4c2c32f373d999f03acf07851c523", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f6b04ad066c96622c90be20766a568a942075473/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6b04ad066c96622c90be20766a568a942075473/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=f6b04ad066c96622c90be20766a568a942075473", "patch": "@@ -2118,11 +2118,11 @@ pub(crate) fn is_nonoverlapping<T>(src: *const T, dst: *const T, count: usize) -\n /// [`Vec::append`]: ../../std/vec/struct.Vec.html#method.append\n #[doc(alias = \"memcpy\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n+#[rustc_const_stable(feature = \"const_intrinsic_copy\", since = \"1.63.0\")]\n #[inline]\n pub const unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {\n     extern \"rust-intrinsic\" {\n-        #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n+        #[rustc_const_stable(feature = \"const_intrinsic_copy\", since = \"1.63.0\")]\n         pub fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize);\n     }\n \n@@ -2200,11 +2200,11 @@ pub const unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: us\n /// ```\n #[doc(alias = \"memmove\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n+#[rustc_const_stable(feature = \"const_intrinsic_copy\", since = \"1.63.0\")]\n #[inline]\n pub const unsafe fn copy<T>(src: *const T, dst: *mut T, count: usize) {\n     extern \"rust-intrinsic\" {\n-        #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n+        #[rustc_const_stable(feature = \"const_intrinsic_copy\", since = \"1.63.0\")]\n         fn copy<T>(src: *const T, dst: *mut T, count: usize);\n     }\n "}, {"sha": "093c7d298734acb2719fb2a5dbaf68ad2e50a2f2", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f6b04ad066c96622c90be20766a568a942075473/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6b04ad066c96622c90be20766a568a942075473/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=f6b04ad066c96622c90be20766a568a942075473", "patch": "@@ -114,7 +114,6 @@\n #![feature(const_convert)]\n #![feature(const_inherent_unchecked_arith)]\n #![feature(const_int_unchecked_arith)]\n-#![feature(const_intrinsic_copy)]\n #![feature(const_intrinsic_forget)]\n #![feature(const_likely)]\n #![feature(const_maybe_uninit_uninit_array)]"}, {"sha": "74aa0d9c7bcb25740cd717d8c5abe45cf13efa1d", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6b04ad066c96622c90be20766a568a942075473/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6b04ad066c96622c90be20766a568a942075473/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=f6b04ad066c96622c90be20766a568a942075473", "patch": "@@ -1199,7 +1199,7 @@ impl<T: ?Sized> *const T {\n     /// See [`ptr::copy`] for safety concerns and examples.\n     ///\n     /// [`ptr::copy`]: crate::ptr::copy()\n-    #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n+    #[rustc_const_stable(feature = \"const_intrinsic_copy\", since = \"1.63.0\")]\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[inline]\n     pub const unsafe fn copy_to(self, dest: *mut T, count: usize)\n@@ -1218,7 +1218,7 @@ impl<T: ?Sized> *const T {\n     /// See [`ptr::copy_nonoverlapping`] for safety concerns and examples.\n     ///\n     /// [`ptr::copy_nonoverlapping`]: crate::ptr::copy_nonoverlapping()\n-    #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n+    #[rustc_const_stable(feature = \"const_intrinsic_copy\", since = \"1.63.0\")]\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[inline]\n     pub const unsafe fn copy_to_nonoverlapping(self, dest: *mut T, count: usize)"}, {"sha": "8fb0bfbe2e31b59bf8964da0a3d1284d8d485493", "filename": "library/core/src/ptr/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6b04ad066c96622c90be20766a568a942075473/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6b04ad066c96622c90be20766a568a942075473/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs?ref=f6b04ad066c96622c90be20766a568a942075473", "patch": "@@ -1136,7 +1136,7 @@ pub const unsafe fn read<T>(src: *const T) -> T {\n     // We are calling the intrinsics directly to avoid function calls in the generated code\n     // as `intrinsics::copy_nonoverlapping` is a wrapper function.\n     extern \"rust-intrinsic\" {\n-        #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n+        #[rustc_const_stable(feature = \"const_intrinsic_copy\", since = \"1.63.0\")]\n         fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize);\n     }\n \n@@ -1331,7 +1331,7 @@ pub const unsafe fn write<T>(dst: *mut T, src: T) {\n     // We are calling the intrinsics directly to avoid function calls in the generated code\n     // as `intrinsics::copy_nonoverlapping` is a wrapper function.\n     extern \"rust-intrinsic\" {\n-        #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n+        #[rustc_const_stable(feature = \"const_intrinsic_copy\", since = \"1.63.0\")]\n         fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize);\n     }\n "}, {"sha": "b988090f4bc4cecfe7bfd8dc867e97837700e18c", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f6b04ad066c96622c90be20766a568a942075473/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6b04ad066c96622c90be20766a568a942075473/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=f6b04ad066c96622c90be20766a568a942075473", "patch": "@@ -1311,7 +1311,7 @@ impl<T: ?Sized> *mut T {\n     /// See [`ptr::copy`] for safety concerns and examples.\n     ///\n     /// [`ptr::copy`]: crate::ptr::copy()\n-    #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n+    #[rustc_const_stable(feature = \"const_intrinsic_copy\", since = \"1.63.0\")]\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[inline(always)]\n     pub const unsafe fn copy_to(self, dest: *mut T, count: usize)\n@@ -1330,7 +1330,7 @@ impl<T: ?Sized> *mut T {\n     /// See [`ptr::copy_nonoverlapping`] for safety concerns and examples.\n     ///\n     /// [`ptr::copy_nonoverlapping`]: crate::ptr::copy_nonoverlapping()\n-    #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n+    #[rustc_const_stable(feature = \"const_intrinsic_copy\", since = \"1.63.0\")]\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[inline(always)]\n     pub const unsafe fn copy_to_nonoverlapping(self, dest: *mut T, count: usize)\n@@ -1349,7 +1349,7 @@ impl<T: ?Sized> *mut T {\n     /// See [`ptr::copy`] for safety concerns and examples.\n     ///\n     /// [`ptr::copy`]: crate::ptr::copy()\n-    #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n+    #[rustc_const_stable(feature = \"const_intrinsic_copy\", since = \"1.63.0\")]\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[inline(always)]\n     pub const unsafe fn copy_from(self, src: *const T, count: usize)\n@@ -1368,7 +1368,7 @@ impl<T: ?Sized> *mut T {\n     /// See [`ptr::copy_nonoverlapping`] for safety concerns and examples.\n     ///\n     /// [`ptr::copy_nonoverlapping`]: crate::ptr::copy_nonoverlapping()\n-    #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n+    #[rustc_const_stable(feature = \"const_intrinsic_copy\", since = \"1.63.0\")]\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[inline(always)]\n     pub const unsafe fn copy_from_nonoverlapping(self, src: *const T, count: usize)"}, {"sha": "7e9d7d27101802b66e40d1ba1a8e9f10019aa7fc", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f6b04ad066c96622c90be20766a568a942075473/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6b04ad066c96622c90be20766a568a942075473/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=f6b04ad066c96622c90be20766a568a942075473", "patch": "@@ -84,7 +84,6 @@\n #![feature(const_option)]\n #![feature(const_option_ext)]\n #![feature(const_result)]\n-#![feature(const_intrinsic_copy)]\n #![feature(integer_atomics)]\n #![feature(int_roundings)]\n #![feature(slice_group_by)]"}, {"sha": "249bbb5991cc98dc6da6f19feff3bdb06b4bff36", "filename": "src/test/ui/consts/copy-intrinsic.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f6b04ad066c96622c90be20766a568a942075473/src%2Ftest%2Fui%2Fconsts%2Fcopy-intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6b04ad066c96622c90be20766a568a942075473/src%2Ftest%2Fui%2Fconsts%2Fcopy-intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcopy-intrinsic.rs?ref=f6b04ad066c96622c90be20766a568a942075473", "patch": "@@ -2,14 +2,14 @@\n \n // ignore-tidy-linelength\n #![feature(intrinsics, staged_api)]\n-#![feature(const_mut_refs, const_intrinsic_copy)]\n+#![feature(const_mut_refs)]\n use std::mem;\n \n extern \"rust-intrinsic\" {\n-    #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n+    #[rustc_const_stable(feature = \"const_intrinsic_copy\", since = \"1.63.0\")]\n     fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize);\n \n-    #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n+    #[rustc_const_stable(feature = \"const_intrinsic_copy\", since = \"1.63.0\")]\n     fn copy<T>(src: *const T, dst: *mut T, count: usize);\n }\n "}, {"sha": "40ec65d51beecc8b988f0aad150d2354c1eb7c8a", "filename": "src/test/ui/consts/intrinsic_without_const_stab.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6b04ad066c96622c90be20766a568a942075473/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6b04ad066c96622c90be20766a568a942075473/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab.rs?ref=f6b04ad066c96622c90be20766a568a942075473", "patch": "@@ -1,8 +1,8 @@\n-#![feature(intrinsics, staged_api, const_intrinsic_copy)]\n+#![feature(intrinsics, staged_api)]\n #![stable(feature = \"core\", since = \"1.6.0\")]\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n+#[rustc_const_stable(feature = \"const_intrinsic_copy\", since = \"1.63.0\")]\n #[inline]\n pub const unsafe fn copy<T>(src: *const T, dst: *mut T, count: usize) {\n     // Const stability attributes are not inherited from parent items."}, {"sha": "2b0745b3c110ce216ce277904a96d2172d3e3563", "filename": "src/test/ui/consts/intrinsic_without_const_stab_fail.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6b04ad066c96622c90be20766a568a942075473/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab_fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6b04ad066c96622c90be20766a568a942075473/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab_fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab_fail.rs?ref=f6b04ad066c96622c90be20766a568a942075473", "patch": "@@ -1,12 +1,12 @@\n-#![feature(intrinsics, staged_api, const_intrinsic_copy)]\n+#![feature(intrinsics, staged_api)]\n #![stable(feature = \"core\", since = \"1.6.0\")]\n \n extern \"rust-intrinsic\" {\n     fn copy<T>(src: *const T, dst: *mut T, count: usize);\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n+#[rustc_const_stable(feature = \"const_intrinsic_copy\", since = \"1.63.0\")]\n #[inline]\n pub const unsafe fn stuff<T>(src: *const T, dst: *mut T, count: usize) {\n     unsafe { copy(src, dst, count) } //~ ERROR cannot call non-const fn"}]}