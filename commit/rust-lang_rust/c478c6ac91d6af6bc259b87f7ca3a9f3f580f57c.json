{"sha": "c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NzhjNmFjOTFkNmFmNmJjMjU5Yjg3ZjdjYTNhOWYzZjU4MGY1N2M=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-15T22:11:30Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-15T22:11:30Z"}, "message": "rollup merge of #20988: ciphergoth/task-to-thread\n\n\"Tasks\" are no longer a thing in Rust; refer to threads instead. Work is still needed on [threads.md](threads.md).", "tree": {"sha": "c12a0a09f07dcebef07ad1ba5c042895e5b0228b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c12a0a09f07dcebef07ad1ba5c042895e5b0228b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c", "html_url": "https://github.com/rust-lang/rust/commit/c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37d20f256ac8a1715c588a4a46a73961c9db2b18", "url": "https://api.github.com/repos/rust-lang/rust/commits/37d20f256ac8a1715c588a4a46a73961c9db2b18", "html_url": "https://github.com/rust-lang/rust/commit/37d20f256ac8a1715c588a4a46a73961c9db2b18"}, {"sha": "8eba032f52a0b16b39a94267b4884f361e022c36", "url": "https://api.github.com/repos/rust-lang/rust/commits/8eba032f52a0b16b39a94267b4884f361e022c36", "html_url": "https://github.com/rust-lang/rust/commit/8eba032f52a0b16b39a94267b4884f361e022c36"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "aab03add905bb2f691b58f25cf40b147b7f67656", "filename": "src/doc/trpl/SUMMARY.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c/src%2Fdoc%2Ftrpl%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c/src%2Fdoc%2Ftrpl%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2FSUMMARY.md?ref=c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c", "patch": "@@ -26,7 +26,7 @@\n     * [Iterators](iterators.md)\n     * [Generics](generics.md)\n     * [Traits](traits.md)\n-    * [Tasks](tasks.md)\n+    * [Threads](threads.md)\n     * [Error Handling](error-handling.md)\n * [III: Advanced Topics](advanced.md)\n     * [FFI](ffi.md)"}, {"sha": "4b1c92239aed348f633b8837f571b4a6da5565a1", "filename": "src/doc/trpl/error-handling.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c/src%2Fdoc%2Ftrpl%2Ferror-handling.md", "raw_url": "https://github.com/rust-lang/rust/raw/c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c/src%2Fdoc%2Ftrpl%2Ferror-handling.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Ferror-handling.md?ref=c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c", "patch": "@@ -181,7 +181,7 @@ errors that can occur.\n # Non-recoverable errors with `panic!`\n \n In the case of an error that is unexpected and not recoverable, the `panic!`\n-macro will induce a panic. This will crash the current task, and give an error:\n+macro will induce a panic. This will crash the current thread, and give an error:\n \n ```{rust,ignore}\n panic!(\"boom\");\n@@ -190,7 +190,7 @@ panic!(\"boom\");\n gives\n \n ```text\n-task '<main>' panicked at 'boom', hello.rs:2\n+thread '<main>' panicked at 'boom', hello.rs:2\n ```\n \n when you run it."}, {"sha": "e398ebe64db0bf059fe31c5940bbcf9f61a2c1bc", "filename": "src/doc/trpl/ffi.md", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c/src%2Fdoc%2Ftrpl%2Fffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c/src%2Fdoc%2Ftrpl%2Fffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fffi.md?ref=c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c", "patch": "@@ -166,12 +166,12 @@ GitHub](https://github.com/thestinger/rust-snappy).\n \n # Stack management\n \n-Rust tasks by default run on a *large stack*. This is actually implemented as a\n+Rust threads by default run on a *large stack*. This is actually implemented as a\n reserving a large segment of the address space and then lazily mapping in pages\n as they are needed. When calling an external C function, the code is invoked on\n the same stack as the rust stack. This means that there is no extra\n stack-switching mechanism in place because it is assumed that the large stack\n-for the rust task is plenty for the C function to have.\n+for the rust thread is plenty for the C function to have.\n \n A planned future improvement (not yet implemented at the time of this writing)\n is to have a guard page at the end of every rust stack. No rust function will\n@@ -184,8 +184,8 @@ For normal external function usage, this all means that there shouldn't be any\n need for any extra effort on a user's perspective. The C stack naturally\n interleaves with the rust stack, and it's \"large enough\" for both to\n interoperate. If, however, it is determined that a larger stack is necessary,\n-there are appropriate functions in the task spawning API to control the size of\n-the stack of the task which is spawned.\n+there are appropriate functions in the thread spawning API to control the size of\n+the stack of the thread which is spawned.\n \n # Destructors\n \n@@ -320,16 +320,15 @@ In the previously given examples the callbacks are invoked as a direct reaction\n to a function call to the external C library.\n The control over the current thread is switched from Rust to C to Rust for the\n execution of the callback, but in the end the callback is executed on the\n-same thread (and Rust task) that lead called the function which triggered\n-the callback.\n+same thread that called the function which triggered the callback.\n \n Things get more complicated when the external library spawns its own threads\n and invokes callbacks from there.\n In these cases access to Rust data structures inside the callbacks is\n especially unsafe and proper synchronization mechanisms must be used.\n Besides classical synchronization mechanisms like mutexes, one possibility in\n Rust is to use channels (in `std::comm`) to forward data from the C thread\n-that invoked the callback into a Rust task.\n+that invoked the callback into a Rust thread.\n \n If an asynchronous callback targets a special object in the Rust address space\n it is also absolutely necessary that no more callbacks are performed by the"}, {"sha": "a304c60ba1a3ba9f7c805f841adf06bfe747094a", "filename": "src/doc/trpl/testing.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c/src%2Fdoc%2Ftrpl%2Ftesting.md", "raw_url": "https://github.com/rust-lang/rust/raw/c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c/src%2Fdoc%2Ftrpl%2Ftesting.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Ftesting.md?ref=c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c", "patch": "@@ -96,7 +96,7 @@ test it_works ... FAILED\n failures:\n \n ---- it_works stdout ----\n-        task 'it_works' panicked at 'assertion failed: false', /home/steve/tmp/adder/src/lib.rs:3\n+        thread 'it_works' panicked at 'assertion failed: false', /home/steve/tmp/adder/src/lib.rs:3\n \n \n \n@@ -105,7 +105,7 @@ failures:\n \n test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured\n \n-task '<main>' panicked at 'Some tests failed', /home/steve/src/rust/src/libtest/lib.rs:247\n+thread '<main>' panicked at 'Some tests failed', /home/steve/src/rust/src/libtest/lib.rs:247\n ```\n \n Rust indicates that our test failed:"}, {"sha": "4c6a7f1323fb1c492873404fbfca66675b57f117", "filename": "src/doc/trpl/threads.md", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c/src%2Fdoc%2Ftrpl%2Fthreads.md", "raw_url": "https://github.com/rust-lang/rust/raw/c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c/src%2Fdoc%2Ftrpl%2Fthreads.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fthreads.md?ref=c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c", "previous_filename": "src/doc/trpl/tasks.md"}, {"sha": "15f258cf8d48c15066ea7240c1f1bd2e3cd88356", "filename": "src/doc/trpl/unsafe.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c/src%2Fdoc%2Ftrpl%2Funsafe.md", "raw_url": "https://github.com/rust-lang/rust/raw/c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c/src%2Fdoc%2Ftrpl%2Funsafe.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Funsafe.md?ref=c478c6ac91d6af6bc259b87f7ca3a9f3f580f57c", "patch": "@@ -182,7 +182,7 @@ code:\n - implement the `Drop` for resource clean-up via a destructor, and use\n   RAII (Resource Acquisition Is Initialization). This reduces the need\n   for any manual memory management by users, and automatically ensures\n-  that clean-up is always run, even when the task panics.\n+  that clean-up is always run, even when the thread panics.\n - ensure that any data stored behind a raw pointer is destroyed at the\n   appropriate time.\n \n@@ -499,7 +499,7 @@ library, but without it you must define your own.\n The first of these three functions, `stack_exhausted`, is invoked whenever stack\n overflow is detected.  This function has a number of restrictions about how it\n can be called and what it must do, but if the stack limit register is not being\n-maintained then a task always has an \"infinite stack\" and this function\n+maintained then a thread always has an \"infinite stack\" and this function\n shouldn't get triggered.\n \n The second of these three functions, `eh_personality`, is used by the"}]}