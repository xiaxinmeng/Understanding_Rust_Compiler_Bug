{"sha": "c755bbb36c939d8d3adc37cf044c65b5f597dc8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NTViYmIzNmM5MzlkOGQzYWRjMzdjZjA0NGM2NWI1ZjU5N2RjOGM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-28T15:12:58Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-28T15:12:58Z"}, "message": "Add checks to ensure the error_codes checker is \"clean\"", "tree": {"sha": "b11febd1205f15af8903a6bd1bc4390f3c0820ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b11febd1205f15af8903a6bd1bc4390f3c0820ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c755bbb36c939d8d3adc37cf044c65b5f597dc8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c755bbb36c939d8d3adc37cf044c65b5f597dc8c", "html_url": "https://github.com/rust-lang/rust/commit/c755bbb36c939d8d3adc37cf044c65b5f597dc8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c755bbb36c939d8d3adc37cf044c65b5f597dc8c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbf1b1a7193cda17008ab590e06ad28d9924023b", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbf1b1a7193cda17008ab590e06ad28d9924023b", "html_url": "https://github.com/rust-lang/rust/commit/fbf1b1a7193cda17008ab590e06ad28d9924023b"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "02561b37bee1c50fae257cfbe16dad054ee7e431", "filename": "src/tools/tidy/src/error_codes_check.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c755bbb36c939d8d3adc37cf044c65b5f597dc8c/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c755bbb36c939d8d3adc37cf044c65b5f597dc8c/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs?ref=c755bbb36c939d8d3adc37cf044c65b5f597dc8c", "patch": "@@ -114,13 +114,18 @@ fn extract_error_codes(\n                 .expect(\"failed to canonicalize error explanation file path\");\n             match read_to_string(&path) {\n                 Ok(content) => {\n-                    if !IGNORE_EXPLANATION_CHECK.contains(&err_code.as_str())\n-                        && !check_if_error_code_is_test_in_explanation(&content, &err_code)\n-                    {\n+                    let has_test = check_if_error_code_is_test_in_explanation(&content, &err_code);\n+                    if !has_test && !IGNORE_EXPLANATION_CHECK.contains(&err_code.as_str()) {\n                         errors.push(format!(\n                             \"`{}` doesn't use its own error code in compile_fail example\",\n                             path.display(),\n                         ));\n+                    } else if has_test && IGNORE_EXPLANATION_CHECK.contains(&err_code.as_str()) {\n+                        errors.push(format!(\n+                            \"`{}` has a compile_fail example with its own error code, it shouldn't \\\n+                             be listed in IGNORE_EXPLANATION_CHECK!\",\n+                            path.display(),\n+                        ));\n                     }\n                     if check_error_code_explanation(&content, error_codes, err_code) {\n                         errors.push(format!(\n@@ -198,6 +203,11 @@ pub fn check(paths: &[&Path], bad: &mut bool) {\n         for (err_code, nb) in &error_codes {\n             if !*nb && !EXEMPTED_FROM_TEST.contains(&err_code.as_str()) {\n                 errors.push(format!(\"Error code {} needs to have at least one UI test!\", err_code));\n+            } else if *nb && EXEMPTED_FROM_TEST.contains(&err_code.as_str()) {\n+                errors.push(format!(\n+                    \"Error code {} has a UI test, it shouldn't be listed into EXEMPTED_FROM_TEST!\",\n+                    err_code\n+                ));\n             }\n         }\n     }"}]}