{"sha": "5dd62b7d410b25da1b7250e2a6b4cf6a5689bee3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZDYyYjdkNDEwYjI1ZGExYjcyNTBlMmE2YjRjZjZhNTY4OWJlZTM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-08-17T23:06:33Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-08-17T23:06:33Z"}, "message": "Trivial commit to test github AMQP hook", "tree": {"sha": "9ee63b758ad22bfd1bf56c4223afde1c681c0330", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ee63b758ad22bfd1bf56c4223afde1c681c0330"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5dd62b7d410b25da1b7250e2a6b4cf6a5689bee3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5dd62b7d410b25da1b7250e2a6b4cf6a5689bee3", "html_url": "https://github.com/rust-lang/rust/commit/5dd62b7d410b25da1b7250e2a6b4cf6a5689bee3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5dd62b7d410b25da1b7250e2a6b4cf6a5689bee3/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7bf1dd5b0c9d753e2907e7fa09ad3c5015d346e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7bf1dd5b0c9d753e2907e7fa09ad3c5015d346e", "html_url": "https://github.com/rust-lang/rust/commit/b7bf1dd5b0c9d753e2907e7fa09ad3c5015d346e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f7fc27b6b4afe5fc850994879e9831f0c8d1d1ad", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5dd62b7d410b25da1b7250e2a6b4cf6a5689bee3/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dd62b7d410b25da1b7250e2a6b4cf6a5689bee3/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=5dd62b7d410b25da1b7250e2a6b4cf6a5689bee3", "patch": "@@ -6585,8 +6585,8 @@ fn decl_native_fn_and_pair(ccx: &@crate_ctxt, sp: &span, path: &[str],\n     let fcx = new_fn_ctxt(new_local_ctxt(ccx), sp, wrapper_fn);\n     let bcx = new_top_block_ctxt(fcx);\n     let lltop = bcx.llbb;\n-    // Declare the function itself.\n \n+    // Declare the function itself.\n     let fn_type = node_id_type(ccx, id); // NB: has no type params\n \n     let abi = ty::ty_fn_abi(ccx.tcx, fn_type);"}]}