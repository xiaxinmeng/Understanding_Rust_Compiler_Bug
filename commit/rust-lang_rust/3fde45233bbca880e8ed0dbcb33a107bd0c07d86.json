{"sha": "3fde45233bbca880e8ed0dbcb33a107bd0c07d86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZGU0NTIzM2JiY2E4ODBlOGVkMGRiY2IzM2ExMDdiZDBjMDdkODY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-05-19T10:40:59Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-05-19T10:40:59Z"}, "message": "Prefer `drain` over manual implementation of `drain`", "tree": {"sha": "2b9fc42f8e2f430a2876940ccad25e7c2e046d3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b9fc42f8e2f430a2876940ccad25e7c2e046d3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fde45233bbca880e8ed0dbcb33a107bd0c07d86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fde45233bbca880e8ed0dbcb33a107bd0c07d86", "html_url": "https://github.com/rust-lang/rust/commit/3fde45233bbca880e8ed0dbcb33a107bd0c07d86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fde45233bbca880e8ed0dbcb33a107bd0c07d86/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37b2eea7144d022702f0d2eedcc4c776db15d078", "url": "https://api.github.com/repos/rust-lang/rust/commits/37b2eea7144d022702f0d2eedcc4c776db15d078", "html_url": "https://github.com/rust-lang/rust/commit/37b2eea7144d022702f0d2eedcc4c776db15d078"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "e0ac6bf05a74339df451a4bb990e894b127d4bfe", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3fde45233bbca880e8ed0dbcb33a107bd0c07d86/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fde45233bbca880e8ed0dbcb33a107bd0c07d86/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=3fde45233bbca880e8ed0dbcb33a107bd0c07d86", "patch": "@@ -226,7 +226,7 @@ impl<'tcx> Stack {\n             )\n     }\n \n-    /// Find the first write-incompatible item above the given one -- \n+    /// Find the first write-incompatible item above the given one --\n     /// i.e, find the height to which the stack will be truncated when writing to `granting`.\n     fn find_first_write_incompaible(&self, granting: usize) -> usize {\n         let perm = self.borrows[granting].perm;\n@@ -297,8 +297,7 @@ impl<'tcx> Stack {\n             // Remove everything above the write-compatible items, like a proper stack. This makes sure read-only and unique\n             // pointers become invalid on write accesses (ensures F2a, and ensures U2 for write accesses).\n             let first_incompatible_idx = self.find_first_write_incompaible(granting_idx);\n-            while self.borrows.len() > first_incompatible_idx {\n-                let item = self.borrows.pop().unwrap();\n+            for item in self.borrows.drain(first_incompatible_idx..).rev() {\n                 trace!(\"access: popping item {}\", item);\n                 Stack::check_protector(&item, Some(tag), global)?;\n             }\n@@ -340,8 +339,7 @@ impl<'tcx> Stack {\n             )))?;\n \n         // Step 2: Remove all items.  Also checks for protectors.\n-        while self.borrows.len() > 0 {\n-            let item = self.borrows.pop().unwrap();\n+        for item in self.borrows.drain(..).rev() {\n             Stack::check_protector(&item, None, global)?;\n         }\n "}]}