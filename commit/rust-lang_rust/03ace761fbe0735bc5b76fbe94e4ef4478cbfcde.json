{"sha": "03ace761fbe0735bc5b76fbe94e4ef4478cbfcde", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzYWNlNzYxZmJlMDczNWJjNWI3NmZiZTk0ZTRlZjQ0NzhjYmZjZGU=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-22T23:47:58Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-24T15:03:02Z"}, "message": "rustdoc: Turn `JsonRenderer::mod_item_in` into `unreachable!()`\n\nThe JSON renderer no longer gets called on modules.", "tree": {"sha": "6b6be401814452ac99b5ad36db5aa6f6c5ca65b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b6be401814452ac99b5ad36db5aa6f6c5ca65b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03ace761fbe0735bc5b76fbe94e4ef4478cbfcde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03ace761fbe0735bc5b76fbe94e4ef4478cbfcde", "html_url": "https://github.com/rust-lang/rust/commit/03ace761fbe0735bc5b76fbe94e4ef4478cbfcde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03ace761fbe0735bc5b76fbe94e4ef4478cbfcde/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e11a9fa52a3f372dadd6db3d3f2ed7dc2621dcc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e11a9fa52a3f372dadd6db3d3f2ed7dc2621dcc4", "html_url": "https://github.com/rust-lang/rust/commit/e11a9fa52a3f372dadd6db3d3f2ed7dc2621dcc4"}], "stats": {"total": 17, "additions": 2, "deletions": 15}, "files": [{"sha": "96ea4b6c3b8c19665d5e0b1b2977e3d4efd1573b", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/03ace761fbe0735bc5b76fbe94e4ef4478cbfcde/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03ace761fbe0735bc5b76fbe94e4ef4478cbfcde/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=03ace761fbe0735bc5b76fbe94e4ef4478cbfcde", "patch": "@@ -181,21 +181,8 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n         Ok(())\n     }\n \n-    fn mod_item_in(&mut self, item: &clean::Item) -> Result<(), Error> {\n-        use clean::types::ItemKind::*;\n-        if let ModuleItem(m) = &*item.kind {\n-            for item in &m.items {\n-                match &*item.kind {\n-                    // These don't have names so they don't get added to the output by default\n-                    ImportItem(_) => self.item(item.clone()).unwrap(),\n-                    ExternCrateItem { .. } => self.item(item.clone()).unwrap(),\n-                    ImplItem(i) => i.items.iter().for_each(|i| self.item(i.clone()).unwrap()),\n-                    _ => {}\n-                }\n-            }\n-        }\n-        self.item(item.clone()).unwrap();\n-        Ok(())\n+    fn mod_item_in(&mut self, _item: &clean::Item) -> Result<(), Error> {\n+        unreachable!(\"RUN_ON_MODULE = false should never call mod_item_in\")\n     }\n \n     fn after_krate(&mut self) -> Result<(), Error> {"}]}