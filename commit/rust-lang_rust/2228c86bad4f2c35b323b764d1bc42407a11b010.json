{"sha": "2228c86bad4f2c35b323b764d1bc42407a11b010", "node_id": "C_kwDOAAsO6NoAKDIyMjhjODZiYWQ0ZjJjMzViMzIzYjc2NGQxYmM0MjQwN2ExMWIwMTA", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-02-11T05:45:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-11T05:45:56Z"}, "message": "Rollup merge of #107857 - GuillaumeGomez:ui-test-impl-projections, r=oli-obk\n\nAdd ui test for implementation on projection\n\nThe error in full can be seen in https://github.com/rust-lang/rust/pull/107263 and is part of why the PR is blocked (it still requires the approval from the team for supporting it).\n\nr? ``@oli-obk``", "tree": {"sha": "6b3551ae57d34dc096a0789508fc85c592fe37ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b3551ae57d34dc096a0789508fc85c592fe37ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2228c86bad4f2c35b323b764d1bc42407a11b010", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj5yuUCRBK7hj4Ov3rIwAAyScIAGYGtFoQIL18SrkJccxD3I/E\nZeqVA1hLczVbtV76iAgk2U0bgBhmu7hOzdsdxujC4qPpmrAbM2e9gkvQMl3KgRUU\n4WEbz+lwOaWvMNOCxJKGpEz0ZzaukSKHlvGnuFk5Kw2wOPYvNMKEoqYC+RryagZP\nrkc48MbxGm5Byp1vY1gNK3a20INf5uozSU6nKoOkIGTJaY19+v02BSiSq8dV1YqZ\nvnCTn2zyUlEgOT6lgB+1ekqwJY682cdCBtdRPCd3M2EdDU+kGZn4xVUxldg2ZXTM\nj7Iv5aZKYmRwRuOFPFvpscHEQKBI6FiiyoklBgEa3QkvszPLFcRubnE35AU7Big=\n=EwMo\n-----END PGP SIGNATURE-----\n", "payload": "tree 6b3551ae57d34dc096a0789508fc85c592fe37ea\nparent 27454012c1c930e9996020fc7140f95576ea0697\nparent a03da2bdeb7c7b466b7b4a9b361d1d19c171a589\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1676094356 +0530\ncommitter GitHub <noreply@github.com> 1676094356 +0530\n\nRollup merge of #107857 - GuillaumeGomez:ui-test-impl-projections, r=oli-obk\n\nAdd ui test for implementation on projection\n\nThe error in full can be seen in https://github.com/rust-lang/rust/pull/107263 and is part of why the PR is blocked (it still requires the approval from the team for supporting it).\n\nr? ``@oli-obk``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2228c86bad4f2c35b323b764d1bc42407a11b010", "html_url": "https://github.com/rust-lang/rust/commit/2228c86bad4f2c35b323b764d1bc42407a11b010", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2228c86bad4f2c35b323b764d1bc42407a11b010/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27454012c1c930e9996020fc7140f95576ea0697", "url": "https://api.github.com/repos/rust-lang/rust/commits/27454012c1c930e9996020fc7140f95576ea0697", "html_url": "https://github.com/rust-lang/rust/commit/27454012c1c930e9996020fc7140f95576ea0697"}, {"sha": "a03da2bdeb7c7b466b7b4a9b361d1d19c171a589", "url": "https://api.github.com/repos/rust-lang/rust/commits/a03da2bdeb7c7b466b7b4a9b361d1d19c171a589", "html_url": "https://github.com/rust-lang/rust/commit/a03da2bdeb7c7b466b7b4a9b361d1d19c171a589"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "f1ce317b3f78b584784ba3c1f6a09dd6dcb3c66a", "filename": "tests/ui/const-generics/wrong-normalization.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2228c86bad4f2c35b323b764d1bc42407a11b010/tests%2Fui%2Fconst-generics%2Fwrong-normalization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2228c86bad4f2c35b323b764d1bc42407a11b010/tests%2Fui%2Fconst-generics%2Fwrong-normalization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fwrong-normalization.rs?ref=2228c86bad4f2c35b323b764d1bc42407a11b010", "patch": "@@ -0,0 +1,19 @@\n+// This test ensures that if implementation on projections is supported,\n+// it doesn't end in very weird cycle error.\n+\n+#![crate_type = \"lib\"]\n+\n+pub trait Identity {\n+    type Identity: ?Sized;\n+}\n+\n+impl<T: ?Sized> Identity for T {\n+    type Identity = Self;\n+}\n+\n+pub struct I8<const F: i8>;\n+\n+impl <I8<{i8::MIN}> as Identity>::Identity {\n+//~^ ERROR no nominal type found for inherent implementation\n+    pub fn foo(&self) {}\n+}"}, {"sha": "fb806bdb1e7473996deef0ae86684acf15ace445", "filename": "tests/ui/const-generics/wrong-normalization.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2228c86bad4f2c35b323b764d1bc42407a11b010/tests%2Fui%2Fconst-generics%2Fwrong-normalization.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2228c86bad4f2c35b323b764d1bc42407a11b010/tests%2Fui%2Fconst-generics%2Fwrong-normalization.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fwrong-normalization.stderr?ref=2228c86bad4f2c35b323b764d1bc42407a11b010", "patch": "@@ -0,0 +1,11 @@\n+error[E0118]: no nominal type found for inherent implementation\n+  --> $DIR/wrong-normalization.rs:16:6\n+   |\n+LL | impl <I8<{i8::MIN}> as Identity>::Identity {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl requires a nominal type\n+   |\n+   = note: either implement a trait on it or create a newtype to wrap it instead\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0118`."}]}