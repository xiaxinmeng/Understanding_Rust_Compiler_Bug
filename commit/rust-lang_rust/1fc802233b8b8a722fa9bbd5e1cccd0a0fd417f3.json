{"sha": "1fc802233b8b8a722fa9bbd5e1cccd0a0fd417f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmYzgwMjIzM2I4YjhhNzIyZmE5YmJkNWUxY2NjZDBhMGZkNDE3ZjM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-06T02:10:45Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-06T02:10:45Z"}, "message": "Long lines", "tree": {"sha": "844eb766e3c9376695a8d6017735a4c64a15936f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/844eb766e3c9376695a8d6017735a4c64a15936f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fc802233b8b8a722fa9bbd5e1cccd0a0fd417f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fc802233b8b8a722fa9bbd5e1cccd0a0fd417f3", "html_url": "https://github.com/rust-lang/rust/commit/1fc802233b8b8a722fa9bbd5e1cccd0a0fd417f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fc802233b8b8a722fa9bbd5e1cccd0a0fd417f3/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f3cc01487ff4c49f6a72725ae47533da06835db", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f3cc01487ff4c49f6a72725ae47533da06835db", "html_url": "https://github.com/rust-lang/rust/commit/4f3cc01487ff4c49f6a72725ae47533da06835db"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "f65ac09227596affa5b2556518370e66e7952b1e", "filename": "src/librustc/middle/trans/inline.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1fc802233b8b8a722fa9bbd5e1cccd0a0fd417f3/src%2Flibrustc%2Fmiddle%2Ftrans%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fc802233b8b8a722fa9bbd5e1cccd0a0fd417f3/src%2Flibrustc%2Fmiddle%2Ftrans%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Finline.rs?ref=1fc802233b8b8a722fa9bbd5e1cccd0a0fd417f3", "patch": "@@ -86,7 +86,8 @@ fn maybe_instantiate_inline(ccx: @crate_ctxt, fn_id: ast::def_id,\n                 let self_kind = match mth.self_ty.node {\n                     ast::sty_static => no_self,\n                     _ => {\n-                        let self_ty = ty::node_id_to_type(ccx.tcx, mth.self_id);\n+                        let self_ty = ty::node_id_to_type(ccx.tcx,\n+                                                          mth.self_id);\n                         debug!(\"calling inline trans_fn with self_ty %s\",\n                                ty_to_str(ccx.tcx, self_ty));\n                         match mth.self_ty.node {"}]}