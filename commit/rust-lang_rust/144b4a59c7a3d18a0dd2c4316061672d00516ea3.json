{"sha": "144b4a59c7a3d18a0dd2c4316061672d00516ea3", "node_id": "C_kwDOAAsO6NoAKDE0NGI0YTU5YzdhM2QxOGEwZGQyYzQzMTYwNjE2NzJkMDA1MTZlYTM", "commit": {"author": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2022-01-28T14:58:14Z"}, "committer": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2022-02-05T13:05:08Z"}, "message": "Add `explicit_write` suggestions for `write!`s with format args", "tree": {"sha": "917b3bd0e2c0e796bd01fbabaf3736f758f4707e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/917b3bd0e2c0e796bd01fbabaf3736f758f4707e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/144b4a59c7a3d18a0dd2c4316061672d00516ea3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/144b4a59c7a3d18a0dd2c4316061672d00516ea3", "html_url": "https://github.com/rust-lang/rust/commit/144b4a59c7a3d18a0dd2c4316061672d00516ea3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/144b4a59c7a3d18a0dd2c4316061672d00516ea3/comments", "author": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bae06d73c8c53e5b0aabc90203f808932d2b021", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bae06d73c8c53e5b0aabc90203f808932d2b021", "html_url": "https://github.com/rust-lang/rust/commit/4bae06d73c8c53e5b0aabc90203f808932d2b021"}], "stats": {"total": 126, "additions": 75, "deletions": 51}, "files": [{"sha": "3e2217c28da3a0dee72c6d62b567fe6fb3014436", "filename": "clippy_lints/src/explicit_write.rs", "status": "modified", "additions": 18, "deletions": 23, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/144b4a59c7a3d18a0dd2c4316061672d00516ea3/clippy_lints%2Fsrc%2Fexplicit_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/144b4a59c7a3d18a0dd2c4316061672d00516ea3/clippy_lints%2Fsrc%2Fexplicit_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexplicit_write.rs?ref=144b4a59c7a3d18a0dd2c4316061672d00516ea3", "patch": "@@ -1,5 +1,6 @@\n-use clippy_utils::diagnostics::{span_lint_and_help, span_lint_and_sugg};\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::macros::FormatArgsExpn;\n+use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::{is_expn_of, match_function_call, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n@@ -79,28 +80,22 @@ impl<'tcx> LateLintPass<'tcx> for ExplicitWrite {\n                         \"print\".into(),\n                     )\n                 };\n-                let msg = format!(\"use of `{}.unwrap()`\", used);\n-                if let [write_output] = *format_args.format_string_parts {\n-                    let mut write_output = write_output.to_string();\n-                    if write_output.ends_with('\\n') {\n-                        write_output.pop();\n-                    }\n-\n-                    let sugg = format!(\"{}{}!(\\\"{}\\\")\", prefix, sugg_mac, write_output.escape_default());\n-                    span_lint_and_sugg(\n-                        cx,\n-                        EXPLICIT_WRITE,\n-                        expr.span,\n-                        &msg,\n-                        \"try this\",\n-                        sugg,\n-                        Applicability::MachineApplicable\n-                    );\n-                } else {\n-                    // We don't have a proper suggestion\n-                    let help = format!(\"consider using `{}{}!` instead\", prefix, sugg_mac);\n-                    span_lint_and_help(cx, EXPLICIT_WRITE, expr.span, &msg, None, &help);\n-                }\n+                let mut applicability = Applicability::MachineApplicable;\n+                let inputs_snippet = snippet_with_applicability(\n+                    cx,\n+                    format_args.inputs_span(),\n+                    \"..\",\n+                    &mut applicability,\n+                );\n+                span_lint_and_sugg(\n+                    cx,\n+                    EXPLICIT_WRITE,\n+                    expr.span,\n+                    &format!(\"use of `{}.unwrap()`\", used),\n+                    \"try this\",\n+                    format!(\"{}{}!({})\", prefix, sugg_mac, inputs_snippet),\n+                    applicability,\n+                )\n             }\n         }\n     }"}, {"sha": "74d0e5290282aff21105c871e8ba6223477e862b", "filename": "tests/ui/explicit_write.fixed", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/144b4a59c7a3d18a0dd2c4316061672d00516ea3/tests%2Fui%2Fexplicit_write.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/144b4a59c7a3d18a0dd2c4316061672d00516ea3/tests%2Fui%2Fexplicit_write.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_write.fixed?ref=144b4a59c7a3d18a0dd2c4316061672d00516ea3", "patch": "@@ -10,6 +10,12 @@ fn stderr() -> String {\n     String::new()\n }\n \n+macro_rules! one {\n+    () => {\n+        1\n+    };\n+}\n+\n fn main() {\n     // these should warn\n     {\n@@ -24,6 +30,12 @@ fn main() {\n         // including newlines\n         println!(\"test\\ntest\");\n         eprintln!(\"test\\ntest\");\n+\n+        let value = 1;\n+        eprintln!(\"with {}\", value);\n+        eprintln!(\"with {} {}\", 2, value);\n+        eprintln!(\"with {value}\");\n+        eprintln!(\"macro arg {}\", one!());\n     }\n     // these should not warn, different destination\n     {"}, {"sha": "e7a698d3e012d35049febcde9222b519904e06e8", "filename": "tests/ui/explicit_write.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/144b4a59c7a3d18a0dd2c4316061672d00516ea3/tests%2Fui%2Fexplicit_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/144b4a59c7a3d18a0dd2c4316061672d00516ea3/tests%2Fui%2Fexplicit_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_write.rs?ref=144b4a59c7a3d18a0dd2c4316061672d00516ea3", "patch": "@@ -10,6 +10,12 @@ fn stderr() -> String {\n     String::new()\n }\n \n+macro_rules! one {\n+    () => {\n+        1\n+    };\n+}\n+\n fn main() {\n     // these should warn\n     {\n@@ -24,6 +30,12 @@ fn main() {\n         // including newlines\n         writeln!(std::io::stdout(), \"test\\ntest\").unwrap();\n         writeln!(std::io::stderr(), \"test\\ntest\").unwrap();\n+\n+        let value = 1;\n+        writeln!(std::io::stderr(), \"with {}\", value).unwrap();\n+        writeln!(std::io::stderr(), \"with {} {}\", 2, value).unwrap();\n+        writeln!(std::io::stderr(), \"with {value}\").unwrap();\n+        writeln!(std::io::stderr(), \"macro arg {}\", one!()).unwrap();\n     }\n     // these should not warn, different destination\n     {"}, {"sha": "29ae0cdece2499e6466a957b8409f1faf007397b", "filename": "tests/ui/explicit_write.stderr", "status": "modified", "additions": 33, "deletions": 9, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/144b4a59c7a3d18a0dd2c4316061672d00516ea3/tests%2Fui%2Fexplicit_write.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/144b4a59c7a3d18a0dd2c4316061672d00516ea3/tests%2Fui%2Fexplicit_write.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_write.stderr?ref=144b4a59c7a3d18a0dd2c4316061672d00516ea3", "patch": "@@ -1,52 +1,76 @@\n error: use of `write!(stdout(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:17:9\n+  --> $DIR/explicit_write.rs:23:9\n    |\n LL |         write!(std::io::stdout(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `print!(\"test\")`\n    |\n    = note: `-D clippy::explicit-write` implied by `-D warnings`\n \n error: use of `write!(stderr(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:18:9\n+  --> $DIR/explicit_write.rs:24:9\n    |\n LL |         write!(std::io::stderr(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprint!(\"test\")`\n \n error: use of `writeln!(stdout(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:19:9\n+  --> $DIR/explicit_write.rs:25:9\n    |\n LL |         writeln!(std::io::stdout(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `println!(\"test\")`\n \n error: use of `writeln!(stderr(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:20:9\n+  --> $DIR/explicit_write.rs:26:9\n    |\n LL |         writeln!(std::io::stderr(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"test\")`\n \n error: use of `stdout().write_fmt(...).unwrap()`\n-  --> $DIR/explicit_write.rs:21:9\n+  --> $DIR/explicit_write.rs:27:9\n    |\n LL |         std::io::stdout().write_fmt(format_args!(\"test\")).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `print!(\"test\")`\n \n error: use of `stderr().write_fmt(...).unwrap()`\n-  --> $DIR/explicit_write.rs:22:9\n+  --> $DIR/explicit_write.rs:28:9\n    |\n LL |         std::io::stderr().write_fmt(format_args!(\"test\")).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprint!(\"test\")`\n \n error: use of `writeln!(stdout(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:25:9\n+  --> $DIR/explicit_write.rs:31:9\n    |\n LL |         writeln!(std::io::stdout(), \"test/ntest\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `println!(\"test/ntest\")`\n \n error: use of `writeln!(stderr(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:26:9\n+  --> $DIR/explicit_write.rs:32:9\n    |\n LL |         writeln!(std::io::stderr(), \"test/ntest\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"test/ntest\")`\n \n-error: aborting due to 8 previous errors\n+error: use of `writeln!(stderr(), ...).unwrap()`\n+  --> $DIR/explicit_write.rs:35:9\n+   |\n+LL |         writeln!(std::io::stderr(), \"with {}\", value).unwrap();\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"with {}\", value)`\n+\n+error: use of `writeln!(stderr(), ...).unwrap()`\n+  --> $DIR/explicit_write.rs:36:9\n+   |\n+LL |         writeln!(std::io::stderr(), \"with {} {}\", 2, value).unwrap();\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"with {} {}\", 2, value)`\n+\n+error: use of `writeln!(stderr(), ...).unwrap()`\n+  --> $DIR/explicit_write.rs:37:9\n+   |\n+LL |         writeln!(std::io::stderr(), \"with {value}\").unwrap();\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"with {value}\")`\n+\n+error: use of `writeln!(stderr(), ...).unwrap()`\n+  --> $DIR/explicit_write.rs:38:9\n+   |\n+LL |         writeln!(std::io::stderr(), \"macro arg {}\", one!()).unwrap();\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"macro arg {}\", one!())`\n+\n+error: aborting due to 12 previous errors\n "}, {"sha": "f21e8ef935bd02f71fb0cab1c48983afcbe06589", "filename": "tests/ui/explicit_write_non_rustfix.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4bae06d73c8c53e5b0aabc90203f808932d2b021/tests%2Fui%2Fexplicit_write_non_rustfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bae06d73c8c53e5b0aabc90203f808932d2b021/tests%2Fui%2Fexplicit_write_non_rustfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_write_non_rustfix.rs?ref=4bae06d73c8c53e5b0aabc90203f808932d2b021", "patch": "@@ -1,8 +0,0 @@\n-#![allow(unused_imports, clippy::blacklisted_name)]\n-#![warn(clippy::explicit_write)]\n-\n-fn main() {\n-    use std::io::Write;\n-    let bar = \"bar\";\n-    writeln!(std::io::stderr(), \"foo {}\", bar).unwrap();\n-}"}, {"sha": "b94ec6403ddcea3c63bfd188bbd6914679581c70", "filename": "tests/ui/explicit_write_non_rustfix.stderr", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4bae06d73c8c53e5b0aabc90203f808932d2b021/tests%2Fui%2Fexplicit_write_non_rustfix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bae06d73c8c53e5b0aabc90203f808932d2b021/tests%2Fui%2Fexplicit_write_non_rustfix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_write_non_rustfix.stderr?ref=4bae06d73c8c53e5b0aabc90203f808932d2b021", "patch": "@@ -1,11 +0,0 @@\n-error: use of `writeln!(stderr(), ...).unwrap()`\n-  --> $DIR/explicit_write_non_rustfix.rs:7:5\n-   |\n-LL |     writeln!(std::io::stderr(), \"foo {}\", bar).unwrap();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `-D clippy::explicit-write` implied by `-D warnings`\n-   = help: consider using `eprintln!` instead\n-\n-error: aborting due to previous error\n-"}]}