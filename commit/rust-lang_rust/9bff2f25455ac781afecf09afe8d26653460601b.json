{"sha": "9bff2f25455ac781afecf09afe8d26653460601b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliZmYyZjI1NDU1YWM3ODFhZmVjZjA5YWZlOGQyNjY1MzQ2MDYwMWI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-30T05:17:11Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-30T05:17:11Z"}, "message": "core: Add each, eachi to vec::extensions", "tree": {"sha": "f860b24dc92612d9cd072bd4ed567c7ca82b032c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f860b24dc92612d9cd072bd4ed567c7ca82b032c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9bff2f25455ac781afecf09afe8d26653460601b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9bff2f25455ac781afecf09afe8d26653460601b", "html_url": "https://github.com/rust-lang/rust/commit/9bff2f25455ac781afecf09afe8d26653460601b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9bff2f25455ac781afecf09afe8d26653460601b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d54defce478c0ffc01ab1199069623624ad2788", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d54defce478c0ffc01ab1199069623624ad2788", "html_url": "https://github.com/rust-lang/rust/commit/5d54defce478c0ffc01ab1199069623624ad2788"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "20f6323c9cf5f5ac10a77174f0070c3974b43b4f", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9bff2f25455ac781afecf09afe8d26653460601b/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bff2f25455ac781afecf09afe8d26653460601b/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=9bff2f25455ac781afecf09afe8d26653460601b", "patch": "@@ -964,6 +964,12 @@ impl extensions<T> for [const T] {\n     #[doc = \"Returns the number of elements that are equal to a given value\"]\n     #[inline]\n     fn count(x: T) -> uint { count(self, x) }\n+    #[doc = \"Iterates over a vector, with option to break\"]\n+    #[inline]\n+    fn each<T>(f: fn(T) -> bool) { each(self, f) }\n+    #[doc = \"Iterates over a vector's elements and indices\"]\n+    #[inline]\n+    fn eachi<T>(f: fn(uint, T) -> bool) { eachi(self, f) }\n     #[doc = \"Reduce a vector from left to right\"]\n     #[inline]\n     fn foldl<U: copy>(z: U, p: fn(U, T) -> U) -> U { foldl(z, self, p) }"}]}