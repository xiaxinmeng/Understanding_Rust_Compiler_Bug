{"sha": "4722e6d491a29bdb077fc01aa8c5bdc734282c69", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3MjJlNmQ0OTFhMjliZGIwNzdmYzAxYWE4YzViZGM3MzQyODJjNjk=", "commit": {"author": {"name": "Aleksei Sidorov", "email": "aleksei.sidorov@xdev.re", "date": "2019-06-24T10:02:20Z"}, "committer": {"name": "Aleksei Sidorov", "email": "aleksei.sidorov@xdev.re", "date": "2019-06-24T10:02:20Z"}, "message": "Introduce cargo-watch.check-command", "tree": {"sha": "681b4fd62ce9b2166180713236254a8a25f2b60f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/681b4fd62ce9b2166180713236254a8a25f2b60f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4722e6d491a29bdb077fc01aa8c5bdc734282c69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4722e6d491a29bdb077fc01aa8c5bdc734282c69", "html_url": "https://github.com/rust-lang/rust/commit/4722e6d491a29bdb077fc01aa8c5bdc734282c69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4722e6d491a29bdb077fc01aa8c5bdc734282c69/comments", "author": null, "committer": null, "parents": [{"sha": "7d79be32801036c39507fe96f87ed316e3934662", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d79be32801036c39507fe96f87ed316e3934662", "html_url": "https://github.com/rust-lang/rust/commit/7d79be32801036c39507fe96f87ed316e3934662"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "e4fc682df92faedd081d8213a9788c3ff7a04039", "filename": "editors/code/package.json", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4722e6d491a29bdb077fc01aa8c5bdc734282c69/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/4722e6d491a29bdb077fc01aa8c5bdc734282c69/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=4722e6d491a29bdb077fc01aa8c5bdc734282c69", "patch": "@@ -203,9 +203,14 @@\n                 },\n                 \"rust-analyzer.cargo-watch.check-arguments\": {\n                     \"type\": \"string\",\n-                    \"description\": \"`cargo-watch` check arguments. (e.g: `--features=\\\"shumway,pdf\\\"` will run as `cargo watch -x \\\"check --features=\\\"shumway,pdf\\\"\\\"` )\",\n+                    \"description\": \"`cargo-watch` arguments. (e.g: `--features=\\\"shumway,pdf\\\"` will run as `cargo watch -x \\\"check --features=\\\"shumway,pdf\\\"\\\"` )\",\n                     \"default\": \"\"\n                 },\n+                \"rust-analyzer.cargo-watch.check-command\": {\n+                    \"type\": \"string\",\n+                    \"description\": \"`cargo-watch` command. (e.g: `clippy` will run as `cargo watch -x clippy` )\",\n+                    \"default\": \"check\"                    \n+                },\n                 \"rust-analyzer.trace.server\": {\n                     \"type\": \"string\",\n                     \"scope\": \"window\","}, {"sha": "db92e03f4cc5f2db739ffe56986e77c19a0e59ea", "filename": "editors/code/src/commands/cargo_watch.ts", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4722e6d491a29bdb077fc01aa8c5bdc734282c69/editors%2Fcode%2Fsrc%2Fcommands%2Fcargo_watch.ts", "raw_url": "https://github.com/rust-lang/rust/raw/4722e6d491a29bdb077fc01aa8c5bdc734282c69/editors%2Fcode%2Fsrc%2Fcommands%2Fcargo_watch.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fcargo_watch.ts?ref=4722e6d491a29bdb077fc01aa8c5bdc734282c69", "patch": "@@ -43,7 +43,7 @@ export class CargoWatchProvider implements vscode.Disposable {\n         this.diagnosticCollection = vscode.languages.createDiagnosticCollection(\n             'rustc'\n         );\n-        this.statusDisplay = new StatusDisplay();\n+        this.statusDisplay = new StatusDisplay(Server.config.cargoWatchOptions.checkCommand);\n         this.outputChannel = vscode.window.createOutputChannel(\n             'Cargo Watch Trace'\n         );\n@@ -57,7 +57,9 @@ export class CargoWatchProvider implements vscode.Disposable {\n             return;\n         }\n \n-        let args = 'check --all-targets --message-format json';\n+        let command = Server.config.cargoWatchOptions.checkCommand;\n+\n+        let args = command + ' --all-targets --message-format json';\n         if (Server.config.cargoWatchOptions.checkArguments.length > 0) {\n             // Excape the double quote string:\n             args += ' ' + Server.config.cargoWatchOptions.checkArguments;"}, {"sha": "91bc7195b2ea76091b9eebd0a115034ea9c09951", "filename": "editors/code/src/commands/watch_status.ts", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4722e6d491a29bdb077fc01aa8c5bdc734282c69/editors%2Fcode%2Fsrc%2Fcommands%2Fwatch_status.ts", "raw_url": "https://github.com/rust-lang/rust/raw/4722e6d491a29bdb077fc01aa8c5bdc734282c69/editors%2Fcode%2Fsrc%2Fcommands%2Fwatch_status.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fwatch_status.ts?ref=4722e6d491a29bdb077fc01aa8c5bdc734282c69", "patch": "@@ -7,13 +7,15 @@ export class StatusDisplay implements vscode.Disposable {\n \n     private i = 0;\n     private statusBarItem: vscode.StatusBarItem;\n+    private command: string;\n     private timer?: NodeJS.Timeout;\n \n-    constructor() {\n+    constructor(command: string) {\n         this.statusBarItem = vscode.window.createStatusBarItem(\n             vscode.StatusBarAlignment.Left,\n             10\n         );\n+        this.command = command;\n         this.statusBarItem.hide();\n     }\n \n@@ -24,11 +26,11 @@ export class StatusDisplay implements vscode.Disposable {\n             this.timer ||\n             setInterval(() => {\n                 if (this.packageName) {\n-                    this.statusBarItem!.text = `cargo check [${\n+                    this.statusBarItem!.text = `cargo ${this.command} [${\n                         this.packageName\n                     }] ${this.frame()}`;\n                 } else {\n-                    this.statusBarItem!.text = `cargo check ${this.frame()}`;\n+                    this.statusBarItem!.text = `cargo ${this.command} ${this.frame()}`;\n                 }\n             }, 300);\n "}, {"sha": "85366fc341e34314234629290046855b89d7e739", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4722e6d491a29bdb077fc01aa8c5bdc734282c69/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/4722e6d491a29bdb077fc01aa8c5bdc734282c69/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=4722e6d491a29bdb077fc01aa8c5bdc734282c69", "patch": "@@ -1,6 +1,7 @@\n import * as vscode from 'vscode';\n \n import { Server } from './server';\n+import { strict } from 'assert';\n \n const RA_LSP_DEBUG = process.env.__RA_LSP_SERVER_DEBUG;\n \n@@ -10,6 +11,7 @@ export type CargoWatchTraceOptions = 'off' | 'error' | 'verbose';\n export interface CargoWatchOptions {\n     enableOnStartup: CargoWatchStartupOptions;\n     checkArguments: string;\n+    checkCommand: string;\n     trace: CargoWatchTraceOptions;\n }\n \n@@ -23,7 +25,8 @@ export class Config {\n     public cargoWatchOptions: CargoWatchOptions = {\n         enableOnStartup: 'ask',\n         trace: 'off',\n-        checkArguments: ''\n+        checkArguments: '',\n+        checkCommand: ''\n     };\n \n     private prevEnhancedTyping: null | boolean = null;\n@@ -110,6 +113,14 @@ export class Config {\n                 ''\n             );\n         }\n+\n+        if (config.has('cargo-watch.check-command')) {\n+            this.cargoWatchOptions.checkCommand = config.get<string>(\n+                'cargo-watch.check-command', \n+                ''\n+            );\n+        }\n+\n         if (config.has('lruCapacity')) {\n             this.lruCapacity = config.get('lruCapacity') as number;\n         }"}]}