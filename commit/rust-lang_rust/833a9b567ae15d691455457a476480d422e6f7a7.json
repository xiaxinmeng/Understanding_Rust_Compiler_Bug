{"sha": "833a9b567ae15d691455457a476480d422e6f7a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzM2E5YjU2N2FlMTVkNjkxNDU1NDU3YTQ3NjQ4MGQ0MjJlNmY3YTc=", "commit": {"author": {"name": "42triangles", "email": "dodo2998@gmail.com", "date": "2017-09-11T06:13:57Z"}, "committer": {"name": "42triangles", "email": "dodo2998@gmail.com", "date": "2017-09-11T06:13:57Z"}, "message": "Added an example for `std::str::into_boxed_bytes()`", "tree": {"sha": "169b9642f4bde4ea60ec7ed59ac0dc8217e5f075", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/169b9642f4bde4ea60ec7ed59ac0dc8217e5f075"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/833a9b567ae15d691455457a476480d422e6f7a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/833a9b567ae15d691455457a476480d422e6f7a7", "html_url": "https://github.com/rust-lang/rust/commit/833a9b567ae15d691455457a476480d422e6f7a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/833a9b567ae15d691455457a476480d422e6f7a7/comments", "author": {"login": "CodenameLambda", "id": 11910993, "node_id": "MDQ6VXNlcjExOTEwOTkz", "avatar_url": "https://avatars.githubusercontent.com/u/11910993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CodenameLambda", "html_url": "https://github.com/CodenameLambda", "followers_url": "https://api.github.com/users/CodenameLambda/followers", "following_url": "https://api.github.com/users/CodenameLambda/following{/other_user}", "gists_url": "https://api.github.com/users/CodenameLambda/gists{/gist_id}", "starred_url": "https://api.github.com/users/CodenameLambda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CodenameLambda/subscriptions", "organizations_url": "https://api.github.com/users/CodenameLambda/orgs", "repos_url": "https://api.github.com/users/CodenameLambda/repos", "events_url": "https://api.github.com/users/CodenameLambda/events{/privacy}", "received_events_url": "https://api.github.com/users/CodenameLambda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CodenameLambda", "id": 11910993, "node_id": "MDQ6VXNlcjExOTEwOTkz", "avatar_url": "https://avatars.githubusercontent.com/u/11910993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CodenameLambda", "html_url": "https://github.com/CodenameLambda", "followers_url": "https://api.github.com/users/CodenameLambda/followers", "following_url": "https://api.github.com/users/CodenameLambda/following{/other_user}", "gists_url": "https://api.github.com/users/CodenameLambda/gists{/gist_id}", "starred_url": "https://api.github.com/users/CodenameLambda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CodenameLambda/subscriptions", "organizations_url": "https://api.github.com/users/CodenameLambda/orgs", "repos_url": "https://api.github.com/users/CodenameLambda/repos", "events_url": "https://api.github.com/users/CodenameLambda/events{/privacy}", "received_events_url": "https://api.github.com/users/CodenameLambda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6bce95094facf5bf36afa5995f522d374d00149", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6bce95094facf5bf36afa5995f522d374d00149", "html_url": "https://github.com/rust-lang/rust/commit/e6bce95094facf5bf36afa5995f522d374d00149"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "c48ff3f5cc306698388fc007e597ad076b2076bf", "filename": "src/liballoc/str.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/833a9b567ae15d691455457a476480d422e6f7a7/src%2Fliballoc%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/833a9b567ae15d691455457a476480d422e6f7a7/src%2Fliballoc%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstr.rs?ref=833a9b567ae15d691455457a476480d422e6f7a7", "patch": "@@ -1783,6 +1783,17 @@ impl str {\n     }\n \n     /// Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n+    /// \n+    /// # Examples\n+    ///\n+    /// Basic usage:\n+    ///\n+    /// ```\n+    /// let s = \"this is a string\";\n+    /// let boxed_str = s.to_owned().into_boxed_str();\n+    /// let boxed_bytes = boxed_str.into_boxed_bytes();\n+    /// assert_eq!(*boxed_bytes, *s.as_bytes());\n+    /// ```\n     #[stable(feature = \"str_box_extras\", since = \"1.20.0\")]\n     pub fn into_boxed_bytes(self: Box<str>) -> Box<[u8]> {\n         self.into()"}]}