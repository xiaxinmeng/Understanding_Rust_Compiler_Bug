{"sha": "297364eb07a3f3d1dfab35fc6187202293ecffe0", "node_id": "C_kwDOAAsO6NoAKDI5NzM2NGViMDdhM2YzZDFkZmFiMzVmYzYxODcyMDIyOTNlY2ZmZTA", "commit": {"author": {"name": "r00ster91", "email": "r00ster91@protonmail.com", "date": "2022-02-19T16:17:40Z"}, "committer": {"name": "r00ster91", "email": "r00ster91@protonmail.com", "date": "2022-02-19T16:17:40Z"}, "message": "Some improvements to the async docs", "tree": {"sha": "fae968ec070eea726a420fcc848d9b5028a32a9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fae968ec070eea726a420fcc848d9b5028a32a9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/297364eb07a3f3d1dfab35fc6187202293ecffe0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/297364eb07a3f3d1dfab35fc6187202293ecffe0", "html_url": "https://github.com/rust-lang/rust/commit/297364eb07a3f3d1dfab35fc6187202293ecffe0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/297364eb07a3f3d1dfab35fc6187202293ecffe0/comments", "author": {"login": "r00ster91", "id": 35064754, "node_id": "MDQ6VXNlcjM1MDY0NzU0", "avatar_url": "https://avatars.githubusercontent.com/u/35064754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r00ster91", "html_url": "https://github.com/r00ster91", "followers_url": "https://api.github.com/users/r00ster91/followers", "following_url": "https://api.github.com/users/r00ster91/following{/other_user}", "gists_url": "https://api.github.com/users/r00ster91/gists{/gist_id}", "starred_url": "https://api.github.com/users/r00ster91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r00ster91/subscriptions", "organizations_url": "https://api.github.com/users/r00ster91/orgs", "repos_url": "https://api.github.com/users/r00ster91/repos", "events_url": "https://api.github.com/users/r00ster91/events{/privacy}", "received_events_url": "https://api.github.com/users/r00ster91/received_events", "type": "User", "site_admin": false}, "committer": {"login": "r00ster91", "id": 35064754, "node_id": "MDQ6VXNlcjM1MDY0NzU0", "avatar_url": "https://avatars.githubusercontent.com/u/35064754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r00ster91", "html_url": "https://github.com/r00ster91", "followers_url": "https://api.github.com/users/r00ster91/followers", "following_url": "https://api.github.com/users/r00ster91/following{/other_user}", "gists_url": "https://api.github.com/users/r00ster91/gists{/gist_id}", "starred_url": "https://api.github.com/users/r00ster91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r00ster91/subscriptions", "organizations_url": "https://api.github.com/users/r00ster91/orgs", "repos_url": "https://api.github.com/users/r00ster91/repos", "events_url": "https://api.github.com/users/r00ster91/events{/privacy}", "received_events_url": "https://api.github.com/users/r00ster91/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a48b376d559f26a9b8fc1f1d597acb0bc0a51f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a48b376d559f26a9b8fc1f1d597acb0bc0a51f9", "html_url": "https://github.com/rust-lang/rust/commit/8a48b376d559f26a9b8fc1f1d597acb0bc0a51f9"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "906e48cb62bf3f4dcdaa245f20cb14c73a63dbd0", "filename": "library/core/src/future/future.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/297364eb07a3f3d1dfab35fc6187202293ecffe0/library%2Fcore%2Fsrc%2Ffuture%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/297364eb07a3f3d1dfab35fc6187202293ecffe0/library%2Fcore%2Fsrc%2Ffuture%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffuture%2Ffuture.rs?ref=297364eb07a3f3d1dfab35fc6187202293ecffe0", "patch": "@@ -5,7 +5,7 @@ use crate::ops;\n use crate::pin::Pin;\n use crate::task::{Context, Poll};\n \n-/// A future represents an asynchronous computation.\n+/// A future represents an asynchronous computation obtained by use of [`async`].\n ///\n /// A future is a value that might not have finished computing yet. This kind of\n /// \"asynchronous value\" makes it possible for a thread to continue doing useful\n@@ -23,6 +23,7 @@ use crate::task::{Context, Poll};\n /// When using a future, you generally won't call `poll` directly, but instead\n /// `.await` the value.\n ///\n+/// [`async`]: ../../std/keyword.async.html\n /// [`Waker`]: crate::task::Waker\n #[doc(notable_trait)]\n #[must_use = \"futures do nothing unless you `.await` or poll them\"]"}, {"sha": "dfa339f44d22e68f4fe1fbbfabed860581eae0d7", "filename": "library/core/src/future/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/297364eb07a3f3d1dfab35fc6187202293ecffe0/library%2Fcore%2Fsrc%2Ffuture%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/297364eb07a3f3d1dfab35fc6187202293ecffe0/library%2Fcore%2Fsrc%2Ffuture%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffuture%2Fmod.rs?ref=297364eb07a3f3d1dfab35fc6187202293ecffe0", "patch": "@@ -1,6 +1,13 @@\n #![stable(feature = \"futures_api\", since = \"1.36.0\")]\n \n-//! Asynchronous values.\n+//! Asynchronous basic functionality.\n+//!\n+//! Please see the fundamental [`async`] and [`await`] keywords and the [async book]\n+//! for more information on asynchronous programming in Rust.\n+//!\n+//! [`async`]: ../../std/keyword.async.html\n+//! [`await`]: ../../std/keyword.await.html\n+//! [async book]: https://rust-lang.github.io/async-book/\n \n use crate::{\n     ops::{Generator, GeneratorState},"}, {"sha": "ed32e2f4f67a650039f2cde099d01f73e4a90d44", "filename": "library/std/src/keyword_docs.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/297364eb07a3f3d1dfab35fc6187202293ecffe0/library%2Fstd%2Fsrc%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/297364eb07a3f3d1dfab35fc6187202293ecffe0/library%2Fstd%2Fsrc%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fkeyword_docs.rs?ref=297364eb07a3f3d1dfab35fc6187202293ecffe0", "patch": "@@ -2203,37 +2203,39 @@ mod where_keyword {}\n ///\n /// Use `async` in front of `fn`, `closure`, or a `block` to turn the marked code into a `Future`.\n /// As such the code will not be run immediately, but will only be evaluated when the returned\n-/// future is `.await`ed.\n+/// future is [`.await`]ed.\n ///\n-/// We have written an [async book] detailing async/await and trade-offs compared to using threads.\n+/// We have written an [async book] detailing `async`/`await` and trade-offs compared to using threads.\n ///\n /// ## Editions\n ///\n /// `async` is a keyword from the 2018 edition onwards.\n ///\n-/// It is available for use in stable rust from version 1.39 onwards.\n+/// It is available for use in stable Rust from version 1.39 onwards.\n ///\n /// [`Future`]: future::Future\n+/// [`.await`]: ../std/keyword.await.html\n /// [async book]: https://rust-lang.github.io/async-book/\n mod async_keyword {}\n \n #[doc(keyword = \"await\")]\n //\n /// Suspend execution until the result of a [`Future`] is ready.\n ///\n-/// `.await`ing a future will suspend the current function's execution until the `executor`\n+/// `.await`ing a future will suspend the current function's execution until the executor\n /// has run the future to completion.\n ///\n-/// Read the [async book] for details on how async/await and executors work.\n+/// Read the [async book] for details on how [`async`]/`await` and executors work.\n ///\n /// ## Editions\n ///\n /// `await` is a keyword from the 2018 edition onwards.\n ///\n-/// It is available for use in stable rust from version 1.39 onwards.\n+/// It is available for use in stable Rust from version 1.39 onwards.\n ///\n /// [`Future`]: future::Future\n /// [async book]: https://rust-lang.github.io/async-book/\n+/// [`async`]: ../std/keyword.async.html\n mod await_keyword {}\n \n #[doc(keyword = \"dyn\")]"}]}