{"sha": "e5b5745db14d852df8996d5f5ed53942f396bbd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1YjU3NDVkYjE0ZDg1MmRmODk5NmQ1ZjVlZDUzOTQyZjM5NmJiZDQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-04-19T20:00:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-19T20:00:06Z"}, "message": "Rollup merge of #84168 - cjgillot:asi, r=davidtwco\n\nLower async fn in traits.\n\nAn error is already created by AST validation.\n\nFixes #84149", "tree": {"sha": "d6fb6fd82a8db78768279a9c71f7d2f51a595c7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6fb6fd82a8db78768279a9c71f7d2f51a595c7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5b5745db14d852df8996d5f5ed53942f396bbd4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgfeFHCRBK7hj4Ov3rIwAA88YIAK4++d1V4YilRa7p6QEgr7vo\nqL81NFiPbxHsdBGJloPXRvZmKQHTGspjhwzVC+PKqvl2B2E2ISHs6EEoJq4kthTG\nn1NA9envkhdk+T7B42XNPP9xBn10J++MHFesNPaqGLeDEgouuAy3ebOpNgxaDh0H\nqShEUSDxvDXZcmAKAq/OX9QU7+hMmneKMVs77ebZoJQJfVAXREkN5pqKhMW3VXm4\nCxMGgqc6NbVSJfEiI5TdwGg8BCyj/ylBhOE+dWn53k0OsYxKWrMkQg4KyCLobFLd\nxpqxWKpwrbbzA0tIDqzXTdh/hab5Vai3NQYaSkxZn91FduGLI1XnEbZKoV6OYEI=\n=atgC\n-----END PGP SIGNATURE-----\n", "payload": "tree d6fb6fd82a8db78768279a9c71f7d2f51a595c7d\nparent 3b81ea86fb4b0dc7bc3e9b9de94409af37baa730\nparent a54d5759b67d79eb060dca46e851ff01a5cb9801\nauthor Dylan DPC <dylan.dpc@gmail.com> 1618862406 +0200\ncommitter GitHub <noreply@github.com> 1618862406 +0200\n\nRollup merge of #84168 - cjgillot:asi, r=davidtwco\n\nLower async fn in traits.\n\nAn error is already created by AST validation.\n\nFixes #84149\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5b5745db14d852df8996d5f5ed53942f396bbd4", "html_url": "https://github.com/rust-lang/rust/commit/e5b5745db14d852df8996d5f5ed53942f396bbd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5b5745db14d852df8996d5f5ed53942f396bbd4/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b81ea86fb4b0dc7bc3e9b9de94409af37baa730", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b81ea86fb4b0dc7bc3e9b9de94409af37baa730", "html_url": "https://github.com/rust-lang/rust/commit/3b81ea86fb4b0dc7bc3e9b9de94409af37baa730"}, {"sha": "a54d5759b67d79eb060dca46e851ff01a5cb9801", "url": "https://api.github.com/repos/rust-lang/rust/commits/a54d5759b67d79eb060dca46e851ff01a5cb9801", "html_url": "https://github.com/rust-lang/rust/commit/a54d5759b67d79eb060dca46e851ff01a5cb9801"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "5fd8f7eb33a1fa882fdc068c3397cdaf0024dec6", "filename": "compiler/rustc_ast_lowering/src/item.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e5b5745db14d852df8996d5f5ed53942f396bbd4/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5b5745db14d852df8996d5f5ed53942f396bbd4/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs?ref=e5b5745db14d852df8996d5f5ed53942f396bbd4", "patch": "@@ -836,9 +836,17 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                 (generics, hir::TraitItemKind::Fn(sig, hir::TraitFn::Required(names)))\n             }\n             AssocItemKind::Fn(box FnKind(_, ref sig, ref generics, Some(ref body))) => {\n-                let body_id = self.lower_fn_body_block(i.span, &sig.decl, Some(body));\n-                let (generics, sig) =\n-                    self.lower_method_sig(generics, sig, trait_item_def_id, false, None, i.id);\n+                let asyncness = sig.header.asyncness;\n+                let body_id =\n+                    self.lower_maybe_async_body(i.span, &sig.decl, asyncness, Some(&body));\n+                let (generics, sig) = self.lower_method_sig(\n+                    generics,\n+                    sig,\n+                    trait_item_def_id,\n+                    false,\n+                    asyncness.opt_return_id(),\n+                    i.id,\n+                );\n                 (generics, hir::TraitItemKind::Fn(sig, hir::TraitFn::Provided(body_id)))\n             }\n             AssocItemKind::TyAlias(box TyAliasKind(_, ref generics, ref bounds, ref default)) => {"}, {"sha": "e2062e82725c0507fad934ec9f6720dfab28ea71", "filename": "src/test/ui/async-await/async-trait-fn.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5b5745db14d852df8996d5f5ed53942f396bbd4/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5b5745db14d852df8996d5f5ed53942f396bbd4/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.rs?ref=e5b5745db14d852df8996d5f5ed53942f396bbd4", "patch": "@@ -2,6 +2,10 @@\n trait T {\n     async fn foo() {} //~ ERROR functions in traits cannot be declared `async`\n     async fn bar(&self) {} //~ ERROR functions in traits cannot be declared `async`\n+    async fn baz() { //~ ERROR functions in traits cannot be declared `async`\n+        // Nested item must not ICE.\n+        fn a() {}\n+    }\n }\n \n fn main() {}"}, {"sha": "1eb8969a80d20047db21c886240c0dc11aebc73d", "filename": "src/test/ui/async-await/async-trait-fn.stderr", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e5b5745db14d852df8996d5f5ed53942f396bbd4/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e5b5745db14d852df8996d5f5ed53942f396bbd4/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.stderr?ref=e5b5745db14d852df8996d5f5ed53942f396bbd4", "patch": "@@ -20,6 +20,22 @@ LL |     async fn bar(&self) {}\n    = note: `async` trait functions are not currently supported\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n \n-error: aborting due to 2 previous errors\n+error[E0706]: functions in traits cannot be declared `async`\n+  --> $DIR/async-trait-fn.rs:5:5\n+   |\n+LL |       async fn baz() {\n+   |       ^----\n+   |       |\n+   |  _____`async` because of this\n+   | |\n+LL | |         // Nested item must not ICE.\n+LL | |         fn a() {}\n+LL | |     }\n+   | |_____^\n+   |\n+   = note: `async` trait functions are not currently supported\n+   = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n+\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0706`."}]}