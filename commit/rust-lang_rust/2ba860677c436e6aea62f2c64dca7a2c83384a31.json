{"sha": "2ba860677c436e6aea62f2c64dca7a2c83384a31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiYTg2MDY3N2M0MzZlNmFlYTYyZjJjNjRkY2E3YTJjODMzODRhMzE=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-03-30T17:16:55Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-03-30T17:16:55Z"}, "message": "Rollup merge of #32608 - tshepang:grammar, r=aturon\n\ndoc: \"of the\" seems more correct than \"to the\"\n\nIt's also less ambiguous", "tree": {"sha": "4b20bb126b45e2b7d4b7f941ac68b5acad25902b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b20bb126b45e2b7d4b7f941ac68b5acad25902b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ba860677c436e6aea62f2c64dca7a2c83384a31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ba860677c436e6aea62f2c64dca7a2c83384a31", "html_url": "https://github.com/rust-lang/rust/commit/2ba860677c436e6aea62f2c64dca7a2c83384a31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ba860677c436e6aea62f2c64dca7a2c83384a31/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "709be98804f5496f2920ed87a5a88e73172151bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/709be98804f5496f2920ed87a5a88e73172151bb", "html_url": "https://github.com/rust-lang/rust/commit/709be98804f5496f2920ed87a5a88e73172151bb"}, {"sha": "65cdf5d44d7623e6bcf7d81f48f251ee907c2f04", "url": "https://api.github.com/repos/rust-lang/rust/commits/65cdf5d44d7623e6bcf7d81f48f251ee907c2f04", "html_url": "https://github.com/rust-lang/rust/commit/65cdf5d44d7623e6bcf7d81f48f251ee907c2f04"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "40f6528f63efbdb577b995399d8fd00a97033837", "filename": "src/libstd/env.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2ba860677c436e6aea62f2c64dca7a2c83384a31/src%2Flibstd%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ba860677c436e6aea62f2c64dca7a2c83384a31/src%2Flibstd%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fenv.rs?ref=2ba860677c436e6aea62f2c64dca7a2c83384a31", "patch": "@@ -416,7 +416,7 @@ impl Error for JoinPathsError {\n     fn description(&self) -> &str { self.inner.description() }\n }\n \n-/// Returns the path to the current user's home directory if known.\n+/// Returns the path of the current user's home directory if known.\n ///\n /// # Unix\n ///\n@@ -450,7 +450,7 @@ pub fn home_dir() -> Option<PathBuf> {\n     os_imp::home_dir()\n }\n \n-/// Returns the path to a temporary directory.\n+/// Returns the path of a temporary directory.\n ///\n /// On Unix, returns the value of the 'TMPDIR' environment variable if it is\n /// set, otherwise for non-Android it returns '/tmp'. If Android, since there\n@@ -459,7 +459,7 @@ pub fn home_dir() -> Option<PathBuf> {\n ///\n /// On Windows, returns the value of, in order, the 'TMP', 'TEMP',\n /// 'USERPROFILE' environment variable  if any are set and not the empty\n-/// string. Otherwise, tmpdir returns the path to the Windows directory. This\n+/// string. Otherwise, tmpdir returns the path of the Windows directory. This\n /// behavior is identical to that of [GetTempPath][msdn], which this function\n /// uses internally.\n ///\n@@ -482,14 +482,14 @@ pub fn temp_dir() -> PathBuf {\n     os_imp::temp_dir()\n }\n \n-/// Returns the full filesystem path to the current running executable.\n+/// Returns the full filesystem path of the current running executable.\n ///\n-/// The path returned is not necessarily a \"real path\" to the executable as\n+/// The path returned is not necessarily a \"real path\" of the executable as\n /// there may be intermediate symlinks.\n ///\n /// # Errors\n ///\n-/// Acquiring the path to the current executable is a platform-specific operation\n+/// Acquiring the path of the current executable is a platform-specific operation\n /// that can fail for a good number of reasons. Some errors can include, but not\n /// be limited to, filesystem operations failing or general syscall failures.\n ///\n@@ -526,7 +526,7 @@ pub struct ArgsOs { inner: os_imp::Args }\n /// Returns the arguments which this program was started with (normally passed\n /// via the command line).\n ///\n-/// The first element is traditionally the path to the executable, but it can be\n+/// The first element is traditionally the path of the executable, but it can be\n /// set to arbitrary text, and may not even exist. This means this property should\n /// not be relied upon for security purposes.\n ///\n@@ -554,7 +554,7 @@ pub fn args() -> Args {\n /// Returns the arguments which this program was started with (normally passed\n /// via the command line).\n ///\n-/// The first element is traditionally the path to the executable, but it can be\n+/// The first element is traditionally the path of the executable, but it can be\n /// set to arbitrary text, and it may not even exist, so this property should\n /// not be relied upon for security purposes.\n ///"}]}