{"sha": "938552a2289d6018e78d9626f011d8eea59be7d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzODU1MmEyMjg5ZDYwMThlNzhkOTYyNmYwMTFkOGVlYTU5YmU3ZDk=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-07-17T12:28:02Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-07-22T18:38:40Z"}, "message": "Use checked NonZero constructor instead of explicit null check in btree", "tree": {"sha": "ee7034499af111de8daa4c91f984aba898af45cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee7034499af111de8daa4c91f984aba898af45cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/938552a2289d6018e78d9626f011d8eea59be7d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/938552a2289d6018e78d9626f011d8eea59be7d9", "html_url": "https://github.com/rust-lang/rust/commit/938552a2289d6018e78d9626f011d8eea59be7d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/938552a2289d6018e78d9626f011d8eea59be7d9/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4edae95ad0e85b50845be1757670929ff60c88a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4edae95ad0e85b50845be1757670929ff60c88a", "html_url": "https://github.com/rust-lang/rust/commit/a4edae95ad0e85b50845be1757670929ff60c88a"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "06d3a113b947471989ad7a803cb77e490f9f5038", "filename": "src/liballoc/btree/node.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/938552a2289d6018e78d9626f011d8eea59be7d9/src%2Fliballoc%2Fbtree%2Fnode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/938552a2289d6018e78d9626f011d8eea59be7d9/src%2Fliballoc%2Fbtree%2Fnode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbtree%2Fnode.rs?ref=938552a2289d6018e78d9626f011d8eea59be7d9", "patch": "@@ -382,21 +382,19 @@ impl<BorrowType, K, V, Type> NodeRef<BorrowType, K, V, Type> {\n         >,\n         Self\n     > {\n-        if self.as_leaf().parent.is_null() {\n-            Err(self)\n-        } else {\n+        if let Some(non_zero) = NonZero::new(self.as_leaf().parent as *const LeafNode<K, V>) {\n             Ok(Handle {\n                 node: NodeRef {\n                     height: self.height + 1,\n-                    node: unsafe {\n-                        NonZero::new_unchecked(self.as_leaf().parent as *mut LeafNode<K, V>)\n-                    },\n+                    node: non_zero,\n                     root: self.root,\n                     _marker: PhantomData\n                 },\n                 idx: self.as_leaf().parent_idx as usize,\n                 _marker: PhantomData\n             })\n+        } else {\n+            Err(self)\n         }\n     }\n "}]}