{"sha": "7196973c3eae42d4f20eb55e71930d3e35aac329", "node_id": "C_kwDOAAsO6NoAKDcxOTY5NzNjM2VhZTQyZDRmMjBlYjU1ZTcxOTMwZDNlMzVhYWMzMjk", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-06T03:35:47Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-13T17:48:55Z"}, "message": "Remove chalk lowering for AliasTy", "tree": {"sha": "7156b0dda4fa2379d9215c85e0183b6664c2c403", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7156b0dda4fa2379d9215c85e0183b6664c2c403"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7196973c3eae42d4f20eb55e71930d3e35aac329", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7196973c3eae42d4f20eb55e71930d3e35aac329", "html_url": "https://github.com/rust-lang/rust/commit/7196973c3eae42d4f20eb55e71930d3e35aac329", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7196973c3eae42d4f20eb55e71930d3e35aac329/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f9e41409290411ab656fe99b84474c786073691", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f9e41409290411ab656fe99b84474c786073691", "html_url": "https://github.com/rust-lang/rust/commit/0f9e41409290411ab656fe99b84474c786073691"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "f3fd315c71ee5fa43aaf47771f94849e399ac3a4", "filename": "compiler/rustc_traits/src/chalk/lowering.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7196973c3eae42d4f20eb55e71930d3e35aac329/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7196973c3eae42d4f20eb55e71930d3e35aac329/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs?ref=7196973c3eae42d4f20eb55e71930d3e35aac329", "patch": "@@ -66,15 +66,6 @@ impl<'tcx> LowerInto<'tcx, SubstsRef<'tcx>> for &chalk_ir::Substitution<RustInte\n     }\n }\n \n-impl<'tcx> LowerInto<'tcx, chalk_ir::AliasTy<RustInterner<'tcx>>> for ty::AliasTy<'tcx> {\n-    fn lower_into(self, interner: RustInterner<'tcx>) -> chalk_ir::AliasTy<RustInterner<'tcx>> {\n-        chalk_ir::AliasTy::Projection(chalk_ir::ProjectionTy {\n-            associated_ty_id: chalk_ir::AssocTypeId(self.def_id),\n-            substitution: self.substs.lower_into(interner),\n-        })\n-    }\n-}\n-\n impl<'tcx> LowerInto<'tcx, chalk_ir::InEnvironment<chalk_ir::Goal<RustInterner<'tcx>>>>\n     for ChalkEnvironmentAndGoal<'tcx>\n {\n@@ -255,7 +246,10 @@ impl<'tcx> LowerInto<'tcx, chalk_ir::AliasEq<RustInterner<'tcx>>>\n         // FIXME(associated_const_equality): teach chalk about terms for alias eq.\n         chalk_ir::AliasEq {\n             ty: self.term.ty().unwrap().lower_into(interner),\n-            alias: self.projection_ty.lower_into(interner),\n+            alias: chalk_ir::AliasTy::Projection(chalk_ir::ProjectionTy {\n+                associated_ty_id: chalk_ir::AssocTypeId(self.projection_ty.def_id),\n+                substitution: self.projection_ty.substs.lower_into(interner),\n+            }),\n         }\n     }\n }\n@@ -353,7 +347,12 @@ impl<'tcx> LowerInto<'tcx, chalk_ir::Ty<RustInterner<'tcx>>> for Ty<'tcx> {\n             ty::Tuple(types) => {\n                 chalk_ir::TyKind::Tuple(types.len(), types.as_substs().lower_into(interner))\n             }\n-            ty::Alias(ty::Projection, proj) => chalk_ir::TyKind::Alias(proj.lower_into(interner)),\n+            ty::Alias(ty::Projection, ty::AliasTy { def_id, substs }) => {\n+                chalk_ir::TyKind::Alias(chalk_ir::AliasTy::Projection(chalk_ir::ProjectionTy {\n+                    associated_ty_id: chalk_ir::AssocTypeId(def_id),\n+                    substitution: substs.lower_into(interner),\n+                }))\n+            }\n             ty::Alias(ty::Opaque, ty::AliasTy { def_id, substs }) => {\n                 chalk_ir::TyKind::Alias(chalk_ir::AliasTy::Opaque(chalk_ir::OpaqueTy {\n                     opaque_ty_id: chalk_ir::OpaqueTyId(def_id),"}]}