{"sha": "20ddab3defbba5b4b781b2b34db37c7eb082fa47", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwZGRhYjNkZWZiYmE1YjRiNzgxYjJiMzRkYjM3YzdlYjA4MmZhNDc=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-08-27T11:53:03Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-08-27T11:53:03Z"}, "message": "Fix rustfmt test", "tree": {"sha": "2fbcbedbf6b8f3a1d8b98985d80e77a62de65ccc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fbcbedbf6b8f3a1d8b98985d80e77a62de65ccc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20ddab3defbba5b4b781b2b34db37c7eb082fa47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20ddab3defbba5b4b781b2b34db37c7eb082fa47", "html_url": "https://github.com/rust-lang/rust/commit/20ddab3defbba5b4b781b2b34db37c7eb082fa47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20ddab3defbba5b4b781b2b34db37c7eb082fa47/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "076916fe940c07719244412e2834fdab543305d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/076916fe940c07719244412e2834fdab543305d2", "html_url": "https://github.com/rust-lang/rust/commit/076916fe940c07719244412e2834fdab543305d2"}], "stats": {"total": 30, "additions": 9, "deletions": 21}, "files": [{"sha": "61ef73a3cab1c6dbe80399e0f4fc5c0f77ae6685", "filename": "tests/source/type.rs", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/20ddab3defbba5b4b781b2b34db37c7eb082fa47/tests%2Fsource%2Ftype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20ddab3defbba5b4b781b2b34db37c7eb082fa47/tests%2Fsource%2Ftype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ftype.rs?ref=20ddab3defbba5b4b781b2b34db37c7eb082fa47", "patch": "@@ -140,29 +140,23 @@ fn foo(a: SomeLongComplexType, b: SomeOtherLongComplexType) -> Box<Future<Item =\n \n type MyFn = fn(a: SomeLongComplexType, b: SomeOtherLongComplexType,) -> Box<Future<Item = AnotherLongType, Error = ALongErrorType>>;\n \n-// Const opt-out\n+// Const bound\n \n-trait T: ?   const  Super {}\n+trait T: ~   const  Super {}\n \n-const fn maybe_const<S: ?   const    T>() -> i32 { <S as T>::CONST }\n+const fn not_quite_const<S: ~  const    T>() -> i32 { <S as T>::CONST }\n \n-struct S<T:?  const   ?  Sized>(std::marker::PhantomData<T>);\n+struct S<T:~  const   ?  Sized>(std::marker::PhantomData<T>);\n \n-impl ?    const T {}\n+impl ~    const T {}\n \n-fn trait_object() -> &'static dyn ?  const T { &S }\n+fn apit(_: impl ~   const T) {}\n \n-fn i(_: impl IntoIterator<Item = Box<dyn ?    const    T>>) {}\n-\n-fn apit(_: impl ?const T) {}\n-\n-fn rpit() -> impl ?  const T { S }\n+fn rpit() -> impl ~  const T { S }\n \n pub struct Foo<T: Trait>(T);\n-impl<T:   ?  const Trait> Foo<T> {\n+impl<T:   ~  const Trait> Foo<T> {\n     fn new(t: T) -> Self {\n-        // not calling methods on `t`, so we opt out of requiring\n-        // `<T as Trait>` to have const methods via `?const`\n         Self(t)\n     }\n }\n@@ -171,4 +165,4 @@ impl<T:   ?  const Trait> Foo<T> {\n type T = typeof(\n 1);\n impl T for  .. {\n-}\n\\ No newline at end of file\n+}"}, {"sha": "38cf909c2587a52c0b4b452df0cf6a79400d8270", "filename": "tests/target/type.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/20ddab3defbba5b4b781b2b34db37c7eb082fa47/tests%2Ftarget%2Ftype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20ddab3defbba5b4b781b2b34db37c7eb082fa47/tests%2Ftarget%2Ftype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftype.rs?ref=20ddab3defbba5b4b781b2b34db37c7eb082fa47", "patch": "@@ -157,12 +157,6 @@ struct S<T: ~const ?Sized>(std::marker::PhantomData<T>);\n \n impl ~const T {}\n \n-fn trait_object() -> &'static dyn ~const T {\n-    &S\n-}\n-\n-fn i(_: impl IntoIterator<Item = Box<dyn ~const T>>) {}\n-\n fn apit(_: impl ~const T) {}\n \n fn rpit() -> impl ~const T {"}]}