{"sha": "9671b44609d2adbf041fcc5f8b63183786417ba7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2NzFiNDQ2MDlkMmFkYmYwNDFmY2M1ZjhiNjMxODM3ODY0MTdiYTc=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-05-22T18:21:26Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-05-27T18:37:58Z"}, "message": "Add tests for packed borrows in unsafe fns", "tree": {"sha": "9f4d024484894836843689e59600fb0a605ef8c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f4d024484894836843689e59600fb0a605ef8c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9671b44609d2adbf041fcc5f8b63183786417ba7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9671b44609d2adbf041fcc5f8b63183786417ba7", "html_url": "https://github.com/rust-lang/rust/commit/9671b44609d2adbf041fcc5f8b63183786417ba7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9671b44609d2adbf041fcc5f8b63183786417ba7/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "925d5ac45f4a44dd61f1ebd4b7bd3cc89fcb2b5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/925d5ac45f4a44dd61f1ebd4b7bd3cc89fcb2b5f", "html_url": "https://github.com/rust-lang/rust/commit/925d5ac45f4a44dd61f1ebd4b7bd3cc89fcb2b5f"}], "stats": {"total": 222, "additions": 140, "deletions": 82}, "files": [{"sha": "540612a7dce0576777c6ae080928f2a3fc9c4778", "filename": "src/test/ui/unsafe/rfc-2585-safe_packed_borrows-in-unsafe-fn.rs", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/9671b44609d2adbf041fcc5f8b63183786417ba7/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-safe_packed_borrows-in-unsafe-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9671b44609d2adbf041fcc5f8b63183786417ba7/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-safe_packed_borrows-in-unsafe-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-safe_packed_borrows-in-unsafe-fn.rs?ref=9671b44609d2adbf041fcc5f8b63183786417ba7", "patch": "@@ -0,0 +1,67 @@\n+#![feature(unsafe_block_in_unsafe_fn)]\n+\n+#[repr(packed)]\n+pub struct Packed {\n+    data: &'static u32,\n+}\n+\n+const PACKED: Packed = Packed { data: &0 };\n+\n+#[allow(safe_packed_borrows)]\n+#[allow(unsafe_op_in_unsafe_fn)]\n+unsafe fn allow_allow() {\n+    &PACKED.data; // allowed\n+}\n+\n+#[allow(safe_packed_borrows)]\n+#[warn(unsafe_op_in_unsafe_fn)]\n+unsafe fn allow_warn() {\n+    &PACKED.data; // allowed\n+}\n+\n+#[allow(safe_packed_borrows)]\n+#[deny(unsafe_op_in_unsafe_fn)]\n+unsafe fn allow_deny() {\n+    &PACKED.data; // allowed\n+}\n+\n+#[warn(safe_packed_borrows)]\n+#[allow(unsafe_op_in_unsafe_fn)]\n+unsafe fn warn_allow() {\n+    &PACKED.data; // allowed\n+}\n+\n+#[warn(safe_packed_borrows)]\n+#[warn(unsafe_op_in_unsafe_fn)]\n+unsafe fn warn_warn() {\n+    &PACKED.data; //~ WARN\n+    //~| WARNING this was previously accepted by the compiler but is being phased out\n+}\n+\n+#[warn(safe_packed_borrows)]\n+#[deny(unsafe_op_in_unsafe_fn)]\n+unsafe fn warn_deny() {\n+    &PACKED.data; //~ WARN\n+    //~| WARNING this was previously accepted by the compiler but is being phased out\n+}\n+\n+#[deny(safe_packed_borrows)]\n+#[allow(unsafe_op_in_unsafe_fn)]\n+unsafe fn deny_allow() {\n+    &PACKED.data; // allowed\n+}\n+\n+#[deny(safe_packed_borrows)]\n+#[warn(unsafe_op_in_unsafe_fn)]\n+unsafe fn deny_warn() {\n+    &PACKED.data; //~ WARN\n+}\n+\n+#[deny(safe_packed_borrows)]\n+#[deny(unsafe_op_in_unsafe_fn)]\n+unsafe fn deny_deny() {\n+    &PACKED.data; //~ ERROR\n+    //~| WARNING this was previously accepted by the compiler but is being phased out\n+}\n+\n+fn main() {}"}, {"sha": "fda15159643b6ec2526a547a8d25ba49e244c882", "filename": "src/test/ui/unsafe/rfc-2585-safe_packed_borrows-in-unsafe-fn.stderr", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/9671b44609d2adbf041fcc5f8b63183786417ba7/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-safe_packed_borrows-in-unsafe-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9671b44609d2adbf041fcc5f8b63183786417ba7/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-safe_packed_borrows-in-unsafe-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-safe_packed_borrows-in-unsafe-fn.stderr?ref=9671b44609d2adbf041fcc5f8b63183786417ba7", "patch": "@@ -0,0 +1,60 @@\n+warning: borrow of packed field is unsafe and requires unsafe block (error E0133)\n+  --> $DIR/rfc-2585-safe_packed_borrows-in-unsafe-fn.rs:37:5\n+   |\n+LL |     &PACKED.data;\n+   |     ^^^^^^^^^^^^ borrow of packed field\n+   |\n+note: the lint level is defined here\n+  --> $DIR/rfc-2585-safe_packed_borrows-in-unsafe-fn.rs:34:8\n+   |\n+LL | #[warn(safe_packed_borrows)]\n+   |        ^^^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #46043 <https://github.com/rust-lang/rust/issues/46043>\n+   = note: fields of packed structs might be misaligned: dereferencing a misaligned pointer or even just creating a misaligned reference is undefined behavior\n+\n+warning: borrow of packed field is unsafe and requires unsafe block (error E0133)\n+  --> $DIR/rfc-2585-safe_packed_borrows-in-unsafe-fn.rs:44:5\n+   |\n+LL |     &PACKED.data;\n+   |     ^^^^^^^^^^^^ borrow of packed field\n+   |\n+note: the lint level is defined here\n+  --> $DIR/rfc-2585-safe_packed_borrows-in-unsafe-fn.rs:41:8\n+   |\n+LL | #[warn(safe_packed_borrows)]\n+   |        ^^^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #46043 <https://github.com/rust-lang/rust/issues/46043>\n+   = note: fields of packed structs might be misaligned: dereferencing a misaligned pointer or even just creating a misaligned reference is undefined behavior\n+\n+warning: borrow of packed field is unsafe and requires unsafe block (error E0133)\n+  --> $DIR/rfc-2585-safe_packed_borrows-in-unsafe-fn.rs:57:5\n+   |\n+LL |     &PACKED.data;\n+   |     ^^^^^^^^^^^^ borrow of packed field\n+   |\n+note: the lint level is defined here\n+  --> $DIR/rfc-2585-safe_packed_borrows-in-unsafe-fn.rs:55:8\n+   |\n+LL | #[warn(unsafe_op_in_unsafe_fn)]\n+   |        ^^^^^^^^^^^^^^^^^^^^^^\n+   = note: fields of packed structs might be misaligned: dereferencing a misaligned pointer or even just creating a misaligned reference is undefined behavior\n+\n+error: borrow of packed field is unsafe and requires unsafe block (error E0133)\n+  --> $DIR/rfc-2585-safe_packed_borrows-in-unsafe-fn.rs:63:5\n+   |\n+LL |     &PACKED.data;\n+   |     ^^^^^^^^^^^^ borrow of packed field\n+   |\n+note: the lint level is defined here\n+  --> $DIR/rfc-2585-safe_packed_borrows-in-unsafe-fn.rs:60:8\n+   |\n+LL | #[deny(safe_packed_borrows)]\n+   |        ^^^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #46043 <https://github.com/rust-lang/rust/issues/46043>\n+   = note: fields of packed structs might be misaligned: dereferencing a misaligned pointer or even just creating a misaligned reference is undefined behavior\n+\n+error: aborting due to previous error; 3 warnings emitted\n+"}, {"sha": "1e57b03ced48bf1698be7dd94729538b5ebfcc66", "filename": "src/test/ui/unsafe/rfc-2585-unsafe_op_in_unsafe_fn.rs", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9671b44609d2adbf041fcc5f8b63183786417ba7/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-unsafe_op_in_unsafe_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9671b44609d2adbf041fcc5f8b63183786417ba7/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-unsafe_op_in_unsafe_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-unsafe_op_in_unsafe_fn.rs?ref=9671b44609d2adbf041fcc5f8b63183786417ba7", "patch": "@@ -1,29 +1,18 @@\n #![feature(unsafe_block_in_unsafe_fn)]\n #![deny(unsafe_op_in_unsafe_fn)]\n #![deny(unused_unsafe)]\n-#![deny(safe_packed_borrows)]\n \n unsafe fn unsf() {}\n const PTR: *const () = std::ptr::null();\n static mut VOID: () = ();\n \n-#[repr(packed)]\n-pub struct Packed {\n-    data: &'static u32,\n-}\n-\n-const PACKED: Packed = Packed { data: &0 };\n-\n unsafe fn deny_level() {\n     unsf();\n     //~^ ERROR call to unsafe function is unsafe and requires unsafe block\n     *PTR;\n     //~^ ERROR dereference of raw pointer is unsafe and requires unsafe block\n     VOID = ();\n     //~^ ERROR use of mutable static is unsafe and requires unsafe block\n-    &PACKED.data;\n-    //~^ ERROR borrow of packed field is unsafe and requires unsafe block\n-    //~| WARNING this was previously accepted by the compiler but is being phased out\n }\n \n // Check that `unsafe_op_in_unsafe_fn` works starting from the `warn` level.\n@@ -36,9 +25,6 @@ unsafe fn warning_level() {\n     //~^ ERROR dereference of raw pointer is unsafe and requires unsafe block\n     VOID = ();\n     //~^ ERROR use of mutable static is unsafe and requires unsafe block\n-    &PACKED.data;\n-    //~^ ERROR borrow of packed field is unsafe and requires unsafe block\n-    //~| WARNING this was previously accepted by the compiler but is being phased out\n }\n \n unsafe fn explicit_block() {\n@@ -47,7 +33,6 @@ unsafe fn explicit_block() {\n         unsf();\n         *PTR;\n         VOID = ();\n-        &PACKED.data;\n     }\n }\n \n@@ -56,25 +41,12 @@ unsafe fn two_explicit_blocks() {\n     //~^ ERROR unnecessary `unsafe` block\n }\n \n-#[warn(safe_packed_borrows)]\n-unsafe fn warn_packed_borrows() {\n-    &PACKED.data;\n-    //~^ WARNING borrow of packed field is unsafe and requires unsafe block\n-    //~| WARNING this was previously accepted by the compiler but is being phased out\n-}\n-\n-#[allow(safe_packed_borrows)]\n-unsafe fn allow_packed_borrows() {\n-    &PACKED.data; // `safe_packed_borrows` is allowed, no error\n-}\n-\n #[allow(unsafe_op_in_unsafe_fn)]\n unsafe fn allow_level() {\n     // lint allowed -> no error\n     unsf();\n     *PTR;\n     VOID = ();\n-    &PACKED.data;\n \n     unsafe { unsf() }\n     //~^ ERROR unnecessary `unsafe` block\n@@ -87,7 +59,6 @@ unsafe fn nested_allow_level() {\n         unsf();\n         *PTR;\n         VOID = ();\n-        &PACKED.data;\n \n         unsafe { unsf() }\n         //~^ ERROR unnecessary `unsafe` block"}, {"sha": "cc595df12cc446069182a04ee078d6fe837d1c22", "filename": "src/test/ui/unsafe/rfc-2585-unsafe_op_in_unsafe_fn.stderr", "status": "modified", "additions": 13, "deletions": 53, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/9671b44609d2adbf041fcc5f8b63183786417ba7/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-unsafe_op_in_unsafe_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9671b44609d2adbf041fcc5f8b63183786417ba7/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-unsafe_op_in_unsafe_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-unsafe_op_in_unsafe_fn.stderr?ref=9671b44609d2adbf041fcc5f8b63183786417ba7", "patch": "@@ -1,5 +1,5 @@\n error: call to unsafe function is unsafe and requires unsafe block (error E0133)\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:18:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:10:5\n    |\n LL |     unsf();\n    |     ^^^^^^ call to unsafe function\n@@ -12,78 +12,53 @@ LL | #![deny(unsafe_op_in_unsafe_fn)]\n    = note: consult the function's documentation for information on how to avoid undefined behavior\n \n error: dereference of raw pointer is unsafe and requires unsafe block (error E0133)\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:20:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:12:5\n    |\n LL |     *PTR;\n    |     ^^^^ dereference of raw pointer\n    |\n    = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n \n error: use of mutable static is unsafe and requires unsafe block (error E0133)\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:22:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:14:5\n    |\n LL |     VOID = ();\n    |     ^^^^^^^^^ use of mutable static\n    |\n    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n \n-error: borrow of packed field is unsafe and requires unsafe block (error E0133)\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:24:5\n-   |\n-LL |     &PACKED.data;\n-   |     ^^^^^^^^^^^^ borrow of packed field\n-   |\n-note: the lint level is defined here\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:4:9\n-   |\n-LL | #![deny(safe_packed_borrows)]\n-   |         ^^^^^^^^^^^^^^^^^^^\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #46043 <https://github.com/rust-lang/rust/issues/46043>\n-   = note: fields of packed structs might be misaligned: dereferencing a misaligned pointer or even just creating a misaligned reference is undefined behavior\n-\n error: call to unsafe function is unsafe and requires unsafe block (error E0133)\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:33:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:22:5\n    |\n LL |     unsf();\n    |     ^^^^^^ call to unsafe function\n    |\n note: the lint level is defined here\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:31:8\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:20:8\n    |\n LL | #[deny(warnings)]\n    |        ^^^^^^^^\n    = note: `#[deny(unsafe_op_in_unsafe_fn)]` implied by `#[deny(warnings)]`\n    = note: consult the function's documentation for information on how to avoid undefined behavior\n \n error: dereference of raw pointer is unsafe and requires unsafe block (error E0133)\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:35:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:24:5\n    |\n LL |     *PTR;\n    |     ^^^^ dereference of raw pointer\n    |\n    = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n \n error: use of mutable static is unsafe and requires unsafe block (error E0133)\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:37:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:26:5\n    |\n LL |     VOID = ();\n    |     ^^^^^^^^^ use of mutable static\n    |\n    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n \n-error: borrow of packed field is unsafe and requires unsafe block (error E0133)\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:39:5\n-   |\n-LL |     &PACKED.data;\n-   |     ^^^^^^^^^^^^ borrow of packed field\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #46043 <https://github.com/rust-lang/rust/issues/46043>\n-   = note: fields of packed structs might be misaligned: dereferencing a misaligned pointer or even just creating a misaligned reference is undefined behavior\n-\n error: unnecessary `unsafe` block\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:55:14\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:40:14\n    |\n LL |     unsafe { unsafe { unsf() } }\n    |     ------   ^^^^^^ unnecessary `unsafe` block\n@@ -96,49 +71,34 @@ note: the lint level is defined here\n LL | #![deny(unused_unsafe)]\n    |         ^^^^^^^^^^^^^\n \n-warning: borrow of packed field is unsafe and requires unsafe block (error E0133)\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:61:5\n-   |\n-LL |     &PACKED.data;\n-   |     ^^^^^^^^^^^^ borrow of packed field\n-   |\n-note: the lint level is defined here\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:59:8\n-   |\n-LL | #[warn(safe_packed_borrows)]\n-   |        ^^^^^^^^^^^^^^^^^^^\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #46043 <https://github.com/rust-lang/rust/issues/46043>\n-   = note: fields of packed structs might be misaligned: dereferencing a misaligned pointer or even just creating a misaligned reference is undefined behavior\n-\n error: unnecessary `unsafe` block\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:79:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:51:5\n    |\n LL |     unsafe { unsf() }\n    |     ^^^^^^ unnecessary `unsafe` block\n \n error: unnecessary `unsafe` block\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:92:9\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:63:9\n    |\n LL |         unsafe { unsf() }\n    |         ^^^^^^ unnecessary `unsafe` block\n \n error[E0133]: call to unsafe function is unsafe and requires unsafe block\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:98:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:69:5\n    |\n LL |     unsf();\n    |     ^^^^^^ call to unsafe function\n    |\n    = note: consult the function's documentation for information on how to avoid undefined behavior\n \n error[E0133]: call to unsafe function is unsafe and requires unsafe function or block\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:102:9\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:73:9\n    |\n LL |         unsf();\n    |         ^^^^^^ call to unsafe function\n    |\n    = note: consult the function's documentation for information on how to avoid undefined behavior\n \n-error: aborting due to 13 previous errors; 1 warning emitted\n+error: aborting due to 11 previous errors\n \n For more information about this error, try `rustc --explain E0133`."}]}