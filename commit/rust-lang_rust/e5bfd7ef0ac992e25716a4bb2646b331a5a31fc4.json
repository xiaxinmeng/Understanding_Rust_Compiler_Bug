{"sha": "e5bfd7ef0ac992e25716a4bb2646b331a5a31fc4", "node_id": "C_kwDOAAsO6NoAKGU1YmZkN2VmMGFjOTkyZTI1NzE2YTRiYjI2NDZiMzMxYTVhMzFmYzQ", "commit": {"author": {"name": "David Barsky", "email": "me@davidbarsky.com", "date": "2023-03-28T13:56:01Z"}, "committer": {"name": "David Barsky", "email": "me@davidbarsky.com", "date": "2023-03-28T13:56:01Z"}, "message": "it, uh, turns out that we should be spawning for new servers. oops.", "tree": {"sha": "4bfd94948a515ffaa7646ecf5f00406a75a657e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bfd94948a515ffaa7646ecf5f00406a75a657e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5bfd7ef0ac992e25716a4bb2646b331a5a31fc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5bfd7ef0ac992e25716a4bb2646b331a5a31fc4", "html_url": "https://github.com/rust-lang/rust/commit/e5bfd7ef0ac992e25716a4bb2646b331a5a31fc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5bfd7ef0ac992e25716a4bb2646b331a5a31fc4/comments", "author": {"login": "davidbarsky", "id": 2067774, "node_id": "MDQ6VXNlcjIwNjc3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2067774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidbarsky", "html_url": "https://github.com/davidbarsky", "followers_url": "https://api.github.com/users/davidbarsky/followers", "following_url": "https://api.github.com/users/davidbarsky/following{/other_user}", "gists_url": "https://api.github.com/users/davidbarsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidbarsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidbarsky/subscriptions", "organizations_url": "https://api.github.com/users/davidbarsky/orgs", "repos_url": "https://api.github.com/users/davidbarsky/repos", "events_url": "https://api.github.com/users/davidbarsky/events{/privacy}", "received_events_url": "https://api.github.com/users/davidbarsky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidbarsky", "id": 2067774, "node_id": "MDQ6VXNlcjIwNjc3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2067774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidbarsky", "html_url": "https://github.com/davidbarsky", "followers_url": "https://api.github.com/users/davidbarsky/followers", "following_url": "https://api.github.com/users/davidbarsky/following{/other_user}", "gists_url": "https://api.github.com/users/davidbarsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidbarsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidbarsky/subscriptions", "organizations_url": "https://api.github.com/users/davidbarsky/orgs", "repos_url": "https://api.github.com/users/davidbarsky/repos", "events_url": "https://api.github.com/users/davidbarsky/events{/privacy}", "received_events_url": "https://api.github.com/users/davidbarsky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a42d7f627958d20587c8a137ed1756465d13b1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a42d7f627958d20587c8a137ed1756465d13b1e", "html_url": "https://github.com/rust-lang/rust/commit/6a42d7f627958d20587c8a137ed1756465d13b1e"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "6bd28498d57df6596cf3f5bce7c721d45b507d15", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e5bfd7ef0ac992e25716a4bb2646b331a5a31fc4/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bfd7ef0ac992e25716a4bb2646b331a5a31fc4/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=e5bfd7ef0ac992e25716a4bb2646b331a5a31fc4", "patch": "@@ -296,9 +296,9 @@ impl GlobalState {\n         let workspaces =\n             workspaces.iter().filter_map(|res| res.as_ref().ok().cloned()).collect::<Vec<_>>();\n \n-        // `different_workspaces` is used to spawn a new proc macro server for a newly-added\n-        // rust workspace (most commonly sourced from a `rust-project.json`). While the algorithm\n-        // to find the new workspaces is quadratic, we generally expect that the number of total\n+        // `different_workspaces` is used to determine whether to spawn a a new proc macro server for\n+        // a newly-added rust workspace (most commonly sourced from a `rust-project.json`). While the\n+        // algorithm to find the new workspaces is quadratic, we generally expect that the number of total\n         // workspaces to remain in the low single digits. the `cloned_workspace` is needed for borrowck\n         // reasons.\n         let cloned_workspaces = workspaces.clone();\n@@ -387,7 +387,8 @@ impl GlobalState {\n         if self.proc_macro_clients.is_empty() || !different_workspaces.is_empty() {\n             if let Some((path, path_manually_set)) = self.config.proc_macro_srv() {\n                 tracing::info!(\"Spawning proc-macro servers\");\n-                self.proc_macro_clients = different_workspaces\n+                self.proc_macro_clients = self\n+                    .workspaces\n                     .iter()\n                     .map(|ws| {\n                         let (path, args): (_, &[_]) = if path_manually_set {"}]}