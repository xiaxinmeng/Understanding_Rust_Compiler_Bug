{"sha": "a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3", "node_id": "C_kwDOAAsO6NoAKGE2MzMwOGJlMGE2NmZlMzRhYTFjY2VmZWY3NmZhNmEwYmM1MGQyYTM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-08T00:37:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-08T00:37:56Z"}, "message": "Auto merge of #8619 - pitaj:fix-6973, r=giraffate\n\nignore `&x | &y` in unnested_or_patterns\n\nreplacing it with `&(x | y)` is actually more characters\n\nFixes #6973\n\nchangelog: [`unnested_or_patterns`] ignore `&x | &y`, nesting would result in more characters", "tree": {"sha": "66359167138505b8217830b22ffb05bfef103f11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66359167138505b8217830b22ffb05bfef103f11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3", "html_url": "https://github.com/rust-lang/rust/commit/a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "984330a6ee3c4d15626685d6dc8b7b759ff630bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/984330a6ee3c4d15626685d6dc8b7b759ff630bd", "html_url": "https://github.com/rust-lang/rust/commit/984330a6ee3c4d15626685d6dc8b7b759ff630bd"}, {"sha": "c70f1e0f8f3419f67dc31b5bbbc47db1e829128c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c70f1e0f8f3419f67dc31b5bbbc47db1e829128c", "html_url": "https://github.com/rust-lang/rust/commit/c70f1e0f8f3419f67dc31b5bbbc47db1e829128c"}], "stats": {"total": 66, "additions": 38, "deletions": 28}, "files": [{"sha": "790ffe618d71da9eeea5b690887f3ac45aa8f442", "filename": "clippy_lints/src/unnested_or_patterns.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3/clippy_lints%2Fsrc%2Funnested_or_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3/clippy_lints%2Fsrc%2Funnested_or_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnested_or_patterns.rs?ref=a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3", "patch": "@@ -5,7 +5,7 @@ use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::{meets_msrv, msrvs, over};\n use rustc_ast::mut_visit::*;\n use rustc_ast::ptr::P;\n-use rustc_ast::{self as ast, Pat, PatKind, PatKind::*, DUMMY_NODE_ID};\n+use rustc_ast::{self as ast, Mutability, Pat, PatKind, PatKind::*, DUMMY_NODE_ID};\n use rustc_ast_pretty::pprust;\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n@@ -230,6 +230,10 @@ fn transform_with_focus_on_idx(alternatives: &mut Vec<P<Pat>>, focus_idx: usize)\n         // with which a pattern `C(p_0)` may be formed,\n         // which we would want to join with other `C(p_j)`s.\n         Ident(.., None) | Lit(_) | Wild | Path(..) | Range(..) | Rest | MacCall(_)\n+        // Skip immutable refs, as grouping them saves few characters,\n+        // and almost always requires adding parens (increasing noisiness).\n+        // In the case of only two patterns, replacement adds net characters.\n+        | Ref(_, Mutability::Not)\n         // Dealt with elsewhere.\n         | Or(_) | Paren(_) => false,\n         // Transform `box x | ... | box y` into `box (x | y)`.\n@@ -241,10 +245,10 @@ fn transform_with_focus_on_idx(alternatives: &mut Vec<P<Pat>>, focus_idx: usize)\n             |k| matches!(k, Box(_)),\n             |k| always_pat!(k, Box(p) => p),\n         ),\n-        // Transform `&m x | ... | &m y` into `&m (x | y)`.\n-        Ref(target, m1) => extend_with_matching(\n+        // Transform `&mut x | ... | &mut y` into `&mut (x | y)`.\n+        Ref(target, Mutability::Mut) => extend_with_matching(\n             target, start, alternatives,\n-            |k| matches!(k, Ref(_, m2) if m1 == m2), // Mutabilities must match.\n+            |k| matches!(k, Ref(_, Mutability::Mut)),\n             |k| always_pat!(k, Ref(p, _) => p),\n         ),\n         // Transform `b @ p0 | ... b @ p1` into `b @ (p0 | p1)`."}, {"sha": "c223b5bc711b2a83956542e652457132f8136fd6", "filename": "tests/ui/unnested_or_patterns.fixed", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3/tests%2Fui%2Funnested_or_patterns.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3/tests%2Fui%2Funnested_or_patterns.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnested_or_patterns.fixed?ref=a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3", "patch": "@@ -6,10 +6,13 @@\n #![allow(unreachable_patterns, irrefutable_let_patterns, unused_variables)]\n \n fn main() {\n+    // Should be ignored by this lint, as nesting requires more characters.\n+    if let &0 | &2 = &0 {}\n+\n     if let box (0 | 2) = Box::new(0) {}\n     if let box (0 | 1 | 2 | 3 | 4) = Box::new(0) {}\n-    const C0: &u8 = &1;\n-    if let &(0 | 2) | C0 = &0 {}\n+    const C0: Option<u8> = Some(1);\n+    if let Some(1 | 2) | C0 = None {}\n     if let &mut (0 | 2) = &mut 0 {}\n     if let x @ (0 | 2) = 0 {}\n     if let (0, 1 | 2 | 3) = (0, 0) {}"}, {"sha": "04cd11036e4e00e954a27faf2c35cfb650db530e", "filename": "tests/ui/unnested_or_patterns.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3/tests%2Fui%2Funnested_or_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3/tests%2Fui%2Funnested_or_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnested_or_patterns.rs?ref=a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3", "patch": "@@ -6,10 +6,13 @@\n #![allow(unreachable_patterns, irrefutable_let_patterns, unused_variables)]\n \n fn main() {\n+    // Should be ignored by this lint, as nesting requires more characters.\n+    if let &0 | &2 = &0 {}\n+\n     if let box 0 | box 2 = Box::new(0) {}\n     if let box ((0 | 1)) | box (2 | 3) | box 4 = Box::new(0) {}\n-    const C0: &u8 = &1;\n-    if let &0 | C0 | &2 = &0 {}\n+    const C0: Option<u8> = Some(1);\n+    if let Some(1) | C0 | Some(2) = None {}\n     if let &mut 0 | &mut 2 = &mut 0 {}\n     if let x @ 0 | x @ 2 = 0 {}\n     if let (0, 1) | (0, 2) | (0, 3) = (0, 0) {}"}, {"sha": "453c66cbba8fc2838311408c637b65e8b20c9e59", "filename": "tests/ui/unnested_or_patterns.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3/tests%2Fui%2Funnested_or_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3/tests%2Fui%2Funnested_or_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnested_or_patterns.stderr?ref=a63308be0a66fe34aa1ccefef76fa6a0bc50d2a3", "patch": "@@ -1,5 +1,5 @@\n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:9:12\n+  --> $DIR/unnested_or_patterns.rs:12:12\n    |\n LL |     if let box 0 | box 2 = Box::new(0) {}\n    |            ^^^^^^^^^^^^^\n@@ -11,7 +11,7 @@ LL |     if let box (0 | 2) = Box::new(0) {}\n    |            ~~~~~~~~~~~\n \n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:10:12\n+  --> $DIR/unnested_or_patterns.rs:13:12\n    |\n LL |     if let box ((0 | 1)) | box (2 | 3) | box 4 = Box::new(0) {}\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -22,18 +22,18 @@ LL |     if let box (0 | 1 | 2 | 3 | 4) = Box::new(0) {}\n    |            ~~~~~~~~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:12:12\n+  --> $DIR/unnested_or_patterns.rs:15:12\n    |\n-LL |     if let &0 | C0 | &2 = &0 {}\n-   |            ^^^^^^^^^^^^\n+LL |     if let Some(1) | C0 | Some(2) = None {}\n+   |            ^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: nest the patterns\n    |\n-LL |     if let &(0 | 2) | C0 = &0 {}\n-   |            ~~~~~~~~~~~~~\n+LL |     if let Some(1 | 2) | C0 = None {}\n+   |            ~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:13:12\n+  --> $DIR/unnested_or_patterns.rs:16:12\n    |\n LL |     if let &mut 0 | &mut 2 = &mut 0 {}\n    |            ^^^^^^^^^^^^^^^\n@@ -44,7 +44,7 @@ LL |     if let &mut (0 | 2) = &mut 0 {}\n    |            ~~~~~~~~~~~~\n \n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:14:12\n+  --> $DIR/unnested_or_patterns.rs:17:12\n    |\n LL |     if let x @ 0 | x @ 2 = 0 {}\n    |            ^^^^^^^^^^^^^\n@@ -55,7 +55,7 @@ LL |     if let x @ (0 | 2) = 0 {}\n    |            ~~~~~~~~~~~\n \n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:15:12\n+  --> $DIR/unnested_or_patterns.rs:18:12\n    |\n LL |     if let (0, 1) | (0, 2) | (0, 3) = (0, 0) {}\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -66,7 +66,7 @@ LL |     if let (0, 1 | 2 | 3) = (0, 0) {}\n    |            ~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:16:12\n+  --> $DIR/unnested_or_patterns.rs:19:12\n    |\n LL |     if let (1, 0) | (2, 0) | (3, 0) = (0, 0) {}\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -77,7 +77,7 @@ LL |     if let (1 | 2 | 3, 0) = (0, 0) {}\n    |            ~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:17:12\n+  --> $DIR/unnested_or_patterns.rs:20:12\n    |\n LL |     if let (x, ..) | (x, 1) | (x, 2) = (0, 1) {}\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -88,7 +88,7 @@ LL |     if let (x, ..) | (x, 1 | 2) = (0, 1) {}\n    |            ~~~~~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:18:12\n+  --> $DIR/unnested_or_patterns.rs:21:12\n    |\n LL |     if let [0] | [1] = [0] {}\n    |            ^^^^^^^^^\n@@ -99,7 +99,7 @@ LL |     if let [0 | 1] = [0] {}\n    |            ~~~~~~~\n \n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:19:12\n+  --> $DIR/unnested_or_patterns.rs:22:12\n    |\n LL |     if let [x, 0] | [x, 1] = [0, 1] {}\n    |            ^^^^^^^^^^^^^^^\n@@ -110,7 +110,7 @@ LL |     if let [x, 0 | 1] = [0, 1] {}\n    |            ~~~~~~~~~~\n \n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:20:12\n+  --> $DIR/unnested_or_patterns.rs:23:12\n    |\n LL |     if let [x, 0] | [x, 1] | [x, 2] = [0, 1] {}\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -121,7 +121,7 @@ LL |     if let [x, 0 | 1 | 2] = [0, 1] {}\n    |            ~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:21:12\n+  --> $DIR/unnested_or_patterns.rs:24:12\n    |\n LL |     if let [x, ..] | [x, 1] | [x, 2] = [0, 1] {}\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -132,7 +132,7 @@ LL |     if let [x, ..] | [x, 1 | 2] = [0, 1] {}\n    |            ~~~~~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:23:12\n+  --> $DIR/unnested_or_patterns.rs:26:12\n    |\n LL |     if let TS(0, x) | TS(1, x) = TS(0, 0) {}\n    |            ^^^^^^^^^^^^^^^^^^^\n@@ -143,7 +143,7 @@ LL |     if let TS(0 | 1, x) = TS(0, 0) {}\n    |            ~~~~~~~~~~~~\n \n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:24:12\n+  --> $DIR/unnested_or_patterns.rs:27:12\n    |\n LL |     if let TS(1, 0) | TS(2, 0) | TS(3, 0) = TS(0, 0) {}\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -154,7 +154,7 @@ LL |     if let TS(1 | 2 | 3, 0) = TS(0, 0) {}\n    |            ~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:25:12\n+  --> $DIR/unnested_or_patterns.rs:28:12\n    |\n LL |     if let TS(x, ..) | TS(x, 1) | TS(x, 2) = TS(0, 0) {}\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -165,7 +165,7 @@ LL |     if let TS(x, ..) | TS(x, 1 | 2) = TS(0, 0) {}\n    |            ~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:30:12\n+  --> $DIR/unnested_or_patterns.rs:33:12\n    |\n LL |     if let S { x: 0, y } | S { y, x: 1 } = (S { x: 0, y: 1 }) {}\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}