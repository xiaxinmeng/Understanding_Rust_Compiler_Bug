{"sha": "bc45e474a0e871dc2d28abdc75d68d84c5249a8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNDVlNDc0YTBlODcxZGMyZDI4YWJkYzc1ZDY4ZDg0YzUyNDlhOGM=", "commit": {"author": {"name": "Aaron Rennow", "email": "arennow@outlook.com", "date": "2021-03-27T18:25:52Z"}, "committer": {"name": "Aaron Rennow", "email": "arennow@outlook.com", "date": "2021-05-22T01:53:03Z"}, "message": "Add std::os::unix::fs::DirEntryExt2::file_name_ref(&self) -> &OsStr\n\nDirEntryExt2 is a new trait with the same purpose as DirEntryExt,\nbut sealed", "tree": {"sha": "168a3d1ecc9017236c9ecee2e69713e139aae203", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/168a3d1ecc9017236c9ecee2e69713e139aae203"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc45e474a0e871dc2d28abdc75d68d84c5249a8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc45e474a0e871dc2d28abdc75d68d84c5249a8c", "html_url": "https://github.com/rust-lang/rust/commit/bc45e474a0e871dc2d28abdc75d68d84c5249a8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc45e474a0e871dc2d28abdc75d68d84c5249a8c/comments", "author": {"login": "arennow", "id": 30298575, "node_id": "MDQ6VXNlcjMwMjk4NTc1", "avatar_url": "https://avatars.githubusercontent.com/u/30298575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arennow", "html_url": "https://github.com/arennow", "followers_url": "https://api.github.com/users/arennow/followers", "following_url": "https://api.github.com/users/arennow/following{/other_user}", "gists_url": "https://api.github.com/users/arennow/gists{/gist_id}", "starred_url": "https://api.github.com/users/arennow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arennow/subscriptions", "organizations_url": "https://api.github.com/users/arennow/orgs", "repos_url": "https://api.github.com/users/arennow/repos", "events_url": "https://api.github.com/users/arennow/events{/privacy}", "received_events_url": "https://api.github.com/users/arennow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arennow", "id": 30298575, "node_id": "MDQ6VXNlcjMwMjk4NTc1", "avatar_url": "https://avatars.githubusercontent.com/u/30298575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arennow", "html_url": "https://github.com/arennow", "followers_url": "https://api.github.com/users/arennow/followers", "following_url": "https://api.github.com/users/arennow/following{/other_user}", "gists_url": "https://api.github.com/users/arennow/gists{/gist_id}", "starred_url": "https://api.github.com/users/arennow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arennow/subscriptions", "organizations_url": "https://api.github.com/users/arennow/orgs", "repos_url": "https://api.github.com/users/arennow/repos", "events_url": "https://api.github.com/users/arennow/events{/privacy}", "received_events_url": "https://api.github.com/users/arennow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dc8789e300930751a78996da0fa906be5a344a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dc8789e300930751a78996da0fa906be5a344a2", "html_url": "https://github.com/rust-lang/rust/commit/5dc8789e300930751a78996da0fa906be5a344a2"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "3939d3c4ca67a13808cc1ef0e5933d9ab34c4a6e", "filename": "library/std/src/os/unix/fs.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/bc45e474a0e871dc2d28abdc75d68d84c5249a8c/library%2Fstd%2Fsrc%2Fos%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc45e474a0e871dc2d28abdc75d68d84c5249a8c/library%2Fstd%2Fsrc%2Fos%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Ffs.rs?ref=bc45e474a0e871dc2d28abdc75d68d84c5249a8c", "patch": "@@ -9,6 +9,8 @@ use crate::path::Path;\n use crate::sys;\n use crate::sys_common::{AsInner, AsInnerMut, FromInner};\n // Used for `File::read` on intra-doc links\n+use crate::ffi::OsStr;\n+use crate::sealed::Sealed;\n #[allow(unused_imports)]\n use io::{Read, Write};\n \n@@ -839,6 +841,42 @@ impl DirEntryExt for fs::DirEntry {\n     }\n }\n \n+/// Sealed Unix-specific extension methods for [`fs::DirEntry`].\n+#[unstable(feature = \"dir_entry_ext2\", issue = \"85573\")]\n+pub trait DirEntryExt2: Sealed {\n+    /// Returns a reference to the underlying `OsStr` of this entry's filename.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::os::unix::fs::DirEntryExt2;\n+    /// use std::{fs, io};\n+    ///\n+    /// fn main() -> io::Result<()> {\n+    ///     let mut entries = fs::read_dir(\".\")?.collect::<Result<Vec<_>, io::Error>>()?;\n+    ///     entries.sort_unstable_by(|a, b| a.file_name_ref().cmp(b.file_name_ref()));\n+    ///\n+    ///     for p in entries {\n+    ///         println!(\"{:?}\", p);\n+    ///     }\n+    ///\n+    ///     Ok(())\n+    /// }\n+    /// ```\n+    fn file_name_ref(&self) -> &OsStr;\n+}\n+\n+/// Allows extension traits within `std`.\n+#[unstable(feature = \"sealed\", issue = \"none\")]\n+impl Sealed for fs::DirEntry {}\n+\n+#[unstable(feature = \"dir_entry_ext2\", issue = \"85573\")]\n+impl DirEntryExt2 for fs::DirEntry {\n+    fn file_name_ref(&self) -> &OsStr {\n+        self.as_inner().file_name_os_str()\n+    }\n+}\n+\n /// Creates a new symbolic link on the filesystem.\n ///\n /// The `link` path will be a symbolic link pointing to the `original` path."}, {"sha": "eae156bff4156c6906372e99eadf5d08b7f791dc", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc45e474a0e871dc2d28abdc75d68d84c5249a8c/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc45e474a0e871dc2d28abdc75d68d84c5249a8c/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=bc45e474a0e871dc2d28abdc75d68d84c5249a8c", "patch": "@@ -647,6 +647,10 @@ impl DirEntry {\n     fn name_bytes(&self) -> &[u8] {\n         &*self.name\n     }\n+\n+    pub fn file_name_os_str(&self) -> &OsStr {\n+        OsStr::from_bytes(self.name_bytes())\n+    }\n }\n \n impl OpenOptions {"}]}