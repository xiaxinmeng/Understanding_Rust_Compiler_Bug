{"sha": "f69e9ff643921bfe81f2d772042eae3f5acabaef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2OWU5ZmY2NDM5MjFiZmU4MWYyZDc3MjA0MmVhZTNmNWFjYWJhZWY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-15T22:18:04Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-15T22:18:04Z"}, "message": "test: Fix breakage", "tree": {"sha": "78f621e5b41fdfd9944ed991ae86acb5646411f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78f621e5b41fdfd9944ed991ae86acb5646411f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f69e9ff643921bfe81f2d772042eae3f5acabaef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f69e9ff643921bfe81f2d772042eae3f5acabaef", "html_url": "https://github.com/rust-lang/rust/commit/f69e9ff643921bfe81f2d772042eae3f5acabaef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f69e9ff643921bfe81f2d772042eae3f5acabaef/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1b14f6d5b8e423fbed4b482c0029e8c17510246", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b14f6d5b8e423fbed4b482c0029e8c17510246", "html_url": "https://github.com/rust-lang/rust/commit/e1b14f6d5b8e423fbed4b482c0029e8c17510246"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d87c2cadc1ceeaf129e0d3d0af61fa6d32db4a4d", "filename": "src/test/bench/sudoku.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f69e9ff643921bfe81f2d772042eae3f5acabaef/src%2Ftest%2Fbench%2Fsudoku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f69e9ff643921bfe81f2d772042eae3f5acabaef/src%2Ftest%2Fbench%2Fsudoku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fsudoku.rs?ref=f69e9ff643921bfe81f2d772042eae3f5acabaef", "patch": "@@ -50,7 +50,7 @@ fn solve_grid(g: grid_t) {\n     fn next_color(g: grid, row: u8, col: u8, start_color: u8) -> bool {\n         if start_color < 10u8 {\n             // colors not yet used\n-            let avail = bitv::create(10u, false);\n+            let avail = bitv::bitv(10u, false);\n             u8::range(start_color, 10u8) { |color|\n                 bitv::set(avail, color as uint, true);\n             }\n@@ -73,8 +73,8 @@ fn solve_grid(g: grid_t) {\n     }\n \n     // find colors available in neighbourhood of (row, col)\n-    fn drop_colors(g: grid, avail: bitv::t, row: u8, col: u8) {\n-        fn drop_color(g: grid, colors: bitv::t, row: u8, col: u8) {\n+    fn drop_colors(g: grid, avail: bitv::bitv, row: u8, col: u8) {\n+        fn drop_color(g: grid, colors: bitv::bitv, row: u8, col: u8) {\n             let color = g[row][col];\n             if color != 0u8 { bitv::set(colors, color as uint, false); }\n         }"}]}