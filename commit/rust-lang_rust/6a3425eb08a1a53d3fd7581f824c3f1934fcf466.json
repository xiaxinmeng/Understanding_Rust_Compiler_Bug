{"sha": "6a3425eb08a1a53d3fd7581f824c3f1934fcf466", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhMzQyNWViMDhhMWE1M2QzZmQ3NTgxZjgyNGMzZjE5MzRmY2Y0NjY=", "commit": {"author": {"name": "Josh Stone", "email": "cuviper@gmail.com", "date": "2020-08-20T17:07:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-20T17:07:27Z"}, "message": "Rollup merge of #75710 - ThibsG:FixBadPrinting75447, r=oli-obk\n\nFix bad printing of const-eval queries\n\nFixes: #75447\n\nr? @RalfJung\n\ncc @oli-obk", "tree": {"sha": "257bc9cd489e32dad12fd8ddf2ca1ad7041968fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/257bc9cd489e32dad12fd8ddf2ca1ad7041968fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a3425eb08a1a53d3fd7581f824c3f1934fcf466", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfPq3PCRBK7hj4Ov3rIwAAdHIIAHdODD89eLY3CQuChdB8p3g2\n+sWq62z18sVL4HamQZey1xOUCM0ahXpjca/kvn2fSbsFbb+oh2f0polPDAHLtxtY\nnObEil43kmZREh/mmZOyOfEPgsYhImdCSkQVjBuBM1i+eqozDnPK+XEcMBLdDZRP\nn8470JtevvjE0E07VmZ8+yFmCjgIep2aGUgC/QcP202zNxERxfVrnIGL1Jkus8dQ\nL5Zy0JbISu78VdeDV0tYqM23tvijRW8rtiaJKoNcL4HmRnMnu7Xb1LvQQFVoJ6BG\nuz4Uy10URl6o9uVSMRU954PhEnPvI7Teu261mGCH+InfQuZwsVVwsoJxFemVGWQ=\n=CBnk\n-----END PGP SIGNATURE-----\n", "payload": "tree 257bc9cd489e32dad12fd8ddf2ca1ad7041968fb\nparent 7ac126ec563cd1b987dd1aa49d4a3b9288c03771\nparent bd716753f400faa2651f6a81e38e04ee64a8624a\nauthor Josh Stone <cuviper@gmail.com> 1597943247 -0700\ncommitter GitHub <noreply@github.com> 1597943247 -0700\n\nRollup merge of #75710 - ThibsG:FixBadPrinting75447, r=oli-obk\n\nFix bad printing of const-eval queries\n\nFixes: #75447\n\nr? @RalfJung\n\ncc @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a3425eb08a1a53d3fd7581f824c3f1934fcf466", "html_url": "https://github.com/rust-lang/rust/commit/6a3425eb08a1a53d3fd7581f824c3f1934fcf466", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a3425eb08a1a53d3fd7581f824c3f1934fcf466/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ac126ec563cd1b987dd1aa49d4a3b9288c03771", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ac126ec563cd1b987dd1aa49d4a3b9288c03771", "html_url": "https://github.com/rust-lang/rust/commit/7ac126ec563cd1b987dd1aa49d4a3b9288c03771"}, {"sha": "bd716753f400faa2651f6a81e38e04ee64a8624a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd716753f400faa2651f6a81e38e04ee64a8624a", "html_url": "https://github.com/rust-lang/rust/commit/bd716753f400faa2651f6a81e38e04ee64a8624a"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "0dc3d6e344a7effdf4117017c9dc25ad96ebd051", "filename": "src/librustc_middle/mir/interpret/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6a3425eb08a1a53d3fd7581f824c3f1934fcf466/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a3425eb08a1a53d3fd7581f824c3f1934fcf466/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs?ref=6a3425eb08a1a53d3fd7581f824c3f1934fcf466", "patch": "@@ -143,6 +143,17 @@ pub struct GlobalId<'tcx> {\n     pub promoted: Option<mir::Promoted>,\n }\n \n+impl GlobalId<'tcx> {\n+    pub fn display(self, tcx: TyCtxt<'tcx>) -> String {\n+        let instance_name = tcx.def_path_str(self.instance.def.def_id());\n+        if let Some(promoted) = self.promoted {\n+            format!(\"{}::{:?}\", instance_name, promoted)\n+        } else {\n+            instance_name\n+        }\n+    }\n+}\n+\n /// Input argument for `tcx.lit_to_const`.\n #[derive(Copy, Clone, Debug, Eq, PartialEq, Hash, HashStable)]\n pub struct LitToConstInput<'tcx> {"}, {"sha": "f5029eb7404554638b1bd51f4c6f05a546875352", "filename": "src/librustc_middle/query/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6a3425eb08a1a53d3fd7581f824c3f1934fcf466/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a3425eb08a1a53d3fd7581f824c3f1934fcf466/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fquery%2Fmod.rs?ref=6a3425eb08a1a53d3fd7581f824c3f1934fcf466", "patch": "@@ -679,7 +679,7 @@ rustc_queries! {\n             -> ConstEvalRawResult<'tcx> {\n             desc { |tcx|\n                 \"const-evaluating `{}`\",\n-                tcx.def_path_str(key.value.instance.def.def_id())\n+                key.value.display(tcx)\n             }\n         }\n \n@@ -695,7 +695,7 @@ rustc_queries! {\n             -> ConstEvalResult<'tcx> {\n             desc { |tcx|\n                 \"const-evaluating + checking `{}`\",\n-                tcx.def_path_str(key.value.instance.def.def_id())\n+                key.value.display(tcx)\n             }\n             cache_on_disk_if(_, opt_result) {\n                 // Only store results without errors"}, {"sha": "e6075f745776a5a6d663995af4ed8fbbc8ca9bbb", "filename": "src/test/ui/associated-const/defaults-cyclic-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a3425eb08a1a53d3fd7581f824c3f1934fcf466/src%2Ftest%2Fui%2Fassociated-const%2Fdefaults-cyclic-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a3425eb08a1a53d3fd7581f824c3f1934fcf466/src%2Ftest%2Fui%2Fassociated-const%2Fdefaults-cyclic-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-const%2Fdefaults-cyclic-fail.stderr?ref=6a3425eb08a1a53d3fd7581f824c3f1934fcf466", "patch": "@@ -32,7 +32,7 @@ note: ...which requires const-evaluating `Tr::B`...\n LL |     const B: u8 = Self::A;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n    = note: ...which again requires normalizing `<() as Tr>::A`, completing the cycle\n-note: cycle used when const-evaluating `main`\n+note: cycle used when const-evaluating `main::promoted[2]`\n   --> $DIR/defaults-cyclic-fail.rs:14:1\n    |\n LL | fn main() {"}, {"sha": "6962ccdec73eea52e084c6a99f9be43598792e87", "filename": "src/test/ui/consts/const-eval/const-eval-query-stack.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6a3425eb08a1a53d3fd7581f824c3f1934fcf466/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-query-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a3425eb08a1a53d3fd7581f824c3f1934fcf466/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-query-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-query-stack.rs?ref=6a3425eb08a1a53d3fd7581f824c3f1934fcf466", "patch": "@@ -0,0 +1,21 @@\n+// compile-flags: -Ztreat-err-as-bug\n+// build-fail\n+// failure-status: 101\n+// rustc-env:RUST_BACKTRACE=1\n+// normalize-stderr-test \"\\nerror: internal compiler error.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"note:.*unexpectedly panicked.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"note: we would appreciate a bug report.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"note: compiler flags.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"note: rustc.*running on.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"thread.*panicked.*\\n\" -> \"\"\n+// normalize-stderr-test \"stack backtrace:\\n\" -> \"\"\n+// normalize-stderr-test \"  \\d{1,}: .*\\n\" -> \"\"\n+// normalize-stderr-test \".*note: Some details.*\\n\" -> \"\"\n+\n+#![allow(unconditional_panic)]\n+\n+fn main() {\n+    let x: &'static i32 = &(1 / 0);\n+    //~^ ERROR reaching this expression at runtime will panic or abort [const_err]\n+    println!(\"x={}\", x);\n+}"}, {"sha": "32233a0f6eeb71183ac1da766e3aa8d09faf0805", "filename": "src/test/ui/consts/const-eval/const-eval-query-stack.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6a3425eb08a1a53d3fd7581f824c3f1934fcf466/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-query-stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a3425eb08a1a53d3fd7581f824c3f1934fcf466/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-query-stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-query-stack.stderr?ref=6a3425eb08a1a53d3fd7581f824c3f1934fcf466", "patch": "@@ -0,0 +1,18 @@\n+error: reaching this expression at runtime will panic or abort\n+  --> $DIR/const-eval-query-stack.rs:18:28\n+   |\n+LL |     let x: &'static i32 = &(1 / 0);\n+   |                           -^^^^^^^\n+   |                            |\n+   |                            dividing by zero\n+   |\n+   = note: `#[deny(const_err)]` on by default\n+\n+query stack during panic:\n+#0 [const_eval_raw] const-evaluating `main::promoted[1]`\n+#1 [const_eval_validated] const-evaluating + checking `main::promoted[1]`\n+#2 [const_eval_validated] const-evaluating + checking `main::promoted[1]`\n+#3 [normalize_generic_arg_after_erasing_regions] normalizing `main::promoted[1]`\n+#4 [optimized_mir] optimizing MIR for `main`\n+#5 [collect_and_partition_mono_items] collect_and_partition_mono_items\n+end of query stack"}]}