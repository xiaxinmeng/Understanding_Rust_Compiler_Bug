{"sha": "f387c930ee7c84357f8fa9f4c38903c00404ac46", "node_id": "C_kwDOAAsO6NoAKGYzODdjOTMwZWU3Yzg0MzU3ZjhmYTlmNGMzODkwM2MwMDQwNGFjNDY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-13T23:18:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-13T23:18:33Z"}, "message": "Auto merge of #95981 - martingms:invert-line-offset-parsing, r=nnethercote\n\nOptimize `<SourceFile as Decodable>::decode`\n\nIt showed up as a hot-ish function in a callgrind profile of the `await-call-tree` benchmark crate.\n\nProvides some moderate speedups to compilation of some of the smaller benchmarks:\n\n#### Primary benchmarks\n\nBenchmark | Profile | Scenario | % Change | Significance Factor?\n-- | -- | -- | -- | --\nhelloworld | check | full | -1.81% | 9.03x\nhelloworld | check | incr-unchanged | -1.80% | 8.99x\nhelloworld | check | incr-full | -1.59% | 7.97x\nhelloworld | check | incr-patched: println | -1.57% | 7.86x\n\n#### Secondary benchmarks\n<div class=\"category-title\"></div>\n\nBenchmark | Profile | Scenario | % Change | Significance Factor?\n-- | -- | -- | -- | --\nunify-linearly | check | incr-unchanged | -1.55% | 7.74x\nunify-linearly | check | incr-patched: dummy fn | -1.42% | 7.08x\nawait-call-tree | check | incr-unchanged | -1.27% | 6.35x\nawait-call-tree | debug | incr-unchanged | -1.19% | 5.95x\nawait-call-tree | opt | incr-unchanged | -1.19% | 5.94x\nissue-46449 | check | incr-unchanged | -1.08% | 5.39x\nissue-46449 | check | incr-patched: u8 3072 | -1.00% | 5.00x\nstructopt-0.3.26 | check | incr-unchanged | -0.94% | 4.72x\nstructopt-0.3.26 | opt | incr-unchanged | -0.92% | 4.60x\nstructopt-0.3.26 | debug | incr-unchanged | -0.92% | 4.59x\nissue-46449 | check | full | -0.89% | 4.46x\nstructopt-0.3.26 | check | full | -0.83% | 4.17x\nstructopt-0.3.26 | debug | full | -0.78% | 3.88x\nstructopt-0.3.26 | opt | full | -0.76% | 3.81x\nunify-linearly | check | full | -0.75% | 3.74x\nprojection-caching | check | incr-unchanged | -0.74% | 3.70x\nissue-46449 | check | incr-patched: u32 3072 | -0.70% | 3.50x\nissue-46449 | check | incr-patched: empty 3072 | -0.68% | 3.41x\nstructopt-0.3.26 | check | incr-full | -0.68% | 3.40x\nwf-projection-stress-65510 | check | incr-unchanged | -0.68% | 3.39x\nissue-46449 | check | incr-patched: static str 6144 | -0.67% | 3.37x\nwf-projection-stress-65510 | debug | incr-unchanged | -0.67% | 3.33x\nwf-projection-stress-65510 | opt | incr-unchanged | -0.66% | 3.31x\nissue-46449 | check | incr-patched: io error 6144 | -0.66% | 3.29x\nunify-linearly | check | incr-full | -0.65% | 3.26x\nissue-46449 | check | incr-full | -0.65% | 3.25x\nstructopt-0.3.26 | debug | incr-full | -0.64% | 3.18x\nstructopt-0.3.26 | opt | incr-full | -0.63% | 3.17x\nissue-46449 | debug | incr-unchanged | -0.61% | 3.06x\nissue-46449 | opt | incr-unchanged | -0.61% | 3.03x\nawait-call-tree | check | full | -0.60% | 2.99x\nissue-88862 | check | incr-unchanged | -0.58% | 2.91x\ndeep-vector | debug | full | 0.57% | 2.83x\nawait-call-tree | check | incr-full | -0.52% | 2.59x\ntt-muncher | opt | full | -0.52% | 2.58x\nissue-58319 | check | incr-unchanged | -0.50% | 2.52x\nawait-call-tree | debug | full | -0.50% | 2.49x\nawait-call-tree | opt | full | -0.49% | 2.45x\ndeep-vector | debug | incr-patched: println | 0.47% | 2.37x\nawait-call-tree | debug | incr-full | -0.45% | 2.26x\nawait-call-tree | opt | incr-full | -0.44% | 2.18x\nissue-88862 | check | full | -0.41% | 2.06x\nmockall-0.11.0 | check | incr-unchanged | -0.38% | 1.90x\nregression-31157 | check | incr-unchanged | -0.37% | 1.86x\nwf-projection-stress-65510 | opt | full | -0.36% | 1.80x\ndeunicode-1.3.1 | check | incr-unchanged | -0.35% | 1.76x\nunify-linearly | debug | incr-patched: dummy fn | -0.35% | 1.74x\nmockall-0.11.0 | check | full | -0.35% | 1.73x\nunify-linearly | debug | incr-unchanged | -0.34% | 1.69x\ndeunicode-1.3.1 | check | full | -0.33% | 1.63x\ntoken-stream-stress | check | full | -0.32% | 1.62x\ntoken-stream-stress | check | incr-full | -0.32% | 1.59x\ntoken-stream-stress | check | incr-unchanged | -0.32% | 1.59x\nregression-31157 | check | incr-patched: println | -0.31% | 1.57x\nwf-projection-stress-65510 | check | full | -0.31% | 1.54x\ndeeply-nested-multi | check | incr-unchanged | -0.31% | 1.53x\nmockall-0.11.0 | opt | incr-unchanged | -0.30% | 1.50x\n\nr? `@nnethercote`", "tree": {"sha": "cbcd7979367a5e7f516d27c41b387e28d059565d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbcd7979367a5e7f516d27c41b387e28d059565d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f387c930ee7c84357f8fa9f4c38903c00404ac46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f387c930ee7c84357f8fa9f4c38903c00404ac46", "html_url": "https://github.com/rust-lang/rust/commit/f387c930ee7c84357f8fa9f4c38903c00404ac46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f387c930ee7c84357f8fa9f4c38903c00404ac46/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34a6c9f26e2ce32cad0d71f5e342365b09f4d12c", "url": "https://api.github.com/repos/rust-lang/rust/commits/34a6c9f26e2ce32cad0d71f5e342365b09f4d12c", "html_url": "https://github.com/rust-lang/rust/commit/34a6c9f26e2ce32cad0d71f5e342365b09f4d12c"}, {"sha": "5f2c6b92d1cb2749872432448d42cd9cb05b0565", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f2c6b92d1cb2749872432448d42cd9cb05b0565", "html_url": "https://github.com/rust-lang/rust/commit/5f2c6b92d1cb2749872432448d42cd9cb05b0565"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "45b0e0c2dd1f829fc9827a0c5e64602312c651ef", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f387c930ee7c84357f8fa9f4c38903c00404ac46/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f387c930ee7c84357f8fa9f4c38903c00404ac46/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=f387c930ee7c84357f8fa9f4c38903c00404ac46", "patch": "@@ -1318,17 +1318,20 @@ impl<D: Decoder> Decodable<D> for SourceFile {\n                 let mut line_start: BytePos = Decodable::decode(d);\n                 lines.push(line_start);\n \n-                for _ in 1..num_lines {\n-                    let diff = match bytes_per_diff {\n-                        1 => d.read_u8() as u32,\n-                        2 => d.read_u16() as u32,\n-                        4 => d.read_u32(),\n-                        _ => unreachable!(),\n-                    };\n-\n-                    line_start = line_start + BytePos(diff);\n-\n-                    lines.push(line_start);\n+                match bytes_per_diff {\n+                    1 => lines.extend((1..num_lines).map(|_| {\n+                        line_start = line_start + BytePos(d.read_u8() as u32);\n+                        line_start\n+                    })),\n+                    2 => lines.extend((1..num_lines).map(|_| {\n+                        line_start = line_start + BytePos(d.read_u16() as u32);\n+                        line_start\n+                    })),\n+                    4 => lines.extend((1..num_lines).map(|_| {\n+                        line_start = line_start + BytePos(d.read_u32());\n+                        line_start\n+                    })),\n+                    _ => unreachable!(),\n                 }\n             }\n "}]}