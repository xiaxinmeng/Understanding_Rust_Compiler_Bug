{"sha": "d346dbc938da2f8d1bd13492331d9ec1b15bdac7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNDZkYmM5MzhkYTJmOGQxYmQxMzQ5MjMzMWQ5ZWMxYjE1YmRhYzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-05T14:27:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-05T14:27:06Z"}, "message": "Auto merge of #38107 - keeperofdakeys:proc-macro-test, r=alexcrichton\n\nAllow --test to be used on proc-macro crates\n\nFixes #37480\n\nThis patch allows `--test` to work for proc-macro crates, removing the previous error.", "tree": {"sha": "8e13c43191f77149962d437e6af7bf9d8f45639c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e13c43191f77149962d437e6af7bf9d8f45639c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d346dbc938da2f8d1bd13492331d9ec1b15bdac7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d346dbc938da2f8d1bd13492331d9ec1b15bdac7", "html_url": "https://github.com/rust-lang/rust/commit/d346dbc938da2f8d1bd13492331d9ec1b15bdac7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d346dbc938da2f8d1bd13492331d9ec1b15bdac7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "692d7cfb0ce5ba43311ae553a3debcf09755b6b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/692d7cfb0ce5ba43311ae553a3debcf09755b6b9", "html_url": "https://github.com/rust-lang/rust/commit/692d7cfb0ce5ba43311ae553a3debcf09755b6b9"}, {"sha": "bfdd2d4177391312022b48a328ff4f177769055c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfdd2d4177391312022b48a328ff4f177769055c", "html_url": "https://github.com/rust-lang/rust/commit/bfdd2d4177391312022b48a328ff4f177769055c"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "6256440bc815e3a4dcde317bb8f2dd635eef1ed2", "filename": "src/libsyntax_ext/proc_macro_registrar.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d346dbc938da2f8d1bd13492331d9ec1b15bdac7/src%2Flibsyntax_ext%2Fproc_macro_registrar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d346dbc938da2f8d1bd13492331d9ec1b15bdac7/src%2Flibsyntax_ext%2Fproc_macro_registrar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fproc_macro_registrar.rs?ref=d346dbc938da2f8d1bd13492331d9ec1b15bdac7", "patch": "@@ -75,6 +75,10 @@ pub fn modify(sess: &ParseSess,\n         handler.err(\"cannot mix `proc-macro` crate type with others\");\n     }\n \n+    if is_test_crate {\n+        return krate;\n+    }\n+\n     krate.module.items.push(mk_registrar(&mut cx, &collect.derives));\n \n     if krate.exported_macros.len() > 0 {\n@@ -141,8 +145,6 @@ impl<'a> Visitor for CollectCustomDerives<'a> {\n         }\n \n         if self.is_test_crate {\n-            self.handler.span_err(attr.span(),\n-                                  \"`--test` cannot be used with proc-macro crates\");\n             return;\n         }\n "}, {"sha": "2f44515a873de52648674e36d6b5d78bbd1270af", "filename": "src/test/run-pass-fulldeps/proc-macro/derive-test.rs", "status": "renamed", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d346dbc938da2f8d1bd13492331d9ec1b15bdac7/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fderive-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d346dbc938da2f8d1bd13492331d9ec1b15bdac7/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fderive-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fderive-test.rs?ref=d346dbc938da2f8d1bd13492331d9ec1b15bdac7", "patch": "@@ -8,15 +8,23 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// no-prefer-dynamic\n // compile-flags: --test\n \n #![crate_type = \"proc-macro\"]\n+#![feature(proc_macro)]\n #![feature(proc_macro, proc_macro_lib)]\n \n extern crate proc_macro;\n \n-#[proc_macro_derive(A)]\n-//~^ ERROR: `--test` cannot be used with proc-macro crates\n-pub fn foo1(input: proc_macro::TokenStream) -> proc_macro::TokenStream {\n+use proc_macro::TokenStream;\n+\n+#[proc_macro_derive(Foo)]\n+pub fn derive_foo(_input: TokenStream) -> TokenStream {\n     \"\".parse().unwrap()\n }\n+\n+#[test]\n+pub fn test_derive() {\n+    assert!(true);\n+}", "previous_filename": "src/test/compile-fail-fulldeps/proc-macro/error-on-test.rs"}]}