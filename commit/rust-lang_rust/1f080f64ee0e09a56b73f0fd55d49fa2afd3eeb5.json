{"sha": "1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5", "node_id": "C_kwDOAAsO6NoAKDFmMDgwZjY0ZWUwZTA5YTU2YjczZjBmZDU1ZDQ5ZmEyYWZkM2VlYjU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-19T09:45:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-19T09:45:55Z"}, "message": "Rollup merge of #92077 - jyn514:remove-collapsed, r=GuillaumeGomez\n\nrustdoc: Remove unused `collapsed` field\n\n`render/context` always runs after `run_global_context`, so it was always set to `true`.\n\nThis is a holdover from when rustdoc allowed configuring passes, but the `collapse-docs` pass was\nremoved ages ago, and the ability to configure passes is about to be removed.\n\nFound while reviewing https://github.com/rust-lang/rust/pull/91305.", "tree": {"sha": "c8d6261e269a3fa38c55b03da9c93e06d412238a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8d6261e269a3fa38c55b03da9c93e06d412238a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhvv9TCRBK7hj4Ov3rIwAAtU8IAEjBmj/zrmodISIDQN9fSQMf\nlTb+Tm5CCDxtdeMbDUcj1gIJxMbU+3ySJebgv5zCp76M2dSe3byVszUejEYBeXGF\nofH9yLEXGUX6OT42Xu4j5y2+r3xjlPFCkSHF5U+aQzn7JblueSa1dFijQ/TgHTX8\nXTpNFaxtBmiD04TSjC5B8Vwh8+6ydUiiTBLaQNOTFnyPSTlV0NsSUxcU2txdEfp4\nsJc4CM0LmcE0l1+4CDf18B9v9PJ2d/i1vbJZQiA9r/f+L5/YeJ/YBbQ1nS6OOyIm\nHMCiqMPQV3MGtx0Av1zCRTt72GPsWmTk5HB93NOEg9AtsaA5mJNkmBkPntJS6QI=\n=PYPJ\n-----END PGP SIGNATURE-----\n", "payload": "tree c8d6261e269a3fa38c55b03da9c93e06d412238a\nparent 690d6b0958cdc7c06f23d57deedd21010810af96\nparent dea1c6861409b06d2e3f4ebfb46af908a1b3ae29\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639907155 +0100\ncommitter GitHub <noreply@github.com> 1639907155 +0100\n\nRollup merge of #92077 - jyn514:remove-collapsed, r=GuillaumeGomez\n\nrustdoc: Remove unused `collapsed` field\n\n`render/context` always runs after `run_global_context`, so it was always set to `true`.\n\nThis is a holdover from when rustdoc allowed configuring passes, but the `collapse-docs` pass was\nremoved ages ago, and the ability to configure passes is about to be removed.\n\nFound while reviewing https://github.com/rust-lang/rust/pull/91305.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5", "html_url": "https://github.com/rust-lang/rust/commit/1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "690d6b0958cdc7c06f23d57deedd21010810af96", "url": "https://api.github.com/repos/rust-lang/rust/commits/690d6b0958cdc7c06f23d57deedd21010810af96", "html_url": "https://github.com/rust-lang/rust/commit/690d6b0958cdc7c06f23d57deedd21010810af96"}, {"sha": "dea1c6861409b06d2e3f4ebfb46af908a1b3ae29", "url": "https://api.github.com/repos/rust-lang/rust/commits/dea1c6861409b06d2e3f4ebfb46af908a1b3ae29", "html_url": "https://github.com/rust-lang/rust/commit/dea1c6861409b06d2e3f4ebfb46af908a1b3ae29"}], "stats": {"total": 21, "additions": 4, "deletions": 17}, "files": [{"sha": "f759cf4ba6ea0586997490ddf2760ff5b4e4df6a", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5", "patch": "@@ -122,12 +122,11 @@ crate struct Crate {\n     crate primitives: ThinVec<(DefId, PrimitiveType)>,\n     /// Only here so that they can be filtered through the rustdoc passes.\n     crate external_traits: Rc<RefCell<FxHashMap<DefId, TraitWithExtraInfo>>>,\n-    crate collapsed: bool,\n }\n \n // `Crate` is frequently moved by-value. Make sure it doesn't unintentionally get bigger.\n #[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n-rustc_data_structures::static_assert_size!(Crate, 80);\n+rustc_data_structures::static_assert_size!(Crate, 72);\n \n impl Crate {\n     crate fn name(&self, tcx: TyCtxt<'_>) -> Symbol {"}, {"sha": "42a69f7735710ba7cc50c413e7899d4161797a67", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5", "patch": "@@ -72,7 +72,7 @@ crate fn krate(cx: &mut DocContext<'_>) -> Crate {\n         }));\n     }\n \n-    Crate { module, primitives, external_traits: cx.external_traits.clone(), collapsed: false }\n+    Crate { module, primitives, external_traits: cx.external_traits.clone() }\n }\n \n fn external_generic_args("}, {"sha": "1b67a4c144c1ea616d23277d548bdf30ee139bcb", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5", "patch": "@@ -510,9 +510,6 @@ crate fn run_global_ctxt(\n \n     krate = tcx.sess.time(\"create_format_cache\", || Cache::populate(&mut ctxt, krate));\n \n-    // The main crate doc comments are always collapsed.\n-    krate.collapsed = true;\n-\n     (krate, ctxt.render_options, ctxt.cache)\n }\n "}, {"sha": "6f190dbf66b31f6e9355746e886e970584d6043a", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5", "patch": "@@ -88,8 +88,6 @@ crate struct SharedContext<'tcx> {\n     crate local_sources: FxHashMap<PathBuf, String>,\n     /// Show the memory layout of types in the docs.\n     pub(super) show_type_layout: bool,\n-    /// Whether the collapsed pass ran\n-    collapsed: bool,\n     /// The base-URL of the issue tracker for when an item has been tagged with\n     /// an issue number.\n     pub(super) issue_tracker_base_url: Option<String>,\n@@ -142,12 +140,6 @@ impl SharedContext<'_> {\n         Ok(())\n     }\n \n-    /// Returns the `collapsed_doc_value` of the given item if this is the main crate, otherwise\n-    /// returns the `doc_value`.\n-    crate fn maybe_collapsed_doc_value<'a>(&self, item: &'a clean::Item) -> Option<String> {\n-        if self.collapsed { item.collapsed_doc_value() } else { item.doc_value() }\n-    }\n-\n     crate fn edition(&self) -> Edition {\n         self.tcx.sess.edition()\n     }\n@@ -472,7 +464,6 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n         let (sender, receiver) = channel();\n         let mut scx = SharedContext {\n             tcx,\n-            collapsed: krate.collapsed,\n             src_root,\n             local_sources,\n             issue_tracker_base_url,"}, {"sha": "f921e91029494c096ac6407b4ac25c0f0be3bcb8", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=1f080f64ee0e09a56b73f0fd55d49fa2afd3eeb5", "patch": "@@ -567,7 +567,7 @@ fn document_full_inner(\n     is_collapsible: bool,\n     heading_offset: HeadingOffset,\n ) {\n-    if let Some(s) = cx.shared.maybe_collapsed_doc_value(item) {\n+    if let Some(s) = item.collapsed_doc_value() {\n         debug!(\"Doc block: =====\\n{}\\n=====\", s);\n         if is_collapsible {\n             w.write_str(\n@@ -1612,7 +1612,7 @@ fn render_impl(\n             write!(w, \"</summary>\")\n         }\n \n-        if let Some(ref dox) = cx.shared.maybe_collapsed_doc_value(&i.impl_item) {\n+        if let Some(ref dox) = i.impl_item.collapsed_doc_value() {\n             let mut ids = cx.id_map.borrow_mut();\n             write!(\n                 w,"}]}