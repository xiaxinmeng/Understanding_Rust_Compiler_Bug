{"sha": "fda5cc9b4c048f2db64c5e23525961633aa5f2d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkYTVjYzliNGMwNDhmMmRiNjRjNWUyMzUyNTk2MTYzM2FhNWYyZDQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-20T06:49:57Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-07-25T08:20:45Z"}, "message": "avoid downcasting for enum variants without further fields", "tree": {"sha": "8a93e94f90cf06eaa07247270c967414fe8f28d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a93e94f90cf06eaa07247270c967414fe8f28d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fda5cc9b4c048f2db64c5e23525961633aa5f2d4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAll2/10ACgkQpp+NIls6\n19lpjhAAgVhiOLeL/xRI+d0JSt7rvY/3qW1m0GoNloTD4FUVV1mRiHmJ/SZqJwez\nnDwUfAWrfxagHPVkKGr1xkzJdSOL6k/rcaO1IO6Is+iJGXbEbI8EeHdogWP+Rbm5\nTQ5OOlEO/MyrbdU4lHkrArTUslQyvqKBqSmmKq4yIyjor3hzRmc4cvokvtBS/hoH\nMaNmJlHr6TjyuRCkn1hnc6cpx9/NZUQ7Yjp760t5XRdpKpdx5IQZPsdxbm/dyHWZ\nurFXNjc40JzCod5gxvOXvFQnj2tpVt++CPPIIHu1UzsS5nCJcehm4zAwhfv/9D0k\nRajPfP7rxDi+8G8YPMo6RNjaenlWE5W6Dz+5GqewGdJtV8tFzN9QKHlRHYBKMYXG\n4CHFcSd1q7MSDhZ6OHuvuSdtSmK4tEqgGvgmtdZSHbchKf2UdrLnr87RDx+WzbLq\nQr1x9PlnLPTvQ+SkjPotOEH4ZlihNfjK4h3ZPfExQ6Dpr0qLe4kKchQLq02V2q8f\nny+4ZG1sOuCiZMXmna/nNgTPHAUoxH+j50XpQJN/CDtMbFfFCvQoSHBpgI61V/qY\ntdbj/oVWNBhWu7Ak+oDqrQB2JyC9Sh82tkgOxXXUkXKSfBWKKbNUL6CMl5k+2XEN\nrH0oOBAJ9ZEAWPlMZUkrW+X7PxFKk/BMnTk+6OLN4VYCa1nRFlw=\n=vjvk\n-----END PGP SIGNATURE-----", "payload": "tree 8a93e94f90cf06eaa07247270c967414fe8f28d9\nparent a91ee4bb03a3e27cfea3da0b71e5458bccb2f298\nauthor Ralf Jung <post@ralfj.de> 1497941397 -0700\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1500970845 +0200\n\navoid downcasting for enum variants without further fields\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fda5cc9b4c048f2db64c5e23525961633aa5f2d4", "html_url": "https://github.com/rust-lang/rust/commit/fda5cc9b4c048f2db64c5e23525961633aa5f2d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fda5cc9b4c048f2db64c5e23525961633aa5f2d4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a91ee4bb03a3e27cfea3da0b71e5458bccb2f298", "url": "https://api.github.com/repos/rust-lang/rust/commits/a91ee4bb03a3e27cfea3da0b71e5458bccb2f298", "html_url": "https://github.com/rust-lang/rust/commit/a91ee4bb03a3e27cfea3da0b71e5458bccb2f298"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "9f344d195577dd7a03b15cd6df02ecd99186da71", "filename": "src/librustc_mir/interpret/lvalue.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fda5cc9b4c048f2db64c5e23525961633aa5f2d4/src%2Flibrustc_mir%2Finterpret%2Flvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fda5cc9b4c048f2db64c5e23525961633aa5f2d4/src%2Flibrustc_mir%2Finterpret%2Flvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Flvalue.rs?ref=fda5cc9b4c048f2db64c5e23525961633aa5f2d4", "patch": "@@ -561,13 +561,18 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                         let variant_idx = adt.discriminants(self.tcx)\n                             .position(|variant_discr| variant_discr.to_u128_unchecked() == discr)\n                             .ok_or(EvalError::InvalidDiscriminant)?;\n+                        let variant = &adt.variants[variant_idx];\n \n-                        // Downcast to this variant\n-                        let lvalue = self.eval_lvalue_projection(lvalue, ty, &mir::ProjectionElem::Downcast(adt, variant_idx))?;\n+                        if variant.fields.len() > 0 {\n+                            // Downcast to this variant\n+                            let lvalue = self.eval_lvalue_projection(lvalue, ty, &mir::ProjectionElem::Downcast(adt, variant_idx))?;\n \n-                        // Recursively validate the fields\n-                        let variant = &adt.variants[variant_idx];\n-                        self.validate_variant(lvalue, ty, variant, subst, outer_mutbl)\n+                            // Recursively validate the fields\n+                            self.validate_variant(lvalue, ty, variant, subst, outer_mutbl)\n+                        } else {\n+                            // No fields, nothing left to check.  Downcasting may fail, e.g. in case of a CEnum.\n+                            Ok(())\n+                        }\n                     }\n                     AdtKind::Struct => {\n                         self.validate_variant(lvalue, ty, adt.struct_variant(), subst, outer_mutbl)"}]}