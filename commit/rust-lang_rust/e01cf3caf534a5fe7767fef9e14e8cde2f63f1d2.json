{"sha": "e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMWNmM2NhZjUzNGE1ZmU3NzY3ZmVmOWUxNGU4Y2RlMmY2M2YxZDI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-03-21T22:00:29Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-03-27T17:09:02Z"}, "message": "testsuite: Add various test cases\n\nSome are xfailed, some not, some existing ones get un-xfailed.", "tree": {"sha": "419611d1c9dd39d58176339933f169fcde910eec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/419611d1c9dd39d58176339933f169fcde910eec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "html_url": "https://github.com/rust-lang/rust/commit/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b93393e907eddab513fa2be541af4356b8203282", "url": "https://api.github.com/repos/rust-lang/rust/commits/b93393e907eddab513fa2be541af4356b8203282", "html_url": "https://github.com/rust-lang/rust/commit/b93393e907eddab513fa2be541af4356b8203282"}], "stats": {"total": 396, "additions": 383, "deletions": 13}, "files": [{"sha": "4cc36773f525cdecc5bac0041d35656a34e9eca5", "filename": "src/test/auxiliary/issue_3907_1.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fauxiliary%2Fissue_3907_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fauxiliary%2Fissue_3907_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_3907_1.rs?ref=e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "patch": "@@ -0,0 +1,3 @@\n+pub trait Foo {\n+        fn bar();\n+}"}, {"sha": "2bd11b5111adf41dfd5e682ca266b5c76ccae5cb", "filename": "src/test/compile-fail/issue-3820.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fcompile-fail%2Fissue-3820.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fcompile-fail%2Fissue-3820.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3820.rs?ref=e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "patch": "@@ -8,27 +8,19 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-test\n struct Thing {\n     x: int\n }\n \n-impl Mul<int, Thing>*/ for Thing/* { //~ ERROR Look ma, no Mul!\n-    fn mul(c: &int) -> Thing {\n+impl Thing {\n+    fn mul(&self, c: &int) -> Thing {\n         Thing {x: self.x * *c}\n     }\n }\n \n fn main() {\n     let u = Thing {x: 2};\n-    let _v = u.mul(&3); // Works\n-    let w = u * 3; // Works!!\n+    let _v = u.mul(&3); // This is ok\n+    let w = u * 3; //~ ERROR binary operation * cannot be applied to type `Thing`\n     io::println(fmt!(\"%i\", w.x));\n-\n-    /*\n-    // This doesn't work though.\n-    let u2 = u as @Mul<int, Thing>;\n-    let w2 = u2.mul(&4);\n-    io::println(fmt!(\"%i\", w2.x));\n-    */\n }"}, {"sha": "a5eaf25aa9f485a805a4efbde1eb0b938995e6f2", "filename": "src/test/compile-fail/issue-3973.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fcompile-fail%2Fissue-3973.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fcompile-fail%2Fissue-3973.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3973.rs?ref=e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // xfail-test\n-\n struct Point {\n     x: float,\n     y: float,"}, {"sha": "d1c9057b8807b7732f5cf30031322dbc02790954", "filename": "src/test/compile-fail/issue-3991.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fcompile-fail%2Fissue-3991.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fcompile-fail%2Fissue-3991.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3991.rs?ref=e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-test\n+struct HasNested {\n+    mut nest: ~[~[int]],\n+}\n+    \n+impl HasNested {\n+    fn method_push_local(&self) {\n+        self.nest[0].push(0);\n+    }\n+}\n+    \n+fn main() {}"}, {"sha": "b6a32f5febae42a7949d445ad7f86c634a65daf9", "filename": "src/test/compile-fail/issue-4265.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fcompile-fail%2Fissue-4265.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fcompile-fail%2Fissue-4265.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4265.rs?ref=e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Foo {\n+      baz: uint\n+}\n+    \n+impl Foo {\n+    fn bar() {\n+        Foo { baz: 0 }.bar();\n+    }\n+    \n+    fn bar() { //~ ERROR duplicate definition of value bar\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "6f41e5164619b85686b8755627975b56989b348e", "filename": "src/test/compile-fail/issue-4542.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fcompile-fail%2Fissue-4542.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fcompile-fail%2Fissue-4542.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4542.rs?ref=e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-test\n+\n+fn main() {\n+    for os::args().each |arg| {\n+        match copy *arg {\n+            s => { }\n+        }\n+    }\n+}"}, {"sha": "8a28fd17b1c7c7bc44ef9f0d266198560ec1dbf8", "filename": "src/test/compile-fail/issue-5035.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fcompile-fail%2Fissue-5035.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fcompile-fail%2Fissue-5035.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5035.rs?ref=e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-test\n+trait I {}\n+type K = I;\n+impl K for int {}\n+fn main() {}"}, {"sha": "a05463f31d3ea5a00bf972b4d7147275aa826531", "filename": "src/test/compile-fail/issue-5062.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fcompile-fail%2Fissue-5062.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fcompile-fail%2Fissue-5062.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5062.rs?ref=e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-test\n+fn main() { fmt!(\"%?\", None); } //~ ERROR can't resolve type variable"}, {"sha": "80720f9e863a33f44b989945815823462519bb2f", "filename": "src/test/compile-fail/issue-5099.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fcompile-fail%2Fissue-5099.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Fcompile-fail%2Fissue-5099.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5099.rs?ref=e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+trait B < A > { fn a() -> A { self.a} } //~ ERROR unresolved name\n+\n+fn main() {}"}, {"sha": "3df10cd00a9d79697879159f5808c44c433160f6", "filename": "src/test/run-pass/issue-3556.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Frun-pass%2Fissue-3556.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Frun-pass%2Fissue-3556.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3556.rs?ref=e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "patch": "@@ -0,0 +1,42 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern mod std;\n+use core::io::WriterUtil;\n+    \n+enum Token {\n+        Text(@~str),\n+        ETag(@~[~str], @~str),\n+        UTag(@~[~str], @~str),\n+        Section(@~[~str], bool, @~[Token], @~str, @~str, @~str, @~str, @~str),\n+        IncompleteSection(@~[~str], bool, @~str, bool),\n+        Partial(@~str, @~str, @~str),\n+}\n+    \n+fn check_strs(actual: &str, expected: &str) -> bool\n+{\n+        if actual != expected\n+        {\n+            io::stderr().write_line(fmt!(\"Found %s, but expected %s\", actual, expected));\n+            return false;\n+        }\n+        return true;\n+}\n+    \n+fn main()\n+{\n+ //       fail_unless!(check_strs(fmt!(\"%?\", Text(@~\"foo\")), \"Text(@~\\\"foo\\\")\"));\n+ //       fail_unless!(check_strs(fmt!(\"%?\", ETag(@~[~\"foo\"], @~\"bar\")), \"ETag(@~[ ~\\\"foo\\\" ], @~\\\"bar\\\")\"));\n+    \n+        let t = Text(@~\"foo\");\n+        let u = Section(@~[~\"alpha\"], true, @~[t], @~\"foo\", @~\"foo\", @~\"foo\", @~\"foo\", @~\"foo\");\n+        let v = fmt!(\"%?\", u);    // this is the line that causes the seg fault\n+        fail_unless!(v.len() > 0);\n+}"}, {"sha": "8599caa3306eb2c4fdb46778829aa7b165fc638e", "filename": "src/test/run-pass/issue-3907-2.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Frun-pass%2Fissue-3907-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Frun-pass%2Fissue-3907-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3907-2.rs?ref=e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-test\n+// aux-build:issue_3907_1.rs\n+extern mod issue_3907_1;\n+\n+type Foo = issue_3907_1::Foo;\n+\n+struct S {\n+    name: int\n+}\n+\n+impl Foo for S {\n+    fn bar() { }\n+}\n+\n+fn main() {\n+    let s = S {\n+        name: 0\n+    };\n+    s.bar();\n+}"}, {"sha": "d6531f301292f6ceaf620e8c11f912c19798a00d", "filename": "src/test/run-pass/issue-4241.rs", "status": "added", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/rust-lang/rust/blob/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Frun-pass%2Fissue-4241.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Frun-pass%2Fissue-4241.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4241.rs?ref=e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "patch": "@@ -0,0 +1,126 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern mod std;\n+\n+use std::net::tcp::TcpSocketBuf;\n+\n+use core::io::{ReaderUtil,WriterUtil};\n+\n+enum Result {\n+  Nil,\n+  Int(int),\n+  Data(~[u8]),\n+  List(~[Result]),\n+  Error(~str),\n+  Status(~str)\n+}\n+\n+priv fn parse_data(len: uint, io: @io::Reader) -> Result {\n+  let res =\n+      if (len > 0) {\n+      let bytes = io.read_bytes(len as uint);\n+      fail_unless!(bytes.len() == len);\n+      Data(bytes)\n+  } else {\n+      Data(~[])\n+  };\n+  fail_unless!(io.read_char() == '\\r');\n+  fail_unless!(io.read_char() == '\\n');\n+  return res;\n+}\n+\n+priv fn parse_list(len: uint, io: @io::Reader) -> Result {\n+  let mut list: ~[Result] = ~[];\n+    for len.times {\n+    let v =\n+        match io.read_char() {\n+        '$' => parse_bulk(io),\n+        ':' => parse_int(io),\n+         _ => fail!()\n+    };\n+    list.push(v);\n+    }\n+  return List(list);\n+}\n+\n+priv fn chop(s: ~str) -> ~str {\n+  s.slice(0, s.len() - 1).to_owned()\n+}\n+  \n+priv fn parse_bulk(io: @io::Reader) -> Result {\n+    match int::from_str(chop(io.read_line())) {\n+    None => fail!(),\n+    Some(-1) => Nil,\n+    Some(len) if len >= 0 => parse_data(len as uint, io),\n+    Some(_) => fail!()\n+    }\n+}\n+\n+priv fn parse_multi(io: @io::Reader) -> Result {\n+    match int::from_str(chop(io.read_line())) {\n+    None => fail!(),\n+    Some(-1) => Nil,\n+    Some(0) => List(~[]),\n+    Some(len) if len >= 0 => parse_list(len as uint, io),\n+    Some(_) => fail!()\n+    }\n+}\n+\n+priv fn parse_int(io: @io::Reader) -> Result {\n+    match int::from_str(chop(io.read_line())) {\n+    None => fail!(),\n+    Some(i) => Int(i)\n+    }\n+}\n+\n+priv fn parse_response(io: @io::Reader) -> Result {\n+    match io.read_char() {\n+    '$' => parse_bulk(io),\n+    '*' => parse_multi(io),\n+    '+' => Status(chop(io.read_line())),\n+    '-' => Error(chop(io.read_line())),\n+    ':' => parse_int(io),\n+    _ => fail!()\n+    }\n+}\n+\n+priv fn cmd_to_str(cmd: ~[~str]) -> ~str {\n+  let mut res = ~\"*\";\n+  str::push_str(&mut res, cmd.len().to_str());\n+  str::push_str(&mut res, \"\\r\\n\");\n+    for cmd.each |s| {\n+    str::push_str(&mut res, str::concat(~[~\"$\", s.len().to_str(), ~\"\\r\\n\",\n+                                          copy *s, ~\"\\r\\n\"]));\n+    }\n+  res\n+}\n+\n+fn query(cmd: ~[~str], sb: TcpSocketBuf) -> Result {\n+  let cmd = cmd_to_str(cmd);\n+  //io::println(cmd);\n+  sb.write_str(cmd);\n+  let res = parse_response(@sb as @io::Reader);\n+  //io::println(fmt!(\"%?\", res));\n+  res\n+}\n+\n+fn query2(cmd: ~[~str]) -> Result {\n+  let _cmd = cmd_to_str(cmd);\n+    do io::with_str_reader(~\"$3\\r\\nXXX\\r\\n\") |sb| {\n+    let res = parse_response(@sb as @io::Reader);\n+    io::println(fmt!(\"%?\", res));\n+    res\n+    }\n+}\n+\n+\n+fn main() {\n+}"}, {"sha": "f3b73c84714723658b3114c1a81e2d580f0dd33e", "filename": "src/test/run-pass/issue-4252.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Frun-pass%2Fissue-4252.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Frun-pass%2Fissue-4252.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4252.rs?ref=e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-test\n+\n+trait X {\n+    fn call(&self);\n+}\n+\n+struct Y;\n+\n+struct Z<T> {\n+    x: T\n+}\n+\n+impl X for Y {\n+    fn call(&self) {\n+    }\n+}\n+\n+impl<T: X> Drop for Z<T> {\n+    fn finalize(&self) {\n+        self.x.call(); // Adding this statement causes an ICE.\n+    }\n+}\n+\n+fn main() {\n+    let y = Y;\n+    let _z = Z{x: y};\n+}\n\\ No newline at end of file"}, {"sha": "8146a4e6b8cbd6196210ca8f5d2d988446c8f5e4", "filename": "src/test/run-pass/issue-4387.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Frun-pass%2Fissue-4387.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Frun-pass%2Fissue-4387.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4387.rs?ref=e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let foo = [0, ..2*4];\n+}"}, {"sha": "b6e2ba553df4a7cfaa8ba67817824610d6ee0654", "filename": "src/test/run-pass/unconstrained-region.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Frun-pass%2Funconstrained-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2/src%2Ftest%2Frun-pass%2Funconstrained-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funconstrained-region.rs?ref=e01cf3caf534a5fe7767fef9e14e8cde2f63f1d2", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-test\n+// See #3283\n+fn foo(blk: &fn(p: &'a fn() -> &'a fn())) {\n+        let mut state = 0;\n+        let statep = &mut state;\n+    do blk {\n+        || { *statep = 1; }\n+    }\n+}\n+fn main() {\n+    do foo |p| { p()() }\n+}\n\\ No newline at end of file"}]}