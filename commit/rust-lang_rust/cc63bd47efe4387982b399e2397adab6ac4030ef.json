{"sha": "cc63bd47efe4387982b399e2397adab6ac4030ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjNjNiZDQ3ZWZlNDM4Nzk4MmIzOTllMjM5N2FkYWI2YWM0MDMwZWY=", "commit": {"author": {"name": "Michal 'vorner' Vaner", "email": "vorner@vorner.cz", "date": "2018-11-17T13:48:18Z"}, "committer": {"name": "Michal 'vorner' Vaner", "email": "vorner@vorner.cz", "date": "2018-11-18T10:12:01Z"}, "message": "atomic::Ordering: Get rid of misleading parts of intro\n\nRemove the parts of atomic::Ordering's intro that wrongly claimed that\nSeqCst prevents all reorderings around it.\n\nCloses #55196", "tree": {"sha": "5878b6bccf34f588d4a214a8fbb8d03575d87a49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5878b6bccf34f588d4a214a8fbb8d03575d87a49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc63bd47efe4387982b399e2397adab6ac4030ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEQ8wy/3jh6tM0kr/e9wDQwBnkxm8FAlvxOvMACgkQ9wDQwBnk\nxm9RaA//RUVLN7bNuQdDh9P/LoihfTmv4OGnvaeMDrqnt9tLnoX5idFSE65pIPcb\n4Bg4s3B70VUYoh7PH9SJFGM+Yt2xdux8SaMJBaTgDn+j+3a0I9AwMYAhH9fxoWE4\nmVyOoltf2yc1/cZkmyDo9oBU7nrTwrItaD+FJzc3cgYVs2jLUpSz9Vo0XL43OMHF\nVn53h7Ddam/KlQ2eGTpLcm17rAqOa+XA6JZX+pXNSzpFd4xyQg+uQrITT095Yzgj\nlu5NL+khHQcmeBPtgTqHDqqyx5SHI1ZGbfMoOXUOz8lAz2dpq929PN2cDOaRiI8J\nKcAmleP3Xubc5evrLldn5wC3i/tNkCXE4O/7+lvMZ9+xizHI48SX0NsdhHYbAfrT\ngdMlvTs+E7S8reMIQXPSy3FNEtIMQveVacWjbGeojk2Px2ZCWKJ3p4Myi/sUYfe9\nM4+rU6lLt8khyb2QlXKyTW27tXW4kif21Ud+fQNfJfP5GFY6A17hgX1T3M7eVZyM\nYZMNN4Cc7wfS3bOV/dywgeW3xUPU4Gd6ljEbi3fU6QbMegaf8rfRSoi3v2qGDaIB\ndOQpCwAcA/wiTQ+BTpT+oJxV0ixY4xRsC5O165fFBekEzXQ0++MwJitcTxnzCl6i\nGDev+TjZcPn33srQAPftlXr/5nT5vB62++Y3A0NCZSGzMGg12uc=\n=CJl5\n-----END PGP SIGNATURE-----", "payload": "tree 5878b6bccf34f588d4a214a8fbb8d03575d87a49\nparent f6e9485bfc245eb5f10b1f2b0a786538d12d1cb0\nauthor Michal 'vorner' Vaner <vorner@vorner.cz> 1542462498 +0100\ncommitter Michal 'vorner' Vaner <vorner@vorner.cz> 1542535921 +0100\n\natomic::Ordering: Get rid of misleading parts of intro\n\nRemove the parts of atomic::Ordering's intro that wrongly claimed that\nSeqCst prevents all reorderings around it.\n\nCloses #55196\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc63bd47efe4387982b399e2397adab6ac4030ef", "html_url": "https://github.com/rust-lang/rust/commit/cc63bd47efe4387982b399e2397adab6ac4030ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc63bd47efe4387982b399e2397adab6ac4030ef/comments", "author": {"login": "vorner", "id": 11783500, "node_id": "MDQ6VXNlcjExNzgzNTAw", "avatar_url": "https://avatars.githubusercontent.com/u/11783500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vorner", "html_url": "https://github.com/vorner", "followers_url": "https://api.github.com/users/vorner/followers", "following_url": "https://api.github.com/users/vorner/following{/other_user}", "gists_url": "https://api.github.com/users/vorner/gists{/gist_id}", "starred_url": "https://api.github.com/users/vorner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vorner/subscriptions", "organizations_url": "https://api.github.com/users/vorner/orgs", "repos_url": "https://api.github.com/users/vorner/repos", "events_url": "https://api.github.com/users/vorner/events{/privacy}", "received_events_url": "https://api.github.com/users/vorner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vorner", "id": 11783500, "node_id": "MDQ6VXNlcjExNzgzNTAw", "avatar_url": "https://avatars.githubusercontent.com/u/11783500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vorner", "html_url": "https://github.com/vorner", "followers_url": "https://api.github.com/users/vorner/followers", "following_url": "https://api.github.com/users/vorner/following{/other_user}", "gists_url": "https://api.github.com/users/vorner/gists{/gist_id}", "starred_url": "https://api.github.com/users/vorner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vorner/subscriptions", "organizations_url": "https://api.github.com/users/vorner/orgs", "repos_url": "https://api.github.com/users/vorner/repos", "events_url": "https://api.github.com/users/vorner/events{/privacy}", "received_events_url": "https://api.github.com/users/vorner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6e9485bfc245eb5f10b1f2b0a786538d12d1cb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6e9485bfc245eb5f10b1f2b0a786538d12d1cb0", "html_url": "https://github.com/rust-lang/rust/commit/f6e9485bfc245eb5f10b1f2b0a786538d12d1cb0"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "27eeb045bb196ab4987a0f7877497672525c4ba3", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cc63bd47efe4387982b399e2397adab6ac4030ef/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc63bd47efe4387982b399e2397adab6ac4030ef/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=cc63bd47efe4387982b399e2397adab6ac4030ef", "patch": "@@ -173,18 +173,20 @@ unsafe impl<T> Sync for AtomicPtr<T> {}\n \n /// Atomic memory orderings\n ///\n-/// Memory orderings limit the ways that both the compiler and CPU may reorder\n-/// instructions around atomic operations. At its most restrictive,\n-/// \"sequentially consistent\" atomics allow neither reads nor writes\n-/// to be moved either before or after the atomic operation; on the other end\n-/// \"relaxed\" atomics allow all reorderings.\n+/// Memory orderings specify the way atomic operations synchronize memory.\n+/// In its weakest [`Relaxed`][Ordering::Relaxed], only the memory directly touched by the\n+/// operation is synchronized. On the other hand, a store-load pair of [`SeqCst`][Ordering::SeqCst]\n+/// operations synchronize other memory while additionally preserving a total order of such\n+/// operations across all threads.\n ///\n /// Rust's memory orderings are [the same as\n /// LLVM's](https://llvm.org/docs/LangRef.html#memory-model-for-concurrent-operations).\n ///\n /// For more information see the [nomicon].\n ///\n /// [nomicon]: ../../../nomicon/atomics.html\n+/// [Ordering::Relaxed]: #variant.Relaxed\n+/// [Ordering::SeqCst]: #variant.SeqCst\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[derive(Copy, Clone, Debug)]\n #[non_exhaustive]\n@@ -234,8 +236,8 @@ pub enum Ordering {\n     /// For loads it uses [`Acquire`] ordering. For stores it uses the [`Release`] ordering.\n     ///\n     /// Notice that in the case of `compare_and_swap`, it is possible that the operation ends up\n-    /// not performing any store and hence it has just `Acquire` ordering. However,\n-    /// `AcqRel` will never perform [`Relaxed`] accesses.\n+    /// not performing any store and hence it has just [`Acquire`] ordering. However,\n+    /// [`AcqRel`][`AcquireRelease`] will never perform [`Relaxed`] accesses.\n     ///\n     /// This ordering is only applicable for operations that combine both loads and stores.\n     ///"}]}