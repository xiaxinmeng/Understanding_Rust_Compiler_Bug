{"sha": "ecfdc9ac1b5ad416661c46cea8075a8a85a09233", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjZmRjOWFjMWI1YWQ0MTY2NjFjNDZjZWE4MDc1YThhODVhMDkyMzM=", "commit": {"author": {"name": "Marc-Antoine Perennou", "email": "Marc-Antoine@Perennou.com", "date": "2017-05-17T10:15:15Z"}, "committer": {"name": "Marc-Antoine Perennou", "email": "Marc-Antoine@Perennou.com", "date": "2017-05-18T16:58:58Z"}, "message": "rustbuild: install rust-analysis and rust-src when extended build is enabled\n\nSigned-off-by: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>", "tree": {"sha": "34b70c94913790669eeef7589894f7a769eb495b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34b70c94913790669eeef7589894f7a769eb495b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecfdc9ac1b5ad416661c46cea8075a8a85a09233", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecfdc9ac1b5ad416661c46cea8075a8a85a09233", "html_url": "https://github.com/rust-lang/rust/commit/ecfdc9ac1b5ad416661c46cea8075a8a85a09233", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecfdc9ac1b5ad416661c46cea8075a8a85a09233/comments", "author": {"login": "Keruspe", "id": 222942, "node_id": "MDQ6VXNlcjIyMjk0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/222942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Keruspe", "html_url": "https://github.com/Keruspe", "followers_url": "https://api.github.com/users/Keruspe/followers", "following_url": "https://api.github.com/users/Keruspe/following{/other_user}", "gists_url": "https://api.github.com/users/Keruspe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Keruspe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Keruspe/subscriptions", "organizations_url": "https://api.github.com/users/Keruspe/orgs", "repos_url": "https://api.github.com/users/Keruspe/repos", "events_url": "https://api.github.com/users/Keruspe/events{/privacy}", "received_events_url": "https://api.github.com/users/Keruspe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Keruspe", "id": 222942, "node_id": "MDQ6VXNlcjIyMjk0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/222942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Keruspe", "html_url": "https://github.com/Keruspe", "followers_url": "https://api.github.com/users/Keruspe/followers", "following_url": "https://api.github.com/users/Keruspe/following{/other_user}", "gists_url": "https://api.github.com/users/Keruspe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Keruspe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Keruspe/subscriptions", "organizations_url": "https://api.github.com/users/Keruspe/orgs", "repos_url": "https://api.github.com/users/Keruspe/repos", "events_url": "https://api.github.com/users/Keruspe/events{/privacy}", "received_events_url": "https://api.github.com/users/Keruspe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ed1ec9f9eb8174273867343d01177b5ac13ff4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ed1ec9f9eb8174273867343d01177b5ac13ff4c", "html_url": "https://github.com/rust-lang/rust/commit/0ed1ec9f9eb8174273867343d01177b5ac13ff4c"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "5d5ee67c9569bcd2cb050f7a9018a07ec2ec5b59", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ecfdc9ac1b5ad416661c46cea8075a8a85a09233/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecfdc9ac1b5ad416661c46cea8075a8a85a09233/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=ecfdc9ac1b5ad416661c46cea8075a8a85a09233", "patch": "@@ -55,37 +55,47 @@ pub fn install(build: &Build, stage: u32, host: &str) {\n     t!(fs::create_dir_all(&empty_dir));\n     if build.config.docs {\n         install_sh(&build, \"docs\", \"rust-docs\", &build.rust_package_vers(),\n-                   stage, host, &prefix, &sysconfdir, &docdir, &bindir, &libdir,\n+                   stage, Some(host), &prefix, &sysconfdir, &docdir, &bindir, &libdir,\n                    &mandir, &empty_dir);\n     }\n \n     for target in build.config.target.iter() {\n         install_sh(&build, \"std\", \"rust-std\", &build.rust_package_vers(),\n-                   stage, target, &prefix, &sysconfdir, &docdir, &bindir, &libdir,\n+                   stage, Some(target), &prefix, &sysconfdir, &docdir, &bindir, &libdir,\n                    &mandir, &empty_dir);\n     }\n \n     if build.config.extended {\n         install_sh(&build, \"cargo\", \"cargo\", &build.cargo_package_vers(),\n-                   stage, host, &prefix, &sysconfdir, &docdir, &bindir, &libdir,\n+                   stage, Some(host), &prefix, &sysconfdir, &docdir, &bindir, &libdir,\n                    &mandir, &empty_dir);\n         install_sh(&build, \"rls\", \"rls\", &build.rls_package_vers(),\n-                   stage, host, &prefix, &sysconfdir, &docdir, &bindir, &libdir,\n+                   stage, Some(host), &prefix, &sysconfdir, &docdir, &bindir, &libdir,\n+                   &mandir, &empty_dir);\n+        install_sh(&build, \"analysis\", \"rust-analysis\", &build.rust_package_vers(),\n+                   stage, Some(host), &prefix, &sysconfdir, &docdir, &bindir, &libdir,\n+                   &mandir, &empty_dir);\n+        install_sh(&build, \"src\", \"rust-src\", &build.rust_package_vers(),\n+                   stage, None, &prefix, &sysconfdir, &docdir, &bindir, &libdir,\n                    &mandir, &empty_dir);\n     }\n \n     install_sh(&build, \"rustc\", \"rustc\", &build.rust_package_vers(),\n-               stage, host, &prefix, &sysconfdir, &docdir, &bindir, &libdir,\n+               stage, Some(host), &prefix, &sysconfdir, &docdir, &bindir, &libdir,\n                &mandir, &empty_dir);\n \n     t!(fs::remove_dir_all(&empty_dir));\n }\n \n-fn install_sh(build: &Build, package: &str, name: &str, version: &str, stage: u32, host: &str,\n+fn install_sh(build: &Build, package: &str, name: &str, version: &str, stage: u32, host: Option<&str>,\n               prefix: &Path, sysconfdir: &Path, docdir: &Path, bindir: &Path, libdir: &Path,\n               mandir: &Path, empty_dir: &Path) {\n-    println!(\"Install {} stage{} ({})\", package, stage, host);\n-    let package_name = format!(\"{}-{}-{}\", name, version, host);\n+    println!(\"Install {} stage{} ({:?})\", package, stage, host);\n+    let package_name = if let Some(host) = host {\n+        format!(\"{}-{}-{}\", name, version, host)\n+    } else {\n+        format!(\"{}-{}\", name, version)\n+    };\n \n     let mut cmd = Command::new(\"sh\");\n     cmd.current_dir(empty_dir)"}]}