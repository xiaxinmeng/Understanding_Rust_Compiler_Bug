{"sha": "2b9076ee19da12e3a70bdb2c630e55f8395173d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiOTA3NmVlMTlkYTEyZTNhNzBiZGIyYzYzMGU1NWY4Mzk1MTczZDI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-07T21:22:55Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-08T00:54:34Z"}, "message": "rustdoc: Encode ABI in all methods\n\nThis commit ensures that the ABI of functions is propagated all the way through\nto the documentation.\n\nCloses #22038", "tree": {"sha": "e490d0b590bb66460f9d5f23271c832683d92a2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e490d0b590bb66460f9d5f23271c832683d92a2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b9076ee19da12e3a70bdb2c630e55f8395173d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b9076ee19da12e3a70bdb2c630e55f8395173d2", "html_url": "https://github.com/rust-lang/rust/commit/2b9076ee19da12e3a70bdb2c630e55f8395173d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b9076ee19da12e3a70bdb2c630e55f8395173d2/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6950f68870e73251c86f559dbf050ce197a24695", "url": "https://api.github.com/repos/rust-lang/rust/commits/6950f68870e73251c86f559dbf050ce197a24695", "html_url": "https://github.com/rust-lang/rust/commit/6950f68870e73251c86f559dbf050ce197a24695"}], "stats": {"total": 105, "additions": 97, "deletions": 8}, "files": [{"sha": "4237eb68d281d106519c0ce040e7806b614b4976", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=2b9076ee19da12e3a70bdb2c630e55f8395173d2", "patch": "@@ -163,15 +163,16 @@ pub fn build_external_trait(cx: &DocContext, tcx: &ty::ctxt,\n \n fn build_external_function(cx: &DocContext, tcx: &ty::ctxt, did: ast::DefId) -> clean::Function {\n     let t = ty::lookup_item_type(tcx, did);\n-    let (decl, style) = match t.ty.sty {\n-        ty::ty_bare_fn(_, ref f) => ((did, &f.sig).clean(cx), f.unsafety),\n+    let (decl, style, abi) = match t.ty.sty {\n+        ty::ty_bare_fn(_, ref f) => ((did, &f.sig).clean(cx), f.unsafety, f.abi),\n         _ => panic!(\"bad function\"),\n     };\n     let predicates = ty::lookup_predicates(tcx, did);\n     clean::Function {\n         decl: decl,\n         generics: (&t.generics, &predicates, subst::FnSpace).clean(cx),\n         unsafety: style,\n+        abi: abi,\n     }\n }\n "}, {"sha": "6c59205cd3ec815a06182f324e3e033559562e76", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=2b9076ee19da12e3a70bdb2c630e55f8395173d2", "patch": "@@ -1054,6 +1054,7 @@ pub struct Function {\n     pub decl: FnDecl,\n     pub generics: Generics,\n     pub unsafety: ast::Unsafety,\n+    pub abi: abi::Abi\n }\n \n impl Clean<Item> for doctree::Function {\n@@ -1069,6 +1070,7 @@ impl Clean<Item> for doctree::Function {\n                 decl: self.decl.clean(cx),\n                 generics: self.generics.clean(cx),\n                 unsafety: self.unsafety,\n+                abi: self.abi,\n             }),\n         }\n     }\n@@ -2316,7 +2318,14 @@ impl Clean<ViewListIdent> for ast::PathListItem {\n \n impl Clean<Vec<Item>> for ast::ForeignMod {\n     fn clean(&self, cx: &DocContext) -> Vec<Item> {\n-        self.items.clean(cx)\n+        let mut items = self.items.clean(cx);\n+        for item in &mut items {\n+            match item.inner {\n+                ForeignFunctionItem(ref mut f) => f.abi = self.abi,\n+                _ => {}\n+            }\n+        }\n+        items\n     }\n }\n \n@@ -2328,6 +2337,7 @@ impl Clean<Item> for ast::ForeignItem {\n                     decl: decl.clean(cx),\n                     generics: generics.clean(cx),\n                     unsafety: ast::Unsafety::Unsafe,\n+                    abi: abi::Rust,\n                 })\n             }\n             ast::ForeignItemStatic(ref ty, mutbl) => {"}, {"sha": "862bca1b813386e30934d383b91e49f90a209ec9", "filename": "src/librustdoc/doctree.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Flibrustdoc%2Fdoctree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Flibrustdoc%2Fdoctree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctree.rs?ref=2b9076ee19da12e3a70bdb2c630e55f8395173d2", "patch": "@@ -15,6 +15,7 @@ pub use self::TypeBound::*;\n \n use syntax;\n use syntax::codemap::Span;\n+use syntax::abi;\n use syntax::ast;\n use syntax::attr;\n use syntax::ast::{Ident, NodeId};\n@@ -134,6 +135,7 @@ pub struct Function {\n     pub unsafety: ast::Unsafety,\n     pub whence: Span,\n     pub generics: ast::Generics,\n+    pub abi: abi::Abi,\n }\n \n pub struct Typedef {"}, {"sha": "f6215dcb00c54ba34a6d39df371fce0a66b99d7c", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=2b9076ee19da12e3a70bdb2c630e55f8395173d2", "patch": "@@ -18,6 +18,7 @@\n use std::fmt;\n use std::iter::repeat;\n \n+use syntax::abi::Abi;\n use syntax::ast;\n use syntax::ast_util;\n \n@@ -54,6 +55,7 @@ pub struct WhereClause<'a>(pub &'a clean::Generics);\n pub struct TyParamBounds<'a>(pub &'a [clean::TyParamBound]);\n /// Wrapper struct for emitting a comma-separated list of items\n pub struct CommaSep<'a, T: 'a>(pub &'a [T]);\n+pub struct AbiSpace(pub Abi);\n \n impl VisSpace {\n     pub fn get(&self) -> Option<ast::Visibility> {\n@@ -691,6 +693,16 @@ impl fmt::Display for RawMutableSpace {\n     }\n }\n \n+impl fmt::Display for AbiSpace {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        match self.0 {\n+            Abi::Rust => Ok(()),\n+            Abi::C => write!(f, \"extern \"),\n+            abi => write!(f, \"extern {} \", abi),\n+        }\n+    }\n+}\n+\n impl<'a> fmt::Display for Stability<'a> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         let Stability(stab) = *self;"}, {"sha": "a1ec58cd3dd9ace0c949567dab76485f562ec988", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=2b9076ee19da12e3a70bdb2c630e55f8395173d2", "patch": "@@ -62,7 +62,7 @@ use clean;\n use doctree;\n use fold::DocFolder;\n use html::format::{VisSpace, Method, UnsafetySpace, MutableSpace, Stability};\n-use html::format::{ConciseStability, TyParamBounds, WhereClause, href};\n+use html::format::{ConciseStability, TyParamBounds, WhereClause, href, AbiSpace};\n use html::highlight;\n use html::item_type::ItemType;\n use html::layout;\n@@ -1746,10 +1746,11 @@ fn item_static(w: &mut fmt::Formatter, it: &clean::Item,\n \n fn item_function(w: &mut fmt::Formatter, it: &clean::Item,\n                  f: &clean::Function) -> fmt::Result {\n-    try!(write!(w, \"<pre class='rust fn'>{vis}{unsafety}fn \\\n+    try!(write!(w, \"<pre class='rust fn'>{vis}{unsafety}{abi}fn \\\n                     {name}{generics}{decl}{where_clause}</pre>\",\n            vis = VisSpace(it.visibility),\n            unsafety = UnsafetySpace(f.unsafety),\n+           abi = AbiSpace(f.abi),\n            name = it.name.as_ref().unwrap(),\n            generics = f.generics,\n            where_clause = WhereClause(&f.generics),"}, {"sha": "a1fa96322a4e3634aa4ad177edff412cfaac3955", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=2b9076ee19da12e3a70bdb2c630e55f8395173d2", "patch": "@@ -123,7 +123,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n \n     pub fn visit_fn(&mut self, item: &ast::Item,\n                     name: ast::Ident, fd: &ast::FnDecl,\n-                    unsafety: &ast::Unsafety, _abi: &abi::Abi,\n+                    unsafety: &ast::Unsafety, abi: &abi::Abi,\n                     gen: &ast::Generics) -> Function {\n         debug!(\"Visiting fn\");\n         Function {\n@@ -136,6 +136,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n             whence: item.span,\n             generics: gen.clone(),\n             unsafety: *unsafety,\n+            abi: *abi,\n         }\n     }\n "}, {"sha": "554b580ae2b1fc71f477eaddc0b4b8864e717f4c", "filename": "src/test/auxiliary/issue-22025.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Ftest%2Fauxiliary%2Fissue-22025.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Ftest%2Fauxiliary%2Fissue-22025.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-22025.rs?ref=2b9076ee19da12e3a70bdb2c630e55f8395173d2", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod foo {\n+\n+    pub trait Foo {}\n+    pub struct Bar;\n+\n+    impl Foo for Bar {}\n+\n+}"}, {"sha": "8ccc6a0f2fbd003c921dcc88ede6427ba7a9e4c4", "filename": "src/test/rustdoc/ffi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Ftest%2Frustdoc%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Ftest%2Frustdoc%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fffi.rs?ref=2b9076ee19da12e3a70bdb2c630e55f8395173d2", "patch": "@@ -12,10 +12,10 @@\n \n extern crate rustdoc_ffi as lib;\n \n-// @has ffi/fn.foreigner.html //pre 'pub unsafe fn foreigner(cold_as_ice: u32)'\n+// @has ffi/fn.foreigner.html //pre 'pub unsafe extern fn foreigner(cold_as_ice: u32)'\n pub use lib::foreigner;\n \n extern \"C\" {\n-    // @has ffi/fn.another.html //pre 'pub unsafe fn another(cold_as_ice: u32)'\n+    // @has ffi/fn.another.html //pre 'pub unsafe extern fn another(cold_as_ice: u32)'\n     pub fn another(cold_as_ice: u32);\n }"}, {"sha": "544dad07cda441105caaf3294e3840829152e7fb", "filename": "src/test/rustdoc/issue-22025.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Ftest%2Frustdoc%2Fissue-22025.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Ftest%2Frustdoc%2Fissue-22025.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-22025.rs?ref=2b9076ee19da12e3a70bdb2c630e55f8395173d2", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-22025.rs\n+\n+extern crate issue_22025;\n+\n+pub use issue_22025::foo::{Foo, Bar};"}, {"sha": "6f84428b0798ff36965118296d20a204c61fa4b3", "filename": "src/test/rustdoc/issue-22038.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Ftest%2Frustdoc%2Fissue-22038.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b9076ee19da12e3a70bdb2c630e55f8395173d2/src%2Ftest%2Frustdoc%2Fissue-22038.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-22038.rs?ref=2b9076ee19da12e3a70bdb2c630e55f8395173d2", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern {\n+    // @has issue_22038/fn.foo1.html \\\n+    //      '//*[@class=\"rust fn\"]' 'pub unsafe extern fn foo1()'\n+    pub fn foo1();\n+}\n+\n+extern \"system\" {\n+    // @has issue_22038/fn.foo2.html \\\n+    //      '//*[@class=\"rust fn\"]' 'pub unsafe extern \"system\" fn foo2()'\n+    pub fn foo2();\n+}\n+\n+// @has issue_22038/fn.bar.html \\\n+//      '//*[@class=\"rust fn\"]' 'pub extern fn bar()'\n+pub extern fn bar() {}\n+\n+// @has issue_22038/fn.baz.html \\\n+//      '//*[@class=\"rust fn\"]' 'pub extern \"system\" fn baz()'\n+pub extern \"system\" fn baz() {}"}]}