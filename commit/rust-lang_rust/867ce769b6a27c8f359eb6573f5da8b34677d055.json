{"sha": "867ce769b6a27c8f359eb6573f5da8b34677d055", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2N2NlNzY5YjZhMjdjOGYzNTllYjY1NzNmNWRhOGIzNDY3N2QwNTU=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-09-06T05:31:09Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-09-06T05:31:09Z"}, "message": "Make rustc_mir::dataflow module pub", "tree": {"sha": "824de14a58a06924af66febf3d3037e366ff709e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/824de14a58a06924af66febf3d3037e366ff709e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/867ce769b6a27c8f359eb6573f5da8b34677d055", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/867ce769b6a27c8f359eb6573f5da8b34677d055", "html_url": "https://github.com/rust-lang/rust/commit/867ce769b6a27c8f359eb6573f5da8b34677d055", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/867ce769b6a27c8f359eb6573f5da8b34677d055/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f42f3e108db9390038a93fc95d9376aa871ae34", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f42f3e108db9390038a93fc95d9376aa871ae34", "html_url": "https://github.com/rust-lang/rust/commit/5f42f3e108db9390038a93fc95d9376aa871ae34"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "c349cf4a47ba13f3d020b9da7ce3ea9300185e4d", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/867ce769b6a27c8f359eb6573f5da8b34677d055/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/867ce769b6a27c8f359eb6573f5da8b34677d055/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=867ce769b6a27c8f359eb6573f5da8b34677d055", "patch": "@@ -56,7 +56,7 @@ where\n /// string (as well as that of rendering up-front); in exchange, you\n /// don't have to hand over ownership of your value or deal with\n /// borrowing it.\n-pub(crate) struct DebugFormatted(String);\n+pub struct DebugFormatted(String);\n \n impl DebugFormatted {\n     pub fn new(input: &dyn fmt::Debug) -> DebugFormatted {\n@@ -70,7 +70,7 @@ impl fmt::Debug for DebugFormatted {\n     }\n }\n \n-pub(crate) trait Dataflow<'tcx, BD: BitDenotation<'tcx>> {\n+pub trait Dataflow<'tcx, BD: BitDenotation<'tcx>> {\n     /// Sets up and runs the dataflow problem, using `p` to render results if\n     /// implementation so chooses.\n     fn dataflow<P>(&mut self, p: P) where P: Fn(&BD, BD::Idx) -> DebugFormatted {\n@@ -121,7 +121,7 @@ pub struct MoveDataParamEnv<'tcx> {\n     pub(crate) param_env: ty::ParamEnv<'tcx>,\n }\n \n-pub(crate) fn do_dataflow<'a, 'tcx, BD, P>(\n+pub fn do_dataflow<'a, 'tcx, BD, P>(\n     tcx: TyCtxt<'tcx>,\n     body: &'a Body<'tcx>,\n     def_id: DefId,\n@@ -565,7 +565,7 @@ pub struct GenKill<T> {\n     pub(crate) kill_set: T,\n }\n \n-type GenKillSet<T> = GenKill<HybridBitSet<T>>;\n+pub type GenKillSet<T> = GenKill<HybridBitSet<T>>;\n \n impl<T> GenKill<T> {\n     /// Creates a new tuple where `gen_set == kill_set == elem`.\n@@ -580,28 +580,28 @@ impl<T> GenKill<T> {\n }\n \n impl<E:Idx> GenKillSet<E> {\n-    pub(crate) fn clear(&mut self) {\n+    pub fn clear(&mut self) {\n         self.gen_set.clear();\n         self.kill_set.clear();\n     }\n \n-    fn gen(&mut self, e: E) {\n+    pub fn gen(&mut self, e: E) {\n         self.gen_set.insert(e);\n         self.kill_set.remove(e);\n     }\n \n-    fn gen_all(&mut self, i: impl IntoIterator<Item: Borrow<E>>) {\n+    pub fn gen_all(&mut self, i: impl IntoIterator<Item: Borrow<E>>) {\n         for j in i {\n             self.gen(*j.borrow());\n         }\n     }\n \n-    fn kill(&mut self, e: E) {\n+    pub fn kill(&mut self, e: E) {\n         self.gen_set.remove(e);\n         self.kill_set.insert(e);\n     }\n \n-    fn kill_all(&mut self, i: impl IntoIterator<Item: Borrow<E>>) {\n+    pub fn kill_all(&mut self, i: impl IntoIterator<Item: Borrow<E>>) {\n         for j in i {\n             self.kill(*j.borrow());\n         }"}, {"sha": "2b6e42b33a2de789d10b98399a21ff66a9d6c543", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/867ce769b6a27c8f359eb6573f5da8b34677d055/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/867ce769b6a27c8f359eb6573f5da8b34677d055/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=867ce769b6a27c8f359eb6573f5da8b34677d055", "patch": "@@ -36,7 +36,7 @@ mod error_codes;\n \n mod borrow_check;\n mod build;\n-mod dataflow;\n+pub mod dataflow;\n mod hair;\n mod lints;\n mod shim;"}]}