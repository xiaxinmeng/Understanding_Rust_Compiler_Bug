{"sha": "0b8f3729fb13e6262f1fa5055ec38d7033f95cd0", "node_id": "C_kwDOAAsO6NoAKDBiOGYzNzI5ZmIxM2U2MjYyZjFmYTUwNTVlYzM4ZDcwMzNmOTVjZDA", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-29T13:36:35Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-31T17:25:05Z"}, "message": "Remove two unnecessary transmutes from opaque Encoder and Decoder", "tree": {"sha": "a8003fc29fc1db174e0def7e7de3030f73fff8be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8003fc29fc1db174e0def7e7de3030f73fff8be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b8f3729fb13e6262f1fa5055ec38d7033f95cd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b8f3729fb13e6262f1fa5055ec38d7033f95cd0", "html_url": "https://github.com/rust-lang/rust/commit/0b8f3729fb13e6262f1fa5055ec38d7033f95cd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b8f3729fb13e6262f1fa5055ec38d7033f95cd0/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca43894e0e350af2245ba7d9ad8b6e31e0d4786d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca43894e0e350af2245ba7d9ad8b6e31e0d4786d", "html_url": "https://github.com/rust-lang/rust/commit/ca43894e0e350af2245ba7d9ad8b6e31e0d4786d"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "7a05d2b762a47dfa0df44f4be783efe02b9ed519", "filename": "compiler/rustc_serialize/src/opaque.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0b8f3729fb13e6262f1fa5055ec38d7033f95cd0/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b8f3729fb13e6262f1fa5055ec38d7033f95cd0/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs?ref=0b8f3729fb13e6262f1fa5055ec38d7033f95cd0", "patch": "@@ -130,8 +130,7 @@ impl serialize::Encoder for Encoder {\n \n     #[inline]\n     fn emit_i8(&mut self, v: i8) -> EncodeResult {\n-        let as_u8: u8 = unsafe { std::mem::transmute(v) };\n-        self.emit_u8(as_u8)\n+        self.emit_u8(v as u8)\n     }\n \n     #[inline]\n@@ -629,9 +628,9 @@ impl<'a> serialize::Decoder for Decoder<'a> {\n \n     #[inline]\n     fn read_i8(&mut self) -> i8 {\n-        let as_u8 = self.data[self.position];\n+        let value = self.data[self.position];\n         self.position += 1;\n-        unsafe { ::std::mem::transmute(as_u8) }\n+        value as i8\n     }\n \n     #[inline]"}]}