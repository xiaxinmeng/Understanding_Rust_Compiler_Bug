{"sha": "e214ea82ad0a751563acf67e1cd9279cf302db3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMTRlYTgyYWQwYTc1MTU2M2FjZjY3ZTFjZDkyNzljZjMwMmRiM2E=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-17T11:29:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-17T11:29:04Z"}, "message": "Auto merge of #5568 - ThibsG:RenameIdentityConversionLint, r=flip1995\n\nRename lint `identity_conversion` to `useless_conversion`\n\nLint name `identity_conversion` was misleading, so this PR renames it to `useless_conversion`.\n\nAs decision has not really came up in the issue comments, this PR will probably need discussion.\n\nfixes #3106\n\nchangelog: Rename lint `identity_conversion` to `useless_conversion`", "tree": {"sha": "183dc914141526331128f37006982998b9a81cba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/183dc914141526331128f37006982998b9a81cba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e214ea82ad0a751563acf67e1cd9279cf302db3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e214ea82ad0a751563acf67e1cd9279cf302db3a", "html_url": "https://github.com/rust-lang/rust/commit/e214ea82ad0a751563acf67e1cd9279cf302db3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e214ea82ad0a751563acf67e1cd9279cf302db3a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ae0643d1a30a72d27f427064a16cf32bdb92283", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ae0643d1a30a72d27f427064a16cf32bdb92283", "html_url": "https://github.com/rust-lang/rust/commit/6ae0643d1a30a72d27f427064a16cf32bdb92283"}, {"sha": "e55b920970fdc33f5ddaf7757738fbacdadf15ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/e55b920970fdc33f5ddaf7757738fbacdadf15ab", "html_url": "https://github.com/rust-lang/rust/commit/e55b920970fdc33f5ddaf7757738fbacdadf15ab"}], "stats": {"total": 113, "additions": 60, "deletions": 53}, "files": [{"sha": "583c32ca9e032ed67f6cf333bcbcc8c107936d58", "filename": "CHANGELOG.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e214ea82ad0a751563acf67e1cd9279cf302db3a/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/e214ea82ad0a751563acf67e1cd9279cf302db3a/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=e214ea82ad0a751563acf67e1cd9279cf302db3a", "patch": "@@ -805,7 +805,7 @@ Released 2018-09-13\n \n ## 0.0.166\n * Rustup to *rustc 1.22.0-nightly (b7960878b 2017-10-18)*\n-* New lints: [`explicit_write`], [`identity_conversion`], [`implicit_hasher`], [`invalid_ref`], [`option_map_or_none`],\n+* New lints: [`explicit_write`], `identity_conversion`, [`implicit_hasher`], [`invalid_ref`], [`option_map_or_none`],\n   [`range_minus_one`], [`range_plus_one`], [`transmute_int_to_bool`], [`transmute_int_to_char`],\n   [`transmute_int_to_float`]\n \n@@ -1368,7 +1368,6 @@ Released 2018-09-13\n [`future_not_send`]: https://rust-lang.github.io/rust-clippy/master/index.html#future_not_send\n [`get_last_with_len`]: https://rust-lang.github.io/rust-clippy/master/index.html#get_last_with_len\n [`get_unwrap`]: https://rust-lang.github.io/rust-clippy/master/index.html#get_unwrap\n-[`identity_conversion`]: https://rust-lang.github.io/rust-clippy/master/index.html#identity_conversion\n [`identity_op`]: https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n [`if_let_mutex`]: https://rust-lang.github.io/rust-clippy/master/index.html#if_let_mutex\n [`if_let_redundant_pattern_matching`]: https://rust-lang.github.io/rust-clippy/master/index.html#if_let_redundant_pattern_matching\n@@ -1624,6 +1623,7 @@ Released 2018-09-13\n [`used_underscore_binding`]: https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding\n [`useless_asref`]: https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref\n [`useless_attribute`]: https://rust-lang.github.io/rust-clippy/master/index.html#useless_attribute\n+[`useless_conversion`]: https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n [`useless_format`]: https://rust-lang.github.io/rust-clippy/master/index.html#useless_format\n [`useless_let_if_seq`]: https://rust-lang.github.io/rust-clippy/master/index.html#useless_let_if_seq\n [`useless_transmute`]: https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute"}, {"sha": "e0787ac0887e4fde54a7c8e77a6bfa80b42bb8a2", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e214ea82ad0a751563acf67e1cd9279cf302db3a/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e214ea82ad0a751563acf67e1cd9279cf302db3a/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=e214ea82ad0a751563acf67e1cd9279cf302db3a", "patch": "@@ -221,7 +221,6 @@ mod formatting;\n mod functions;\n mod future_not_send;\n mod get_last_with_len;\n-mod identity_conversion;\n mod identity_op;\n mod if_let_mutex;\n mod if_let_some_result;\n@@ -324,6 +323,7 @@ mod unused_io_amount;\n mod unused_self;\n mod unwrap;\n mod use_self;\n+mod useless_conversion;\n mod vec;\n mod verbose_file_reads;\n mod wildcard_dependencies;\n@@ -577,7 +577,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &functions::TOO_MANY_LINES,\n         &future_not_send::FUTURE_NOT_SEND,\n         &get_last_with_len::GET_LAST_WITH_LEN,\n-        &identity_conversion::IDENTITY_CONVERSION,\n         &identity_op::IDENTITY_OP,\n         &if_let_mutex::IF_LET_MUTEX,\n         &if_let_some_result::IF_LET_SOME_RESULT,\n@@ -843,6 +842,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &unwrap::PANICKING_UNWRAP,\n         &unwrap::UNNECESSARY_UNWRAP,\n         &use_self::USE_SELF,\n+        &useless_conversion::USELESS_CONVERSION,\n         &utils::internal_lints::CLIPPY_LINTS_INTERNAL,\n         &utils::internal_lints::COLLAPSIBLE_SPAN_LINT_CALLS,\n         &utils::internal_lints::COMPILER_LINT_FUNCTIONS,\n@@ -980,7 +980,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| box bytecount::ByteCount);\n     store.register_late_pass(|| box infinite_iter::InfiniteIter);\n     store.register_late_pass(|| box inline_fn_without_body::InlineFnWithoutBody);\n-    store.register_late_pass(|| box identity_conversion::IdentityConversion::default());\n+    store.register_late_pass(|| box useless_conversion::UselessConversion::default());\n     store.register_late_pass(|| box types::ImplicitHasher);\n     store.register_late_pass(|| box fallible_impl_from::FallibleImplFrom);\n     store.register_late_pass(|| box types::UnitArg);\n@@ -1241,7 +1241,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&functions::NOT_UNSAFE_PTR_ARG_DEREF),\n         LintId::of(&functions::TOO_MANY_ARGUMENTS),\n         LintId::of(&get_last_with_len::GET_LAST_WITH_LEN),\n-        LintId::of(&identity_conversion::IDENTITY_CONVERSION),\n         LintId::of(&identity_op::IDENTITY_OP),\n         LintId::of(&if_let_mutex::IF_LET_MUTEX),\n         LintId::of(&if_let_some_result::IF_LET_SOME_RESULT),\n@@ -1427,6 +1426,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&unused_io_amount::UNUSED_IO_AMOUNT),\n         LintId::of(&unwrap::PANICKING_UNWRAP),\n         LintId::of(&unwrap::UNNECESSARY_UNWRAP),\n+        LintId::of(&useless_conversion::USELESS_CONVERSION),\n         LintId::of(&vec::USELESS_VEC),\n         LintId::of(&write::PRINTLN_EMPTY_STRING),\n         LintId::of(&write::PRINT_LITERAL),\n@@ -1546,7 +1546,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&format::USELESS_FORMAT),\n         LintId::of(&functions::TOO_MANY_ARGUMENTS),\n         LintId::of(&get_last_with_len::GET_LAST_WITH_LEN),\n-        LintId::of(&identity_conversion::IDENTITY_CONVERSION),\n         LintId::of(&identity_op::IDENTITY_OP),\n         LintId::of(&int_plus_one::INT_PLUS_ONE),\n         LintId::of(&lifetimes::EXTRA_UNUSED_LIFETIMES),\n@@ -1605,6 +1604,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&types::UNNECESSARY_CAST),\n         LintId::of(&types::VEC_BOX),\n         LintId::of(&unwrap::UNNECESSARY_UNWRAP),\n+        LintId::of(&useless_conversion::USELESS_CONVERSION),\n         LintId::of(&zero_div_zero::ZERO_DIVIDED_BY_ZERO),\n     ]);\n \n@@ -1796,6 +1796,7 @@ pub fn register_renamed(ls: &mut rustc_lint::LintStore) {\n     ls.register_renamed(\"clippy::result_expect_used\", \"clippy::expect_used\");\n     ls.register_renamed(\"clippy::for_loop_over_option\", \"clippy::for_loops_over_fallibles\");\n     ls.register_renamed(\"clippy::for_loop_over_result\", \"clippy::for_loops_over_fallibles\");\n+    ls.register_renamed(\"clippy::identity_conversion\", \"clippy::useless_conversion\");\n }\n \n // only exists to let the dogfood integration test works."}, {"sha": "95921518986bcb464581a61ca20b7680e9094ede", "filename": "clippy_lints/src/useless_conversion.rs", "status": "renamed", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e214ea82ad0a751563acf67e1cd9279cf302db3a/clippy_lints%2Fsrc%2Fuseless_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e214ea82ad0a751563acf67e1cd9279cf302db3a/clippy_lints%2Fsrc%2Fuseless_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuseless_conversion.rs?ref=e214ea82ad0a751563acf67e1cd9279cf302db3a", "patch": "@@ -7,30 +7,36 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n declare_clippy_lint! {\n-    /// **What it does:** Checks for always-identical `Into`/`From`/`IntoIter` conversions.\n+    /// **What it does:** Checks for `Into`/`From`/`IntoIter` calls that useless converts\n+    /// to the same type as caller.\n     ///\n     /// **Why is this bad?** Redundant code.\n     ///\n     /// **Known problems:** None.\n     ///\n     /// **Example:**\n+    ///\n     /// ```rust\n+    /// // Bad\n     /// // format!() returns a `String`\n     /// let s: String = format!(\"hello\").into();\n+    ///\n+    /// // Good\n+    /// let s: String = format!(\"hello\");\n     /// ```\n-    pub IDENTITY_CONVERSION,\n+    pub USELESS_CONVERSION,\n     complexity,\n-    \"using always-identical `Into`/`From`/`IntoIter` conversions\"\n+    \"calls to `Into`/`From`/`IntoIter` that performs useless conversions to the same type\"\n }\n \n #[derive(Default)]\n-pub struct IdentityConversion {\n+pub struct UselessConversion {\n     try_desugar_arm: Vec<HirId>,\n }\n \n-impl_lint_pass!(IdentityConversion => [IDENTITY_CONVERSION]);\n+impl_lint_pass!(UselessConversion => [USELESS_CONVERSION]);\n \n-impl<'a, 'tcx> LateLintPass<'a, 'tcx> for IdentityConversion {\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UselessConversion {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, e: &'tcx Expr<'_>) {\n         if e.span.from_expansion() {\n             return;\n@@ -60,9 +66,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for IdentityConversion {\n \n                         span_lint_and_sugg(\n                             cx,\n-                            IDENTITY_CONVERSION,\n+                            USELESS_CONVERSION,\n                             e.span,\n-                            \"identical conversion\",\n+                            \"useless conversion\",\n                             \"consider removing `.into()`\",\n                             sugg,\n                             Applicability::MachineApplicable, // snippet\n@@ -76,9 +82,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for IdentityConversion {\n                         let sugg = snippet(cx, args[0].span, \"<expr>\").into_owned();\n                         span_lint_and_sugg(\n                             cx,\n-                            IDENTITY_CONVERSION,\n+                            USELESS_CONVERSION,\n                             e.span,\n-                            \"identical conversion\",\n+                            \"useless conversion\",\n                             \"consider removing `.into_iter()`\",\n                             sugg,\n                             Applicability::MachineApplicable, // snippet\n@@ -99,9 +105,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for IdentityConversion {\n                                     format!(\"consider removing `{}()`\", snippet(cx, path.span, \"From::from\"));\n                                 span_lint_and_sugg(\n                                     cx,\n-                                    IDENTITY_CONVERSION,\n+                                    USELESS_CONVERSION,\n                                     e.span,\n-                                    \"identical conversion\",\n+                                    \"useless conversion\",\n                                     &sugg_msg,\n                                     sugg,\n                                     Applicability::MachineApplicable, // snippet", "previous_filename": "clippy_lints/src/identity_conversion.rs"}, {"sha": "9457a64f9c6b96e48048d6118c9f731f0a4056a8", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e214ea82ad0a751563acf67e1cd9279cf302db3a/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e214ea82ad0a751563acf67e1cd9279cf302db3a/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=e214ea82ad0a751563acf67e1cd9279cf302db3a", "patch": "@@ -724,13 +724,6 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n         deprecation: None,\n         module: \"methods\",\n     },\n-    Lint {\n-        name: \"identity_conversion\",\n-        group: \"complexity\",\n-        desc: \"using always-identical `Into`/`From`/`IntoIter` conversions\",\n-        deprecation: None,\n-        module: \"identity_conversion\",\n-    },\n     Lint {\n         name: \"identity_op\",\n         group: \"complexity\",\n@@ -2418,6 +2411,13 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n         deprecation: None,\n         module: \"attrs\",\n     },\n+    Lint {\n+        name: \"useless_conversion\",\n+        group: \"complexity\",\n+        desc: \"calls to `Into`/`From`/`IntoIter` that performs useless conversions to the same type\",\n+        deprecation: None,\n+        module: \"useless_conversion\",\n+    },\n     Lint {\n         name: \"useless_format\",\n         group: \"complexity\","}, {"sha": "fdd4bc581f305a21281c8d6da8e642cc54dbf455", "filename": "tests/ui/useless_conversion.fixed", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e214ea82ad0a751563acf67e1cd9279cf302db3a/tests%2Fui%2Fuseless_conversion.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e214ea82ad0a751563acf67e1cd9279cf302db3a/tests%2Fui%2Fuseless_conversion.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_conversion.fixed?ref=e214ea82ad0a751563acf67e1cd9279cf302db3a", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n \n-#![deny(clippy::identity_conversion)]\n+#![deny(clippy::useless_conversion)]\n \n fn test_generic<T: Copy>(val: T) -> T {\n     let _ = val;\n@@ -41,7 +41,7 @@ fn main() {\n     let _: String = \"foo\".into();\n     let _: String = From::from(\"foo\");\n     let _ = String::from(\"foo\");\n-    #[allow(clippy::identity_conversion)]\n+    #[allow(clippy::useless_conversion)]\n     {\n         let _: String = \"foo\".into();\n         let _ = String::from(\"foo\");", "previous_filename": "tests/ui/identity_conversion.fixed"}, {"sha": "4cae745e7c0211f2a886c21760451f459192fd59", "filename": "tests/ui/useless_conversion.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e214ea82ad0a751563acf67e1cd9279cf302db3a/tests%2Fui%2Fuseless_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e214ea82ad0a751563acf67e1cd9279cf302db3a/tests%2Fui%2Fuseless_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_conversion.rs?ref=e214ea82ad0a751563acf67e1cd9279cf302db3a", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n \n-#![deny(clippy::identity_conversion)]\n+#![deny(clippy::useless_conversion)]\n \n fn test_generic<T: Copy>(val: T) -> T {\n     let _ = T::from(val);\n@@ -41,7 +41,7 @@ fn main() {\n     let _: String = \"foo\".into();\n     let _: String = From::from(\"foo\");\n     let _ = String::from(\"foo\");\n-    #[allow(clippy::identity_conversion)]\n+    #[allow(clippy::useless_conversion)]\n     {\n         let _: String = \"foo\".into();\n         let _ = String::from(\"foo\");", "previous_filename": "tests/ui/identity_conversion.rs"}, {"sha": "7df3507edfd9ebb25f2af54cb6f6885836e9ad5e", "filename": "tests/ui/useless_conversion.stderr", "status": "renamed", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/e214ea82ad0a751563acf67e1cd9279cf302db3a/tests%2Fui%2Fuseless_conversion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e214ea82ad0a751563acf67e1cd9279cf302db3a/tests%2Fui%2Fuseless_conversion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_conversion.stderr?ref=e214ea82ad0a751563acf67e1cd9279cf302db3a", "patch": "@@ -1,65 +1,65 @@\n-error: identical conversion\n-  --> $DIR/identity_conversion.rs:6:13\n+error: useless conversion\n+  --> $DIR/useless_conversion.rs:6:13\n    |\n LL |     let _ = T::from(val);\n    |             ^^^^^^^^^^^^ help: consider removing `T::from()`: `val`\n    |\n note: the lint level is defined here\n-  --> $DIR/identity_conversion.rs:3:9\n+  --> $DIR/useless_conversion.rs:3:9\n    |\n-LL | #![deny(clippy::identity_conversion)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(clippy::useless_conversion)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: identical conversion\n-  --> $DIR/identity_conversion.rs:7:5\n+error: useless conversion\n+  --> $DIR/useless_conversion.rs:7:5\n    |\n LL |     val.into()\n    |     ^^^^^^^^^^ help: consider removing `.into()`: `val`\n \n-error: identical conversion\n-  --> $DIR/identity_conversion.rs:19:22\n+error: useless conversion\n+  --> $DIR/useless_conversion.rs:19:22\n    |\n LL |         let _: i32 = 0i32.into();\n    |                      ^^^^^^^^^^^ help: consider removing `.into()`: `0i32`\n \n-error: identical conversion\n-  --> $DIR/identity_conversion.rs:51:21\n+error: useless conversion\n+  --> $DIR/useless_conversion.rs:51:21\n    |\n LL |     let _: String = \"foo\".to_string().into();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `\"foo\".to_string()`\n \n-error: identical conversion\n-  --> $DIR/identity_conversion.rs:52:21\n+error: useless conversion\n+  --> $DIR/useless_conversion.rs:52:21\n    |\n LL |     let _: String = From::from(\"foo\".to_string());\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `From::from()`: `\"foo\".to_string()`\n \n-error: identical conversion\n-  --> $DIR/identity_conversion.rs:53:13\n+error: useless conversion\n+  --> $DIR/useless_conversion.rs:53:13\n    |\n LL |     let _ = String::from(\"foo\".to_string());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `\"foo\".to_string()`\n \n-error: identical conversion\n-  --> $DIR/identity_conversion.rs:54:13\n+error: useless conversion\n+  --> $DIR/useless_conversion.rs:54:13\n    |\n LL |     let _ = String::from(format!(\"A: {:04}\", 123));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `format!(\"A: {:04}\", 123)`\n \n-error: identical conversion\n-  --> $DIR/identity_conversion.rs:55:13\n+error: useless conversion\n+  --> $DIR/useless_conversion.rs:55:13\n    |\n LL |     let _ = \"\".lines().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `\"\".lines()`\n \n-error: identical conversion\n-  --> $DIR/identity_conversion.rs:56:13\n+error: useless conversion\n+  --> $DIR/useless_conversion.rs:56:13\n    |\n LL |     let _ = vec![1, 2, 3].into_iter().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `vec![1, 2, 3].into_iter()`\n \n-error: identical conversion\n-  --> $DIR/identity_conversion.rs:57:21\n+error: useless conversion\n+  --> $DIR/useless_conversion.rs:57:21\n    |\n LL |     let _: String = format!(\"Hello {}\", \"world\").into();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `format!(\"Hello {}\", \"world\")`", "previous_filename": "tests/ui/identity_conversion.stderr"}]}