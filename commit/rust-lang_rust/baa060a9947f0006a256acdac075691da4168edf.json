{"sha": "baa060a9947f0006a256acdac075691da4168edf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYTA2MGE5OTQ3ZjAwMDZhMjU2YWNkYWMwNzU2OTFkYTQxNjhlZGY=", "commit": {"author": {"name": "rezural", "email": "rezural@protonmail.com", "date": "2021-06-20T23:33:57Z"}, "committer": {"name": "rezural", "email": "rezural@protonmail.com", "date": "2021-06-20T23:33:57Z"}, "message": "output to log file if RA_LOG_FILE is defined in environment", "tree": {"sha": "c378f6511d0c0c6b75e36747b9b3be6709dd4f76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c378f6511d0c0c6b75e36747b9b3be6709dd4f76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/baa060a9947f0006a256acdac075691da4168edf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/baa060a9947f0006a256acdac075691da4168edf", "html_url": "https://github.com/rust-lang/rust/commit/baa060a9947f0006a256acdac075691da4168edf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/baa060a9947f0006a256acdac075691da4168edf/comments", "author": {"login": "rezural", "id": 69941255, "node_id": "MDQ6VXNlcjY5OTQxMjU1", "avatar_url": "https://avatars.githubusercontent.com/u/69941255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rezural", "html_url": "https://github.com/rezural", "followers_url": "https://api.github.com/users/rezural/followers", "following_url": "https://api.github.com/users/rezural/following{/other_user}", "gists_url": "https://api.github.com/users/rezural/gists{/gist_id}", "starred_url": "https://api.github.com/users/rezural/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rezural/subscriptions", "organizations_url": "https://api.github.com/users/rezural/orgs", "repos_url": "https://api.github.com/users/rezural/repos", "events_url": "https://api.github.com/users/rezural/events{/privacy}", "received_events_url": "https://api.github.com/users/rezural/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rezural", "id": 69941255, "node_id": "MDQ6VXNlcjY5OTQxMjU1", "avatar_url": "https://avatars.githubusercontent.com/u/69941255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rezural", "html_url": "https://github.com/rezural", "followers_url": "https://api.github.com/users/rezural/followers", "following_url": "https://api.github.com/users/rezural/following{/other_user}", "gists_url": "https://api.github.com/users/rezural/gists{/gist_id}", "starred_url": "https://api.github.com/users/rezural/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rezural/subscriptions", "organizations_url": "https://api.github.com/users/rezural/orgs", "repos_url": "https://api.github.com/users/rezural/repos", "events_url": "https://api.github.com/users/rezural/events{/privacy}", "received_events_url": "https://api.github.com/users/rezural/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d60d75e1400ba82ae8d41496d8a0fb9a8edec0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d60d75e1400ba82ae8d41496d8a0fb9a8edec0c", "html_url": "https://github.com/rust-lang/rust/commit/9d60d75e1400ba82ae8d41496d8a0fb9a8edec0c"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "97246cae6f00aff5e190c6c0fb35577c9283f2e5", "filename": "crates/rust-analyzer/src/bin/main.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/baa060a9947f0006a256acdac075691da4168edf/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baa060a9947f0006a256acdac075691da4168edf/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs?ref=baa060a9947f0006a256acdac075691da4168edf", "patch": "@@ -60,7 +60,14 @@ fn try_main() -> Result<()> {\n         }\n     }\n \n-    setup_logging(flags.log_file.as_deref(), flags.no_log_buffering)?;\n+    let mut log_file = flags.log_file.as_deref();\n+\n+    let env_log_file = env::var(\"RA_LOG_FILE\").ok();\n+    if let Some(env_log_file) = env_log_file.as_deref() {\n+        log_file = Some(Path::new(env_log_file));\n+    }\n+\n+    setup_logging(log_file, flags.no_log_buffering)?;\n     let verbosity = flags.verbosity();\n \n     match flags.subcommand {"}]}