{"sha": "2fd7701dd6700b71e8157e31430508ba830b96ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmZDc3MDFkZDY3MDBiNzFlODE1N2UzMTQzMDUwOGJhODMwYjk2YWM=", "commit": {"author": {"name": "Brandon W Maister", "email": "quodlibetor@gmail.com", "date": "2016-02-13T20:11:08Z"}, "committer": {"name": "Brandon W Maister", "email": "quodlibetor@gmail.com", "date": "2016-02-13T20:15:31Z"}, "message": "doc pages: add the ability to search unknown types\n\nThis enables `*` in all type positions in doc searches, which I often\nwant in order to find functions that create or convert specific\ntypes (e.g. `* -> vec`) but I don't actually know what kinds of input\nthey expect.\n\nI actually started working on this because of #31598, but I've wanted it\nseveral times when exploring new crates.", "tree": {"sha": "1f85dddf90da4852616bed9e37e30e4757c95181", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f85dddf90da4852616bed9e37e30e4757c95181"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fd7701dd6700b71e8157e31430508ba830b96ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fd7701dd6700b71e8157e31430508ba830b96ac", "html_url": "https://github.com/rust-lang/rust/commit/2fd7701dd6700b71e8157e31430508ba830b96ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fd7701dd6700b71e8157e31430508ba830b96ac/comments", "author": {"login": "quodlibetor", "id": 277161, "node_id": "MDQ6VXNlcjI3NzE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/277161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quodlibetor", "html_url": "https://github.com/quodlibetor", "followers_url": "https://api.github.com/users/quodlibetor/followers", "following_url": "https://api.github.com/users/quodlibetor/following{/other_user}", "gists_url": "https://api.github.com/users/quodlibetor/gists{/gist_id}", "starred_url": "https://api.github.com/users/quodlibetor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quodlibetor/subscriptions", "organizations_url": "https://api.github.com/users/quodlibetor/orgs", "repos_url": "https://api.github.com/users/quodlibetor/repos", "events_url": "https://api.github.com/users/quodlibetor/events{/privacy}", "received_events_url": "https://api.github.com/users/quodlibetor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "quodlibetor", "id": 277161, "node_id": "MDQ6VXNlcjI3NzE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/277161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quodlibetor", "html_url": "https://github.com/quodlibetor", "followers_url": "https://api.github.com/users/quodlibetor/followers", "following_url": "https://api.github.com/users/quodlibetor/following{/other_user}", "gists_url": "https://api.github.com/users/quodlibetor/gists{/gist_id}", "starred_url": "https://api.github.com/users/quodlibetor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quodlibetor/subscriptions", "organizations_url": "https://api.github.com/users/quodlibetor/orgs", "repos_url": "https://api.github.com/users/quodlibetor/repos", "events_url": "https://api.github.com/users/quodlibetor/events{/privacy}", "received_events_url": "https://api.github.com/users/quodlibetor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b7245047b802f8e01c824a6efd8197da8be82fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b7245047b802f8e01c824a6efd8197da8be82fb", "html_url": "https://github.com/rust-lang/rust/commit/4b7245047b802f8e01c824a6efd8197da8be82fb"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "975b4d3636f2d10b983fb0a79c61b6d92d550c01", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2fd7701dd6700b71e8157e31430508ba830b96ac/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fd7701dd6700b71e8157e31430508ba830b96ac/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=2fd7701dd6700b71e8157e31430508ba830b96ac", "patch": "@@ -122,7 +122,7 @@ r##\"<!DOCTYPE html>\n \n                 <p>\n                     Search functions by type signature (e.g.\n-                    <code>vec -> usize</code>)\n+                    <code>vec -> usize</code> or <code>* -> vec</code>)\n                 </p>\n             </div>\n         </div>"}, {"sha": "08f70ae9ce7a0ec1896c7442a2cf50b43566ddfa", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2fd7701dd6700b71e8157e31430508ba830b96ac/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/2fd7701dd6700b71e8157e31430508ba830b96ac/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=2fd7701dd6700b71e8157e31430508ba830b96ac", "patch": "@@ -280,7 +280,7 @@\n                 var parts = val.split(\"->\").map(trimmer);\n                 var input = parts[0];\n                 // sort inputs so that order does not matter\n-                var inputs = input.split(\",\").map(trimmer).sort();\n+                var inputs = input.split(\",\").map(trimmer).sort().toString();\n                 var output = parts[1];\n \n                 for (var i = 0; i < nSearchWords; ++i) {\n@@ -296,8 +296,8 @@\n \n                     // allow searching for void (no output) functions as well\n                     var typeOutput = type.output ? type.output.name : \"\";\n-                    if (inputs.toString() === typeInputs.toString() &&\n-                        output == typeOutput) {\n+                    if ((inputs === \"*\" || inputs === typeInputs.toString()) &&\n+                        (output === \"*\" || output == typeOutput)) {\n                         results.push({id: i, index: -1, dontValidate: true});\n                     }\n                 }"}]}