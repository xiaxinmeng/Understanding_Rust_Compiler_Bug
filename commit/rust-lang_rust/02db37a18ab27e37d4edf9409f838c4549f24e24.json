{"sha": "02db37a18ab27e37d4edf9409f838c4549f24e24", "node_id": "C_kwDOAAsO6NoAKDAyZGIzN2ExOGFiMjdlMzdkNGVkZjk0MDlmODM4YzQ1NDlmMjRlMjQ", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-11-08T19:40:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-08T19:40:51Z"}, "message": "Rollup merge of #104113 - ink-feather-org:fix_const_fn_ref_impls, r=compiler-errors\n\nFix `const_fn_trait_ref_impl`, add test for it\n\n#99943 broke `#[feature(const_fn_trait_ref_impl)]`, this PR fixes this and adds a test for it.\n\nr? ````@fee1-dead````", "tree": {"sha": "e56d1a094609188167c9b67838e0224266667b4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e56d1a094609188167c9b67838e0224266667b4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02db37a18ab27e37d4edf9409f838c4549f24e24", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjarDDCRBK7hj4Ov3rIwAATTwIAJKwY7Mc3NlNVJRrOZClXhyA\nXz4DMGqAxvKllCkKNqBATYOis60xOl4RglbnGlevGRblJwuFQjpHGjopzyK1gxHX\n3eCKR2DWeeSE26oWcmd9kErfaTtST6sKqfQKNpdgwOMJc1em4lJP70mu9q2DKASk\n9m2xYNxs/297D0oNuLxxS42SXP6A+xHs97NEg8GVGRx5/THi/ZWkAwN6OTLRQo3W\n4KVk3NIWyh03LgitrnhavLbO6DUkapLktg6MT9Gen7BUVcA3c8iF7Av1bTb5P42E\nYBIRBGVZZ0SUoaa/8PCFbL4GHgJ//olJ6fDLXK8j9CNOjw/kJ3T+gZ2M1a67xoA=\n=ImRs\n-----END PGP SIGNATURE-----\n", "payload": "tree e56d1a094609188167c9b67838e0224266667b4b\nparent c39cf7acaab82e941ac09ef4c949921c2d2b6e89\nparent 87c190c4252ce2039400146bbdf6b7245a5499f0\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1667936451 +0100\ncommitter GitHub <noreply@github.com> 1667936451 +0100\n\nRollup merge of #104113 - ink-feather-org:fix_const_fn_ref_impls, r=compiler-errors\n\nFix `const_fn_trait_ref_impl`, add test for it\n\n#99943 broke `#[feature(const_fn_trait_ref_impl)]`, this PR fixes this and adds a test for it.\n\nr? ````@fee1-dead````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02db37a18ab27e37d4edf9409f838c4549f24e24", "html_url": "https://github.com/rust-lang/rust/commit/02db37a18ab27e37d4edf9409f838c4549f24e24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02db37a18ab27e37d4edf9409f838c4549f24e24/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c39cf7acaab82e941ac09ef4c949921c2d2b6e89", "url": "https://api.github.com/repos/rust-lang/rust/commits/c39cf7acaab82e941ac09ef4c949921c2d2b6e89", "html_url": "https://github.com/rust-lang/rust/commit/c39cf7acaab82e941ac09ef4c949921c2d2b6e89"}, {"sha": "87c190c4252ce2039400146bbdf6b7245a5499f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/87c190c4252ce2039400146bbdf6b7245a5499f0", "html_url": "https://github.com/rust-lang/rust/commit/87c190c4252ce2039400146bbdf6b7245a5499f0"}], "stats": {"total": 105, "additions": 95, "deletions": 10}, "files": [{"sha": "11b43b621c7b883029cbc6d8b9db546bc21d72d0", "filename": "library/core/src/ops/function.rs", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/02db37a18ab27e37d4edf9409f838c4549f24e24/library%2Fcore%2Fsrc%2Fops%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02db37a18ab27e37d4edf9409f838c4549f24e24/library%2Fcore%2Fsrc%2Fops%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Ffunction.rs?ref=02db37a18ab27e37d4edf9409f838c4549f24e24", "patch": "@@ -576,29 +576,32 @@ mod impls {\n     use crate::marker::Tuple;\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A: Tuple, F: ?Sized> Fn<A> for &F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"101803\")]\n+    impl<A: Tuple, F: ?Sized> const Fn<A> for &F\n     where\n-        F: Fn<A>,\n+        F: ~const Fn<A>,\n     {\n         extern \"rust-call\" fn call(&self, args: A) -> F::Output {\n             (**self).call(args)\n         }\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A: Tuple, F: ?Sized> FnMut<A> for &F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"101803\")]\n+    impl<A: Tuple, F: ?Sized> const FnMut<A> for &F\n     where\n-        F: Fn<A>,\n+        F: ~const Fn<A>,\n     {\n         extern \"rust-call\" fn call_mut(&mut self, args: A) -> F::Output {\n             (**self).call(args)\n         }\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A: Tuple, F: ?Sized> FnOnce<A> for &F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"101803\")]\n+    impl<A: Tuple, F: ?Sized> const FnOnce<A> for &F\n     where\n-        F: Fn<A>,\n+        F: ~const Fn<A>,\n     {\n         type Output = F::Output;\n \n@@ -608,19 +611,21 @@ mod impls {\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A: Tuple, F: ?Sized> FnMut<A> for &mut F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"101803\")]\n+    impl<A: Tuple, F: ?Sized> const FnMut<A> for &mut F\n     where\n-        F: FnMut<A>,\n+        F: ~const FnMut<A>,\n     {\n         extern \"rust-call\" fn call_mut(&mut self, args: A) -> F::Output {\n             (*self).call_mut(args)\n         }\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A: Tuple, F: ?Sized> FnOnce<A> for &mut F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"101803\")]\n+    impl<A: Tuple, F: ?Sized> const FnOnce<A> for &mut F\n     where\n-        F: FnMut<A>,\n+        F: ~const FnMut<A>,\n     {\n         type Output = F::Output;\n         extern \"rust-call\" fn call_once(self, args: A) -> F::Output {"}, {"sha": "bc8766c74c60f296693a436d415c5b62a709821e", "filename": "src/test/ui/consts/fn_trait_refs.rs", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/02db37a18ab27e37d4edf9409f838c4549f24e24/src%2Ftest%2Fui%2Fconsts%2Ffn_trait_refs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02db37a18ab27e37d4edf9409f838c4549f24e24/src%2Ftest%2Fui%2Fconsts%2Ffn_trait_refs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Ffn_trait_refs.rs?ref=02db37a18ab27e37d4edf9409f838c4549f24e24", "patch": "@@ -0,0 +1,80 @@\n+// build-pass\n+\n+#![feature(const_fn_trait_ref_impls)]\n+#![feature(fn_traits)]\n+#![feature(unboxed_closures)]\n+#![feature(const_trait_impl)]\n+#![feature(const_mut_refs)]\n+#![feature(const_cmp)]\n+#![feature(const_refs_to_cell)]\n+\n+use std::marker::Destruct;\n+\n+const fn tester_fn<T>(f: T) -> T::Output\n+where\n+    T: ~const Fn<()> + ~const Destruct,\n+{\n+    f()\n+}\n+\n+const fn tester_fn_mut<T>(mut f: T) -> T::Output\n+where\n+    T: ~const FnMut<()> + ~const Destruct,\n+{\n+    f()\n+}\n+\n+const fn tester_fn_once<T>(f: T) -> T::Output\n+where\n+    T: ~const FnOnce<()>,\n+{\n+    f()\n+}\n+\n+const fn test_fn<T>(mut f: T) -> (T::Output, T::Output, T::Output)\n+where\n+    T: ~const Fn<()> + ~const Destruct,\n+{\n+    (\n+        // impl<A: Tuple, F: ~const Fn + ?Sized> const Fn<A> for &F\n+        tester_fn(&f),\n+        // impl<A: Tuple, F: ~const Fn + ?Sized> const FnMut<A> for &F\n+        tester_fn_mut(&f),\n+        // impl<A: Tuple, F: ~const Fn + ?Sized> const FnOnce<A> for &F\n+        tester_fn_once(&f),\n+    )\n+}\n+\n+const fn test_fn_mut<T>(mut f: T) -> (T::Output, T::Output)\n+where\n+    T: ~const FnMut<()> + ~const Destruct,\n+{\n+    (\n+        // impl<A: Tuple, F: ~const FnMut + ?Sized> const FnMut<A> for &mut F\n+        tester_fn_mut(&mut f),\n+        // impl<A: Tuple, F: ~const FnMut + ?Sized> const FnOnce<A> for &mut F\n+        tester_fn_once(&mut f),\n+    )\n+}\n+const fn test(i: i32) -> i32 {\n+    i + 1\n+}\n+\n+const fn main() {\n+    const fn one() -> i32 {\n+        1\n+    };\n+    const fn two() -> i32 {\n+        2\n+    };\n+\n+    // FIXME(const_cmp_tuple)\n+    let test_one = test_fn(one);\n+    assert!(test_one.0 == 1);\n+    assert!(test_one.1 == 1);\n+    assert!(test_one.2 == 1);\n+\n+    let test_two = test_fn_mut(two);\n+    assert!(test_two.0 == 1);\n+    assert!(test_two.1 == 1);\n+}"}]}