{"sha": "09a9859c0004a3a442ad46b517110568df3e0c35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5YTk4NTljMDAwNGEzYTQ0MmFkNDZiNTE3MTEwNTY4ZGYzZTBjMzU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-12-17T03:13:49Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-12-17T04:07:46Z"}, "message": "1.14 release notes", "tree": {"sha": "7273a709fd3f3edeea805e705a038dca93305861", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7273a709fd3f3edeea805e705a038dca93305861"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09a9859c0004a3a442ad46b517110568df3e0c35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09a9859c0004a3a442ad46b517110568df3e0c35", "html_url": "https://github.com/rust-lang/rust/commit/09a9859c0004a3a442ad46b517110568df3e0c35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09a9859c0004a3a442ad46b517110568df3e0c35/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d250169cb5a96481a3e7c8f9fe05de49f60e5ae5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d250169cb5a96481a3e7c8f9fe05de49f60e5ae5", "html_url": "https://github.com/rust-lang/rust/commit/d250169cb5a96481a3e7c8f9fe05de49f60e5ae5"}], "stats": {"total": 200, "additions": 200, "deletions": 0}, "files": [{"sha": "f84a3dada65df580cb2e8777a07cad9a3cb20098", "filename": "RELEASES.md", "status": "modified", "additions": 200, "deletions": 0, "changes": 200, "blob_url": "https://github.com/rust-lang/rust/blob/09a9859c0004a3a442ad46b517110568df3e0c35/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/09a9859c0004a3a442ad46b517110568df3e0c35/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=09a9859c0004a3a442ad46b517110568df3e0c35", "patch": "@@ -1,3 +1,203 @@\n+Version 1.14.0 (2016-12-22)\n+===========================\n+\n+Language\n+--------\n+\n+* [`..` matches multiple tuple fields in enum variants, structs\n+  and tuples][36843]. [RFC 1492].\n+* [Safe `fn` items can be coerced to `unsafe fn` pointers][37389]\n+* [`use *` and `use ::*` both glob-import from the crate root][37367]\n+* [It's now possible to call a `Vec<Box<Fn()>>` without explicit\n+  dereferencing][36822]\n+\n+Compiler\n+--------\n+\n+* [Mark enums with non-zero discriminant as non-zero][37224]\n+* [Lower-case `static mut` names are linted like other\n+  statics and consts][37162]\n+* [Fix ICE on some macros in const integer positions\n+   (e.g. `[u8; m!()]`)][36819]\n+* [Improve error message and snippet for \"did you mean `x`\"][36798]\n+* [Add a panic-strategy field to the target specification][36794]\n+* [Include LLVM version in `--version --verbose`][37200]\n+\n+Compile-time Optimizations\n+--------------------------\n+\n+* [Improve macro expansion performance][37569]\n+* [Shrink `Expr_::ExprInlineAsm`][37445]\n+* [Replace all uses of SHA-256 with BLAKE2b][37439]\n+* [Reduce the number of bytes hashed by `IchHasher`][37427]\n+* [Avoid more allocations when compiling html5ever][37373]\n+* [Use `SmallVector` in `CombineFields::instantiate`][37322]\n+* [Avoid some allocations in the macro parser][37318]\n+* [Use a faster deflate setting][37298]\n+* [Add `ArrayVec` and `AccumulateVec` to reduce heap allocations\n+  during interning of slices][37270]\n+* [Optimize `write_metadata`][37267]\n+* [Don't process obligation forest cycles when stalled][37231]\n+* [Avoid many `CrateConfig` clones][37161]\n+* [Optimize `Substs::super_fold_with`][37108]\n+* [Optimize `ObligationForest`'s `NodeState` handling][36993]\n+* [Speed up `plug_leaks`][36917]\n+\n+Libraries\n+---------\n+\n+* [`println!()`, with no arguments, prints newline][36825].\n+  Previously, an empty string was required to achieve the same.\n+* [`Wrapping` impls standard binary and unary operators, as well as\n+   the `Sum` and `Product` iterators][37356]\n+* [Implement `From<Cow<str>> for String` and `From<Cow<[T]>> for\n+  Vec<T>`][37326]\n+* [Improve `fold` performance for `chain`, `cloned`, `map`, and\n+  `VecDeque` iterators][37315]\n+* [Improve `SipHasher` performance on small values][37312]\n+* [Add Iterator trait TrustedLen to enable better FromIterator /\n+  Extend][37306]\n+* [Expand `.zip()` specialization to `.map()` and `.cloned()`][37230]\n+* [`ReadDir` implements `Debug`][37221]\n+* [Implement `RefUnwindSafe` for atomic types][37178]\n+* [Specialize `Vec::extend` to `Vec::extend_from_slice`][37094]\n+* [Avoid allocations in `Decoder::read_str`][37064]\n+* [`io::Error` implements `From<io::ErrorKind>`][37037]\n+* [Impl `Debug` for raw pointers to unsized data][36880]\n+* [Don't reuse `HashMap` random seeds][37470]\n+* [The internal memory layout of `HashMap` is more cache-friendly, for\n+  significant improvements in some operations][36692]\n+* [`HashMap` uses less memory on 32-bit architectures][36595]\n+* [Impl `Add<{str, Cow<str>}>` for `Cow<str>`][36595]\n+\n+Cargo\n+-----\n+\n+* [Expose rustc cfg values to build scripts][cargo/3243]\n+* [Allow cargo to work with read-only `CARGO_HOME`][cargo/3259]\n+* [Fix passing --features when testing multiple packages][cargo/3280]\n+* [Use a single profile set per workspace][cargo/3249]\n+* [Load `replace` sections from lock files][cargo/3220]\n+* [Ignore `panic` configuration for test/bench profiles][cargo/3175]\n+\n+Tooling\n+-------\n+\n+* [rustup is the recommended Rust installation method][1.14rustup]\n+* This release includes [experimental support for WebAssembly][1.14wasm]\n+* This release includes builds for ARM Linux running MUSL libc. Add the\n+  `arm-unknown-linux-musleabi`, `arm-unknown-linux-musleabihf`, and\n+  `armv7-unknown-linux-musleabihf` targets via `rustup target add`.\n+* rustup no longer installs documentation by default. Run `rustup\n+  component add rust-docs` to install.\n+* [Fix line stepping in debugger][37310]\n+* [Enable line number debuginfo in releases][37280]\n+\n+Misc\n+----\n+\n+* [Disable jemalloc on aarch64/powerpc][37392]\n+* [Add support for Fuchsia OS][37313]\n+* [Detect local-rebuild by only MAJOR.MINOR version][37273]\n+\n+Compatibility Notes\n+-------------------\n+\n+* [A number of forward-compatibility lints used by the compiler\n+  to gradually introduce language changes have been converted\n+  to deny by default][36894]:\n+  - [\"use of inaccessible extern crate erroneously allowed\"][36886]\n+  - [\"type parameter default erroneously allowed in invalid location\"][36887]\n+  - [\"detects super or self keywords at the beginning of global path\"][36888]\n+  - [\"two overlapping inherent impls define an item with the same name\n+    were erroneously allowed\"][36889]\n+  - [\"floating-point constants cannot be used in patterns\"][36890]\n+  - [\"constants of struct or enum type can only be used in a pattern if\n+     the struct or enum has `#[derive(PartialEq, Eq)]`\"][36891]\n+  - [\"lifetimes or labels named `'_` were erroneously allowed\"][36892]\n+* [Prohibit patterns in trait methods without bodies][37378]\n+* [The atomic `Ordering` enum may not be matched exhaustively][37351]\n+* [Future-proofing `#[no_link]` breaks some obscure cases][37247]\n+* [The `$crate` macro variable is accepted in fewer locations][37213]\n+* [Impls specifying extra region requirements beyond the trait\n+  they implement are rejected][37167]\n+* [Enums may not be unsized][37111]. Unsized enums are intended to\n+  work but never have. For now they are forbidden.\n+* [Enforce the shadowing restrictions from RFC 1560 for today's macros][36767]\n+\n+[1.14rustup]: https://internals.rust-lang.org/t/beta-testing-rustup-rs/3316/204\n+[1.14wasm]: https://users.rust-lang.org/t/compiling-to-the-web-with-rust-and-emscripten/7627\n+[36595]: https://github.com/rust-lang/rust/pull/36595\n+[36595]: https://github.com/rust-lang/rust/pull/36595\n+[36692]: https://github.com/rust-lang/rust/pull/36692\n+[36767]: https://github.com/rust-lang/rust/pull/36767\n+[36794]: https://github.com/rust-lang/rust/pull/36794\n+[36798]: https://github.com/rust-lang/rust/pull/36798\n+[36819]: https://github.com/rust-lang/rust/pull/36819\n+[36822]: https://github.com/rust-lang/rust/pull/36822\n+[36825]: https://github.com/rust-lang/rust/pull/36825\n+[36843]: https://github.com/rust-lang/rust/pull/36843\n+[36880]: https://github.com/rust-lang/rust/pull/36880\n+[36886]: https://github.com/rust-lang/rust/issues/36886\n+[36887]: https://github.com/rust-lang/rust/issues/36887\n+[36888]: https://github.com/rust-lang/rust/issues/36888\n+[36889]: https://github.com/rust-lang/rust/issues/36889\n+[36890]: https://github.com/rust-lang/rust/issues/36890\n+[36891]: https://github.com/rust-lang/rust/issues/36891\n+[36892]: https://github.com/rust-lang/rust/issues/36892\n+[36894]: https://github.com/rust-lang/rust/pull/36894\n+[36917]: https://github.com/rust-lang/rust/pull/36917\n+[36993]: https://github.com/rust-lang/rust/pull/36993\n+[37037]: https://github.com/rust-lang/rust/pull/37037\n+[37064]: https://github.com/rust-lang/rust/pull/37064\n+[37094]: https://github.com/rust-lang/rust/pull/37094\n+[37108]: https://github.com/rust-lang/rust/pull/37108\n+[37111]: https://github.com/rust-lang/rust/pull/37111\n+[37161]: https://github.com/rust-lang/rust/pull/37161\n+[37162]: https://github.com/rust-lang/rust/pull/37162\n+[37167]: https://github.com/rust-lang/rust/pull/37167\n+[37178]: https://github.com/rust-lang/rust/pull/37178\n+[37200]: https://github.com/rust-lang/rust/pull/37200\n+[37213]: https://github.com/rust-lang/rust/pull/37213\n+[37221]: https://github.com/rust-lang/rust/pull/37221\n+[37224]: https://github.com/rust-lang/rust/pull/37224\n+[37230]: https://github.com/rust-lang/rust/pull/37230\n+[37231]: https://github.com/rust-lang/rust/pull/37231\n+[37247]: https://github.com/rust-lang/rust/pull/37247\n+[37267]: https://github.com/rust-lang/rust/pull/37267\n+[37270]: https://github.com/rust-lang/rust/pull/37270\n+[37273]: https://github.com/rust-lang/rust/pull/37273\n+[37280]: https://github.com/rust-lang/rust/pull/37280\n+[37298]: https://github.com/rust-lang/rust/pull/37298\n+[37306]: https://github.com/rust-lang/rust/pull/37306\n+[37310]: https://github.com/rust-lang/rust/pull/37310\n+[37312]: https://github.com/rust-lang/rust/pull/37312\n+[37313]: https://github.com/rust-lang/rust/pull/37313\n+[37315]: https://github.com/rust-lang/rust/pull/37315\n+[37318]: https://github.com/rust-lang/rust/pull/37318\n+[37322]: https://github.com/rust-lang/rust/pull/37322\n+[37326]: https://github.com/rust-lang/rust/pull/37326\n+[37351]: https://github.com/rust-lang/rust/pull/37351\n+[37356]: https://github.com/rust-lang/rust/pull/37356\n+[37367]: https://github.com/rust-lang/rust/pull/37367\n+[37373]: https://github.com/rust-lang/rust/pull/37373\n+[37378]: https://github.com/rust-lang/rust/pull/37378\n+[37389]: https://github.com/rust-lang/rust/pull/37389\n+[37392]: https://github.com/rust-lang/rust/pull/37392\n+[37427]: https://github.com/rust-lang/rust/pull/37427\n+[37439]: https://github.com/rust-lang/rust/pull/37439\n+[37445]: https://github.com/rust-lang/rust/pull/37445\n+[37470]: https://github.com/rust-lang/rust/pull/37470\n+[37569]: https://github.com/rust-lang/rust/pull/37569\n+[RFC 1492]: https://github.com/rust-lang/rfcs/blob/master/text/1492-dotdot-in-patterns.md\n+[cargo/3175]: https://github.com/rust-lang/cargo/pull/3175\n+[cargo/3220]: https://github.com/rust-lang/cargo/pull/3220\n+[cargo/3243]: https://github.com/rust-lang/cargo/pull/3243\n+[cargo/3249]: https://github.com/rust-lang/cargo/pull/3249\n+[cargo/3259]: https://github.com/rust-lang/cargo/pull/3259\n+[cargo/3280]: https://github.com/rust-lang/cargo/pull/3280\n+\n+\n Version 1.13.0 (2016-11-10)\n ===========================\n "}]}