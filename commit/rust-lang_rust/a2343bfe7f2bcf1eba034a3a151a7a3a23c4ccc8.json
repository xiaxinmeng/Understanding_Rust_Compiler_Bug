{"sha": "a2343bfe7f2bcf1eba034a3a151a7a3a23c4ccc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyMzQzYmZlN2YyYmNmMWViYTAzNGEzYTE1MWE3YTNhMjNjNGNjYzg=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-07-28T10:14:35Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-07-29T22:11:58Z"}, "message": "integration tests: add more clippy warnings for greater coverage\nintegration/base tests: add a few code comments", "tree": {"sha": "40eaf26ae472430f9ac582042c092d593a2c0843", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40eaf26ae472430f9ac582042c092d593a2c0843"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2343bfe7f2bcf1eba034a3a151a7a3a23c4ccc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2343bfe7f2bcf1eba034a3a151a7a3a23c4ccc8", "html_url": "https://github.com/rust-lang/rust/commit/a2343bfe7f2bcf1eba034a3a151a7a3a23c4ccc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2343bfe7f2bcf1eba034a3a151a7a3a23c4ccc8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0214397bdf0d48b7dcd520cd075d3a22092d823", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0214397bdf0d48b7dcd520cd075d3a22092d823", "html_url": "https://github.com/rust-lang/rust/commit/e0214397bdf0d48b7dcd520cd075d3a22092d823"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "13b652c0f7dd6139a60fac1d67bb4c75f6423576", "filename": "ci/base-tests.sh", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a2343bfe7f2bcf1eba034a3a151a7a3a23c4ccc8/ci%2Fbase-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/a2343bfe7f2bcf1eba034a3a151a7a3a23c4ccc8/ci%2Fbase-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fbase-tests.sh?ref=a2343bfe7f2bcf1eba034a3a151a7a3a23c4ccc8", "patch": "@@ -1,17 +1,24 @@\n set -ex\n+\n+echo \"Running clippy base tests\"\n+\n PATH=$PATH:./node_modules/.bin\n remark -f *.md > /dev/null\n+# build clippy in debug mode and run tests\n cargo build --features debugging\n cargo test --features debugging\n mkdir -p ~/rust/cargo/bin\n cp target/debug/cargo-clippy ~/rust/cargo/bin/cargo-clippy\n cp target/debug/clippy-driver ~/rust/cargo/bin/clippy-driver\n rm ~/.cargo/bin/cargo-clippy\n-PATH=$PATH:~/rust/cargo/bin cargo clippy --all-targets --all-features -- --cap-lints warn -D clippy\n+# run clippy on its own codebase...\n+PATH=$PATH:~/rust/cargo/bin cargo clippy --all-targets --all-features -- -D clippy\n+# ... and some test directories\n cd clippy_workspace_tests && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D clippy && cd ..\n cd clippy_workspace_tests/src && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D clippy && cd ../..\n cd clippy_workspace_tests/subcrate && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D clippy && cd ../..\n cd clippy_workspace_tests/subcrate/src && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D clippy && cd ../../..\n+# test --manifest-path\n PATH=$PATH:~/rust/cargo/bin cargo clippy --manifest-path=clippy_workspace_tests/Cargo.toml -- -D clippy\n cd clippy_workspace_tests/subcrate && PATH=$PATH:~/rust/cargo/bin cargo clippy --manifest-path=../Cargo.toml -- -D clippy && cd ../..\n set +x"}, {"sha": "ac0d2f1614ba189ccdeb7ae1ac168cc6b42a8e69", "filename": "ci/integration-tests.sh", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a2343bfe7f2bcf1eba034a3a151a7a3a23c4ccc8/ci%2Fintegration-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/a2343bfe7f2bcf1eba034a3a151a7a3a23c4ccc8/ci%2Fintegration-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fintegration-tests.sh?ref=a2343bfe7f2bcf1eba034a3a151a7a3a23c4ccc8", "patch": "@@ -8,7 +8,8 @@ git clone --depth=1 https://github.com/${INTEGRATION}.git checkout\n cd checkout\n \n function check() {\n-  RUST_BACKTRACE=full cargo clippy --all-targets --all-features -- --cap-lints warn &> clippy_output\n+# run clippy on a project, try to be verbose and trigger as many warnings as possible for greater coverage\n+  RUST_BACKTRACE=full cargo clippy --all-targets --all-features -- --cap-lints warn -W clippy_pedantic -W clippy_nursery  &> clippy_output\n   cat clippy_output\n   ! cat clippy_output | grep -q \"internal compiler error\\|query stack during panic\"\n   if [[ $? != 0 ]]; then"}]}