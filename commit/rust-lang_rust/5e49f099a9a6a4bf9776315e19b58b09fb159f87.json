{"sha": "5e49f099a9a6a4bf9776315e19b58b09fb159f87", "node_id": "C_kwDOAAsO6NoAKDVlNDlmMDk5YTlhNmE0YmY5Nzc2MzE1ZTE5YjU4YjA5ZmIxNTlmODc", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-03-12T10:10:12Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-03-25T09:22:40Z"}, "message": "Use an IndexVec to debug fingerprints.", "tree": {"sha": "c545046a125f3377772f7c3518895bade111c56e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c545046a125f3377772f7c3518895bade111c56e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e49f099a9a6a4bf9776315e19b58b09fb159f87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e49f099a9a6a4bf9776315e19b58b09fb159f87", "html_url": "https://github.com/rust-lang/rust/commit/5e49f099a9a6a4bf9776315e19b58b09fb159f87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e49f099a9a6a4bf9776315e19b58b09fb159f87/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df7fd9995f10627f25ccb325f693a11b3395a73c", "url": "https://api.github.com/repos/rust-lang/rust/commits/df7fd9995f10627f25ccb325f693a11b3395a73c", "html_url": "https://github.com/rust-lang/rust/commit/df7fd9995f10627f25ccb325f693a11b3395a73c"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "6c73135eb6a80b47bcc9b3b1576b24e9961f574d", "filename": "compiler/rustc_query_system/src/dep_graph/graph.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5e49f099a9a6a4bf9776315e19b58b09fb159f87/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e49f099a9a6a4bf9776315e19b58b09fb159f87/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs?ref=5e49f099a9a6a4bf9776315e19b58b09fb159f87", "patch": "@@ -1053,7 +1053,7 @@ pub(super) struct CurrentDepGraph<K: DepKind> {\n     /// This is used to verify that fingerprints do not change between the creation of a node\n     /// and its recomputation.\n     #[cfg(debug_assertions)]\n-    fingerprints: Lock<FxHashMap<DepNode<K>, Fingerprint>>,\n+    fingerprints: Lock<IndexVec<DepNodeIndex, Option<Fingerprint>>>,\n \n     /// Used to trap when a specific edge is added to the graph.\n     /// This is used for debug purposes and is only active with `debug_assertions`.\n@@ -1139,7 +1139,7 @@ impl<K: DepKind> CurrentDepGraph<K> {\n             #[cfg(debug_assertions)]\n             forbidden_edge,\n             #[cfg(debug_assertions)]\n-            fingerprints: Lock::new(Default::default()),\n+            fingerprints: Lock::new(IndexVec::from_elem_n(None, new_node_count_estimate)),\n             total_read_count: AtomicU64::new(0),\n             total_duplicate_read_count: AtomicU64::new(0),\n             node_intern_event_id,\n@@ -1151,14 +1151,8 @@ impl<K: DepKind> CurrentDepGraph<K> {\n         if let Some(forbidden_edge) = &self.forbidden_edge {\n             forbidden_edge.index_to_node.lock().insert(dep_node_index, key);\n         }\n-        match self.fingerprints.lock().entry(key) {\n-            Entry::Vacant(v) => {\n-                v.insert(fingerprint);\n-            }\n-            Entry::Occupied(o) => {\n-                assert_eq!(*o.get(), fingerprint, \"Unstable fingerprints for {:?}\", key);\n-            }\n-        }\n+        let previous = *self.fingerprints.lock().get_or_insert_with(dep_node_index, || fingerprint);\n+        assert_eq!(previous, fingerprint, \"Unstable fingerprints for {:?}\", key);\n     }\n \n     /// Writes the node to the current dep-graph and allocates a `DepNodeIndex` for it."}]}