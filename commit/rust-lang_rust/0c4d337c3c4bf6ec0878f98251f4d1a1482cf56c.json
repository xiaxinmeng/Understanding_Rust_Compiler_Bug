{"sha": "0c4d337c3c4bf6ec0878f98251f4d1a1482cf56c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjNGQzMzdjM2M0YmY2ZWMwODc4Zjk4MjUxZjRkMWExNDgyY2Y1NmM=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-22T16:26:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-22T16:26:23Z"}, "message": "Rollup merge of #50963 - nnethercote:coercion-VecDeque1, r=petrochenkov\n\nRight-size the `VecDeque` in `coerce_unsized`.\n\nThe default capacity of a VecDeque is 8, which is excessive here. In a\n\"base incremental\" check build of rustc-perf's tuple-stress benchmark,\nthis decreases total heap allocation by 26%. I couldn't see a clear\nspeedup, but it can't hurt.", "tree": {"sha": "4975803176a0a9a8e040d30f83ac41ecf489b5a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4975803176a0a9a8e040d30f83ac41ecf489b5a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c4d337c3c4bf6ec0878f98251f4d1a1482cf56c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbBESwCRBK7hj4Ov3rIwAAdHIIAJ3mr6gbAxBCi2mUgzum7W0i\nKsEgo8ClN/nYYHEpJZ6crsCPFEg9zT3f+i3xGK6NDDYR9j4Kt3SB+Ip8DzkNN/DO\nFKHfUaycwRbAWC2QUtM61OX5d4pB/in8kGyyDUb6wyX2w+iUzVp3DvNlkZN1s0S6\nK6nSGdDfkgruC1/Bz2cWvtrxwl2Pl7FL+cln0SRKjMuUU/RI4Hrug4OYFWJgA45K\npdpNnzZ8LZvCZkiGxR5f2PIQM7DIv1HBj1Y3HxFRth5zH//f9/nrlvV7DtA20bp0\nKaFYoCVIJWr0utFVmnWDWmHl9a358p3UvO20LY364zDwwjxk2+0e2wxX1Fk7IaQ=\n=nMYe\n-----END PGP SIGNATURE-----\n", "payload": "tree 4975803176a0a9a8e040d30f83ac41ecf489b5a0\nparent 28e43582a3b2d1724cd81dfd88cb2a54e85e9544\nparent a86544b799b0fe81e2e2a734a2b49d16faad4f3d\nauthor kennytm <kennytm@gmail.com> 1527006383 +0800\ncommitter GitHub <noreply@github.com> 1527006383 +0800\n\nRollup merge of #50963 - nnethercote:coercion-VecDeque1, r=petrochenkov\n\nRight-size the `VecDeque` in `coerce_unsized`.\n\nThe default capacity of a VecDeque is 8, which is excessive here. In a\n\"base incremental\" check build of rustc-perf's tuple-stress benchmark,\nthis decreases total heap allocation by 26%. I couldn't see a clear\nspeedup, but it can't hurt.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c4d337c3c4bf6ec0878f98251f4d1a1482cf56c", "html_url": "https://github.com/rust-lang/rust/commit/0c4d337c3c4bf6ec0878f98251f4d1a1482cf56c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c4d337c3c4bf6ec0878f98251f4d1a1482cf56c/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28e43582a3b2d1724cd81dfd88cb2a54e85e9544", "url": "https://api.github.com/repos/rust-lang/rust/commits/28e43582a3b2d1724cd81dfd88cb2a54e85e9544", "html_url": "https://github.com/rust-lang/rust/commit/28e43582a3b2d1724cd81dfd88cb2a54e85e9544"}, {"sha": "a86544b799b0fe81e2e2a734a2b49d16faad4f3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a86544b799b0fe81e2e2a734a2b49d16faad4f3d", "html_url": "https://github.com/rust-lang/rust/commit/a86544b799b0fe81e2e2a734a2b49d16faad4f3d"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "76219c6971b22773ba7024b23a61f1ad01feefd4", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0c4d337c3c4bf6ec0878f98251f4d1a1482cf56c/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c4d337c3c4bf6ec0878f98251f4d1a1482cf56c/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=0c4d337c3c4bf6ec0878f98251f4d1a1482cf56c", "patch": "@@ -537,8 +537,9 @@ impl<'f, 'gcx, 'tcx> Coerce<'f, 'gcx, 'tcx> {\n \n         let mut selcx = traits::SelectionContext::new(self);\n \n-        // Use a FIFO queue for this custom fulfillment procedure.\n-        let mut queue = VecDeque::new();\n+        // Use a FIFO queue for this custom fulfillment procedure. (The maximum\n+        // length is almost always 1.)\n+        let mut queue = VecDeque::with_capacity(1);\n \n         // Create an obligation for `Source: CoerceUnsized<Target>`.\n         let cause = ObligationCause::misc(self.cause.span, self.body_id);"}]}