{"sha": "2588287deffd92c4ca0b5b39f92b9cca894a3983", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ODgyODdkZWZmZDkyYzRjYTBiNWIzOWY5MmI5Y2NhODk0YTM5ODM=", "commit": {"author": {"name": "Hugues de Valon", "email": "hugues.devalon@arm.com", "date": "2020-09-30T17:10:17Z"}, "committer": {"name": "Hugues de Valon", "email": "hugues.devalon@arm.com", "date": "2020-09-30T17:10:17Z"}, "message": "Add more tests and check for ABI\n\nSigned-off-by: Hugues de Valon <hugues.devalon@arm.com>", "tree": {"sha": "4fcac4b9f4cba6dd967509958a8249b364ba4afb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fcac4b9f4cba6dd967509958a8249b364ba4afb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2588287deffd92c4ca0b5b39f92b9cca894a3983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2588287deffd92c4ca0b5b39f92b9cca894a3983", "html_url": "https://github.com/rust-lang/rust/commit/2588287deffd92c4ca0b5b39f92b9cca894a3983", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2588287deffd92c4ca0b5b39f92b9cca894a3983/comments", "author": {"login": "hug-dev", "id": 29229160, "node_id": "MDQ6VXNlcjI5MjI5MTYw", "avatar_url": "https://avatars.githubusercontent.com/u/29229160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hug-dev", "html_url": "https://github.com/hug-dev", "followers_url": "https://api.github.com/users/hug-dev/followers", "following_url": "https://api.github.com/users/hug-dev/following{/other_user}", "gists_url": "https://api.github.com/users/hug-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/hug-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hug-dev/subscriptions", "organizations_url": "https://api.github.com/users/hug-dev/orgs", "repos_url": "https://api.github.com/users/hug-dev/repos", "events_url": "https://api.github.com/users/hug-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/hug-dev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hug-dev", "id": 29229160, "node_id": "MDQ6VXNlcjI5MjI5MTYw", "avatar_url": "https://avatars.githubusercontent.com/u/29229160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hug-dev", "html_url": "https://github.com/hug-dev", "followers_url": "https://api.github.com/users/hug-dev/followers", "following_url": "https://api.github.com/users/hug-dev/following{/other_user}", "gists_url": "https://api.github.com/users/hug-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/hug-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hug-dev/subscriptions", "organizations_url": "https://api.github.com/users/hug-dev/orgs", "repos_url": "https://api.github.com/users/hug-dev/repos", "events_url": "https://api.github.com/users/hug-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/hug-dev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1aaafac6ffec2556a27a3c34365c685c124ee029", "url": "https://api.github.com/repos/rust-lang/rust/commits/1aaafac6ffec2556a27a3c34365c685c124ee029", "html_url": "https://github.com/rust-lang/rust/commit/1aaafac6ffec2556a27a3c34365c685c124ee029"}], "stats": {"total": 97, "additions": 92, "deletions": 5}, "files": [{"sha": "8b21dacf7872428d5140baa1b3590139ae2bf13a", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2588287deffd92c4ca0b5b39f92b9cca894a3983/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2588287deffd92c4ca0b5b39f92b9cca894a3983/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=2588287deffd92c4ca0b5b39f92b9cca894a3983", "patch": "@@ -459,6 +459,7 @@ E0771: include_str!(\"./error_codes/E0771.md\"),\n E0773: include_str!(\"./error_codes/E0773.md\"),\n E0774: include_str!(\"./error_codes/E0774.md\"),\n E0775: include_str!(\"./error_codes/E0775.md\"),\n+E0776: include_str!(\"./error_codes/E0776.md\"),\n ;\n //  E0006, // merged with E0005\n //  E0008, // cannot bind by-move into a pattern guard"}, {"sha": "9bafd52f75cf2d63c0dd97a0c7b4b60d90fa6361", "filename": "compiler/rustc_error_codes/src/error_codes/E0775.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2588287deffd92c4ca0b5b39f92b9cca894a3983/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0775.md", "raw_url": "https://github.com/rust-lang/rust/raw/2588287deffd92c4ca0b5b39f92b9cca894a3983/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0775.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0775.md?ref=2588287deffd92c4ca0b5b39f92b9cca894a3983", "patch": "@@ -7,7 +7,7 @@ Erroneous code example:\n #![feature(cmse_nonsecure_entry)]\n \n #[cmse_nonsecure_entry]\n-fn toto() {}\n+pub extern \"C\" fn entry_function() {}\n ```\n \n To fix this error, compile your code for a Rust target that supports the"}, {"sha": "d65beebe07c61b27c7fea14f162e00a12d1de98e", "filename": "compiler/rustc_error_codes/src/error_codes/E0776.md", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2588287deffd92c4ca0b5b39f92b9cca894a3983/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0776.md", "raw_url": "https://github.com/rust-lang/rust/raw/2588287deffd92c4ca0b5b39f92b9cca894a3983/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0776.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0776.md?ref=2588287deffd92c4ca0b5b39f92b9cca894a3983", "patch": "@@ -0,0 +1,13 @@\n+`#[cmse_nonsecure_entry]` functions require a C ABI\n+\n+Erroneous code example:\n+\n+```compile_fail,E0776\n+#![feature(cmse_nonsecure_entry)]\n+\n+#[no_mangle]\n+#[cmse_nonsecure_entry]\n+pub fn entry_function(input: Vec<u32>) {}\n+```\n+\n+To fix this error, declare your entry function with a C ABI, using `extern \"C\"`."}, {"sha": "9aca112a9142df404477e1f032a8580c9d815bae", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2588287deffd92c4ca0b5b39f92b9cca894a3983/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2588287deffd92c4ca0b5b39f92b9cca894a3983/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=2588287deffd92c4ca0b5b39f92b9cca894a3983", "patch": "@@ -2544,6 +2544,15 @@ fn codegen_fn_attrs(tcx: TyCtxt<'_>, id: DefId) -> CodegenFnAttrs {\n         } else if tcx.sess.check_name(attr, sym::used) {\n             codegen_fn_attrs.flags |= CodegenFnAttrFlags::USED;\n         } else if tcx.sess.check_name(attr, sym::cmse_nonsecure_entry) {\n+            if tcx.fn_sig(id).abi() != abi::Abi::C {\n+                struct_span_err!(\n+                    tcx.sess,\n+                    attr.span,\n+                    E0776,\n+                    \"`#[cmse_nonsecure_entry]` requires C ABI\"\n+                )\n+                .emit();\n+            }\n             if !tcx.sess.target.target.llvm_target.contains(\"thumbv8m\") {\n                 struct_span_err!(tcx.sess, attr.span, E0775, \"`#[cmse_nonsecure_entry]` is only valid for targets with the TrustZone-M extension\")\n                     .emit();"}, {"sha": "338fbc4b2bfca418f56878b836047b01e55e248c", "filename": "src/doc/unstable-book/src/language-features/cmse-nonsecure-entry.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fcmse-nonsecure-entry.md", "raw_url": "https://github.com/rust-lang/rust/raw/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fcmse-nonsecure-entry.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fcmse-nonsecure-entry.md?ref=2588287deffd92c4ca0b5b39f92b9cca894a3983", "patch": "@@ -26,6 +26,12 @@ With this attribute, the compiler will do the following:\n   information\n * use the `BXNS` instruction to return\n \n+Because the stack can not be used to pass parameters, there will be compilation\n+errors if:\n+* the total size of all parameters is too big (for example more than four 32\n+  bits integers)\n+* the entry function is not using a C ABI\n+\n The special symbol `__acle_se_` will be used by the linker to generate a secure\n gateway veneer.\n "}, {"sha": "02d5f20febc4acf8f49f7ef88579048bb8d39ed6", "filename": "src/test/ui/cmse-nonsecure-entry/gate_test.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fgate_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fgate_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fgate_test.rs?ref=2588287deffd92c4ca0b5b39f92b9cca894a3983", "patch": "@@ -0,0 +1,11 @@\n+// gate-test-cmse_nonsecure_entry\n+\n+#[no_mangle]\n+#[cmse_nonsecure_entry]\n+//~^ ERROR [E0775]\n+//~| ERROR [E0658]\n+pub extern \"C\" fn entry_function(input: u32) -> u32 {\n+    input + 6\n+}\n+\n+fn main() {}"}, {"sha": "75a29b317df87bcd9e40bd809c694e91929fcc76", "filename": "src/test/ui/cmse-nonsecure-entry/gate_test.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fgate_test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fgate_test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fgate_test.stderr?ref=2588287deffd92c4ca0b5b39f92b9cca894a3983", "patch": "@@ -0,0 +1,19 @@\n+error[E0658]: the `#[cmse_nonsecure_entry]` attribute is an experimental feature\n+  --> $DIR/gate_test.rs:4:1\n+   |\n+LL | #[cmse_nonsecure_entry]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #75835 <https://github.com/rust-lang/rust/issues/75835> for more information\n+   = help: add `#![feature(cmse_nonsecure_entry)]` to the crate attributes to enable\n+\n+error[E0775]: `#[cmse_nonsecure_entry]` is only valid for targets with the TrustZone-M extension\n+  --> $DIR/gate_test.rs:4:1\n+   |\n+LL | #[cmse_nonsecure_entry]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0658, E0775.\n+For more information about an error, try `rustc --explain E0658`."}, {"sha": "a723eb734731d2d53ee8e06ec6b8e51c9d53a355", "filename": "src/test/ui/cmse-nonsecure-entry/params-on-registers.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fparams-on-registers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fparams-on-registers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fparams-on-registers.rs?ref=2588287deffd92c4ca0b5b39f92b9cca894a3983", "patch": "@@ -0,0 +1,11 @@\n+// build-pass\n+// compile-flags: --target thumbv8m.main-none-eabi --crate-type lib\n+// only-thumbv8m.main-none-eabi\n+#![feature(cmse_nonsecure_entry)]\n+#![no_std]\n+\n+#[no_mangle]\n+#[cmse_nonsecure_entry]\n+pub extern \"C\" fn entry_function(a: u32, b: u32, c: u32, d: u32) -> u32 {\n+    a + b + c + d\n+}"}, {"sha": "553d3a8cb0be7966dc2ee857a0c0b5f26e4d6631", "filename": "src/test/ui/cmse-nonsecure-entry/params-on-stack.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fparams-on-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fparams-on-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fparams-on-stack.rs?ref=2588287deffd92c4ca0b5b39f92b9cca894a3983", "patch": "@@ -1,11 +1,10 @@\n-// gate-test-cmse_nonsecure_entry\n // compile-flags: --target thumbv8m.main-none-eabi --crate-type lib\n // only-thumbv8m.main-none-eabi\n #![feature(cmse_nonsecure_entry)]\n #![no_std]\n \n #[no_mangle]\n #[cmse_nonsecure_entry]\n-pub extern \"C\" fn entry_function(a: u32, b: u32, c: u32, d: u32, e: u32) -> u32 {\n+pub extern \"C\" fn entry_function(a: u32, b: u32, c: u32, d: u32, e: u32) -> u32 { //~ ERROR\n     a + b + c + d + e\n }"}, {"sha": "3783e2794021f5e53a76b7160c6884835f578326", "filename": "src/test/ui/cmse-nonsecure-entry/trustzone-only.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Ftrustzone-only.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Ftrustzone-only.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Ftrustzone-only.rs?ref=2588287deffd92c4ca0b5b39f92b9cca894a3983", "patch": "@@ -1,4 +1,3 @@\n-// gate-test-cmse_nonsecure_entry\n // ignore-thumbv8m.main-none-eabi\n #![feature(cmse_nonsecure_entry)]\n "}, {"sha": "7e8862f9ab7f2fd9ad75f2200c0fc45303d0e899", "filename": "src/test/ui/cmse-nonsecure-entry/trustzone-only.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Ftrustzone-only.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Ftrustzone-only.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Ftrustzone-only.stderr?ref=2588287deffd92c4ca0b5b39f92b9cca894a3983", "patch": "@@ -1,5 +1,5 @@\n error[E0775]: `#[cmse_nonsecure_entry]` is only valid for targets with the TrustZone-M extension\n-  --> $DIR/trustzone-only.rs:6:1\n+  --> $DIR/trustzone-only.rs:5:1\n    |\n LL | #[cmse_nonsecure_entry]\n    | ^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "611c8643dcb0227e7e3c5da226eec8685a588144", "filename": "src/test/ui/cmse-nonsecure-entry/wrong-abi.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fwrong-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fwrong-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fwrong-abi.rs?ref=2588287deffd92c4ca0b5b39f92b9cca894a3983", "patch": "@@ -0,0 +1,10 @@\n+// compile-flags: --target thumbv8m.main-none-eabi --crate-type lib\n+// only-thumbv8m.main-none-eabi\n+#![feature(cmse_nonsecure_entry)]\n+#![no_std]\n+\n+#[no_mangle]\n+#[cmse_nonsecure_entry]\n+pub fn entry_function(a: u32, b: u32, c: u32, d: u32) -> u32 { //~ ERROR [E0776]\n+    a + b + c + d\n+}"}, {"sha": "d6967a11e6bf7d7ff1c8c6e0df505b113459b9e6", "filename": "src/test/ui/cmse-nonsecure-entry/wrong-abi.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fwrong-abi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2588287deffd92c4ca0b5b39f92b9cca894a3983/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fwrong-abi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcmse-nonsecure-entry%2Fwrong-abi.stderr?ref=2588287deffd92c4ca0b5b39f92b9cca894a3983", "patch": "@@ -0,0 +1,9 @@\n+error[E0776]: `#[cmse_nonsecure_entry]` functions require C ABI\n+  --> $DIR/wrong-abi.rs:7:1\n+   |\n+LL | #[cmse_nonsecure_entry]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0776`."}]}