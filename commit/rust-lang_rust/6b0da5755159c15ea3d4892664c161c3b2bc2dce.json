{"sha": "6b0da5755159c15ea3d4892664c161c3b2bc2dce", "node_id": "C_kwDOAAsO6NoAKDZiMGRhNTc1NTE1OWMxNWVhM2Q0ODkyNjY0YzE2MWMzYjJiYzJkY2U", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-04-28T01:51:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-28T01:51:59Z"}, "message": "Rollup merge of #109702 - chenyukang:yukang/fix-109316-configure, r=albertlarsan68\n\nconfigure --set support list as arguments\n\nFixes #109316\n\nr? `@jyn514`", "tree": {"sha": "ae3f1f4d68b0f482ed83d8ecf574ec04f278f2a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae3f1f4d68b0f482ed83d8ecf574ec04f278f2a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b0da5755159c15ea3d4892664c161c3b2bc2dce", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkSya/CRBK7hj4Ov3rIwAA8qgIABBWaBT5pJkw/x5E3keHcNcr\nx78wp7lQ+jyjt7IJqAfwdm/0I/6b2q081Qi7tCG4tU9dyhRci1SXgMucvC7pUKmw\nRstoDdM62cLjl2LTLdp06xNbNqQa/XN5rC9Ep87Qeq9fWkmFQ2LX0ImVDiT2jdh9\ny9iRflMgH5cRiuuAYBq3+8F7Dz2ByJEQ211YP5S4m6Gc8cBumdnHqLEKbLaJlL6M\nFBVOaN9ygfo1/wG8Kz8PchHfPwKyydGEnbdfGVNxVJ7DhfRzfWhZyaMwny+r9nbQ\nd+rUcKI0FSjEiXecBIQUhG6GkIsv7z36uo27AZqev/IJxRrxOstCHDgsSLmCPEs=\n=xTJj\n-----END PGP SIGNATURE-----\n", "payload": "tree ae3f1f4d68b0f482ed83d8ecf574ec04f278f2a1\nparent 1a6ae3d692cfb52b21d0f45ba50b659486e53d6c\nparent 787f3fea15978b15738d9047b240841aa2d7b5ce\nauthor Yuki Okushi <jtitor@2k36.org> 1682646719 +0900\ncommitter GitHub <noreply@github.com> 1682646719 +0900\n\nRollup merge of #109702 - chenyukang:yukang/fix-109316-configure, r=albertlarsan68\n\nconfigure --set support list as arguments\n\nFixes #109316\n\nr? `@jyn514`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b0da5755159c15ea3d4892664c161c3b2bc2dce", "html_url": "https://github.com/rust-lang/rust/commit/6b0da5755159c15ea3d4892664c161c3b2bc2dce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b0da5755159c15ea3d4892664c161c3b2bc2dce/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a6ae3d692cfb52b21d0f45ba50b659486e53d6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a6ae3d692cfb52b21d0f45ba50b659486e53d6c", "html_url": "https://github.com/rust-lang/rust/commit/1a6ae3d692cfb52b21d0f45ba50b659486e53d6c"}, {"sha": "787f3fea15978b15738d9047b240841aa2d7b5ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/787f3fea15978b15738d9047b240841aa2d7b5ce", "html_url": "https://github.com/rust-lang/rust/commit/787f3fea15978b15738d9047b240841aa2d7b5ce"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "5ecda83ee66b12d86351424ff757f3cc432e2f35", "filename": "src/bootstrap/bootstrap_test.py", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6b0da5755159c15ea3d4892664c161c3b2bc2dce/src%2Fbootstrap%2Fbootstrap_test.py", "raw_url": "https://github.com/rust-lang/rust/raw/6b0da5755159c15ea3d4892664c161c3b2bc2dce/src%2Fbootstrap%2Fbootstrap_test.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap_test.py?ref=6b0da5755159c15ea3d4892664c161c3b2bc2dce", "patch": "@@ -112,6 +112,14 @@ def test_set_top_level(self):\n         build = self.serialize_and_parse([\"--set\", \"profile=compiler\"])\n         self.assertEqual(build.get_toml(\"profile\"), 'compiler')\n \n+    def test_set_codegen_backends(self):\n+        build = self.serialize_and_parse([\"--set\", \"rust.codegen-backends=cranelift\"])\n+        self.assertNotEqual(build.config_toml.find(\"codegen-backends = ['cranelift']\"), -1)\n+        build = self.serialize_and_parse([\"--set\", \"rust.codegen-backends=cranelift,llvm\"])\n+        self.assertNotEqual(build.config_toml.find(\"codegen-backends = ['cranelift', 'llvm']\"), -1)\n+        build = self.serialize_and_parse([\"--enable-full-tools\"])\n+        self.assertNotEqual(build.config_toml.find(\"codegen-backends = ['llvm']\"), -1)\n+\n if __name__ == '__main__':\n     SUITE = unittest.TestSuite()\n     TEST_LOADER = unittest.TestLoader()"}, {"sha": "571062a3a6fd0b3b8aa50452807f1160994c1844", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6b0da5755159c15ea3d4892664c161c3b2bc2dce/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/6b0da5755159c15ea3d4892664c161c3b2bc2dce/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=6b0da5755159c15ea3d4892664c161c3b2bc2dce", "patch": "@@ -153,8 +153,7 @@ def v(*args):\n   \"experimental LLVM targets to build\")\n v(\"release-channel\", \"rust.channel\", \"the name of the release channel to build\")\n v(\"release-description\", \"rust.description\", \"optional descriptive string for version output\")\n-v(\"dist-compression-formats\", None,\n-  \"comma-separated list of compression formats to use\")\n+v(\"dist-compression-formats\", None, \"List of compression formats to use\")\n \n # Used on systems where \"cc\" is unavailable\n v(\"default-linker\", \"rust.default-linker\", \"the default linker\")\n@@ -168,8 +167,8 @@ def v(*args):\n v(\"tools\", None, \"List of extended tools will be installed\")\n v(\"codegen-backends\", None, \"List of codegen backends to build\")\n v(\"build\", \"build.build\", \"GNUs ./configure syntax LLVM build triple\")\n-v(\"host\", None, \"GNUs ./configure syntax LLVM host triples\")\n-v(\"target\", None, \"GNUs ./configure syntax LLVM target triples\")\n+v(\"host\", None, \"List of GNUs ./configure syntax LLVM host triples\")\n+v(\"target\", None, \"List of GNUs ./configure syntax LLVM target triples\")\n \n v(\"set\", None, \"set arbitrary key/value pairs in TOML configuration\")\n \n@@ -182,6 +181,11 @@ def err(msg):\n     print(\"configure: error: \" + msg)\n     sys.exit(1)\n \n+def is_value_list(key):\n+    for option in options:\n+        if option.name == key and option.desc.startswith('List of'):\n+            return True\n+    return False\n \n if '--help' in sys.argv or '-h' in sys.argv:\n     print('Usage: ./configure [options]')\n@@ -295,6 +299,8 @@ def set(key, value, config):\n     parts = key.split('.')\n     for i, part in enumerate(parts):\n         if i == len(parts) - 1:\n+            if is_value_list(part) and isinstance(value, str):\n+                value = value.split(',')\n             arr[part] = value\n         else:\n             if part not in arr:"}]}