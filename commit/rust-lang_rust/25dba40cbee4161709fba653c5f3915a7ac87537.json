{"sha": "25dba40cbee4161709fba653c5f3915a7ac87537", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ZGJhNDBjYmVlNDE2MTcwOWZiYTY1M2M1ZjM5MTVhN2FjODc1Mzc=", "commit": {"author": {"name": "Avi Dessauer", "email": "avi.the.coder@gmail.com", "date": "2020-07-08T19:32:58Z"}, "committer": {"name": "Jacob Hughes", "email": "j@jacobhughes.me", "date": "2020-09-23T01:55:35Z"}, "message": "Update src/librustc_middle/middle/stability.rs\n\nCo-authored-by: varkor <github@varkor.com>", "tree": {"sha": "2d2852f31ce5c0b3a7366da93298d5197e7182f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d2852f31ce5c0b3a7366da93298d5197e7182f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25dba40cbee4161709fba653c5f3915a7ac87537", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25dba40cbee4161709fba653c5f3915a7ac87537", "html_url": "https://github.com/rust-lang/rust/commit/25dba40cbee4161709fba653c5f3915a7ac87537", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25dba40cbee4161709fba653c5f3915a7ac87537/comments", "author": {"login": "Avi-D-coder", "id": 29133776, "node_id": "MDQ6VXNlcjI5MTMzNzc2", "avatar_url": "https://avatars.githubusercontent.com/u/29133776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avi-D-coder", "html_url": "https://github.com/Avi-D-coder", "followers_url": "https://api.github.com/users/Avi-D-coder/followers", "following_url": "https://api.github.com/users/Avi-D-coder/following{/other_user}", "gists_url": "https://api.github.com/users/Avi-D-coder/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avi-D-coder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avi-D-coder/subscriptions", "organizations_url": "https://api.github.com/users/Avi-D-coder/orgs", "repos_url": "https://api.github.com/users/Avi-D-coder/repos", "events_url": "https://api.github.com/users/Avi-D-coder/events{/privacy}", "received_events_url": "https://api.github.com/users/Avi-D-coder/received_events", "type": "User", "site_admin": false}, "committer": {"login": "exrook", "id": 534850, "node_id": "MDQ6VXNlcjUzNDg1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/534850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exrook", "html_url": "https://github.com/exrook", "followers_url": "https://api.github.com/users/exrook/followers", "following_url": "https://api.github.com/users/exrook/following{/other_user}", "gists_url": "https://api.github.com/users/exrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/exrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exrook/subscriptions", "organizations_url": "https://api.github.com/users/exrook/orgs", "repos_url": "https://api.github.com/users/exrook/repos", "events_url": "https://api.github.com/users/exrook/events{/privacy}", "received_events_url": "https://api.github.com/users/exrook/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9eb595705e754c970de76375060455bc3f576296", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eb595705e754c970de76375060455bc3f576296", "html_url": "https://github.com/rust-lang/rust/commit/9eb595705e754c970de76375060455bc3f576296"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "7e2415fd544d4c9a209776aeb4559fcbf9638bea", "filename": "compiler/rustc_middle/src/middle/stability.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/25dba40cbee4161709fba653c5f3915a7ac87537/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25dba40cbee4161709fba653c5f3915a7ac87537/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fstability.rs?ref=25dba40cbee4161709fba653c5f3915a7ac87537", "patch": "@@ -402,16 +402,10 @@ impl<'tcx> TyCtxt<'tcx> {\n         })\n     }\n \n-    /// Checks if an item is stable or error out.\n-    ///\n-    /// If the item defined by `def_id` is unstable and the corresponding `#![feature]` does not\n-    /// exist, emits an error.\n-    ///\n-    /// This function will also check if the item is deprecated.\n-    /// If so, and `id` is not `None`, a deprecated lint attached to `id` will be emitted.\n-    ///\n-    /// The `unmarked` closure is called definitions without a stability annotation.\n-    /// This is needed for generic parameters, since they may not be marked when used in a staged_api crate.\n+    /// Like `check_stability`, except that we permit items to have custom behaviour for\n+    /// missing stability attributes (not necessarily just emit a `bug!`). This is necessary\n+    /// for default generic parameters, which only have stability attributes if they were\n+    /// added after the type on which they're defined.\n     pub fn check_optional_stability(\n         self,\n         def_id: DefId,"}]}