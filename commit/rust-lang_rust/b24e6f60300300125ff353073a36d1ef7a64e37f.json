{"sha": "b24e6f60300300125ff353073a36d1ef7a64e37f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNGU2ZjYwMzAwMzAwMTI1ZmYzNTMwNzNhMzZkMWVmN2E2NGUzN2Y=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-07T19:10:28Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-08T12:08:55Z"}, "message": "Impl Fold for CallableSig", "tree": {"sha": "9821ff801f85e9e362993c5ac0505866d40c86d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9821ff801f85e9e362993c5ac0505866d40c86d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b24e6f60300300125ff353073a36d1ef7a64e37f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b24e6f60300300125ff353073a36d1ef7a64e37f", "html_url": "https://github.com/rust-lang/rust/commit/b24e6f60300300125ff353073a36d1ef7a64e37f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b24e6f60300300125ff353073a36d1ef7a64e37f/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e541e69b1eaab3c242c864a0930cb263d2cbaf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e541e69b1eaab3c242c864a0930cb263d2cbaf5", "html_url": "https://github.com/rust-lang/rust/commit/7e541e69b1eaab3c242c864a0930cb263d2cbaf5"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "0954d495c7e6b808368d428c6e5140516b5c6ad9", "filename": "crates/hir_ty/src/lib.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b24e6f60300300125ff353073a36d1ef7a64e37f/crates%2Fhir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b24e6f60300300125ff353073a36d1ef7a64e37f/crates%2Fhir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flib.rs?ref=b24e6f60300300125ff353073a36d1ef7a64e37f", "patch": "@@ -35,6 +35,7 @@ use std::sync::Arc;\n use base_db::salsa;\n use chalk_ir::{\n     cast::{CastTo, Caster},\n+    fold::Fold,\n     interner::HasInterner,\n     UintTy,\n };\n@@ -203,6 +204,23 @@ impl CallableSig {\n     }\n }\n \n+impl Fold<Interner> for CallableSig {\n+    type Result = CallableSig;\n+\n+    fn fold_with<'i>(\n+        self,\n+        folder: &mut dyn chalk_ir::fold::Folder<'i, Interner>,\n+        outer_binder: DebruijnIndex,\n+    ) -> chalk_ir::Fallible<Self::Result>\n+    where\n+        Interner: 'i,\n+    {\n+        let vec = self.params_and_return.to_vec();\n+        let folded = vec.fold_with(folder, outer_binder)?;\n+        Ok(CallableSig { params_and_return: folded.into(), is_varargs: self.is_varargs })\n+    }\n+}\n+\n #[derive(Copy, Clone, PartialEq, Eq, Debug, Hash)]\n pub enum ImplTraitId {\n     ReturnTypeImplTrait(hir_def::FunctionId, u16),"}]}