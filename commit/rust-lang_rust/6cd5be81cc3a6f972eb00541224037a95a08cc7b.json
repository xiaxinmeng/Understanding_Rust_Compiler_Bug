{"sha": "6cd5be81cc3a6f972eb00541224037a95a08cc7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjZDViZTgxY2MzYTZmOTcyZWIwMDU0MTIyNDAzN2E5NWEwOGNjN2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-11-17T05:02:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-17T05:02:55Z"}, "message": "Auto merge of #37607 - dns2utf8:doc_grammar, r=alexcrichton\n\nFix grammar verification\n\n * Use make check-lexer to verify the grammar.\n * Extend grammar/README\n * Add make clean-grammar rule\n * Add target check-build-lexer-verifier to make tidy, so it will build the verifier with every build and catch future errors\n\nThis is the continuation of #34994\n\nr? @steveklabnik @jonathandturner @alexcrichton", "tree": {"sha": "7f009dcdebd7aacbb3792ed3568837c8f350913f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f009dcdebd7aacbb3792ed3568837c8f350913f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cd5be81cc3a6f972eb00541224037a95a08cc7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cd5be81cc3a6f972eb00541224037a95a08cc7b", "html_url": "https://github.com/rust-lang/rust/commit/6cd5be81cc3a6f972eb00541224037a95a08cc7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cd5be81cc3a6f972eb00541224037a95a08cc7b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f22fdb03ebb684c1dee1b38990918df6a4537481", "url": "https://api.github.com/repos/rust-lang/rust/commits/f22fdb03ebb684c1dee1b38990918df6a4537481", "html_url": "https://github.com/rust-lang/rust/commit/f22fdb03ebb684c1dee1b38990918df6a4537481"}, {"sha": "0e1828ab03302799701d291865daa71a7ba7a5ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e1828ab03302799701d291865daa71a7ba7a5ce", "html_url": "https://github.com/rust-lang/rust/commit/0e1828ab03302799701d291865daa71a7ba7a5ce"}], "stats": {"total": 49, "additions": 37, "deletions": 12}, "files": [{"sha": "566d665b9cc78d6b40b0e44acb4f1a61369fe3ea", "filename": "configure", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6cd5be81cc3a6f972eb00541224037a95a08cc7b/configure", "raw_url": "https://github.com/rust-lang/rust/raw/6cd5be81cc3a6f972eb00541224037a95a08cc7b/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=6cd5be81cc3a6f972eb00541224037a95a08cc7b", "patch": "@@ -854,6 +854,12 @@ probe_need CFG_CMAKE cmake\n # probe for it only in this case.\n if [ -n \"$CFG_ANTLR4\" ]\n then\n+   CFG_ANTLR4_JAR=\"\\\"$(find /usr/ -name antlr-complete.jar 2>/dev/null | head -n 1)\\\"\"\n+   if [ \"x\" -eq \"x$CFG_ANTLR4_JAR\" ]\n+   then\n+     CFG_ANTLR4_JAR=\"\\\"$(find ~ -name antlr-complete.jar 2>/dev/null | head -n 1)\\\"\"\n+   fi\n+   putvar CFG_ANTLR4_JAR      $CFG_ANTLR4_JAR\n    probe CFG_JAVAC            javac\n fi\n "}, {"sha": "7013d9f03f836c25e341b40622804577952dd021", "filename": "mk/clean.mk", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6cd5be81cc3a6f972eb00541224037a95a08cc7b/mk%2Fclean.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6cd5be81cc3a6f972eb00541224037a95a08cc7b/mk%2Fclean.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fclean.mk?ref=6cd5be81cc3a6f972eb00541224037a95a08cc7b", "patch": "@@ -35,7 +35,7 @@ clean-all: clean clean-llvm\n \n clean-llvm: $(CLEAN_LLVM_RULES)\n \n-clean: clean-misc $(CLEAN_STAGE_RULES)\n+clean: clean-misc clean-grammar $(CLEAN_STAGE_RULES)\n \n clean-misc:\n \t@$(call E, cleaning)\n@@ -47,6 +47,9 @@ clean-misc:\n \t$(Q)rm -Rf dist/*\n \t$(Q)rm -Rf doc\n \n+clean-grammar:\n+\t@$(call E, cleaning grammar verification)\n+\t$(Q)rm -Rf grammar\n define CLEAN_GENERIC\n \n clean-generic-$(2)-$(1):"}, {"sha": "1bd042adb218fdb958cc9a16bebd5f57e6ec1509", "filename": "mk/grammar.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cd5be81cc3a6f972eb00541224037a95a08cc7b/mk%2Fgrammar.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6cd5be81cc3a6f972eb00541224037a95a08cc7b/mk%2Fgrammar.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fgrammar.mk?ref=6cd5be81cc3a6f972eb00541224037a95a08cc7b", "patch": "@@ -37,7 +37,7 @@ $(BG):\n \n $(BG)RustLexer.class: $(BG) $(SG)RustLexer.g4\n \t$(Q)$(CFG_ANTLR4) -o $(BG) $(SG)RustLexer.g4\n-\t$(Q)$(CFG_JAVAC) -d $(BG) $(BG)RustLexer.java\n+\t$(Q)$(CFG_JAVAC) -d $(BG) -classpath $(CFG_ANTLR4_JAR) $(BG)RustLexer.java\n \n check-build-lexer-verifier: $(BG)verify\n "}, {"sha": "9885d275e8b6765034c23e019bad344bbcb302cd", "filename": "mk/tests.mk", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6cd5be81cc3a6f972eb00541224037a95a08cc7b/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6cd5be81cc3a6f972eb00541224037a95a08cc7b/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=6cd5be81cc3a6f972eb00541224037a95a08cc7b", "patch": "@@ -243,7 +243,8 @@ cleantestlibs:\n \n .PHONY: tidy\n tidy: $(HBIN0_H_$(CFG_BUILD))/tidy$(X_$(CFG_BUILD)) \\\n-\t\t$(SNAPSHOT_RUSTC_POST_CLEANUP)\n+\t\t$(SNAPSHOT_RUSTC_POST_CLEANUP) \\\n+\t\tcheck-build-lexer-verifier\n \t$(TARGET_RPATH_VAR0_T_$(CFG_BUILD)_H_$(CFG_BUILD)) $< $(S)src\n \n $(HBIN0_H_$(CFG_BUILD))/tidy$(X_$(CFG_BUILD)): \\"}, {"sha": "cd2dd38de36aaeea4b042b5f833af0be63e30070", "filename": "src/grammar/README.md", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6cd5be81cc3a6f972eb00541224037a95a08cc7b/src%2Fgrammar%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/6cd5be81cc3a6f972eb00541224037a95a08cc7b/src%2Fgrammar%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2FREADME.md?ref=6cd5be81cc3a6f972eb00541224037a95a08cc7b", "patch": "@@ -1,14 +1,18 @@\n-Reference grammar.\n+# Reference grammar.\n \n Uses [antlr4](http://www.antlr.org/) and a custom Rust tool to compare\n-ASTs/token streams generated. You can use the `check-lexer` make target to\n+ASTs/token streams generated. You can use the `make check-lexer` target to\n run all of the available tests.\n \n-To use manually:\n+The build of the rust part is included with `make tidy` and can be run with `make check-build-lexer-verifier`.\n+\n+# Manual build\n+\n+To use manually, assuming antlr4 ist installed at `/usr/share/java/antlr-complete.jar`:\n \n ```\n antlr4 RustLexer.g4\n-javac *.java\n+javac -classpath /usr/share/java/antlr-complete.jar *.java\n rustc -O verify.rs\n for file in ../*/**.rs; do\n     echo $file;\n@@ -18,3 +22,12 @@ done\n \n Note That the `../*/**.rs` glob will match every `*.rs` file in the above\n directory and all of its recursive children. This is a zsh extension.\n+\n+\n+## Cleanup\n+\n+To cleanup you can use a command like this:\n+\n+```bash\n+rm -f verify *.class *.java *.tokens\n+```"}, {"sha": "70a8f6fca2e5c68c8fe6e043a2f76e4658e19b93", "filename": "src/grammar/check.sh", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6cd5be81cc3a6f972eb00541224037a95a08cc7b/src%2Fgrammar%2Fcheck.sh", "raw_url": "https://github.com/rust-lang/rust/raw/6cd5be81cc3a6f972eb00541224037a95a08cc7b/src%2Fgrammar%2Fcheck.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fcheck.sh?ref=6cd5be81cc3a6f972eb00541224037a95a08cc7b", "patch": "@@ -20,11 +20,11 @@ skipped=0\n check() {\n     grep --silent \"// ignore-lexer-test\" \"$1\";\n \n-    # if it's *not* found...\n+    # if it is *not* found...\n     if [ $? -eq 1 ]; then\n-        cd $2 # This `cd` is so java will pick up RustLexer.class. I couldn't\n+        cd $2 # This `cd` is so java will pick up RustLexer.class. I could not\n         # figure out how to wrangle the CLASSPATH, just adding build/grammar\n-        # didn't seem to have any effect.\n+        # did not seem to have any effect.\n         if $3 RustLexer tokens -tokens < $1 | $4 $1 $5; then\n             echo \"pass: $1\"\n             passed=`expr $passed + 1`"}, {"sha": "48be58f731cd7bef2a3e0dc703f9b5c634458dc5", "filename": "src/grammar/verify.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6cd5be81cc3a6f972eb00541224037a95a08cc7b/src%2Fgrammar%2Fverify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd5be81cc3a6f972eb00541224037a95a08cc7b/src%2Fgrammar%2Fverify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fverify.rs?ref=6cd5be81cc3a6f972eb00541224037a95a08cc7b", "patch": "@@ -11,6 +11,7 @@\n #![feature(plugin, rustc_private)]\n \n extern crate syntax;\n+extern crate syntax_pos;\n extern crate rustc;\n \n #[macro_use]\n@@ -290,9 +291,10 @@ fn main() {\n \n     let options = config::basic_options();\n     let session = session::build_session(options, &DepGraph::new(false), None,\n-                                         syntax::diagnostics::registry::Registry::new(&[]),\n+                                         syntax::errors::registry::Registry::new(&[]),\n                                          Rc::new(DummyCrateStore));\n-    let filemap = session.parse_sess.codemap().new_filemap(String::from(\"<n/a>\"), code);\n+    let filemap = session.parse_sess.codemap()\n+                         .new_filemap(\"<n/a>\".to_string(), None, code);\n     let mut lexer = lexer::StringReader::new(session.diagnostic(), filemap);\n     let cm = session.codemap();\n "}]}