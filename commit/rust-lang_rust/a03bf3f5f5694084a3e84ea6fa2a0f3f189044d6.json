{"sha": "a03bf3f5f5694084a3e84ea6fa2a0f3f189044d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwM2JmM2Y1ZjU2OTQwODRhM2U4NGVhNmZhMmEwZjNmMTg5MDQ0ZDY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-23T17:10:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-23T17:10:02Z"}, "message": "Rollup merge of #72496 - shepmaster:typo, r=Dylan-DPC\n\nCorrect small typo: 'not' -> 'note'", "tree": {"sha": "f8af85f4ef103eff49a78548336f8c2119e1a608", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8af85f4ef103eff49a78548336f8c2119e1a608"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a03bf3f5f5694084a3e84ea6fa2a0f3f189044d6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeyVjrCRBK7hj4Ov3rIwAAdHIIAKQ9XsLPZerzlMxDoZZTsj+P\nE4GP+OGR5odkiSojkZFyZd+eERPng4rbvpVmGSameltpxURauxxoEEZJXN8guED8\n3EKughTvp7bwVANcwxLkDxdOq3Cg2rFueMyuNAh8Yz8CCHnXL65RoYWE5b3GmhzU\nJ6GzGF/Iwg4D3bg1r+Hkwgx9DYSX5hVHRQ/ha0ekY6KK3Mvekj47gpEDYpt2kqTS\nsVoxli6UtpY5LuZwQGgFmder6RxZCXBf5iLQtvT37Iccxzrs0zdYS8SUQLa6l9u7\nXLXLVyxFaDCAkOjFFZPSmUgp+8jA0PmYBPMr6CUTDdyb/tzjdb58aWCS+YVxYOE=\n=5GVW\n-----END PGP SIGNATURE-----\n", "payload": "tree f8af85f4ef103eff49a78548336f8c2119e1a608\nparent e91897d2141afab4ccfe1382daa1bac3316602e0\nparent 749d9e7a26a29b5689f2daaaa9b89f654b2862af\nauthor Dylan DPC <dylan.dpc@gmail.com> 1590253802 +0200\ncommitter GitHub <noreply@github.com> 1590253802 +0200\n\nRollup merge of #72496 - shepmaster:typo, r=Dylan-DPC\n\nCorrect small typo: 'not' -> 'note'\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a03bf3f5f5694084a3e84ea6fa2a0f3f189044d6", "html_url": "https://github.com/rust-lang/rust/commit/a03bf3f5f5694084a3e84ea6fa2a0f3f189044d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a03bf3f5f5694084a3e84ea6fa2a0f3f189044d6/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e91897d2141afab4ccfe1382daa1bac3316602e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e91897d2141afab4ccfe1382daa1bac3316602e0", "html_url": "https://github.com/rust-lang/rust/commit/e91897d2141afab4ccfe1382daa1bac3316602e0"}, {"sha": "749d9e7a26a29b5689f2daaaa9b89f654b2862af", "url": "https://api.github.com/repos/rust-lang/rust/commits/749d9e7a26a29b5689f2daaaa9b89f654b2862af", "html_url": "https://github.com/rust-lang/rust/commit/749d9e7a26a29b5689f2daaaa9b89f654b2862af"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "deb9eb5b4b05cf79f78e67fd4e7fa17c385decfd", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a03bf3f5f5694084a3e84ea6fa2a0f3f189044d6/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a03bf3f5f5694084a3e84ea6fa2a0f3f189044d6/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=a03bf3f5f5694084a3e84ea6fa2a0f3f189044d6", "patch": "@@ -882,7 +882,7 @@ impl f32 {\n     /// Returns `max` if `self` is greater than `max`, and `min` if `self` is\n     /// less than `min`. Otherwise this returns `self`.\n     ///\n-    /// Not that this function returns NaN if the initial value was NaN as\n+    /// Note that this function returns NaN if the initial value was NaN as\n     /// well.\n     ///\n     /// # Panics"}, {"sha": "b79e550ed265edf424c84f85a7161cb33c447d5c", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a03bf3f5f5694084a3e84ea6fa2a0f3f189044d6/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a03bf3f5f5694084a3e84ea6fa2a0f3f189044d6/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=a03bf3f5f5694084a3e84ea6fa2a0f3f189044d6", "patch": "@@ -884,7 +884,7 @@ impl f64 {\n     /// Returns `max` if `self` is greater than `max`, and `min` if `self` is\n     /// less than `min`. Otherwise this returns `self`.\n     ///\n-    /// Not that this function returns NaN if the initial value was NaN as\n+    /// Note that this function returns NaN if the initial value was NaN as\n     /// well.\n     ///\n     /// # Panics"}]}