{"sha": "003ed76e41e9b8247d2b2fc040da76969e86d4a6", "node_id": "C_kwDOAAsO6NoAKDAwM2VkNzZlNDFlOWI4MjQ3ZDJiMmZjMDQwZGE3Njk2OWU4NmQ0YTY", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-10-31T09:27:51Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-11-08T13:48:07Z"}, "message": "delay errors as bug", "tree": {"sha": "ff356e5f22e13ca16a976212100e7c84b5976875", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff356e5f22e13ca16a976212100e7c84b5976875"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/003ed76e41e9b8247d2b2fc040da76969e86d4a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/003ed76e41e9b8247d2b2fc040da76969e86d4a6", "html_url": "https://github.com/rust-lang/rust/commit/003ed76e41e9b8247d2b2fc040da76969e86d4a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/003ed76e41e9b8247d2b2fc040da76969e86d4a6/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1551bfc02845eb198a71cc5c0264bd71e336274", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1551bfc02845eb198a71cc5c0264bd71e336274", "html_url": "https://github.com/rust-lang/rust/commit/f1551bfc02845eb198a71cc5c0264bd71e336274"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "0f5d05afcf8094de861c64666dcd5d6001326f5a", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/003ed76e41e9b8247d2b2fc040da76969e86d4a6/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/003ed76e41e9b8247d2b2fc040da76969e86d4a6/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=003ed76e41e9b8247d2b2fc040da76969e86d4a6", "patch": "@@ -2146,15 +2146,15 @@ impl<'tcx> InferCtxtPrivExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                             self.annotate_source_of_ambiguity(&mut err, &impls, predicate);\n                         } else {\n                             if self.is_tainted_by_errors() {\n-                                err.cancel();\n+                                err.delay_as_bug();\n                                 return;\n                             }\n                             err.note(&format!(\"cannot satisfy `{}`\", predicate));\n                         }\n                     }\n                     _ => {\n                         if self.is_tainted_by_errors() {\n-                            err.cancel();\n+                            err.delay_as_bug();\n                             return;\n                         }\n                         err.note(&format!(\"cannot satisfy `{}`\", predicate));"}]}