{"sha": "6c28f84e37c48faa63488ada95242282cf1a09e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjMjhmODRlMzdjNDhmYWE2MzQ4OGFkYTk1MjQyMjgyY2YxYTA5ZTk=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-01-30T10:28:55Z"}, "committer": {"name": "flip1995", "email": "uwdkn@student.kit.edu", "date": "2018-05-02T09:48:11Z"}, "message": "Gate tool_attributes feature", "tree": {"sha": "a10f997856387056201b25ef08963716f3e8022c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a10f997856387056201b25ef08963716f3e8022c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c28f84e37c48faa63488ada95242282cf1a09e9", "comment_count": 0, "verification": {"verified": false, "reason": "unverified_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz66kzxK9mXB0K2lyZ1erJvcvAIQFAlrpiVsACgkQZ1erJvcv\nAIQ3fQ/+JRE19Mr/uTmH3SRC9nfEhNQk/87yysAmIb/XswkzptY3uWve2Gm+1P+d\nYDPptOKhchPnMYc59khbRHRDW5sxssrdhipVXM6Xf6EbDsS/n7KHau4WMAraecEj\nsKFTgf6extgfXCwhuRlvIZeI6zXX6xtoPiKRRAiiUG1Mt6ujcDpJzOVzZJAqQJTh\nrwIdFwS8MIq4AJnR+RTsj3zQ4SxkkyFdP8PwflUSPnaXcJhFHAAAOIXEGQCT8OF5\ntW9WHe2ufV+lPt/jnW+uw3l+GDu3bHiyakG2sqiTwqLtr1uygzG6rppEA6xShRJ1\nUAmtwqWmecqC3K94+ntxuA5Xl8Br3Zm7O4fvhrogvEpXsJVpGRugSIjDtsPj1j9W\nXpSgCW9SjXbRUcTELuvYGp6lEi+xpmcu76dIyXzXrZ/K8NqYE0w5Na16i29gTh4/\nNaMZDl++4mpfJPP+M239lt4T6LPT7LQYrr6pMCy/kke+Ge1H6RSwk859U33KDx7t\npvRrzY1b/xn/a1bu0a7TLmTObvE/xFUefYpfqWJ39o2421NlcVE9ExJvQprE5sre\nomS/U3iojdkcgdRUKAHKOAObAP8vdcBM7WMxEGBgZpZFOprV3zA1C/t6AfqH6gHx\ntZPFSFe5IX/em2Pi06JDRVt58r/0JL2FmNEYNi9/BffO0Xy+AGs=\n=UYSg\n-----END PGP SIGNATURE-----", "payload": "tree a10f997856387056201b25ef08963716f3e8022c\nparent 9b3aea602c37d53bbecf8bff8c77ccbfbefc23d0\nauthor Seiichi Uchida <seuchida@gmail.com> 1517308135 +0900\ncommitter flip1995 <uwdkn@student.kit.edu> 1525254491 +0200\n\nGate tool_attributes feature\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c28f84e37c48faa63488ada95242282cf1a09e9", "html_url": "https://github.com/rust-lang/rust/commit/6c28f84e37c48faa63488ada95242282cf1a09e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c28f84e37c48faa63488ada95242282cf1a09e9/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b3aea602c37d53bbecf8bff8c77ccbfbefc23d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b3aea602c37d53bbecf8bff8c77ccbfbefc23d0", "html_url": "https://github.com/rust-lang/rust/commit/9b3aea602c37d53bbecf8bff8c77ccbfbefc23d0"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "12360e55c71cbe032299bdfe293588846b92c19a", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6c28f84e37c48faa63488ada95242282cf1a09e9/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c28f84e37c48faa63488ada95242282cf1a09e9/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=6c28f84e37c48faa63488ada95242282cf1a09e9", "patch": "@@ -107,6 +107,12 @@ pub fn is_known(attr: &Attribute) -> bool {\n     })\n }\n \n+const RUST_KNOWN_TOOL: &[&str] = &[\"clippy\", \"rustfmt\"];\n+\n+pub fn is_known_tool(attr: &Attribute) -> bool {\n+    RUST_KNOWN_TOOL.contains(&attr.name().as_str().as_ref())\n+}\n+\n impl NestedMetaItem {\n     /// Returns the MetaItem if self is a NestedMetaItemKind::MetaItem.\n     pub fn meta_item(&self) -> Option<&MetaItem> {\n@@ -250,6 +256,10 @@ impl Attribute {\n     pub fn is_value_str(&self) -> bool {\n         self.value_str().is_some()\n     }\n+\n+    pub fn is_scoped(&self) -> bool {\n+        self.path.segments.len() > 1\n+    }\n }\n \n impl MetaItem {"}, {"sha": "dee63b7085ea7b1a7693e1691141d6c3d9977cd1", "filename": "src/libsyntax/diagnostic_list.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c28f84e37c48faa63488ada95242282cf1a09e9/src%2Flibsyntax%2Fdiagnostic_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c28f84e37c48faa63488ada95242282cf1a09e9/src%2Flibsyntax%2Fdiagnostic_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostic_list.rs?ref=6c28f84e37c48faa63488ada95242282cf1a09e9", "patch": "@@ -325,4 +325,5 @@ register_diagnostics! {\n     E0629, // missing 'feature' (rustc_const_unstable)\n     E0630, // rustc_const_unstable attribute must be paired with stable/unstable attribute\n     E0693, // incorrect `repr(align)` attribute format\n+    E0694, // an unknown tool name found in scoped attributes\n }"}, {"sha": "41cd9c595d2c82c9ac8b732ca891e7277064a6ad", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c28f84e37c48faa63488ada95242282cf1a09e9/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c28f84e37c48faa63488ada95242282cf1a09e9/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=6c28f84e37c48faa63488ada95242282cf1a09e9", "patch": "@@ -1017,7 +1017,7 @@ impl<'a, 'b> InvocationCollector<'a, 'b> {\n     fn check_attributes(&mut self, attrs: &[ast::Attribute]) {\n         let features = self.cx.ecfg.features.unwrap();\n         for attr in attrs.iter() {\n-            feature_gate::check_attribute(attr, self.cx.parse_sess, features);\n+            self.check_attribute_inner(attr, features);\n \n             // macros are expanded before any lint passes so this warning has to be hardcoded\n             if attr.path == \"derive\" {\n@@ -1030,6 +1030,10 @@ impl<'a, 'b> InvocationCollector<'a, 'b> {\n \n     fn check_attribute(&mut self, at: &ast::Attribute) {\n         let features = self.cx.ecfg.features.unwrap();\n+        self.check_attribute_inner(at, features);\n+    }\n+\n+    fn check_attribute_inner(&mut self, at: &ast::Attribute, features: &Features) {\n         feature_gate::check_attribute(at, self.cx.parse_sess, features);\n     }\n }"}, {"sha": "4405c1a2658502c3d63ed371161be11ef4b291ed", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6c28f84e37c48faa63488ada95242282cf1a09e9/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c28f84e37c48faa63488ada95242282cf1a09e9/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=6c28f84e37c48faa63488ada95242282cf1a09e9", "patch": "@@ -460,6 +460,9 @@ declare_features! (\n \n     // Access to crate names passed via `--extern` through prelude\n     (active, extern_prelude, \"1.27.0\", Some(44660), Some(Edition::Edition2018)),\n+    \n+    // Scoped attributes\n+    (active, tool_attributes, \"1.25.0\", Some(44690)),\n );\n \n declare_features! (\n@@ -1079,7 +1082,7 @@ pub struct GatedCfg {\n \n impl GatedCfg {\n     pub fn gate(cfg: &ast::MetaItem) -> Option<GatedCfg> {\n-        let name = cfg.ident.name.as_str();\n+        let name = cfg.name().as_str();\n         GATED_CFGS.iter()\n                   .position(|info| info.0 == name)\n                   .map(|idx| {"}]}