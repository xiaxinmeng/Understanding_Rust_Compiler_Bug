{"sha": "e4e7eb2d5891ceb9241f769540dd413e90020971", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0ZTdlYjJkNTg5MWNlYjkyNDFmNzY5NTQwZGQ0MTNlOTAwMjA5NzE=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-06-30T10:00:45Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-06-30T10:57:12Z"}, "message": "Feature gate `rustc` attributes harder", "tree": {"sha": "f3aa0719e0588841025aae5e9d019dbe3ac42a62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3aa0719e0588841025aae5e9d019dbe3ac42a62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4e7eb2d5891ceb9241f769540dd413e90020971", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4e7eb2d5891ceb9241f769540dd413e90020971", "html_url": "https://github.com/rust-lang/rust/commit/e4e7eb2d5891ceb9241f769540dd413e90020971", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4e7eb2d5891ceb9241f769540dd413e90020971/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ffb6438a6b19135cdfd3461dbd9efaf0011a149", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ffb6438a6b19135cdfd3461dbd9efaf0011a149", "html_url": "https://github.com/rust-lang/rust/commit/0ffb6438a6b19135cdfd3461dbd9efaf0011a149"}], "stats": {"total": 146, "additions": 132, "deletions": 14}, "files": [{"sha": "522dc1aa9f8deb7698751d349feade5f4fef9e3a", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=e4e7eb2d5891ceb9241f769540dd413e90020971", "patch": "@@ -19,9 +19,8 @@ use syntax::ext::base::{MacroKind, SyntaxExtension};\n use syntax::ext::expand::{AstFragment, Invocation, InvocationKind};\n use syntax::ext::hygiene::Mark;\n use syntax::ext::tt::macro_rules;\n-use syntax::feature_gate::{\n-    feature_err, is_builtin_attr_name, AttributeGate, GateIssue, Stability, BUILTIN_ATTRIBUTES,\n-};\n+use syntax::feature_gate::{feature_err, emit_feature_err, is_builtin_attr_name};\n+use syntax::feature_gate::{AttributeGate, GateIssue, Stability, BUILTIN_ATTRIBUTES};\n use syntax::symbol::{Symbol, kw, sym};\n use syntax::visit::Visitor;\n use syntax::util::lev_distance::find_best_match_for_name;\n@@ -298,12 +297,25 @@ impl<'a> Resolver<'a> {\n         let res = self.resolve_macro_to_res_inner(path, kind, parent_scope, trace, force);\n \n         // Report errors and enforce feature gates for the resolved macro.\n+        let features = self.session.features_untracked();\n         if res != Err(Determinacy::Undetermined) {\n             // Do not report duplicated errors on every undetermined resolution.\n             for segment in &path.segments {\n                 if let Some(args) = &segment.args {\n                     self.session.span_err(args.span(), \"generic arguments in macro path\");\n                 }\n+                if kind == MacroKind::Attr && !features.rustc_attrs &&\n+                   segment.ident.as_str().starts_with(\"rustc\") {\n+                    let msg = \"attributes starting with `rustc` are \\\n+                               reserved for use by the `rustc` compiler\";\n+                    emit_feature_err(\n+                        &self.session.parse_sess,\n+                        sym::rustc_attrs,\n+                        segment.ident.span,\n+                        GateIssue::Language,\n+                        msg,\n+                    );\n+                }\n             }\n         }\n \n@@ -320,7 +332,6 @@ impl<'a> Resolver<'a> {\n             }\n             Res::NonMacroAttr(attr_kind) => {\n                 if kind == MacroKind::Attr {\n-                    let features = self.session.features_untracked();\n                     if attr_kind == NonMacroAttrKind::Custom {\n                         assert!(path.segments.len() == 1);\n                         if !features.custom_attribute {"}, {"sha": "6037b06eaf20ec94285fb496b17d10c32f020ea2", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=e4e7eb2d5891ceb9241f769540dd413e90020971", "patch": "@@ -1669,6 +1669,14 @@ impl<'a> Context<'a> {\n             }\n             debug!(\"check_attribute: {:?} is builtin, {:?}, {:?}\", attr.path, ty, gateage);\n             return;\n+        } else {\n+            for segment in &attr.path.segments {\n+                if segment.ident.as_str().starts_with(\"rustc\") {\n+                    let msg = \"attributes starting with `rustc` are \\\n+                               reserved for use by the `rustc` compiler\";\n+                    gate_feature!(self, rustc_attrs, segment.ident.span, msg);\n+                }\n+            }\n         }\n         for &(n, ty) in self.plugin_attributes {\n             if attr.path == n {"}, {"sha": "35152e7f4babd4a6a28c8bc261979e07dbddcb59", "filename": "src/test/run-pass-fulldeps/issue-15778-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Frun-pass-fulldeps%2Fissue-15778-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Frun-pass-fulldeps%2Fissue-15778-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-15778-pass.rs?ref=e4e7eb2d5891ceb9241f769540dd413e90020971", "patch": "@@ -2,7 +2,7 @@\n // ignore-stage1\n // compile-flags: -D crate-not-okay\n \n-#![feature(plugin, custom_attribute, custom_inner_attributes)]\n+#![feature(plugin, custom_attribute, custom_inner_attributes, rustc_attrs)]\n \n #![plugin(lint_for_crate)]\n #![rustc_crate_okay]"}, {"sha": "d3a2e486416afd9ae47c570f4f8c31c716b8e510", "filename": "src/test/ui/feature-gates/feature-gate-rustc-attrs.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs.rs?ref=e4e7eb2d5891ceb9241f769540dd413e90020971", "patch": "@@ -1,6 +1,23 @@\n // Test that `#[rustc_*]` attributes are gated by `rustc_attrs` feature gate.\n \n+#![feature(decl_macro)]\n+\n+mod rustc { pub macro unknown() {} }\n+mod unknown { pub macro rustc() {} }\n+\n+#[rustc::unknown]\n+//~^ ERROR attributes starting with `rustc` are reserved for use by the `rustc` compiler\n+//~| ERROR macro `rustc::unknown` may not be used in attributes\n+fn f() {}\n+\n+#[unknown::rustc]\n+//~^ ERROR attributes starting with `rustc` are reserved for use by the `rustc` compiler\n+//~| ERROR macro `unknown::rustc` may not be used in attributes\n+fn g() {}\n+\n #[rustc_dummy]\n //~^ ERROR used by the test suite\n-\n+#[rustc_unknown]\n+//~^ ERROR attributes starting with `rustc` are reserved for use by the `rustc` compiler\n+//~| ERROR attribute `rustc_unknown` is currently unknown\n fn main() {}"}, {"sha": "cdc7b27a749e5f4c21eb31bc814e9b3c6c7f8155", "filename": "src/test/ui/feature-gates/feature-gate-rustc-attrs.stderr", "status": "modified", "additions": 50, "deletions": 2, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs.stderr?ref=e4e7eb2d5891ceb9241f769540dd413e90020971", "patch": "@@ -1,12 +1,60 @@\n+error[E0658]: attributes starting with `rustc` are reserved for use by the `rustc` compiler\n+  --> $DIR/feature-gate-rustc-attrs.rs:8:3\n+   |\n+LL | #[rustc::unknown]\n+   |   ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n+   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+\n+error: macro `rustc::unknown` may not be used in attributes\n+  --> $DIR/feature-gate-rustc-attrs.rs:8:1\n+   |\n+LL | #[rustc::unknown]\n+   | ^^^^^^^^^^^^^^^^^\n+\n+error[E0658]: attributes starting with `rustc` are reserved for use by the `rustc` compiler\n+  --> $DIR/feature-gate-rustc-attrs.rs:13:12\n+   |\n+LL | #[unknown::rustc]\n+   |            ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n+   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+\n+error: macro `unknown::rustc` may not be used in attributes\n+  --> $DIR/feature-gate-rustc-attrs.rs:13:1\n+   |\n+LL | #[unknown::rustc]\n+   | ^^^^^^^^^^^^^^^^^\n+\n+error[E0658]: attributes starting with `rustc` are reserved for use by the `rustc` compiler\n+  --> $DIR/feature-gate-rustc-attrs.rs:20:3\n+   |\n+LL | #[rustc_unknown]\n+   |   ^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n+   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+\n+error[E0658]: The attribute `rustc_unknown` is currently unknown to the compiler and may have meaning added to it in the future\n+  --> $DIR/feature-gate-rustc-attrs.rs:20:3\n+   |\n+LL | #[rustc_unknown]\n+   |   ^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n+   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+\n error[E0658]: used by the test suite\n-  --> $DIR/feature-gate-rustc-attrs.rs:3:1\n+  --> $DIR/feature-gate-rustc-attrs.rs:18:1\n    |\n LL | #[rustc_dummy]\n    | ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n \n-error: aborting due to previous error\n+error: aborting due to 7 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "437ae930934709c94b2e4e54f33cf46bc83a8cb2", "filename": "src/test/ui/proc-macro/expand-to-unstable-2.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.rs?ref=e4e7eb2d5891ceb9241f769540dd413e90020971", "patch": "@@ -4,7 +4,9 @@\n extern crate derive_unstable_2;\n \n #[derive(Unstable)]\n-//~^ ERROR attribute `rustc_foo` is currently unknown\n+//~^ ERROR attributes starting with `rustc` are reserved for use by the `rustc` compiler\n+//~| ERROR attribute `rustc_foo` is currently unknown to the compiler\n+\n struct A;\n \n fn main() {"}, {"sha": "803773db88e9636cecdcd07a0d10d59ad37a3c09", "filename": "src/test/ui/proc-macro/expand-to-unstable-2.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.stderr?ref=e4e7eb2d5891ceb9241f769540dd413e90020971", "patch": "@@ -1,3 +1,12 @@\n+error[E0658]: attributes starting with `rustc` are reserved for use by the `rustc` compiler\n+  --> $DIR/expand-to-unstable-2.rs:6:10\n+   |\n+LL | #[derive(Unstable)]\n+   |          ^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n+   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+\n error[E0658]: The attribute `rustc_foo` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/expand-to-unstable-2.rs:6:10\n    |\n@@ -7,6 +16,6 @@ LL | #[derive(Unstable)]\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n-error: aborting due to previous error\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "cb535362266c00365163e35fd25ce5aa82f32b64", "filename": "src/test/ui/reserved/reserved-attr-on-macro.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Fui%2Freserved%2Freserved-attr-on-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Fui%2Freserved%2Freserved-attr-on-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freserved%2Freserved-attr-on-macro.rs?ref=e4e7eb2d5891ceb9241f769540dd413e90020971", "patch": "@@ -1,5 +1,7 @@\n #[rustc_attribute_should_be_reserved]\n //~^ ERROR attribute `rustc_attribute_should_be_reserved` is currently unknown\n+//~| ERROR attributes starting with `rustc` are reserved for use by the `rustc` compiler\n+\n macro_rules! foo {\n     () => (());\n }"}, {"sha": "0c62c82017e18fb8c91879fccdb2e195a19a863f", "filename": "src/test/ui/reserved/reserved-attr-on-macro.stderr", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Fui%2Freserved%2Freserved-attr-on-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Fui%2Freserved%2Freserved-attr-on-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freserved%2Freserved-attr-on-macro.stderr?ref=e4e7eb2d5891ceb9241f769540dd413e90020971", "patch": "@@ -1,3 +1,12 @@\n+error[E0658]: attributes starting with `rustc` are reserved for use by the `rustc` compiler\n+  --> $DIR/reserved-attr-on-macro.rs:1:3\n+   |\n+LL | #[rustc_attribute_should_be_reserved]\n+   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n+   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+\n error[E0658]: The attribute `rustc_attribute_should_be_reserved` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/reserved-attr-on-macro.rs:1:3\n    |\n@@ -8,13 +17,13 @@ LL | #[rustc_attribute_should_be_reserved]\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error: cannot determine resolution for the macro `foo`\n-  --> $DIR/reserved-attr-on-macro.rs:8:5\n+  --> $DIR/reserved-attr-on-macro.rs:10:5\n    |\n LL |     foo!();\n    |     ^^^\n    |\n    = note: import resolution is stuck, try simplifying macro imports\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "0e10131ce8d1f4d325935d7d5b0d835db04ff8d9", "filename": "src/test/ui/suggestions/attribute-typos.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.rs?ref=e4e7eb2d5891ceb9241f769540dd413e90020971", "patch": "@@ -4,5 +4,8 @@ fn foo() {}\n #[tests] //~ ERROR attribute `tests` is currently unknown to the compiler\n fn bar() {}\n \n-#[rustc_err] //~ ERROR attribute `rustc_err` is currently unknown\n+#[rustc_err]\n+//~^ ERROR attribute `rustc_err` is currently unknown\n+//~| ERROR attributes starting with `rustc` are reserved for use by the `rustc` compiler\n+\n fn main() {}"}, {"sha": "958688b4d390652f111e5a559de34780c51eab8a", "filename": "src/test/ui/suggestions/attribute-typos.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e4e7eb2d5891ceb9241f769540dd413e90020971/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr?ref=e4e7eb2d5891ceb9241f769540dd413e90020971", "patch": "@@ -1,3 +1,12 @@\n+error[E0658]: attributes starting with `rustc` are reserved for use by the `rustc` compiler\n+  --> $DIR/attribute-typos.rs:7:3\n+   |\n+LL | #[rustc_err]\n+   |   ^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n+   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+\n error[E0658]: The attribute `rustc_err` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/attribute-typos.rs:7:3\n    |\n@@ -25,6 +34,6 @@ LL | #[deprcated]\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}]}