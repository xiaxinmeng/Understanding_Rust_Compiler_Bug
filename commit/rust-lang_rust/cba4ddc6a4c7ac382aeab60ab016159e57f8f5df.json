{"sha": "cba4ddc6a4c7ac382aeab60ab016159e57f8f5df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiYTRkZGM2YTRjN2FjMzgyYWVhYjYwYWIwMTYxNTllNTdmOGY1ZGY=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-10-28T12:57:35Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-10-28T12:57:35Z"}, "message": "Start accepting short keywords for parameter kinds\n\nThis is a pre-snapshot commit to be able to implement #1076 without\nthe bootstrap compiler getting in my way.", "tree": {"sha": "f69a781cf8ece69ac40589b9f2e42c3752d946ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f69a781cf8ece69ac40589b9f2e42c3752d946ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cba4ddc6a4c7ac382aeab60ab016159e57f8f5df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cba4ddc6a4c7ac382aeab60ab016159e57f8f5df", "html_url": "https://github.com/rust-lang/rust/commit/cba4ddc6a4c7ac382aeab60ab016159e57f8f5df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cba4ddc6a4c7ac382aeab60ab016159e57f8f5df/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bb5a2c43abe7b4d90f0bba1cb1eabfdd9b771b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bb5a2c43abe7b4d90f0bba1cb1eabfdd9b771b6", "html_url": "https://github.com/rust-lang/rust/commit/4bb5a2c43abe7b4d90f0bba1cb1eabfdd9b771b6"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "ee308c55af54f03136c105c53240fd05f8b09572", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cba4ddc6a4c7ac382aeab60ab016159e57f8f5df/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cba4ddc6a4c7ac382aeab60ab016159e57f8f5df/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=cba4ddc6a4c7ac382aeab60ab016159e57f8f5df", "patch": "@@ -1735,9 +1735,11 @@ fn parse_block_tail(p: parser, lo: uint, s: ast::blk_check_mode) -> ast::blk {\n }\n \n fn parse_ty_param(p: parser) -> ast::ty_param {\n-    let k = if eat_word(p, \"pinned\") { ast::kind_pinned }\n-            else if eat_word(p, \"unique\") { ast::kind_unique }\n-            else { ast::kind_shared };\n+    let k = if eat_word(p, \"pinned\") || eat_word(p, \"pin\") {\n+        ast::kind_pinned\n+    } else if eat_word(p, \"unique\") || eat_word(p, \"uniq\") {\n+        ast::kind_unique\n+    } else { eat_word(p, \"shar\"); ast::kind_shared };\n     ret {ident: parse_ident(p), kind: k};\n }\n "}]}