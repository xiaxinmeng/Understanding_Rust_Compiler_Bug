{"sha": "a186d9fafd7424feab7b5bde044219a0e8e58c9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExODZkOWZhZmQ3NDI0ZmVhYjdiNWJkZTA0NDIxOWEwZThlNThjOWY=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-04-02T20:07:33Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-04-03T19:19:32Z"}, "message": "Don't filter lints in code generation functions", "tree": {"sha": "053d96c3eba6421241dca66dc030ea85445cd0e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/053d96c3eba6421241dca66dc030ea85445cd0e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a186d9fafd7424feab7b5bde044219a0e8e58c9f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEqv54U47RUUXZfOLnLO/Nsn7QvnkFAl6HjEQACgkQLO/Nsn7Q\nvnl6Jw/9EXjSKfoyJSCHlaPVPQiXmdZFUmO42RaSjMyiJm8BjnHeyZe9y9LmJo1L\n0ow8hubbYKj2LCvuYiEmLWYoeUH/D1VJ3qXEEYscz3qkVX2t2cjj9JIMS0aoe+QL\nNPiDTf8NjqPhNL/svBhTDXcdkshjkC1KCi8hbvpgygYfklDjic5T19OdNgeSS1ec\nThQcPwL9mUX7bDubhKvaoQCSeemyEz2TOMcAtXDe6HF2+3dF3Cynf5qcdedeyhqO\n5s5wURdkey8YBbVsiDtJBJb83Zb4fP7Hk0LQYYpwSnCB5wVW2sZVFRsLglPjpfcP\ntaec+E7pHX+i7ZyAMEdAHo5d+wh1h4jvGraiE+wNdP7jMb5AG2Cbn6u9G5frRHBF\nucMYtnt8l5ld8YTp/6godSp0DwSjs2H0s8WgWfIsnt3gCcyPIYogc/yPQoeOxbQq\nY9hn7ww/t+4CNJaM4jW3+MycDsvgelSD8SjcwB6OUVrMbwjUWU432xxlMPHS/B9P\nTrf3U7rppTzeh/Qgez79y1alOm+iknjYXaj+BDHu9PPd8v3V+spe6dny7enMQEsl\nmwn0wiArZbbBWo+x1Jy964SWsfNrzCUOIdZTOtRcTwA42SPnETxq1E/hH2lPck+W\ngvAjbJaKx1d3e7LCEgzjlNvzpI9BAmqiM1Jv8V3we0PVdbTbDAY=\n=URbu\n-----END PGP SIGNATURE-----", "payload": "tree 053d96c3eba6421241dca66dc030ea85445cd0e0\nparent 98c30fea8c8bac46f79a70e0ef0d7be0c76ae4e1\nauthor flip1995 <hello@philkrones.com> 1585858053 +0200\ncommitter flip1995 <hello@philkrones.com> 1585941572 +0200\n\nDon't filter lints in code generation functions\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a186d9fafd7424feab7b5bde044219a0e8e58c9f", "html_url": "https://github.com/rust-lang/rust/commit/a186d9fafd7424feab7b5bde044219a0e8e58c9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a186d9fafd7424feab7b5bde044219a0e8e58c9f/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98c30fea8c8bac46f79a70e0ef0d7be0c76ae4e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/98c30fea8c8bac46f79a70e0ef0d7be0c76ae4e1", "html_url": "https://github.com/rust-lang/rust/commit/98c30fea8c8bac46f79a70e0ef0d7be0c76ae4e1"}], "stats": {"total": 52, "additions": 22, "deletions": 30}, "files": [{"sha": "10056e8f03e0c139dfe6ad46e926e0e39e024767", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 22, "deletions": 30, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/a186d9fafd7424feab7b5bde044219a0e8e58c9f/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a186d9fafd7424feab7b5bde044219a0e8e58c9f/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=a186d9fafd7424feab7b5bde044219a0e8e58c9f", "patch": "@@ -94,13 +94,7 @@ impl Lint {\n #[must_use]\n pub fn gen_lint_group_list<'a>(lints: impl Iterator<Item = &'a Lint>) -> Vec<String> {\n     lints\n-        .filter_map(|l| {\n-            if l.deprecation.is_some() {\n-                None\n-            } else {\n-                Some(format!(\"        LintId::of(&{}::{}),\", l.module, l.name.to_uppercase()))\n-            }\n-        })\n+        .map(|l| format!(\"        LintId::of(&{}::{}),\", l.module, l.name.to_uppercase()))\n         .sorted()\n         .collect::<Vec<String>>()\n }\n@@ -120,32 +114,28 @@ pub fn gen_modules_list<'a>(lints: impl Iterator<Item = &'a Lint>) -> Vec<String\n #[must_use]\n pub fn gen_changelog_lint_list<'a>(lints: impl Iterator<Item = &'a Lint>) -> Vec<String> {\n     lints\n-        .sorted_by_key(|l| l.name.clone())\n-        .filter_map(|l| {\n-            if l.group.starts_with(\"internal\") {\n-                None\n-            } else {\n-                Some(format!(\"[`{}`]: {}#{}\", l.name, DOCS_LINK, l.name))\n-            }\n-        })\n+        .sorted_by_key(|l| &l.name)\n+        .map(|l| format!(\"[`{}`]: {}#{}\", l.name, DOCS_LINK, l.name))\n         .collect()\n }\n \n /// Generates the `register_removed` code in `./clippy_lints/src/lib.rs`.\n #[must_use]\n pub fn gen_deprecated<'a>(lints: impl Iterator<Item = &'a Lint>) -> Vec<String> {\n     lints\n-        .filter_map(|l| {\n-            l.clone().deprecation.map(|depr_text| {\n-                vec![\n-                    \"    store.register_removed(\".to_string(),\n-                    format!(\"        \\\"clippy::{}\\\",\", l.name),\n-                    format!(\"        \\\"{}\\\",\", depr_text),\n-                    \"    );\".to_string(),\n-                ]\n-            })\n+        .flat_map(|l| {\n+            l.deprecation\n+                .clone()\n+                .map(|depr_text| {\n+                    vec![\n+                        \"    store.register_removed(\".to_string(),\n+                        format!(\"        \\\"clippy::{}\\\",\", l.name),\n+                        format!(\"        \\\"{}\\\",\", depr_text),\n+                        \"    );\".to_string(),\n+                    ]\n+                })\n+                .expect(\"only deprecated lints should be passed\")\n         })\n-        .flatten()\n         .collect::<Vec<String>>()\n }\n \n@@ -458,7 +448,6 @@ fn test_gen_changelog_lint_list() {\n     let lints = vec![\n         Lint::new(\"should_assert_eq\", \"group1\", \"abc\", None, \"module_name\"),\n         Lint::new(\"should_assert_eq2\", \"group2\", \"abc\", None, \"module_name\"),\n-        Lint::new(\"incorrect_internal\", \"internal_style\", \"abc\", None, \"module_name\"),\n     ];\n     let expected = vec![\n         format!(\"[`should_assert_eq`]: {}#should_assert_eq\", DOCS_LINK.to_string()),\n@@ -484,7 +473,6 @@ fn test_gen_deprecated() {\n             Some(\"will be removed\"),\n             \"module_name\",\n         ),\n-        Lint::new(\"should_assert_eq2\", \"group2\", \"abc\", None, \"module_name\"),\n     ];\n     let expected: Vec<String> = vec![\n         \"    store.register_removed(\",\n@@ -502,13 +490,18 @@ fn test_gen_deprecated() {\n     assert_eq!(expected, gen_deprecated(lints.iter()));\n }\n \n+#[test]\n+#[should_panic]\n+fn test_gen_deprecated_fail() {\n+    let lints = vec![Lint::new(\"should_assert_eq2\", \"group2\", \"abc\", None, \"module_name\")];\n+    let _ = gen_deprecated(lints.iter());\n+}\n+\n #[test]\n fn test_gen_modules_list() {\n     let lints = vec![\n         Lint::new(\"should_assert_eq\", \"group1\", \"abc\", None, \"module_name\"),\n-        Lint::new(\"should_assert_eq2\", \"group2\", \"abc\", Some(\"abc\"), \"deprecated\"),\n         Lint::new(\"incorrect_stuff\", \"group3\", \"abc\", None, \"another_module\"),\n-        Lint::new(\"incorrect_internal\", \"internal_style\", \"abc\", None, \"module_name\"),\n     ];\n     let expected = vec![\n         \"pub mod another_module;\".to_string(),\n@@ -522,7 +515,6 @@ fn test_gen_lint_group_list() {\n     let lints = vec![\n         Lint::new(\"abc\", \"group1\", \"abc\", None, \"module_name\"),\n         Lint::new(\"should_assert_eq\", \"group1\", \"abc\", None, \"module_name\"),\n-        Lint::new(\"should_assert_eq2\", \"group2\", \"abc\", Some(\"abc\"), \"deprecated\"),\n         Lint::new(\"internal\", \"internal_style\", \"abc\", None, \"module_name\"),\n     ];\n     let expected = vec!["}]}