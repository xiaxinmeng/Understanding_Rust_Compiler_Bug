{"sha": "fa230825c1da8605d51a2ef8d6b672b60baeb692", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhMjMwODI1YzFkYTg2MDVkNTFhMmVmOGQ2YjY3MmI2MGJhZWI2OTI=", "commit": {"author": {"name": "Ahmed Charles", "email": "acharles@outlook.com", "date": "2016-10-06T05:42:19Z"}, "committer": {"name": "Ahmed Charles", "email": "acharles@outlook.com", "date": "2016-10-06T05:42:40Z"}, "message": "Add support for docdir, libdir and mandir.", "tree": {"sha": "695021331fd2b5bbe35ff05503a3f911554762a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/695021331fd2b5bbe35ff05503a3f911554762a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa230825c1da8605d51a2ef8d6b672b60baeb692", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa230825c1da8605d51a2ef8d6b672b60baeb692", "html_url": "https://github.com/rust-lang/rust/commit/fa230825c1da8605d51a2ef8d6b672b60baeb692", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa230825c1da8605d51a2ef8d6b672b60baeb692/comments", "author": {"login": "ahmedcharles", "id": 3112514, "node_id": "MDQ6VXNlcjMxMTI1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3112514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedcharles", "html_url": "https://github.com/ahmedcharles", "followers_url": "https://api.github.com/users/ahmedcharles/followers", "following_url": "https://api.github.com/users/ahmedcharles/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedcharles/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedcharles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedcharles/subscriptions", "organizations_url": "https://api.github.com/users/ahmedcharles/orgs", "repos_url": "https://api.github.com/users/ahmedcharles/repos", "events_url": "https://api.github.com/users/ahmedcharles/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedcharles/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ahmedcharles", "id": 3112514, "node_id": "MDQ6VXNlcjMxMTI1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3112514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedcharles", "html_url": "https://github.com/ahmedcharles", "followers_url": "https://api.github.com/users/ahmedcharles/followers", "following_url": "https://api.github.com/users/ahmedcharles/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedcharles/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedcharles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedcharles/subscriptions", "organizations_url": "https://api.github.com/users/ahmedcharles/orgs", "repos_url": "https://api.github.com/users/ahmedcharles/repos", "events_url": "https://api.github.com/users/ahmedcharles/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedcharles/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a580f8f80d0563dc849529cb5908c4c618f272df", "url": "https://api.github.com/repos/rust-lang/rust/commits/a580f8f80d0563dc849529cb5908c4c618f272df", "html_url": "https://github.com/rust-lang/rust/commit/a580f8f80d0563dc849529cb5908c4c618f272df"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "e441d8d5ca7337563011bf229a676ebf50b9dc9b", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fa230825c1da8605d51a2ef8d6b672b60baeb692/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa230825c1da8605d51a2ef8d6b672b60baeb692/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=fa230825c1da8605d51a2ef8d6b672b60baeb692", "patch": "@@ -79,6 +79,9 @@ pub struct Config {\n     // Fallback musl-root for all targets\n     pub musl_root: Option<PathBuf>,\n     pub prefix: Option<String>,\n+    pub docdir: Option<String>,\n+    pub libdir: Option<String>,\n+    pub mandir: Option<String>,\n     pub codegen_tests: bool,\n     pub nodejs: Option<PathBuf>,\n }\n@@ -357,6 +360,15 @@ impl Config {\n                 \"CFG_PREFIX\" => {\n                     self.prefix = Some(value.to_string());\n                 }\n+                \"CFG_DOCDIR\" => {\n+                    self.docdir = Some(value.to_string());\n+                }\n+                \"CFG_LIBDIR\" => {\n+                    self.libdir = Some(value.to_string());\n+                }\n+                \"CFG_MANDIR\" => {\n+                    self.mandir = Some(value.to_string());\n+                }\n                 \"CFG_LLVM_ROOT\" if value.len() > 0 => {\n                     let target = self.target_config.entry(self.build.clone())\n                                      .or_insert(Target::default());"}, {"sha": "9bc5a7c00abafca26975f7925b882f116c197846", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fa230825c1da8605d51a2ef8d6b672b60baeb692/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa230825c1da8605d51a2ef8d6b672b60baeb692/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=fa230825c1da8605d51a2ef8d6b672b60baeb692", "patch": "@@ -14,6 +14,7 @@\n //! compiler, and documentation.\n \n use std::fs;\n+use std::borrow::Cow;\n use std::path::Path;\n use std::process::Command;\n \n@@ -24,25 +25,37 @@ use dist::{package_vers, sanitize_sh, tmpdir};\n pub fn install(build: &Build, stage: u32, host: &str) {\n     let prefix = build.config.prefix.as_ref().clone().map(|x| Path::new(x))\n         .unwrap_or(Path::new(\"/usr/local\"));\n+    let docdir = build.config.docdir.as_ref().clone().map(|x| Cow::Borrowed(Path::new(x)))\n+        .unwrap_or(Cow::Owned(prefix.join(\"share/doc/rust\")));\n+    let libdir = build.config.libdir.as_ref().clone().map(|x| Cow::Borrowed(Path::new(x)))\n+        .unwrap_or(Cow::Owned(prefix.join(\"lib\")));\n+    let mandir = build.config.mandir.as_ref().clone().map(|x| Cow::Borrowed(Path::new(x)))\n+        .unwrap_or(Cow::Owned(prefix.join(\"share/man\")));\n     let empty_dir = build.out.join(\"tmp/empty_dir\");\n     t!(fs::create_dir_all(&empty_dir));\n     if build.config.docs {\n-        install_sh(&build, \"docs\", \"rust-docs\", stage, host, prefix, &empty_dir);\n+        install_sh(&build, \"docs\", \"rust-docs\", stage, host, prefix,\n+                   &docdir, &libdir, &mandir, &empty_dir);\n     }\n-    install_sh(&build, \"std\", \"rust-std\", stage, host, prefix, &empty_dir);\n-    install_sh(&build, \"rustc\", \"rustc\", stage, host, prefix, &empty_dir);\n+    install_sh(&build, \"std\", \"rust-std\", stage, host, prefix,\n+               &docdir, &libdir, &mandir, &empty_dir);\n+    install_sh(&build, \"rustc\", \"rustc\", stage, host, prefix,\n+               &docdir, &libdir, &mandir, &empty_dir);\n     t!(fs::remove_dir_all(&empty_dir));\n }\n \n fn install_sh(build: &Build, package: &str, name: &str, stage: u32, host: &str,\n-              prefix: &Path, empty_dir: &Path) {\n+              prefix: &Path, docdir: &Path, libdir: &Path, mandir: &Path, empty_dir: &Path) {\n     println!(\"Install {} stage{} ({})\", package, stage, host);\n     let package_name = format!(\"{}-{}-{}\", name, package_vers(build), host);\n \n     let mut cmd = Command::new(\"sh\");\n     cmd.current_dir(empty_dir)\n        .arg(sanitize_sh(&tmpdir(build).join(&package_name).join(\"install.sh\")))\n-       .arg(format!(\"--prefix={}\", sanitize_sh(&prefix)))\n+       .arg(format!(\"--prefix={}\", sanitize_sh(prefix)))\n+       .arg(format!(\"--docdir={}\", sanitize_sh(docdir)))\n+       .arg(format!(\"--libdir={}\", sanitize_sh(libdir)))\n+       .arg(format!(\"--mandir={}\", sanitize_sh(mandir)))\n        .arg(\"--disable-ldconfig\");\n     build.run(&mut cmd);\n }"}]}