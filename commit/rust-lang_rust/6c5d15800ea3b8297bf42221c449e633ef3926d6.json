{"sha": "6c5d15800ea3b8297bf42221c449e633ef3926d6", "node_id": "C_kwDOAAsO6NoAKDZjNWQxNTgwMGVhM2I4Mjk3YmY0MjIyMWM0NDllNjMzZWYzOTI2ZDY", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-23T12:29:59Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-23T12:29:59Z"}, "message": "fix: Fix reference autocompletions using incorrect offsets in macro inputs\n\nFixes https://github.com/rust-lang/rust-analyzer/issues/13035", "tree": {"sha": "fd281bf5c6ca9049968105991bdf8fedc8f23f53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd281bf5c6ca9049968105991bdf8fedc8f23f53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c5d15800ea3b8297bf42221c449e633ef3926d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c5d15800ea3b8297bf42221c449e633ef3926d6", "html_url": "https://github.com/rust-lang/rust/commit/6c5d15800ea3b8297bf42221c449e633ef3926d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c5d15800ea3b8297bf42221c449e633ef3926d6/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dea163970a94f05d56e482c423df1cd379c8735c", "url": "https://api.github.com/repos/rust-lang/rust/commits/dea163970a94f05d56e482c423df1cd379c8735c", "html_url": "https://github.com/rust-lang/rust/commit/dea163970a94f05d56e482c423df1cd379c8735c"}], "stats": {"total": 57, "additions": 41, "deletions": 16}, "files": [{"sha": "a5e854b74df9d268504f2b4e39684c6002e4c335", "filename": "crates/ide-completion/src/context.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6c5d15800ea3b8297bf42221c449e633ef3926d6/crates%2Fide-completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c5d15800ea3b8297bf42221c449e633ef3926d6/crates%2Fide-completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcontext.rs?ref=6c5d15800ea3b8297bf42221c449e633ef3926d6", "patch": "@@ -64,8 +64,11 @@ pub(crate) struct PathCompletionCtx {\n     pub(super) qualified: Qualified,\n     /// The parent of the path we are completing.\n     pub(super) parent: Option<ast::Path>,\n+    #[allow(dead_code)]\n     /// The path of which we are completing the segment\n     pub(super) path: ast::Path,\n+    /// The path of which we are completing the segment in the original file\n+    pub(crate) original_path: Option<ast::Path>,\n     pub(super) kind: PathKind,\n     /// Whether the path segment has type args or not.\n     pub(super) has_type_args: bool,"}, {"sha": "01dd9a234f553c354a47eb3487fc610a37b8df26", "filename": "crates/ide-completion/src/context/analysis.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6c5d15800ea3b8297bf42221c449e633ef3926d6/crates%2Fide-completion%2Fsrc%2Fcontext%2Fanalysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c5d15800ea3b8297bf42221c449e633ef3926d6/crates%2Fide-completion%2Fsrc%2Fcontext%2Fanalysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcontext%2Fanalysis.rs?ref=6c5d15800ea3b8297bf42221c449e633ef3926d6", "patch": "@@ -588,12 +588,15 @@ impl<'a> CompletionContext<'a> {\n         };\n \n         let path = segment.parent_path();\n+        let original_path = find_node_in_file_compensated(sema, original_file, &path);\n+\n         let mut path_ctx = PathCompletionCtx {\n             has_call_parens: false,\n             has_macro_bang: false,\n             qualified: Qualified::No,\n             parent: None,\n             path: path.clone(),\n+            original_path,\n             kind: PathKind::Item { kind: ItemListKind::SourceFile },\n             has_type_args: false,\n             use_tree_parent: false,"}, {"sha": "86302cb0678f198687dfe2b4eed26997c642efa6", "filename": "crates/ide-completion/src/render.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6c5d15800ea3b8297bf42221c449e633ef3926d6/crates%2Fide-completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c5d15800ea3b8297bf42221c449e633ef3926d6/crates%2Fide-completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender.rs?ref=6c5d15800ea3b8297bf42221c449e633ef3926d6", "patch": "@@ -323,9 +323,7 @@ fn render_resolution_path(\n             ..CompletionRelevance::default()\n         });\n \n-        if let Some(ref_match) = compute_ref_match(completion, &ty) {\n-            item.ref_match(ref_match, path_ctx.path.syntax().text_range().start());\n-        }\n+        path_ref_match(completion, path_ctx, &ty, &mut item);\n     };\n     item\n }\n@@ -453,6 +451,29 @@ fn compute_ref_match(\n     None\n }\n \n+fn path_ref_match(\n+    completion: &CompletionContext<'_>,\n+    path_ctx: &PathCompletionCtx,\n+    ty: &hir::Type,\n+    item: &mut Builder,\n+) {\n+    if let Some(original_path) = &path_ctx.original_path {\n+        // At least one char was typed by the user already, in that case look for the original path\n+        if let Some(original_path) = completion.sema.original_ast_node(original_path.clone()) {\n+            if let Some(ref_match) = compute_ref_match(completion, ty) {\n+                item.ref_match(ref_match, original_path.syntax().text_range().start());\n+            }\n+        }\n+    } else {\n+        // completion requested on an empty identifier, there is no path here yet.\n+        // FIXME: This might create inconsistent completions where we show a ref match in macro inputs\n+        // as long as nothing was typed yet\n+        if let Some(ref_match) = compute_ref_match(completion, ty) {\n+            item.ref_match(ref_match, completion.position.offset);\n+        }\n+    }\n+}\n+\n #[cfg(test)]\n mod tests {\n     use std::cmp;"}, {"sha": "37612084604764eee2c66ec568d9dc7fda0c236f", "filename": "crates/ide-completion/src/render/function.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6c5d15800ea3b8297bf42221c449e633ef3926d6/crates%2Fide-completion%2Fsrc%2Frender%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c5d15800ea3b8297bf42221c449e633ef3926d6/crates%2Fide-completion%2Fsrc%2Frender%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender%2Ffunction.rs?ref=6c5d15800ea3b8297bf42221c449e633ef3926d6", "patch": "@@ -79,18 +79,18 @@ fn render(\n         ..ctx.completion_relevance()\n     });\n \n-    if let Some(ref_match) = compute_ref_match(completion, &ret_type) {\n-        match func_kind {\n-            FuncKind::Function(path_ctx) => {\n-                item.ref_match(ref_match, path_ctx.path.syntax().text_range().start());\n-            }\n-            FuncKind::Method(DotAccess { receiver: Some(receiver), .. }, _) => {\n-                if let Some(original_expr) = completion.sema.original_ast_node(receiver.clone()) {\n+    match func_kind {\n+        FuncKind::Function(path_ctx) => {\n+            super::path_ref_match(completion, path_ctx, &ret_type, &mut item);\n+        }\n+        FuncKind::Method(DotAccess { receiver: Some(receiver), .. }, _) => {\n+            if let Some(original_expr) = completion.sema.original_ast_node(receiver.clone()) {\n+                if let Some(ref_match) = compute_ref_match(completion, &ret_type) {\n                     item.ref_match(ref_match, original_expr.syntax().text_range().start());\n                 }\n             }\n-            _ => (),\n         }\n+        _ => (),\n     }\n \n     item.set_documentation(ctx.docs(func))"}, {"sha": "0c791ac570c566f95f511c1a94805ffe03b96af1", "filename": "crates/ide-completion/src/render/literal.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6c5d15800ea3b8297bf42221c449e633ef3926d6/crates%2Fide-completion%2Fsrc%2Frender%2Fliteral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c5d15800ea3b8297bf42221c449e633ef3926d6/crates%2Fide-completion%2Fsrc%2Frender%2Fliteral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender%2Fliteral.rs?ref=6c5d15800ea3b8297bf42221c449e633ef3926d6", "patch": "@@ -2,13 +2,12 @@\n \n use hir::{db::HirDatabase, Documentation, HasAttrs, StructKind};\n use ide_db::SymbolKind;\n-use syntax::AstNode;\n \n use crate::{\n     context::{CompletionContext, PathCompletionCtx, PathKind},\n     item::{Builder, CompletionItem},\n     render::{\n-        compute_ref_match, compute_type_match,\n+        compute_type_match,\n         variant::{\n             format_literal_label, format_literal_lookup, render_record_lit, render_tuple_lit,\n             visible_fields, RenderedLiteral,\n@@ -125,9 +124,8 @@ fn render(\n         type_match: compute_type_match(ctx.completion, &ty),\n         ..ctx.completion_relevance()\n     });\n-    if let Some(ref_match) = compute_ref_match(completion, &ty) {\n-        item.ref_match(ref_match, path_ctx.path.syntax().text_range().start());\n-    }\n+\n+    super::path_ref_match(completion, path_ctx, &ty, &mut item);\n \n     if let Some(import_to_add) = ctx.import_to_add {\n         item.add_import(import_to_add);"}]}