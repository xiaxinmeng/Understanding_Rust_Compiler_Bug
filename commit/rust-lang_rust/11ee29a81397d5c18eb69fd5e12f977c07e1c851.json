{"sha": "11ee29a81397d5c18eb69fd5e12f977c07e1c851", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExZWUyOWE4MTM5N2Q1YzE4ZWI2OWZkNWUxMmY5NzdjMDdlMWM4NTE=", "commit": {"author": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2018-11-07T08:35:28Z"}, "committer": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2018-11-07T08:35:28Z"}, "message": "Use method rather than public field", "tree": {"sha": "60d5e0a210c3539c151970812fde0022957aadb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60d5e0a210c3539c151970812fde0022957aadb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11ee29a81397d5c18eb69fd5e12f977c07e1c851", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11ee29a81397d5c18eb69fd5e12f977c07e1c851", "html_url": "https://github.com/rust-lang/rust/commit/11ee29a81397d5c18eb69fd5e12f977c07e1c851", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11ee29a81397d5c18eb69fd5e12f977c07e1c851/comments", "author": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1a593d1162dc399222c219a261bc95126e7fa62", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1a593d1162dc399222c219a261bc95126e7fa62", "html_url": "https://github.com/rust-lang/rust/commit/f1a593d1162dc399222c219a261bc95126e7fa62"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "e297050f1f04e37d1b1f24c1fc169ca30dcca94a", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/11ee29a81397d5c18eb69fd5e12f977c07e1c851/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11ee29a81397d5c18eb69fd5e12f977c07e1c851/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=11ee29a81397d5c18eb69fd5e12f977c07e1c851", "patch": "@@ -4768,8 +4768,7 @@ fn from_str_radix<T: FromStrRadixHelper>(src: &str, radix: u32) -> Result<T, Par\n #[derive(Debug, Clone, PartialEq, Eq)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct ParseIntError {\n-    /// Stores the cause of parsing an integer failing\n-    pub kind: IntErrorKind,\n+    kind: IntErrorKind,\n }\n \n /// Enum to store the various types of errors that can cause parsing an integer to fail.\n@@ -4796,6 +4795,10 @@ pub enum IntErrorKind {\n }\n \n impl ParseIntError {\n+    /// Outputs the detailed cause of parsing an integer failing.\n+    pub fn kind(self) -> IntErrorKind {\n+        self.kind\n+    }\n     #[unstable(feature = \"int_error_internals\",\n                reason = \"available through Error trait and this method should \\\n                          not be exposed publicly\","}]}