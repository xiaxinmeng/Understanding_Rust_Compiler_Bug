{"sha": "7b37800b45e6cf5d06caf2ee21066797516ff43c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMzc4MDBiNDVlNmNmNWQwNmNhZjJlZTIxMDY2Nzk3NTE2ZmY0M2M=", "commit": {"author": {"name": "Iago-lito", "email": "iago-lito@etak", "date": "2021-04-15T10:32:48Z"}, "committer": {"name": "Iago-lito", "email": "iago-lito@etak", "date": "2021-06-09T15:28:34Z"}, "message": "NonZero checked_pow.", "tree": {"sha": "6dbf35295e98046adef946e4969765c161a391dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dbf35295e98046adef946e4969765c161a391dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b37800b45e6cf5d06caf2ee21066797516ff43c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b37800b45e6cf5d06caf2ee21066797516ff43c", "html_url": "https://github.com/rust-lang/rust/commit/7b37800b45e6cf5d06caf2ee21066797516ff43c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b37800b45e6cf5d06caf2ee21066797516ff43c/comments", "author": {"login": "iago-lito", "id": 10091387, "node_id": "MDQ6VXNlcjEwMDkxMzg3", "avatar_url": "https://avatars.githubusercontent.com/u/10091387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iago-lito", "html_url": "https://github.com/iago-lito", "followers_url": "https://api.github.com/users/iago-lito/followers", "following_url": "https://api.github.com/users/iago-lito/following{/other_user}", "gists_url": "https://api.github.com/users/iago-lito/gists{/gist_id}", "starred_url": "https://api.github.com/users/iago-lito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iago-lito/subscriptions", "organizations_url": "https://api.github.com/users/iago-lito/orgs", "repos_url": "https://api.github.com/users/iago-lito/repos", "events_url": "https://api.github.com/users/iago-lito/events{/privacy}", "received_events_url": "https://api.github.com/users/iago-lito/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iago-lito", "id": 10091387, "node_id": "MDQ6VXNlcjEwMDkxMzg3", "avatar_url": "https://avatars.githubusercontent.com/u/10091387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iago-lito", "html_url": "https://github.com/iago-lito", "followers_url": "https://api.github.com/users/iago-lito/followers", "following_url": "https://api.github.com/users/iago-lito/following{/other_user}", "gists_url": "https://api.github.com/users/iago-lito/gists{/gist_id}", "starred_url": "https://api.github.com/users/iago-lito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iago-lito/subscriptions", "organizations_url": "https://api.github.com/users/iago-lito/orgs", "repos_url": "https://api.github.com/users/iago-lito/repos", "events_url": "https://api.github.com/users/iago-lito/events{/privacy}", "received_events_url": "https://api.github.com/users/iago-lito/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6979bb40f8dd1a67e7508779873e7525441de0ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/6979bb40f8dd1a67e7508779873e7525441de0ce", "html_url": "https://github.com/rust-lang/rust/commit/6979bb40f8dd1a67e7508779873e7525441de0ce"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "ceb2e461387319ea9199f9718335a360f75b6296", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/7b37800b45e6cf5d06caf2ee21066797516ff43c/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b37800b45e6cf5d06caf2ee21066797516ff43c/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=7b37800b45e6cf5d06caf2ee21066797516ff43c", "patch": "@@ -737,6 +737,39 @@ macro_rules! nonzero_unsigned_signed_operations {\n                     // SAFETY: The caller ensures there is no overflow.\n                     unsafe { $Ty::new_unchecked(self.get().unchecked_mul(other.get())) }\n                 }\n+\n+                /// Raise non-zero value to an integer power.\n+                /// Return [`None`] on overflow.\n+                ///\n+                /// # Examples\n+                ///\n+                /// ```\n+                /// #![feature(nonzero_ops)]\n+                /// # #![feature(try_trait)]\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n+                ///\n+                /// # fn main() -> Result<(), std::option::NoneError> {\n+                #[doc = concat!(\"let three = \", stringify!($Ty), \"::new(3)?;\")]\n+                #[doc = concat!(\"let twenty_seven = \", stringify!($Ty), \"::new(27)?;\")]\n+                #[doc = concat!(\"let half_max = \", stringify!($Ty), \"::new(\",\n+                                stringify!($Int), \"::MAX / 2)?;\")]\n+                ///\n+                /// assert_eq!(Some(twenty_seven), three.checked_pow(3));\n+                /// assert_eq!(None, half_max.checked_pow(3));\n+                /// # Ok(())\n+                /// # }\n+                /// ```\n+                #[unstable(feature = \"nonzero_ops\", issue = \"84186\")]\n+                #[inline]\n+                pub const fn checked_pow(self, other: u32) -> Option<$Ty> {\n+                    if let Some(result) = self.get().checked_pow(other) {\n+                        // SAFETY: checked_pow returns None on overflow\n+                        // so the result cannot be zero.\n+                        Some(unsafe { $Ty::new_unchecked(result) })\n+                    } else {\n+                        None\n+                    }\n+                }\n             }\n         )+\n     }"}]}