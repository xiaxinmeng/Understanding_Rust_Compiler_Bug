{"sha": "bd1dc2860a161b5babc0e2d1774a7273c65108b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkMWRjMjg2MGExNjFiNWJhYmMwZTJkMTc3NGE3MjczYzY1MTA4YjA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-13T12:17:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-13T12:17:40Z"}, "message": "Merge pull request #630 from RalfJung/rust-src\n\nskip installing rust-src if XARGO_RUST_SRC is set", "tree": {"sha": "6825457e8a93b8e6f047b1a8484570f3c6f3c28e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6825457e8a93b8e6f047b1a8484570f3c6f3c28e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd1dc2860a161b5babc0e2d1774a7273c65108b0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcZArkCRBK7hj4Ov3rIwAAdHIIAAaYLCuAtqiny2vMPnFaGTFh\n0Yupik+wu/6jx473j540zJRcOBUaaJyDDGtfuG+Z0dixtlourzzyuvEOrJk1+UtN\nfuh0Ogth/buSQvI/SQjfnoJKtiGV989J2+MUas5SK3xF8UjVLpjEmSG/LsE2Rf+7\ntdm+Tq8lwhEDwTLpSJcNSHg9q/UipuDI60LJOTakRkAHit7mZQI6gJmDRPMGuEyY\ns6A0/5rVzT9/qfFZJj/fb+UcpiomeD2IVpAY/+pYAi4g8NCVmipcALl3O3zEneId\nhii/h15LBktvqsG+YVlUSrr63UsvH3ZFWaD1WRliqjINahke1CgSkuNllUj6bpY=\n=+MxT\n-----END PGP SIGNATURE-----\n", "payload": "tree 6825457e8a93b8e6f047b1a8484570f3c6f3c28e\nparent 60a39dfa14ea973d7d002b7a7245801ea6ccb2a8\nparent 2d892c160b3aaaf3ec0a002eb38a4b50379cb759\nauthor Ralf Jung <post@ralfj.de> 1550060260 +0100\ncommitter GitHub <noreply@github.com> 1550060260 +0100\n\nMerge pull request #630 from RalfJung/rust-src\n\nskip installing rust-src if XARGO_RUST_SRC is set"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd1dc2860a161b5babc0e2d1774a7273c65108b0", "html_url": "https://github.com/rust-lang/rust/commit/bd1dc2860a161b5babc0e2d1774a7273c65108b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd1dc2860a161b5babc0e2d1774a7273c65108b0/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60a39dfa14ea973d7d002b7a7245801ea6ccb2a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/60a39dfa14ea973d7d002b7a7245801ea6ccb2a8", "html_url": "https://github.com/rust-lang/rust/commit/60a39dfa14ea973d7d002b7a7245801ea6ccb2a8"}, {"sha": "2d892c160b3aaaf3ec0a002eb38a4b50379cb759", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d892c160b3aaaf3ec0a002eb38a4b50379cb759", "html_url": "https://github.com/rust-lang/rust/commit/2d892c160b3aaaf3ec0a002eb38a4b50379cb759"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "bca2b6df1b40bec717c83325b1ac22c464fb5e9e", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/bd1dc2860a161b5babc0e2d1774a7273c65108b0/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd1dc2860a161b5babc0e2d1774a7273c65108b0/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=bd1dc2860a161b5babc0e2d1774a7273c65108b0", "patch": "@@ -193,18 +193,21 @@ fn setup(ask_user: bool) {\n         }\n     }\n \n-    // Then, we also need rust-src.  Let's see if it is already installed.\n-    let sysroot = Command::new(\"rustc\").args(&[\"--print\", \"sysroot\"]).output().unwrap().stdout;\n-    let sysroot = std::str::from_utf8(&sysroot[..]).unwrap();\n-    let src = Path::new(sysroot.trim_end_matches('\\n')).join(\"lib\").join(\"rustlib\").join(\"src\");\n-    if !src.exists() {\n-        if ask_user {\n-            ask(\"It seems you do not have the rust-src component installed. I will run `rustup component add rust-src`. Proceed?\");\n-        } else {\n-            println!(\"Installing rust-src component: `rustup component add rust-src`\");\n-        }\n-        if !Command::new(\"rustup\").args(&[\"component\", \"add\", \"rust-src\"]).status().unwrap().success() {\n-            show_error(format!(\"Failed to install rust-src component\"));\n+    // Then, unless XARGO_RUST_SRC is set, we also need rust-src.\n+    // Let's see if it is already installed.\n+    if std::env::var(\"XARGO_RUST_SRC\").is_err() {\n+        let sysroot = Command::new(\"rustc\").args(&[\"--print\", \"sysroot\"]).output().unwrap().stdout;\n+        let sysroot = std::str::from_utf8(&sysroot[..]).unwrap();\n+        let src = Path::new(sysroot.trim_end_matches('\\n')).join(\"lib\").join(\"rustlib\").join(\"src\");\n+        if !src.exists() {\n+            if ask_user {\n+                ask(\"It seems you do not have the rust-src component installed. I will run `rustup component add rust-src`. Proceed?\");\n+            } else {\n+                println!(\"Installing rust-src component: `rustup component add rust-src`\");\n+            }\n+            if !Command::new(\"rustup\").args(&[\"component\", \"add\", \"rust-src\"]).status().unwrap().success() {\n+                show_error(format!(\"Failed to install rust-src component\"));\n+            }\n         }\n     }\n "}]}