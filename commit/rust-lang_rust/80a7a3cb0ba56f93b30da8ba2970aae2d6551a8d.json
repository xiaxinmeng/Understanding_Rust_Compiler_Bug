{"sha": "80a7a3cb0ba56f93b30da8ba2970aae2d6551a8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwYTdhM2NiMGJhNTZmOTNiMzBkYThiYTI5NzBhYWUyZDY1NTFhOGQ=", "commit": {"author": {"name": "Abhishek Chanda", "email": "abhishek.becs@gmail.com", "date": "2016-09-25T01:22:43Z"}, "committer": {"name": "Abhishek Chanda", "email": "abhishek.becs@gmail.com", "date": "2016-10-04T04:11:19Z"}, "message": "Add two functions to check type of given address\n\nThe is_v4 function returns true if the given IP is v4. The is_v6\nfunction returns true if the IP is v6.", "tree": {"sha": "57f261ebea58565a3d6f084751c02ad00347385d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57f261ebea58565a3d6f084751c02ad00347385d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80a7a3cb0ba56f93b30da8ba2970aae2d6551a8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80a7a3cb0ba56f93b30da8ba2970aae2d6551a8d", "html_url": "https://github.com/rust-lang/rust/commit/80a7a3cb0ba56f93b30da8ba2970aae2d6551a8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80a7a3cb0ba56f93b30da8ba2970aae2d6551a8d/comments", "author": {"login": "achanda", "id": 2165463, "node_id": "MDQ6VXNlcjIxNjU0NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2165463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achanda", "html_url": "https://github.com/achanda", "followers_url": "https://api.github.com/users/achanda/followers", "following_url": "https://api.github.com/users/achanda/following{/other_user}", "gists_url": "https://api.github.com/users/achanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/achanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achanda/subscriptions", "organizations_url": "https://api.github.com/users/achanda/orgs", "repos_url": "https://api.github.com/users/achanda/repos", "events_url": "https://api.github.com/users/achanda/events{/privacy}", "received_events_url": "https://api.github.com/users/achanda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "achanda", "id": 2165463, "node_id": "MDQ6VXNlcjIxNjU0NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2165463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achanda", "html_url": "https://github.com/achanda", "followers_url": "https://api.github.com/users/achanda/followers", "following_url": "https://api.github.com/users/achanda/following{/other_user}", "gists_url": "https://api.github.com/users/achanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/achanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achanda/subscriptions", "organizations_url": "https://api.github.com/users/achanda/orgs", "repos_url": "https://api.github.com/users/achanda/repos", "events_url": "https://api.github.com/users/achanda/events{/privacy}", "received_events_url": "https://api.github.com/users/achanda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdad70213b32454837c0ed16dbbac3954325feea", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdad70213b32454837c0ed16dbbac3954325feea", "html_url": "https://github.com/rust-lang/rust/commit/bdad70213b32454837c0ed16dbbac3954325feea"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "7c4985bd6275977af0d326d1ba6973338c6c6e46", "filename": "src/libstd/net/ip.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/80a7a3cb0ba56f93b30da8ba2970aae2d6551a8d/src%2Flibstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80a7a3cb0ba56f93b30da8ba2970aae2d6551a8d/src%2Flibstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fip.rs?ref=80a7a3cb0ba56f93b30da8ba2970aae2d6551a8d", "patch": "@@ -130,6 +130,24 @@ impl IpAddr {\n             IpAddr::V6(ref a) => a.is_documentation(),\n         }\n     }\n+\n+    /// Returns true if this address is a valid IPv4 address, false if it's a valid IPv6 address.\n+    #[unstable(feature = \"ipaddr_checker\", issue = \"36949\")]\n+    pub fn is_ipv4(&self) -> bool {\n+        match *self {\n+            IpAddr::V4(_) => true,\n+            IpAddr::V6(_) => false,\n+        }\n+    }\n+\n+    /// Returns true if this address is a valid IPv6 address, false if it's a valid IPv4 address.\n+    #[unstable(feature = \"ipaddr_checker\", issue = \"36949\")]\n+    pub fn is_ipv6(&self) -> bool {\n+        match *self {\n+            IpAddr::V4(_) => false,\n+            IpAddr::V6(_) => true,\n+        }\n+    }\n }\n \n impl Ipv4Addr {\n@@ -1023,4 +1041,18 @@ mod tests {\n         assert!(\"2001:db8:f00::1002\".parse::<Ipv6Addr>().unwrap() <\n                 \"2001:db8:f00::2001\".parse::<Ipv6Addr>().unwrap());\n     }\n+\n+    #[test]\n+    fn is_v4() {\n+        let ip = IpAddr::V4(Ipv4Addr::new(100, 64, 3, 3));\n+        assert!(ip.is_ipv4());\n+        assert!(!ip.is_ipv6());\n+    }\n+\n+    #[test]\n+    fn is_v6() {\n+        let ip = IpAddr::V6(Ipv6Addr::new(0, 0, 0, 0, 0, 0xffff, 0x1234, 0x5678));\n+        assert!(!ip.is_ipv4());\n+        assert!(ip.is_ipv6());\n+    }\n }"}]}