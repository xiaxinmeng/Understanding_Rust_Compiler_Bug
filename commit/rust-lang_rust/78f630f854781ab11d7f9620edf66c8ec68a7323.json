{"sha": "78f630f854781ab11d7f9620edf66c8ec68a7323", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZjYzMGY4NTQ3ODFhYjExZDdmOTYyMGVkZjY2YzhlYzY4YTczMjM=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-12-20T21:54:22Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-12-20T21:54:22Z"}, "message": "ICH: Add test cases for inherent impls.", "tree": {"sha": "cae2ebe744a12ee9888e51a5d0153292dad2c0b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cae2ebe744a12ee9888e51a5d0153292dad2c0b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78f630f854781ab11d7f9620edf66c8ec68a7323", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78f630f854781ab11d7f9620edf66c8ec68a7323", "html_url": "https://github.com/rust-lang/rust/commit/78f630f854781ab11d7f9620edf66c8ec68a7323", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78f630f854781ab11d7f9620edf66c8ec68a7323/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94ae2a2e6791e0c4ab6fba836b2b09a07f2d3c8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/94ae2a2e6791e0c4ab6fba836b2b09a07f2d3c8a", "html_url": "https://github.com/rust-lang/rust/commit/94ae2a2e6791e0c4ab6fba836b2b09a07f2d3c8a"}], "stats": {"total": 410, "additions": 409, "deletions": 1}, "files": [{"sha": "5c37bc133596dd02cf8e369c396a50aee8a7eb55", "filename": "src/test/incremental/hashes/inherent_impls.rs", "status": "modified", "additions": 409, "deletions": 1, "changes": 410, "blob_url": "https://github.com/rust-lang/rust/blob/78f630f854781ab11d7f9620edf66c8ec68a7323/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f630f854781ab11d7f9620edf66c8ec68a7323/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs?ref=78f630f854781ab11d7f9620edf66c8ec68a7323", "patch": "@@ -107,7 +107,7 @@ impl Foo {\n     pub fn method_selfness(&self) { }\n }\n \n-// Change Method Selfmutness -----------------------------------------------------------\n+// Change Method Selfmutness ---------------------------------------------------\n #[cfg(cfail1)]\n impl Foo {\n     pub fn method_selfmutness(&self) { }\n@@ -126,3 +126,411 @@ impl Foo {\n     pub fn method_selfmutness(&mut self) { }\n }\n \n+\n+\n+// Add Method To Impl ----------------------------------------------------------\n+#[cfg(cfail1)]\n+impl Foo {\n+    pub fn add_method_to_impl1(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl Foo {\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_clean(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub fn add_method_to_impl1(&self) { }\n+\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub fn add_method_to_impl2(&self) { }\n+}\n+\n+\n+\n+// Add Method Parameter --------------------------------------------------------\n+#[cfg(cfail1)]\n+impl Foo {\n+    pub fn add_method_parameter(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub fn add_method_parameter(&self, _: i32) { }\n+}\n+\n+\n+\n+// Change Method Parameter Name ------------------------------------------------\n+#[cfg(cfail1)]\n+impl Foo {\n+    pub fn change_method_parameter_name(&self, a: i64) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub fn change_method_parameter_name(&self, b: i64) { }\n+}\n+\n+\n+\n+// Change Method Return Type ---------------------------------------------------\n+#[cfg(cfail1)]\n+impl Foo {\n+    pub fn change_method_return_type(&self) -> u16 { 0 }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub fn change_method_return_type(&self) -> u8 { 0 }\n+}\n+\n+\n+\n+// Make Method #[inline] -------------------------------------------------------\n+#[cfg(cfail1)]\n+impl Foo {\n+    pub fn make_method_inline(&self) -> u8 { 0 }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    #[inline]\n+    pub fn make_method_inline(&self) -> u8 { 0 }\n+}\n+\n+\n+\n+//  Change order of parameters -------------------------------------------------\n+#[cfg(cfail1)]\n+impl Foo {\n+    pub fn change_method_parameter_order(&self, a: i64, b: i64) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub fn change_method_parameter_order(&self, b: i64, a: i64) { }\n+}\n+\n+\n+\n+// Make method unsafe ----------------------------------------------------------\n+#[cfg(cfail1)]\n+impl Foo {\n+    pub fn make_method_unsafe(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub unsafe fn make_method_unsafe(&self) { }\n+}\n+\n+\n+\n+// Make method extern ----------------------------------------------------------\n+#[cfg(cfail1)]\n+impl Foo {\n+    pub fn make_method_extern(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub extern fn make_method_extern(&self) { }\n+}\n+\n+\n+\n+// Change method calling convention --------------------------------------------\n+#[cfg(cfail1)]\n+impl Foo {\n+    pub extern \"C\" fn change_method_calling_convention(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub extern \"system\" fn change_method_calling_convention(&self) { }\n+}\n+\n+\n+\n+// Add Lifetime Parameter to Method --------------------------------------------\n+#[cfg(cfail1)]\n+impl Foo {\n+    pub fn add_lifetime_parameter_to_method(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub fn add_lifetime_parameter_to_method<'a>(&self) { }\n+}\n+\n+\n+\n+// Add Type Parameter To Method ------------------------------------------------\n+#[cfg(cfail1)]\n+impl Foo {\n+    pub fn add_type_parameter_to_method(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub fn add_type_parameter_to_method<T>(&self) { }\n+}\n+\n+\n+\n+// Add Lifetime Bound to Lifetime Parameter of Method --------------------------\n+#[cfg(cfail1)]\n+impl Foo {\n+    pub fn add_lifetime_bound_to_lifetime_param_of_method<'a, 'b>(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub fn add_lifetime_bound_to_lifetime_param_of_method<'a, 'b: 'a>(&self) { }\n+}\n+\n+\n+\n+// Add Lifetime Bound to Type Parameter of Method ------------------------------\n+#[cfg(cfail1)]\n+impl Foo {\n+    pub fn add_lifetime_bound_to_type_param_of_method<'a, T>(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub fn add_lifetime_bound_to_type_param_of_method<'a, T: 'a>(&self) { }\n+}\n+\n+\n+\n+// Add Trait Bound to Type Parameter of Method ------------------------------\n+#[cfg(cfail1)]\n+impl Foo {\n+    pub fn add_trait_bound_to_type_param_of_method<T>(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub fn add_trait_bound_to_type_param_of_method<T: Clone>(&self) { }\n+}\n+\n+\n+\n+// Add #[no_mangle] to Method --------------------------------------------------\n+#[cfg(cfail1)]\n+impl Foo {\n+    pub fn add_no_mangle_to_method(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    #[no_mangle]\n+    pub fn add_no_mangle_to_method(&self) { }\n+}\n+\n+\n+\n+struct Bar<T>(T);\n+\n+// Add Type Parameter To Impl --------------------------------------------------\n+#[cfg(cfail1)]\n+impl Bar<u32> {\n+    pub fn add_type_parameter_to_impl(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl<T> Bar<T> {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub fn add_type_parameter_to_impl(&self) { }\n+}\n+\n+\n+\n+// Change Self Type of Impl ----------------------------------------------------\n+#[cfg(cfail1)]\n+impl Bar<u32> {\n+    pub fn change_impl_self_type(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl Bar<u64> {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub fn change_impl_self_type(&self) { }\n+}\n+\n+\n+\n+// Add Lifetime Bound to Impl --------------------------------------------------\n+#[cfg(cfail1)]\n+impl<T> Bar<T> {\n+    pub fn add_lifetime_bound_to_impl_parameter(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl<T: 'static> Bar<T> {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub fn add_lifetime_bound_to_impl_parameter(&self) { }\n+}\n+\n+\n+\n+// Add Trait Bound to Impl Parameter -------------------------------------------\n+#[cfg(cfail1)]\n+impl<T> Bar<T> {\n+    pub fn add_trait_bound_to_impl_parameter(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl<T: Clone> Bar<T> {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    pub fn add_trait_bound_to_impl_parameter(&self) { }\n+}"}]}