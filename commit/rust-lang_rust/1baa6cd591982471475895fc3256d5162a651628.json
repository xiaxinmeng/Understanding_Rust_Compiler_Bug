{"sha": "1baa6cd591982471475895fc3256d5162a651628", "node_id": "C_kwDOAAsO6NoAKDFiYWE2Y2Q1OTE5ODI0NzE0NzU4OTVmYzMyNTZkNTE2MmE2NTE2Mjg", "commit": {"author": {"name": "koka", "email": "koka.code@gmail.com", "date": "2022-11-19T12:21:47Z"}, "committer": {"name": "koka", "email": "koka.code@gmail.com", "date": "2022-11-19T12:21:47Z"}, "message": "refac: grab a snip from receiver", "tree": {"sha": "b960df088c9152865b451b48ecb00e0d64a9b71b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b960df088c9152865b451b48ecb00e0d64a9b71b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1baa6cd591982471475895fc3256d5162a651628", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHQEABYIAB0WIQTeiB5r8ReBHCJcHiKlkXpAaXd0zQUCY3jKhQAKCRClkXpAaXd0\nzYDMAPsHAxSo833XjRI2vQQi8AQ/mRJ9o83zL5YtiPgSW1fugAD4x8IWoERArkqg\nTO8brSXVWICXNeo5td3OStIf8MNdBQ==\n=9bb9\n-----END PGP SIGNATURE-----", "payload": "tree b960df088c9152865b451b48ecb00e0d64a9b71b\nparent 921f4d317ec3498b0583a72ba1dfdfd84699c268\nauthor koka <koka.code@gmail.com> 1668860507 +0900\ncommitter koka <koka.code@gmail.com> 1668860507 +0900\n\nrefac: grab a snip from receiver\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1baa6cd591982471475895fc3256d5162a651628", "html_url": "https://github.com/rust-lang/rust/commit/1baa6cd591982471475895fc3256d5162a651628", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1baa6cd591982471475895fc3256d5162a651628/comments", "author": {"login": "koka831", "id": 14945055, "node_id": "MDQ6VXNlcjE0OTQ1MDU1", "avatar_url": "https://avatars.githubusercontent.com/u/14945055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koka831", "html_url": "https://github.com/koka831", "followers_url": "https://api.github.com/users/koka831/followers", "following_url": "https://api.github.com/users/koka831/following{/other_user}", "gists_url": "https://api.github.com/users/koka831/gists{/gist_id}", "starred_url": "https://api.github.com/users/koka831/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koka831/subscriptions", "organizations_url": "https://api.github.com/users/koka831/orgs", "repos_url": "https://api.github.com/users/koka831/repos", "events_url": "https://api.github.com/users/koka831/events{/privacy}", "received_events_url": "https://api.github.com/users/koka831/received_events", "type": "User", "site_admin": false}, "committer": {"login": "koka831", "id": 14945055, "node_id": "MDQ6VXNlcjE0OTQ1MDU1", "avatar_url": "https://avatars.githubusercontent.com/u/14945055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koka831", "html_url": "https://github.com/koka831", "followers_url": "https://api.github.com/users/koka831/followers", "following_url": "https://api.github.com/users/koka831/following{/other_user}", "gists_url": "https://api.github.com/users/koka831/gists{/gist_id}", "starred_url": "https://api.github.com/users/koka831/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koka831/subscriptions", "organizations_url": "https://api.github.com/users/koka831/orgs", "repos_url": "https://api.github.com/users/koka831/repos", "events_url": "https://api.github.com/users/koka831/events{/privacy}", "received_events_url": "https://api.github.com/users/koka831/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "921f4d317ec3498b0583a72ba1dfdfd84699c268", "url": "https://api.github.com/repos/rust-lang/rust/commits/921f4d317ec3498b0583a72ba1dfdfd84699c268", "html_url": "https://github.com/rust-lang/rust/commit/921f4d317ec3498b0583a72ba1dfdfd84699c268"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "cf34a57f91d12643e63203341dbdd7f280fcc42c", "filename": "clippy_lints/src/unused_rounding.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1baa6cd591982471475895fc3256d5162a651628/clippy_lints%2Fsrc%2Funused_rounding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1baa6cd591982471475895fc3256d5162a651628/clippy_lints%2Fsrc%2Funused_rounding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_rounding.rs?ref=1baa6cd591982471475895fc3256d5162a651628", "patch": "@@ -1,5 +1,5 @@\n-use clippy_utils::diagnostics::span_lint_and_sugg;\n-use rustc_ast::ast::{Expr, ExprKind, LitFloatType, LitKind};\n+use clippy_utils::{diagnostics::span_lint_and_sugg, source::snippet};\n+use rustc_ast::ast::{Expr, ExprKind, LitKind};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -29,19 +29,15 @@ declare_clippy_lint! {\n }\n declare_lint_pass!(UnusedRounding => [UNUSED_ROUNDING]);\n \n-fn is_useless_rounding(expr: &Expr) -> Option<(&str, String)> {\n+fn is_useless_rounding<'a>(cx: &EarlyContext<'a>, expr: &'a Expr) -> Option<(&'a str, String)> {\n     if let ExprKind::MethodCall(name_ident, receiver, _, _) = &expr.kind\n         && let method_name = name_ident.ident.name.as_str()\n         && (method_name == \"ceil\" || method_name == \"round\" || method_name == \"floor\")\n         && let ExprKind::Lit(spanned) = &receiver.kind\n-        && let LitKind::Float(symbol, ty) = spanned.kind {\n+        && let LitKind::Float(symbol, _) = spanned.kind {\n             let f = symbol.as_str().parse::<f64>().unwrap();\n-            let f_str = spanned.token_lit.symbol.to_string() + if let LitFloatType::Suffixed(ty) = ty {\n-                ty.name_str()\n-            } else {\n-                \"\"\n-            };\n             if f.fract() == 0.0 {\n+                let f_str = snippet(cx, receiver.span, \"..\").to_string();\n                 Some((method_name, f_str))\n             } else {\n                 None\n@@ -53,7 +49,7 @@ fn is_useless_rounding(expr: &Expr) -> Option<(&str, String)> {\n \n impl EarlyLintPass for UnusedRounding {\n     fn check_expr(&mut self, cx: &EarlyContext<'_>, expr: &Expr) {\n-        if let Some((method_name, float)) = is_useless_rounding(expr) {\n+        if let Some((method_name, float)) = is_useless_rounding(cx, expr) {\n             span_lint_and_sugg(\n                 cx,\n                 UNUSED_ROUNDING,"}]}