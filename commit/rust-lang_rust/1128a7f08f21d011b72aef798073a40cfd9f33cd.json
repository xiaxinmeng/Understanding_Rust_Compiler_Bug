{"sha": "1128a7f08f21d011b72aef798073a40cfd9f33cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExMjhhN2YwOGYyMWQwMTFiNzJhZWY3OTgwNzNhNDBjZmQ5ZjMzY2Q=", "commit": {"author": {"name": "Alex Gaynor", "email": "alex.gaynor@gmail.com", "date": "2014-11-17T00:51:22Z"}, "committer": {"name": "Alex Gaynor", "email": "alex.gaynor@gmail.com", "date": "2014-11-17T00:51:22Z"}, "message": "Fixed a few typos in libcore", "tree": {"sha": "6a8ed05aadaf310b917e8d43e924637f1897b99a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a8ed05aadaf310b917e8d43e924637f1897b99a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1128a7f08f21d011b72aef798073a40cfd9f33cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1128a7f08f21d011b72aef798073a40cfd9f33cd", "html_url": "https://github.com/rust-lang/rust/commit/1128a7f08f21d011b72aef798073a40cfd9f33cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1128a7f08f21d011b72aef798073a40cfd9f33cd/comments", "author": {"login": "alex", "id": 772, "node_id": "MDQ6VXNlcjc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex", "html_url": "https://github.com/alex", "followers_url": "https://api.github.com/users/alex/followers", "following_url": "https://api.github.com/users/alex/following{/other_user}", "gists_url": "https://api.github.com/users/alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex/subscriptions", "organizations_url": "https://api.github.com/users/alex/orgs", "repos_url": "https://api.github.com/users/alex/repos", "events_url": "https://api.github.com/users/alex/events{/privacy}", "received_events_url": "https://api.github.com/users/alex/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alex", "id": 772, "node_id": "MDQ6VXNlcjc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex", "html_url": "https://github.com/alex", "followers_url": "https://api.github.com/users/alex/followers", "following_url": "https://api.github.com/users/alex/following{/other_user}", "gists_url": "https://api.github.com/users/alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex/subscriptions", "organizations_url": "https://api.github.com/users/alex/orgs", "repos_url": "https://api.github.com/users/alex/repos", "events_url": "https://api.github.com/users/alex/events{/privacy}", "received_events_url": "https://api.github.com/users/alex/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b7b4f075a531eb160becf2818c1e9a63fa10cd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b7b4f075a531eb160becf2818c1e9a63fa10cd3", "html_url": "https://github.com/rust-lang/rust/commit/0b7b4f075a531eb160becf2818c1e9a63fa10cd3"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "937f73a326271491145514785d04afbeda07e00f", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1128a7f08f21d011b72aef798073a40cfd9f33cd/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128a7f08f21d011b72aef798073a40cfd9f33cd/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=1128a7f08f21d011b72aef798073a40cfd9f33cd", "patch": "@@ -88,7 +88,7 @@ pub fn align_of_val<T>(_val: &T) -> uint {\n \n /// Create a value initialized to zero.\n ///\n-/// This function is similar to allocating space for a a local variable and\n+/// This function is similar to allocating space for a local variable and\n /// zeroing it out (an unsafe operation).\n ///\n /// Care must be taken when using this function, if the type `T` has a"}, {"sha": "ab9d08813854cd1cb95ff10d574fc7c393b931bc", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1128a7f08f21d011b72aef798073a40cfd9f33cd/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1128a7f08f21d011b72aef798073a40cfd9f33cd/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=1128a7f08f21d011b72aef798073a40cfd9f33cd", "patch": "@@ -196,7 +196,7 @@ pub trait Int\n     /// ```\n     fn swap_bytes(self) -> Self;\n \n-    /// Convert a integer from big endian to the target's endianness.\n+    /// Convert an integer from big endian to the target's endianness.\n     ///\n     /// On big endian this is a no-op. On little endian the bytes are swapped.\n     ///\n@@ -218,7 +218,7 @@ pub trait Int\n         if cfg!(target_endian = \"big\") { x } else { x.swap_bytes() }\n     }\n \n-    /// Convert a integer from little endian to the target's endianness.\n+    /// Convert an integer from little endian to the target's endianness.\n     ///\n     /// On little endian this is a no-op. On big endian the bytes are swapped.\n     ///"}]}