{"sha": "750cd442beb0009df6ee3dc80b88582f3b8730d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1MGNkNDQyYmViMDAwOWRmNmVlM2RjODBiODg1ODJmM2I4NzMwZDk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-19T14:45:23Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-19T14:45:23Z"}, "message": "fix argv null terminator", "tree": {"sha": "35785c3c2ad989c327a63377f21bda5cf36dd1d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35785c3c2ad989c327a63377f21bda5cf36dd1d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/750cd442beb0009df6ee3dc80b88582f3b8730d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/750cd442beb0009df6ee3dc80b88582f3b8730d9", "html_url": "https://github.com/rust-lang/rust/commit/750cd442beb0009df6ee3dc80b88582f3b8730d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/750cd442beb0009df6ee3dc80b88582f3b8730d9/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af4fb6655e9a09d4154250bcff99fc80eb2c402f", "url": "https://api.github.com/repos/rust-lang/rust/commits/af4fb6655e9a09d4154250bcff99fc80eb2c402f", "html_url": "https://github.com/rust-lang/rust/commit/af4fb6655e9a09d4154250bcff99fc80eb2c402f"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "cf2c39f61ef8abbfd15126b9c4b52d0127f26de3", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/750cd442beb0009df6ee3dc80b88582f3b8730d9/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/750cd442beb0009df6ee3dc80b88582f3b8730d9/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=750cd442beb0009df6ee3dc80b88582f3b8730d9", "patch": "@@ -132,7 +132,7 @@ pub fn create_ecx<'a, 'mir: 'a, 'tcx: 'mir>(\n \n     // FIXME: extract main source file path\n     // Third argument (argv): &[b\"foo\"]\n-    const CMD: &str = \"running-in-miri\";\n+    const CMD: &str = \"running-in-miri\\0\";\n     let dest = ecx.eval_place(&mir::Place::Local(args.next().unwrap()))?;\n     let cmd = ecx.memory_mut().allocate_static_bytes(CMD.as_bytes()).with_default_tag();\n     let raw_str_layout = ecx.layout_of(ecx.tcx.mk_imm_ptr(ecx.tcx.types.u8))?;\n@@ -150,9 +150,7 @@ pub fn create_ecx<'a, 'mir: 'a, 'tcx: 'mir>(\n     // Store cmdline as UTF-16 for Windows GetCommandLineW\n     {\n         let tcx = &{ecx.tcx.tcx};\n-        let cmd_utf16: Vec<u16> = CMD.encode_utf16()\n-            .chain(Some(0)) // add 0-terminator\n-            .collect();\n+        let cmd_utf16: Vec<u16> = CMD.encode_utf16().collect();\n         let cmd_ptr = ecx.memory_mut().allocate(\n             Size::from_bytes(cmd_utf16.len() as u64 * 2),\n             Align::from_bytes(2).unwrap(),"}]}