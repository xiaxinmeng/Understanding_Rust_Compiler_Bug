{"sha": "3dcab2922c4eaaea11a6856fa566bdb7a6d9c1f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkY2FiMjkyMmM0ZWFhZWExMWE2ODU2ZmE1NjZiZGI3YTZkOWMxZjY=", "commit": {"author": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2020-07-27T21:44:48Z"}, "committer": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2020-07-27T21:44:48Z"}, "message": "rustbuild: format both Ok/Err separately, since Result doesn't do it", "tree": {"sha": "c2f0175bfb36cbceae37155d25e7a3d3fa454e4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2f0175bfb36cbceae37155d25e7a3d3fa454e4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dcab2922c4eaaea11a6856fa566bdb7a6d9c1f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dcab2922c4eaaea11a6856fa566bdb7a6d9c1f6", "html_url": "https://github.com/rust-lang/rust/commit/3dcab2922c4eaaea11a6856fa566bdb7a6d9c1f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dcab2922c4eaaea11a6856fa566bdb7a6d9c1f6/comments", "author": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84896c7f096c38d43e020612e639e5975aee7f34", "url": "https://api.github.com/repos/rust-lang/rust/commits/84896c7f096c38d43e020612e639e5975aee7f34", "html_url": "https://github.com/rust-lang/rust/commit/84896c7f096c38d43e020612e639e5975aee7f34"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f0cb7be96917bdc5cc41b41d5ca17e0e0900cc64", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3dcab2922c4eaaea11a6856fa566bdb7a6d9c1f6/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dcab2922c4eaaea11a6856fa566bdb7a6d9c1f6/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=3dcab2922c4eaaea11a6856fa566bdb7a6d9c1f6", "patch": "@@ -149,8 +149,8 @@ fn main() {\n \n     if let Some(mut on_fail) = on_fail {\n         let e = match cmd.status() {\n-            Ok(s) if s.success() => std::process::exit(0),\n-            e => e,\n+            Ok(s) => if s.success() { std::process::exit(0) } else { format!(\"Ok({})\", s) },\n+            Err(e) => format!(\"Err({})\", e),\n         };\n         println!(\"\\nDid not run successfully: {}\\n{:?}\\n-------------\", e, cmd);\n         status_code(&mut on_fail).expect(\"could not run the backup command\");"}]}