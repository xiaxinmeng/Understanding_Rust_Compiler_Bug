{"sha": "fe53cacff9f1e2aaeaeea4116d99cfa24d1f460f", "node_id": "C_kwDOAAsO6NoAKGZlNTNjYWNmZjlmMWUyYWFlYWVlYTQxMTZkOTljZmEyNGQxZjQ2MGY", "commit": {"author": {"name": "Ben Reeves", "email": "benwolverine2019@gmail.com", "date": "2022-11-10T18:56:09Z"}, "committer": {"name": "Ben Reeves", "email": "benwolverine2019@gmail.com", "date": "2022-11-10T18:56:33Z"}, "message": "Apply PR feedback.", "tree": {"sha": "7a2cdb34d0746ddea367c0b50bf48371dcdc6357", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a2cdb34d0746ddea367c0b50bf48371dcdc6357"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe53cacff9f1e2aaeaeea4116d99cfa24d1f460f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe53cacff9f1e2aaeaeea4116d99cfa24d1f460f", "html_url": "https://github.com/rust-lang/rust/commit/fe53cacff9f1e2aaeaeea4116d99cfa24d1f460f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe53cacff9f1e2aaeaeea4116d99cfa24d1f460f/comments", "author": {"login": "BGR360", "id": 13339928, "node_id": "MDQ6VXNlcjEzMzM5OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/13339928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BGR360", "html_url": "https://github.com/BGR360", "followers_url": "https://api.github.com/users/BGR360/followers", "following_url": "https://api.github.com/users/BGR360/following{/other_user}", "gists_url": "https://api.github.com/users/BGR360/gists{/gist_id}", "starred_url": "https://api.github.com/users/BGR360/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BGR360/subscriptions", "organizations_url": "https://api.github.com/users/BGR360/orgs", "repos_url": "https://api.github.com/users/BGR360/repos", "events_url": "https://api.github.com/users/BGR360/events{/privacy}", "received_events_url": "https://api.github.com/users/BGR360/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BGR360", "id": 13339928, "node_id": "MDQ6VXNlcjEzMzM5OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/13339928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BGR360", "html_url": "https://github.com/BGR360", "followers_url": "https://api.github.com/users/BGR360/followers", "following_url": "https://api.github.com/users/BGR360/following{/other_user}", "gists_url": "https://api.github.com/users/BGR360/gists{/gist_id}", "starred_url": "https://api.github.com/users/BGR360/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BGR360/subscriptions", "organizations_url": "https://api.github.com/users/BGR360/orgs", "repos_url": "https://api.github.com/users/BGR360/repos", "events_url": "https://api.github.com/users/BGR360/events{/privacy}", "received_events_url": "https://api.github.com/users/BGR360/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0ae62ee955712c96dec17170d4d63fd2b34f504", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0ae62ee955712c96dec17170d4d63fd2b34f504", "html_url": "https://github.com/rust-lang/rust/commit/c0ae62ee955712c96dec17170d4d63fd2b34f504"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "55cca0cd2d7b540b2a3edad210ada95d39fc6d67", "filename": "compiler/rustc_hir_analysis/src/impl_wf_check/min_specialization.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fe53cacff9f1e2aaeaeea4116d99cfa24d1f460f/compiler%2Frustc_hir_analysis%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe53cacff9f1e2aaeaeea4116d99cfa24d1f460f/compiler%2Frustc_hir_analysis%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs?ref=fe53cacff9f1e2aaeaeea4116d99cfa24d1f460f", "patch": "@@ -426,15 +426,13 @@ fn trait_predicates_eq<'tcx>(\n     predicate2: ty::Predicate<'tcx>,\n     span: Span,\n ) -> bool {\n-    let pred1_kind = predicate1.kind().no_bound_vars();\n-    let pred2_kind = predicate2.kind().no_bound_vars();\n+    let pred1_kind = predicate1.kind().skip_binder();\n+    let pred2_kind = predicate2.kind().skip_binder();\n     let (trait_pred1, trait_pred2) = match (pred1_kind, pred2_kind) {\n-        (Some(ty::PredicateKind::Trait(pred1)), Some(ty::PredicateKind::Trait(pred2))) => {\n-            (pred1, pred2)\n-        }\n+        (ty::PredicateKind::Trait(pred1), ty::PredicateKind::Trait(pred2)) => (pred1, pred2),\n         // Just use plain syntactic equivalence if either of the predicates aren't\n         // trait predicates or have bound vars.\n-        _ => return pred1_kind == pred2_kind,\n+        _ => return predicate1 == predicate2,\n     };\n \n     let predicates_equal_modulo_constness = {\n@@ -451,10 +449,11 @@ fn trait_predicates_eq<'tcx>(\n \n     // Check that the predicate on the specializing impl is at least as const as\n     // the one on the base.\n-    if trait_pred2.constness == ty::BoundConstness::ConstIfConst\n-        && trait_pred1.constness == ty::BoundConstness::NotConst\n-    {\n-        tcx.sess.struct_span_err(span, \"missing `~const` qualifier\").emit();\n+    match (trait_pred2.constness, trait_pred1.constness) {\n+        (ty::BoundConstness::ConstIfConst, ty::BoundConstness::NotConst) => {\n+            tcx.sess.struct_span_err(span, \"missing `~const` qualifier for specialization\").emit();\n+        }\n+        _ => {}\n     }\n \n     true"}, {"sha": "4aea1979421c36d09fcbe236790bd8942cbd4b52", "filename": "src/test/ui/rfc-2632-const-trait-impl/specialization/const-default-bound-non-const-specialized-bound.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe53cacff9f1e2aaeaeea4116d99cfa24d1f460f/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fspecialization%2Fconst-default-bound-non-const-specialized-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe53cacff9f1e2aaeaeea4116d99cfa24d1f460f/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fspecialization%2Fconst-default-bound-non-const-specialized-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fspecialization%2Fconst-default-bound-non-const-specialized-bound.stderr?ref=fe53cacff9f1e2aaeaeea4116d99cfa24d1f460f", "patch": "@@ -1,4 +1,4 @@\n-error: missing `~const` qualifier\n+error: missing `~const` qualifier for specialization\n   --> $DIR/const-default-bound-non-const-specialized-bound.rs:28:8\n    |\n LL |     T: Foo,"}]}