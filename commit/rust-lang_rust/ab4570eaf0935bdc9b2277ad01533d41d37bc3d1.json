{"sha": "ab4570eaf0935bdc9b2277ad01533d41d37bc3d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiNDU3MGVhZjA5MzViZGM5YjIyNzdhZDAxNTMzZDQxZDM3YmMzZDE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-07-31T23:02:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-31T23:02:04Z"}, "message": "Rollup merge of #74644 - crlf0710:drop_old_stuff, r=Amanieu\n\nRemove `linked_list_extras` methods.\n\nRemoving these in favor of the `Cursor` API in https://github.com/rust-lang/rust/issues/58533 .\nCloses #27794.\n\nr? @Amanieu", "tree": {"sha": "da1a34a8e1d0e10d0ff9bce4d480f00bca1b3328", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da1a34a8e1d0e10d0ff9bce4d480f00bca1b3328"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab4570eaf0935bdc9b2277ad01533d41d37bc3d1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfJKLsCRBK7hj4Ov3rIwAAdHIIAC53P15w5HQOIENOswVHERAL\nr77rnCDQPu0Rn5YrK9QGRWOXc7sY/+PeEdJ7c41+MZ6LINFpkxGwhYNKFxoPKcqx\nOEUd8T9nevJzg/s1v2f7+n66H5xH+bSxFY9LqG91kMlt7sbWpwx/806A3wVkjH6C\nruy0W5YtXlItGzvQBOvfqrr6ckFL7U/LS8uvibVyF3F/LLOAYnNN7OWa4XOvLaBC\n7p1F99G66NQBJYnggV7g6/PmdwPUNSDTG9OUQZeCb2XCByyJ7CxI83oHppJsyU49\n4LXONeMqwTG8SXtSutWlbbsJ/S/wn5xyzm0qcaZerfL5jdiqRA8RpvgdwzDU2pE=\n=zmBE\n-----END PGP SIGNATURE-----\n", "payload": "tree da1a34a8e1d0e10d0ff9bce4d480f00bca1b3328\nparent 6e87bacd37539b7e7cd75152dffd225047fa983a\nparent dc21178830a0ae6e70101ffff8ef4843990cd902\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1596236524 +0900\ncommitter GitHub <noreply@github.com> 1596236524 +0900\n\nRollup merge of #74644 - crlf0710:drop_old_stuff, r=Amanieu\n\nRemove `linked_list_extras` methods.\n\nRemoving these in favor of the `Cursor` API in https://github.com/rust-lang/rust/issues/58533 .\nCloses #27794.\n\nr? @Amanieu\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab4570eaf0935bdc9b2277ad01533d41d37bc3d1", "html_url": "https://github.com/rust-lang/rust/commit/ab4570eaf0935bdc9b2277ad01533d41d37bc3d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab4570eaf0935bdc9b2277ad01533d41d37bc3d1/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e87bacd37539b7e7cd75152dffd225047fa983a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e87bacd37539b7e7cd75152dffd225047fa983a", "html_url": "https://github.com/rust-lang/rust/commit/6e87bacd37539b7e7cd75152dffd225047fa983a"}, {"sha": "dc21178830a0ae6e70101ffff8ef4843990cd902", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc21178830a0ae6e70101ffff8ef4843990cd902", "html_url": "https://github.com/rust-lang/rust/commit/dc21178830a0ae6e70101ffff8ef4843990cd902"}], "stats": {"total": 72, "additions": 10, "deletions": 62}, "files": [{"sha": "02a746f0e24880893ff89f1983bada892057ae41", "filename": "library/alloc/src/collections/linked_list.rs", "status": "modified", "additions": 10, "deletions": 35, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/ab4570eaf0935bdc9b2277ad01533d41d37bc3d1/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab4570eaf0935bdc9b2277ad01533d41d37bc3d1/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs?ref=ab4570eaf0935bdc9b2277ad01533d41d37bc3d1", "patch": "@@ -1110,32 +1110,17 @@ impl<T> IterMut<'_, T> {\n     /// Inserts the given element just after the element most recently returned by `.next()`.\n     /// The inserted element does not appear in the iteration.\n     ///\n-    /// # Examples\n-    ///\n-    /// ```\n-    /// #![feature(linked_list_extras)]\n-    ///\n-    /// use std::collections::LinkedList;\n-    ///\n-    /// let mut list: LinkedList<_> = vec![1, 3, 4].into_iter().collect();\n-    ///\n-    /// {\n-    ///     let mut it = list.iter_mut();\n-    ///     assert_eq!(it.next().unwrap(), &1);\n-    ///     // insert `2` after `1`\n-    ///     it.insert_next(2);\n-    /// }\n-    /// {\n-    ///     let vec: Vec<_> = list.into_iter().collect();\n-    ///     assert_eq!(vec, [1, 2, 3, 4]);\n-    /// }\n-    /// ```\n+    /// This method will be removed soon.\n     #[inline]\n     #[unstable(\n         feature = \"linked_list_extras\",\n         reason = \"this is probably better handled by a cursor type -- we'll see\",\n         issue = \"27794\"\n     )]\n+    #[rustc_deprecated(\n+        reason = \"Deprecated in favor of CursorMut methods. This method will be removed soon.\",\n+        since = \"1.47.0\"\n+    )]\n     pub fn insert_next(&mut self, element: T) {\n         match self.head {\n             // `push_back` is okay with aliasing `element` references\n@@ -1163,27 +1148,17 @@ impl<T> IterMut<'_, T> {\n \n     /// Provides a reference to the next element, without changing the iterator.\n     ///\n-    /// # Examples\n-    ///\n-    /// ```\n-    /// #![feature(linked_list_extras)]\n-    ///\n-    /// use std::collections::LinkedList;\n-    ///\n-    /// let mut list: LinkedList<_> = vec![1, 2, 3].into_iter().collect();\n-    ///\n-    /// let mut it = list.iter_mut();\n-    /// assert_eq!(it.next().unwrap(), &1);\n-    /// assert_eq!(it.peek_next().unwrap(), &2);\n-    /// // We just peeked at 2, so it was not consumed from the iterator.\n-    /// assert_eq!(it.next().unwrap(), &2);\n-    /// ```\n+    /// This method will be removed soon.\n     #[inline]\n     #[unstable(\n         feature = \"linked_list_extras\",\n         reason = \"this is probably better handled by a cursor type -- we'll see\",\n         issue = \"27794\"\n     )]\n+    #[rustc_deprecated(\n+        reason = \"Deprecated in favor of CursorMut methods. This method will be removed soon.\",\n+        since = \"1.47.0\"\n+    )]\n     pub fn peek_next(&mut self) -> Option<&mut T> {\n         if self.len == 0 {\n             None"}, {"sha": "ad643a7bdf1941ad15e2c65dca218cf8e0f80a9f", "filename": "library/alloc/src/collections/linked_list/tests.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ab4570eaf0935bdc9b2277ad01533d41d37bc3d1/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab4570eaf0935bdc9b2277ad01533d41d37bc3d1/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list%2Ftests.rs?ref=ab4570eaf0935bdc9b2277ad01533d41d37bc3d1", "patch": "@@ -153,33 +153,6 @@ fn test_clone_from() {\n     }\n }\n \n-#[test]\n-fn test_insert_prev() {\n-    let mut m = list_from(&[0, 2, 4, 6, 8]);\n-    let len = m.len();\n-    {\n-        let mut it = m.iter_mut();\n-        it.insert_next(-2);\n-        loop {\n-            match it.next() {\n-                None => break,\n-                Some(elt) => {\n-                    it.insert_next(*elt + 1);\n-                    match it.peek_next() {\n-                        Some(x) => assert_eq!(*x, *elt + 2),\n-                        None => assert_eq!(8, *elt),\n-                    }\n-                }\n-            }\n-        }\n-        it.insert_next(0);\n-        it.insert_next(1);\n-    }\n-    check_links(&m);\n-    assert_eq!(m.len(), 3 + len * 2);\n-    assert_eq!(m.into_iter().collect::<Vec<_>>(), [-2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1]);\n-}\n-\n #[test]\n #[cfg_attr(target_os = \"emscripten\", ignore)]\n fn test_send() {"}]}