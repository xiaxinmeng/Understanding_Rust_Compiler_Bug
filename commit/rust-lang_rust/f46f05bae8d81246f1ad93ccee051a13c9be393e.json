{"sha": "f46f05bae8d81246f1ad93ccee051a13c9be393e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NmYwNWJhZThkODEyNDZmMWFkOTNjY2VlMDUxYTEzYzliZTM5M2U=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-06-29T07:02:38Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-07-02T03:03:31Z"}, "message": "Make `BTreeMap::clone()` not allocate when cloning an empty tree.", "tree": {"sha": "4d3f7645c7a5ee3bfaebb31c80e48c62d43224f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d3f7645c7a5ee3bfaebb31c80e48c62d43224f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f46f05bae8d81246f1ad93ccee051a13c9be393e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f46f05bae8d81246f1ad93ccee051a13c9be393e", "html_url": "https://github.com/rust-lang/rust/commit/f46f05bae8d81246f1ad93ccee051a13c9be393e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f46f05bae8d81246f1ad93ccee051a13c9be393e/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2be769fd50403a07c45677f8f285491c8e90d74", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2be769fd50403a07c45677f8f285491c8e90d74", "html_url": "https://github.com/rust-lang/rust/commit/a2be769fd50403a07c45677f8f285491c8e90d74"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "2aad3149bb2110556729dc2b0e57f77e1f669738", "filename": "src/liballoc/collections/btree/map.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f46f05bae8d81246f1ad93ccee051a13c9be393e/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f46f05bae8d81246f1ad93ccee051a13c9be393e/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs?ref=f46f05bae8d81246f1ad93ccee051a13c9be393e", "patch": "@@ -213,7 +213,16 @@ impl<K: Clone, V: Clone> Clone for BTreeMap<K, V> {\n             }\n         }\n \n-        clone_subtree(self.root.as_ref())\n+        if self.len() == 0 {\n+            // Ideally we'd call `BTreeMap::new` here, but that has the `K:\n+            // Ord` constraint, which this method lacks.\n+            BTreeMap {\n+                root: node::Root::shared_empty_root(),\n+                length: 0,\n+            }\n+        } else {\n+            clone_subtree(self.root.as_ref())\n+        }\n     }\n }\n "}]}