{"sha": "a7e4794c2effd128a223ce3df0816637ac0a8d7c", "node_id": "C_kwDOAAsO6NoAKGE3ZTQ3OTRjMmVmZmQxMjhhMjIzY2UzZGYwODE2NjM3YWMwYThkN2M", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-08-27T22:38:01Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-08-27T22:38:01Z"}, "message": "Fix handling of rust_eh_personality in reachable_non_generics", "tree": {"sha": "916b15bfd12cc9c0519b38fdb815742aecfca906", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/916b15bfd12cc9c0519b38fdb815742aecfca906"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7e4794c2effd128a223ce3df0816637ac0a8d7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7e4794c2effd128a223ce3df0816637ac0a8d7c", "html_url": "https://github.com/rust-lang/rust/commit/a7e4794c2effd128a223ce3df0816637ac0a8d7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7e4794c2effd128a223ce3df0816637ac0a8d7c/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8c81485d85c4f60659e5d0a059db76c3efbee34", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8c81485d85c4f60659e5d0a059db76c3efbee34", "html_url": "https://github.com/rust-lang/rust/commit/d8c81485d85c4f60659e5d0a059db76c3efbee34"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "32b340832ce289625a283503b9bdf090c2a608c6", "filename": "compiler/rustc_codegen_ssa/src/back/symbol_export.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a7e4794c2effd128a223ce3df0816637ac0a8d7c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7e4794c2effd128a223ce3df0816637ac0a8d7c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs?ref=a7e4794c2effd128a223ce3df0816637ac0a8d7c", "patch": "@@ -103,18 +103,14 @@ fn reachable_non_generics_provider(tcx: TyCtxt<'_>, cnum: CrateNum) -> DefIdMap<\n             }\n         })\n         .map(|def_id| {\n-            let (export_level, used) = if special_runtime_crate {\n-                let name = tcx.symbol_name(Instance::mono(tcx, def_id.to_def_id())).name;\n-                // We won't link right if these symbols are stripped during LTO.\n-                let used = match name {\n-                    \"rust_eh_personality\"\n-                    | \"rust_eh_register_frames\"\n-                    | \"rust_eh_unregister_frames\" => true,\n-                    _ => false,\n-                };\n-                (SymbolExportLevel::Rust, used)\n+            // We won't link right if this symbol is stripped during LTO.\n+            let name = tcx.symbol_name(Instance::mono(tcx, def_id.to_def_id())).name;\n+            let used = name == \"rust_eh_personality\";\n+\n+            let export_level = if special_runtime_crate {\n+                SymbolExportLevel::Rust\n             } else {\n-                (symbol_export_level(tcx, def_id.to_def_id()), false)\n+                symbol_export_level(tcx, def_id.to_def_id())\n             };\n             let codegen_attrs = tcx.codegen_fn_attrs(def_id.to_def_id());\n             debug!("}]}