{"sha": "a664ce7789a54006cc6c01d8aefbfa4477c9d618", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2NjRjZTc3ODlhNTQwMDZjYzZjMDFkOGFlZmJmYTQ0NzdjOWQ2MTg=", "commit": {"author": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-06-07T19:13:13Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-06-07T19:13:13Z"}, "message": "Remove unnecessary lifetime parameter", "tree": {"sha": "e7599f5f547c40b27cf8b3ef0d57379769f977ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7599f5f547c40b27cf8b3ef0d57379769f977ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a664ce7789a54006cc6c01d8aefbfa4477c9d618", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a664ce7789a54006cc6c01d8aefbfa4477c9d618", "html_url": "https://github.com/rust-lang/rust/commit/a664ce7789a54006cc6c01d8aefbfa4477c9d618", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a664ce7789a54006cc6c01d8aefbfa4477c9d618/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebfc1da07d2cd1cba87a3df79c5ffbfc0d25618c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebfc1da07d2cd1cba87a3df79c5ffbfc0d25618c", "html_url": "https://github.com/rust-lang/rust/commit/ebfc1da07d2cd1cba87a3df79c5ffbfc0d25618c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "52e540d4e00dbeca87b1c5110de9537565650c86", "filename": "clippy_lints/src/ranges.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a664ce7789a54006cc6c01d8aefbfa4477c9d618/clippy_lints%2Fsrc%2Franges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a664ce7789a54006cc6c01d8aefbfa4477c9d618/clippy_lints%2Fsrc%2Franges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Franges.rs?ref=a664ce7789a54006cc6c01d8aefbfa4477c9d618", "patch": "@@ -241,7 +241,7 @@ fn check_inclusive_range_minus_one(cx: &LateContext<'_, '_>, expr: &Expr<'_>) {\n }\n \n fn check_reversed_empty_range(cx: &LateContext<'_, '_>, expr: &Expr<'_>) {\n-    fn inside_indexing_expr<'a>(cx: &'a LateContext<'_, '_>, expr: &Expr<'_>) -> bool {\n+    fn inside_indexing_expr(cx: &LateContext<'_, '_>, expr: &Expr<'_>) -> bool {\n         matches!(\n             get_parent_expr(cx, expr),\n             Some(Expr {"}]}