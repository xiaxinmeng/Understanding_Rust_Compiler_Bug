{"sha": "45683187ea6887fd5ceab631b4534ed79e7f8397", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NjgzMTg3ZWE2ODg3ZmQ1Y2VhYjYzMWI0NTM0ZWQ3OWU3ZjgzOTc=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2016-10-19T05:00:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-19T05:00:01Z"}, "message": "Rollup merge of #37202 - petrochenkov:pretty, r=nrc\n\nFix some pretty printing tests\n\nMany pretty-printing tests are un-ignored.\nSome issues in classification of comments (trailing/isolated) and blank line counting are fixed.\nSome comments are printed more carefully.\nSome minor refactoring in pprust.rs\n`no-pretty-expanded` annotations are removed because this is the default now.\n`pretty-expanded` annotations are removed from compile-fail tests, they are not tested with pretty-printer.\n\nCloses https://github.com/rust-lang/rust/issues/23623 in favor of more specific https://github.com/rust-lang/rust/issues/37201 and https://github.com/rust-lang/rust/issues/37199\nr? @nrc", "tree": {"sha": "7485781ab690b178da12d398c0a13495bbee1552", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7485781ab690b178da12d398c0a13495bbee1552"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45683187ea6887fd5ceab631b4534ed79e7f8397", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45683187ea6887fd5ceab631b4534ed79e7f8397", "html_url": "https://github.com/rust-lang/rust/commit/45683187ea6887fd5ceab631b4534ed79e7f8397", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45683187ea6887fd5ceab631b4534ed79e7f8397/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6788d0ba81538c17e4bb0041163c2d4d1ceb86d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6788d0ba81538c17e4bb0041163c2d4d1ceb86d", "html_url": "https://github.com/rust-lang/rust/commit/a6788d0ba81538c17e4bb0041163c2d4d1ceb86d"}, {"sha": "4a91a80b26afb23c0f33162acc52605cb9130b3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a91a80b26afb23c0f33162acc52605cb9130b3e", "html_url": "https://github.com/rust-lang/rust/commit/4a91a80b26afb23c0f33162acc52605cb9130b3e"}], "stats": {"total": 297, "additions": 72, "deletions": 225}, "files": [{"sha": "ba83a55ea7937c1321baf60568cbf729b24b9b91", "filename": "src/libsyntax/parse/lexer/comments.rs", "status": "modified", "additions": 30, "deletions": 16, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Flibsyntax%2Fparse%2Flexer%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Flibsyntax%2Fparse%2Flexer%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fcomments.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -24,7 +24,7 @@ use str::char_at;\n use std::io::Read;\n use std::usize;\n \n-#[derive(Clone, Copy, PartialEq)]\n+#[derive(Clone, Copy, PartialEq, Debug)]\n pub enum CommentStyle {\n     /// No code on either side of each line of the comment\n     Isolated,\n@@ -155,14 +155,13 @@ fn push_blank_line_comment(rdr: &StringReader, comments: &mut Vec<Comment>) {\n \n fn consume_whitespace_counting_blank_lines(rdr: &mut StringReader, comments: &mut Vec<Comment>) {\n     while is_pattern_whitespace(rdr.ch) && !rdr.is_eof() {\n-        if rdr.col == CharPos(0) && rdr.ch_is('\\n') {\n+        if rdr.ch_is('\\n') {\n             push_blank_line_comment(rdr, &mut *comments);\n         }\n         rdr.bump();\n     }\n }\n \n-\n fn read_shebang_comment(rdr: &mut StringReader,\n                         code_to_the_left: bool,\n                         comments: &mut Vec<Comment>) {\n@@ -317,14 +316,22 @@ fn read_block_comment(rdr: &mut StringReader,\n }\n \n \n-fn consume_comment(rdr: &mut StringReader, code_to_the_left: bool, comments: &mut Vec<Comment>) {\n+fn consume_comment(rdr: &mut StringReader,\n+                   comments: &mut Vec<Comment>,\n+                   code_to_the_left: &mut bool,\n+                   anything_to_the_left: &mut bool) {\n     debug!(\">>> consume comment\");\n     if rdr.ch_is('/') && rdr.nextch_is('/') {\n-        read_line_comments(rdr, code_to_the_left, comments);\n+        read_line_comments(rdr, *code_to_the_left, comments);\n+        *code_to_the_left = false;\n+        *anything_to_the_left = false;\n     } else if rdr.ch_is('/') && rdr.nextch_is('*') {\n-        read_block_comment(rdr, code_to_the_left, comments);\n+        read_block_comment(rdr, *code_to_the_left, comments);\n+        *anything_to_the_left = true;\n     } else if rdr.ch_is('#') && rdr.nextch_is('!') {\n-        read_shebang_comment(rdr, code_to_the_left, comments);\n+        read_shebang_comment(rdr, *code_to_the_left, comments);\n+        *code_to_the_left = false;\n+        *anything_to_the_left = false;\n     } else {\n         panic!();\n     }\n@@ -352,23 +359,29 @@ pub fn gather_comments_and_literals(span_diagnostic: &errors::Handler,\n \n     let mut comments: Vec<Comment> = Vec::new();\n     let mut literals: Vec<Literal> = Vec::new();\n-    let mut first_read: bool = true;\n+    let mut code_to_the_left = false; // Only code\n+    let mut anything_to_the_left = false; // Code or comments\n     while !rdr.is_eof() {\n         loop {\n-            let mut code_to_the_left = !first_read;\n+            // Eat all the whitespace and count blank lines.\n             rdr.consume_non_eol_whitespace();\n             if rdr.ch_is('\\n') {\n-                code_to_the_left = false;\n+                if anything_to_the_left {\n+                    rdr.bump(); // The line is not blank, do not count.\n+                }\n                 consume_whitespace_counting_blank_lines(&mut rdr, &mut comments);\n+                code_to_the_left = false;\n+                anything_to_the_left = false;\n             }\n-            while rdr.peeking_at_comment() {\n-                consume_comment(&mut rdr, code_to_the_left, &mut comments);\n-                consume_whitespace_counting_blank_lines(&mut rdr, &mut comments);\n+            // Eat one comment group\n+            if rdr.peeking_at_comment() {\n+                consume_comment(&mut rdr, &mut comments,\n+                                &mut code_to_the_left, &mut anything_to_the_left);\n+            } else {\n+                break\n             }\n-            break;\n         }\n \n-\n         let bstart = rdr.pos;\n         rdr.next_token();\n         // discard, and look ahead; we're working with internal state\n@@ -384,7 +397,8 @@ pub fn gather_comments_and_literals(span_diagnostic: &errors::Handler,\n         } else {\n             debug!(\"tok: {}\", pprust::token_to_string(&tok));\n         }\n-        first_read = false;\n+        code_to_the_left = true;\n+        anything_to_the_left = true;\n     }\n \n     (comments, literals)"}, {"sha": "89834da28219cab33f7e5f527e46a2f4722f5c4a", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 15, "deletions": 18, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -545,15 +545,12 @@ pub trait PrintState<'a> {\n     }\n \n     fn maybe_print_comment(&mut self, pos: BytePos) -> io::Result<()> {\n-        loop {\n-            match self.next_comment() {\n-                Some(ref cmnt) => {\n-                    if (*cmnt).pos < pos {\n-                        try!(self.print_comment(cmnt));\n-                        self.cur_cmnt_and_lit().cur_cmnt += 1;\n-                    } else { break; }\n-                }\n-                _ => break\n+        while let Some(ref cmnt) = self.next_comment() {\n+            if cmnt.pos < pos {\n+                try!(self.print_comment(cmnt));\n+                self.cur_cmnt_and_lit().cur_cmnt += 1;\n+            } else {\n+                break\n             }\n         }\n         Ok(())\n@@ -581,7 +578,9 @@ pub trait PrintState<'a> {\n                 Ok(())\n             }\n             comments::Trailing => {\n-                try!(word(self.writer(), \" \"));\n+                if !self.is_bol() {\n+                    try!(word(self.writer(), \" \"));\n+                }\n                 if cmnt.lines.len() == 1 {\n                     try!(word(self.writer(), &cmnt.lines[0]));\n                     hardbreak(self.writer())\n@@ -1716,6 +1715,7 @@ impl<'a> State<'a> {\n         for (i, st) in blk.stmts.iter().enumerate() {\n             match st.node {\n                 ast::StmtKind::Expr(ref expr) if i == blk.stmts.len() - 1 => {\n+                    try!(self.maybe_print_comment(st.span.lo));\n                     try!(self.space_if_not_bol());\n                     try!(self.print_expr_outer_attr_style(&expr, false));\n                     try!(self.maybe_print_trailing_comment(expr.span, Some(blk.span.hi)));\n@@ -2605,6 +2605,7 @@ impl<'a> State<'a> {\n         }\n         try!(self.cbox(INDENT_UNIT));\n         try!(self.ibox(0));\n+        try!(self.maybe_print_comment(arm.pats[0].span.lo));\n         try!(self.print_outer_attributes(&arm.attrs));\n         let mut first = true;\n         for p in &arm.pats {\n@@ -3010,15 +3011,11 @@ impl<'a> State<'a> {\n             _ => return Ok(())\n         };\n         if let Some(ref cmnt) = self.next_comment() {\n-            if (*cmnt).style != comments::Trailing { return Ok(()) }\n+            if cmnt.style != comments::Trailing { return Ok(()) }\n             let span_line = cm.lookup_char_pos(span.hi);\n-            let comment_line = cm.lookup_char_pos((*cmnt).pos);\n-            let mut next = (*cmnt).pos + BytePos(1);\n-            if let Some(p) = next_pos {\n-                next = p;\n-            }\n-            if span.hi < (*cmnt).pos && (*cmnt).pos < next &&\n-               span_line.line == comment_line.line {\n+            let comment_line = cm.lookup_char_pos(cmnt.pos);\n+            let next = next_pos.unwrap_or(cmnt.pos + BytePos(1));\n+            if span.hi < cmnt.pos && cmnt.pos < next && span_line.line == comment_line.line {\n                 self.print_comment(cmnt)?;\n                 self.cur_cmnt_and_lit.cur_cmnt += 1;\n             }"}, {"sha": "3f429bbd4b63473016bd91ff94b29bcce3fa119e", "filename": "src/test/compile-fail/borrowck/borrowck-use-uninitialized-in-cast.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-use-uninitialized-in-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-use-uninitialized-in-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-use-uninitialized-in-cast.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -12,8 +12,6 @@\n // The problem was specified to casting to `*`, as creating unsafe\n // pointers was not being fully checked. Issue #20791.\n \n-// pretty-expanded FIXME #23616\n-\n fn main() {\n     let x: &i32;\n     let y = x as *const i32; //~ ERROR use of possibly uninitialized variable: `*x`"}, {"sha": "86ae5b44d9db02bc9326827268d255d6fce7dbc2", "filename": "src/test/compile-fail/coherence-cow.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fcoherence-cow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fcoherence-cow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoherence-cow.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -12,8 +12,6 @@\n \n // aux-build:coherence_lib.rs\n \n-// pretty-expanded FIXME #23616\n-\n // Test that the `Pair` type reports an error if it contains type\n // parameters, even when they are covered by local types. This test\n // was originally intended to test the opposite, but the rules changed"}, {"sha": "196c2f4ee3cd345feb5d022c599b6e0305d289a3", "filename": "src/test/compile-fail/coherence-vec-local-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fcoherence-vec-local-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fcoherence-vec-local-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoherence-vec-local-2.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -13,8 +13,6 @@\n \n // aux-build:coherence_lib.rs\n \n-// pretty-expanded FIXME #23616\n-\n extern crate coherence_lib as lib;\n use lib::Remote;\n "}, {"sha": "49822dcfcb3f0e049d3308c6bea7e3e5063df540", "filename": "src/test/compile-fail/coherence-vec-local.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fcoherence-vec-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fcoherence-vec-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoherence-vec-local.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -13,8 +13,6 @@\n \n // aux-build:coherence_lib.rs\n \n-// pretty-expanded FIXME #23616\n-\n extern crate coherence_lib as lib;\n use lib::Remote;\n "}, {"sha": "0c446f5fe47031644cf5404e49a9f7a1609044ed", "filename": "src/test/compile-fail/issue-13352.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fissue-13352.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fissue-13352.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-13352.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// pretty-expanded FIXME #23616\n-\n fn foo(_: Box<FnMut()>) {}\n \n fn main() {"}, {"sha": "b54f008f8ce3abfa986a0e47cfa4e4f7114c3f60", "filename": "src/test/compile-fail/issue-19482.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fissue-19482.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fissue-19482.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-19482.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -11,8 +11,6 @@\n // Test that a partially specified trait object with unspecified associated\n // type does not type-check.\n \n-// pretty-expanded FIXME #23616\n-\n trait Foo {\n     type A;\n "}, {"sha": "bd70879d13e5fe0cae7328197603f1d094c068ac", "filename": "src/test/compile-fail/meta-expected-error-correct-rev.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fmeta-expected-error-correct-rev.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fmeta-expected-error-correct-rev.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmeta-expected-error-correct-rev.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // revisions: a\n-// pretty-expanded FIXME #23616\n \n // Counterpart to `meta-expected-error-wrong-rev.rs`\n "}, {"sha": "3c13050812c9326369dfbbc01063c2ec3b8a375f", "filename": "src/test/compile-fail/meta-expected-error-wrong-rev.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fmeta-expected-error-wrong-rev.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fmeta-expected-error-wrong-rev.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmeta-expected-error-wrong-rev.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -10,7 +10,6 @@\n \n // revisions: a\n // should-fail\n-// pretty-expanded FIXME #23616\n \n // This is a \"meta-test\" of the compilertest framework itself.  In\n // particular, it includes the right error message, but the message"}, {"sha": "98301ef1a0a1dea0701e0b6cf051b9d625189f82", "filename": "src/test/compile-fail/object-lifetime-default-from-rptr-box-error.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fobject-lifetime-default-from-rptr-box-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fobject-lifetime-default-from-rptr-box-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobject-lifetime-default-from-rptr-box-error.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -11,8 +11,6 @@\n // Test that the lifetime from the enclosing `&` is \"inherited\"\n // through the `Box` struct.\n \n-// pretty-expanded FIXME #23616\n-\n #![allow(dead_code)]\n \n trait Test {"}, {"sha": "836e4fa114263541e435bff1e182c54bea274755", "filename": "src/test/compile-fail/object-lifetime-default-from-rptr-struct-error.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fobject-lifetime-default-from-rptr-struct-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fobject-lifetime-default-from-rptr-struct-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobject-lifetime-default-from-rptr-struct-error.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -11,8 +11,6 @@\n // Test that the lifetime from the enclosing `&` is \"inherited\"\n // through the `MyBox` struct.\n \n-// pretty-expanded FIXME #23616\n-\n #![allow(dead_code)]\n #![feature(rustc_error)]\n "}, {"sha": "2d78940ce4b9d195d18ed24112b54acae7a0b6a2", "filename": "src/test/compile-fail/variance-trait-matching.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fvariance-trait-matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fcompile-fail%2Fvariance-trait-matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariance-trait-matching.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// pretty-expanded FIXME #23616\n-\n #![allow(dead_code)]\n \n // Get<T> is covariant in T"}, {"sha": "32837fbcf87bc39cede7ce28c31c8dd26e298beb", "filename": "src/test/pretty/for-comment.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fpretty%2Ffor-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Fpretty%2Ffor-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Ffor-comment.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -17,6 +17,5 @@ fn f(v: &[isize]) -> isize {\n     for e in v {\n         n = *e; // This comment once triggered pretty printer bug\n     }\n-\n     n\n }"}, {"sha": "1f9e069526ce9b28d07452f26782ab84098561d0", "filename": "src/test/run-fail/divide-by-zero.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Fdivide-by-zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Fdivide-by-zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fdivide-by-zero.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // error-pattern:attempt to divide by zero\n \n fn main() {"}, {"sha": "a7ba283b25af37181e6f9a20eebade64735fab9e", "filename": "src/test/run-fail/glob-use-std.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Fglob-use-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Fglob-use-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fglob-use-std.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -10,10 +10,6 @@\n \n // Issue #7580\n \n-// ignore-pretty\n-//\n-// Expanded pretty printing causes resolve conflicts.\n-\n // error-pattern:panic works\n \n use std::*;"}, {"sha": "641d39e2324b8a509aa4e2d7c39c61a9724cb17e", "filename": "src/test/run-fail/mod-zero.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Fmod-zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Fmod-zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmod-zero.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // error-pattern:attempt to calculate the remainder with a divisor of zero\n \n fn main() {"}, {"sha": "250f0726dc9d61d0e83f547e0e40e58e2b94a0f4", "filename": "src/test/run-fail/overflowing-add.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-add.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,12 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // error-pattern:thread 'main' panicked at 'attempt to add with overflow'\n // compile-flags: -C debug-assertions\n \n-\n fn main() {\n     let _x = 200u8 + 200u8 + 200u8;\n }"}, {"sha": "baa1e05d559b6d2aed7535db85f265f5ecc0e3a2", "filename": "src/test/run-fail/overflowing-lsh-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-lsh-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-lsh-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-lsh-1.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // error-pattern:thread 'main' panicked at 'attempt to shift left with overflow'\n // compile-flags: -C debug-assertions\n "}, {"sha": "3438ed2c77c1835c22c45833a7a8e2eb4276cd28", "filename": "src/test/run-fail/overflowing-lsh-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-lsh-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-lsh-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-lsh-2.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // error-pattern:thread 'main' panicked at 'attempt to shift left with overflow'\n // compile-flags: -C debug-assertions\n "}, {"sha": "ef5c43db6e285f30b5026a45fd6c7463f58f9cf3", "filename": "src/test/run-fail/overflowing-lsh-3.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-lsh-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-lsh-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-lsh-3.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // error-pattern:thread 'main' panicked at 'attempt to shift left with overflow'\n // compile-flags: -C debug-assertions\n "}, {"sha": "226ece6020db4e862d7e0b6e705fe191633dc8e0", "filename": "src/test/run-fail/overflowing-lsh-4.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-lsh-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-lsh-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-lsh-4.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // error-pattern:thread 'main' panicked at 'attempt to shift left with overflow'\n // compile-flags: -C debug-assertions\n "}, {"sha": "b47d0fc4136ccaf316f07f26bc0bdc71364c7ef6", "filename": "src/test/run-fail/overflowing-mul.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-mul.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-mul.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-mul.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // error-pattern:thread 'main' panicked at 'attempt to multiply with overflow'\n // compile-flags: -C debug-assertions\n "}, {"sha": "836d7e37319e941dcbda0ecbf1a6a7794f8d3cfc", "filename": "src/test/run-fail/overflowing-neg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-neg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-neg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-neg.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // error-pattern:thread 'main' panicked at 'attempt to negate with overflow'\n // compile-flags: -C debug-assertions\n "}, {"sha": "8f198c887e491c9dcd32084fc0de8d86eefa7f6c", "filename": "src/test/run-fail/overflowing-rsh-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-rsh-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-rsh-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-rsh-1.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // error-pattern:thread 'main' panicked at 'attempt to shift right with overflow'\n // compile-flags: -C debug-assertions\n "}, {"sha": "e4f260b2bbbbb130ff6f3065796b6e21e20f031d", "filename": "src/test/run-fail/overflowing-rsh-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-rsh-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-rsh-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-rsh-2.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // error-pattern:thread 'main' panicked at 'attempt to shift right with overflow'\n // compile-flags: -C debug-assertions\n "}, {"sha": "11aa98a0c3cbc1d3f210cc120fdfcb63901f3ddc", "filename": "src/test/run-fail/overflowing-rsh-3.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-rsh-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-rsh-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-rsh-3.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // error-pattern:thread 'main' panicked at 'attempt to shift right with overflow'\n // compile-flags: -C debug-assertions\n "}, {"sha": "742720e83c10cac96ff464efe0d7331a2353beaa", "filename": "src/test/run-fail/overflowing-rsh-4.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-rsh-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-rsh-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-rsh-4.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // error-pattern:thread 'main' panicked at 'attempt to shift right with overflow'\n // compile-flags: -C debug-assertions\n "}, {"sha": "6106fdcb16a46076c8d267480b596b9cf61d34a7", "filename": "src/test/run-fail/overflowing-rsh-5.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-rsh-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-rsh-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-rsh-5.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // error-pattern:thread 'main' panicked at 'attempt to shift right with overflow'\n // compile-flags: -C debug-assertions\n "}, {"sha": "d419550fcc5700547bac8c3adf106e46922d1404", "filename": "src/test/run-fail/overflowing-rsh-6.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-rsh-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-rsh-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-rsh-6.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // error-pattern:thread 'main' panicked at 'attempt to shift right with overflow'\n // compile-flags: -C debug-assertions\n "}, {"sha": "f94cb31b16884cab216e40a23652d47dad572e27", "filename": "src/test/run-fail/overflowing-sub.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-sub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Foverflowing-sub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-sub.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // error-pattern:thread 'main' panicked at 'attempt to subtract with overflow'\n // compile-flags: -C debug-assertions\n "}, {"sha": "3f75229948df0782c03cdb6a0163efe8c6206d5d", "filename": "src/test/run-fail/run-unexported-tests.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Frun-unexported-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Frun-unexported-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frun-unexported-tests.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -11,7 +11,6 @@\n // error-pattern:runned an unexported test\n // compile-flags:--test\n // check-stdout\n-// ignore-pretty: does not work well with `--test`\n \n mod m {\n     pub fn exported() {}"}, {"sha": "bb6f4abe1fc969d4428f85da4fddb4b9972c2003", "filename": "src/test/run-fail/test-panic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Ftest-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Ftest-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftest-panic.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -11,7 +11,6 @@\n // check-stdout\n // error-pattern:thread 'test_foo' panicked at\n // compile-flags: --test\n-// ignore-pretty: does not work well with `--test`\n // ignore-emscripten\n \n #[test]"}, {"sha": "eac9813f180aee53478f590ba79c00383d8080e8", "filename": "src/test/run-fail/test-should-fail-bad-message.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Ftest-should-fail-bad-message.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Ftest-should-fail-bad-message.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftest-should-fail-bad-message.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -11,7 +11,6 @@\n // check-stdout\n // error-pattern:thread 'test_foo' panicked at\n // compile-flags: --test\n-// ignore-pretty: does not work well with `--test`\n // ignore-emscripten\n \n #[test]"}, {"sha": "fcf3559e7da66b3258471c877870ce225a212baa", "filename": "src/test/run-fail/test-tasks-invalid-value.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Ftest-tasks-invalid-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-fail%2Ftest-tasks-invalid-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftest-tasks-invalid-value.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -14,7 +14,6 @@\n // error-pattern:should be a positive integer\n // compile-flags: --test\n // exec-env:RUST_TEST_THREADS=foo\n-// ignore-pretty: does not work well with `--test`\n // ignore-emscripten\n \n #[test]"}, {"sha": "47f5f8397d1c54cfda8179ae1cc6d08e77949b3e", "filename": "src/test/run-pass-fulldeps/custom-derive-partial-eq.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-fulldeps%2Fcustom-derive-partial-eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-fulldeps%2Fcustom-derive-partial-eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fcustom-derive-partial-eq.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -10,8 +10,6 @@\n \n // aux-build:custom_derive_partial_eq.rs\n // ignore-stage1\n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n #![feature(plugin, custom_derive)]\n #![plugin(custom_derive_partial_eq)]\n #![allow(unused)]"}, {"sha": "3ab7f8429e60177f41d3b0bf589902b458c7d962", "filename": "src/test/run-pass-fulldeps/issue-16992.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-fulldeps%2Fissue-16992.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-fulldeps%2Fissue-16992.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-16992.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n // ignore-cross-compile\n \n #![feature(quote, rustc_private)]"}, {"sha": "03311d76e46d43619f6c3a1731bcbbf68eb1e68c", "filename": "src/test/run-pass-fulldeps/issue-18763-quote-token-tree.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-fulldeps%2Fissue-18763-quote-token-tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-fulldeps%2Fissue-18763-quote-token-tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-18763-quote-token-tree.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n \n // ignore-cross-compile\n-// ignore-pretty: does not work well with `--test`\n-\n #![feature(quote, rustc_private)]\n \n extern crate syntax;"}, {"sha": "978a78cee4f1eeb7405e1d1a5c9e1d993675a1d3", "filename": "src/test/run-pass-fulldeps/lint-group-plugin.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-fulldeps%2Flint-group-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-fulldeps%2Flint-group-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Flint-group-plugin.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -10,8 +10,6 @@\n \n // aux-build:lint_group_plugin_test.rs\n // ignore-stage1\n-// ignore-pretty\n-\n #![feature(plugin)]\n #![plugin(lint_group_plugin_test)]\n #![allow(dead_code)]"}, {"sha": "2e86e11bd6a5fbe757dee9e239ed244702877093", "filename": "src/test/run-pass-fulldeps/lint-plugin-cmdline-load.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin-cmdline-load.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin-cmdline-load.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin-cmdline-load.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:lint_plugin_test.rs\n // ignore-stage1\n-// ignore-pretty: Random space appears with the pretty test\n // compile-flags: -Z extra-plugins=lint_plugin_test\n \n #![allow(dead_code)]"}, {"sha": "753ad33bd01e9c83be310b237597c8c020025d73", "filename": "src/test/run-pass-fulldeps/lint-plugin.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -10,8 +10,6 @@\n \n // aux-build:lint_plugin_test.rs\n // ignore-stage1\n-// ignore-pretty\n-\n #![feature(plugin)]\n #![plugin(lint_plugin_test)]\n #![allow(dead_code)]"}, {"sha": "9e9b7ce5bf29d2f80de3631ea1b6da9624991272", "filename": "src/test/run-pass-fulldeps/quote-tokens.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-fulldeps%2Fquote-tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-fulldeps%2Fquote-tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fquote-tokens.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n \n // ignore-cross-compile\n-// ignore-pretty: does not work well with `--test`\n-\n #![feature(quote, rustc_private)]\n \n extern crate syntax;"}, {"sha": "d3be1ddcb8c32f274983f7b1649e0b8a83ba0853", "filename": "src/test/run-pass-fulldeps/quote-unused-sp-no-warning.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-fulldeps%2Fquote-unused-sp-no-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-fulldeps%2Fquote-unused-sp-no-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fquote-unused-sp-no-warning.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n \n // ignore-cross-compile\n-// ignore-pretty: does not work well with `--test`\n-\n #![feature(quote, rustc_private)]\n #![deny(unused_variables)]\n "}, {"sha": "2815863fe9961ed41a390abbd0dfc2be231b456b", "filename": "src/test/run-pass-valgrind/cast-enum-with-dtor.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-valgrind%2Fcast-enum-with-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass-valgrind%2Fcast-enum-with-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-valgrind%2Fcast-enum-with-dtor.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // no-prefer-dynamic\n \n #![allow(dead_code)]"}, {"sha": "72cf109fd5974e972f3fc8537dd1be0af9cb5744", "filename": "src/test/run-pass/backtrace-debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -16,7 +16,7 @@\n // \"enable\" to 0 instead.\n \n // compile-flags:-g -Cllvm-args=-enable-tail-merge=0\n-// ignore-pretty as this critically relies on line numbers\n+// ignore-pretty issue #37195\n // ignore-emscripten spawning processes is not supported\n \n use std::io;"}, {"sha": "c438c17f51e3a61a53303f3eef45be12a4d96bb5", "filename": "src/test/run-pass/backtrace.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbacktrace.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// no-pretty-expanded FIXME #15189\n // ignore-android FIXME #17520\n // ignore-emscripten spawning processes is not supported\n // compile-flags:-g"}, {"sha": "8de45e4205dfb9a7afd3db6957c8a08611870d4d", "filename": "src/test/run-pass/borrowck/borrowck-pat-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fborrowck%2Fborrowck-pat-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fborrowck%2Fborrowck-pat-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck%2Fborrowck-pat-enum.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n+// ignore-pretty issue #37199\n \n fn match_ref(v: Option<isize>) -> isize {\n     match v {"}, {"sha": "5dd6fa45bb96e457f42657c340d625ebd445124d", "filename": "src/test/run-pass/cfg-in-crate-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fcfg-in-crate-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fcfg-in-crate-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcfg-in-crate-1.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n \n // compile-flags: --cfg bar -D warnings\n-// ignore-pretty\n-\n #![cfg(bar)]\n \n fn main() {}"}, {"sha": "5be9b97aac7e6ac6f3a432f37c46cbf8353edda7", "filename": "src/test/run-pass/command-exec.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fcommand-exec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fcommand-exec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcommand-exec.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -9,9 +9,8 @@\n // except according to those terms.\n \n // ignore-windows - this is a unix-specific test\n+// ignore-pretty issue #37199\n // ignore-emscripten\n-// ignore-pretty\n-\n #![feature(process_exec)]\n \n use std::env;"}, {"sha": "c5b5b6b24ab1cd72733cb654a5de9e2830eae0b9", "filename": "src/test/run-pass/core-run-destroy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n // compile-flags:--test\n // ignore-emscripten\n "}, {"sha": "1a2be7a719e1767dc08c81f183fe4b0cd1b9ba6b", "filename": "src/test/run-pass/deprecated-macro_escape-inner.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fdeprecated-macro_escape-inner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fdeprecated-macro_escape-inner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdeprecated-macro_escape-inner.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n-\n mod foo {\n     #![macro_escape] //~ WARNING macro_escape is a deprecated synonym for macro_use\n     //~^ HELP consider an outer attribute"}, {"sha": "b9f756cc79c8f93e9a16ab2e9b25fe70b880ad40", "filename": "src/test/run-pass/deprecated-macro_escape.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fdeprecated-macro_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fdeprecated-macro_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdeprecated-macro_escape.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n-\n #[macro_escape] //~ WARNING macro_escape is a deprecated synonym for macro_use\n mod foo {\n }"}, {"sha": "b2add21dcd487f40ebc378ed108512366dd5ada1", "filename": "src/test/run-pass/deriving-cmp-generic-enum.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fderiving-cmp-generic-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fderiving-cmp-generic-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-cmp-generic-enum.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// no-pretty-expanded FIXME #15189\n-\n-\n #[derive(PartialEq, Eq, PartialOrd, Ord)]\n enum E<T> {\n     E0,"}, {"sha": "ed8a50998daeefc57680e26433391d917df813d1", "filename": "src/test/run-pass/deriving-meta-empty-trait-list.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fderiving-meta-empty-trait-list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fderiving-meta-empty-trait-list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-meta-empty-trait-list.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -1,5 +1,3 @@\n-// ignore-pretty\n-\n // Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT."}, {"sha": "26deb0ed72adec4414b34aea0a7382a7f227713b", "filename": "src/test/run-pass/enum-size-variance.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fenum-size-variance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fenum-size-variance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-size-variance.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n //\n-// ignore-pretty\n-\n #![warn(variant_size_differences)]\n #![allow(dead_code)]\n "}, {"sha": "2aa5f59cda62d4286a44cea7324542d6bd9db1d0", "filename": "src/test/run-pass/hygienic-labels-in-let.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fhygienic-labels-in-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fhygienic-labels-in-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhygienic-labels-in-let.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty: pprust doesn't print hygiene output\n-\n // Test that labels injected by macros do not break hygiene.  This\n // checks cases where the macros invocations are under the rhs of a\n // let statement."}, {"sha": "c9af2b190b21c781bc491cccefc3fb1fcbdeee64", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// no-pretty-expanded unnecessary unsafe block generated\n-\n #![deny(warnings)]\n #![allow(unused_must_use)]\n #![allow(unused_features)]"}, {"sha": "195b99c9788e893ccdf0ca67649df55ce3c6650b", "filename": "src/test/run-pass/imports.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimports.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when ending with // comments\n-\n #![feature(item_like_imports)]\n #![allow(unused)]\n "}, {"sha": "88d74a65813be014e3aee538f67a4c6cffd908af", "filename": "src/test/run-pass/issue-11709.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-11709.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-11709.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11709.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n+// ignore-pretty issue #37199\n \n // Don't panic on blocks without results\n // There are several tests in this run-pass that raised"}, {"sha": "35faa5789a9c87aa96a27b8c91e41fb5d4bc3c44", "filename": "src/test/run-pass/issue-15189.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-15189.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-15189.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15189.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n-\n macro_rules! third {\n     ($e:expr) => ({let x = 2; $e[x]})\n }"}, {"sha": "177550a0dd4a1c9b484e2eedb5d1fed42dd5c7cc", "filename": "src/test/run-pass/issue-16492.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-16492.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-16492.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16492.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n-\n use std::rc::Rc;\n use std::cell::Cell;\n "}, {"sha": "c51e33c01040bb3eb2412e9a0dc7ae6377a3fe60", "filename": "src/test/run-pass/issue-16597-empty.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-16597-empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-16597-empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16597-empty.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // compile-flags:--test\n-// no-pretty-expanded\n \n // This verifies that the test generation doesn't crash when we have\n // no tests - for more information, see PR #16892."}, {"sha": "583d8d46235d6290cddb3a550b5f5f7125266c2d", "filename": "src/test/run-pass/issue-16597.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-16597.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-16597.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16597.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // compile-flags:--test\n-// ignore-pretty turns out the pretty-printer doesn't handle gensym'd things...\n \n mod tests {\n     use super::*;"}, {"sha": "18861feb1997aabe999d367f332806791b0719c7", "filename": "src/test/run-pass/issue-16668.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-16668.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-16668.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16668.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n-\n #![allow(unknown_features)]\n \n struct Parser<'a, I, O> {"}, {"sha": "dff86bc1b4527ea583ce85e1bec2608775a302db", "filename": "src/test/run-pass/issue-18464.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-18464.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-18464.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-18464.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n-\n #![deny(dead_code)]\n \n const LOW_RANGE: char = '0';"}, {"sha": "985ca067350a35a3a253a02ef0604a1312dd70cc", "filename": "src/test/run-pass/issue-20427.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-20427.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-20427.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20427.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // aux-build:i8.rs\n-// ignore-pretty (#23623)\n+// ignore-pretty issue #37201\n \n extern crate i8;\n use std::string as i16;"}, {"sha": "4d31d0cedb6d5bcbe8bab087c3276c9133510ab4", "filename": "src/test/run-pass/issue-20823.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-20823.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-20823.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20823.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // compile-flags: --test\n-// no-pretty-expanded\n \n #![deny(unstable)]\n "}, {"sha": "dc612fc0bc71c294af7a3890cf9b0fb6f1352adc", "filename": "src/test/run-pass/issue-22992.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-22992.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-22992.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-22992.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n+// ignore-pretty issue #37201\n \n struct X { val: i32 }\n impl std::ops::Deref for X {"}, {"sha": "9d0612f2a8daa75bdaa2d154be0b6626c3d49604", "filename": "src/test/run-pass/issue-23338-ensure-param-drop-order.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-23338-ensure-param-drop-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-23338-ensure-param-drop-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-23338-ensure-param-drop-order.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n+// ignore-pretty issue #37201\n \n // This test is ensuring that parameters are indeed dropped after\n // temporaries in a fn body."}, {"sha": "51bf4bfe0e13e7bff26cb5f113ef11e5cad3ed0f", "filename": "src/test/run-pass/issue-26873-multifile.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-26873-multifile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-26873-multifile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-26873-multifile.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -7,10 +7,9 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-//\n-// ignore-pretty\n+\n+// ignore-pretty issue #37195\n \n mod issue_26873_multifile;\n \n fn main() {}\n-"}, {"sha": "37dc060d5d64d4238c3147a9bd818162f4b08d8b", "filename": "src/test/run-pass/issue-27401-dropflag-reinit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-27401-dropflag-reinit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-27401-dropflag-reinit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-27401-dropflag-reinit.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty #27582\n+// ignore-pretty issue #37201\n \n // Check that when a `let`-binding occurs in a loop, its associated\n // drop-flag is reinitialized (to indicate \"needs-drop\" at the end of"}, {"sha": "ce1abb163d53b3d046c8bd206d7ab4daf8b3d7d3", "filename": "src/test/run-pass/issue-27639.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-27639.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-27639.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-27639.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n-\n fn main() {\n     const iter: i32 = 0;\n "}, {"sha": "2ff4403a42f9781c98f3005b6a9fd5fe3e5b234c", "filename": "src/test/run-pass/issue-28839.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-28839.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-28839.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-28839.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems with newlines before // comments\n+// ignore-pretty issue #37199\n \n pub struct Foo;\n "}, {"sha": "eb7b740db6e4bf74f52906c36a1d6256f01d3723", "filename": "src/test/run-pass/issue-29740.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-29740.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-29740.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-29740.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -11,8 +11,6 @@\n // Regression test for #29740. Inefficient MIR matching algorithms\n // generated way too much code for this sort of case, leading to OOM.\n \n-// ignore-pretty\n-\n pub mod KeyboardEventConstants {\n     pub const DOM_KEY_LOCATION_STANDARD: u32 = 0;\n     pub const DOM_KEY_LOCATION_LEFT: u32 = 1;"}, {"sha": "dca387dcc2117ce549e00b2ea1b7dc094c83b602", "filename": "src/test/run-pass/issue-34932.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-34932.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-34932.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-34932.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -10,8 +10,6 @@\n \n // compile-flags:--test\n // rustc-env:RUSTC_BOOTSTRAP_KEY=\n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n #![cfg(any())] // This test should be configured away\n #![feature(rustc_attrs)] // Test that this is allowed on stable/beta\n #![feature(iter_arith_traits)] // Test that this is not unused"}, {"sha": "764d6fa7918052083b398044a5b6fbf46a111137", "filename": "src/test/run-pass/issue-7911.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-7911.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-7911.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7911.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n-\n // (Closes #7911) Test that we can use the same self expression\n // with different mutability in macro in two methods\n "}, {"sha": "5148be5af8307b208c504157c5eab6756e1312ba", "filename": "src/test/run-pass/issue-8460.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-8460.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-8460.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8460.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n \n // ignore-emscripten no threads support\n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n #![feature(rustc_attrs, zero_one)]\n \n use std::num::Zero;"}, {"sha": "c46e8494e73b8dd38f7182307c94e637593c9764", "filename": "src/test/run-pass/issue-9129.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-9129.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fissue-9129.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9129.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n+// ignore-pretty unreported\n \n #![allow(unknown_features)]\n #![feature(box_syntax)]"}, {"sha": "05f1f1bfea0fb03318f47a1b52d566aa5479140c", "filename": "src/test/run-pass/lexer-crlf-line-endings-string-literal-doc-comment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Flexer-crlf-line-endings-string-literal-doc-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Flexer-crlf-line-endings-string-literal-doc-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flexer-crlf-line-endings-string-literal-doc-comment.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -15,7 +15,7 @@\n // NB: this file needs CRLF line endings. The .gitattributes file in\r\n // this directory should enforce it.\r\n \r\n-// ignore-pretty\r\n+// ignore-pretty issue #37195\r\n \r\n /// Doc comment that ends in CRLF\r\n pub fn foo() {}\r"}, {"sha": "3da2fc8ceacf73eb9c6f2ccf4341c076720371cf", "filename": "src/test/run-pass/linear-for-loop.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Flinear-for-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Flinear-for-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flinear-for-loop.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// no-pretty-expanded FIXME #15189\n-\n pub fn main() {\n     let x = vec!(1, 2, 3);\n     let mut y = 0;"}, {"sha": "801d92b6dcb160d10a8023ff3e8d9b9700375fb5", "filename": "src/test/run-pass/macro-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmacro-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmacro-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-2.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty - token trees can't pretty print\n-\n pub fn main() {\n \n     macro_rules! mylambda_tt {"}, {"sha": "c3de9f736fbe50fb5e01f69071812a9a0eb70a41", "filename": "src/test/run-pass/macro-attribute-expansion.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmacro-attribute-expansion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmacro-attribute-expansion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-attribute-expansion.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty - token trees can't pretty print\n-\n macro_rules! descriptions {\n     ($name:ident is $desc:expr) => {\n         // Check that we will correctly expand attributes"}, {"sha": "839fee3a2d214484fe5b86bf641b39b394b130ca", "filename": "src/test/run-pass/macro-attributes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmacro-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmacro-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-attributes.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty - token trees can't pretty print\n-\n #![feature(custom_attribute)]\n \n macro_rules! compiles_fine {"}, {"sha": "f8728ebb91517e3c6f731f016f5d1e8ddcb62b72", "filename": "src/test/run-pass/macro-include-items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmacro-include-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmacro-include-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-include-items.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n+// ignore-pretty issue #37195\n \n fn bar() {}\n "}, {"sha": "9c1e1fca3413ef0443f378470aae83d04ddc884c", "filename": "src/test/run-pass/macro-meta-items.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmacro-meta-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmacro-meta-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-meta-items.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty - token trees can't pretty print\n // compile-flags: --cfg foo\n \n macro_rules! compiles_fine {"}, {"sha": "190bfc53a9edb6db68e6875726b38c70d87d00e9", "filename": "src/test/run-pass/macro-multiple-items.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmacro-multiple-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmacro-multiple-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-multiple-items.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty - token trees can't pretty print\n-\n macro_rules! make_foo {\n     () => (\n         struct Foo;"}, {"sha": "027df9f93a88dc5101cdb66cd04ee556aa80fdd7", "filename": "src/test/run-pass/macro-stmt.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmacro-stmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmacro-stmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-stmt.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty - token trees can't pretty print\n-\n macro_rules! myfn {\n     ( $f:ident, ( $( $x:ident ),* ), $body:block ) => (\n         fn $f( $( $x : isize),* ) -> isize $body"}, {"sha": "846318ec4fd347d7fe265f9cdbdc2645fd5a04bd", "filename": "src/test/run-pass/mir_raw_fat_ptr.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmir_raw_fat_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmir_raw_fat_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmir_raw_fat_ptr.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n // check raw fat pointer ops in mir\n // FIXME: please improve this when we get monomorphization support\n "}, {"sha": "f8034f9e0738613824b81dad88f8af3d12d5ad84", "filename": "src/test/run-pass/mod_dir_implicit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_dir_implicit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_dir_implicit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_implicit.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n+// ignore-pretty issue #37195\n \n mod mod_dir_implicit_aux;\n "}, {"sha": "e2f33963c4bad25318bc35eabe38dd7236fc9d26", "filename": "src/test/run-pass/mod_dir_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_dir_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_dir_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_path.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n+// ignore-pretty issue #37195\n \n mod mod_dir_simple {\n     #[path = \"test.rs\"]"}, {"sha": "b96c1ae072243c0322268b4dabd450b0f3edad0b", "filename": "src/test/run-pass/mod_dir_path2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_dir_path2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_dir_path2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_path2.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n+// ignore-pretty issue #37195\n \n #[path = \"mod_dir_simple\"]\n mod pancakes {"}, {"sha": "3160064d7c2447505ee27aa8042100c9d7680621", "filename": "src/test/run-pass/mod_dir_path3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_dir_path3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_dir_path3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_path3.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n+// ignore-pretty issue #37195\n \n #[path = \"mod_dir_simple\"]\n mod pancakes {"}, {"sha": "12b28cf98af0ba2139961cfe57de392c330e601a", "filename": "src/test/run-pass/mod_dir_path_multi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_dir_path_multi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_dir_path_multi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_path_multi.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n+// ignore-pretty issue #37195\n \n #[path = \"mod_dir_simple\"]\n mod biscuits {"}, {"sha": "8964d9ccd2527d4cf71523b3526c99fb3ee598af", "filename": "src/test/run-pass/mod_dir_recursive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_dir_recursive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_dir_recursive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_recursive.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n+// ignore-pretty issue #37195\n \n // Testing that the parser for each file tracks its modules\n // and paths independently. The load_another_mod module should"}, {"sha": "429b4ebe63970a407c594f898f5b97f4055f1d12", "filename": "src/test/run-pass/mod_dir_simple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_dir_simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_dir_simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_simple.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n+// ignore-pretty issue #37195\n \n mod mod_dir_simple {\n     pub mod test;"}, {"sha": "c18fecd7c569e09e469cee74d3c5dd981130e285", "filename": "src/test/run-pass/mod_file.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_file.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_file.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_file.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n+// ignore-pretty issue #37195\n \n // Testing that a plain .rs file can load modules from other source files\n "}, {"sha": "d9f28ceb0ecacaf93cc99836ca96f10bd6e4787c", "filename": "src/test/run-pass/mod_file_with_path_attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_file_with_path_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fmod_file_with_path_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_file_with_path_attr.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n+// ignore-pretty issue #37195\n \n // Testing that a plain .rs file can load modules from other source files\n "}, {"sha": "15ece09abd80f4091b287bcd73a78fa91640547c", "filename": "src/test/run-pass/numeric-method-autoexport.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fnumeric-method-autoexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fnumeric-method-autoexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnumeric-method-autoexport.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// no-pretty-expanded\n-\n // This file is intended to test only that methods are automatically\n // reachable for each numeric type, for each exported impl, with no imports\n // necessary. Testing the methods of the impls is done within the source"}, {"sha": "88e3e6ba4acd3480ebffb5d12cab049a8fd254f3", "filename": "src/test/run-pass/reexport-test-harness-main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Freexport-test-harness-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Freexport-test-harness-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freexport-test-harness-main.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n // compile-flags:--test\n \n #![reexport_test_harness_main = \"test_main\"]"}, {"sha": "47d2fe363d3694df3668d34dddcacfac93bd2808", "filename": "src/test/run-pass/regions-bound-lists-feature-gate-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fregions-bound-lists-feature-gate-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fregions-bound-lists-feature-gate-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-bound-lists-feature-gate-2.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n-\n #![feature(issue_5723_bootstrap)]\n \n trait Foo {"}, {"sha": "72db92aa93ce04264c01ec5c107ab1dc5dd493cb", "filename": "src/test/run-pass/regions-bound-lists-feature-gate.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fregions-bound-lists-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fregions-bound-lists-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-bound-lists-feature-gate.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n-\n #![feature(issue_5723_bootstrap)]\n \n trait Foo {"}, {"sha": "a0947cd49a42d6b9e989ef604a3b1ba3330bfb2e", "filename": "src/test/run-pass/shebang.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fshebang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fshebang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fshebang.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -9,7 +9,4 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty: `expand` adds some preludes before shebang\n-//\n-\n pub fn main() { println!(\"Hello World\"); }"}, {"sha": "f0444c27170561550a80c85b48e8e4f3f17dd2c1", "filename": "src/test/run-pass/simd-intrinsic-generic-elements.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-elements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-elements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-elements.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -10,8 +10,6 @@\n \n #![feature(repr_simd, platform_intrinsics)]\n \n-// ignore-pretty : (#23623) problems when  ending with // comments\n-\n #[repr(simd)]\n #[derive(Copy, Clone, Debug, PartialEq)]\n #[allow(non_camel_case_types)]"}, {"sha": "a1bbd190211272170958c3b7a4a4a401edf85529", "filename": "src/test/run-pass/super-fast-paren-parsing.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fsuper-fast-paren-parsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fsuper-fast-paren-parsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsuper-fast-paren-parsing.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n-//\n // exec-env:RUST_MIN_STACK=16000000\n // rustc-env:RUST_MIN_STACK=16000000\n //"}, {"sha": "3b5f033d07b7d3101598d4e2fc4a9223a2ff2e13", "filename": "src/test/run-pass/syntax-extension-source-utils.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,10 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(core)]\n-\n-// This test is brittle!\n-// ignore-pretty - the pretty tests lose path information, breaking include!\n+// ignore-pretty issue #37195\n \n pub mod m1 {\n     pub mod m2 {\n@@ -24,9 +21,9 @@ pub mod m1 {\n macro_rules! indirect_line { () => ( line!() ) }\n \n pub fn main() {\n-    assert_eq!(line!(), 27);\n+    assert_eq!(line!(), 24);\n     assert_eq!(column!(), 4);\n-    assert_eq!(indirect_line!(), 29);\n+    assert_eq!(indirect_line!(), 26);\n     assert!((file!().ends_with(\"syntax-extension-source-utils.rs\")));\n     assert_eq!(stringify!((2*3) + 5).to_string(), \"( 2 * 3 ) + 5\".to_string());\n     assert!(include!(\"syntax-extension-source-utils-files/includeme.\\\n@@ -43,5 +40,5 @@ pub fn main() {\n     // The Windows tests are wrapped in an extra module for some reason\n     assert!((m1::m2::where_am_i().ends_with(\"m1::m2\")));\n \n-    assert_eq!((46, \"( 2 * 3 ) + 5\"), (line!(), stringify!((2*3) + 5)));\n+    assert_eq!((43, \"( 2 * 3 ) + 5\"), (line!(), stringify!((2*3) + 5)));\n }"}, {"sha": "78f29f46edf4a08b2bb4cd64c8d3b36129a7e612", "filename": "src/test/run-pass/task-comm-3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -11,7 +11,6 @@\n #![feature(std_misc)]\n \n // ignore-emscripten no threads support\n-// no-pretty-expanded FIXME #15189\n \n use std::thread;\n use std::sync::mpsc::{channel, Sender};"}, {"sha": "10ad838d3cb87cc9f29db32fe176554ab3a643e6", "filename": "src/test/run-pass/test-fn-signature-verification-for-explicit-return-type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Ftest-fn-signature-verification-for-explicit-return-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Ftest-fn-signature-verification-for-explicit-return-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftest-fn-signature-verification-for-explicit-return-type.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -11,7 +11,6 @@\n #![feature(test)]\n \n // compile-flags: --test\n-// no-pretty-expanded\n extern crate test;\n \n #[bench]"}, {"sha": "7b696c1f8d27c52b5f5830b7d4131ef5999b1d54", "filename": "src/test/run-pass/test-runner-hides-main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Ftest-runner-hides-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Ftest-runner-hides-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftest-runner-hides-main.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n \n // compile-flags:--test\n-// ignore-pretty: does not work well with `--test`\n-\n // Building as a test runner means that a synthetic main will be run,\n // not ours\n pub fn main() { panic!(); }"}, {"sha": "e665fa4fc7b58e5cff0f0374a1b82cd6612170b6", "filename": "src/test/run-pass/test-should-fail-good-message.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Ftest-should-fail-good-message.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Ftest-should-fail-good-message.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftest-should-fail-good-message.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n \n // compile-flags: --test\n-// ignore-pretty: does not work well with `--test`\n-\n #[test]\n #[should_panic(expected = \"foo\")]\n pub fn test_foo() {"}, {"sha": "f7fd86c9570703cc8fe7454f53094608479f9c9c", "filename": "src/test/run-pass/trait-bounds-in-arc.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Ftrait-bounds-in-arc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Ftrait-bounds-in-arc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-bounds-in-arc.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -12,8 +12,6 @@\n // and shared between threads as long as all types fulfill Send.\n \n // ignore-emscripten no threads support\n-// ignore-pretty\n-\n #![allow(unknown_features)]\n #![feature(box_syntax, std_misc)]\n "}, {"sha": "6cb7e82d6b740546bc4380150b1d9a23fc08bac0", "filename": "src/test/run-pass/union/union-with-drop-fields-lint.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Funion%2Funion-with-drop-fields-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45683187ea6887fd5ceab631b4534ed79e7f8397/src%2Ftest%2Frun-pass%2Funion%2Funion-with-drop-fields-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funion%2Funion-with-drop-fields-lint.rs?ref=45683187ea6887fd5ceab631b4534ed79e7f8397", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-pretty\n-\n #![feature(untagged_unions)]\n #![allow(dead_code)]\n #![allow(unions_with_drop_fields)]"}]}