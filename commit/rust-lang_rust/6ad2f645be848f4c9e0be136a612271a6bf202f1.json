{"sha": "6ad2f645be848f4c9e0be136a612271a6bf202f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhZDJmNjQ1YmU4NDhmNGM5ZTBiZTEzNmE2MTIyNzFhNmJmMjAyZjE=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-03-07T18:08:46Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-03-07T18:39:49Z"}, "message": "Put regex_macros tests in a separate feature", "tree": {"sha": "12df16d3558102e47de0164641728676bebe4b9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12df16d3558102e47de0164641728676bebe4b9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ad2f645be848f4c9e0be136a612271a6bf202f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ad2f645be848f4c9e0be136a612271a6bf202f1", "html_url": "https://github.com/rust-lang/rust/commit/6ad2f645be848f4c9e0be136a612271a6bf202f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ad2f645be848f4c9e0be136a612271a6bf202f1/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "004fc4e09a0f85929af81812d829486d2c0775f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/004fc4e09a0f85929af81812d829486d2c0775f9", "html_url": "https://github.com/rust-lang/rust/commit/004fc4e09a0f85929af81812d829486d2c0775f9"}], "stats": {"total": 68, "additions": 43, "deletions": 25}, "files": [{"sha": "d0c614aaae993f081e9516c549fa5339d1a0f22b", "filename": ".travis.yml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6ad2f645be848f4c9e0be136a612271a6bf202f1/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/6ad2f645be848f4c9e0be136a612271a6bf202f1/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=6ad2f645be848f4c9e0be136a612271a6bf202f1", "patch": "@@ -6,3 +6,6 @@ script:\n  - python util/update_lints.py -c\n  - cargo build --features debugging\n  - cargo test --features debugging\n+\n+ # only test regex_macros if it compiles\n+ - if [[ \"$(cargo build --features 'debugging test-regex_macros')\" = 101 ]]; then cargo test --features 'debugging test-regex_macros'; fi"}, {"sha": "5fede91ea2fbcd034d4f887fd68c66dd5fbca75d", "filename": "Cargo.toml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6ad2f645be848f4c9e0be136a612271a6bf202f1/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6ad2f645be848f4c9e0be136a612271a6bf202f1/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=6ad2f645be848f4c9e0be136a612271a6bf202f1", "patch": "@@ -18,17 +18,17 @@ name = \"clippy\"\n plugin = true\n \n [dependencies]\n-unicode-normalization = \"0.1\"\n-semver = \"0.2.1\"\n regex-syntax = \"0.2.2\"\n+regex_macros = { version = \"0.1.28\", optional = true }\n+semver = \"0.2.1\"\n+unicode-normalization = \"0.1\"\n \n [dev-dependencies]\n compiletest_rs = \"0.0.11\"\n-regex = \"0.1.47\"\n-regex_macros = \"0.1.28\"\n lazy_static = \"0.1.15\"\n+regex = \"0.1.47\"\n rustc-serialize = \"0.3\"\n \n [features]\n-\n debugging = []\n+test-regex_macros = [\"regex_macros\"]"}, {"sha": "aab196fb79545b039d9392af4d0e73cccab22446", "filename": "tests/compile-fail-regex_macros/regex.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6ad2f645be848f4c9e0be136a612271a6bf202f1/tests%2Fcompile-fail-regex_macros%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad2f645be848f4c9e0be136a612271a6bf202f1/tests%2Fcompile-fail-regex_macros%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail-regex_macros%2Fregex.rs?ref=6ad2f645be848f4c9e0be136a612271a6bf202f1", "patch": "@@ -0,0 +1,12 @@\n+#![feature(plugin)]\n+#![plugin(clippy, regex_macros)]\n+\n+#![allow(unused)]\n+#![deny(invalid_regex, trivial_regex, regex_macro)]\n+\n+extern crate regex;\n+\n+fn main() {\n+    let some_regex = regex!(\"for real!\"); //~ERROR `regex!(_)`\n+    let other_regex = regex!(\"[a-z]_[A-Z]\"); //~ERROR `regex!(_)`\n+}"}, {"sha": "606c3d513b27d73764988a13d1a8e3c7ba2912cc", "filename": "tests/compile-fail/regex.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6ad2f645be848f4c9e0be136a612271a6bf202f1/tests%2Fcompile-fail%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad2f645be848f4c9e0be136a612271a6bf202f1/tests%2Fcompile-fail%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fregex.rs?ref=6ad2f645be848f4c9e0be136a612271a6bf202f1", "patch": "@@ -1,5 +1,5 @@\n #![feature(plugin)]\n-#![plugin(clippy, regex_macros)]\n+#![plugin(clippy)]\n \n #![allow(unused)]\n #![deny(invalid_regex, trivial_regex, regex_macro)]\n@@ -70,14 +70,7 @@ fn trivial_regex() {\n     let non_trivial_ends_with = Regex::new(\"foo|bar\");\n }\n \n-fn regex_macro() {\n-    let some_regex = regex!(\"for real!\"); //~ERROR `regex!(_)`\n-    let other_regex = regex!(\"[a-z]_[A-Z]\"); //~ERROR `regex!(_)`\n-}\n-\n-\n fn main() {\n-    regex_macro();\n     syntax_error();\n     trivial_regex();\n }"}, {"sha": "ff2d94d277735a7b9e4d91c58f1e480f4ab1c042", "filename": "tests/compile-test.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6ad2f645be848f4c9e0be136a612271a6bf202f1/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad2f645be848f4c9e0be136a612271a6bf202f1/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=6ad2f645be848f4c9e0be136a612271a6bf202f1", "patch": "@@ -20,7 +20,15 @@ fn run_mode(mode: &'static str) {\n }\n \n #[test]\n+#[cfg(not(feature = \"test-regex_macros\"))]\n fn compile_test() {\n     run_mode(\"run-pass\");\n     run_mode(\"compile-fail\");\n }\n+\n+#[test]\n+#[cfg(feature = \"test-regex_macros\")]\n+fn compile_test() {\n+    run_mode(\"run-pass-regex_macros\");\n+    run_mode(\"compile-fail-regex_macros\");\n+}"}, {"sha": "92b44dbdd482ec510f5d50a35af63741c72d9e5a", "filename": "tests/run-pass-regex_macros/mut_mut_macro.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6ad2f645be848f4c9e0be136a612271a6bf202f1/tests%2Frun-pass-regex_macros%2Fmut_mut_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad2f645be848f4c9e0be136a612271a6bf202f1/tests%2Frun-pass-regex_macros%2Fmut_mut_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-regex_macros%2Fmut_mut_macro.rs?ref=6ad2f645be848f4c9e0be136a612271a6bf202f1", "patch": "@@ -0,0 +1,12 @@\n+#![feature(plugin)]\n+#![plugin(clippy, regex_macros)]\n+\n+#[macro_use]\n+extern crate regex;\n+\n+#[deny(mut_mut)]\n+#[allow(regex_macro)]\n+fn main() {\n+    let pattern = regex!(r\"^(?P<level>[#]+)\\s(?P<title>.+)$\");\n+    assert!(pattern.is_match(\"# headline\"));\n+}"}, {"sha": "e652862c4ffbee8b834ed4024fa1f6fa18bd610b", "filename": "tests/run-pass/mut_mut_macro.rs", "status": "renamed", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6ad2f645be848f4c9e0be136a612271a6bf202f1/tests%2Frun-pass%2Fmut_mut_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad2f645be848f4c9e0be136a612271a6bf202f1/tests%2Frun-pass%2Fmut_mut_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fmut_mut_macro.rs?ref=6ad2f645be848f4c9e0be136a612271a6bf202f1", "patch": "@@ -1,24 +1,14 @@\n #![feature(plugin)]\n-#![plugin(clippy, regex_macros)]\n+#![plugin(clippy)]\n \n #[macro_use]\n extern crate lazy_static;\n-extern crate regex;\n \n use std::collections::HashMap;\n \n-#[test]\n-#[deny(mut_mut)]\n-#[allow(regex_macro)]\n-fn test_regex() {\n-    let pattern = regex!(r\"^(?P<level>[#]+)\\s(?P<title>.+)$\");\n-    assert!(pattern.is_match(\"# headline\"));\n-}\n-\n-#[test]\n #[deny(mut_mut)]\n #[allow(unused_variables, unused_mut)]\n-fn test_lazy_static() {\n+fn main() {\n     lazy_static! {\n         static ref MUT_MAP : HashMap<usize, &'static str> = {\n             let mut m = HashMap::new();", "previous_filename": "tests/mut_mut_macro.rs"}]}