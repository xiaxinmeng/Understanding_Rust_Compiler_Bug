{"sha": "bbd7932a66b56da9a1c7d8cc30dc931922b356c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZDc5MzJhNjZiNTZkYTlhMWM3ZDhjYzMwZGM5MzE5MjJiMzU2YzA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-23T21:48:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-23T21:48:30Z"}, "message": "Auto merge of #46225 - GuillaumeGomez:rollup, r=GuillaumeGomez\n\nRollup of 5 pull requests\n\n- Successful merges: #45635, #46177, #46190, #46218, #46220\n- Failed merges:", "tree": {"sha": "f3ed11de96904f08b8166bef2cb96ad0e0c98c77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3ed11de96904f08b8166bef2cb96ad0e0c98c77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbd7932a66b56da9a1c7d8cc30dc931922b356c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbd7932a66b56da9a1c7d8cc30dc931922b356c0", "html_url": "https://github.com/rust-lang/rust/commit/bbd7932a66b56da9a1c7d8cc30dc931922b356c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "246a6d19c9844744737876fc55701395ae535579", "url": "https://api.github.com/repos/rust-lang/rust/commits/246a6d19c9844744737876fc55701395ae535579", "html_url": "https://github.com/rust-lang/rust/commit/246a6d19c9844744737876fc55701395ae535579"}, {"sha": "e6968dfa0d58cd4299e9db88ad53ec309fa4192a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6968dfa0d58cd4299e9db88ad53ec309fa4192a", "html_url": "https://github.com/rust-lang/rust/commit/e6968dfa0d58cd4299e9db88ad53ec309fa4192a"}], "stats": {"total": 80, "additions": 67, "deletions": 13}, "files": [{"sha": "57434ebc1f60077a2a866bd4af261724d21f0578", "filename": "RELEASES.md", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=bbd7932a66b56da9a1c7d8cc30dc931922b356c0", "patch": "@@ -1,4 +1,11 @@\n-Version 1.22.0 (2017-11-23)\n+Version 1.22.1 (2017-11-22)\n+==========================\n+\n+- [Update Cargo to fix an issue with macOS 10.13 \"High Sierra\"][46183]\n+\n+[46183]: https://github.com/rust-lang/rust/pull/46183\n+\n+Version 1.22.0 (2017-11-22)\n ==========================\n \n Language"}, {"sha": "7e3d2af79ce2b79279dadb1aa3e248d46500286b", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=bbd7932a66b56da9a1c7d8cc30dc931922b356c0", "patch": "@@ -1468,9 +1468,9 @@ impl<T> [T] {\n         core_slice::SliceExt::copy_from_slice(self, src)\n     }\n \n-    /// Swaps all elements in `self` with those in `src`.\n+    /// Swaps all elements in `self` with those in `other`.\n     ///\n-    /// The length of `src` must be the same as `self`.\n+    /// The length of `other` must be the same as `self`.\n     ///\n     /// # Panics\n     ///\n@@ -1481,16 +1481,16 @@ impl<T> [T] {\n     /// ```\n     /// #![feature(swap_with_slice)]\n     ///\n-    /// let mut src = [1, 2, 3];\n-    /// let mut dst = [7, 8, 9];\n+    /// let mut slice1 = [1, 2, 3];\n+    /// let mut slice2 = [7, 8, 9];\n     ///\n-    /// src.swap_with_slice(&mut dst);\n-    /// assert_eq!(src, [7, 8, 9]);\n-    /// assert_eq!(dst, [1, 2, 3]);\n+    /// slice1.swap_with_slice(&mut slice2);\n+    /// assert_eq!(slice1, [7, 8, 9]);\n+    /// assert_eq!(slice2, [1, 2, 3]);\n     /// ```\n     #[unstable(feature = \"swap_with_slice\", issue = \"44030\")]\n-    pub fn swap_with_slice(&mut self, src: &mut [T]) {\n-        core_slice::SliceExt::swap_with_slice(self, src)\n+    pub fn swap_with_slice(&mut self, other: &mut [T]) {\n+        core_slice::SliceExt::swap_with_slice(self, other)\n     }\n \n     /// Copies `self` into a new `Vec`."}, {"sha": "2335695ae42d4a747df2ebb7efe276955f8db1d6", "filename": "src/libstd/process.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=bbd7932a66b56da9a1c7d8cc30dc931922b356c0", "patch": "@@ -712,8 +712,10 @@ impl Command {\n     /// Executes the command as a child process, waiting for it to finish and\n     /// collecting all of its output.\n     ///\n-    /// By default, stdin, stdout and stderr are captured (and used to\n-    /// provide the resulting output).\n+    /// By default, stdout and stderr are captured (and used to provide the\n+    /// resulting output). Stdin is not inherited from the parent and any\n+    /// attempt by the child process to read from the stdin stream will result\n+    /// in the stream immediately closing.\n     ///\n     /// # Examples\n     ///"}, {"sha": "0faf5bd912101f16a0a8c9e2578735db09c48dac", "filename": "src/libstd_unicode/char.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/src%2Flibstd_unicode%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/src%2Flibstd_unicode%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2Fchar.rs?ref=bbd7932a66b56da9a1c7d8cc30dc931922b356c0", "patch": "@@ -57,6 +57,7 @@ pub use tables::{UnicodeVersion, UNICODE_VERSION};\n /// [`to_lowercase`]: ../../std/primitive.char.html#method.to_lowercase\n /// [`char`]: ../../std/primitive.char.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[derive(Debug)]\n pub struct ToLowercase(CaseMappingIter);\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -78,6 +79,7 @@ impl FusedIterator for ToLowercase {}\n /// [`to_uppercase`]: ../../std/primitive.char.html#method.to_uppercase\n /// [`char`]: ../../std/primitive.char.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[derive(Debug)]\n pub struct ToUppercase(CaseMappingIter);\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -91,6 +93,7 @@ impl Iterator for ToUppercase {\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl FusedIterator for ToUppercase {}\n \n+#[derive(Debug)]\n enum CaseMappingIter {\n     Three(char, char, char),\n     Two(char, char),\n@@ -1450,7 +1453,7 @@ impl char {\n \n /// An iterator that decodes UTF-16 encoded code points from an iterator of `u16`s.\n #[stable(feature = \"decode_utf16\", since = \"1.9.0\")]\n-#[derive(Clone)]\n+#[derive(Clone, Debug)]\n pub struct DecodeUtf16<I>\n     where I: Iterator<Item = u16>\n {"}, {"sha": "22f8bdab2f7b52f9b6d13b76f373f5f6d8b331e7", "filename": "src/libstd_unicode/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/src%2Flibstd_unicode%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/src%2Flibstd_unicode%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2Flib.rs?ref=bbd7932a66b56da9a1c7d8cc30dc931922b356c0", "patch": "@@ -28,6 +28,7 @@\n        issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\",\n        test(no_crate_inject, attr(allow(unused_variables), deny(warnings))))]\n #![deny(warnings)]\n+#![deny(missing_debug_implementations)]\n #![no_std]\n \n #![feature(ascii_ctype)]"}, {"sha": "cc8e93308a5271866e85401eb6e98a774948c634", "filename": "src/libstd_unicode/lossy.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/src%2Flibstd_unicode%2Flossy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/src%2Flibstd_unicode%2Flossy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2Flossy.rs?ref=bbd7932a66b56da9a1c7d8cc30dc931922b356c0", "patch": "@@ -38,6 +38,7 @@ impl Utf8Lossy {\n \n /// Iterator over lossy UTF-8 string\n #[unstable(feature = \"str_internals\", issue = \"0\")]\n+#[allow(missing_debug_implementations)]\n pub struct Utf8LossyChunksIter<'a> {\n     source: &'a [u8],\n }"}, {"sha": "5d1611acb7ee632103f75553b5babdc3f6960640", "filename": "src/libstd_unicode/u_str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/src%2Flibstd_unicode%2Fu_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/src%2Flibstd_unicode%2Fu_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2Fu_str.rs?ref=bbd7932a66b56da9a1c7d8cc30dc931922b356c0", "patch": "@@ -76,6 +76,7 @@ impl UnicodeStr for str {\n \n /// Iterator adaptor for encoding `char`s to UTF-16.\n #[derive(Clone)]\n+#[allow(missing_debug_implementations)]\n pub struct Utf16Encoder<I> {\n     chars: I,\n     extra: u16,"}, {"sha": "256305bf17df88ebf3d23c976ddea66c708252ef", "filename": "src/test/ui-fulldeps/issue-44953/issue-44953.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/src%2Ftest%2Fui-fulldeps%2Fissue-44953%2Fissue-44953.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/src%2Ftest%2Fui-fulldeps%2Fissue-44953%2Fissue-44953.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fissue-44953%2Fissue-44953.rs?ref=bbd7932a66b56da9a1c7d8cc30dc931922b356c0", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+//\n+\n+\n+#![feature(proc_macro)]\n+#![allow(unused_macros)]\n+\n+#[macro_use] extern crate log;\n+\n+pub fn main() {\n+    info!(\"This is a log message.\");\n+}"}, {"sha": "ce17ea7916122f5756e970ad40dfdac8a2554bc5", "filename": "src/test/ui-fulldeps/issue-44953/issue-44953.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/src%2Ftest%2Fui-fulldeps%2Fissue-44953%2Fissue-44953.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbd7932a66b56da9a1c7d8cc30dc931922b356c0/src%2Ftest%2Fui-fulldeps%2Fissue-44953%2Fissue-44953.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fissue-44953%2Fissue-44953.stderr?ref=bbd7932a66b56da9a1c7d8cc30dc931922b356c0", "patch": "@@ -0,0 +1,19 @@\n+error: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead? (see issue #27812)\n+  --> $DIR/issue-44953.rs:16:14\n+   |\n+16 | #[macro_use] extern crate log;\n+   |              ^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(rustc_private)] to the crate attributes to enable\n+\n+error: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead? (see issue #27812)\n+  --> $DIR/issue-44953.rs:19:5\n+   |\n+19 |     info!(\"This is a log message.\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(rustc_private)] to the crate attributes to enable\n+   = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n+\n+error: aborting due to 2 previous errors\n+"}]}