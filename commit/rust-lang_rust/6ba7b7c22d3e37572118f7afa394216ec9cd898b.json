{"sha": "6ba7b7c22d3e37572118f7afa394216ec9cd898b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiYTdiN2MyMmQzZTM3NTcyMTE4ZjdhZmEzOTQyMTZlYzljZDg5OGI=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-06-12T12:45:16Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-06-16T03:55:52Z"}, "message": "Implement `HasAttrs` for `Annotatable`", "tree": {"sha": "fbfb879ce515b32a5ee5b794093746ffcc7a7cd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbfb879ce515b32a5ee5b794093746ffcc7a7cd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ba7b7c22d3e37572118f7afa394216ec9cd898b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ba7b7c22d3e37572118f7afa394216ec9cd898b", "html_url": "https://github.com/rust-lang/rust/commit/6ba7b7c22d3e37572118f7afa394216ec9cd898b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ba7b7c22d3e37572118f7afa394216ec9cd898b/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb4a79b087158f396b984bdf552d2c90890b12a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb4a79b087158f396b984bdf552d2c90890b12a3", "html_url": "https://github.com/rust-lang/rust/commit/bb4a79b087158f396b984bdf552d2c90890b12a3"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "5d171521b13b2c40045f4d186437b37504cbbf24", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/6ba7b7c22d3e37572118f7afa394216ec9cd898b/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ba7b7c22d3e37572118f7afa394216ec9cd898b/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=6ba7b7c22d3e37572118f7afa394216ec9cd898b", "patch": "@@ -12,6 +12,7 @@ pub use self::SyntaxExtension::*;\n \n use ast;\n use ast::{Name, PatKind};\n+use attr::HasAttrs;\n use codemap;\n use codemap::{CodeMap, Span, ExpnId, ExpnInfo, NO_EXPANSION};\n use errors::DiagnosticBuilder;\n@@ -41,29 +42,31 @@ pub enum Annotatable {\n     ImplItem(P<ast::ImplItem>),\n }\n \n-impl Annotatable {\n-    pub fn attrs(&self) -> &[ast::Attribute] {\n+impl HasAttrs for Annotatable {\n+    fn attrs(&self) -> &[ast::Attribute] {\n         match *self {\n-            Annotatable::Item(ref i) => &i.attrs,\n-            Annotatable::TraitItem(ref ti) => &ti.attrs,\n-            Annotatable::ImplItem(ref ii) => &ii.attrs,\n+            Annotatable::Item(ref item) => &item.attrs,\n+            Annotatable::TraitItem(ref trait_item) => &trait_item.attrs,\n+            Annotatable::ImplItem(ref impl_item) => &impl_item.attrs,\n         }\n     }\n \n-    pub fn fold_attrs(self, attrs: Vec<ast::Attribute>) -> Annotatable {\n+    fn map_attrs<F: FnOnce(Vec<ast::Attribute>) -> Vec<ast::Attribute>>(self, f: F) -> Self {\n         match self {\n-            Annotatable::Item(i) => Annotatable::Item(i.map(|i| ast::Item {\n-                attrs: attrs,\n-                ..i\n-            })),\n-            Annotatable::TraitItem(i) => Annotatable::TraitItem(i.map(|ti| {\n-                ast::TraitItem { attrs: attrs, ..ti }\n-            })),\n-            Annotatable::ImplItem(i) => Annotatable::ImplItem(i.map(|ii| {\n-                ast::ImplItem { attrs: attrs, ..ii }\n-            })),\n+            Annotatable::Item(item) => Annotatable::Item(item.map_attrs(f)),\n+            Annotatable::TraitItem(trait_item) => Annotatable::TraitItem(trait_item.map_attrs(f)),\n+            Annotatable::ImplItem(impl_item) => Annotatable::ImplItem(impl_item.map_attrs(f)),\n         }\n     }\n+}\n+\n+impl Annotatable {\n+    pub fn attrs(&self) -> &[ast::Attribute] {\n+        HasAttrs::attrs(self)\n+    }\n+    pub fn fold_attrs(self, attrs: Vec<ast::Attribute>) -> Annotatable {\n+        self.map_attrs(|_| attrs)\n+    }\n \n     pub fn expect_item(self) -> P<ast::Item> {\n         match self {"}]}