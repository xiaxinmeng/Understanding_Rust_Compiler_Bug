{"sha": "48a5f8446d0e23c37a36c808fb68b2796e044ca7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YTVmODQ0NmQwZTIzYzM3YTM2YzgwOGZiNjhiMjc5NmUwNDRjYTc=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-21T11:49:08Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-21T11:49:08Z"}, "message": "fallout", "tree": {"sha": "b420411c55fbd53b23a52305ac17478dea9f74fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b420411c55fbd53b23a52305ac17478dea9f74fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48a5f8446d0e23c37a36c808fb68b2796e044ca7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXaSm0AAoJEFbW7qD8Z6xGgGoQAJ7l0fOEvOous9H4cNa+mm9h\njDwgUNmWe6CPB19fM4d4530RwziSVce+zWNQqhh4gMqCp6wilCFpwY03hovqguo5\nC32a9kHIhKkCUDbikQSDwd2wPhi9KYPQVIDQ6m0w7Ir+yD7oXJxKyRpJZ/a3+Le8\nILXuKa3ZO4U8n+sIsNLjfpbhbTYMXoXi6dLXpdWBk7ik0pAT8vho5CAvOimAcrJW\nPsbZqfIVspTEkOLgA7afn0taU1LybL/TCEL5LmS+auu/0E20z4a8EEd3OGq+ONq5\nYvRoeldmvDT/oMfrT4LFnxa2hdZfLoYG3iaQNiXIxHFOMq1rU0geXyxJAJCNgQsc\npjjE1yFIL8zMgcA/5wSvgG3Cl+zffYYUkOLpvcNdw4hh6o04UYecKyMW62OjN/fz\nMhxcGwqmmQGG8wIeWXVbt9HxXpX3JG7EoLN7PvJTvqcRRS0sxNkjc91zmpVs+6J1\nWu+Fuza23mpSNhYaS00EbNCVzj16F1c5no/pTm4VVJrs4qQEhqYpnWVYAtOEboda\nccr2BOZagEReI9No/EQHCdnKe9VALQwHAWyIKeaO5viknXlfezXP4uHs/val1rRh\nOz2eyWVVZ8lIVrHiCXX7wvoVqz9hfVlM9be9GQP1ubXVVgO/7LJJGBMxbUrr2kaS\nWHr2bH/vhyx32SCanHcF\n=0MeV\n-----END PGP SIGNATURE-----", "payload": "tree b420411c55fbd53b23a52305ac17478dea9f74fd\nparent eef439cb78d7efbf24856c81a78e2b38ebfbc189\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466509748 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466509748 +0200\n\nfallout"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48a5f8446d0e23c37a36c808fb68b2796e044ca7", "html_url": "https://github.com/rust-lang/rust/commit/48a5f8446d0e23c37a36c808fb68b2796e044ca7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48a5f8446d0e23c37a36c808fb68b2796e044ca7/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eef439cb78d7efbf24856c81a78e2b38ebfbc189", "url": "https://api.github.com/repos/rust-lang/rust/commits/eef439cb78d7efbf24856c81a78e2b38ebfbc189", "html_url": "https://github.com/rust-lang/rust/commit/eef439cb78d7efbf24856c81a78e2b38ebfbc189"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "dc5df87402019f581ad48c61308abcbebc7c7908", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/48a5f8446d0e23c37a36c808fb68b2796e044ca7/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48a5f8446d0e23c37a36c808fb68b2796e044ca7/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=48a5f8446d0e23c37a36c808fb68b2796e044ca7", "patch": "@@ -71,19 +71,17 @@ enum RefLt {\n     Named(Name),\n }\n \n-fn bound_lifetimes(bound: &TyParamBound) -> Option<HirVec<&Lifetime>> {\n+fn bound_lifetimes(bound: &TyParamBound) -> HirVec<&Lifetime> {\n     if let TraitTyParamBound(ref trait_ref, _) = *bound {\n-        let lt = trait_ref.trait_ref\n-                          .path\n-                          .segments\n-                          .last()\n-                          .expect(\"a path must have at least one segment\")\n-                          .parameters\n-                          .lifetimes();\n-\n-        Some(lt)\n+        trait_ref.trait_ref\n+                 .path\n+                 .segments\n+                 .last()\n+                 .expect(\"a path must have at least one segment\")\n+                 .parameters\n+                 .lifetimes()\n     } else {\n-        None\n+        HirVec::new()\n     }\n }\n \n@@ -94,7 +92,7 @@ fn check_fn_inner(cx: &LateContext, decl: &FnDecl, generics: &Generics, span: Sp\n \n     let bounds_lts = generics.ty_params\n                              .iter()\n-                             .flat_map(|ref typ| typ.bounds.iter().filter_map(bound_lifetimes).flat_map(|lts| lts));\n+                             .flat_map(|typ| typ.bounds.iter().flat_map(bound_lifetimes));\n \n     if could_use_elision(cx, decl, &generics.lifetimes, bounds_lts) {\n         span_lint(cx,"}]}