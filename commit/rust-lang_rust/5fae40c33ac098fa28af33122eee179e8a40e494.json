{"sha": "5fae40c33ac098fa28af33122eee179e8a40e494", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmYWU0MGMzM2FjMDk4ZmEyOGFmMzMxMjJlZWUxNzllOGE0MGU0OTQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-09-29T15:12:14Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-09-29T15:12:14Z"}, "message": "rollup merge of #17548 : cgaebel/master", "tree": {"sha": "eef7cd7d44c0c630d19aab33b3ec07522e50e4bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eef7cd7d44c0c630d19aab33b3ec07522e50e4bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fae40c33ac098fa28af33122eee179e8a40e494", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fae40c33ac098fa28af33122eee179e8a40e494", "html_url": "https://github.com/rust-lang/rust/commit/5fae40c33ac098fa28af33122eee179e8a40e494", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fae40c33ac098fa28af33122eee179e8a40e494/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01c25e6c7bb0b40eace6f05bbb9f9bb017a36b3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/01c25e6c7bb0b40eace6f05bbb9f9bb017a36b3a", "html_url": "https://github.com/rust-lang/rust/commit/01c25e6c7bb0b40eace6f05bbb9f9bb017a36b3a"}, {"sha": "c2f8db12fd3e6c9a58566008b2b3ca5881da1db5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2f8db12fd3e6c9a58566008b2b3ca5881da1db5", "html_url": "https://github.com/rust-lang/rust/commit/c2f8db12fd3e6c9a58566008b2b3ca5881da1db5"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "1d479b852480c009700e819f6acd07f92b106c7e", "filename": "src/libstd/bitflags.rs", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5fae40c33ac098fa28af33122eee179e8a40e494/src%2Flibstd%2Fbitflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fae40c33ac098fa28af33122eee179e8a40e494/src%2Flibstd%2Fbitflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbitflags.rs?ref=5fae40c33ac098fa28af33122eee179e8a40e494", "patch": "@@ -93,6 +93,7 @@\n ///\n /// - `BitOr`: union\n /// - `BitAnd`: intersection\n+/// - `BitXor`: toggle\n /// - `Sub`: set difference\n /// - `Not`: set complement\n ///\n@@ -109,6 +110,8 @@\n /// - `contains`: `true` all of the flags in `other` are contained within `self`\n /// - `insert`: inserts the specified flags in-place\n /// - `remove`: removes the specified flags in-place\n+/// - `toggle`: the specified flags will be inserted if not present, and removed\n+///             if they are.\n #[macro_export]\n macro_rules! bitflags {\n     ($(#[$attr:meta])* flags $BitFlags:ident: $T:ty {\n@@ -184,6 +187,11 @@ macro_rules! bitflags {\n             pub fn remove(&mut self, other: $BitFlags) {\n                 self.bits &= !other.bits;\n             }\n+\n+            /// Toggles the specified flags in-place.\n+            pub fn toggle(&mut self, other: $BitFlags) {\n+                self.bits ^= other.bits;\n+            }\n         }\n \n         impl BitOr<$BitFlags, $BitFlags> for $BitFlags {\n@@ -194,6 +202,14 @@ macro_rules! bitflags {\n             }\n         }\n \n+        impl BitXor<$BitFlags, $BitFlags> for $BitFlags {\n+            /// Returns the left flags, but with all the right flags toggled.\n+            #[inline]\n+            fn bitxor(&self, other: &$BitFlags) -> $BitFlags {\n+                $BitFlags { bits: self.bits ^ other.bits }\n+            }\n+        }\n+\n         impl BitAnd<$BitFlags, $BitFlags> for $BitFlags {\n             /// Returns the intersection between the two sets of flags.\n             #[inline]\n@@ -234,7 +250,7 @@ macro_rules! bitflags {\n mod tests {\n     use hash;\n     use option::{Some, None};\n-    use ops::{BitOr, BitAnd, Sub, Not};\n+    use ops::{BitOr, BitAnd, BitXor, Sub, Not};\n \n     bitflags! {\n         #[doc = \"> The first principle is that you must not fool yourself \u2014 and\"]\n@@ -358,10 +374,14 @@ mod tests {\n     fn test_operators() {\n         let e1 = FlagA | FlagC;\n         let e2 = FlagB | FlagC;\n-        assert!((e1 | e2) == FlagABC);   // union\n-        assert!((e1 & e2) == FlagC);     // intersection\n-        assert!((e1 - e2) == FlagA);     // set difference\n-        assert!(!e2 == FlagA);           // set complement\n+        assert!((e1 | e2) == FlagABC);     // union\n+        assert!((e1 & e2) == FlagC);       // intersection\n+        assert!((e1 - e2) == FlagA);       // set difference\n+        assert!(!e2 == FlagA);             // set complement\n+        assert!(e1 ^ e2 == FlagA | FlagB); // toggle\n+        let mut e3 = e1;\n+        e3.toggle(e2);\n+        assert!(e3 == FlagA | FlagB);\n     }\n \n     #[test]"}, {"sha": "444372e3c4f0487a90e39441c6198f225162ea20", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5fae40c33ac098fa28af33122eee179e8a40e494/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fae40c33ac098fa28af33122eee179e8a40e494/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=5fae40c33ac098fa28af33122eee179e8a40e494", "patch": "@@ -229,7 +229,7 @@ use int;\n use iter::Iterator;\n use libc;\n use mem::transmute;\n-use ops::{BitOr, BitAnd, Sub, Not};\n+use ops::{BitOr, BitXor, BitAnd, Sub, Not};\n use option::{Option, Some, None};\n use os;\n use boxed::Box;"}]}