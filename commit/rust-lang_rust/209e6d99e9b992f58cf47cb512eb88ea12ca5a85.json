{"sha": "209e6d99e9b992f58cf47cb512eb88ea12ca5a85", "node_id": "C_kwDOAAsO6NoAKDIwOWU2ZDk5ZTliOTkyZjU4Y2Y0N2NiNTEyZWI4OGVhMTJjYTVhODU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-13T09:21:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-13T09:21:06Z"}, "message": "Rollup merge of #110234 - marc0246:btree-insert-after-fix, r=cuviper\n\nFix btree `CursorMut::insert_after` check\n\nFixes a check inside `BTreeMap`'s `CursorMut::insert_after`, where it would peek the previous element to check whether the inserted key is below the next one, instead of peeking the next element.", "tree": {"sha": "b34941b26540f375795f405103da392462592f1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b34941b26540f375795f405103da392462592f1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/209e6d99e9b992f58cf47cb512eb88ea12ca5a85", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkN8mCCRBK7hj4Ov3rIwAAXmcIAEfJNqO7/8eGedvYeyN4X+Pw\nbZiRY51QaxjWBzn4GC7L7zezXmxq1VrDazzAITW6GEdglSr6Tt3PQ6H+ujNH6DUz\ncGADeYWQsYXd4Jdb8rVkXKGRZZSWC+ND7eoF+490iD2G+vZpJGa1J9bswlUDP4vc\nj5WjFkFsukkt/wdT/onaKyFDOpI3kX/QEhpvz12hcvQnhientTrk9MecfIWN+WAz\nh3pzpVe9y+FlSf2xk3YzjiSlr1KaZFq/oO1fSw4TDsH1rK/1K/VVerC31W1/3513\nKlgdz9hrduOzyyumBr0KEBJMSxti/5aww+RRQ7fF1/JRFG6IxWduDQwow/W1JUo=\n=15Va\n-----END PGP SIGNATURE-----\n", "payload": "tree b34941b26540f375795f405103da392462592f1e\nparent 6f1500aec2b43ab94d7d0fa7497fd6ccb736db84\nparent cdd982955623f697f759f548ce11f886a413f4f6\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1681377666 +0200\ncommitter GitHub <noreply@github.com> 1681377666 +0200\n\nRollup merge of #110234 - marc0246:btree-insert-after-fix, r=cuviper\n\nFix btree `CursorMut::insert_after` check\n\nFixes a check inside `BTreeMap`'s `CursorMut::insert_after`, where it would peek the previous element to check whether the inserted key is below the next one, instead of peeking the next element.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/209e6d99e9b992f58cf47cb512eb88ea12ca5a85", "html_url": "https://github.com/rust-lang/rust/commit/209e6d99e9b992f58cf47cb512eb88ea12ca5a85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/209e6d99e9b992f58cf47cb512eb88ea12ca5a85/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f1500aec2b43ab94d7d0fa7497fd6ccb736db84", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f1500aec2b43ab94d7d0fa7497fd6ccb736db84", "html_url": "https://github.com/rust-lang/rust/commit/6f1500aec2b43ab94d7d0fa7497fd6ccb736db84"}, {"sha": "cdd982955623f697f759f548ce11f886a413f4f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdd982955623f697f759f548ce11f886a413f4f6", "html_url": "https://github.com/rust-lang/rust/commit/cdd982955623f697f759f548ce11f886a413f4f6"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "da675379cd58bfc0d70e8675cea0bae76e3160aa", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/209e6d99e9b992f58cf47cb512eb88ea12ca5a85/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/209e6d99e9b992f58cf47cb512eb88ea12ca5a85/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=209e6d99e9b992f58cf47cb512eb88ea12ca5a85", "patch": "@@ -3183,7 +3183,7 @@ impl<'a, K: Ord, V, A: Allocator + Clone> CursorMut<'a, K, V, A> {\n                 panic!(\"key must be ordered above the current element\");\n             }\n         }\n-        if let Some((next, _)) = self.peek_prev() {\n+        if let Some((next, _)) = self.peek_next() {\n             if &key >= next {\n                 panic!(\"key must be ordered below the next element\");\n             }"}, {"sha": "4311f21c925cda7a7ffdcab338ee78085cf4e92c", "filename": "library/alloc/src/collections/btree/map/tests.rs", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/209e6d99e9b992f58cf47cb512eb88ea12ca5a85/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/209e6d99e9b992f58cf47cb512eb88ea12ca5a85/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs?ref=209e6d99e9b992f58cf47cb512eb88ea12ca5a85", "patch": "@@ -2385,3 +2385,67 @@ fn test_cursor_mut() {\n     assert_eq!(cur.key(), Some(&4));\n     assert_eq!(map, BTreeMap::from([(0, '?'), (1, 'a'), (3, 'c'), (4, 'd')]));\n }\n+\n+#[should_panic(expected = \"key must be ordered above the previous element\")]\n+#[test]\n+fn test_cursor_mut_insert_before_1() {\n+    let mut map = BTreeMap::from([(1, 'a'), (2, 'b'), (3, 'c')]);\n+    let mut cur = map.upper_bound_mut(Bound::Included(&2));\n+    cur.insert_before(0, 'd');\n+}\n+\n+#[should_panic(expected = \"key must be ordered above the previous element\")]\n+#[test]\n+fn test_cursor_mut_insert_before_2() {\n+    let mut map = BTreeMap::from([(1, 'a'), (2, 'b'), (3, 'c')]);\n+    let mut cur = map.upper_bound_mut(Bound::Included(&2));\n+    cur.insert_before(1, 'd');\n+}\n+\n+#[should_panic(expected = \"key must be ordered below the current element\")]\n+#[test]\n+fn test_cursor_mut_insert_before_3() {\n+    let mut map = BTreeMap::from([(1, 'a'), (2, 'b'), (3, 'c')]);\n+    let mut cur = map.upper_bound_mut(Bound::Included(&2));\n+    cur.insert_before(2, 'd');\n+}\n+\n+#[should_panic(expected = \"key must be ordered below the current element\")]\n+#[test]\n+fn test_cursor_mut_insert_before_4() {\n+    let mut map = BTreeMap::from([(1, 'a'), (2, 'b'), (3, 'c')]);\n+    let mut cur = map.upper_bound_mut(Bound::Included(&2));\n+    cur.insert_before(3, 'd');\n+}\n+\n+#[should_panic(expected = \"key must be ordered above the current element\")]\n+#[test]\n+fn test_cursor_mut_insert_after_1() {\n+    let mut map = BTreeMap::from([(1, 'a'), (2, 'b'), (3, 'c')]);\n+    let mut cur = map.upper_bound_mut(Bound::Included(&2));\n+    cur.insert_after(1, 'd');\n+}\n+\n+#[should_panic(expected = \"key must be ordered above the current element\")]\n+#[test]\n+fn test_cursor_mut_insert_after_2() {\n+    let mut map = BTreeMap::from([(1, 'a'), (2, 'b'), (3, 'c')]);\n+    let mut cur = map.upper_bound_mut(Bound::Included(&2));\n+    cur.insert_after(2, 'd');\n+}\n+\n+#[should_panic(expected = \"key must be ordered below the next element\")]\n+#[test]\n+fn test_cursor_mut_insert_after_3() {\n+    let mut map = BTreeMap::from([(1, 'a'), (2, 'b'), (3, 'c')]);\n+    let mut cur = map.upper_bound_mut(Bound::Included(&2));\n+    cur.insert_after(3, 'd');\n+}\n+\n+#[should_panic(expected = \"key must be ordered below the next element\")]\n+#[test]\n+fn test_cursor_mut_insert_after_4() {\n+    let mut map = BTreeMap::from([(1, 'a'), (2, 'b'), (3, 'c')]);\n+    let mut cur = map.upper_bound_mut(Bound::Included(&2));\n+    cur.insert_after(4, 'd');\n+}"}]}