{"sha": "16d290d10c6ded6365ce7de89e6683d530f03485", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2ZDI5MGQxMGM2ZGVkNjM2NWNlN2RlODllNjY4M2Q1MzBmMDM0ODU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-24T23:59:34Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-24T23:59:34Z"}, "message": "rustdoc: Reexport native functions", "tree": {"sha": "00e7c0b20970e70c51953fefbf9f127aa141aefc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00e7c0b20970e70c51953fefbf9f127aa141aefc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16d290d10c6ded6365ce7de89e6683d530f03485", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16d290d10c6ded6365ce7de89e6683d530f03485", "html_url": "https://github.com/rust-lang/rust/commit/16d290d10c6ded6365ce7de89e6683d530f03485", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16d290d10c6ded6365ce7de89e6683d530f03485/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "396540f19d37e4d8ad87a8d9db179c6b05263aff", "url": "https://api.github.com/repos/rust-lang/rust/commits/396540f19d37e4d8ad87a8d9db179c6b05263aff", "html_url": "https://github.com/rust-lang/rust/commit/396540f19d37e4d8ad87a8d9db179c6b05263aff"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "60ff4a7c79857a8488a45bbdabaa41286d3945fa", "filename": "src/rustdoc/reexport_pass.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/16d290d10c6ded6365ce7de89e6683d530f03485/src%2Frustdoc%2Freexport_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16d290d10c6ded6365ce7de89e6683d530f03485/src%2Frustdoc%2Freexport_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Freexport_pass.rs?ref=16d290d10c6ded6365ce7de89e6683d530f03485", "patch": "@@ -104,7 +104,8 @@ fn build_reexport_def_map(\n \n     // FIXME: Do a parallel fold\n     let fold = fold::fold({\n-        fold_mod: fold_mod\n+        fold_mod: fold_mod,\n+        fold_nmod: fold_nmod\n         with *fold::default_seq_fold(ctxt)\n     });\n \n@@ -124,6 +125,19 @@ fn build_reexport_def_map(\n \n         ret doc;\n     }\n+\n+    fn fold_nmod(fold: fold::fold<ctxt>, doc: doc::nmoddoc) -> doc::nmoddoc {\n+        let doc = fold::default_seq_fold_nmod(fold, doc);\n+\n+        for fndoc in doc.fns {\n+            let def_id = ast_util::local_def(fndoc.id());\n+            if fold.ctxt.def_set.contains_key(def_id) {\n+                fold.ctxt.def_map.insert(def_id, doc::fntag(fndoc));\n+            }\n+        }\n+\n+        ret doc;\n+    }\n }\n \n fn build_reexport_path_map(srv: astsrv::srv, -def_map: def_map) -> path_map {\n@@ -298,6 +312,14 @@ fn should_mark_reepxorts_as_such() {\n     assert doc.topmod.mods()[1].fns()[0].item.reexport == true;\n }\n \n+#[test]\n+fn should_duplicate_reexported_native_fns() {\n+    let source = \"native mod a { fn b(); } \\\n+                  mod c { import a::b; export b; }\";\n+    let doc = test::mk_doc(source);\n+    assert doc.topmod.mods()[0].fns()[0].name() == \"b\";\n+}\n+\n #[test]\n fn should_duplicate_multiple_reexported_items() {\n     let source = \"mod a { \\"}]}