{"sha": "aa4999ec6963162c38b74a4d50857d1cf2bfbc26", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhNDk5OWVjNjk2MzE2MmMzOGI3NGE0ZDUwODU3ZDFjZjJiZmJjMjY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-22T04:01:38Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-27T06:39:14Z"}, "message": "parse_angle_arg: parse constraints first", "tree": {"sha": "da856db2daf8072fe056cf8626564702f20a32a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da856db2daf8072fe056cf8626564702f20a32a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa4999ec6963162c38b74a4d50857d1cf2bfbc26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa4999ec6963162c38b74a4d50857d1cf2bfbc26", "html_url": "https://github.com/rust-lang/rust/commit/aa4999ec6963162c38b74a4d50857d1cf2bfbc26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa4999ec6963162c38b74a4d50857d1cf2bfbc26/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abce4881e0553aed7683ed2ade6827b9de9aedaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/abce4881e0553aed7683ed2ade6827b9de9aedaf", "html_url": "https://github.com/rust-lang/rust/commit/abce4881e0553aed7683ed2ade6827b9de9aedaf"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "9018564252464c38b024e8363981b3b61f004c4d", "filename": "src/librustc_parse/parser/path.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/aa4999ec6963162c38b74a4d50857d1cf2bfbc26/src%2Flibrustc_parse%2Fparser%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa4999ec6963162c38b74a4d50857d1cf2bfbc26/src%2Flibrustc_parse%2Fparser%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fpath.rs?ref=aa4999ec6963162c38b74a4d50857d1cf2bfbc26", "patch": "@@ -399,10 +399,7 @@ impl<'a> Parser<'a> {\n \n     /// Parses a single argument in the angle arguments `<...>` of a path segment.\n     fn parse_angle_arg(&mut self) -> PResult<'a, Option<AngleBracketedArg>> {\n-        let arg = if self.check_lifetime() && self.look_ahead(1, |t| !t.is_like_plus()) {\n-            // Parse lifetime argument.\n-            AngleBracketedArg::Arg(GenericArg::Lifetime(self.expect_lifetime()))\n-        } else if self.check_ident()\n+        let arg = if self.check_ident()\n             && self.look_ahead(1, |t| matches!(t.kind, token::Eq | token::Colon))\n         {\n             // Parse associated type constraint.\n@@ -426,6 +423,9 @@ impl<'a> Parser<'a> {\n \n             let constraint = AssocTyConstraint { id: ast::DUMMY_NODE_ID, ident, kind, span };\n             AngleBracketedArg::Constraint(constraint)\n+        } else if self.check_lifetime() && self.look_ahead(1, |t| !t.is_like_plus()) {\n+            // Parse lifetime argument.\n+            AngleBracketedArg::Arg(GenericArg::Lifetime(self.expect_lifetime()))\n         } else if self.check_const_arg() {\n             // Parse const argument.\n             let expr = if let token::OpenDelim(token::Brace) = self.token.kind {"}]}