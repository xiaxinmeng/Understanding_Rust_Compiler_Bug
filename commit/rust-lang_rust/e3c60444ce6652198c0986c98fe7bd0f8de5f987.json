{"sha": "e3c60444ce6652198c0986c98fe7bd0f8de5f987", "node_id": "C_kwDOAAsO6NoAKGUzYzYwNDQ0Y2U2NjUyMTk4YzA5ODZjOThmZTdiZDBmOGRlNWY5ODc", "commit": {"author": {"name": "nixx quality", "email": "nixx@is-fantabulo.us", "date": "2021-12-05T16:33:52Z"}, "committer": {"name": "nixx quality", "email": "nixx@is-fantabulo.us", "date": "2021-12-05T16:33:52Z"}, "message": "fix some false negatives for single_char_pattern", "tree": {"sha": "becb305e73ad52d141985210502f2afeb4262fb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/becb305e73ad52d141985210502f2afeb4262fb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3c60444ce6652198c0986c98fe7bd0f8de5f987", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEDPrAgDZrvxhrA4a/rK+guXX6Y/kFAmGs6fAACgkQrK+guXX6\nY/kZjg/+KlXOm5AZsUkXb9/yERkOd0bSiQNV7KeNstJorDxLe+KXURZ/iTXJ5Up7\nyJQcy4ik+uVm2eyeOXSGeM3elVNvasbDCtETUPhQ0vEu5OSYWIawCPPWqW1SA/wF\nVFBiT4KNniVzVbGtdYlLR9G50y9umvcWD8U1xeJsya0CDb4wYGwL4GJwSYWH1C+t\nY2Oj3dlGJDtWQ6oRZIVFmiWqm5iUTa7f+D+iIcdOmXldKPdH7zIr+kw8P5lwTQ+n\nCw6LjR/YAsFjK2OOaFaDUuoqbRYAuLdk37JuATQp7MBd3pqCBnCBulxHTRKh4H0U\nDsluWmHv4nn0QEXhpTjTPkbXGMP7iWx/sPbfVL13Rri9rjXvSL+/cWDoO0KfspwG\nk2fATx6slAKztx0+wG5EflVckj8donjK9aZQSi6FuH8ZsDrCurd7/mg94UX8sHIl\n9L6s1bGlS1G6uN30dXST0AYLPeDRmuXs0bL1E+zcHTVBx/9X8KcgfhHoa4lMczB0\nV8Qg/OvO7FbJoMc1Lyfkn/KT8msqMyk27o5wBNFkKUlKBb7KaK22HIBTzne5wVZs\n3obEaqpdW011WkgwgGTBMJnlE0RubEfBftc9eno7u1sDSyxw35ZtH5gwuNtBmorK\nrHGeG579BU1iY5hzUSp+CA4dHL94h0HEbnAz43bI8DT5aw5ve/8=\n=+sk2\n-----END PGP SIGNATURE-----", "payload": "tree becb305e73ad52d141985210502f2afeb4262fb6\nparent 907f6d929487168da2ad2e86b1c25f9ef35ef8c6\nauthor nixx quality <nixx@is-fantabulo.us> 1638722032 +0100\ncommitter nixx quality <nixx@is-fantabulo.us> 1638722032 +0100\n\nfix some false negatives for single_char_pattern\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3c60444ce6652198c0986c98fe7bd0f8de5f987", "html_url": "https://github.com/rust-lang/rust/commit/e3c60444ce6652198c0986c98fe7bd0f8de5f987", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3c60444ce6652198c0986c98fe7bd0f8de5f987/comments", "author": {"login": "nixxquality", "id": 2478713, "node_id": "MDQ6VXNlcjI0Nzg3MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2478713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nixxquality", "html_url": "https://github.com/nixxquality", "followers_url": "https://api.github.com/users/nixxquality/followers", "following_url": "https://api.github.com/users/nixxquality/following{/other_user}", "gists_url": "https://api.github.com/users/nixxquality/gists{/gist_id}", "starred_url": "https://api.github.com/users/nixxquality/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nixxquality/subscriptions", "organizations_url": "https://api.github.com/users/nixxquality/orgs", "repos_url": "https://api.github.com/users/nixxquality/repos", "events_url": "https://api.github.com/users/nixxquality/events{/privacy}", "received_events_url": "https://api.github.com/users/nixxquality/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nixxquality", "id": 2478713, "node_id": "MDQ6VXNlcjI0Nzg3MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2478713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nixxquality", "html_url": "https://github.com/nixxquality", "followers_url": "https://api.github.com/users/nixxquality/followers", "following_url": "https://api.github.com/users/nixxquality/following{/other_user}", "gists_url": "https://api.github.com/users/nixxquality/gists{/gist_id}", "starred_url": "https://api.github.com/users/nixxquality/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nixxquality/subscriptions", "organizations_url": "https://api.github.com/users/nixxquality/orgs", "repos_url": "https://api.github.com/users/nixxquality/repos", "events_url": "https://api.github.com/users/nixxquality/events{/privacy}", "received_events_url": "https://api.github.com/users/nixxquality/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "907f6d929487168da2ad2e86b1c25f9ef35ef8c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/907f6d929487168da2ad2e86b1c25f9ef35ef8c6", "html_url": "https://github.com/rust-lang/rust/commit/907f6d929487168da2ad2e86b1c25f9ef35ef8c6"}], "stats": {"total": 115, "additions": 80, "deletions": 35}, "files": [{"sha": "bf9006c690621031f1056c6ee0ac8efb45577d39", "filename": "clippy_lints/src/methods/single_char_pattern.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e3c60444ce6652198c0986c98fe7bd0f8de5f987/clippy_lints%2Fsrc%2Fmethods%2Fsingle_char_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3c60444ce6652198c0986c98fe7bd0f8de5f987/clippy_lints%2Fsrc%2Fmethods%2Fsingle_char_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fsingle_char_pattern.rs?ref=e3c60444ce6652198c0986c98fe7bd0f8de5f987", "patch": "@@ -9,18 +9,21 @@ use rustc_span::symbol::Symbol;\n \n use super::SINGLE_CHAR_PATTERN;\n \n-const PATTERN_METHODS: [(&str, usize); 19] = [\n+const PATTERN_METHODS: [(&str, usize); 24] = [\n     (\"contains\", 1),\n     (\"starts_with\", 1),\n     (\"ends_with\", 1),\n     (\"find\", 1),\n     (\"rfind\", 1),\n     (\"split\", 1),\n+    (\"split_inclusive\", 1),\n     (\"rsplit\", 1),\n     (\"split_terminator\", 1),\n     (\"rsplit_terminator\", 1),\n     (\"splitn\", 2),\n     (\"rsplitn\", 2),\n+    (\"split_once\", 1),\n+    (\"rsplit_once\", 1),\n     (\"matches\", 1),\n     (\"rmatches\", 1),\n     (\"match_indices\", 1),\n@@ -29,6 +32,8 @@ const PATTERN_METHODS: [(&str, usize); 19] = [\n     (\"strip_suffix\", 1),\n     (\"trim_start_matches\", 1),\n     (\"trim_end_matches\", 1),\n+    (\"replace\", 1),\n+    (\"replacen\", 1),\n ];\n \n /// lint for length-1 `str`s for methods in `PATTERN_METHODS`"}, {"sha": "68e26726724b808425a6b53754bfa1d0047d4027", "filename": "tests/ui/single_char_pattern.fixed", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e3c60444ce6652198c0986c98fe7bd0f8de5f987/tests%2Fui%2Fsingle_char_pattern.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e3c60444ce6652198c0986c98fe7bd0f8de5f987/tests%2Fui%2Fsingle_char_pattern.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.fixed?ref=e3c60444ce6652198c0986c98fe7bd0f8de5f987", "patch": "@@ -17,6 +17,7 @@ fn main() {\n     x.split('\ud83d\udca3');\n     // Can't use this lint for unicode code points which don't fit in a char\n     x.split(\"\u2764\ufe0f\");\n+    x.split_inclusive('x');\n     x.contains('x');\n     x.starts_with('x');\n     x.ends_with('x');\n@@ -27,6 +28,8 @@ fn main() {\n     x.rsplit_terminator('x');\n     x.splitn(2, 'x');\n     x.rsplitn(2, 'x');\n+    x.split_once('x');\n+    x.rsplit_once('x');\n     x.matches('x');\n     x.rmatches('x');\n     x.match_indices('x');\n@@ -35,6 +38,8 @@ fn main() {\n     x.trim_end_matches('x');\n     x.strip_prefix('x');\n     x.strip_suffix('x');\n+    x.replace('x', \"y\");\n+    x.replacen('x', \"y\", 3);\n     // Make sure we escape characters correctly.\n     x.split('\\n');\n     x.split('\\'');\n@@ -43,7 +48,7 @@ fn main() {\n     let h = HashSet::<String>::new();\n     h.contains(\"X\"); // should not warn\n \n-    x.replace(\";\", \",\").split(','); // issue #2978\n+    x.replace(';', \",\").split(','); // issue #2978\n     x.starts_with('\\x03'); // issue #2996\n \n     // Issue #3204"}, {"sha": "186202d78ec5aeae404064521c87393bb897857b", "filename": "tests/ui/single_char_pattern.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e3c60444ce6652198c0986c98fe7bd0f8de5f987/tests%2Fui%2Fsingle_char_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3c60444ce6652198c0986c98fe7bd0f8de5f987/tests%2Fui%2Fsingle_char_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.rs?ref=e3c60444ce6652198c0986c98fe7bd0f8de5f987", "patch": "@@ -17,6 +17,7 @@ fn main() {\n     x.split(\"\ud83d\udca3\");\n     // Can't use this lint for unicode code points which don't fit in a char\n     x.split(\"\u2764\ufe0f\");\n+    x.split_inclusive(\"x\");\n     x.contains(\"x\");\n     x.starts_with(\"x\");\n     x.ends_with(\"x\");\n@@ -27,6 +28,8 @@ fn main() {\n     x.rsplit_terminator(\"x\");\n     x.splitn(2, \"x\");\n     x.rsplitn(2, \"x\");\n+    x.split_once(\"x\");\n+    x.rsplit_once(\"x\");\n     x.matches(\"x\");\n     x.rmatches(\"x\");\n     x.match_indices(\"x\");\n@@ -35,6 +38,8 @@ fn main() {\n     x.trim_end_matches(\"x\");\n     x.strip_prefix(\"x\");\n     x.strip_suffix(\"x\");\n+    x.replace(\"x\", \"y\");\n+    x.replacen(\"x\", \"y\", 3);\n     // Make sure we escape characters correctly.\n     x.split(\"\\n\");\n     x.split(\"'\");\n@@ -43,7 +48,7 @@ fn main() {\n     let h = HashSet::<String>::new();\n     h.contains(\"X\"); // should not warn\n \n-    x.replace(\";\", \",\").split(\",\"); // issue #2978\n+    x.replace(';', \",\").split(\",\"); // issue #2978\n     x.starts_with(\"\\x03\"); // issue #2996\n \n     // Issue #3204"}, {"sha": "5564aac674d97624d1655857035c88163df88fd0", "filename": "tests/ui/single_char_pattern.stderr", "status": "modified", "additions": 62, "deletions": 32, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/e3c60444ce6652198c0986c98fe7bd0f8de5f987/tests%2Fui%2Fsingle_char_pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e3c60444ce6652198c0986c98fe7bd0f8de5f987/tests%2Fui%2Fsingle_char_pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.stderr?ref=e3c60444ce6652198c0986c98fe7bd0f8de5f987", "patch": "@@ -25,184 +25,214 @@ LL |     x.split(\"\ud83d\udca3\");\n    |             ^^^^ help: try using a `char` instead: `'\ud83d\udca3'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:20:16\n+  --> $DIR/single_char_pattern.rs:20:23\n+   |\n+LL |     x.split_inclusive(\"x\");\n+   |                       ^^^ help: try using a `char` instead: `'x'`\n+\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:21:16\n    |\n LL |     x.contains(\"x\");\n    |                ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:21:19\n+  --> $DIR/single_char_pattern.rs:22:19\n    |\n LL |     x.starts_with(\"x\");\n    |                   ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:22:17\n+  --> $DIR/single_char_pattern.rs:23:17\n    |\n LL |     x.ends_with(\"x\");\n    |                 ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:23:12\n+  --> $DIR/single_char_pattern.rs:24:12\n    |\n LL |     x.find(\"x\");\n    |            ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:24:13\n+  --> $DIR/single_char_pattern.rs:25:13\n    |\n LL |     x.rfind(\"x\");\n    |             ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:25:14\n+  --> $DIR/single_char_pattern.rs:26:14\n    |\n LL |     x.rsplit(\"x\");\n    |              ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:26:24\n+  --> $DIR/single_char_pattern.rs:27:24\n    |\n LL |     x.split_terminator(\"x\");\n    |                        ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:27:25\n+  --> $DIR/single_char_pattern.rs:28:25\n    |\n LL |     x.rsplit_terminator(\"x\");\n    |                         ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:28:17\n+  --> $DIR/single_char_pattern.rs:29:17\n    |\n LL |     x.splitn(2, \"x\");\n    |                 ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:29:18\n+  --> $DIR/single_char_pattern.rs:30:18\n    |\n LL |     x.rsplitn(2, \"x\");\n    |                  ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:30:15\n+  --> $DIR/single_char_pattern.rs:31:18\n+   |\n+LL |     x.split_once(\"x\");\n+   |                  ^^^ help: try using a `char` instead: `'x'`\n+\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:32:19\n+   |\n+LL |     x.rsplit_once(\"x\");\n+   |                   ^^^ help: try using a `char` instead: `'x'`\n+\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:33:15\n    |\n LL |     x.matches(\"x\");\n    |               ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:31:16\n+  --> $DIR/single_char_pattern.rs:34:16\n    |\n LL |     x.rmatches(\"x\");\n    |                ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:32:21\n+  --> $DIR/single_char_pattern.rs:35:21\n    |\n LL |     x.match_indices(\"x\");\n    |                     ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:33:22\n+  --> $DIR/single_char_pattern.rs:36:22\n    |\n LL |     x.rmatch_indices(\"x\");\n    |                      ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:34:26\n+  --> $DIR/single_char_pattern.rs:37:26\n    |\n LL |     x.trim_start_matches(\"x\");\n    |                          ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:35:24\n+  --> $DIR/single_char_pattern.rs:38:24\n    |\n LL |     x.trim_end_matches(\"x\");\n    |                        ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:36:20\n+  --> $DIR/single_char_pattern.rs:39:20\n    |\n LL |     x.strip_prefix(\"x\");\n    |                    ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:37:20\n+  --> $DIR/single_char_pattern.rs:40:20\n    |\n LL |     x.strip_suffix(\"x\");\n    |                    ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:39:13\n+  --> $DIR/single_char_pattern.rs:41:15\n+   |\n+LL |     x.replace(\"x\", \"y\");\n+   |               ^^^ help: try using a `char` instead: `'x'`\n+\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:42:16\n+   |\n+LL |     x.replacen(\"x\", \"y\", 3);\n+   |                ^^^ help: try using a `char` instead: `'x'`\n+\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:44:13\n    |\n LL |     x.split(\"/n\");\n    |             ^^^^ help: try using a `char` instead: `'/n'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:40:13\n+  --> $DIR/single_char_pattern.rs:45:13\n    |\n LL |     x.split(\"'\");\n    |             ^^^ help: try using a `char` instead: `'/''`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:41:13\n+  --> $DIR/single_char_pattern.rs:46:13\n    |\n LL |     x.split(\"/'\");\n    |             ^^^^ help: try using a `char` instead: `'/''`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:46:31\n+  --> $DIR/single_char_pattern.rs:51:31\n    |\n-LL |     x.replace(\";\", \",\").split(\",\"); // issue #2978\n+LL |     x.replace(';', \",\").split(\",\"); // issue #2978\n    |                               ^^^ help: try using a `char` instead: `','`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:47:19\n+  --> $DIR/single_char_pattern.rs:52:19\n    |\n LL |     x.starts_with(\"/x03\"); // issue #2996\n    |                   ^^^^^^ help: try using a `char` instead: `'/x03'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:54:13\n+  --> $DIR/single_char_pattern.rs:59:13\n    |\n LL |     x.split(r\"a\");\n    |             ^^^^ help: try using a `char` instead: `'a'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:55:13\n+  --> $DIR/single_char_pattern.rs:60:13\n    |\n LL |     x.split(r#\"a\"#);\n    |             ^^^^^^ help: try using a `char` instead: `'a'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:56:13\n+  --> $DIR/single_char_pattern.rs:61:13\n    |\n LL |     x.split(r###\"a\"###);\n    |             ^^^^^^^^^^ help: try using a `char` instead: `'a'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:57:13\n+  --> $DIR/single_char_pattern.rs:62:13\n    |\n LL |     x.split(r###\"'\"###);\n    |             ^^^^^^^^^^ help: try using a `char` instead: `'/''`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:58:13\n+  --> $DIR/single_char_pattern.rs:63:13\n    |\n LL |     x.split(r###\"#\"###);\n    |             ^^^^^^^^^^ help: try using a `char` instead: `'#'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:60:13\n+  --> $DIR/single_char_pattern.rs:65:13\n    |\n LL |     x.split(r#\"/\"#);\n    |             ^^^^^^ help: try using a `char` instead: `'/'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:61:13\n+  --> $DIR/single_char_pattern.rs:66:13\n    |\n LL |     x.split(r\"/\");\n    |             ^^^^ help: try using a `char` instead: `'/'`\n \n-error: aborting due to 34 previous errors\n+error: aborting due to 39 previous errors\n "}]}