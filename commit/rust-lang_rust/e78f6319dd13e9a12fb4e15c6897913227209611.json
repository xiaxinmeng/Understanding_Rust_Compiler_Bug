{"sha": "e78f6319dd13e9a12fb4e15c6897913227209611", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3OGY2MzE5ZGQxM2U5YTEyZmI0ZTE1YzY4OTc5MTMyMjcyMDk2MTE=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-04-06T13:17:35Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-04-06T13:17:35Z"}, "message": "Fix diverging closures", "tree": {"sha": "cb6fdf33a172261c3da45ab1c32c8a0757f162a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb6fdf33a172261c3da45ab1c32c8a0757f162a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e78f6319dd13e9a12fb4e15c6897913227209611", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e78f6319dd13e9a12fb4e15c6897913227209611", "html_url": "https://github.com/rust-lang/rust/commit/e78f6319dd13e9a12fb4e15c6897913227209611", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e78f6319dd13e9a12fb4e15c6897913227209611/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1169693f03d73e422866d9c412328a031ed0e4df", "url": "https://api.github.com/repos/rust-lang/rust/commits/1169693f03d73e422866d9c412328a031ed0e4df", "html_url": "https://github.com/rust-lang/rust/commit/1169693f03d73e422866d9c412328a031ed0e4df"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "a8a1ce28067672639a689087d928a712aa6b6734", "filename": "src/librustc/middle/traits/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e78f6319dd13e9a12fb4e15c6897913227209611/src%2Flibrustc%2Fmiddle%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e78f6319dd13e9a12fb4e15c6897913227209611/src%2Flibrustc%2Fmiddle%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Futil.rs?ref=e78f6319dd13e9a12fb4e15c6897913227209611", "patch": "@@ -506,7 +506,7 @@ pub fn closure_trait_ref_and_return_type<'tcx>(\n         def_id: fn_trait_def_id,\n         substs: tcx.mk_substs(trait_substs),\n     });\n-    ty::Binder((trait_ref, sig.0.output.unwrap()))\n+    ty::Binder((trait_ref, sig.0.output.unwrap_or(ty::mk_nil(tcx))))\n }\n \n impl<'tcx,O:Repr<'tcx>> Repr<'tcx> for super::Obligation<'tcx, O> {"}, {"sha": "6f213b5713457c744421e94bb0274d853e13ac4a", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e78f6319dd13e9a12fb4e15c6897913227209611/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e78f6319dd13e9a12fb4e15c6897913227209611/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=e78f6319dd13e9a12fb4e15c6897913227209611", "patch": "@@ -1092,6 +1092,13 @@ impl<'tcx> FnOutput<'tcx> {\n             ty::FnDiverging => unreachable!()\n         }\n     }\n+\n+    pub fn unwrap_or(self, def: Ty<'tcx>) -> Ty<'tcx> {\n+        match self {\n+            ty::FnConverging(t) => t,\n+            ty::FnDiverging => def\n+        }\n+    }\n }\n \n pub type PolyFnOutput<'tcx> = Binder<FnOutput<'tcx>>;"}, {"sha": "f54c0b7f8c4a48ae1542056653f0a036bbd0d8bc", "filename": "src/librustc_typeck/check/callee.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e78f6319dd13e9a12fb4e15c6897913227209611/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e78f6319dd13e9a12fb4e15c6897913227209611/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs?ref=e78f6319dd13e9a12fb4e15c6897913227209611", "patch": "@@ -387,10 +387,11 @@ impl<'tcx> DeferredCallResolution<'tcx> for CallResolution<'tcx> {\n                     demand::eqtype(fcx, self.call_expr.span, self_arg_ty, method_arg_ty);\n                 }\n \n+                let nilty = ty::mk_nil(fcx.tcx());\n                 demand::eqtype(fcx,\n                                self.call_expr.span,\n-                               method_sig.output.unwrap(),\n-                               self.fn_sig.output.unwrap());\n+                               method_sig.output.unwrap_or(nilty),\n+                               self.fn_sig.output.unwrap_or(nilty));\n \n                 write_overloaded_call_method_map(fcx, self.call_expr, method_callee);\n             }"}, {"sha": "6b98e0397b5a3a181c570f6532145e4627372ac3", "filename": "src/test/run-fail/diverging-closure.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e78f6319dd13e9a12fb4e15c6897913227209611/src%2Ftest%2Frun-fail%2Fdiverging-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e78f6319dd13e9a12fb4e15c6897913227209611/src%2Ftest%2Frun-fail%2Fdiverging-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fdiverging-closure.rs?ref=e78f6319dd13e9a12fb4e15c6897913227209611", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// error-pattern:oops\n+\n+fn main() {\n+    let func = || -> ! {\n+        panic!(\"oops\");\n+    };\n+    func();\n+}"}]}