{"sha": "40800cfa197100f45419586fbdc622d17ea47b7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwODAwY2ZhMTk3MTAwZjQ1NDE5NTg2ZmJkYzYyMmQxN2VhNDdiN2Y=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-05T10:19:54Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-05T10:19:54Z"}, "message": "make sure we check the size of all arguments", "tree": {"sha": "2aadd626c80242d4706a878428cb05df15d149f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2aadd626c80242d4706a878428cb05df15d149f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40800cfa197100f45419586fbdc622d17ea47b7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40800cfa197100f45419586fbdc622d17ea47b7f", "html_url": "https://github.com/rust-lang/rust/commit/40800cfa197100f45419586fbdc622d17ea47b7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40800cfa197100f45419586fbdc622d17ea47b7f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5656cb73d45c6403c3e3ba2be0283b1779365ecb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5656cb73d45c6403c3e3ba2be0283b1779365ecb", "html_url": "https://github.com/rust-lang/rust/commit/5656cb73d45c6403c3e3ba2be0283b1779365ecb"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "951a40293b72d834615b25b5e03f8808b3a4bc9f", "filename": "src/shims/foreign_items/posix.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/40800cfa197100f45419586fbdc622d17ea47b7f/src%2Fshims%2Fforeign_items%2Fposix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40800cfa197100f45419586fbdc622d17ea47b7f/src%2Fshims%2Fforeign_items%2Fposix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fposix.rs?ref=40800cfa197100f45419586fbdc622d17ea47b7f", "patch": "@@ -34,7 +34,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.write_scalar(Scalar::from_i32(result), dest)?;\n             }\n             \"setenv\" => {\n-                let &[name, value, _overwrite] = check_arg_count(args)?;\n+                let &[name, value, overwrite] = check_arg_count(args)?;\n+                this.read_scalar(overwrite)?.to_i32()?;\n                 let result = this.setenv(name, value)?;\n                 this.write_scalar(Scalar::from_i32(result), dest)?;\n             }\n@@ -51,8 +52,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n             // File related shims\n             \"open\" | \"open64\" => {\n-                let &[path, flag, _mode] = check_arg_count(args)?;\n-                let result = this.open(path, flag)?;\n+                let &[path, flag, mode] = check_arg_count(args)?;\n+                let result = this.open(path, flag, mode)?;\n                 this.write_scalar(Scalar::from_i32(result), dest)?;\n             }\n             \"fcntl\" => {"}, {"sha": "7f3cd03cd2d36fcf841e142f889eac1b0c38fd9a", "filename": "src/shims/foreign_items/windows.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/40800cfa197100f45419586fbdc622d17ea47b7f/src%2Fshims%2Fforeign_items%2Fwindows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40800cfa197100f45419586fbdc622d17ea47b7f/src%2Fshims%2Fforeign_items%2Fwindows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fwindows.rs?ref=40800cfa197100f45419586fbdc622d17ea47b7f", "patch": "@@ -63,7 +63,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.write_scalar(Scalar::from_machine_isize(which.into(), this), dest)?;\n             }\n             \"WriteFile\" => {\n-                let &[handle, buf, n, written_ptr, _overlapped] = check_arg_count(args)?;\n+                let &[handle, buf, n, written_ptr, overlapped] = check_arg_count(args)?;\n+                this.read_scalar(overlapped)?.to_machine_usize(this)?; // this is a poiner, that we ignore\n                 let handle = this.read_scalar(handle)?.to_machine_isize(this)?;\n                 let buf = this.read_scalar(buf)?.not_undef()?;\n                 let n = this.read_scalar(n)?.to_u32()?;"}, {"sha": "58abf748dd5a86179edd5615abde96ef0f630657", "filename": "src/shims/fs.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/40800cfa197100f45419586fbdc622d17ea47b7f/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40800cfa197100f45419586fbdc622d17ea47b7f/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=40800cfa197100f45419586fbdc622d17ea47b7f", "patch": "@@ -238,13 +238,27 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         &mut self,\n         path_op: OpTy<'tcx, Tag>,\n         flag_op: OpTy<'tcx, Tag>,\n+        mode_op: OpTy<'tcx, Tag>,\n     ) -> InterpResult<'tcx, i32> {\n         let this = self.eval_context_mut();\n \n         this.check_no_isolation(\"open\")?;\n \n         let flag = this.read_scalar(flag_op)?.to_i32()?;\n \n+        // Check mode (size depends on platform).\n+        // FIXME: should we do something with the mode?\n+        match this.tcx.sess.target.target.target_os.as_str() {\n+            \"macos\" => {\n+                // FIXME: I think `mode` should be `u16` on macOS, but see\n+                // <https://github.com/rust-lang/rust/issues/71915>.\n+                // For now, just don't check on macos.\n+            }\n+            _ => {\n+                this.read_scalar(mode_op)?.to_u32()?;\n+            }\n+        };\n+\n         let mut options = OpenOptions::new();\n \n         let o_rdonly = this.eval_libc_i32(\"O_RDONLY\")?;"}]}