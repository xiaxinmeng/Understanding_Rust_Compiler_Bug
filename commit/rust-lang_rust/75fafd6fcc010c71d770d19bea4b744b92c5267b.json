{"sha": "75fafd6fcc010c71d770d19bea4b744b92c5267b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1ZmFmZDZmY2MwMTBjNzFkNzcwZDE5YmVhNGI3NDRiOTJjNTI2N2I=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-16T14:28:02Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-16T14:28:02Z"}, "message": "Add new_source_root meta to test fixtures", "tree": {"sha": "8a2426ff2bb880689a331203346c5dc2229fbb37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a2426ff2bb880689a331203346c5dc2229fbb37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75fafd6fcc010c71d770d19bea4b744b92c5267b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75fafd6fcc010c71d770d19bea4b744b92c5267b", "html_url": "https://github.com/rust-lang/rust/commit/75fafd6fcc010c71d770d19bea4b744b92c5267b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75fafd6fcc010c71d770d19bea4b744b92c5267b/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e97cd709cd91ccfafbd45bab8b2bf01f3ddf6a04", "url": "https://api.github.com/repos/rust-lang/rust/commits/e97cd709cd91ccfafbd45bab8b2bf01f3ddf6a04", "html_url": "https://github.com/rust-lang/rust/commit/e97cd709cd91ccfafbd45bab8b2bf01f3ddf6a04"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "cad6866aa3bacad6232e4cef965647beca4a10b2", "filename": "crates/base_db/src/fixture.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/75fafd6fcc010c71d770d19bea4b744b92c5267b/crates%2Fbase_db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75fafd6fcc010c71d770d19bea4b744b92c5267b/crates%2Fbase_db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Ffixture.rs?ref=75fafd6fcc010c71d770d19bea4b744b92c5267b", "patch": "@@ -57,7 +57,7 @@\n //! fn insert_source_code_here() {}\n //! \"\n //! ```\n-use std::{str::FromStr, sync::Arc};\n+use std::{mem, str::FromStr, sync::Arc};\n \n use cfg::CfgOptions;\n use rustc_hash::FxHashMap;\n@@ -148,6 +148,7 @@ impl ChangeFixture {\n         let mut file_set = FileSet::default();\n         let source_root_prefix = \"/\".to_string();\n         let mut file_id = FileId(0);\n+        let mut roots = Vec::new();\n \n         let mut file_position = None;\n \n@@ -168,6 +169,10 @@ impl ChangeFixture {\n             let meta = FileMeta::from(entry);\n             assert!(meta.path.starts_with(&source_root_prefix));\n \n+            if meta.introduce_new_source_root {\n+                roots.push(SourceRoot::new_local(mem::take(&mut file_set)));\n+            }\n+\n             if let Some(krate) = meta.krate {\n                 let crate_name = CrateName::normalize_dashes(&krate);\n                 let crate_id = crate_graph.add_crate_root(\n@@ -215,7 +220,8 @@ impl ChangeFixture {\n             }\n         }\n \n-        change.set_roots(vec![SourceRoot::new_local(file_set)]);\n+        roots.push(SourceRoot::new_local(mem::take(&mut file_set)));\n+        change.set_roots(roots);\n         change.set_crate_graph(crate_graph);\n \n         ChangeFixture { file_position, files, change }\n@@ -229,6 +235,7 @@ struct FileMeta {\n     cfg: CfgOptions,\n     edition: Edition,\n     env: Env,\n+    introduce_new_source_root: bool,\n }\n \n impl From<Fixture> for FileMeta {\n@@ -247,6 +254,7 @@ impl From<Fixture> for FileMeta {\n                 .as_ref()\n                 .map_or(Edition::Edition2018, |v| Edition::from_str(&v).unwrap()),\n             env: f.env.into_iter().collect(),\n+            introduce_new_source_root: f.introduce_new_source_root,\n         }\n     }\n }"}, {"sha": "e10a3ccf79e7810a68358736bc2a8a66a2e2f479", "filename": "crates/ide/src/references.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/75fafd6fcc010c71d770d19bea4b744b92c5267b/crates%2Fide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75fafd6fcc010c71d770d19bea4b744b92c5267b/crates%2Fide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences.rs?ref=75fafd6fcc010c71d770d19bea4b744b92c5267b", "patch": "@@ -1275,13 +1275,13 @@ fn foo(_: bool) -> bo$0ol { true }\n     fn test_transitive() {\n         check(\n             r#\"\n-//- /level3/level3.rs crate:level3\n+//- /level3.rs new_source_root: crate:level3\n pub struct Fo$0o;\n-//- /level2/level2.rs crate:level2 deps:level3\n+//- /level2.rs new_source_root: crate:level2 deps:level3\n pub use level3::Foo;\n-//- /level1/level1.rs crate:level1 deps:level2\n+//- /level1.rs new_source_root: crate:level1 deps:level2\n pub use level2::Foo;\n-//- /level0/level0.rs crate:level0 deps:level1\n+//- /level0.rs new_source_root: crate:level0 deps:level1\n pub use level1::Foo;\n \"#,\n             expect![[r#\""}, {"sha": "6bc824e9437b93dc099593ff20f29523e6965c02", "filename": "crates/test_utils/src/fixture.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/75fafd6fcc010c71d770d19bea4b744b92c5267b/crates%2Ftest_utils%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75fafd6fcc010c71d770d19bea4b744b92c5267b/crates%2Ftest_utils%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Ffixture.rs?ref=75fafd6fcc010c71d770d19bea4b744b92c5267b", "patch": "@@ -14,6 +14,7 @@ pub struct Fixture {\n     pub cfg_key_values: Vec<(String, String)>,\n     pub edition: Option<String>,\n     pub env: FxHashMap<String, String>,\n+    pub introduce_new_source_root: bool,\n }\n \n impl Fixture {\n@@ -70,6 +71,7 @@ impl Fixture {\n         let mut cfg_atoms = Vec::new();\n         let mut cfg_key_values = Vec::new();\n         let mut env = FxHashMap::default();\n+        let mut introduce_new_source_root = false;\n         for component in components[1..].iter() {\n             let (key, value) = split_once(component, ':').unwrap();\n             match key {\n@@ -91,11 +93,22 @@ impl Fixture {\n                         }\n                     }\n                 }\n+                \"new_source_root\" => introduce_new_source_root = true,\n                 _ => panic!(\"bad component: {:?}\", component),\n             }\n         }\n \n-        Fixture { path, text: String::new(), krate, deps, cfg_atoms, cfg_key_values, edition, env }\n+        Fixture {\n+            path,\n+            text: String::new(),\n+            krate,\n+            deps,\n+            cfg_atoms,\n+            cfg_key_values,\n+            edition,\n+            env,\n+            introduce_new_source_root,\n+        }\n     }\n }\n "}]}