{"sha": "c1c867506b69410f6c92ddbe2d7c6b81ab9974ab", "node_id": "C_kwDOAAsO6NoAKGMxYzg2NzUwNmI2OTQxMGY2YzkyZGRiZTJkN2M2YjgxYWI5OTc0YWI", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-05-26T17:14:06Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-05-31T16:21:57Z"}, "message": "Add `Expr::Underscore`", "tree": {"sha": "0ea2ef2f2333e2f4172dab60da686d2fcfa8cadb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ea2ef2f2333e2f4172dab60da686d2fcfa8cadb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1c867506b69410f6c92ddbe2d7c6b81ab9974ab", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmKWQKUACgkQ4laYqTBY\nYXGGnQ/9HKREJ1l5wxOEE6erVGTuBVjMhjGS0pyy7QPbg1nQft9pu9vIfcpnu4oo\nGL3tOhAZCCsVd/nt+4FGp97gd5xeOaAGMwM2rC4qymK5dfp+3+UWq85ybK8eTh1s\nvQrjRt90vPv8s67Z2rJVr4itQZIfwy02xZf6fNPYiyek9IS9ME/X9ZgWz5JqjdQU\nb4Molhir3TB4ID7LogszN5W7ZanqS8MDvl7Q6qQWirBg4ljgHkaqeCqJvrzPkQAn\nkSt3wvNlbvahnVi9uWjhPqBHdcrHG7hcUsFPkqaXpQeBRvIgfc6l0zraCX4TQrRS\nyuanTPAX5CW99EVWcTrSxX6Mkm21lszQ9uk58Y+q53K+jvtGpL51neWp7hYxmdMR\nalQrEirYoafcLKIFMn2wElk+KqPKPhr7FJc9+jQwQPBrwnLFUC231hsF3XoTJaRx\n0yG5JMGQWy6AP614aXzzy8RMNBCgU9xvCUFFgZ61/loNDvIaAoKqjGfzSTEwEn63\nBfWEYaAQlKW2+HOGxdU5I5hN2kfN/T4TBE4mxI3RzntFwRL0fdBfoNQcyu240Oqk\nIhjmY4ZHTV7bMR6V0Lpvb+G6Ti8DjS+oAzzTbbxXLvehu7HTyTCAIZSsoILNbIcm\nWBcD/CVSbrJ7ohrrxJ2VhbPUBwwvYa02dmf3IFJn5pzbgA4rXok=\n=P4fV\n-----END PGP SIGNATURE-----", "payload": "tree 0ea2ef2f2333e2f4172dab60da686d2fcfa8cadb\nparent e10799536a22a777891f5a971626e79c17097f9e\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1653585246 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1654014117 +0900\n\nAdd `Expr::Underscore`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1c867506b69410f6c92ddbe2d7c6b81ab9974ab", "html_url": "https://github.com/rust-lang/rust/commit/c1c867506b69410f6c92ddbe2d7c6b81ab9974ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1c867506b69410f6c92ddbe2d7c6b81ab9974ab/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e10799536a22a777891f5a971626e79c17097f9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e10799536a22a777891f5a971626e79c17097f9e", "html_url": "https://github.com/rust-lang/rust/commit/e10799536a22a777891f5a971626e79c17097f9e"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "cf20ad7139bd2cfb0c64e307a9901578db28f8b9", "filename": "crates/hir-def/src/body/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1c867506b69410f6c92ddbe2d7c6b81ab9974ab/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1c867506b69410f6c92ddbe2d7c6b81ab9974ab/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs?ref=c1c867506b69410f6c92ddbe2d7c6b81ab9974ab", "patch": "@@ -536,7 +536,7 @@ impl ExprCollector<'_> {\n \n                 self.alloc_expr(Expr::MacroStmts { tail }, syntax_ptr)\n             }\n-            ast::Expr::UnderscoreExpr(_) => return None,\n+            ast::Expr::UnderscoreExpr(_) => self.alloc_expr(Expr::Underscore, syntax_ptr),\n         })\n     }\n "}, {"sha": "49b7ef451eda2a6167f4903c4e8936eb4671e1dd", "filename": "crates/hir-def/src/expr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1c867506b69410f6c92ddbe2d7c6b81ab9974ab/crates%2Fhir-def%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1c867506b69410f6c92ddbe2d7c6b81ab9974ab/crates%2Fhir-def%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fexpr.rs?ref=c1c867506b69410f6c92ddbe2d7c6b81ab9974ab", "patch": "@@ -203,6 +203,7 @@ pub enum Expr {\n     },\n     Array(Array),\n     Literal(Literal),\n+    Underscore,\n }\n \n #[derive(Debug, Clone, Eq, PartialEq)]\n@@ -345,6 +346,7 @@ impl Expr {\n             },\n             Expr::MacroStmts { tail } => f(*tail),\n             Expr::Literal(_) => {}\n+            Expr::Underscore => {}\n         }\n     }\n }"}, {"sha": "4d4d187fe8a22e6e83c8c8c42b1abaee811a9270", "filename": "crates/hir-ty/src/infer/expr.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c1c867506b69410f6c92ddbe2d7c6b81ab9974ab/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1c867506b69410f6c92ddbe2d7c6b81ab9974ab/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs?ref=c1c867506b69410f6c92ddbe2d7c6b81ab9974ab", "patch": "@@ -775,6 +775,12 @@ impl<'a> InferenceContext<'a> {\n                 },\n             },\n             Expr::MacroStmts { tail } => self.infer_expr_inner(*tail, expected),\n+            Expr::Underscore => {\n+                // Underscore expressions may only appear in assignee expressions,\n+                // which are handled by `infer_assignee_expr()`, so any underscore\n+                // expression reaching this branch is an error.\n+                self.err_ty()\n+            }\n         };\n         // use a new type variable if we got unknown here\n         let ty = self.insert_type_vars_shallow(ty);"}]}