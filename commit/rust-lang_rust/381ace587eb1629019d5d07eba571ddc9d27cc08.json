{"sha": "381ace587eb1629019d5d07eba571ddc9d27cc08", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MWFjZTU4N2ViMTYyOTAxOWQ1ZDA3ZWJhNTcxZGRjOWQyN2NjMDg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-05T17:38:52Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-05T17:38:52Z"}, "message": "Add with_use_tree", "tree": {"sha": "37b65e35065f60a68e08bbfc9aa52e618e8aacad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37b65e35065f60a68e08bbfc9aa52e618e8aacad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/381ace587eb1629019d5d07eba571ddc9d27cc08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/381ace587eb1629019d5d07eba571ddc9d27cc08", "html_url": "https://github.com/rust-lang/rust/commit/381ace587eb1629019d5d07eba571ddc9d27cc08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/381ace587eb1629019d5d07eba571ddc9d27cc08/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc4d0a7768c95ba50a224cab401b3a04501463d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc4d0a7768c95ba50a224cab401b3a04501463d3", "html_url": "https://github.com/rust-lang/rust/commit/fc4d0a7768c95ba50a224cab401b3a04501463d3"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "1858e2b6c17e7d52d03219d298d18055ddd85c19", "filename": "crates/ra_syntax/src/ast/edit.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/381ace587eb1629019d5d07eba571ddc9d27cc08/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/381ace587eb1629019d5d07eba571ddc9d27cc08/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs?ref=381ace587eb1629019d5d07eba571ddc9d27cc08", "patch": "@@ -249,6 +249,16 @@ impl ast::PathSegment {\n     }\n }\n \n+impl ast::UseItem {\n+    #[must_use]\n+    pub fn with_use_tree(&self, use_tree: ast::UseTree) -> ast::UseItem {\n+        if let Some(old) = self.use_tree() {\n+            return replace_descendants(self, iter::once((old, use_tree)));\n+        }\n+        self.clone()\n+    }\n+}\n+\n #[must_use]\n pub fn strip_attrs_and_docs<N: ast::AttrsOwner>(node: &N) -> N {\n     N::cast(strip_attrs_and_docs_inner(node.syntax().clone())).unwrap()"}]}