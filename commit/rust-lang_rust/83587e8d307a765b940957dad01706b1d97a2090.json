{"sha": "83587e8d307a765b940957dad01706b1d97a2090", "node_id": "C_kwDOAAsO6NoAKDgzNTg3ZThkMzA3YTc2NWI5NDA5NTdkYWQwMTcwNmIxZDk3YTIwOTA", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-12-08T13:08:44Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-12-12T04:35:01Z"}, "message": "Small performance tweaks", "tree": {"sha": "1776be5a062fcb811cbac4c341868c0ab5dd54b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1776be5a062fcb811cbac4c341868c0ab5dd54b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83587e8d307a765b940957dad01706b1d97a2090", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3RQPHNISvvEnSKtjbQF6ltjmwvkFAmG1e/UACgkQbQF6ltjm\nwvkjrA//Sdu9R2Sxf6B/d37isMLf9JJGO/YJWzUtnFxj5eqIIH0k9aiGGdlKt8WO\nE5uqKzxxr9PliVpQbnqc3Rmri3OmgPsuPj7CKbDLhQ/PAXGsiCFhLTF7tDdjdny7\n78PI88ikOUpiYB3UV/7D9lppo0E057u56RVL+HiEctAgSuFl6/KBtJ9b88n/sF6C\nTmSXcUC1GA0MUiy9xfDpLzyUjrOslOcFHZ9dlDb4U54AHodGE7e7NyWb9at5GKDY\ne8KJg2+4vitet0I5r/WxmYYaXkg0N8L2jP9FbwP3/YTRdEC+eH0fNtbcgBf/eJWf\nKihhbAMQZ4uFGEXCv7Vpww8KAsfoYCIFhirF3e6aR5mCf+qPicSQ1AJdTEduoNig\n75xIk5/GvWwVhKFZ1zbpg70CrhcEyy8hqMw01J3RMh3YMmzw1siEEiAtbjV8lIoF\nfvOMy3PUAbTxCGqDng1g74IiNrkaVZ1L96BgSWiFwPT2QImIZIFQpWsdaWVPgPlt\n5tWaIlA1PycjFeuDF6XC2+2mlkq+roleznuWulC+NWKiWFHr9l/UMXoYe7RsFh7K\nttqXsn/jUwJV0xElSMc4WFkWeWN4293sAAKyb5Yq5PjCWvHXaR9ylkaKhBcduaco\npEqljDFpSVVsImwiU6Az9Wm1Wcee8BQS3qdvRmA1nwT+TUFL6kg=\n=YYkm\n-----END PGP SIGNATURE-----", "payload": "tree 1776be5a062fcb811cbac4c341868c0ab5dd54b3\nparent 17b53b964567b948c08cf04b9571d62146597ae3\nauthor Deadbeef <ent3rm4n@gmail.com> 1638968924 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1639283701 +0800\n\nSmall performance tweaks\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83587e8d307a765b940957dad01706b1d97a2090", "html_url": "https://github.com/rust-lang/rust/commit/83587e8d307a765b940957dad01706b1d97a2090", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83587e8d307a765b940957dad01706b1d97a2090/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17b53b964567b948c08cf04b9571d62146597ae3", "url": "https://api.github.com/repos/rust-lang/rust/commits/17b53b964567b948c08cf04b9571d62146597ae3", "html_url": "https://github.com/rust-lang/rust/commit/17b53b964567b948c08cf04b9571d62146597ae3"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "e1d3e0bd35a67d2fc1ea663b4f1dabd7948f7ba0", "filename": "compiler/rustc_data_structures/src/tagged_ptr/copy.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83587e8d307a765b940957dad01706b1d97a2090/compiler%2Frustc_data_structures%2Fsrc%2Ftagged_ptr%2Fcopy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83587e8d307a765b940957dad01706b1d97a2090/compiler%2Frustc_data_structures%2Fsrc%2Ftagged_ptr%2Fcopy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Ftagged_ptr%2Fcopy.rs?ref=83587e8d307a765b940957dad01706b1d97a2090", "patch": "@@ -94,9 +94,11 @@ where\n         // SAFETY: pointer_raw returns the original pointer\n         unsafe { std::mem::transmute_copy(&self.pointer_raw()) }\n     }\n+    #[inline]\n     pub fn tag(&self) -> T {\n         unsafe { T::from_usize(self.packed.get() >> Self::TAG_BIT_SHIFT) }\n     }\n+    #[inline]\n     pub fn set_tag(&mut self, tag: T) {\n         let mut packed = self.packed.get();\n         let new_tag = T::into_usize(tag) << Self::TAG_BIT_SHIFT;"}, {"sha": "d0d2a46fc4c1d6131378cb8a9b5091aa5847c351", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83587e8d307a765b940957dad01706b1d97a2090/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83587e8d307a765b940957dad01706b1d97a2090/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=83587e8d307a765b940957dad01706b1d97a2090", "patch": "@@ -1339,21 +1339,25 @@ impl<'tcx> ParamEnv<'tcx> {\n         self\n     }\n \n+    #[inline]\n     pub fn with_constness(mut self, constness: hir::Constness) -> Self {\n         self.packed.set_tag(ParamTag { constness, ..self.packed.tag() });\n         self\n     }\n \n+    #[inline]\n     pub fn with_const(mut self) -> Self {\n         self.packed.set_tag(ParamTag { constness: hir::Constness::Const, ..self.packed.tag() });\n         self\n     }\n \n+    #[inline]\n     pub fn without_const(mut self) -> Self {\n         self.packed.set_tag(ParamTag { constness: hir::Constness::NotConst, ..self.packed.tag() });\n         self\n     }\n \n+    #[inline]\n     pub fn remap_constness_with(&mut self, mut constness: ty::BoundConstness) {\n         *self = self.with_constness(constness.and(self.constness()))\n     }"}, {"sha": "5a6bac9ec03d1b5c53c91186dbd5dc396906f0de", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/83587e8d307a765b940957dad01706b1d97a2090/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83587e8d307a765b940957dad01706b1d97a2090/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=83587e8d307a765b940957dad01706b1d97a2090", "patch": "@@ -1506,17 +1506,11 @@ pub(super) fn check_mod_item_types(tcx: TyCtxt<'_>, module_def_id: LocalDefId) {\n     tcx.hir().visit_item_likes_in_module(module_def_id, &mut CheckItemTypesVisitor { tcx });\n }\n \n-pub(super) fn check_item_well_formed(tcx: TyCtxt<'_>, def_id: LocalDefId) {\n-    wfcheck::check_item_well_formed(tcx, def_id);\n-}\n+pub(super) use wfcheck::check_item_well_formed;\n \n-pub(super) fn check_trait_item_well_formed(tcx: TyCtxt<'_>, def_id: LocalDefId) {\n-    wfcheck::check_trait_item(tcx, def_id);\n-}\n+pub(super) use wfcheck::check_trait_item as check_trait_item_well_formed;\n \n-pub(super) fn check_impl_item_well_formed(tcx: TyCtxt<'_>, def_id: LocalDefId) {\n-    wfcheck::check_impl_item(tcx, def_id);\n-}\n+pub(super) use wfcheck::check_impl_item as check_impl_item_well_formed;\n \n fn async_opaque_type_cycle_error(tcx: TyCtxt<'tcx>, span: Span) {\n     struct_span_err!(tcx.sess, span, E0733, \"recursion in an `async fn` requires boxing\")"}]}