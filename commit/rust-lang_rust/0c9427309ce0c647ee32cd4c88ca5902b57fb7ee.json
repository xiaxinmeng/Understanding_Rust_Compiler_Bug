{"sha": "0c9427309ce0c647ee32cd4c88ca5902b57fb7ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjOTQyNzMwOWNlMGM2NDdlZTMyY2Q0Yzg4Y2E1OTAyYjU3ZmI3ZWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-16T08:49:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-16T08:49:15Z"}, "message": "Auto merge of #5596 - ebroto:issue_5212, r=phansch\n\nFix comparison_chain false positive\n\nchangelog: comparison_chain: fix false positives when the binary operation is the same.\n\nFixes #5212", "tree": {"sha": "bd0915deeff9b5d367fa9be329ea58e7592559d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd0915deeff9b5d367fa9be329ea58e7592559d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c9427309ce0c647ee32cd4c88ca5902b57fb7ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c9427309ce0c647ee32cd4c88ca5902b57fb7ee", "html_url": "https://github.com/rust-lang/rust/commit/0c9427309ce0c647ee32cd4c88ca5902b57fb7ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c9427309ce0c647ee32cd4c88ca5902b57fb7ee/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53a98050b8b40f424d26c91f4be66ce68a4dd8f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/53a98050b8b40f424d26c91f4be66ce68a4dd8f4", "html_url": "https://github.com/rust-lang/rust/commit/53a98050b8b40f424d26c91f4be66ce68a4dd8f4"}, {"sha": "9217675c7f6ccd2efa18047ebb0c86841683b6a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9217675c7f6ccd2efa18047ebb0c86841683b6a5", "html_url": "https://github.com/rust-lang/rust/commit/9217675c7f6ccd2efa18047ebb0c86841683b6a5"}], "stats": {"total": 83, "additions": 80, "deletions": 3}, "files": [{"sha": "93e29edcaa58fead1be38d9718804bd9d4892f84", "filename": "clippy_lints/src/comparison_chain.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0c9427309ce0c647ee32cd4c88ca5902b57fb7ee/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c9427309ce0c647ee32cd4c88ca5902b57fb7ee/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcomparison_chain.rs?ref=0c9427309ce0c647ee32cd4c88ca5902b57fb7ee", "patch": "@@ -81,12 +81,23 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ComparisonChain {\n \n                 // Check that both sets of operands are equal\n                 let mut spanless_eq = SpanlessEq::new(cx);\n-                if (!spanless_eq.eq_expr(lhs1, lhs2) || !spanless_eq.eq_expr(rhs1, rhs2))\n-                    && (!spanless_eq.eq_expr(lhs1, rhs2) || !spanless_eq.eq_expr(rhs1, lhs2))\n-                {\n+                let same_fixed_operands = spanless_eq.eq_expr(lhs1, lhs2) && spanless_eq.eq_expr(rhs1, rhs2);\n+                let same_transposed_operands = spanless_eq.eq_expr(lhs1, rhs2) && spanless_eq.eq_expr(rhs1, lhs2);\n+\n+                if !same_fixed_operands && !same_transposed_operands {\n                     return;\n                 }\n \n+                // Check that if the operation is the same, either it's not `==` or the operands are transposed\n+                if kind1.node == kind2.node {\n+                    if kind1.node == BinOpKind::Eq {\n+                        return;\n+                    }\n+                    if !same_transposed_operands {\n+                        return;\n+                    }\n+                }\n+\n                 // Check that the type being compared implements `core::cmp::Ord`\n                 let ty = cx.tables.expr_ty(lhs1);\n                 let is_ord = get_trait_def_id(cx, &paths::ORD).map_or(false, |id| implements_trait(cx, ty, id, &[]));"}, {"sha": "3b03f8c7dfe7c71f6642646d2543a719ce3cbb4f", "filename": "tests/ui/comparison_chain.rs", "status": "modified", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/0c9427309ce0c647ee32cd4c88ca5902b57fb7ee/tests%2Fui%2Fcomparison_chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c9427309ce0c647ee32cd4c88ca5902b57fb7ee/tests%2Fui%2Fcomparison_chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcomparison_chain.rs?ref=0c9427309ce0c647ee32cd4c88ca5902b57fb7ee", "patch": "@@ -137,4 +137,70 @@ fn h<T: Ord>(x: T, y: T, z: T) {\n     }\n }\n \n+// The following uses should be ignored\n+mod issue_5212 {\n+    use super::{a, b, c};\n+    fn foo() -> u8 {\n+        21\n+    }\n+\n+    fn same_operation_equals() {\n+        // operands are fixed\n+\n+        if foo() == 42 {\n+            a()\n+        } else if foo() == 42 {\n+            b()\n+        }\n+\n+        if foo() == 42 {\n+            a()\n+        } else if foo() == 42 {\n+            b()\n+        } else {\n+            c()\n+        }\n+\n+        // operands are transposed\n+\n+        if foo() == 42 {\n+            a()\n+        } else if 42 == foo() {\n+            b()\n+        }\n+    }\n+\n+    fn same_operation_not_equals() {\n+        // operands are fixed\n+\n+        if foo() > 42 {\n+            a()\n+        } else if foo() > 42 {\n+            b()\n+        }\n+\n+        if foo() > 42 {\n+            a()\n+        } else if foo() > 42 {\n+            b()\n+        } else {\n+            c()\n+        }\n+\n+        if foo() < 42 {\n+            a()\n+        } else if foo() < 42 {\n+            b()\n+        }\n+\n+        if foo() < 42 {\n+            a()\n+        } else if foo() < 42 {\n+            b()\n+        } else {\n+            c()\n+        }\n+    }\n+}\n+\n fn main() {}"}]}