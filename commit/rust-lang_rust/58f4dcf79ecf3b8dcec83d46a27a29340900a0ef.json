{"sha": "58f4dcf79ecf3b8dcec83d46a27a29340900a0ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ZjRkY2Y3OWVjZjNiOGRjZWM4M2Q0NmEyN2EyOTM0MDkwMGEwZWY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-14T23:05:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-14T23:05:12Z"}, "message": "Merge #3152\n\n3152: vscode: a couple of more intuitive names and shortening languageServer to langServer r=matklad a=Veetaha\n\nGod, naming is so hard. I'd like to extract this change from upcomming \"Download latest language server\" command PR.\n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>", "tree": {"sha": "e40a833dd72df793cb3d81d298e4c5a2564ff552", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e40a833dd72df793cb3d81d298e4c5a2564ff552"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58f4dcf79ecf3b8dcec83d46a27a29340900a0ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeRyeoCRBK7hj4Ov3rIwAAdHIIAAEj+AflqV5i2Rjiy4vOHO9t\n5AB8hrVEN9gskyukth+UdX35MNkHhOFVIHkaGHmfsMRTOyz8W+xXXyOZb8buzqgQ\n1Umo85fr40vn76y9Rco9NHrvZ1ZLxTLdFrbafa01BCV/F9OzB2ryzNnC6kpGvop1\ncqGgK+ufs9m9dxR2p5P1kx1CEslqmnjtcL/o7UcYJF+FlXCREQQWSMbattlXg5GT\n0D2RorPQ6IN2eazOoXVONwBGw0qK5zjqE/mracjjb0z5cKH4zmxeQfBYByhG/yVU\nXD3dn9ZDnAhTlZEhwLORCrkNAYvKtJxDDmxfAaNf0xdPedRuf7tVl7YRvTJ0zg8=\n=y/cb\n-----END PGP SIGNATURE-----\n", "payload": "tree e40a833dd72df793cb3d81d298e4c5a2564ff552\nparent 9ba801befd70892bf40429512e890389171aa59f\nparent 80d5ba68da2785280cf154d5d812915b99fc0e87\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1581721512 +0000\ncommitter GitHub <noreply@github.com> 1581721512 +0000\n\nMerge #3152\n\n3152: vscode: a couple of more intuitive names and shortening languageServer to langServer r=matklad a=Veetaha\n\nGod, naming is so hard. I'd like to extract this change from upcomming \"Download latest language server\" command PR.\n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58f4dcf79ecf3b8dcec83d46a27a29340900a0ef", "html_url": "https://github.com/rust-lang/rust/commit/58f4dcf79ecf3b8dcec83d46a27a29340900a0ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58f4dcf79ecf3b8dcec83d46a27a29340900a0ef/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ba801befd70892bf40429512e890389171aa59f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ba801befd70892bf40429512e890389171aa59f", "html_url": "https://github.com/rust-lang/rust/commit/9ba801befd70892bf40429512e890389171aa59f"}, {"sha": "80d5ba68da2785280cf154d5d812915b99fc0e87", "url": "https://api.github.com/repos/rust-lang/rust/commits/80d5ba68da2785280cf154d5d812915b99fc0e87", "html_url": "https://github.com/rust-lang/rust/commit/80d5ba68da2785280cf154d5d812915b99fc0e87"}], "stats": {"total": 56, "additions": 28, "deletions": 28}, "files": [{"sha": "12c97be2feeb783a5c2316fbbad560e50ec3e261", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/58f4dcf79ecf3b8dcec83d46a27a29340900a0ef/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/58f4dcf79ecf3b8dcec83d46a27a29340900a0ef/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=58f4dcf79ecf3b8dcec83d46a27a29340900a0ef", "patch": "@@ -2,7 +2,7 @@ import * as lc from 'vscode-languageclient';\n import * as vscode from 'vscode';\n \n import { Config } from './config';\n-import { ensureLanguageServerBinary } from './installation/language_server';\n+import { ensureServerBinary } from './installation/server';\n import { CallHierarchyFeature } from 'vscode-languageclient/lib/callHierarchy.proposed';\n \n export async function createClient(config: Config): Promise<null | lc.LanguageClient> {\n@@ -11,11 +11,11 @@ export async function createClient(config: Config): Promise<null | lc.LanguageCl\n     // It might be a good idea to test if the uri points to a file.\n     const workspaceFolderPath = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath ?? '.';\n \n-    const langServerPath = await ensureLanguageServerBinary(config.langServerBinarySource);\n-    if (!langServerPath) return null;\n+    const serverPath = await ensureServerBinary(config.serverBinarySource);\n+    if (!serverPath) return null;\n \n     const run: lc.Executable = {\n-        command: langServerPath,\n+        command: serverPath,\n         options: { cwd: workspaceFolderPath },\n     };\n     const serverOptions: lc.ServerOptions = {"}, {"sha": "7866ed7e1b511cde60a7a892e47ea82eb4c85355", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/58f4dcf79ecf3b8dcec83d46a27a29340900a0ef/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/58f4dcf79ecf3b8dcec83d46a27a29340900a0ef/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=58f4dcf79ecf3b8dcec83d46a27a29340900a0ef", "patch": "@@ -68,7 +68,7 @@ export class Config {\n      * `platform` on GitHub releases. (It is also stored under the same name when\n      * downloaded by the extension).\n      */\n-    get prebuiltLangServerFileName(): null | string {\n+    get prebuiltServerFileName(): null | string {\n         // See possible `arch` values here:\n         // https://nodejs.org/api/process.html#process_process_arch\n \n@@ -98,17 +98,17 @@ export class Config {\n         }\n     }\n \n-    get langServerBinarySource(): null | BinarySource {\n-        const langServerPath = RA_LSP_DEBUG ?? this.cfg.get<null | string>(\"raLspServerPath\");\n+    get serverBinarySource(): null | BinarySource {\n+        const serverPath = RA_LSP_DEBUG ?? this.cfg.get<null | string>(\"raLspServerPath\");\n \n-        if (langServerPath) {\n+        if (serverPath) {\n             return {\n                 type: BinarySource.Type.ExplicitPath,\n-                path: Config.replaceTildeWithHomeDir(langServerPath)\n+                path: Config.replaceTildeWithHomeDir(serverPath)\n             };\n         }\n \n-        const prebuiltBinaryName = this.prebuiltLangServerFileName;\n+        const prebuiltBinaryName = this.prebuiltServerFileName;\n \n         if (!prebuiltBinaryName) return null;\n "}, {"sha": "29ee029a708752875024e43ed96611f839356294", "filename": "editors/code/src/installation/fetch_latest_artifact_release_info.ts", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/58f4dcf79ecf3b8dcec83d46a27a29340900a0ef/editors%2Fcode%2Fsrc%2Finstallation%2Ffetch_latest_artifact_release_info.ts", "raw_url": "https://github.com/rust-lang/rust/raw/58f4dcf79ecf3b8dcec83d46a27a29340900a0ef/editors%2Fcode%2Fsrc%2Finstallation%2Ffetch_latest_artifact_release_info.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Ffetch_latest_artifact_release_info.ts?ref=58f4dcf79ecf3b8dcec83d46a27a29340900a0ef", "patch": "@@ -1,15 +1,15 @@\n import fetch from \"node-fetch\";\n-import { GithubRepo, ArtifactMetadata } from \"./interfaces\";\n+import { GithubRepo, ArtifactReleaseInfo } from \"./interfaces\";\n \n const GITHUB_API_ENDPOINT_URL = \"https://api.github.com\";\n \n /**\n  * Fetches the latest release from GitHub `repo` and returns metadata about\n  * `artifactFileName` shipped with this release or `null` if no such artifact was published.\n  */\n-export async function fetchLatestArtifactMetadata(\n+export async function fetchLatestArtifactReleaseInfo(\n     repo: GithubRepo, artifactFileName: string\n-): Promise<null | ArtifactMetadata> {\n+): Promise<null | ArtifactReleaseInfo> {\n \n     const repoOwner = encodeURIComponent(repo.owner);\n     const repoName  = encodeURIComponent(repo.name);", "previous_filename": "editors/code/src/installation/fetch_latest_artifact_metadata.ts"}, {"sha": "93ea577d4a65c24874c0c3209621ac5c11ae4b0d", "filename": "editors/code/src/installation/interfaces.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58f4dcf79ecf3b8dcec83d46a27a29340900a0ef/editors%2Fcode%2Fsrc%2Finstallation%2Finterfaces.ts", "raw_url": "https://github.com/rust-lang/rust/raw/58f4dcf79ecf3b8dcec83d46a27a29340900a0ef/editors%2Fcode%2Fsrc%2Finstallation%2Finterfaces.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Finterfaces.ts?ref=58f4dcf79ecf3b8dcec83d46a27a29340900a0ef", "patch": "@@ -6,7 +6,7 @@ export interface GithubRepo {\n /**\n  * Metadata about particular artifact retrieved from GitHub releases.\n  */\n-export interface ArtifactMetadata {\n+export interface ArtifactReleaseInfo {\n     releaseName: string;\n     downloadUrl: string;\n }"}, {"sha": "406e2299c3b5f34e2768242b52bf43c580a8d60f", "filename": "editors/code/src/installation/server.ts", "status": "renamed", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/58f4dcf79ecf3b8dcec83d46a27a29340900a0ef/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/58f4dcf79ecf3b8dcec83d46a27a29340900a0ef/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts?ref=58f4dcf79ecf3b8dcec83d46a27a29340900a0ef", "patch": "@@ -7,13 +7,13 @@ import { spawnSync } from \"child_process\";\n import { throttle } from \"throttle-debounce\";\n \n import { BinarySource } from \"./interfaces\";\n-import { fetchLatestArtifactMetadata } from \"./fetch_latest_artifact_metadata\";\n+import { fetchLatestArtifactReleaseInfo } from \"./fetch_latest_artifact_release_info\";\n import { downloadFile } from \"./download_file\";\n \n-export async function downloadLatestLanguageServer(\n+export async function downloadLatestServer(\n     {file: artifactFileName, dir: installationDir, repo}: BinarySource.GithubRelease\n ) {\n-    const { releaseName, downloadUrl } = (await fetchLatestArtifactMetadata(\n+    const { releaseName, downloadUrl } = (await fetchLatestArtifactReleaseInfo(\n         repo, artifactFileName\n     ))!;\n \n@@ -53,11 +53,11 @@ export async function downloadLatestLanguageServer(\n     );\n     console.timeEnd(\"Downloading ra_lsp_server\");\n }\n-export async function ensureLanguageServerBinary(\n-    langServerSource: null | BinarySource\n+export async function ensureServerBinary(\n+    serverSource: null | BinarySource\n ): Promise<null | string> {\n \n-    if (!langServerSource) {\n+    if (!serverSource) {\n         vscode.window.showErrorMessage(\n             \"Unfortunately we don't ship binaries for your platform yet. \" +\n             \"You need to manually clone rust-analyzer repository and \" +\n@@ -69,21 +69,21 @@ export async function ensureLanguageServerBinary(\n         return null;\n     }\n \n-    switch (langServerSource.type) {\n+    switch (serverSource.type) {\n         case BinarySource.Type.ExplicitPath: {\n-            if (isBinaryAvailable(langServerSource.path)) {\n-                return langServerSource.path;\n+            if (isBinaryAvailable(serverSource.path)) {\n+                return serverSource.path;\n             }\n \n             vscode.window.showErrorMessage(\n-                `Unable to run ${langServerSource.path} binary. ` +\n+                `Unable to run ${serverSource.path} binary. ` +\n                 `To use the pre-built language server, set \"rust-analyzer.raLspServerPath\" ` +\n                 \"value to `null` or remove it from the settings to use it by default.\"\n             );\n             return null;\n         }\n         case BinarySource.Type.GithubRelease: {\n-            const prebuiltBinaryPath = path.join(langServerSource.dir, langServerSource.file);\n+            const prebuiltBinaryPath = path.join(serverSource.dir, serverSource.file);\n \n             if (isBinaryAvailable(prebuiltBinaryPath)) {\n                 return prebuiltBinaryPath;\n@@ -97,10 +97,10 @@ export async function ensureLanguageServerBinary(\n             if (userResponse !== \"Download now\") return null;\n \n             try {\n-                await downloadLatestLanguageServer(langServerSource);\n+                await downloadLatestServer(serverSource);\n             } catch (err) {\n                 vscode.window.showErrorMessage(\n-                    `Failed to download language server from ${langServerSource.repo.name} ` +\n+                    `Failed to download language server from ${serverSource.repo.name} ` +\n                     `GitHub repository: ${err.message}`\n                 );\n \n@@ -122,7 +122,7 @@ export async function ensureLanguageServerBinary(\n \n             if (!isBinaryAvailable(prebuiltBinaryPath)) assert(false,\n                 `Downloaded language server binary is not functional.` +\n-                `Downloaded from: ${JSON.stringify(langServerSource)}`\n+                `Downloaded from: ${JSON.stringify(serverSource)}`\n             );\n \n ", "previous_filename": "editors/code/src/installation/language_server.ts"}]}