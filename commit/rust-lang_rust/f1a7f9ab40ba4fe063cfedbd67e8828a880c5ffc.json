{"sha": "f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc", "node_id": "C_kwDOAAsO6NoAKGYxYTdmOWFiNDBiYTRmZTA2M2NmZWRiZDY3ZTg4MjhhODgwYzVmZmM", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-05-21T18:22:42Z"}, "committer": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-05-22T19:21:26Z"}, "message": "Use revisions for NLL in closures", "tree": {"sha": "e801b8da8bf19ac87e03673bc7fb0e1d10639910", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e801b8da8bf19ac87e03673bc7fb0e1d10639910"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc", "html_url": "https://github.com/rust-lang/rust/commit/f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb222bf9432660d0ced8e38e839837e4ad55bec0", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb222bf9432660d0ced8e38e839837e4ad55bec0", "html_url": "https://github.com/rust-lang/rust/commit/eb222bf9432660d0ced8e38e839837e4ad55bec0"}], "stats": {"total": 54, "additions": 36, "deletions": 18}, "files": [{"sha": "93ed51fa7e114cd9b5ab78237311c3a8aaf561d8", "filename": "src/test/ui/closures/closure-bounds-static-cant-capture-borrowed.base.stderr", "status": "renamed", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-static-cant-capture-borrowed.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-static-cant-capture-borrowed.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-static-cant-capture-borrowed.base.stderr?ref=f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc", "patch": "@@ -1,22 +1,24 @@\n error[E0759]: `x` has an anonymous lifetime `'_` but it needs to satisfy a `'static` lifetime requirement\n-  --> $DIR/closure-bounds-static-cant-capture-borrowed.rs:5:9\n+  --> $DIR/closure-bounds-static-cant-capture-borrowed.rs:9:9\n    |\n LL |   fn foo(x: &()) {\n    |             --- this data with an anonymous lifetime `'_`...\n LL |       bar(|| {\n    |  _________^\n LL | |\n+LL | |\n+LL | |\n LL | |         let _ = x;\n LL | |     })\n    | |_____^ ...is used here...\n    |\n note: ...and is required to live as long as `'static` here\n-  --> $DIR/closure-bounds-static-cant-capture-borrowed.rs:5:5\n+  --> $DIR/closure-bounds-static-cant-capture-borrowed.rs:9:5\n    |\n LL |     bar(|| {\n    |     ^^^\n note: `'static` lifetime requirement introduced by this bound\n-  --> $DIR/closure-bounds-static-cant-capture-borrowed.rs:1:39\n+  --> $DIR/closure-bounds-static-cant-capture-borrowed.rs:5:39\n    |\n LL | fn bar<F>(blk: F) where F: FnOnce() + 'static {\n    |                                       ^^^^^^^", "previous_filename": "src/test/ui/closures/closure-bounds-static-cant-capture-borrowed.stderr"}, {"sha": "dc5188a86511ae50fa0a2cb10dad052fc8be5981", "filename": "src/test/ui/closures/closure-bounds-static-cant-capture-borrowed.nll.stderr", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-static-cant-capture-borrowed.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-static-cant-capture-borrowed.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-static-cant-capture-borrowed.nll.stderr?ref=f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc", "patch": "@@ -1,12 +1,14 @@\n error[E0521]: borrowed data escapes outside of function\n-  --> $DIR/closure-bounds-static-cant-capture-borrowed.rs:5:5\n+  --> $DIR/closure-bounds-static-cant-capture-borrowed.rs:9:5\n    |\n LL |   fn foo(x: &()) {\n    |          -  - let's call the lifetime of this reference `'1`\n    |          |\n    |          `x` is a reference that is only valid in the function body\n LL | /     bar(|| {\n LL | |\n+LL | |\n+LL | |\n LL | |         let _ = x;\n LL | |     })\n    | |      ^\n@@ -15,19 +17,21 @@ LL | |     })\n    |        argument requires that `'1` must outlive `'static`\n \n error[E0373]: closure may outlive the current function, but it borrows `x`, which is owned by the current function\n-  --> $DIR/closure-bounds-static-cant-capture-borrowed.rs:5:9\n+  --> $DIR/closure-bounds-static-cant-capture-borrowed.rs:9:9\n    |\n LL |     bar(|| {\n    |         ^^ may outlive borrowed value `x`\n-LL |\n+...\n LL |         let _ = x;\n    |                 - `x` is borrowed here\n    |\n note: function requires argument type to outlive `'static`\n-  --> $DIR/closure-bounds-static-cant-capture-borrowed.rs:5:5\n+  --> $DIR/closure-bounds-static-cant-capture-borrowed.rs:9:5\n    |\n LL | /     bar(|| {\n LL | |\n+LL | |\n+LL | |\n LL | |         let _ = x;\n LL | |     })\n    | |______^"}, {"sha": "6c49cd76b13f0f067acf1783e0c3c34ce3942571", "filename": "src/test/ui/closures/closure-bounds-static-cant-capture-borrowed.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-static-cant-capture-borrowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-static-cant-capture-borrowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-static-cant-capture-borrowed.rs?ref=f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc", "patch": "@@ -1,9 +1,15 @@\n+// ignore-compare-mode-nll\n+// revisions: base nll\n+// [nll]compile-flags: -Zborrowck=mir\n+\n fn bar<F>(blk: F) where F: FnOnce() + 'static {\n }\n \n fn foo(x: &()) {\n     bar(|| {\n-        //~^ ERROR `x` has an anonymous lifetime `'_` but it needs to satisfy a `'static` lifetime requirement [E0759]\n+        //[base]~^ ERROR `x` has an anonymous lifetime `'_` but it needs to satisfy a `'static` lifetime requirement [E0759]\n+        //[nll]~^^ ERROR borrowed data escapes\n+        //[nll]~| ERROR closure may outlive\n         let _ = x;\n     })\n }"}, {"sha": "be81efd27c4ebba951ab7ecfe975884d036ce7de", "filename": "src/test/ui/closures/closure-expected-type/expect-region-supply-region-2.base.stderr", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region-2.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region-2.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region-2.base.stderr?ref=f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc", "patch": "@@ -1,13 +1,13 @@\n error[E0308]: mismatched types\n-  --> $DIR/expect-region-supply-region-2.rs:14:33\n+  --> $DIR/expect-region-supply-region-2.rs:18:33\n    |\n LL |     closure_expecting_bound(|x: &'x u32| {\n    |                                 ^^^^^^^ lifetime mismatch\n    |\n    = note: expected reference `&u32`\n               found reference `&'x u32`\n note: the anonymous lifetime #1 defined here...\n-  --> $DIR/expect-region-supply-region-2.rs:14:29\n+  --> $DIR/expect-region-supply-region-2.rs:18:29\n    |\n LL |       closure_expecting_bound(|x: &'x u32| {\n    |  _____________________________^\n@@ -19,26 +19,26 @@ LL | |         f = Some(x);\n LL | |     });\n    | |_____^\n note: ...does not necessarily outlive the lifetime `'x` as defined here\n-  --> $DIR/expect-region-supply-region-2.rs:9:30\n+  --> $DIR/expect-region-supply-region-2.rs:13:30\n    |\n LL | fn expect_bound_supply_named<'x>() {\n    |                              ^^\n \n error[E0308]: mismatched types\n-  --> $DIR/expect-region-supply-region-2.rs:14:33\n+  --> $DIR/expect-region-supply-region-2.rs:18:33\n    |\n LL |     closure_expecting_bound(|x: &'x u32| {\n    |                                 ^^^^^^^ lifetime mismatch\n    |\n    = note: expected reference `&u32`\n               found reference `&'x u32`\n note: the lifetime `'x` as defined here...\n-  --> $DIR/expect-region-supply-region-2.rs:9:30\n+  --> $DIR/expect-region-supply-region-2.rs:13:30\n    |\n LL | fn expect_bound_supply_named<'x>() {\n    |                              ^^\n note: ...does not necessarily outlive the anonymous lifetime #1 defined here\n-  --> $DIR/expect-region-supply-region-2.rs:14:29\n+  --> $DIR/expect-region-supply-region-2.rs:18:29\n    |\n LL |       closure_expecting_bound(|x: &'x u32| {\n    |  _____________________________^", "previous_filename": "src/test/ui/closures/closure-expected-type/expect-region-supply-region-2.stderr"}, {"sha": "4a9a19422d7cd55562112e5f0b6552c39edb400f", "filename": "src/test/ui/closures/closure-expected-type/expect-region-supply-region-2.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region-2.nll.stderr?ref=f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/expect-region-supply-region-2.rs:14:30\n+  --> $DIR/expect-region-supply-region-2.rs:18:30\n    |\n LL | fn expect_bound_supply_named<'x>() {\n    |                              -- lifetime `'x` defined here\n@@ -10,7 +10,7 @@ LL |     closure_expecting_bound(|x: &'x u32| {\n    |                              requires that `'1` must outlive `'x`\n \n error: lifetime may not live long enough\n-  --> $DIR/expect-region-supply-region-2.rs:14:30\n+  --> $DIR/expect-region-supply-region-2.rs:18:30\n    |\n LL | fn expect_bound_supply_named<'x>() {\n    |                              -- lifetime `'x` defined here"}, {"sha": "072ba57c10bf48520ea9480cf3422b0e624aa7ed", "filename": "src/test/ui/closures/closure-expected-type/expect-region-supply-region-2.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region-2.rs?ref=f1a7f9ab40ba4fe063cfedbd67e8828a880c5ffc", "patch": "@@ -1,3 +1,7 @@\n+// ignore-compare-mode-nll\n+// revisions: base nll\n+// [nll]compile-flags: -Zborrowck=mir\n+\n #![allow(warnings)]\n \n fn closure_expecting_bound<F>(_: F)\n@@ -12,8 +16,10 @@ fn expect_bound_supply_named<'x>() {\n     // Here we give a type annotation that `x` should be free. We get\n     // an error because of that.\n     closure_expecting_bound(|x: &'x u32| {\n-        //~^ ERROR mismatched types\n-        //~| ERROR mismatched types\n+        //[base]~^ ERROR mismatched types\n+        //[base]~| ERROR mismatched types\n+        //[nll]~^^^ ERROR lifetime may not live long enough\n+        //[nll]~| ERROR lifetime may not live long enough\n \n         // Borrowck doesn't get a chance to run, but if it did it should error\n         // here."}]}