{"sha": "a952787163af999bbbcb4ed6de53a52563c23c28", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5NTI3ODcxNjNhZjk5OWJiYmNiNGVkNmRlNTNhNTI1NjNjMjNjMjg=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-05-31T03:05:04Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-05-31T03:57:16Z"}, "message": "Improve tests", "tree": {"sha": "623f161ecfd2f19960e249013eea40e29045c759", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/623f161ecfd2f19960e249013eea40e29045c759"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a952787163af999bbbcb4ed6de53a52563c23c28", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYLRenBUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLiRFgD+O16VFMdL01OPmTR5VF/zQx6h255l\nV3jY95q7fyO3mycA/RjF18SfT+CRVlIfM3Xz0XTAHyZjJ7T5RHmRS70ebvoO\n=VVTW\n-----END PGP SIGNATURE-----", "payload": "tree 623f161ecfd2f19960e249013eea40e29045c759\nparent 160bc68cae213dc204037880c529125442557205\nauthor hyd-dev <yd-huang@outlook.com> 1622430304 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1622433436 +0800\n\nImprove tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a952787163af999bbbcb4ed6de53a52563c23c28", "html_url": "https://github.com/rust-lang/rust/commit/a952787163af999bbbcb4ed6de53a52563c23c28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a952787163af999bbbcb4ed6de53a52563c23c28/comments", "author": null, "committer": null, "parents": [{"sha": "160bc68cae213dc204037880c529125442557205", "url": "https://api.github.com/repos/rust-lang/rust/commits/160bc68cae213dc204037880c529125442557205", "html_url": "https://github.com/rust-lang/rust/commit/160bc68cae213dc204037880c529125442557205"}], "stats": {"total": 61, "additions": 49, "deletions": 12}, "files": [{"sha": "e36bfe1c5783eb3b8652bd6e8cd496dfac7623ef", "filename": "tests/compile-fail/function_calls/check_callback_abi.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a952787163af999bbbcb4ed6de53a52563c23c28/tests%2Fcompile-fail%2Ffunction_calls%2Fcheck_callback_abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a952787163af999bbbcb4ed6de53a52563c23c28/tests%2Fcompile-fail%2Ffunction_calls%2Fcheck_callback_abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ffunction_calls%2Fcheck_callback_abi.rs?ref=a952787163af999bbbcb4ed6de53a52563c23c28", "patch": "@@ -6,6 +6,8 @@ extern \"C\" fn try_fn(_: *mut u8) {\n \n fn main() {\n     unsafe {\n+        // Make sure we check the ABI when Miri itself invokes a function\n+        // as part of a shim implementation.\n         std::intrinsics::r#try( //~ ERROR calling a function with ABI C using caller ABI Rust\n             std::mem::transmute::<extern \"C\" fn(*mut u8), _>(try_fn),\n             std::ptr::null_mut(),"}, {"sha": "f92fae5d29355b2d50f550377fb2e5ad23269511", "filename": "tests/compile-fail/function_calls/exported_symbol_abi_mismatch.rs", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a952787163af999bbbcb4ed6de53a52563c23c28/tests%2Fcompile-fail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a952787163af999bbbcb4ed6de53a52563c23c28/tests%2Fcompile-fail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.rs?ref=a952787163af999bbbcb4ed6de53a52563c23c28", "patch": "@@ -1,22 +1,29 @@\n-// revisions: no_cache cache\n+// revisions: no_cache cache fn_ptr\n \n #[no_mangle]\n fn foo() {}\n \n fn main() {\n+    #[cfg(any(cache, fn_ptr))]\n+    extern \"Rust\" {\n+        fn foo();\n+    }\n+\n+    #[cfg(fn_ptr)]\n+    unsafe { std::mem::transmute::<unsafe fn(), unsafe extern \"C\" fn()>(foo)() }\n+    //[fn_ptr]~^ ERROR calling a function with ABI Rust using caller ABI C\n+\n+    // `Instance` caching should not suppress ABI check.\n     #[cfg(cache)]\n+    unsafe { foo() }\n+\n     {\n-        // `Instance` caching should not suppress ABI check.\n-        extern \"Rust\" {\n+        #[cfg_attr(any(cache, fn_ptr), allow(clashing_extern_declarations))]\n+        extern \"C\" {\n             fn foo();\n         }\n         unsafe { foo() }\n+        //[no_cache]~^ ERROR calling a function with ABI Rust using caller ABI C\n+        //[cache]~^^ ERROR calling a function with ABI Rust using caller ABI C\n     }\n-    #[cfg_attr(cache, allow(clashing_extern_declarations))]\n-    extern \"C\" {\n-        fn foo();\n-    }\n-    unsafe { foo() }\n-    //[no_cache]~^ ERROR Undefined Behavior: calling a function with ABI Rust using caller ABI C\n-    //[cache]~^^ ERROR Undefined Behavior: calling a function with ABI Rust using caller ABI C\n }"}, {"sha": "bbbe677d3651e17eba26a4f160b86af36662d8fb", "filename": "tests/compile-fail/function_calls/exported_symbol_bad_unwind3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a952787163af999bbbcb4ed6de53a52563c23c28/tests%2Fcompile-fail%2Ffunction_calls%2Fexported_symbol_bad_unwind3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a952787163af999bbbcb4ed6de53a52563c23c28/tests%2Fcompile-fail%2Ffunction_calls%2Fexported_symbol_bad_unwind3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ffunction_calls%2Fexported_symbol_bad_unwind3.rs?ref=a952787163af999bbbcb4ed6de53a52563c23c28", "patch": "@@ -1,5 +1,4 @@\n #![feature(unwind_attributes)]\n-#![feature(c_unwind)] // make sure it doesn't insert abort-on-unwind for the `#[unwind(allowed)]` function\n \n #[unwind(allowed)]\n #[no_mangle]"}, {"sha": "96bf8170c6eb1d5d5d4438b96403fc465c35977b", "filename": "tests/run-pass/function_calls/exported_symbol.rs", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/a952787163af999bbbcb4ed6de53a52563c23c28/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a952787163af999bbbcb4ed6de53a52563c23c28/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol.rs?ref=a952787163af999bbbcb4ed6de53a52563c23c28", "patch": "@@ -32,13 +32,42 @@ fn main() {\n         extern \"C\" {\n             fn foo() -> i32;\n         }\n+\n         assert_eq!(unsafe { foo() }, -1);\n-        assert_eq!(unsafe { foo() }, -1);\n+\n         extern \"Rust\" {\n             fn bar() -> i32;\n             fn baz() -> i32;\n         }\n+\n         assert_eq!(unsafe { bar() }, -2);\n         assert_eq!(unsafe { baz() }, -3);\n+\n+        #[allow(clashing_extern_declarations)]\n+        {\n+            extern \"Rust\" {\n+                fn foo() -> i32;\n+            }\n+\n+            assert_eq!(\n+                unsafe {\n+                    std::mem::transmute::<unsafe fn() -> i32, unsafe extern \"C\" fn() -> i32>(foo)()\n+                },\n+                -1\n+            );\n+\n+            extern \"C\" {\n+                fn bar() -> i32;\n+                fn baz() -> i32;\n+            }\n+\n+            unsafe {\n+                let transmute = |f| {\n+                    std::mem::transmute::<unsafe extern \"C\" fn() -> i32, unsafe fn() -> i32>(f)\n+                };\n+                assert_eq!(transmute(bar)(), -2);\n+                assert_eq!(transmute(baz)(), -3);\n+            }\n+        }\n     }\n }"}]}