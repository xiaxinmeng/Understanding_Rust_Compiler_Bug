{"sha": "072a920503466e5631e77d3baa8970be253bc768", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3MmE5MjA1MDM0NjZlNTYzMWU3N2QzYmFhODk3MGJlMjUzYmM3Njg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-02-15T03:21:17Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-06T22:55:43Z"}, "message": "Remove check-fast. Closes #4193, #8844, #6330, #7416", "tree": {"sha": "d05460a2084b3963c50bdb805ace0a23a0d103bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d05460a2084b3963c50bdb805ace0a23a0d103bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/072a920503466e5631e77d3baa8970be253bc768", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/072a920503466e5631e77d3baa8970be253bc768", "html_url": "https://github.com/rust-lang/rust/commit/072a920503466e5631e77d3baa8970be253bc768", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/072a920503466e5631e77d3baa8970be253bc768/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31e8f2448c8cdd913566d5cb9a5cb9f0c014dcbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/31e8f2448c8cdd913566d5cb9a5cb9f0c014dcbc", "html_url": "https://github.com/rust-lang/rust/commit/31e8f2448c8cdd913566d5cb9a5cb9f0c014dcbc"}], "stats": {"total": 637, "additions": 172, "deletions": 465}, "files": [{"sha": "4a7a9d6567306c2f42eda799bbd4e9c17f7ebad9", "filename": "mk/tests.mk", "status": "modified", "additions": 4, "deletions": 61, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -183,6 +183,9 @@ check-ref: cleantestlibs cleantmptestlogs check-stage2-rpass \\\n check-docs: cleantestlibs cleantmptestlogs check-stage2-docs\n \t$(Q)$(CFG_PYTHON) $(S)src/etc/check-summary.py tmp/*.log\n \n+# NOTE: Remove after reprogramming windows bots\n+check-fast: check-lite\n+\n .PHONY: cleantmptestlogs cleantestlibs\n \n cleantmptestlogs:\n@@ -875,69 +878,9 @@ $(foreach crate,$(TEST_CRATES), \\\n  $(eval $(call DEF_CHECK_CRATE,$(crate))))\n \n ######################################################################\n-# check-fast rules\n+# RMAKE rules\n ######################################################################\n \n-FT := run_pass_stage2\n-FT_LIB := $(call CFG_LIB_NAME_$(CFG_BUILD),$(FT))\n-FT_DRIVER := $(FT)_driver\n-\n-GENERATED += tmp/$(FT).rc tmp/$(FT_DRIVER).rs\n-\n-tmp/$(FT).rc tmp/$(FT_DRIVER).rs: \\\n-\t\t$(RPASS_TESTS) \\\n-\t\t$(S)src/etc/combine-tests.py\n-\t@$(call E, check: building combined stage2 test runner)\n-\t$(Q)$(CFG_PYTHON) $(S)src/etc/combine-tests.py\n-\n-define DEF_CHECK_FAST_FOR_T_H\n-# $(1) unused\n-# $(2) target triple\n-# $(3) host triple\n-\n-$$(TLIB2_T_$(2)_H_$(3))/$$(FT_LIB): \\\n-\t\ttmp/$$(FT).rc \\\n-\t\t$$(SREQ2_T_$(2)_H_$(3))\n-\t@$$(call E, oxidize: $$@)\n-\t$$(STAGE2_T_$(2)_H_$(3)) --crate-type=dylib --out-dir $$(@D) $$< \\\n-\t  -L \"$$(RT_OUTPUT_DIR_$(2))\"\n-\n-$(3)/test/$$(FT_DRIVER)-$(2)$$(X_$(2)): \\\n-\t\ttmp/$$(FT_DRIVER).rs \\\n-\t\t$$(TLIB2_T_$(2)_H_$(3))/$$(FT_LIB) \\\n-\t\t$$(SREQ2_T_$(2)_H_$(3))\n-\t@$$(call E, oxidize: $$@ $$<)\n-\t$$(STAGE2_T_$(2)_H_$(3)) -o $$@ $$< \\\n-\t  -L \"$$(RT_OUTPUT_DIR_$(2))\"\n-\n-$(3)/test/$$(FT_DRIVER)-$(2).out: \\\n-\t\t$(3)/test/$$(FT_DRIVER)-$(2)$$(X_$(2)) \\\n-\t\t$$(SREQ2_T_$(2)_H_$(3))\n-\t$$(Q)$$(call CFG_RUN_TEST_$(2),$$<,$(2),$(3)) \\\n-\t--logfile tmp/$$(FT_DRIVER)-$(2).log\n-\n-check-fast-T-$(2)-H-$(3):     \t\t\t\\\n-\t$(3)/test/$$(FT_DRIVER)-$(2).out\n-\n-endef\n-\n-$(foreach host,$(CFG_HOST), \\\n- $(eval $(foreach target,$(CFG_TARGET), \\\n-   $(eval $(call DEF_CHECK_FAST_FOR_T_H,,$(target),$(host))))))\n-\n-check-fast: tidy check-fast-H-$(CFG_BUILD) \\\n-\t    $(foreach crate,$(TARGET_CRATES),check-stage2-$(crate))\n-\t$(Q)$(CFG_PYTHON) $(S)src/etc/check-summary.py tmp/*.log\n-\n-define DEF_CHECK_FAST_FOR_H\n-\n-check-fast-H-$(1): \t\tcheck-fast-T-$(1)-H-$(1)\n-\n-endef\n-\n-$(foreach host,$(CFG_HOST),\t\t\t\\\n- $(eval $(call DEF_CHECK_FAST_FOR_H,$(host))))\n-\n RMAKE_TESTS := $(shell ls -d $(S)src/test/run-make/*/)\n RMAKE_TESTS := $(RMAKE_TESTS:$(S)src/test/run-make/%/=%)\n "}, {"sha": "68423b416f645d7a73a7776894a396b67655120f", "filename": "src/etc/combine-tests.py", "status": "removed", "additions": 0, "deletions": 91, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/31e8f2448c8cdd913566d5cb9a5cb9f0c014dcbc/src%2Fetc%2Fcombine-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/31e8f2448c8cdd913566d5cb9a5cb9f0c014dcbc/src%2Fetc%2Fcombine-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcombine-tests.py?ref=31e8f2448c8cdd913566d5cb9a5cb9f0c014dcbc", "patch": "@@ -1,91 +0,0 @@\n-# Copyright 2011-2014 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-# This combines all the working run-pass tests into a single large crate so we\n-# can run it \"fast\": spawning zillions of windows processes is our major build\n-# bottleneck (and it doesn't hurt to run faster on other platforms as well).\n-\n-import sys\n-import os\n-import codecs\n-\n-\n-def scrub(b):\n-    if sys.version_info >= (3,) and type(b) == bytes:\n-        return b.decode('ascii')\n-    else:\n-        return b\n-\n-src_dir = scrub(os.getenv(\"CFG_SRC_DIR\"))\n-if not src_dir:\n-    raise Exception(\"missing env var CFG_SRC_DIR\")\n-\n-run_pass = os.path.join(src_dir, \"src\", \"test\", \"run-pass\")\n-run_pass = os.path.abspath(run_pass)\n-stage2_tests = []\n-\n-for t in os.listdir(run_pass):\n-    if t.endswith(\".rs\") and not (\n-            t.startswith(\".\") or t.startswith(\"#\") or t.startswith(\"~\")):\n-        f = codecs.open(os.path.join(run_pass, t), \"r\", \"utf8\")\n-        s = f.read()\n-        if not (\"ignore-test\" in s or\n-                \"ignore-fast\" in s or\n-                \"ignore-win32\" in s):\n-            if not \"pub fn main\" in s and \"fn main\" in s:\n-                print(\"Warning: no public entry point in \" + t)\n-            stage2_tests.append(t)\n-        f.close()\n-\n-stage2_tests.sort()\n-\n-c = open(\"tmp/run_pass_stage2.rc\", \"w\")\n-i = 0\n-c.write(\n-\"\"\"\n-// AUTO-GENERATED FILE: DO NOT EDIT\n-#[crate_id=\\\"run_pass_stage2#0.1\\\"];\n-#[crate_id=\\\"run_pass_stage2#0.1\\\"];\n-#[feature(globs, macro_rules, struct_variant, managed_boxes)];\n-#![allow(warnings)]\n-extern crate collections;\n-\"\"\"\n-)\n-for t in stage2_tests:\n-    p = os.path.join(run_pass, t)\n-    p = p.replace(\"\\\\\", \"\\\\\\\\\")\n-    c.write(\"#[path = \\\"%s\\\"]\" % p)\n-    c.write(\"pub mod t_%d;\\n\" % i)\n-    i += 1\n-c.close()\n-\n-\n-d = open(\"tmp/run_pass_stage2_driver.rs\", \"w\")\n-d.write(\n-\"\"\"\n-// AUTO-GENERATED FILE: DO NOT EDIT\n-#[feature(globs, managed_boxes)];\n-extern crate run_pass_stage2;\n-use run_pass_stage2::*;\n-use std::io;\n-use std::io::Writer;\n-#[allow(warnings)]\n-fn main() {\n-    let mut out = io::stdout();\n-\"\"\"\n-)\n-i = 0\n-for t in stage2_tests:\n-    p = os.path.join(\"test\", \"run-pass\", t)\n-    p = p.replace(\"\\\\\", \"\\\\\\\\\")\n-    d.write(\"    out.write(\\\"run-pass [stage2]: %s\\\\n\\\".as_bytes());\\n\" % p)\n-    d.write(\"    t_%d::main();\\n\" % i)\n-    i += 1\n-d.write(\"}\\n\")"}, {"sha": "1e2cdabcb84c5199d400e1fbef1b0230ee8c6a58", "filename": "src/etc/maketest.py", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Fetc%2Fmaketest.py", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Fetc%2Fmaketest.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmaketest.py?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -12,6 +12,11 @@\n import os\n import sys\n \n+# FIXME #12303 these tests are broken on windows\n+if os.name == 'nt':\n+    print 'ignoring make tests on windows'\n+    sys.exit(0)\n+\n os.putenv('RUSTC', os.path.abspath(sys.argv[2]))\n os.putenv('TMPDIR', os.path.abspath(sys.argv[3]))\n os.putenv('CC', sys.argv[4])"}, {"sha": "801ace7d80492c1a2af85e2b2f91cf51edec837d", "filename": "src/test/auxiliary/crateresolve7x.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fauxiliary%2Fcrateresolve7x.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fauxiliary%2Fcrateresolve7x.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve7x.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:crateresolve_calories-1.rs\n // aux-build:crateresolve_calories-2.rs\n "}, {"sha": "0a1587cd7cb8031ce1cb45e1932a6d3c0b063a74", "filename": "src/test/auxiliary/issue-2414-b.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fauxiliary%2Fissue-2414-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fauxiliary%2Fissue-2414-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2414-b.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n #[crate_id=\"b#0.1\"];\n #[crate_type = \"lib\"];"}, {"sha": "1e746bf39db6196074bca1ea181bde9d73e9ab3c", "filename": "src/test/auxiliary/issue-9906.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fauxiliary%2Fissue-9906.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fauxiliary%2Fissue-9906.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-9906.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast windows doesn't like extern crate\n // aux-build:issue-9906.rs\n \n pub use other::FooBar;"}, {"sha": "664a168450583907692c27882317f5486258a55f", "filename": "src/test/compile-fail/ambig_impl_2_exe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fambig_impl_2_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fambig_impl_2_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fambig_impl_2_exe.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast aux-build\n // aux-build:ambig_impl_2_lib.rs\n extern crate ambig_impl_2_lib;\n use ambig_impl_2_lib::me;"}, {"sha": "82ecfd0ca72e2f75aba4f44522f5e5a8f618b638", "filename": "src/test/compile-fail/asm-in-bad-modifier.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fasm-in-bad-modifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fasm-in-bad-modifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fasm-in-bad-modifier.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast #[feature] doesn't work with check-fast\n #![feature(asm)]\n \n fn foo(x: int) { println!(\"{}\", x); }"}, {"sha": "d90e40687858e2381a60f2253562bdb170e4141b", "filename": "src/test/compile-fail/asm-misplaced-option.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fasm-misplaced-option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fasm-misplaced-option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fasm-misplaced-option.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast #[feature] doesn't work with check-fast\n // ignore-android\n \n #![feature(asm)]"}, {"sha": "2319594cb97072b9cf76aa13115ef13ef31f215c", "filename": "src/test/compile-fail/asm-out-assign-imm.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fasm-out-assign-imm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fasm-out-assign-imm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fasm-out-assign-imm.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast #[feature] doesn't work with check-fast\n #![feature(asm)]\n \n fn foo(x: int) { println!(\"{}\", x); }"}, {"sha": "5535c167e3cc291e121285c3363784907365c422", "filename": "src/test/compile-fail/asm-out-no-modifier.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fasm-out-no-modifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fasm-out-no-modifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fasm-out-no-modifier.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast #[feature] doesn't work with check-fast\n #![feature(asm)]\n \n fn foo(x: int) { println!(\"{}\", x); }"}, {"sha": "1d807acefe6a359c9dfb0fc890b27eee6810782a", "filename": "src/test/compile-fail/asm-out-read-uninit.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fasm-out-read-uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fasm-out-read-uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fasm-out-read-uninit.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast #[feature] doesn't work with check-fast\n #![feature(asm)]\n \n fn foo(x: int) { println!(\"{}\", x); }"}, {"sha": "66809aa72dc8ddc0e52e0c9a5881bcd1a5c8dc08", "filename": "src/test/compile-fail/builtin-superkinds-in-metadata.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fbuiltin-superkinds-in-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fbuiltin-superkinds-in-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbuiltin-superkinds-in-metadata.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n // aux-build:trait_superkinds_in_metadata.rs\n "}, {"sha": "4eb9864bc9c5978800718d15e2d9f49aa8b82c18", "filename": "src/test/compile-fail/coherence_inherent_cc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fcoherence_inherent_cc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fcoherence_inherent_cc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoherence_inherent_cc.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:coherence_inherent_cc_lib.rs\n \n // Tests that methods that implement a trait cannot be invoked"}, {"sha": "8b4801466b9b639d9dd65b1bff41505c69f3f2e0", "filename": "src/test/compile-fail/crateresolve5.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fcrateresolve5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fcrateresolve5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcrateresolve5.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:crateresolve5-1.rs\n // aux-build:crateresolve5-2.rs\n "}, {"sha": "a37c318f9ee9f4597ba3bf94e81364122e0a1621", "filename": "src/test/compile-fail/functional-struct-update-noncopyable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Ffunctional-struct-update-noncopyable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Ffunctional-struct-update-noncopyable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffunctional-struct-update-noncopyable.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -10,8 +10,8 @@\n \n // issue 7327\n \n-// ignore-fast #7103\n extern crate sync;\n+\n use sync::Arc;\n \n struct A { y: Arc<int>, x: Arc<int> }"}, {"sha": "0634ba183a8702d4836a70dd7982ba057ec644c9", "filename": "src/test/compile-fail/gated-non-ascii-idents.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fgated-non-ascii-idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fgated-non-ascii-idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-non-ascii-idents.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast feature doesn't work.\n \n #![feature(struct_variant)]\n "}, {"sha": "19b08ce655c069bf52b3b239e2e7c280e40ea377", "filename": "src/test/compile-fail/gated-trace_macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fgated-trace_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fgated-trace_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-trace_macros.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast feature doesn't work.\n \n fn main() {\n     trace_macros!(true); //~ ERROR: `trace_macros` is not stable"}, {"sha": "8509afc983284f16edf91a7c2db678842f383d21", "filename": "src/test/compile-fail/lint-stability.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast aux-build\n // aux-build:lint_stability.rs\n \n #![feature(globs)]"}, {"sha": "68059baa3850d97d325750b16bc0c43f17c6eb5f", "filename": "src/test/compile-fail/private-method-cross-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fprivate-method-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fprivate-method-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-method-cross-crate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:cci_class_5.rs\n extern crate cci_class_5;\n use cci_class_5::kitties::cat;"}, {"sha": "e7cf7c97459075c6299713cc24be6b2777ae4d58", "filename": "src/test/compile-fail/redundant-link-args.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fredundant-link-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fredundant-link-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fredundant-link-args.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-test\n+\n+// error-pattern:library 'm' already added: can't specify link_args.\n+\n+/* I think it should undefined to have multiple modules that link in the same\n+  library, but provide different link arguments. Unfortunately we don't track\n+  link_args by module -- they are just appended as discovered into the crate\n+  store -- but for now, it should be an error to provide link_args on a module\n+  that's already been included (with or without link_args). */\n+\n+#[link_name= \"m\"]\n+#[link_args=\"-foo\"]             // this could have been elided.\n+extern {\n+}\n+\n+#[link_name= \"m\"]\n+#[link_args=\"-bar\"]             // this is the actual error trigger.\n+extern {\n+}"}, {"sha": "edc0e31040d390bd6d400f1f5e0e7da6bee8f7b1", "filename": "src/test/compile-fail/xc-private-method.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fxc-private-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fxc-private-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fxc-private-method.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:xc_private_method_lib.rs\n \n extern crate xc_private_method_lib;"}, {"sha": "48b07a39eb8984cb49cc710aaa2bc4b475ebbae2", "filename": "src/test/compile-fail/xc-private-method2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fxc-private-method2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fcompile-fail%2Fxc-private-method2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fxc-private-method2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:xc_private_method_lib.rs\n \n extern crate xc_private_method_lib;"}, {"sha": "5cc5705ed75e6d0b253c0d389b9643ab62dc7ad0", "filename": "src/test/pretty/raw-str-nonexpr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fpretty%2Fraw-str-nonexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Fpretty%2Fraw-str-nonexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fraw-str-nonexpr.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast #[feature] doesn't work with check-fast\n // pp-exact\n \n #![feature(asm)]"}, {"sha": "f61cddace825d7613834e94f6744934294a96c85", "filename": "src/test/run-pass-fulldeps/macro-crate-outlive-expansion-phase.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-outlive-expansion-phase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-outlive-expansion-phase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-outlive-expansion-phase.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:macro_crate_outlive_expansion_phase.rs\n // ignore-stage1\n-// ignore-fast\n // ignore-android\n // ignore-cross-compile #12102\n "}, {"sha": "24d416a416c1e34d24b6f247714329adae3a2cdd", "filename": "src/test/run-pass-fulldeps/macro-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:macro_crate_test.rs\n // ignore-stage1\n-// ignore-fast\n // ignore-android\n // ignore-cross-compile #12102\n "}, {"sha": "1700ceaec4ffe6eaea982aa37c9edc16df043d59", "filename": "src/test/run-pass-fulldeps/phase-syntax-link-does-resolve.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass-fulldeps%2Fphase-syntax-link-does-resolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass-fulldeps%2Fphase-syntax-link-does-resolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fphase-syntax-link-does-resolve.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:macro_crate_test.rs\n // ignore-stage1\n-// ignore-fast\n // ignore-android\n // force-host\n \n@@ -19,7 +18,6 @@\n // This implies that both versions are the host architecture, meaning this test\n // must also be compiled with the host arch.\n //\n-// Hence, ignore-stage1 because macros are unstable around there, ignore-fast\n // because this doesn't work with that test runner, ignore-android because it\n // can't run host binaries, and force-host to make this test build as the host\n // arch."}, {"sha": "e2b3781fbf904ae783c168f8d50e18b9a9a43871", "filename": "src/test/run-pass-fulldeps/quote-unused-sp-no-warning.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass-fulldeps%2Fquote-unused-sp-no-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass-fulldeps%2Fquote-unused-sp-no-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fquote-unused-sp-no-warning.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // ignore-android\n #![feature(quote)]\n #[deny(unused_variable)];"}, {"sha": "53ea4fbe0c35d08f263c3b2c44c48d985e0e6f45", "filename": "src/test/run-pass-fulldeps/syntax-extension-fourcc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-fourcc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-fourcc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-fourcc.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast Feature gating doesn't work\n // ignore-stage1\n // ignore-pretty\n // ignore-cross-compile"}, {"sha": "5eb6a30c015623f4c81a93d3980252b467e5cf5e", "filename": "src/test/run-pass-fulldeps/syntax-extension-hexfloat.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-hexfloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-hexfloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-hexfloat.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -11,7 +11,6 @@\n // ignore-stage1\n // ignore-pretty\n // ignore-cross-compile #12102\n-// ignore-fast\n \n #![feature(phase)]\n #[phase(syntax)]"}, {"sha": "fd600907ddb2bc43b3e3c0102373b4f39aaf7649", "filename": "src/test/run-pass/anon-extern-mod-cross-crate-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // ignore-pretty\n // aux-build:anon-extern-mod-cross-crate-1.rs\n extern crate anonexternmod;"}, {"sha": "f420460a41247b5140fb64ec97cc87affc6147f2", "filename": "src/test/run-pass/anon_trait_static_method_exe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fanon_trait_static_method_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fanon_trait_static_method_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon_trait_static_method_exe.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast - check-fast doesn't understand aux-build\n // aux-build:anon_trait_static_method_lib.rs\n \n extern crate anon_trait_static_method_lib;"}, {"sha": "75e197923c635448efdd22735f0be3d1068387e8", "filename": "src/test/run-pass/argument-passing.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fargument-passing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fargument-passing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fargument-passing.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n struct X {\n     x: int"}, {"sha": "9df96b35ce1b40bbfb2f923d9a4b8b3dbcdc6a47", "filename": "src/test/run-pass/asm-concat-src.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fasm-concat-src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fasm-concat-src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fasm-concat-src.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast #[feature] doesn't work with check-fast\n #![feature(asm)]\n \n pub fn main() {"}, {"sha": "8a921129f92748be74857430ac869a8b3f661978", "filename": "src/test/run-pass/asm-in-out-operand.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fasm-in-out-operand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fasm-in-out-operand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fasm-in-out-operand.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast #[feature] doesn't work with check-fast\n #![feature(asm)]\n \n #[cfg(target_arch = \"x86\")]"}, {"sha": "ebbfbf925f967d71f2d5715d09c4a631f0c3127c", "filename": "src/test/run-pass/asm-out-assign.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fasm-out-assign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fasm-out-assign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fasm-out-assign.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast #[feature] doesn't work with check-fast\n #![feature(asm)]\n \n #[cfg(target_arch = \"x86\")]"}, {"sha": "8ae2c1600aa28eb9294342ba6dd97d23feeec1d4", "filename": "src/test/run-pass/attr-main-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fattr-main-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fattr-main-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-main-2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n pub fn main() {\n     fail!()"}, {"sha": "cf8940b4d5b2da6f0941bb29cf94e4bfd746abe8", "filename": "src/test/run-pass/attr-main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fattr-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fattr-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-main.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n #[main]\n fn foo() {"}, {"sha": "35a0da4dcf3cc66bae9936c88c6be353abf4de99", "filename": "src/test/run-pass/attr-start.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fattr-start.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fattr-start.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-start.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//ignore-fast\n \n #[start]\n fn start(_argc: int, _argv: **u8) -> int {"}, {"sha": "a51439dceb8442a580589f6518c1e37788609e1d", "filename": "src/test/run-pass/auto-encode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fauto-encode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fauto-encode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto-encode.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-test FIXME(#5121)\n-// ignore-fast\n \n #[feature(managed_boxes)];\n "}, {"sha": "b1db7ac907a318fd33c57481658915e9a820b165", "filename": "src/test/run-pass/backtrace.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbacktrace.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-win32 FIXME #13259\n-// ignore-fast this is executing itself\n #![no_uv]\n \n extern crate native;"}, {"sha": "d82393b8b7f6b995ed55e116e566563e4e8d97a9", "filename": "src/test/run-pass/bind-by-move.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fbind-by-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fbind-by-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbind-by-move.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n extern crate sync;\n+\n use sync::Arc;\n fn dispose(_x: Arc<bool>) { }\n "}, {"sha": "658c888b8d83a796e4c6f48125633de5e23c3154", "filename": "src/test/run-pass/bitv-perf-test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fbitv-perf-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fbitv-perf-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbitv-perf-test.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "6ffb032090c9a8264438039d7301a15508a046ca", "filename": "src/test/run-pass/block-iter-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fblock-iter-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fblock-iter-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-iter-1.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n \n fn iter_vec<T>(v: Vec<T> , f: |&T|) { for x in v.iter() { f(x); } }"}, {"sha": "5f4154290ac70d5eb00cf940675eb1a89d2520cd", "filename": "src/test/run-pass/block-iter-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fblock-iter-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fblock-iter-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-iter-2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n \n fn iter_vec<T>(v: Vec<T> , f: |&T|) { for x in v.iter() { f(x); } }"}, {"sha": "f52993f8559fd455541b536e2a89633625cb784c", "filename": "src/test/run-pass/builtin-superkinds-capabilities-xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-capabilities-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-capabilities-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-capabilities-xc.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n // aux-build:trait_superkinds_in_metadata.rs\n "}, {"sha": "ba57f095e1a99a82a662b58add0ab69a4b87782b", "filename": "src/test/run-pass/builtin-superkinds-in-metadata.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-in-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-in-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-in-metadata.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n // aux-build:trait_superkinds_in_metadata.rs\n "}, {"sha": "bd4da3625dbec51b81a3dc20ac6e50a3cbef0926", "filename": "src/test/run-pass/capturing-logging.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcapturing-logging.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcapturing-logging.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcapturing-logging.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // ignore-android (FIXME #11419)\n // exec-env:RUST_LOG=info\n "}, {"sha": "bfc08502625c1944ffa0a2fa6dd6404092f731c8", "filename": "src/test/run-pass/cci_borrow.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcci_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcci_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_borrow.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast - check-fast doesn't understand aux-build\n // aux-build:cci_borrow_lib.rs\n \n #[feature(managed_boxes)];"}, {"sha": "c4bf8131506228ff9c4e2b8b46a598ae23fc9cfe", "filename": "src/test/run-pass/cci_capture_clause.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcci_capture_clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcci_capture_clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_capture_clause.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:cci_capture_clause.rs\n-// ignore-fast\n \n // This test makes sure we can do cross-crate inlining on functions\n // that use capture clauses."}, {"sha": "8a291febb6d458e3db08311ea3e8fae8ad655a25", "filename": "src/test/run-pass/cci_impl_exe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcci_impl_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcci_impl_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_impl_exe.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast - check-fast doesn't understand aux-build\n // aux-build:cci_impl_lib.rs\n \n extern crate cci_impl_lib;"}, {"sha": "0519ba6662b1bfcec9da93b4485eb70fd2d33c36", "filename": "src/test/run-pass/cci_iter_exe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcci_iter_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcci_iter_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_iter_exe.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast - check-fast doesn't understand aux-build\n // aux-build:cci_iter_lib.rs\n \n extern crate cci_iter_lib;"}, {"sha": "27ef4a19a53ea2ba9393b053f6b0f3530aa6076c", "filename": "src/test/run-pass/cci_nested_exe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcci_nested_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcci_nested_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_nested_exe.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast - check-fast doesn't understand aux-build\n // aux-build:cci_nested_lib.rs\n \n #[feature(globs, managed_boxes)];"}, {"sha": "2f02fc9acb9eea9cad2308dc1c1e9993bef2cf44", "filename": "src/test/run-pass/cci_no_inline_exe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcci_no_inline_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcci_no_inline_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_no_inline_exe.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast - check-fast doesn't understand aux-build\n // aux-build:cci_no_inline_lib.rs\n \n extern crate cci_no_inline_lib;"}, {"sha": "9eb44d510a9c0eee63d9c35b07d8f1bfc7d87d4e", "filename": "src/test/run-pass/cfg-macros-foo.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcfg-macros-foo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcfg-macros-foo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcfg-macros-foo.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast compile-flags directive doesn't work for check-fast\n // compile-flags: --cfg foo\n \n // check that cfg correctly chooses between the macro impls (see also"}, {"sha": "3084e087bd214c54bde5a7b1b69b7037f4da3a01", "filename": "src/test/run-pass/cfg-macros-notfoo.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcfg-macros-notfoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcfg-macros-notfoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcfg-macros-notfoo.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast compile-flags directive doesn't work for check-fast\n // compile-flags:\n \n // check that cfg correctly chooses between the macro impls (see also"}, {"sha": "04912fc20037a1bd26fb9b6dc60141a5d3fe7935", "filename": "src/test/run-pass/cfg_inner_static.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcfg_inner_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcfg_inner_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcfg_inner_static.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:cfg_inner_static.rs\n-// ignore-fast\n \n extern crate cfg_inner_static;\n "}, {"sha": "205dce64b78b5bc35f0043996d476222aaa6f7f9", "filename": "src/test/run-pass/cfgs-on-items.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcfgs-on-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcfgs-on-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcfgs-on-items.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // compile-flags: --cfg fooA --cfg fooB\n \n // fooA AND !bar"}, {"sha": "f6a6808c9e798ba1af188849df4136da6387fe1b", "filename": "src/test/run-pass/class-cast-to-trait-cross-crate-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:cci_class_cast.rs\n extern crate cci_class_cast;\n use std::to_str::ToStr;"}, {"sha": "62b2824b974b7b41c1375d6d27eb0f4fffa68e91", "filename": "src/test/run-pass/class-exports.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-exports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-exports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-exports.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "bbdc7997aba5c1b5f131172c879f4e9460bd0375", "filename": "src/test/run-pass/class-impl-very-parameterized-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-impl-very-parameterized-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-impl-very-parameterized-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-impl-very-parameterized-trait.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n use std::cmp;\n "}, {"sha": "fa78b7c3e98a1afca2bdc99536c3701ea901728e", "filename": "src/test/run-pass/class-implement-trait-cross-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-implement-trait-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-implement-trait-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-implement-trait-cross-crate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:cci_class_trait.rs\n extern crate cci_class_trait;\n use cci_class_trait::animals::noisy;"}, {"sha": "9fbdaa8c0198affadf06c533c67e33cd24a20957", "filename": "src/test/run-pass/class-implement-traits.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-implement-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-implement-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-implement-traits.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n trait noisy {\n     fn speak(&mut self);"}, {"sha": "e05ed750b5d959c250a3034620f58688a725fd27", "filename": "src/test/run-pass/class-method-cross-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-method-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-method-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-method-cross-crate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:cci_class_2.rs\n extern crate cci_class_2;\n use cci_class_2::kitties::cat;"}, {"sha": "4ff287007774752b75029baa931803bf9afe1ab5", "filename": "src/test/run-pass/class-methods-cross-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-methods-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-methods-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-methods-cross-crate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:cci_class_3.rs\n extern crate cci_class_3;\n use cci_class_3::kitties::cat;"}, {"sha": "ea3becb70603a7af02574d0897e6e1210f76b3dd", "filename": "src/test/run-pass/class-poly-methods-cross-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-poly-methods-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-poly-methods-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-poly-methods-cross-crate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:cci_class_6.rs\n extern crate cci_class_6;\n use cci_class_6::kitties::cat;"}, {"sha": "637cdc6384806b2b7a158c0a283c4e395ca13a3f", "filename": "src/test/run-pass/class-separate-impl.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-separate-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclass-separate-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-separate-impl.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n-\n use std::fmt;\n \n struct cat {"}, {"sha": "c6b4af77f9fcde844d6436adaded3a9686e96aa1", "filename": "src/test/run-pass/classes-cross-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclasses-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclasses-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclasses-cross-crate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:cci_class_4.rs\n extern crate cci_class_4;\n use cci_class_4::kitties::cat;"}, {"sha": "f6f742fb1dfb985d1d5e0123651999155b2a5585", "filename": "src/test/run-pass/classes-simple-cross-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclasses-simple-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclasses-simple-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclasses-simple-cross-crate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:cci_class.rs\n extern crate cci_class;\n use cci_class::kitties::cat;"}, {"sha": "410b74165460232c9c8840872418d3c43ff859bd", "filename": "src/test/run-pass/closure-inference.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclosure-inference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fclosure-inference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclosure-inference.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n fn foo(i: int) -> int { i + 1 }\n "}, {"sha": "ebb495de88b8f9017e3f7f8c8390622bd56a7115", "filename": "src/test/run-pass/conditional-compile.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fconditional-compile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fconditional-compile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconditional-compile.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "944141839cf54090f895672ccf4e3e2ad08c7399", "filename": "src/test/run-pass/conditional-debug-macro-off.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-off.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-off.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-off.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast exec-env directive doesn't work for check-fast\n // compile-flags: --cfg ndebug\n // exec-env:RUST_LOG=conditional-debug-macro-off=4\n "}, {"sha": "732c50afbf3b2dd5563980613aed5e5592243084", "filename": "src/test/run-pass/conditional-debug-macro-on.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-on.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-on.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-on.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast compile-flags directive doesn't work for check-fast\n // exec-env:RUST_LOG=conditional-debug-macro-on=4\n \n pub fn main() {"}, {"sha": "bcf58431d0dcd4b5ab9ddf528f60032e280c0317", "filename": "src/test/run-pass/const-cross-crate-const.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fconst-cross-crate-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fconst-cross-crate-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-cross-crate-const.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:cci_const.rs\n \n extern crate cci_const;"}, {"sha": "a299c74aa5b065b34e186d6b39c726191788d000", "filename": "src/test/run-pass/const-cross-crate-extern.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fconst-cross-crate-extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fconst-cross-crate-extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-cross-crate-extern.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:cci_const.rs\n \n extern crate cci_const;"}, {"sha": "c808534257a0776615206ab038d84fa98af449e0", "filename": "src/test/run-pass/core-run-destroy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // ignore-pretty\n // compile-flags:--test\n "}, {"sha": "e55508b4c15be34c03639e075069b26a0d671518", "filename": "src/test/run-pass/crate-method-reexport-grrrrrrr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcrate-method-reexport-grrrrrrr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcrate-method-reexport-grrrrrrr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrate-method-reexport-grrrrrrr.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -14,7 +14,6 @@\n // name_pool::methods impl in the other crate is reachable from this\n // crate.\n \n-// ignore-fast\n // aux-build:crate-method-reexport-grrrrrrr2.rs\n \n extern crate crate_method_reexport_grrrrrrr2;"}, {"sha": "61e269bf9e3544f8ccd9ff6fa4176680d1ce98e7", "filename": "src/test/run-pass/crateresolve1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcrateresolve1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcrateresolve1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve1.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:crateresolve1-1.rs\n // aux-build:crateresolve1-2.rs\n // aux-build:crateresolve1-3.rs"}, {"sha": "5ed1f37c7b9e570872457c587e896bb5efd83e44", "filename": "src/test/run-pass/crateresolve2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcrateresolve2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcrateresolve2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:crateresolve2-1.rs\n // aux-build:crateresolve2-2.rs\n // aux-build:crateresolve2-3.rs"}, {"sha": "cee9e6991c4564f08351b6c9e9bf76315c54832c", "filename": "src/test/run-pass/crateresolve3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcrateresolve3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcrateresolve3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve3.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:crateresolve3-1.rs\n // aux-build:crateresolve3-2.rs\n "}, {"sha": "c68961522269a5877c39fa07b47e8f9256bb96ca", "filename": "src/test/run-pass/crateresolve4.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcrateresolve4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcrateresolve4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve4.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:crateresolve4a-1.rs\n // aux-build:crateresolve4a-2.rs\n // aux-build:crateresolve4b-1.rs"}, {"sha": "3f74731090b6c08256db930b4c31c3da55b811b5", "filename": "src/test/run-pass/crateresolve5.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcrateresolve5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcrateresolve5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve5.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:crateresolve5-1.rs\n // aux-build:crateresolve5-2.rs\n "}, {"sha": "1ce8a8a7350c18c1572c46cf8bd1a231399e7a27", "filename": "src/test/run-pass/crateresolve8.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcrateresolve8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcrateresolve8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve8.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:crateresolve8-1.rs\n \n #[crate_id=\"crateresolve8#0.1\"];"}, {"sha": "14be5773e84db4c53425045b820dd6250dc53195", "filename": "src/test/run-pass/cross-crate-const-pat.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcross-crate-const-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcross-crate-const-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcross-crate-const-pat.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:cci_const.rs\n \n extern crate cci_const;"}, {"sha": "c2083c8e705eecb18eb86421b5558568bd739960", "filename": "src/test/run-pass/cross-crate-newtype-struct-pat.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcross-crate-newtype-struct-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fcross-crate-newtype-struct-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcross-crate-newtype-struct-pat.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:newtype_struct_xc.rs\n \n extern crate newtype_struct_xc;"}, {"sha": "2742696a74da5d80a488f6e25efbb174b35df08a", "filename": "src/test/run-pass/deriving-encodable-decodable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-encodable-decodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-encodable-decodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-encodable-decodable.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -11,7 +11,6 @@\n // This actually tests a lot more than just encodable/decodable, but it gets the\n // job done at least\n \n-// ignore-fast\n // ignore-test FIXME(#5121)\n \n #[feature(struct_variant, managed_boxes)];"}, {"sha": "55e2615835ab4c162f071250ac63f0bb823ea3a4", "filename": "src/test/run-pass/deriving-global.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-global.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-global.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-global.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast #7103 `extern crate` does not work on check-fast\n // ignore-pretty - does not converge\n \n // Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT"}, {"sha": "59d3383faf347a587f56b6fefd15c060acf81052", "filename": "src/test/run-pass/deriving-hash.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-hash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-hash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-hash.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n use std::hash;\n use std::hash::Hash;"}, {"sha": "e851ff566d52b2d9e823c003f1862899621413cc", "filename": "src/test/run-pass/deriving-meta-empty-trait-list.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-meta-empty-trait-list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-meta-empty-trait-list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-meta-empty-trait-list.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -10,7 +10,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n #[deriving]   //~ WARNING empty trait list in `deriving`\n struct Foo;"}, {"sha": "1eb7631da049122851a8c9ea3f9baaa28805f828", "filename": "src/test/run-pass/deriving-meta-multiple.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-meta-multiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-meta-multiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-meta-multiple.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "1eb7631da049122851a8c9ea3f9baaa28805f828", "filename": "src/test/run-pass/deriving-meta.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-meta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-meta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-meta.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "9b295a579155bf8145fa3add3074bffd840cb49c", "filename": "src/test/run-pass/deriving-rand.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-rand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-rand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-rand.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast #6330\n // Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n@@ -9,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast #7103 `extern crate` does not work on check-fast\n \n #[feature(struct_variant)];\n "}, {"sha": "778767cfcc1e9b938a1a5a165be807d514755a8f", "filename": "src/test/run-pass/deriving-via-extension-hash-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-via-extension-hash-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-via-extension-hash-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-hash-enum.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "a281c5156b6edb7a15d6f5ad8cc851ceab2c4d41", "filename": "src/test/run-pass/deriving-via-extension-hash-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-via-extension-hash-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-via-extension-hash-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-hash-struct.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "42915d8119d8fcc57eeeb6e3df83b208de5562d5", "filename": "src/test/run-pass/deriving-via-extension-type-params.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-via-extension-type-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fderiving-via-extension-type-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-type-params.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "65e2b178abf7073668e85be9f1747fac5eb7a372", "filename": "src/test/run-pass/duplicated-external-mods.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fduplicated-external-mods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fduplicated-external-mods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fduplicated-external-mods.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:anon-extern-mod-cross-crate-1.rs\n // aux-build:anon-extern-mod-cross-crate-1.rs\n extern crate anonexternmod;"}, {"sha": "36b5f86aedab48727709be3864cefa42454c9d39", "filename": "src/test/run-pass/evec-internal.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fevec-internal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fevec-internal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fevec-internal.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-test\n-// ignore-fast\n \n // Doesn't work; needs a design decision.\n "}, {"sha": "317dfe3f927a5e7ef61ad8d21f33810608a514db", "filename": "src/test/run-pass/exec-env.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexec-env.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexec-env.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexec-env.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast (exec-env not supported in fast mode)\n // exec-env:TEST_EXEC_ENV=22\n \n use std::os;"}, {"sha": "789d8f4b06fffafca07691da003f139e9ed4c1a2", "filename": "src/test/run-pass/explicit_self_xcrate_exe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexplicit_self_xcrate_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexplicit_self_xcrate_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexplicit_self_xcrate_exe.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:explicit_self_xcrate.rs\n \n extern crate explicit_self_xcrate;"}, {"sha": "b960a31bc0c71d636df79dd795f2b221d0a93837", "filename": "src/test/run-pass/export-glob-imports-target.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexport-glob-imports-target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexport-glob-imports-target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexport-glob-imports-target.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "2e44bf5be5bc6009e10008cd8e18231a81936dab", "filename": "src/test/run-pass/export-multi.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexport-multi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexport-multi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexport-multi.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "091c389840ac0bc25c3e98de656224ef45fa2ab3", "filename": "src/test/run-pass/export-non-interference3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexport-non-interference3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexport-non-interference3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexport-non-interference3.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "7a5df556400314870318c7141b368d5dcc63ee2a", "filename": "src/test/run-pass/expr-block-generic-box2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-block-generic-box2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-block-generic-box2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-block-generic-box2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -10,7 +10,6 @@\n \n #[feature(managed_boxes)];\n \n-// ignore-fast\n \n type compare<'a, T> = |T, T|: 'a -> bool;\n "}, {"sha": "f45312f9e09d33bab4c6552ec7073b4cf86665d6", "filename": "src/test/run-pass/expr-block-generic-unique2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-block-generic-unique2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-block-generic-unique2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-block-generic-unique2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n type compare<'a, T> = |T, T|: 'a -> bool;\n "}, {"sha": "677914fd60e6f65f32ccb876db55e31bbba0aa68", "filename": "src/test/run-pass/expr-block-generic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-block-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-block-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-block-generic.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n \n-// ignore-fast\n \n // Tests for standalone blocks as expressions with dynamic type sizes\n type compare<'a, T> = |T, T|: 'a -> bool;"}, {"sha": "4a45ce660585f70d87e7c8b3d6e0b96870e22e92", "filename": "src/test/run-pass/expr-copy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-copy.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n fn f(arg: &mut A) {\n     arg.a = 100;"}, {"sha": "ffbb47644641238c2be77aad473264c9dc3a52bf", "filename": "src/test/run-pass/expr-if-generic-box2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-if-generic-box2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-if-generic-box2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-if-generic-box2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -10,7 +10,6 @@\n \n #[feature(managed_boxes)];\n \n-// ignore-fast\n \n type compare<T> = |T, T|: 'static -> bool;\n "}, {"sha": "b7408440404de0cfc6e55e788d6c88138d884d30", "filename": "src/test/run-pass/expr-if-generic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-if-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-if-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-if-generic.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n // Tests for if as expressions with dynamic type sizes\n type compare<T> = |T, T|: 'static -> bool;"}, {"sha": "f342c141541b454557857b72593e5e259064afbb", "filename": "src/test/run-pass/expr-match-generic-box2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-match-generic-box2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-match-generic-box2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-match-generic-box2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -10,7 +10,6 @@\n \n #[feature(managed_boxes)];\n \n-// ignore-fast\n \n type compare<T> = |T, T|: 'static -> bool;\n "}, {"sha": "d229672d057293304cc7f2bb341a26e9a376a19a", "filename": "src/test/run-pass/expr-match-generic-unique2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-match-generic-unique2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-match-generic-unique2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-match-generic-unique2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n type compare<'a, T> = |T, T|: 'a -> bool;\n "}, {"sha": "ff19862fee3435e4ab49a9d693c8250eeec7804b", "filename": "src/test/run-pass/expr-match-generic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-match-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-match-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-match-generic.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n type compare<T> = extern \"Rust\" fn(T, T) -> bool;\n "}, {"sha": "324ff59dcb8f0c1c421b1da0d6e1b20ffe0b10f4", "filename": "src/test/run-pass/expr-scope.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fexpr-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-scope.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // Regression test for issue #762\n-// ignore-fast\n \n pub fn f() { }\n pub fn main() { return ::f(); }"}, {"sha": "bdb1326aa15c03f0e2b6c47395e32dca1ef8c0dd", "filename": "src/test/run-pass/extern-calling-convention-test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fextern-calling-convention-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fextern-calling-convention-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-calling-convention-test.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast: aux-build not compatible with fast\n // aux-build:extern_calling_convention.rs\n \n extern crate extern_calling_convention;"}, {"sha": "3faf5744199862c9ba9533504c25f459fad7c8ec", "filename": "src/test/run-pass/extern-crosscrate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fextern-crosscrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fextern-crosscrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-crosscrate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n //aux-build:extern-crosscrate-source.rs\n \n extern crate externcallback = \"externcallback#0.1\";"}, {"sha": "615013888bd1386b89e43f7072b5aafee4ee9e1a", "filename": "src/test/run-pass/extern-fn-reachable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fextern-fn-reachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fextern-fn-reachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-fn-reachable.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // ignore-win32 dynamic_lib can read dllexported symbols only\n // ignore-linux apparently dlsym doesn't work on program symbols?\n // ignore-android apparently dlsym doesn't work on program symbols?"}, {"sha": "7e9e6073252b94f5880228c841661836df5cdd86", "filename": "src/test/run-pass/extern-mod-ordering-exe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fextern-mod-ordering-exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fextern-mod-ordering-exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-mod-ordering-exe.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:extern_mod_ordering_lib.rs\n-// ignore-fast\n \n extern crate extern_mod_ordering_lib;\n "}, {"sha": "f6136b153a104dfd1f6ff721fe20c9007d4967b2", "filename": "src/test/run-pass/extern-mod-syntax.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fextern-mod-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fextern-mod-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-mod-syntax.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "1a786e968ca0d35d24334db96d6819681f531fbb", "filename": "src/test/run-pass/fixed_length_vec_glue.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ffixed_length_vec_glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ffixed_length_vec_glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffixed_length_vec_glue.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast: check-fast screws up repr paths\n \n use std::repr;\n "}, {"sha": "4da7d0fb7433bafa5c974cf549f3f7f26c8043c1", "filename": "src/test/run-pass/foreign-dupe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fforeign-dupe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fforeign-dupe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-dupe.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast - Somehow causes check-fast to livelock?? Probably because we're\n // calling pin_task and that's having wierd side-effects.\n \n mod rustrt1 {"}, {"sha": "ae168cb17c624140ec926cb0c675e2945a006d53", "filename": "src/test/run-pass/generic-default-type-params-cross-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fgeneric-default-type-params-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fgeneric-default-type-params-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-default-type-params-cross-crate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:default_type_params_xc.rs\n \n-// ignore-fast #[feature] doesn't work with check-fast\n #[feature(default_type_params)];\n \n extern crate default_type_params_xc;"}, {"sha": "360f08845752f93e8b77958123d954771f88eb09", "filename": "src/test/run-pass/generic-default-type-params.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fgeneric-default-type-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fgeneric-default-type-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-default-type-params.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast #[feature] doesn't work with check-fast\n #[feature(default_type_params)];\n \n struct Foo<A = (int, char)> {"}, {"sha": "3db794d88f025f73c7f7094ce16bc5f0488faafb", "filename": "src/test/run-pass/generic-temporary.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fgeneric-temporary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fgeneric-temporary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-temporary.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n fn mk() -> int { return 1; }\n "}, {"sha": "6ccd9c33be91cd44127f22c35cb6dec029f76c14", "filename": "src/test/run-pass/getopts_ref.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fgetopts_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fgetopts_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgetopts_ref.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "a19a8a1c8ec85720818166b7fc2297f60ad4c64f", "filename": "src/test/run-pass/glob-std.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fglob-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fglob-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fglob-std.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast check-fast doesn't like 'extern crate extra'\n // ignore-win32 TempDir may cause IoError on windows: #10462\n \n #[feature(macro_rules)];"}, {"sha": "618916e8569079822d47e5dd1ad087e85c3884f6", "filename": "src/test/run-pass/global-scope.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fglobal-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fglobal-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fglobal-scope.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n pub fn f() -> int { return 1; }\n "}, {"sha": "94035ddc7bb95c7e171eec3d37775188d3bb1fe7", "filename": "src/test/run-pass/hashmap-memory.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "8568ceafa530e76f4faeff6ab8d86d17007b199e", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast: check-fast screws up repr paths\n \n #[feature(macro_rules)];\n #![deny(warnings)]"}, {"sha": "d7e53f3c38ff793eafb667a9df41e8addc6d6adc", "filename": "src/test/run-pass/impl-privacy-xc-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-1.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:impl_privacy_xc_1.rs\n-// ignore-fast\n \n extern crate impl_privacy_xc_1;\n "}, {"sha": "3ef4b43d079c8b996645097f773e9e1d2896860e", "filename": "src/test/run-pass/impl-privacy-xc-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:impl_privacy_xc_2.rs\n-// ignore-fast\n \n extern crate impl_privacy_xc_2;\n "}, {"sha": "bbf914411fde4a0c0956b939ef6907013261f433", "filename": "src/test/run-pass/import-from.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport-from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport-from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-from.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "44d98852054115d4131425c05265f7c6dfebff6a", "filename": "src/test/run-pass/import-glob-0.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport-glob-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport-glob-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-glob-0.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "a154388b2c541addf74fda6ef5f24f8cab458b52", "filename": "src/test/run-pass/import-glob-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "42a90b3e39a4e95efd9d0c242295e6b30644e778", "filename": "src/test/run-pass/import-trailing-comma.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport-trailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport-trailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-trailing-comma.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "6b0ad24da1d20059e07ecb13324f7a06181c94f1", "filename": "src/test/run-pass/import.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "d684c30aca1b80e26e64a281acb5433f4d4e0f30", "filename": "src/test/run-pass/import2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "1bbe141eaff61af81f8ca2b0d72bf4c64a46f2b5", "filename": "src/test/run-pass/import3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport3.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "44f6b6140fbffaeca2bdd1617d32b65c84280c32", "filename": "src/test/run-pass/import4.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport4.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "18cc1aa08482a3317c31f005691adf5f0a4b1264", "filename": "src/test/run-pass/import5.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport5.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "a6b3d90a4eea4266ee114a78d0fa968abbe76dfa", "filename": "src/test/run-pass/import6.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport6.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "d5c9bc23e2a2d4a7b6189a73390160021dbca8c2", "filename": "src/test/run-pass/import7.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport7.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "58ccf3aaa1e3d9b651150f7a5d4fff09cd0e1350", "filename": "src/test/run-pass/import8.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fimport8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport8.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "f9b430c1553dd7b7b4ddfbcf95392bfef70e39ff", "filename": "src/test/run-pass/inner-static.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Finner-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Finner-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finner-static.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:inner_static.rs\n-// ignore-fast\n \n extern crate inner_static;\n "}, {"sha": "12385a26437b2978288202c589c2bca25c040b81", "filename": "src/test/run-pass/intrinsic-alignment.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast Does not work with main in a submodule\n \n mod rusti {\n     extern \"rust-intrinsic\" {"}, {"sha": "e6a81dbe5d95f9d68c774ac27c87b702c7d9f062", "filename": "src/test/run-pass/intrinsic-atomics-cc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fintrinsic-atomics-cc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fintrinsic-atomics-cc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsic-atomics-cc.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast - check-fast doesn't understand aux-build\n // aux-build:cci_intrinsic.rs\n \n extern crate cci_intrinsic;"}, {"sha": "164d16fe50397e348d9654411cef4304ee291343", "filename": "src/test/run-pass/intrinsics-integer.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fintrinsics-integer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fintrinsics-integer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsics-integer.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "5e1981fbcbca29790044e108df0db5666b40653b", "filename": "src/test/run-pass/intrinsics-math.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "2603e2d1b099c26d0231a22f236067e590f16318", "filename": "src/test/run-pass/invoke-external-foreign.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // ignore-pretty\n // aux-build:foreign_lib.rs\n "}, {"sha": "f4f7e24d156f2f560d30642b8e58bbafdc9c4c29", "filename": "src/test/run-pass/issue-10028.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-10028.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-10028.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-10028.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:issue-10028.rs\n-// ignore-fast\n \n extern crate issue10028 = \"issue-10028\";\n "}, {"sha": "a94ed4ed5b90a29df8cf37423256e164eebd903c", "filename": "src/test/run-pass/issue-10031.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-10031.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-10031.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-10031.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast - check-fast doesn't understand aux-build\n // aux-build:issue_10031_aux.rs\n extern crate issue_10031_aux;\n "}, {"sha": "4f3763f80390a1df0afea1a9b23899bf649b184d", "filename": "src/test/run-pass/issue-10626.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-10626.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-10626.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-10626.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n // Make sure that if a process doesn't have its stdio/stderr descriptors set up\n // that we don't die in a large ball of fire"}, {"sha": "69a23e8099076a6ebe94b85d6559debca3ec8890", "filename": "src/test/run-pass/issue-10806.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-10806.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-10806.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-10806.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n pub fn foo() -> int {\n     3"}, {"sha": "3483bdd53b5f8599da533514a659b5e1ddb2a8d8", "filename": "src/test/run-pass/issue-11085.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-11085.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-11085.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11085.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // compile-flags: --cfg foo\n-// ignore-fast\n \n #[feature(struct_variant)];\n "}, {"sha": "c247893ef6b07a1b74105441481fa8eb701dcdb2", "filename": "src/test/run-pass/issue-11224.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-11224.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-11224.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11224.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:issue-11224.rs\n-// ignore-fast\n \n extern crate unused = \"issue-11224\";\n "}, {"sha": "ecedeaba75178ba3e162ad9161309ca4647e2fe7", "filename": "src/test/run-pass/issue-11225-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-11225-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-11225-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11225-1.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:issue-11225-1.rs\n-// ignore-fast\n \n extern crate foo = \"issue-11225-1\";\n "}, {"sha": "774d9e6d1b8aac9246f46188967d267dcab84305", "filename": "src/test/run-pass/issue-11225-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-11225-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-11225-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11225-2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:issue-11225-2.rs\n-// ignore-fast\n \n extern crate foo = \"issue-11225-2\";\n "}, {"sha": "25d3a241ebdbb4f69c0b5fb7965a4e5095d9811e", "filename": "src/test/run-pass/issue-11508.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-11508.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-11508.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11508.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:issue-11508.rs\n-// ignore-fast\n \n extern crate rand = \"issue-11508\";\n "}, {"sha": "c11f7c79db195a9ba0a0e64b54af4203e8a943f5", "filename": "src/test/run-pass/issue-11529.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-11529.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-11529.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11529.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:issue-11529.rs\n-// ignore-fast\n \n extern crate a = \"issue-11529\";\n "}, {"sha": "009a0783b589f22fa712413be8f7f376f6a0d461", "filename": "src/test/run-pass/issue-12684.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-12684.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-12684.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-12684.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n extern crate native;\n extern crate green;"}, {"sha": "02790dab7b9976d0af9c6abeeba100ecfa6f243e", "filename": "src/test/run-pass/issue-12699.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-12699.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-12699.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-12699.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n extern crate native;\n "}, {"sha": "187a45e65431bc14ee0186b5e926c6fd57e9c769", "filename": "src/test/run-pass/issue-12860.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-12860.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-12860.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-12860.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n extern crate collections;\n "}, {"sha": "0113b8e2fd99fabc1c6aa1028533da136ecc5eca", "filename": "src/test/run-pass/issue-1696.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-1696.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-1696.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-1696.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "492e76552d458bad87e2ec1623fc8e127b08d9c6", "filename": "src/test/run-pass/issue-2185.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2185.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2185.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2185.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-test\n-// ignore-fast\n \n // notes on this test case:\n // On Thu, Apr 18, 2013-2014 at 6:30 PM, John Clements <clements@brinckerhoff.org> wrote:"}, {"sha": "1fa9fa8f4fb344098465ccf11ab7649fca289828", "filename": "src/test/run-pass/issue-2214.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2214.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2214.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2214.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "a27f0b8d6598cbd2a84c54aff3b49a8a2ca62aea", "filename": "src/test/run-pass/issue-2316-c.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2316-c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2316-c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2316-c.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast - check-fast doesn't understand aux-build\n // aux-build:issue_2316_a.rs\n // aux-build:issue_2316_b.rs\n "}, {"sha": "22976aac6e774ae3e5a93412c0ba96fcfdec6e10", "filename": "src/test/run-pass/issue-2380-b.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2380-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2380-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2380-b.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:issue-2380.rs\n \n extern crate a;"}, {"sha": "1197e53ffd964a0dac138d65d5ff3678d6dfb6d3", "filename": "src/test/run-pass/issue-2383.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2383.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2383.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2383.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "0b891fbddccf14a7b04d312491dbf36de5b22cac", "filename": "src/test/run-pass/issue-2414-c.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2414-c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2414-c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2414-c.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:issue-2414-a.rs\n // aux-build:issue-2414-b.rs\n "}, {"sha": "53b0042405b0bb7c6175cc9fe624479a4cfee860", "filename": "src/test/run-pass/issue-2472.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2472.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2472.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2472.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:issue_2472_b.rs\n-// ignore-fast\n \n extern crate issue_2472_b;\n "}, {"sha": "53c7f60ebb779c1a9d2ce1f51496de4255814c43", "filename": "src/test/run-pass/issue-2526-a.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:issue-2526.rs\n \n #![feature(globs)]"}, {"sha": "389234465986d8d3fce84443fcb36a68d2e5d101", "filename": "src/test/run-pass/issue-2631-b.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2631-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2631-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2631-b.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -10,7 +10,6 @@\n \n #[feature(managed_boxes)];\n \n-// ignore-fast\n // aux-build:issue-2631-a.rs\n \n extern crate collections;"}, {"sha": "0598fafd96e84a03dd8b46c456c77db8dc219821", "filename": "src/test/run-pass/issue-2718.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2718.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2718.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2718.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "bab7b0d24db70f2af04493989d13c80425d29f81", "filename": "src/test/run-pass/issue-2723-b.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2723-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2723-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2723-b.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast: aux-build not compatible with fast\n // aux-build:issue_2723_a.rs\n \n extern crate issue_2723_a;"}, {"sha": "e03b383283f810d396cff6b0197fbc356bc32b4a", "filename": "src/test/run-pass/issue-2804-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2804-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2804-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2804-2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "9be9b5237c86b1ba0812c9c4a257ca71d624e85b", "filename": "src/test/run-pass/issue-2804.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2804.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2804.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2804.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "16133a762c59db1981f1d5e3a987d8d1ee47dab0", "filename": "src/test/run-pass/issue-2904.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2904.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-2904.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2904.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "9290e6200c5d218b50bc586c4b6a948131090629", "filename": "src/test/run-pass/issue-3012-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-3012-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-3012-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3012-2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:issue-3012-1.rs\n \n #[feature(managed_boxes)];"}, {"sha": "6c181935205820a49e1f7986a83dc029263d3433", "filename": "src/test/run-pass/issue-3026.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-3026.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-3026.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3026.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "385ac1a56e34534175a1620f2786f7542daa67fb", "filename": "src/test/run-pass/issue-3424.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-3424.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-3424.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3424.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "6d70b15c62164906ffeef0889f69518f0faa21f6", "filename": "src/test/run-pass/issue-3656.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-3656.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-3656.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3656.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast Can't redeclare malloc with wrong signature because bugs\n // Issue #3656\n // Incorrect struct size computation in the FFI, because of not taking\n // the alignment of elements into account."}, {"sha": "a062b4c71752f5a4c038415274e48d9ede867304", "filename": "src/test/run-pass/issue-3979-xcrate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-3979-xcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-3979-xcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3979-xcrate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:issue_3979_traits.rs\n extern crate issue_3979_traits;\n use issue_3979_traits::{Positioned, Movable};"}, {"sha": "3152cda2648fac4997a66892d771a32ea2038a65", "filename": "src/test/run-pass/issue-4016.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-4016.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-4016.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4016.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n // Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n@@ -9,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n extern crate serialize;\n "}, {"sha": "48e32922ce7085bc144b7357f2e6edfedeee3d4a", "filename": "src/test/run-pass/issue-4036.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-4036.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-4036.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4036.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n // Issue #4036: Test for an issue that arose around fixing up type inference\n // byproducts in vtable records."}, {"sha": "c186f1e57f9a1dab6b8ef92b335f1b5a8315c275", "filename": "src/test/run-pass/issue-4208.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-4208.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-4208.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4208.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:issue-4208-cc.rs\n-// ignore-fast - check-fast hates cross-crate tests\n \n extern crate numeric;\n use numeric::{sin, Angle};"}, {"sha": "a781ce115add60b962272cea84e14941c6c1f24b", "filename": "src/test/run-pass/issue-4241.rs", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-4241.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-4241.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4241.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -0,0 +1,129 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-test needs networking\n+\n+extern crate extra;\n+\n+use extra::net::tcp::TcpSocketBuf;\n+\n+use std::io;\n+use std::int;\n+\n+use std::io::{ReaderUtil,WriterUtil};\n+\n+enum Result {\n+  Nil,\n+  Int(int),\n+  Data(~[u8]),\n+  List(~[Result]),\n+  Error(~str),\n+  Status(~str)\n+}\n+\n+priv fn parse_data(len: uint, io: @io::Reader) -> Result {\n+  let res =\n+      if (len > 0) {\n+      let bytes = io.read_bytes(len as uint);\n+      assert_eq!(bytes.len(), len);\n+      Data(bytes)\n+  } else {\n+      Data(~[])\n+  };\n+  assert_eq!(io.read_char(), '\\r');\n+  assert_eq!(io.read_char(), '\\n');\n+  return res;\n+}\n+\n+priv fn parse_list(len: uint, io: @io::Reader) -> Result {\n+    let mut list: ~[Result] = ~[];\n+    for _ in range(0, len) {\n+        let v = match io.read_char() {\n+            '$' => parse_bulk(io),\n+            ':' => parse_int(io),\n+             _ => fail!()\n+        };\n+        list.push(v);\n+    }\n+    return List(list);\n+}\n+\n+priv fn chop(s: ~str) -> ~str {\n+  s.slice(0, s.len() - 1).to_owned()\n+}\n+\n+priv fn parse_bulk(io: @io::Reader) -> Result {\n+    match from_str::<int>(chop(io.read_line())) {\n+    None => fail!(),\n+    Some(-1) => Nil,\n+    Some(len) if len >= 0 => parse_data(len as uint, io),\n+    Some(_) => fail!()\n+    }\n+}\n+\n+priv fn parse_multi(io: @io::Reader) -> Result {\n+    match from_str::<int>(chop(io.read_line())) {\n+    None => fail!(),\n+    Some(-1) => Nil,\n+    Some(0) => List(~[]),\n+    Some(len) if len >= 0 => parse_list(len as uint, io),\n+    Some(_) => fail!()\n+    }\n+}\n+\n+priv fn parse_int(io: @io::Reader) -> Result {\n+    match from_str::<int>(chop(io.read_line())) {\n+    None => fail!(),\n+    Some(i) => Int(i)\n+    }\n+}\n+\n+priv fn parse_response(io: @io::Reader) -> Result {\n+    match io.read_char() {\n+    '$' => parse_bulk(io),\n+    '*' => parse_multi(io),\n+    '+' => Status(chop(io.read_line())),\n+    '-' => Error(chop(io.read_line())),\n+    ':' => parse_int(io),\n+    _ => fail!()\n+    }\n+}\n+\n+priv fn cmd_to_str(cmd: ~[~str]) -> ~str {\n+  let mut res = ~\"*\";\n+  res.push_str(cmd.len().to_str());\n+  res.push_str(\"\\r\\n\");\n+    for s in cmd.iter() {\n+    res.push_str([~\"$\", s.len().to_str(), ~\"\\r\\n\",\n+                  (*s).clone(), ~\"\\r\\n\"].concat() );\n+    }\n+  res\n+}\n+\n+fn query(cmd: ~[~str], sb: TcpSocketBuf) -> Result {\n+  let cmd = cmd_to_str(cmd);\n+  //println!(\"{}\", cmd);\n+  sb.write_str(cmd);\n+  let res = parse_response(@sb as @io::Reader);\n+  res\n+}\n+\n+fn query2(cmd: ~[~str]) -> Result {\n+  let _cmd = cmd_to_str(cmd);\n+    io::with_str_reader(~\"$3\\r\\nXXX\\r\\n\")(|sb| {\n+    let res = parse_response(@sb as @io::Reader);\n+    println!(\"{:?}\", res);\n+    res\n+    });\n+}\n+\n+\n+pub fn main() {\n+}"}, {"sha": "fdcee2e3b610bd56b9fadac2db59bb9e22b89183", "filename": "src/test/run-pass/issue-4545.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-4545.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-4545.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4545.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast check-fast doesn't like aux-build\n // aux-build:issue-4545.rs\n \n extern crate somelib = \"issue-4545\";"}, {"sha": "8f66d96d50ece76dc443bfd4361b6a336eb63326", "filename": "src/test/run-pass/issue-5521.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-5521.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-5521.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5521.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:issue-5521.rs\n-// ignore-fast\n \n #[feature(managed_boxes)];\n "}, {"sha": "fd852f7fd516da81ebe60a7ea9d861c306766fd2", "filename": "src/test/run-pass/issue-5950.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-5950.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-5950.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5950.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n pub use local_alias = local;\n "}, {"sha": "997bca42f7d27ced82fee5a73bd3816a383c05c5", "filename": "src/test/run-pass/issue-6919.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-6919.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-6919.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-6919.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:iss.rs\n-// ignore-fast\n \n #[crate_id=\"issue-6919\"];\n extern crate issue6919_3;"}, {"sha": "b11521b23b2b67b96fa673cbab2968b68bdfb11d", "filename": "src/test/run-pass/issue-7178.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-7178.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-7178.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7178.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:issue-7178.rs\n \n extern crate cross_crate_self = \"issue-7178\";"}, {"sha": "84c7cce2276577b7ba4c8ec6400221477ff4f39d", "filename": "src/test/run-pass/issue-7899.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-7899.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-7899.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7899.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:issue-7899.rs\n \n extern crate testcrate = \"issue-7899\";"}, {"sha": "06f41e9cb7a7913a9436b5330a16059c4ad58263", "filename": "src/test/run-pass/issue-8044.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-8044.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-8044.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8044.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast check-fast doesn't like aux-build\n // aux-build:issue-8044.rs\n \n extern crate minimal = \"issue-8044\";"}, {"sha": "484df4744035345c979f90d6d65a4f086ef9332f", "filename": "src/test/run-pass/issue-8259.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-8259.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-8259.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8259.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:issue-8259.rs\n \n extern crate other = \"issue-8259\";"}, {"sha": "1ca91366f362c76ca0d3fde53f070b791c597945", "filename": "src/test/run-pass/issue-8401.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-8401.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-8401.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8401.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:issue_8401.rs\n-// ignore-fast\n \n extern crate issue_8401;\n "}, {"sha": "c665c1da3fc13552561855abdb429d6252df8df0", "filename": "src/test/run-pass/issue-8860.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-8860.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-8860.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8860.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n extern crate green;\n "}, {"sha": "f66215aa43f8ca91fa2c224b0ce4f524df50bdfb", "filename": "src/test/run-pass/issue-9123.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-9123.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-9123.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9123.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast check-fast doesn't like aux-build\n // aux-build:issue_9123.rs\n \n extern crate issue_9123;"}, {"sha": "31797deccf91ce878b80676e4e17dc9a1cc273ad", "filename": "src/test/run-pass/issue-9188.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-9188.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-9188.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9188.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:issue_9188.rs\n-// ignore-fast check-fast doesn't like aux-build\n \n extern crate issue_9188;\n "}, {"sha": "6b8e250ea74bfb738f8e3bfb0fa0d03a81d501d5", "filename": "src/test/run-pass/issue-9906.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-9906.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-9906.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9906.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast check-fast doesn't like extern crate\n // aux-build:issue-9906.rs\n \n extern crate testmod = \"issue-9906\";"}, {"sha": "8768a76a9a21aa15b677f8dda78308e077f2312f", "filename": "src/test/run-pass/issue-9968.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-9968.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue-9968.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9968.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast check-fast doesn't like extern crate\n // aux-build:issue-9968.rs\n \n extern crate lib = \"issue-9968\";"}, {"sha": "b4a41ef44f82d502298c382a7cadbf478efd2192", "filename": "src/test/run-pass/issue2170exe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue2170exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue2170exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue2170exe.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast - check-fail fast doesn't under aux-build\n // aux-build:issue2170lib.rs\n extern crate issue2170lib;\n "}, {"sha": "49bec6f1e9edeb4ce2a437434bb7c83c4288dbaf", "filename": "src/test/run-pass/issue2378c.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue2378c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue2378c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue2378c.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:issue2378a.rs\n // aux-build:issue2378b.rs\n-// ignore-fast - check-fast doesn't understand aux-build\n \n extern crate issue2378a;\n extern crate issue2378b;"}, {"sha": "a6fb993a96b0065517ab678f0416b536c4b97607", "filename": "src/test/run-pass/issue_3136_b.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue_3136_b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue_3136_b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue_3136_b.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast - check-fast doesn't understand aux-build\n // aux-build:issue_3136_a.rc\n \n extern crate issue_3136_a;"}, {"sha": "951cde3264b2c02d2584ee4a75112aad9cee377d", "filename": "src/test/run-pass/issue_9155.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue_9155.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fissue_9155.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue_9155.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:issue_9155.rs\n-// ignore-fast check-fast doesn't like the aux-build\n \n extern crate issue_9155;\n "}, {"sha": "233db83d289bd2d2df1f86cae89932a5ac33d15e", "filename": "src/test/run-pass/kinds-in-metadata.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fkinds-in-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fkinds-in-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fkinds-in-metadata.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:kinds_in_metadata.rs\n \n /* Any copyright is dedicated to the Public Domain."}, {"sha": "761e5d7eb4913c3651ced85d89e257ecea076edc", "filename": "src/test/run-pass/lang-item-public.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flang-item-public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flang-item-public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flang-item-public.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:lang-item-public.rs\n-// ignore-fast\n // ignore-android\n \n #[no_std];"}, {"sha": "e263767990a65d188dd08e823a41788308d8fd4f", "filename": "src/test/run-pass/linkage-visibility.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:linkage-visibility.rs\n-// ignore-fast check-fast doesn't like 'extern crate'\n // ignore-android: FIXME(#10379)\n // ignore-win32: std::unstable::dynamic_lib does not work on win32 well\n "}, {"sha": "2eafd34afcace3c688564e67380d00cbbc662994", "filename": "src/test/run-pass/linkage1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flinkage1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flinkage1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flinkage1.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-win32\n-// ignore-fast\n // ignore-android\n // ignore-macos\n // aux-build:linkage1.rs"}, {"sha": "f755d85020f03b516357d1cfa337813e54bb263c", "filename": "src/test/run-pass/lint-non-camel-case-types-non-uppercase-statics-unicode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flint-non-camel-case-types-non-uppercase-statics-unicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flint-non-camel-case-types-non-uppercase-statics-unicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flint-non-camel-case-types-non-uppercase-statics-unicode.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast feature doesn't work.\n \n #[forbid(non_camel_case_types)];\n #[forbid(non_uppercase_statics)];"}, {"sha": "52528828506e8311bfe24383c54f0b4dd026fd05", "filename": "src/test/run-pass/log-knows-the-names-of-variants-in-std.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flog-knows-the-names-of-variants-in-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flog-knows-the-names-of-variants-in-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flog-knows-the-names-of-variants-in-std.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "9320c77a285b43d7285398a75baee7bfa3e8d0e5", "filename": "src/test/run-pass/logging-enabled-debug.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flogging-enabled-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flogging-enabled-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-enabled-debug.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // compile-flags:--cfg ndebug\n // exec-env:RUST_LOG=logging-enabled-debug=debug\n "}, {"sha": "b1d24e8b9b6df476edd380f50110aa5cc7f59e6c", "filename": "src/test/run-pass/logging-enabled.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flogging-enabled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flogging-enabled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-enabled.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // exec-env:RUST_LOG=logging-enabled=info\n \n #![feature(phase)]"}, {"sha": "396b633b63313a2a41b1b30c987aeda19a3d7123", "filename": "src/test/run-pass/logging-only-prints-once.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flogging-only-prints-once.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flogging-only-prints-once.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-only-prints-once.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n+// ignore-win32\n // exec-env:RUST_LOG=debug\n \n use std::cell::Cell;"}, {"sha": "31c2ae891e068832368599ba1a54f60872bb615a", "filename": "src/test/run-pass/logging-right-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flogging-right-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flogging-right-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-right-crate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:logging_right_crate.rs\n-// ignore-fast\n // exec-env:RUST_LOG=logging-right-crate=debug\n \n // This is a test for issue #3046 to make sure that when we monomorphize a"}, {"sha": "8a21d60e468b0d0c9960cc27eeb4697e17f88b3f", "filename": "src/test/run-pass/logging_before_rt_started.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flogging_before_rt_started.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Flogging_before_rt_started.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging_before_rt_started.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // exec-env:RUST_LOG=std::ptr\n-// ignore-fast this would cause everything to print forever on check-fast...\n \n // In issue #9487, it was realized that std::ptr was invoking the logging\n // infrastructure, and when std::ptr was used during runtime initialization,"}, {"sha": "abf8edc274cf7ecdec9c03d917ccb79450f4a444", "filename": "src/test/run-pass/macro-crate-def-only.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmacro-crate-def-only.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmacro-crate-def-only.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-crate-def-only.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:macro_crate_def_only.rs\n-// ignore-fast\n \n #![feature(phase)]\n "}, {"sha": "179c65cd046b2ecc6c4e292bc4221a4f320d4a0e", "filename": "src/test/run-pass/macro-export-inner-module.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmacro-export-inner-module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmacro-export-inner-module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-export-inner-module.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -10,7 +10,6 @@\n \n //aux-build:macro_export_inner_module.rs\n //ignore-stage1\n-//ignore-fast\n \n #![feature(phase)]\n "}, {"sha": "48e6b09a90a4f7057dbd1b0ab4ff8d2a4c8a126d", "filename": "src/test/run-pass/macro-with-attrs1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmacro-with-attrs1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmacro-with-attrs1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-with-attrs1.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast check-fast doesn't like compile-flags\n // compile-flags: --cfg foo\n \n #[feature(macro_rules)];"}, {"sha": "8a546a729d5fa3bb4ee1031a992097b81301b149", "filename": "src/test/run-pass/mod-view-items.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmod-view-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmod-view-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod-view-items.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "1b89464c543ce2aaffff77f76a75353dee57039f", "filename": "src/test/run-pass/mod_dir_implicit.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmod_dir_implicit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmod_dir_implicit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_implicit.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-pretty\n-// ignore-fast\n \n mod mod_dir_implicit_aux;\n "}, {"sha": "e0327a1dcd4ed19fed28b715f6d2991ec17caed7", "filename": "src/test/run-pass/mod_dir_path.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmod_dir_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmod_dir_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_path.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-pretty\n-// ignore-fast\n \n mod mod_dir_simple {\n     #[path = \"test.rs\"]"}, {"sha": "2b5e67a6e839683678688adfe6486cbb97ef62a1", "filename": "src/test/run-pass/mod_dir_path2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmod_dir_path2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmod_dir_path2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_path2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-pretty\n-// ignore-fast\n \n #[path = \"mod_dir_simple\"]\n mod pancakes {"}, {"sha": "d6037bef6e5765147af6d3df0fc53541e173221f", "filename": "src/test/run-pass/mod_dir_path3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmod_dir_path3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmod_dir_path3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_path3.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-pretty\n-// ignore-fast\n \n #[path = \"mod_dir_simple\"]\n mod pancakes {"}, {"sha": "f1bf83ed767f7b9bc74aff964c6e143e5c02ccff", "filename": "src/test/run-pass/mod_dir_path_multi.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmod_dir_path_multi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmod_dir_path_multi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_path_multi.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-pretty\n-// ignore-fast\n \n #[path = \"mod_dir_simple\"]\n mod biscuits {"}, {"sha": "d7121ef769078a43e35d0d738369b47024d2f58e", "filename": "src/test/run-pass/mod_dir_recursive.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmod_dir_recursive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmod_dir_recursive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_recursive.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-pretty\n-// ignore-fast\n \n // Testing that the parser for each file tracks its modules\n // and paths independently. The load_another_mod module should"}, {"sha": "41c810b6fddab6b49a1d5095de8a2a25bf1da0f9", "filename": "src/test/run-pass/mod_dir_simple.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmod_dir_simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmod_dir_simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_simple.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-pretty\n-// ignore-fast\n \n mod mod_dir_simple {\n     pub mod test;"}, {"sha": "6b508bc0ae701ef4ec0c5be5c69a107ea613af97", "filename": "src/test/run-pass/monad.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmonad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmonad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmonad.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n \n trait vec_monad<A> {"}, {"sha": "16f15804e0e927fd1e45d49fc72a3e4762953529", "filename": "src/test/run-pass/moves-based-on-type-cross-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmoves-based-on-type-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fmoves-based-on-type-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmoves-based-on-type-cross-crate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:moves_based_on_type_lib.rs\n \n extern crate moves_based_on_type_lib;"}, {"sha": "94a4308ab0822526416901a6a429f43c7803f64a", "filename": "src/test/run-pass/native-always-waits.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fnative-always-waits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fnative-always-waits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative-always-waits.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // ignore-android (FIXME #11419)\n \n extern crate native;"}, {"sha": "bf1a97f84b631838ae2eb24ae00c8ac53ec232a7", "filename": "src/test/run-pass/native-print-no-runtime.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fnative-print-no-runtime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fnative-print-no-runtime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative-print-no-runtime.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n #[start]\n pub fn main(_: int, _: **u8) -> int {"}, {"sha": "d73fba561430a53c9476fe8ea97ef79ecf0b9afd", "filename": "src/test/run-pass/nested_item_main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fnested_item_main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fnested_item_main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnested_item_main.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:nested_item.rs\n-// ignore-fast\n \n extern crate nested_item;\n "}, {"sha": "0302a0588e4cfece646c26c558292a047b3c1e85", "filename": "src/test/run-pass/newtype-struct-xc-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fnewtype-struct-xc-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fnewtype-struct-xc-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnewtype-struct-xc-2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:newtype_struct_xc.rs\n \n extern crate newtype_struct_xc;"}, {"sha": "3e375c48316c86d16a2b627f0bd045451b6d4ed0", "filename": "src/test/run-pass/newtype-struct-xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fnewtype-struct-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fnewtype-struct-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnewtype-struct-xc.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:newtype_struct_xc.rs\n \n extern crate newtype_struct_xc;"}, {"sha": "bc7987f4a27e2f893f7c17e7d3c145f860e4252a", "filename": "src/test/run-pass/no-landing-pads.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fno-landing-pads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fno-landing-pads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fno-landing-pads.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // compile-flags: -Z no-landing-pads\n-// ignore-fast\n \n use std::task;\n "}, {"sha": "99580619a23b6e4fe36716c144d0e7db35356921", "filename": "src/test/run-pass/once-move-out-on-heap.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fonce-move-out-on-heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fonce-move-out-on-heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fonce-move-out-on-heap.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -10,7 +10,6 @@\n \n // Testing guarantees provided by once functions.\n \n-// ignore-fast\n \n #[feature(once_fns)];\n extern crate sync;"}, {"sha": "02fe2ff023c06ef17bd790a0cfb5146aff480070", "filename": "src/test/run-pass/once-move-out-on-stack.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fonce-move-out-on-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fonce-move-out-on-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fonce-move-out-on-stack.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -10,7 +10,6 @@\n \n // Testing guarantees provided by once functions.\n \n-// ignore-fast\n \n #![feature(once_fns)]\n extern crate sync;"}, {"sha": "66783ad78e53059bbd8b20c1a64c737ab5df82db", "filename": "src/test/run-pass/operator-overloading.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Foperator-overloading.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Foperator-overloading.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foperator-overloading.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n use std::cmp;\n use std::ops;"}, {"sha": "dd8e53271707cbf1e6cb8f405ca5e3e8384f9198", "filename": "src/test/run-pass/out-of-stack.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fout-of-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fout-of-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fout-of-stack.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n-\n #![feature(asm)]\n \n use std::io::Process;"}, {"sha": "c2968956785faa3032c21321d077db0ff87350c7", "filename": "src/test/run-pass/packed-struct-size-xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fpacked-struct-size-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fpacked-struct-size-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-size-xc.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:packed.rs\n \n extern crate packed;"}, {"sha": "60f2619fffd9bb09aa9f0977742d5051aa211f35", "filename": "src/test/run-pass/phase-use-ignored.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fphase-use-ignored.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fphase-use-ignored.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fphase-use-ignored.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n #![feature(phase)]\n "}, {"sha": "1ca7e5aa3c47ad8836f7dac16ea9507c7d15570f", "filename": "src/test/run-pass/placement-new-arena.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fplacement-new-arena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fplacement-new-arena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fplacement-new-arena.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "6af1899263667d008dc84cb90975a6a73dfc4ec4", "filename": "src/test/run-pass/priv-impl-prim-ty.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fpriv-impl-prim-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fpriv-impl-prim-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpriv-impl-prim-ty.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:priv-impl-prim-ty.rs\n \n extern crate bar = \"priv-impl-prim-ty\";"}, {"sha": "6cdd0201a9053832bdc5a3dced291a4e52bd564f", "filename": "src/test/run-pass/privacy-ns.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fprivacy-ns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fprivacy-ns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprivacy-ns.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n // Check we do the correct privacy checks when we import a name and there is an\n // item with that name in both the value and type namespaces."}, {"sha": "b40aacdafc1faa4c2f8f58500899c4565ac3a65c", "filename": "src/test/run-pass/privacy-reexport.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fprivacy-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fprivacy-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprivacy-reexport.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:privacy_reexport.rs\n \n extern crate privacy_reexport;"}, {"sha": "16cc414c0d96883e76557691421369e69150378d", "filename": "src/test/run-pass/process-detach.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fprocess-detach.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fprocess-detach.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-detach.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // ignore-win32\n // ignore-android\n "}, {"sha": "cdc184898fd68b9d020ef586f0e6ae21c5fb4d5a", "filename": "src/test/run-pass/pub-use-xcrate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fpub-use-xcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fpub-use-xcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpub-use-xcrate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:pub_use_xcrate1.rs\n // aux-build:pub_use_xcrate2.rs\n "}, {"sha": "a973598228df567b833bfb6d6accf47cdff129c6", "filename": "src/test/run-pass/pub_use_mods_xcrate_exe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fpub_use_mods_xcrate_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fpub_use_mods_xcrate_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpub_use_mods_xcrate_exe.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:pub_use_mods_xcrate.rs\n \n #[allow(unused_imports)];"}, {"sha": "ab56fac61b3ffd625baa0450cd7ab3595bab7f1a", "filename": "src/test/run-pass/rec-align-u32.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Frec-align-u32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Frec-align-u32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frec-align-u32.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast: check-fast screws up repr paths\n \n // Issue #2303\n "}, {"sha": "3d3a4c53b97273a3654ecb436dd30ec475e7eedf", "filename": "src/test/run-pass/rec-align-u64.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Frec-align-u64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Frec-align-u64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frec-align-u64.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast: check-fast screws up repr paths\n \n // Issue #2303\n "}, {"sha": "c63d50d898c77007a42cf3cc54e61c5ac50e8287", "filename": "src/test/run-pass/reexport-should-still-link.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Freexport-should-still-link.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Freexport-should-still-link.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freexport-should-still-link.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:reexport-should-still-link.rs\n-// ignore-fast check-fast doesn't like extern crate\n \n extern crate foo = \"reexport-should-still-link\";\n "}, {"sha": "6617ff08d1c8f5901afe5cc350dcbd69db6c72e2", "filename": "src/test/run-pass/reexport-star.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Freexport-star.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Freexport-star.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freexport-star.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "05abb95c117b3095e235dc49dadb82b6137f1d67", "filename": "src/test/run-pass/reexported-static-methods-cross-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Freexported-static-methods-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Freexported-static-methods-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freexported-static-methods-cross-crate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:reexported_static_methods.rs\n extern crate reexported_static_methods;\n "}, {"sha": "fabf4b7b42876aa02544918947f8761dd9a89662", "filename": "src/test/run-pass/regions-mock-tcx.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fregions-mock-tcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fregions-mock-tcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-mock-tcx.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast `use` standards don't resolve\n \n // Test a sample usage pattern for regions. Makes use of the\n // following features:"}, {"sha": "b83d7af9a11d35b0433000a5736e5d77cf5ef123", "filename": "src/test/run-pass/regions-params.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fregions-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fregions-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-params.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n fn region_identity<'r>(x: &'r uint) -> &'r uint { x }\n "}, {"sha": "8411ef32963f5a87553849e99a740240f9aeed39", "filename": "src/test/run-pass/rename-directory.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Frename-directory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Frename-directory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frename-directory.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -11,8 +11,6 @@\n // This test can't be a unit test in std,\n // because it needs TempDir, which is in extra\n \n-// ignore-fast\n-\n extern crate libc;\n \n use std::io::TempDir;"}, {"sha": "19fdd04069edbc38068727353884a7e5a4c34187", "filename": "src/test/run-pass/self-shadowing-import.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fself-shadowing-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fself-shadowing-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fself-shadowing-import.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "3f94c7c8e547a1459c3f4e1865ce76ffaffd7f8f", "filename": "src/test/run-pass/sendfn-is-a-block.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fsendfn-is-a-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fsendfn-is-a-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsendfn-is-a-block.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n fn test(f: |uint| -> uint) -> uint {\n     return f(22u);"}, {"sha": "944174c1d8c372350884b03bdbb40d5d3c8db22f", "filename": "src/test/run-pass/signal-exit-status.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -18,7 +18,7 @@\n // option. this file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast calling itself doesn't work on check-fast\n+// ignore-win32\n \n use std::os;\n use std::io::process::{Process, ExitSignal, ExitStatus};"}, {"sha": "68c210b018ab977c5e15005db68729359b63488c", "filename": "src/test/run-pass/simd-generics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fsimd-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fsimd-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-generics.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n #![feature(simd)]\n "}, {"sha": "2e533e3b263a0186ad3815941464b2c23c0568ee", "filename": "src/test/run-pass/simd-issue-10604.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fsimd-issue-10604.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fsimd-issue-10604.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-issue-10604.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n #![allow(experimental)]\n #![feature(simd)]"}, {"sha": "a1a7457811280304cd856a4caf2e43ffb75026a7", "filename": "src/test/run-pass/simd-type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fsimd-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fsimd-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-type.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast feature doesn't work\n \n #![feature(simd)]\n "}, {"sha": "d3c7a948e240c747921eba43220e323c2b01df98", "filename": "src/test/run-pass/smallest-hello-world.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-test - FIXME(#8538) some kind of problem linking induced by extern \"C\" fns\n-// ignore-fast - check-fast doesn't like this\n \n // Smallest hello world with no runtime\n "}, {"sha": "df6bf767b9d0af2bacd53e300c9b6308a1f9813c", "filename": "src/test/run-pass/spawning-with-debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fspawning-with-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fspawning-with-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawning-with-debug.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-win32\n // exec-env:RUST_LOG=debug\n-// ignore-fast\n \n // regression test for issue #10405, make sure we don't call println! too soon.\n "}, {"sha": "d9eae02670f384d4623aa40806767c0b9f4d7c90", "filename": "src/test/run-pass/stat.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstat.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n use std::io::{File, TempDir};\n "}, {"sha": "0d591998bc97468bbdf2868c854c4f59128c6c0c", "filename": "src/test/run-pass/static-fn-inline-xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstatic-fn-inline-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstatic-fn-inline-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-fn-inline-xc.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:static_fn_inline_xc_aux.rs\n \n extern crate mycore = \"static_fn_inline_xc_aux\";"}, {"sha": "32a4046884dc0fe5c8f8d7ac77bac947661df60b", "filename": "src/test/run-pass/static-fn-trait-xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstatic-fn-trait-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstatic-fn-trait-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-fn-trait-xc.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:static_fn_trait_xc_aux.rs\n-// ignore-fast\n \n extern crate mycore = \"static_fn_trait_xc_aux\";\n "}, {"sha": "8e5539ff8dca22dba53ee7254288f1645a4e1bbe", "filename": "src/test/run-pass/static-function-pointer-xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstatic-function-pointer-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstatic-function-pointer-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-function-pointer-xc.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:static-function-pointer-aux.rs\n extern crate aux = \"static-function-pointer-aux\";\n "}, {"sha": "065d069ff33df49a8943ed9345bd9260c69fe249", "filename": "src/test/run-pass/static-impl.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstatic-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstatic-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-impl.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n \n pub trait plus {"}, {"sha": "8d3f28b1e2e5f0850925a44319d905d043a8a39b", "filename": "src/test/run-pass/static-method-xcrate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstatic-method-xcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstatic-method-xcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-method-xcrate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:static-methods-crate.rs\n \n extern crate static_methods_crate;"}, {"sha": "5aa28ad80fae8a0bda8187f9805fe3c5d1cf8942", "filename": "src/test/run-pass/static-mut-xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstatic-mut-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstatic-mut-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-mut-xc.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -12,7 +12,6 @@\n // statics cannot. This ensures that there's some form of error if this is\n // attempted.\n \n-// ignore-fast\n // aux-build:static_mut_xc.rs\n \n extern crate static_mut_xc;"}, {"sha": "2de2bcc958471c2566f0106dbb9030486c45a2ae", "filename": "src/test/run-pass/struct-destructuring-cross-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstruct-destructuring-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstruct-destructuring-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct-destructuring-cross-crate.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:struct_destructuring_cross_crate.rs\n \n extern crate struct_destructuring_cross_crate;"}, {"sha": "8b1b91a32b62f144730238df813fd438ab4488e4", "filename": "src/test/run-pass/struct_variant_xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstruct_variant_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fstruct_variant_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct_variant_xc.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast - check-fast doesn't understand aux-build\n // aux-build:struct_variant_xc_aux.rs\n extern crate struct_variant_xc_aux;\n "}, {"sha": "d09a4d990fd9cc63bb3c582d73eb0621cbe475ba", "filename": "src/test/run-pass/syntax-extension-cfg.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fsyntax-extension-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Fsyntax-extension-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-cfg.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast compile-flags doesn't work with fast-check\n // compile-flags: --cfg foo --cfg bar(baz) --cfg qux=\"foo\"\n \n pub fn main() {"}, {"sha": "d032761eb0b848645989fe68e0bbbf20440de394", "filename": "src/test/run-pass/tag-align-shape.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftag-align-shape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftag-align-shape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftag-align-shape.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast: check-fast screws up repr paths\n \n enum a_tag {\n     a_tag(u64)"}, {"sha": "fa390954b979f76c2de37f776cdd6ddebf815419", "filename": "src/test/run-pass/tag-exports.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftag-exports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftag-exports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftag-exports.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "469c1b868db91e6417382efa99e6059fc51f93e0", "filename": "src/test/run-pass/task-comm-0.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n use std::task;\n "}, {"sha": "17e1a72adc91c4c41a15829299dad01f27ba82d3", "filename": "src/test/run-pass/task-comm-10.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n use std::task;\n "}, {"sha": "719d8e8120e7c0d056a519ca56da01bfc8cc636e", "filename": "src/test/run-pass/task-comm-11.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n use std::task;\n "}, {"sha": "3f3d6742971176eb81c2161cff8f6984e7dccdbf", "filename": "src/test/run-pass/task-comm-13.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n use std::task;\n "}, {"sha": "3f20495f6525e37c67ee4fd52921088f0effe97d", "filename": "src/test/run-pass/task-comm-14.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-14.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-14.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-14.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n use std::task;\n "}, {"sha": "fe4c233224d45f82584b806cd426e1299f2a9eab", "filename": "src/test/run-pass/task-comm-15.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n use std::task;\n "}, {"sha": "c2f6fe580fc455619ee4db4a9902eda2b1251d27", "filename": "src/test/run-pass/task-comm-3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n use std::task;\n "}, {"sha": "121740bb6a2a203eae74ca7ea70d35fe0176245f", "filename": "src/test/run-pass/task-comm-7.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n #[allow(dead_assignment)];\n "}, {"sha": "009b013353c8b70d64f7b7fc894e7744fee7992e", "filename": "src/test/run-pass/task-comm-9.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n use std::task;\n "}, {"sha": "eff5682a5532202eaccaee05286e323530d6e022", "filename": "src/test/run-pass/tcp-stress.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftcp-stress.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftcp-stress.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftcp-stress.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-linux see joyent/libuv#1189\n-// ignore-fast\n // ignore-android needs extra network permissions\n // exec-env:RUST_LOG=debug\n "}, {"sha": "d11e879b494a753a94dac806384f28596f31b137", "filename": "src/test/run-pass/tempfile.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftempfile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftempfile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftempfile.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast check-fast doesn't like 'extern crate'\n // ignore-win32 TempDir may cause IoError on windows: #10463\n \n // These tests are here to exercise the functionality of the `tempfile` module."}, {"sha": "54546560c14ab560d9e0b562b1bdaeeec7d0b319", "filename": "src/test/run-pass/test-ignore-cfg.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftest-ignore-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftest-ignore-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftest-ignore-cfg.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // compile-flags: --test --cfg ignorecfg\n-// ignore-fast\n \n #[test]\n #[ignore(cfg(ignorecfg))]"}, {"sha": "954d88c0bdc5e6095d464397ec64f2653be3619c", "filename": "src/test/run-pass/test-runner-hides-main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftest-runner-hides-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftest-runner-hides-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftest-runner-hides-main.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // compile-flags:--test\n-// ignore-fast\n // ignore-win32 #10872\n \n // Building as a test runner means that a synthetic main will be run,"}, {"sha": "a3049de663e849f1bc2a6c96def551800a3fa629", "filename": "src/test/run-pass/trait-bounds-in-arc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-bounds-in-arc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-bounds-in-arc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-bounds-in-arc.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -13,7 +13,6 @@\n // Tests that a heterogeneous list of existential types can be put inside an Arc\n // and shared between tasks as long as all types fulfill Send.\n \n-// ignore-fast\n \n extern crate sync;\n "}, {"sha": "9e4a7c4be97126b14ffebbd4cef81854f7b402ae", "filename": "src/test/run-pass/trait-default-method-xc-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc-2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:trait_default_method_xc_aux.rs\n // aux-build:trait_default_method_xc_aux_2.rs\n "}, {"sha": "25b5b7fbd5f8763652872239041159d03c260854", "filename": "src/test/run-pass/trait-default-method-xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:trait_default_method_xc_aux.rs\n \n extern crate aux = \"trait_default_method_xc_aux\";"}, {"sha": "41f83c46f0bf3c5472f8c984be132e17ed334909", "filename": "src/test/run-pass/trait-generic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-generic.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n \n trait to_str {"}, {"sha": "5944106ad5081ef303f4395fa3c527a0aec5c405", "filename": "src/test/run-pass/trait-inheritance-auto-xc-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc-2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:trait_inheritance_auto_xc_2_aux.rs\n \n extern crate aux = \"trait_inheritance_auto_xc_2_aux\";"}, {"sha": "09c58316611e6487ac83c6bb55e8b8603e01eaad", "filename": "src/test/run-pass/trait-inheritance-auto-xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:trait_inheritance_auto_xc_aux.rs\n \n extern crate aux = \"trait_inheritance_auto_xc_aux\";"}, {"sha": "0afd91c58571f7235972f439e61569e6d063df51", "filename": "src/test/run-pass/trait-inheritance-cross-trait-call-xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-inheritance-cross-trait-call-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-inheritance-cross-trait-call-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-cross-trait-call-xc.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n // aux-build:trait_inheritance_cross_trait_call_xc_aux.rs\n \n extern crate aux = \"trait_inheritance_cross_trait_call_xc_aux\";"}, {"sha": "a611a55896e4d5321cb4d1b5984d7e07bb4a5b2d", "filename": "src/test/run-pass/trait-inheritance-num.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "51d889d1098f5ba96dfaa762a0c438e1998be8a5", "filename": "src/test/run-pass/trait-inheritance-num0.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num0.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "3edf0c526192c5b306c789440c8edba9a443885b", "filename": "src/test/run-pass/trait-inheritance-num2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num2.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "7760395bf1c959338a3740147dac82799f14ddb4", "filename": "src/test/run-pass/trait-inheritance-overloading-xc-exe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-inheritance-overloading-xc-exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-inheritance-overloading-xc-exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-overloading-xc-exe.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast - check-fast doesn't understand aux-build\n // aux-build:trait_inheritance_overloading_xc.rs\n \n extern crate trait_inheritance_overloading_xc;"}, {"sha": "a8cea24db0c0c15ef051de3e62be26e6a8c5c601", "filename": "src/test/run-pass/trait-static-method-overwriting.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-static-method-overwriting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-static-method-overwriting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-static-method-overwriting.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -1,4 +1,3 @@\n-// ignore-fast\n \n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at"}, {"sha": "98afa043249c48cc91c281af0087b155dcb8ab5d", "filename": "src/test/run-pass/trait-to-str.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-to-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftrait-to-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-to-str.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast\n \n \n trait to_str {"}, {"sha": "4f473755cb6cff868fd36c406abd55d2fac49d4a", "filename": "src/test/run-pass/tydesc-name.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftydesc-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072a920503466e5631e77d3baa8970be253bc768/src%2Ftest%2Frun-pass%2Ftydesc-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftydesc-name.rs?ref=072a920503466e5631e77d3baa8970be253bc768", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-fast: check-fast screws up repr paths\n \n use std::intrinsics::get_tydesc;\n "}]}