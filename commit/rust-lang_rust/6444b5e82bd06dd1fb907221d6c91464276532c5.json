{"sha": "6444b5e82bd06dd1fb907221d6c91464276532c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0NDRiNWU4MmJkMDZkZDFmYjkwNzIyMWQ2YzkxNDY0Mjc2NTMyYzU=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2014-07-26T04:28:56Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2014-07-27T06:13:19Z"}, "message": "adding proof of context-sensitivy of raw string literals", "tree": {"sha": "94f6f85732a46e33271be852ea4b0ab691df575d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94f6f85732a46e33271be852ea4b0ab691df575d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6444b5e82bd06dd1fb907221d6c91464276532c5", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6444b5e82bd06dd1fb907221d6c91464276532c5", "html_url": "https://github.com/rust-lang/rust/commit/6444b5e82bd06dd1fb907221d6c91464276532c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6444b5e82bd06dd1fb907221d6c91464276532c5/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66a0b528a6601d060095655f31c7d38e2a841511", "url": "https://api.github.com/repos/rust-lang/rust/commits/66a0b528a6601d060095655f31c7d38e2a841511", "html_url": "https://github.com/rust-lang/rust/commit/66a0b528a6601d060095655f31c7d38e2a841511"}], "stats": {"total": 47, "additions": 41, "deletions": 6}, "files": [{"sha": "c909f2333148a99d3482373c91e279a2dad2a1ce", "filename": "src/grammar/raw-string-literal-ambiguity.md", "status": "modified", "additions": 41, "deletions": 6, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/6444b5e82bd06dd1fb907221d6c91464276532c5/src%2Fgrammar%2Fraw-string-literal-ambiguity.md", "raw_url": "https://github.com/rust-lang/rust/raw/6444b5e82bd06dd1fb907221d6c91464276532c5/src%2Fgrammar%2Fraw-string-literal-ambiguity.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fraw-string-literal-ambiguity.md?ref=6444b5e82bd06dd1fb907221d6c91464276532c5", "patch": "@@ -1,7 +1,11 @@\n Rust's lexical grammar is not context-free. Raw string literals are the source\n of the problem. Informally, a raw string literal is an `r`, followed by `N`\n hashes (where N can be zero), a quote, any characters, then a quote followed\n-by `N` hashes. This grammar describes this as best possible:\n+by `N` hashes. Critically, once inside the first pair of quotes,\n+another quote cannot be followed by `N` consecutive hashes. e.g.\n+`r###\"\"###\"###` is invalid.\n+\n+This grammar describes this as best possible:\n \n     R -> 'r' S\n     S -> '\"' B '\"'\n@@ -22,8 +26,39 @@ accepted as one by the above grammar, using the derivation:\n (Where `T : U` means the rule `T` is applied, and `U` is the remainder of the\n string.) The difficulty arises from the fact that it is fundamentally\n context-sensitive. In particular, the context needed is the number of hashes.\n-I know of no way to resolve this, but also have not come up with a proof that\n-it is not context sensitive. Such a proof would probably use the pumping lemma\n-for context-free languages, but I (cmr) could not come up with a proof after\n-spending a few hours on it, and decided my time best spent elsewhere. Pull\n-request welcome!\n+\n+To prove that Rust's string literals are not context-free, we will use\n+the fact that context-free languages are closed under intersection with\n+regular languages, and the\n+[pumping lemma for context-free languages](https://en.wikipedia.org/wiki/Pumping_lemma_for_context-free_languages).\n+\n+Consider the regular language `R = r#+\"\"#*\"#+`. If Rust's raw string literals are\n+context-free, then their intersection with `R`, `R'`, should also be context-free.\n+Therefore, to prove that raw string literals are not context-free,\n+it is sufficient to prove that `R'` is not context-free.\n+\n+The language `R'` is `{r#^n\"\"#^m\"#^n | m < n}`.\n+\n+Assume `R'` *is* context-free. Then `R'` has some pumping length `p > 0` for which\n+the pumping lemma applies. Consider the following string `s` in `R'`:\n+\n+`r#^p\"\"#^{p-1}\"#^p`\n+\n+e.g. for `p = 2`: `s = r##\"\"#\"##`\n+\n+Then `s = uvwxy` for some choice of `uvwxy` such that `vx` is non-empty,\n+`|vwx| < p+1`, and `uv^iwx^iy` is in `R'` for all `i >= 0`.\n+\n+Neither `v` nor `x` can contain a `\"` or `r`, as the number of these characters\n+in any string in `R'` is fixed. So `v` and `x` contain only hashes.\n+Consequently, of the three sequences of hashes, `v` and `x` combined\n+can only pump two of them.\n+If we ever choose the central sequence of hashes, then one of the outer sequences\n+will not grow when we pump, leading to an imbalance between the outer sequences.\n+Therefore, we must pump both outer sequences of hashes. However,\n+there are `p+2` characters between these two sequences of hashes, and `|vwx|` must\n+be less than `p+1`. Therefore we have a contradiction, and `R'` must not be\n+context-free.\n+\n+Since `R'` is not context-free, it follows that the Rust's raw string literals\n+must not be context-free."}]}