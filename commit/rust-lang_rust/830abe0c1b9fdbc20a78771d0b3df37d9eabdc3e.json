{"sha": "830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMGFiZTBjMWI5ZmRiYzIwYTc4NzcxZDBiM2RmMzdkOWVhYmRjM2U=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-02T14:09:39Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-02T14:09:39Z"}, "message": "use navigation target in API", "tree": {"sha": "f111e68f8f05274baaa2310a60dda34f6d1b6fa0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f111e68f8f05274baaa2310a60dda34f6d1b6fa0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e", "html_url": "https://github.com/rust-lang/rust/commit/830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8", "html_url": "https://github.com/rust-lang/rust/commit/d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8"}], "stats": {"total": 70, "additions": 44, "deletions": 26}, "files": [{"sha": "b513736bbaa867af90e528ab54bab3136196ad3c", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e", "patch": "@@ -205,7 +205,7 @@ impl AnalysisImpl {\n \n     /// This returns `Vec` because a module may be included from several places. We\n     /// don't handle this case yet though, so the Vec has length at most one.\n-    pub fn parent_module(&self, position: FilePosition) -> Cancelable<Vec<(FileId, FileSymbol)>> {\n+    pub fn parent_module(&self, position: FilePosition) -> Cancelable<Vec<NavigationTarget>> {\n         let descr = match source_binder::module_from_position(&*self.db, position)? {\n             None => return Ok(Vec::new()),\n             Some(it) => it,\n@@ -216,12 +216,12 @@ impl AnalysisImpl {\n         };\n         let decl = decl.borrowed();\n         let decl_name = decl.name().unwrap();\n-        let sym = FileSymbol {\n+        let symbol = FileSymbol {\n             name: decl_name.text(),\n             node_range: decl_name.syntax().range(),\n             kind: MODULE,\n         };\n-        Ok(vec![(file_id, sym)])\n+        Ok(vec![NavigationTarget { file_id, symbol }])\n     }\n     /// Returns `Vec` for the same reason as `parent_module`\n     pub fn crate_for(&self, file_id: FileId) -> Cancelable<Vec<CrateId>> {"}, {"sha": "75867ee86c02a885dff12859214f0b4f2a2ec26b", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e", "patch": "@@ -24,7 +24,7 @@ mod macros;\n use std::{fmt, sync::Arc};\n \n use rustc_hash::FxHashMap;\n-use ra_syntax::{SourceFileNode, TextRange, TextUnit};\n+use ra_syntax::{SourceFileNode, TextRange, TextUnit, SmolStr, SyntaxKind};\n use ra_text_edit::TextEdit;\n use rayon::prelude::*;\n use relative_path::RelativePathBuf;\n@@ -251,6 +251,12 @@ pub struct NavigationTarget {\n }\n \n impl NavigationTarget {\n+    pub fn name(&self) -> SmolStr {\n+        self.symbol.name.clone()\n+    }\n+    pub fn kind(&self) -> SyntaxKind {\n+        self.symbol.kind\n+    }\n     pub fn file_id(&self) -> FileId {\n         self.file_id\n     }\n@@ -337,8 +343,14 @@ impl Analysis {\n         let file = self.imp.file_syntax(file_id);\n         ra_editor::folding_ranges(&file)\n     }\n-    pub fn symbol_search(&self, query: Query) -> Cancelable<Vec<(FileId, FileSymbol)>> {\n-        self.imp.world_symbols(query)\n+    pub fn symbol_search(&self, query: Query) -> Cancelable<Vec<NavigationTarget>> {\n+        let res = self\n+            .imp\n+            .world_symbols(query)?\n+            .into_iter()\n+            .map(|(file_id, symbol)| NavigationTarget { file_id, symbol })\n+            .collect();\n+        Ok(res)\n     }\n     pub fn approximately_resolve_symbol(\n         &self,\n@@ -352,7 +364,7 @@ impl Analysis {\n     pub fn doc_text_for(&self, nav: NavigationTarget) -> Cancelable<Option<String>> {\n         self.imp.doc_text_for(nav)\n     }\n-    pub fn parent_module(&self, position: FilePosition) -> Cancelable<Vec<(FileId, FileSymbol)>> {\n+    pub fn parent_module(&self, position: FilePosition) -> Cancelable<Vec<NavigationTarget>> {\n         self.imp.parent_module(position)\n     }\n     pub fn module_path(&self, position: FilePosition) -> Cancelable<Option<String>> {"}, {"sha": "1107ffc8b976b5983a054a27e2af9589536455d0", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e", "patch": "@@ -2,7 +2,7 @@ use languageserver_types::{\n     self, Location, Position, Range, SymbolKind, TextDocumentEdit, TextDocumentIdentifier,\n     TextDocumentItem, TextDocumentPositionParams, Url, VersionedTextDocumentIdentifier, InsertTextFormat,\n };\n-use ra_analysis::{FileId, FileSystemEdit, SourceChange, SourceFileEdit, FilePosition,FileRange,  CompletionItem, CompletionItemKind, InsertText};\n+use ra_analysis::{FileId, FileSystemEdit, SourceChange, SourceFileEdit, FilePosition,FileRange,  CompletionItem, CompletionItemKind, InsertText, NavigationTarget};\n use ra_editor::{LineCol, LineIndex, translate_offset_with_edit};\n use ra_text_edit::{AtomTextEdit, TextEdit};\n use ra_syntax::{SyntaxKind, TextRange, TextUnit};\n@@ -322,6 +322,15 @@ impl TryConvWith for FileSystemEdit {\n     }\n }\n \n+impl TryConvWith for &NavigationTarget {\n+    type Ctx = ServerWorld;\n+    type Output = Location;\n+    fn try_conv_with(self, world: &ServerWorld) -> Result<Location> {\n+        let line_index = world.analysis().file_line_index(self.file_id());\n+        to_location(self.file_id(), self.range(), &world, &line_index)\n+    }\n+}\n+\n pub fn to_location(\n     file_id: FileId,\n     range: TextRange,"}, {"sha": "26b6c7d8a53528e3c280e694fa26c41c020ede92", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 15, "deletions": 18, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e", "patch": "@@ -188,12 +188,11 @@ pub fn handle_workspace_symbol(\n \n     fn exec_query(world: &ServerWorld, query: Query) -> Result<Vec<SymbolInformation>> {\n         let mut res = Vec::new();\n-        for (file_id, symbol) in world.analysis().symbol_search(query)? {\n-            let line_index = world.analysis().file_line_index(file_id);\n+        for nav in world.analysis().symbol_search(query)? {\n             let info = SymbolInformation {\n-                name: symbol.name.to_string(),\n-                kind: symbol.kind.conv(),\n-                location: to_location(file_id, symbol.node_range, world, &line_index)?,\n+                name: nav.name().into(),\n+                kind: nav.kind().conv(),\n+                location: nav.try_conv_with(world)?,\n                 container_name: None,\n                 deprecated: None,\n             };\n@@ -212,12 +211,11 @@ pub fn handle_goto_definition(\n         None => return Ok(None),\n         Some(it) => it,\n     };\n-    let mut res = Vec::new();\n-    for nav in rr.resolves_to {\n-        let line_index = world.analysis().file_line_index(nav.file_id());\n-        let location = to_location(nav.file_id(), nav.range(), &world, &line_index)?;\n-        res.push(location)\n-    }\n+    let res = rr\n+        .resolves_to\n+        .into_iter()\n+        .map(|nav| nav.try_conv_with(&world))\n+        .collect::<Result<Vec<_>>>()?;\n     Ok(Some(req::GotoDefinitionResponse::Array(res)))\n }\n \n@@ -226,13 +224,12 @@ pub fn handle_parent_module(\n     params: req::TextDocumentPositionParams,\n ) -> Result<Vec<Location>> {\n     let position = params.try_conv_with(&world)?;\n-    let mut res = Vec::new();\n-    for (file_id, symbol) in world.analysis().parent_module(position)? {\n-        let line_index = world.analysis().file_line_index(file_id);\n-        let location = to_location(file_id, symbol.node_range, &world, &line_index)?;\n-        res.push(location);\n-    }\n-    Ok(res)\n+    world\n+        .analysis()\n+        .parent_module(position)?\n+        .into_iter()\n+        .map(|nav| nav.try_conv_with(&world))\n+        .collect::<Result<Vec<_>>>()\n }\n \n pub fn handle_runnables("}]}