{"sha": "8841f26e94705490b19f15479e86b3986549f8bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4NDFmMjZlOTQ3MDU0OTBiMTlmMTU0NzllODZiMzk4NjU0OWY4YmI=", "commit": {"author": {"name": "Wojciech Nawrocki", "email": "wjnawrocki+gh@protonmail.com", "date": "2016-06-02T17:36:10Z"}, "committer": {"name": "Wojciech Nawrocki", "email": "wjnawrocki+gh@protonmail.com", "date": "2016-06-02T17:36:10Z"}, "message": "atomic doc: fix statement", "tree": {"sha": "c2cb9cda9ab19bc677710147364ee0fc6fc542e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2cb9cda9ab19bc677710147364ee0fc6fc542e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8841f26e94705490b19f15479e86b3986549f8bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8841f26e94705490b19f15479e86b3986549f8bb", "html_url": "https://github.com/rust-lang/rust/commit/8841f26e94705490b19f15479e86b3986549f8bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8841f26e94705490b19f15479e86b3986549f8bb/comments", "author": {"login": "Vtec234", "id": 13901751, "node_id": "MDQ6VXNlcjEzOTAxNzUx", "avatar_url": "https://avatars.githubusercontent.com/u/13901751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vtec234", "html_url": "https://github.com/Vtec234", "followers_url": "https://api.github.com/users/Vtec234/followers", "following_url": "https://api.github.com/users/Vtec234/following{/other_user}", "gists_url": "https://api.github.com/users/Vtec234/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vtec234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vtec234/subscriptions", "organizations_url": "https://api.github.com/users/Vtec234/orgs", "repos_url": "https://api.github.com/users/Vtec234/repos", "events_url": "https://api.github.com/users/Vtec234/events{/privacy}", "received_events_url": "https://api.github.com/users/Vtec234/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Vtec234", "id": 13901751, "node_id": "MDQ6VXNlcjEzOTAxNzUx", "avatar_url": "https://avatars.githubusercontent.com/u/13901751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vtec234", "html_url": "https://github.com/Vtec234", "followers_url": "https://api.github.com/users/Vtec234/followers", "following_url": "https://api.github.com/users/Vtec234/following{/other_user}", "gists_url": "https://api.github.com/users/Vtec234/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vtec234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vtec234/subscriptions", "organizations_url": "https://api.github.com/users/Vtec234/orgs", "repos_url": "https://api.github.com/users/Vtec234/repos", "events_url": "https://api.github.com/users/Vtec234/events{/privacy}", "received_events_url": "https://api.github.com/users/Vtec234/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b47a442f0b868b8501a894c3fdc05719eb337962", "url": "https://api.github.com/repos/rust-lang/rust/commits/b47a442f0b868b8501a894c3fdc05719eb337962", "html_url": "https://github.com/rust-lang/rust/commit/b47a442f0b868b8501a894c3fdc05719eb337962"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "47d9deb62ff6556501c8588981dc621b4282ca1f", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8841f26e94705490b19f15479e86b3986549f8bb/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8841f26e94705490b19f15479e86b3986549f8bb/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=8841f26e94705490b19f15479e86b3986549f8bb", "patch": "@@ -289,7 +289,7 @@ impl AtomicBool {\n     /// Stores a value into the `bool` if the current value is the same as the `current` value.\n     ///\n     /// The return value is a result indicating whether the new value was written and containing\n-    /// the previous value. On success this value is guaranteed to be equal to `new`.\n+    /// the previous value. On success this value is guaranteed to be equal to `current`.\n     ///\n     /// `compare_exchange` takes two `Ordering` arguments to describe the memory ordering of this\n     /// operation. The first describes the required ordering if the operation succeeds while the\n@@ -633,7 +633,7 @@ impl<T> AtomicPtr<T> {\n     /// Stores a value into the pointer if the current value is the same as the `current` value.\n     ///\n     /// The return value is a result indicating whether the new value was written and containing\n-    /// the previous value. On success this value is guaranteed to be equal to `new`.\n+    /// the previous value. On success this value is guaranteed to be equal to `current`.\n     ///\n     /// `compare_exchange` takes two `Ordering` arguments to describe the memory ordering of this\n     /// operation. The first describes the required ordering if the operation succeeds while the\n@@ -886,7 +886,7 @@ macro_rules! atomic_int {\n             ///\n             /// The return value is a result indicating whether the new value was written and\n             /// containing the previous value. On success this value is guaranteed to be equal to\n-            /// `new`.\n+            /// `current`.\n             ///\n             /// `compare_exchange` takes two `Ordering` arguments to describe the memory ordering of\n             /// this operation. The first describes the required ordering if the operation succeeds"}]}