{"sha": "2a45057e17082559b4c3a365d9b29cc30105f740", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhNDUwNTdlMTcwODI1NTliNGMzYTM2NWQ5YjI5Y2MzMDEwNWY3NDA=", "commit": {"author": {"name": "Marc-Antoine Perennou", "email": "Marc-Antoine@Perennou.com", "date": "2018-09-18T12:58:11Z"}, "committer": {"name": "Marc-Antoine Perennou", "email": "Marc-Antoine@Perennou.com", "date": "2018-09-18T13:02:03Z"}, "message": "rustbuild: drop color handling\n\nLet cargo handle that for us\n\nSigned-off-by: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>", "tree": {"sha": "717049b7466b449737bc321b938bfc9c9f988130", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/717049b7466b449737bc321b938bfc9c9f988130"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a45057e17082559b4c3a365d9b29cc30105f740", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a45057e17082559b4c3a365d9b29cc30105f740", "html_url": "https://github.com/rust-lang/rust/commit/2a45057e17082559b4c3a365d9b29cc30105f740", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a45057e17082559b4c3a365d9b29cc30105f740/comments", "author": {"login": "Keruspe", "id": 222942, "node_id": "MDQ6VXNlcjIyMjk0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/222942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Keruspe", "html_url": "https://github.com/Keruspe", "followers_url": "https://api.github.com/users/Keruspe/followers", "following_url": "https://api.github.com/users/Keruspe/following{/other_user}", "gists_url": "https://api.github.com/users/Keruspe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Keruspe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Keruspe/subscriptions", "organizations_url": "https://api.github.com/users/Keruspe/orgs", "repos_url": "https://api.github.com/users/Keruspe/repos", "events_url": "https://api.github.com/users/Keruspe/events{/privacy}", "received_events_url": "https://api.github.com/users/Keruspe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Keruspe", "id": 222942, "node_id": "MDQ6VXNlcjIyMjk0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/222942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Keruspe", "html_url": "https://github.com/Keruspe", "followers_url": "https://api.github.com/users/Keruspe/followers", "following_url": "https://api.github.com/users/Keruspe/following{/other_user}", "gists_url": "https://api.github.com/users/Keruspe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Keruspe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Keruspe/subscriptions", "organizations_url": "https://api.github.com/users/Keruspe/orgs", "repos_url": "https://api.github.com/users/Keruspe/repos", "events_url": "https://api.github.com/users/Keruspe/events{/privacy}", "received_events_url": "https://api.github.com/users/Keruspe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f004cae5360c4a3f365c7f7525b4293559201ce2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f004cae5360c4a3f365c7f7525b4293559201ce2", "html_url": "https://github.com/rust-lang/rust/commit/f004cae5360c4a3f365c7f7525b4293559201ce2"}], "stats": {"total": 43, "additions": 1, "deletions": 42}, "files": [{"sha": "b89976eca26c4b69dbfb13a27fbf919e91a5b257", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2a45057e17082559b4c3a365d9b29cc30105f740/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a45057e17082559b4c3a365d9b29cc30105f740/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=2a45057e17082559b4c3a365d9b29cc30105f740", "patch": "@@ -291,15 +291,6 @@ fn main() {\n         cmd.arg(\"-Z\").arg(\"verify-llvm-ir\");\n     }\n \n-    let color = match env::var(\"RUSTC_COLOR\") {\n-        Ok(s) => usize::from_str(&s).expect(\"RUSTC_COLOR should be an integer\"),\n-        Err(_) => 0,\n-    };\n-\n-    if color != 0 {\n-        cmd.arg(\"--color=always\");\n-    }\n-\n     if env::var_os(\"RUSTC_DENY_WARNINGS\").is_some() && env::var_os(\"RUSTC_EXTERNAL_TOOL\").is_none()\n     {\n         cmd.arg(\"-Dwarnings\");"}, {"sha": "608f2c982c2a52485abfd8751054f189a759cf5f", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 1, "deletions": 33, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/2a45057e17082559b4c3a365d9b29cc30105f740/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a45057e17082559b4c3a365d9b29cc30105f740/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=2a45057e17082559b4c3a365d9b29cc30105f740", "patch": "@@ -29,7 +29,7 @@ use build_helper::{output, mtime, up_to_date};\n use filetime::FileTime;\n use serde_json;\n \n-use util::{exe, libdir, is_dylib, CiEnv};\n+use util::{exe, libdir, is_dylib};\n use {Compiler, Mode, GitRepo};\n use native;\n \n@@ -1034,29 +1034,6 @@ pub fn add_to_sysroot(builder: &Builder, sysroot_dst: &Path, stamp: &Path) {\n     }\n }\n \n-// Avoiding a dependency on winapi to keep compile times down\n-#[cfg(unix)]\n-fn stderr_isatty() -> bool {\n-    use libc;\n-    unsafe { libc::isatty(libc::STDERR_FILENO) != 0 }\n-}\n-#[cfg(windows)]\n-fn stderr_isatty() -> bool {\n-    type DWORD = u32;\n-    type BOOL = i32;\n-    type HANDLE = *mut u8;\n-    const STD_ERROR_HANDLE: DWORD = -12i32 as DWORD;\n-    extern \"system\" {\n-        fn GetStdHandle(which: DWORD) -> HANDLE;\n-        fn GetConsoleMode(hConsoleHandle: HANDLE, lpMode: *mut DWORD) -> BOOL;\n-    }\n-    unsafe {\n-        let handle = GetStdHandle(STD_ERROR_HANDLE);\n-        let mut out = 0;\n-        GetConsoleMode(handle, &mut out) != 0\n-    }\n-}\n-\n pub fn run_cargo(builder: &Builder,\n                  cargo: &mut Command,\n                  tail_args: Vec<String>,\n@@ -1218,15 +1195,6 @@ pub fn stream_cargo(\n     cargo.arg(\"--message-format\").arg(\"json\")\n          .stdout(Stdio::piped());\n \n-    if stderr_isatty() && builder.ci_env == CiEnv::None &&\n-        // if the terminal is reported as dumb, then we don't want to enable color for rustc\n-        env::var_os(\"TERM\").map(|t| t != *\"dumb\").unwrap_or(true) {\n-        // since we pass message-format=json to cargo, we need to tell the rustc\n-        // wrapper to give us colored output if necessary. This is because we\n-        // only want Cargo's JSON output, not rustcs.\n-        cargo.env(\"RUSTC_COLOR\", \"1\");\n-    }\n-\n     for arg in tail_args {\n         cargo.arg(arg);\n     }"}]}