{"sha": "76802e31a131d2ac5933b8283a292735b6ab8366", "node_id": "C_kwDOAAsO6NoAKDc2ODAyZTMxYTEzMWQyYWM1OTMzYjgyODNhMjkyNzM1YjZhYjgzNjY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-05-03T21:09:50Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-05-03T21:09:50Z"}, "message": "Error message for ambiguous RTN from super bounds", "tree": {"sha": "c26232fab7f3123602b04e9dd62454f8ec2aee9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c26232fab7f3123602b04e9dd62454f8ec2aee9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76802e31a131d2ac5933b8283a292735b6ab8366", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76802e31a131d2ac5933b8283a292735b6ab8366", "html_url": "https://github.com/rust-lang/rust/commit/76802e31a131d2ac5933b8283a292735b6ab8366", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76802e31a131d2ac5933b8283a292735b6ab8366/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fef2f5b815fd9cf48895063e35054e34c31562d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/fef2f5b815fd9cf48895063e35054e34c31562d9", "html_url": "https://github.com/rust-lang/rust/commit/fef2f5b815fd9cf48895063e35054e34c31562d9"}], "stats": {"total": 87, "additions": 84, "deletions": 3}, "files": [{"sha": "2035b256daacf0471a689e3fecbb1952aab4879c", "filename": "compiler/rustc_hir_analysis/messages.ftl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/76802e31a131d2ac5933b8283a292735b6ab8366/compiler%2Frustc_hir_analysis%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/76802e31a131d2ac5933b8283a292735b6ab8366/compiler%2Frustc_hir_analysis%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fmessages.ftl?ref=76802e31a131d2ac5933b8283a292735b6ab8366", "patch": "@@ -194,6 +194,10 @@ hir_analysis_return_type_notation_equality_bound =\n hir_analysis_return_type_notation_missing_method =\n     cannot find associated function `{$assoc_name}` for `{$ty_name}`\n \n+hir_analysis_return_type_notation_conflicting_bound =\n+    ambiguous associated function `{$assoc_name}` for `{$ty_name}`\n+    .note = `{$assoc_name}` is declared in two supertraits: `{$first_bound}` and `{$second_bound}`\n+\n hir_analysis_placeholder_not_allowed_item_signatures = the placeholder `_` is not allowed within types on item signatures for {$kind}\n     .label = not allowed in type signatures\n "}, {"sha": "9abb71d8b1a2d173f26b40978727cda39415a8a3", "filename": "compiler/rustc_hir_analysis/src/astconv/mod.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/76802e31a131d2ac5933b8283a292735b6ab8366/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76802e31a131d2ac5933b8283a292735b6ab8366/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs?ref=76802e31a131d2ac5933b8283a292735b6ab8366", "patch": "@@ -2083,8 +2083,16 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             }\n         };\n \n-        if let Some(_conflicting_candidate) = matching_candidates.next() {\n-            todo!()\n+        if let Some(conflicting_candidate) = matching_candidates.next() {\n+            return Err(self.tcx().sess.emit_err(\n+                crate::errors::ReturnTypeNotationConflictingBound {\n+                    span,\n+                    ty_name: ty_name.to_string(),\n+                    assoc_name: assoc_name.name,\n+                    first_bound: candidate.print_only_trait_path(),\n+                    second_bound: conflicting_candidate.print_only_trait_path(),\n+                },\n+            ));\n         }\n \n         Ok(candidate)"}, {"sha": "32c66b16fb9a97fceb7fda3aaa108ca1a356cdf1", "filename": "compiler/rustc_hir_analysis/src/errors.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/76802e31a131d2ac5933b8283a292735b6ab8366/compiler%2Frustc_hir_analysis%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76802e31a131d2ac5933b8283a292735b6ab8366/compiler%2Frustc_hir_analysis%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Ferrors.rs?ref=76802e31a131d2ac5933b8283a292735b6ab8366", "patch": "@@ -6,7 +6,7 @@ use rustc_errors::{\n     MultiSpan,\n };\n use rustc_macros::{Diagnostic, Subdiagnostic};\n-use rustc_middle::ty::Ty;\n+use rustc_middle::ty::{self, print::TraitRefPrintOnlyTraitPath, Ty};\n use rustc_span::{symbol::Ident, Span, Symbol};\n \n #[derive(Diagnostic)]\n@@ -516,6 +516,18 @@ pub(crate) struct ReturnTypeNotationMissingMethod {\n     pub assoc_name: Symbol,\n }\n \n+#[derive(Diagnostic)]\n+#[diag(hir_analysis_return_type_notation_conflicting_bound)]\n+#[note]\n+pub(crate) struct ReturnTypeNotationConflictingBound<'tcx> {\n+    #[primary_span]\n+    pub span: Span,\n+    pub ty_name: String,\n+    pub assoc_name: Symbol,\n+    pub first_bound: ty::Binder<'tcx, TraitRefPrintOnlyTraitPath<'tcx>>,\n+    pub second_bound: ty::Binder<'tcx, TraitRefPrintOnlyTraitPath<'tcx>>,\n+}\n+\n #[derive(Diagnostic)]\n #[diag(hir_analysis_placeholder_not_allowed_item_signatures, code = \"E0121\")]\n pub(crate) struct PlaceholderNotAllowedItemSignatures {"}, {"sha": "32403d9a5e63f001cfae14a216fbaa6d22e310f8", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/76802e31a131d2ac5933b8283a292735b6ab8366/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76802e31a131d2ac5933b8283a292735b6ab8366/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=76802e31a131d2ac5933b8283a292735b6ab8366", "patch": "@@ -2633,6 +2633,12 @@ macro_rules! define_print_and_forward_display {\n #[derive(Copy, Clone, TypeFoldable, TypeVisitable, Lift)]\n pub struct TraitRefPrintOnlyTraitPath<'tcx>(ty::TraitRef<'tcx>);\n \n+impl<'tcx> rustc_errors::IntoDiagnosticArg for TraitRefPrintOnlyTraitPath<'tcx> {\n+    fn into_diagnostic_arg(self) -> rustc_errors::DiagnosticArgValue<'static> {\n+        self.to_string().into_diagnostic_arg()\n+    }\n+}\n+\n impl<'tcx> fmt::Debug for TraitRefPrintOnlyTraitPath<'tcx> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         fmt::Display::fmt(self, f)"}, {"sha": "028e526b5f5039c21411d9bb7715749ee04f6110", "filename": "tests/ui/async-await/return-type-notation/super-method-bound-ambig.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/76802e31a131d2ac5933b8283a292735b6ab8366/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fsuper-method-bound-ambig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76802e31a131d2ac5933b8283a292735b6ab8366/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fsuper-method-bound-ambig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fsuper-method-bound-ambig.rs?ref=76802e31a131d2ac5933b8283a292735b6ab8366", "patch": "@@ -0,0 +1,32 @@\n+// edition:2021\n+\n+#![feature(async_fn_in_trait, return_type_notation)]\n+//~^ WARN the feature `return_type_notation` is incomplete\n+\n+trait Super1<'a> {\n+    async fn test();\n+}\n+impl Super1<'_> for () {\n+    async fn test() {}\n+}\n+\n+trait Super2 {\n+    async fn test();\n+}\n+impl Super2 for () {\n+    async fn test() {}\n+}\n+\n+trait Foo: for<'a> Super1<'a> + Super2 {}\n+impl Foo for () {}\n+\n+fn test<T>()\n+where\n+    T: Foo<test(): Send>,\n+    //~^ ERROR ambiguous associated function `test` for `Foo`\n+{\n+}\n+\n+fn main() {\n+    test::<()>();\n+}"}, {"sha": "5bc8dbde4bcd5ca051b32e449de6dc307b8b6ae6", "filename": "tests/ui/async-await/return-type-notation/super-method-bound-ambig.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/76802e31a131d2ac5933b8283a292735b6ab8366/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fsuper-method-bound-ambig.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/76802e31a131d2ac5933b8283a292735b6ab8366/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fsuper-method-bound-ambig.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fsuper-method-bound-ambig.stderr?ref=76802e31a131d2ac5933b8283a292735b6ab8366", "patch": "@@ -0,0 +1,19 @@\n+warning: the feature `return_type_notation` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/super-method-bound-ambig.rs:3:31\n+   |\n+LL | #![feature(async_fn_in_trait, return_type_notation)]\n+   |                               ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #109417 <https://github.com/rust-lang/rust/issues/109417> for more information\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error: ambiguous associated function `test` for `Foo`\n+  --> $DIR/super-method-bound-ambig.rs:25:12\n+   |\n+LL |     T: Foo<test(): Send>,\n+   |            ^^^^^^^^^^^^\n+   |\n+   = note: `test` is declared in two supertraits: `Super2` and `Super1<'a>`\n+\n+error: aborting due to previous error; 1 warning emitted\n+"}]}