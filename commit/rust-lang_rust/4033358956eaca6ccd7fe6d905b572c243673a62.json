{"sha": "4033358956eaca6ccd7fe6d905b572c243673a62", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwMzMzNTg5NTZlYWNhNmNjZDdmZTZkOTA1YjU3MmMyNDM2NzNhNjI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-23T13:20:36Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-23T13:20:36Z"}, "message": "make miri_start_panic intrinsic an FFI function", "tree": {"sha": "219bb185be9b560d850be852ac86adad461616ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/219bb185be9b560d850be852ac86adad461616ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4033358956eaca6ccd7fe6d905b572c243673a62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4033358956eaca6ccd7fe6d905b572c243673a62", "html_url": "https://github.com/rust-lang/rust/commit/4033358956eaca6ccd7fe6d905b572c243673a62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4033358956eaca6ccd7fe6d905b572c243673a62/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "592b1408806c3a78c7388924014637a1e7bf5384", "url": "https://api.github.com/repos/rust-lang/rust/commits/592b1408806c3a78c7388924014637a1e7bf5384", "html_url": "https://github.com/rust-lang/rust/commit/592b1408806c3a78c7388924014637a1e7bf5384"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "cf85636b57bf2b65b119a71381754914bca0cd16", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4033358956eaca6ccd7fe6d905b572c243673a62/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4033358956eaca6ccd7fe6d905b572c243673a62/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=4033358956eaca6ccd7fe6d905b572c243673a62", "patch": "@@ -111,7 +111,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         def_id: DefId,\n         args: &[OpTy<'tcx, Tag>],\n         ret: Option<(PlaceTy<'tcx, Tag>, mir::BasicBlock)>,\n-        _unwind: Option<mir::BasicBlock>,\n+        unwind: Option<mir::BasicBlock>,\n     ) -> InterpResult<'tcx, Option<&'mir mir::Body<'tcx>>> {\n         let this = self.eval_context_mut();\n         let attrs = this.tcx.get_attrs(def_id);\n@@ -126,6 +126,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         // First: functions that diverge.\n         let (dest, ret) = match ret {\n             None => match link_name {\n+                \"miri_start_panic\" => {\n+                    this.handle_miri_start_panic(args, unwind)?;\n+                    return Ok(None);\n+                }\n                 // This matches calls to the foreign item `panic_impl`.\n                 // The implementation is provided by the function with the `#[panic_handler]` attribute.\n                 \"panic_impl\" => {"}, {"sha": "f542bebd82ad1b0f61310dac7fa3bc7fd60a3c14", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4033358956eaca6ccd7fe6d905b572c243673a62/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4033358956eaca6ccd7fe6d905b572c243673a62/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=4033358956eaca6ccd7fe6d905b572c243673a62", "patch": "@@ -18,7 +18,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         instance: ty::Instance<'tcx>,\n         args: &[OpTy<'tcx, Tag>],\n         ret: Option<(PlaceTy<'tcx, Tag>, mir::BasicBlock)>,\n-        unwind: Option<mir::BasicBlock>,\n+        _unwind: Option<mir::BasicBlock>,\n     ) -> InterpResult<'tcx> {\n         let this = self.eval_context_mut();\n         let intrinsic_name = this.tcx.item_name(instance.def_id());\n@@ -32,13 +32,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             return Ok(());\n         }\n \n-        // First handle intrinsics without return place.\n+        // All supported intrinsics have a return place.\n         let intrinsic_name = &*intrinsic_name.as_str();\n         let (dest, ret) = match ret {\n-            None => match intrinsic_name {\n-                \"miri_start_panic\" => return this.handle_miri_start_panic(args, unwind),\n-                _ => throw_unsup_format!(\"unimplemented (diverging) intrinsic: {}\", intrinsic_name),\n-            },\n+            None => throw_unsup_format!(\"unimplemented (diverging) intrinsic: {}\", intrinsic_name),\n             Some(p) => p,\n         };\n "}]}