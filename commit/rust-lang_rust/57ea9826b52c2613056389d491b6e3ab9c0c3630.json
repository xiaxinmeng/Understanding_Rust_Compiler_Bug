{"sha": "57ea9826b52c2613056389d491b6e3ab9c0c3630", "node_id": "C_kwDOAAsO6NoAKDU3ZWE5ODI2YjUyYzI2MTMwNTYzODlkNDkxYjZlM2FiOWMwYzM2MzA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-07T17:12:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-07T17:12:01Z"}, "message": "Auto merge of #13991 - vasilev-alex:add-braces-assist, r=Veykril\n\nfeat: add braces assist\n\nThis assist adds support for adding braces where it may be appropriate (e.g. lambda expressions)\n\n![ex](https://user-images.githubusercontent.com/4973437/213783924-7c8a8ab5-6a52-4d80-837c-cf2a9b56f061.gif)", "tree": {"sha": "87e5fd4a4c83e3d710875b0cda5f5f89743b872e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87e5fd4a4c83e3d710875b0cda5f5f89743b872e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57ea9826b52c2613056389d491b6e3ab9c0c3630", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57ea9826b52c2613056389d491b6e3ab9c0c3630", "html_url": "https://github.com/rust-lang/rust/commit/57ea9826b52c2613056389d491b6e3ab9c0c3630", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57ea9826b52c2613056389d491b6e3ab9c0c3630/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d32a7b7c66450c792dafe162b229d40ab6a1cc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d32a7b7c66450c792dafe162b229d40ab6a1cc8", "html_url": "https://github.com/rust-lang/rust/commit/1d32a7b7c66450c792dafe162b229d40ab6a1cc8"}, {"sha": "2a4837089e8c8551c43aeada433d61352a135ce5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a4837089e8c8551c43aeada433d61352a135ce5", "html_url": "https://github.com/rust-lang/rust/commit/2a4837089e8c8551c43aeada433d61352a135ce5"}], "stats": {"total": 182, "additions": 182, "deletions": 0}, "files": [{"sha": "2f4a263ee07007230ac682ce85b340f2f6e38d3b", "filename": "crates/ide-assists/src/handlers/add_braces.rs", "status": "added", "additions": 155, "deletions": 0, "changes": 155, "blob_url": "https://github.com/rust-lang/rust/blob/57ea9826b52c2613056389d491b6e3ab9c0c3630/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fadd_braces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ea9826b52c2613056389d491b6e3ab9c0c3630/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fadd_braces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fadd_braces.rs?ref=57ea9826b52c2613056389d491b6e3ab9c0c3630", "patch": "@@ -0,0 +1,155 @@\n+use syntax::{\n+    ast::{self, edit::AstNodeEdit, make},\n+    AstNode,\n+};\n+\n+use crate::{AssistContext, AssistId, AssistKind, Assists};\n+\n+// Assist: add_braces\n+//\n+// Adds braces to lambda and match arm expressions.\n+//\n+// ```\n+// fn foo(n: i32) -> i32 {\n+//     match n {\n+//         1 =>$0 n + 1,\n+//         _ => 0\n+//     }\n+// }\n+// ```\n+// ->\n+// ```\n+// fn foo(n: i32) -> i32 {\n+//     match n {\n+//         1 => {\n+//             n + 1\n+//         },\n+//         _ => 0\n+//     }\n+// }\n+// ```\n+pub(crate) fn add_braces(acc: &mut Assists, ctx: &AssistContext<'_>) -> Option<()> {\n+    let (expr_type, expr) = get_replacement_node(ctx)?;\n+\n+    acc.add(\n+        AssistId(\"add_braces\", AssistKind::RefactorRewrite),\n+        match expr_type {\n+            ParentType::ClosureExpr => \"Add braces to closure body\",\n+            ParentType::MatchArmExpr => \"Add braces to arm expression\",\n+        },\n+        expr.syntax().text_range(),\n+        |builder| {\n+            let block_expr = AstNodeEdit::indent(\n+                &make::block_expr(None, Some(expr.clone())),\n+                AstNodeEdit::indent_level(&expr),\n+            );\n+\n+            builder.replace(expr.syntax().text_range(), block_expr.syntax().text());\n+        },\n+    )\n+}\n+\n+enum ParentType {\n+    MatchArmExpr,\n+    ClosureExpr,\n+}\n+\n+fn get_replacement_node(ctx: &AssistContext<'_>) -> Option<(ParentType, ast::Expr)> {\n+    if let Some(match_arm) = ctx.find_node_at_offset::<ast::MatchArm>() {\n+        let match_arm_expr = match_arm.expr()?;\n+\n+        if matches!(match_arm_expr, ast::Expr::BlockExpr(_)) {\n+            return None;\n+        }\n+\n+        return Some((ParentType::MatchArmExpr, match_arm_expr));\n+    } else if let Some(closure_expr) = ctx.find_node_at_offset::<ast::ClosureExpr>() {\n+        let body = closure_expr.body()?;\n+\n+        if matches!(body, ast::Expr::BlockExpr(_)) {\n+            return None;\n+        }\n+\n+        return Some((ParentType::ClosureExpr, body));\n+    }\n+\n+    None\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    use crate::tests::{check_assist, check_assist_not_applicable};\n+\n+    use super::*;\n+\n+    #[test]\n+    fn suggest_add_braces_for_closure() {\n+        check_assist(\n+            add_braces,\n+            r#\"\n+fn foo() {\n+    t(|n|$0 n + 100);\n+}\n+\"#,\n+            r#\"\n+fn foo() {\n+    t(|n| {\n+        n + 100\n+    });\n+}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn no_assist_for_closures_with_braces() {\n+        check_assist_not_applicable(\n+            add_braces,\n+            r#\"\n+fn foo() {\n+    t(|n|$0 { n + 100 });\n+}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn suggest_add_braces_for_match() {\n+        check_assist(\n+            add_braces,\n+            r#\"\n+fn foo() {\n+    match n {\n+        Some(n) $0=> 29,\n+        _ => ()\n+    };\n+}\n+\"#,\n+            r#\"\n+fn foo() {\n+    match n {\n+        Some(n) => {\n+            29\n+        },\n+        _ => ()\n+    };\n+}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn no_assist_for_match_with_braces() {\n+        check_assist_not_applicable(\n+            add_braces,\n+            r#\"\n+fn foo() {\n+    match n {\n+        Some(n) $0=> { return 29; },\n+        _ => ()\n+    };\n+}\n+\"#,\n+        );\n+    }\n+}"}, {"sha": "276cf5f5dd018711234438f079a42f40de96616b", "filename": "crates/ide-assists/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ea9826b52c2613056389d491b6e3ab9c0c3630/crates%2Fide-assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ea9826b52c2613056389d491b6e3ab9c0c3630/crates%2Fide-assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Flib.rs?ref=57ea9826b52c2613056389d491b6e3ab9c0c3630", "patch": "@@ -106,6 +106,7 @@ mod handlers {\n \n     pub(crate) type Handler = fn(&mut Assists, &AssistContext<'_>) -> Option<()>;\n \n+    mod add_braces;\n     mod add_explicit_type;\n     mod add_label_to_loop;\n     mod add_lifetime_to_type;\n@@ -209,6 +210,7 @@ mod handlers {\n     pub(crate) fn all() -> &'static [Handler] {\n         &[\n             // These are alphabetic for the foolish consistency\n+            add_braces::add_braces,\n             add_explicit_type::add_explicit_type,\n             add_label_to_loop::add_label_to_loop,\n             add_missing_match_arms::add_missing_match_arms,"}, {"sha": "8a25e1f648ae00ebeb9d3101aae88ae968f9b071", "filename": "crates/ide-assists/src/tests/generated.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/57ea9826b52c2613056389d491b6e3ab9c0c3630/crates%2Fide-assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ea9826b52c2613056389d491b6e3ab9c0c3630/crates%2Fide-assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=57ea9826b52c2613056389d491b6e3ab9c0c3630", "patch": "@@ -2,6 +2,31 @@\n \n use super::check_doc_test;\n \n+#[test]\n+fn doctest_add_braces() {\n+    check_doc_test(\n+        \"add_braces\",\n+        r#####\"\n+fn foo(n: i32) -> i32 {\n+    match n {\n+        1 =>$0 n + 1,\n+        _ => 0\n+    }\n+}\n+\"#####,\n+        r#####\"\n+fn foo(n: i32) -> i32 {\n+    match n {\n+        1 => {\n+            n + 1\n+        },\n+        _ => 0\n+    }\n+}\n+\"#####,\n+    )\n+}\n+\n #[test]\n fn doctest_add_explicit_type() {\n     check_doc_test("}]}