{"sha": "e5cbede103fca018089b113ec35f0cf863df7106", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1Y2JlZGUxMDNmY2EwMTgwODliMTEzZWMzNWYwY2Y4NjNkZjcxMDY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-07-22T17:52:38Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-07-22T23:56:10Z"}, "message": "std: add preliminary str benchmark.", "tree": {"sha": "0dbe717262ccbb9b3f47d9e2f2e1b152b0e3f81e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dbe717262ccbb9b3f47d9e2f2e1b152b0e3f81e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5cbede103fca018089b113ec35f0cf863df7106", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5cbede103fca018089b113ec35f0cf863df7106", "html_url": "https://github.com/rust-lang/rust/commit/e5cbede103fca018089b113ec35f0cf863df7106", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5cbede103fca018089b113ec35f0cf863df7106/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "786318f61b3d41238937d194970d2aaac34886cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/786318f61b3d41238937d194970d2aaac34886cd", "html_url": "https://github.com/rust-lang/rust/commit/786318f61b3d41238937d194970d2aaac34886cd"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "6876bf3da7c123dae1858e13a867a63848dbcbdd", "filename": "src/libstd/str.rs", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/e5cbede103fca018089b113ec35f0cf863df7106/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5cbede103fca018089b113ec35f0cf863df7106/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=e5cbede103fca018089b113ec35f0cf863df7106", "patch": "@@ -3532,3 +3532,48 @@ mod tests {\n         assert_eq!(5, sum_len([s.as_slice()]));\n     }\n }\n+\n+#[cfg(test)]\n+mod bench {\n+    use extra::test::BenchHarness;\n+    use str;\n+\n+    #[bench]\n+    fn is_utf8_100_ascii(bh: &mut BenchHarness) {\n+\n+        let s = bytes!(\"Hello there, the quick brown fox jumped over the lazy dog! \\\n+                        Lorem ipsum dolor sit amet, consectetur. \");\n+\n+        assert_eq!(100, s.len());\n+        do bh.iter {\n+            str::is_utf8(s);\n+        }\n+    }\n+\n+    #[bench]\n+    fn is_utf8_100_multibyte(bh: &mut BenchHarness) {\n+        let s = bytes!(\"\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf09\u0e1b\u0e23\u062f\u0648\u0644\u0629 \u0627\u0644\u0643\u0648\u064a\u062a\u0e17\u0e28\u0e44\u0e17\u0e22\u4e2d\u534e\ud800\udf45\ud800\udf3f\ud800\udf3b\ud800\udf46\ud800\udf39\ud800\udf3b\ud800\udf30\");\n+        assert_eq!(100, s.len());\n+        do bh.iter {\n+            str::is_utf8(s);\n+        }\n+    }\n+\n+    #[bench]\n+    fn map_chars_100_ascii(bh: &mut BenchHarness) {\n+        let s = \"HelloHelloHelloHelloHelloHelloHelloHelloHelloHello\\\n+                 HelloHelloHelloHelloHelloHelloHelloHelloHelloHello\";\n+        do bh.iter {\n+            s.map_chars(|c| ((c as uint) + 1) as char);\n+        }\n+    }\n+\n+    #[bench]\n+    fn map_chars_100_multibytes(bh: &mut BenchHarness) {\n+        let s = \"\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\\\n+                 \ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\ud800\udf00\ud800\udf16\ud800\udf0b\ud800\udf04\ud800\udf11\";\n+        do bh.iter {\n+            s.map_chars(|c| ((c as uint) + 1) as char);\n+        }\n+    }\n+}"}]}