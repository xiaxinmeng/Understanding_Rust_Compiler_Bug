{"sha": "931c07c94f5e6d2e24c08a1c4941612aab69872a", "node_id": "C_kwDOAAsO6NoAKDkzMWMwN2M5NGY1ZTZkMmUyNGMwOGExYzQ5NDE2MTJhYWI2OTg3MmE", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-06T14:08:59Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-09T15:16:04Z"}, "message": "The `<*const T>::guaranteed_*` methods now return an option for the unknown case", "tree": {"sha": "c6fef146a12d2ffac6ae8aa93e9e2eeee99f97ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6fef146a12d2ffac6ae8aa93e9e2eeee99f97ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/931c07c94f5e6d2e24c08a1c4941612aab69872a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/931c07c94f5e6d2e24c08a1c4941612aab69872a", "html_url": "https://github.com/rust-lang/rust/commit/931c07c94f5e6d2e24c08a1c4941612aab69872a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/931c07c94f5e6d2e24c08a1c4941612aab69872a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8169a6da07f123cda26b5903e3d6032dd00efb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8169a6da07f123cda26b5903e3d6032dd00efb9", "html_url": "https://github.com/rust-lang/rust/commit/b8169a6da07f123cda26b5903e3d6032dd00efb9"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "586c9489dd44b902f0865458fe39cd54522e63dc", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/931c07c94f5e6d2e24c08a1c4941612aab69872a/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/931c07c94f5e6d2e24c08a1c4941612aab69872a/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=931c07c94f5e6d2e24c08a1c4941612aab69872a", "patch": "@@ -819,20 +819,13 @@ fn codegen_regular_intrinsic_call<'tcx>(\n             ret.write_cvalue(fx, val);\n         }\n \n-        sym::ptr_guaranteed_eq => {\n+        sym::ptr_guaranteed_cmp => {\n             intrinsic_args!(fx, args => (a, b); intrinsic);\n \n             let val = crate::num::codegen_ptr_binop(fx, BinOp::Eq, a, b);\n             ret.write_cvalue(fx, val);\n         }\n \n-        sym::ptr_guaranteed_ne => {\n-            intrinsic_args!(fx, args => (a, b); intrinsic);\n-\n-            let val = crate::num::codegen_ptr_binop(fx, BinOp::Ne, a, b);\n-            ret.write_cvalue(fx, val);\n-        }\n-\n         sym::caller_location => {\n             intrinsic_args!(fx, args => (); intrinsic);\n "}]}