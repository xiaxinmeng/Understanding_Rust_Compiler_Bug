{"sha": "0214ec248b2835a17c845c742d0e7697262ca72e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMTRlYzI0OGIyODM1YTE3Yzg0NWM3NDJkMGU3Njk3MjYyY2E3MmU=", "commit": {"author": {"name": "trixnz", "email": "mtatrix@gmail.com", "date": "2016-08-04T20:52:16Z"}, "committer": {"name": "trixnz", "email": "mtatrix@gmail.com", "date": "2016-08-04T20:52:16Z"}, "message": "Update error format for E0062", "tree": {"sha": "7de3911957cfd076aae098d7347c72a37be191e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7de3911957cfd076aae098d7347c72a37be191e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0214ec248b2835a17c845c742d0e7697262ca72e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0214ec248b2835a17c845c742d0e7697262ca72e", "html_url": "https://github.com/rust-lang/rust/commit/0214ec248b2835a17c845c742d0e7697262ca72e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0214ec248b2835a17c845c742d0e7697262ca72e/comments", "author": {"login": "trixnz", "id": 2995953, "node_id": "MDQ6VXNlcjI5OTU5NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2995953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trixnz", "html_url": "https://github.com/trixnz", "followers_url": "https://api.github.com/users/trixnz/followers", "following_url": "https://api.github.com/users/trixnz/following{/other_user}", "gists_url": "https://api.github.com/users/trixnz/gists{/gist_id}", "starred_url": "https://api.github.com/users/trixnz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trixnz/subscriptions", "organizations_url": "https://api.github.com/users/trixnz/orgs", "repos_url": "https://api.github.com/users/trixnz/repos", "events_url": "https://api.github.com/users/trixnz/events{/privacy}", "received_events_url": "https://api.github.com/users/trixnz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "trixnz", "id": 2995953, "node_id": "MDQ6VXNlcjI5OTU5NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2995953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trixnz", "html_url": "https://github.com/trixnz", "followers_url": "https://api.github.com/users/trixnz/followers", "following_url": "https://api.github.com/users/trixnz/following{/other_user}", "gists_url": "https://api.github.com/users/trixnz/gists{/gist_id}", "starred_url": "https://api.github.com/users/trixnz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trixnz/subscriptions", "organizations_url": "https://api.github.com/users/trixnz/orgs", "repos_url": "https://api.github.com/users/trixnz/repos", "events_url": "https://api.github.com/users/trixnz/events{/privacy}", "received_events_url": "https://api.github.com/users/trixnz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e804a3cf256106c097d44f6e0212cd183122da07", "url": "https://api.github.com/repos/rust-lang/rust/commits/e804a3cf256106c097d44f6e0212cd183122da07", "html_url": "https://github.com/rust-lang/rust/commit/e804a3cf256106c097d44f6e0212cd183122da07"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "4d3dda8199304a1a4e62a6d588948c16bb72399e", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0214ec248b2835a17c845c742d0e7697262ca72e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0214ec248b2835a17c845c742d0e7697262ca72e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=0214ec248b2835a17c845c742d0e7697262ca72e", "patch": "@@ -3063,6 +3063,8 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             remaining_fields.insert(field.name, field);\n         }\n \n+        let mut seen_fields = FnvHashMap();\n+\n         let mut error_happened = false;\n \n         // Typecheck each field.\n@@ -3071,13 +3073,25 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n \n             if let Some(v_field) = remaining_fields.remove(&field.name.node) {\n                 expected_field_type = self.field_ty(field.span, v_field, substs);\n+\n+                seen_fields.insert(field.name.node, field.span);\n             } else {\n                 error_happened = true;\n                 expected_field_type = tcx.types.err;\n                 if let Some(_) = variant.find_field_named(field.name.node) {\n-                    span_err!(self.tcx.sess, field.name.span, E0062,\n-                        \"field `{}` specified more than once\",\n-                        field.name.node);\n+                    let mut err = struct_span_err!(self.tcx.sess,\n+                                                field.name.span,\n+                                                E0062,\n+                                                \"field `{}` specified more than once\",\n+                                                field.name.node);\n+\n+                    err.span_label(field.name.span, &format!(\"used more than once\"));\n+\n+                    if let Some(prev_span) = seen_fields.get(&field.name.node) {\n+                        err.span_label(*prev_span, &format!(\"first use of `{}`\", field.name.node));\n+                    }\n+\n+                    err.emit();\n                 } else {\n                     self.report_unknown_field(adt_ty, variant, field, ast_fields);\n                 }"}, {"sha": "822d93e52d588c5688a7ecc759dd023b9ee5cf1d", "filename": "src/test/compile-fail/E0062.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0214ec248b2835a17c845c742d0e7697262ca72e/src%2Ftest%2Fcompile-fail%2FE0062.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0214ec248b2835a17c845c742d0e7697262ca72e/src%2Ftest%2Fcompile-fail%2FE0062.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0062.rs?ref=0214ec248b2835a17c845c742d0e7697262ca72e", "patch": "@@ -14,7 +14,9 @@ struct Foo {\n \n fn main() {\n     let x = Foo {\n+        x: 0, //~ NOTE first use of `x`\n         x: 0,\n-        x: 0, //~ ERROR E0062\n+        //~^ ERROR E0062\n+        //~| NOTE used more than once\n     };\n }"}]}