{"sha": "b906adfffe775f5b34b7705f5a594b14191009a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MDZhZGZmZmU3NzVmNWIzNGI3NzA1ZjVhNTk0YjE0MTkxMDA5YTk=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-13T17:38:10Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-13T17:38:10Z"}, "message": "Implement some missing CastKind::Misc casts", "tree": {"sha": "6badba3caa086d59fd22b9469662a85e829a56d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6badba3caa086d59fd22b9469662a85e829a56d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b906adfffe775f5b34b7705f5a594b14191009a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b906adfffe775f5b34b7705f5a594b14191009a9", "html_url": "https://github.com/rust-lang/rust/commit/b906adfffe775f5b34b7705f5a594b14191009a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b906adfffe775f5b34b7705f5a594b14191009a9/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "127e080f62d557f0ea94b7f5b7f6cea2604b3122", "url": "https://api.github.com/repos/rust-lang/rust/commits/127e080f62d557f0ea94b7f5b7f6cea2604b3122", "html_url": "https://github.com/rust-lang/rust/commit/127e080f62d557f0ea94b7f5b7f6cea2604b3122"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "b9356d40f3352108ac1f1002e7f4c6da4069a7f3", "filename": "src/base.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b906adfffe775f5b34b7705f5a594b14191009a9/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b906adfffe775f5b34b7705f5a594b14191009a9/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=b906adfffe775f5b34b7705f5a594b14191009a9", "patch": "@@ -479,11 +479,15 @@ fn trans_stmt<'a, 'tcx: 'a>(\n                         (ty::Ref(..), ty::Ref(..))\n                         | (ty::Ref(..), ty::RawPtr(..))\n                         | (ty::RawPtr(..), ty::Ref(..))\n-                        | (ty::RawPtr(..), ty::RawPtr(..)) => {\n+                        | (ty::RawPtr(..), ty::RawPtr(..))\n+                        | (ty::FnPtr(..), ty::RawPtr(..)) => {\n                             lval.write_cvalue(fx, operand.unchecked_cast_to(dest_layout));\n                         }\n-                        (ty::RawPtr(..), ty::Uint(_)) | (ty::FnPtr(..), ty::Uint(_))\n-                            if to_ty.sty == fx.tcx.types.usize.sty =>\n+                        (ty::RawPtr(..), ty::Uint(_))\n+                        | (ty::RawPtr(..), ty::Int(_))\n+                        | (ty::FnPtr(..), ty::Uint(_))\n+                            if to_ty.sty == fx.tcx.types.usize.sty\n+                                || to_ty.sty == fx.tcx.types.isize.sty =>\n                         {\n                             lval.write_cvalue(fx, operand.unchecked_cast_to(dest_layout));\n                         }\n@@ -655,8 +659,7 @@ fn codegen_array_len<'a, 'tcx: 'a>(\n ) -> Value {\n     match place.layout().ty.sty {\n         ty::Array(_elem_ty, len) => {\n-            let len = crate::constant::force_eval_const(fx, len)\n-                .unwrap_usize(fx.tcx) as i64;\n+            let len = crate::constant::force_eval_const(fx, len).unwrap_usize(fx.tcx) as i64;\n             fx.bcx.ins().iconst(fx.pointer_type, len)\n         }\n         ty::Slice(_elem_ty) => match place {\n@@ -1076,7 +1079,7 @@ pub fn trans_place<'a, 'tcx: 'a>(\n                         fx.bcx.ins().iadd_imm(len, -(offset as i64))\n                     };\n                     base.place_index(fx, index)\n-                },\n+                }\n                 ProjectionElem::Subslice { from, to } => unimpl!(\n                     \"projection subslice {:?} from {} to {}\",\n                     projection.base,"}]}