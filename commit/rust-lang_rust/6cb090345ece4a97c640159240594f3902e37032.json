{"sha": "6cb090345ece4a97c640159240594f3902e37032", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjYjA5MDM0NWVjZTRhOTdjNjQwMTU5MjQwNTk0ZjM5MDJlMzcwMzI=", "commit": {"author": {"name": "unexge", "email": "unexge@gmail.com", "date": "2020-08-05T10:25:26Z"}, "committer": {"name": "unexge", "email": "unexge@gmail.com", "date": "2020-08-05T10:25:26Z"}, "message": "Pattern match on slice elements instead of using `.first().unwrap()`", "tree": {"sha": "4903d26fb47e8cb2f45fc9b6b8e67db166685507", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4903d26fb47e8cb2f45fc9b6b8e67db166685507"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cb090345ece4a97c640159240594f3902e37032", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cb090345ece4a97c640159240594f3902e37032", "html_url": "https://github.com/rust-lang/rust/commit/6cb090345ece4a97c640159240594f3902e37032", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cb090345ece4a97c640159240594f3902e37032/comments", "author": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5214b4cdba2c4976cb1ca4724a008268cdaf3e61", "url": "https://api.github.com/repos/rust-lang/rust/commits/5214b4cdba2c4976cb1ca4724a008268cdaf3e61", "html_url": "https://github.com/rust-lang/rust/commit/5214b4cdba2c4976cb1ca4724a008268cdaf3e61"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "69f6b3674979d60bd1de8043b801d6e97e2091fd", "filename": "crates/ra_assists/src/handlers/expand_glob_import.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6cb090345ece4a97c640159240594f3902e37032/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cb090345ece4a97c640159240594f3902e37032/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs?ref=6cb090345ece4a97c640159240594f3902e37032", "patch": "@@ -147,17 +147,16 @@ fn replace_ast(\n     path: ast::Path,\n     used_names: Vec<Name>,\n ) {\n-    let replacement: Either<ast::UseTree, ast::UseTreeList> = if used_names.len() == 1 {\n-        Either::Left(ast::make::use_tree(\n-            ast::make::path_from_text(&format!(\"{}::{}\", path, used_names.first().unwrap())),\n+    let replacement: Either<ast::UseTree, ast::UseTreeList> = match used_names.as_slice() {\n+        [name] => Either::Left(ast::make::use_tree(\n+            ast::make::path_from_text(&format!(\"{}::{}\", path, name)),\n             None,\n             None,\n             false,\n-        ))\n-    } else {\n-        Either::Right(ast::make::use_tree_list(used_names.iter().map(|n| {\n+        )),\n+        names => Either::Right(ast::make::use_tree_list(names.iter().map(|n| {\n             ast::make::use_tree(ast::make::path_from_text(&n.to_string()), None, None, false)\n-        })))\n+        }))),\n     };\n \n     let mut replace_node = |replacement: Either<ast::UseTree, ast::UseTreeList>| {"}]}