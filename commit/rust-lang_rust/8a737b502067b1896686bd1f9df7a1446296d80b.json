{"sha": "8a737b502067b1896686bd1f9df7a1446296d80b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNzM3YjUwMjA2N2IxODk2Njg2YmQxZjlkZjdhMTQ0NjI5NmQ4MGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-31T07:22:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-31T07:22:21Z"}, "message": "auto merge of #8138 : Dretch/rust/posix-path-push, r=pcwalton\n\n\\ is allowed inside file names on linux, for example my system has a file at:\r\n\r\n`/run/udev/firmware-missing/intel-ucode\\x2f06-3a-09`", "tree": {"sha": "2aee9c637f58b8b18953ab31b3fb31156b1035c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2aee9c637f58b8b18953ab31b3fb31156b1035c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a737b502067b1896686bd1f9df7a1446296d80b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a737b502067b1896686bd1f9df7a1446296d80b", "html_url": "https://github.com/rust-lang/rust/commit/8a737b502067b1896686bd1f9df7a1446296d80b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a737b502067b1896686bd1f9df7a1446296d80b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fbd37d4bdabb60e20b6dada36ff23c96e90e482", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fbd37d4bdabb60e20b6dada36ff23c96e90e482", "html_url": "https://github.com/rust-lang/rust/commit/4fbd37d4bdabb60e20b6dada36ff23c96e90e482"}, {"sha": "de0092c48ec11a1da78bcb267fa057cf9519e683", "url": "https://api.github.com/repos/rust-lang/rust/commits/de0092c48ec11a1da78bcb267fa057cf9519e683", "html_url": "https://github.com/rust-lang/rust/commit/de0092c48ec11a1da78bcb267fa057cf9519e683"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "af6bfc16e540bf4f8633e8992e77871426bf1b47", "filename": "src/libstd/path.rs", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8a737b502067b1896686bd1f9df7a1446296d80b/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a737b502067b1896686bd1f9df7a1446296d80b/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=8a737b502067b1896686bd1f9df7a1446296d80b", "patch": "@@ -587,7 +587,7 @@ impl GenericPath for PosixPath {\n     }\n \n     fn with_filename(&self, f: &str) -> PosixPath {\n-        assert!(! f.iter().all(windows::is_sep));\n+        assert!(!f.iter().all(posix::is_sep));\n         self.dir_path().push(f)\n     }\n \n@@ -648,7 +648,7 @@ impl GenericPath for PosixPath {\n     fn push_many<S: Str>(&self, cs: &[S]) -> PosixPath {\n         let mut v = self.components.clone();\n         for cs.iter().advance |e| {\n-            for e.as_slice().split_iter(windows::is_sep).advance |s| {\n+            for e.as_slice().split_iter(posix::is_sep).advance |s| {\n                 if !s.is_empty() {\n                     v.push(s.to_owned())\n                 }\n@@ -662,7 +662,7 @@ impl GenericPath for PosixPath {\n \n     fn push(&self, s: &str) -> PosixPath {\n         let mut v = self.components.clone();\n-        for s.split_iter(windows::is_sep).advance |s| {\n+        for s.split_iter(posix::is_sep).advance |s| {\n             if !s.is_empty() {\n                 v.push(s.to_owned())\n             }\n@@ -1001,7 +1001,17 @@ pub fn normalize(components: &[~str]) -> ~[~str] {\n     cs\n }\n \n-// Various windows helpers, and tests for the impl.\n+// Various posix helpers.\n+pub mod posix {\n+\n+    #[inline]\n+    pub fn is_sep(u: char) -> bool {\n+        u == '/'\n+    }\n+\n+}\n+\n+// Various windows helpers.\n pub mod windows {\n     use libc;\n     use option::{None, Option, Some};\n@@ -1139,6 +1149,14 @@ mod tests {\n \n     }\n \n+    #[test]\n+    fn test_posix_push_with_backslash() {\n+        let a = PosixPath(\"/aaa/bbb\");\n+        let b = a.push(\"x\\\\y\"); // \\ is not a file separator for posix paths\n+        assert_eq!(a.components.len(), 2);\n+        assert_eq!(b.components.len(), 3);\n+    }\n+\n     #[test]\n     fn test_normalize() {\n         fn t(wp: &PosixPath, s: &str) {"}]}