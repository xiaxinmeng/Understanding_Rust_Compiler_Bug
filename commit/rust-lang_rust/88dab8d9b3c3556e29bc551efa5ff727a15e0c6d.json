{"sha": "88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "node_id": "C_kwDOAAsO6NoAKDg4ZGFiOGQ5YjNjMzU1NmUyOWJjNTUxZWZhNWZmNzI3YTE1ZTBjNmQ", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-10-03T02:57:47Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-10-03T22:08:02Z"}, "message": "Improve spans when splitting multi-char operator tokens for proc macros.", "tree": {"sha": "fa3874957e81eb54d56436d80266b39cae6421ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa3874957e81eb54d56436d80266b39cae6421ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "html_url": "https://github.com/rust-lang/rust/commit/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "177b3d2d8bd0405e11b5b740c9fb22a178213feb", "url": "https://api.github.com/repos/rust-lang/rust/commits/177b3d2d8bd0405e11b5b740c9fb22a178213feb", "html_url": "https://github.com/rust-lang/rust/commit/177b3d2d8bd0405e11b5b740c9fb22a178213feb"}], "stats": {"total": 146, "additions": 79, "deletions": 67}, "files": [{"sha": "17a348ec6baaec2d51c4065bc3040ede6d5943c8", "filename": "compiler/rustc_expand/src/proc_macro_server.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs?ref=88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "patch": "@@ -115,8 +115,20 @@ impl FromInternal<(TokenStream, &mut Rustc<'_, '_>)> for Vec<TokenTree<TokenStre\n             // before that get `joint = true`.\n             let mut op = |s: &str| {\n                 assert!(s.is_ascii());\n-                trees.extend(s.bytes().enumerate().map(|(idx, ch)| {\n-                    let is_final = idx == s.len() - 1;\n+                trees.extend(s.bytes().enumerate().map(|(i, ch)| {\n+                    let is_final = i == s.len() - 1;\n+                    // Split the token span into single chars. Unless the span\n+                    // is an unusual one, e.g. due to proc macro expansion. We\n+                    // determine this by assuming any span with a length that\n+                    // matches the operator length is a normal one, and any\n+                    // span with a different length is an unusual one.\n+                    let span = if (span.hi() - span.lo()).to_usize() == s.len() {\n+                        let lo = span.lo() + BytePos::from_usize(i);\n+                        let hi = lo + BytePos::from_usize(1);\n+                        span.with_lo(lo).with_hi(hi)\n+                    } else {\n+                        span\n+                    };\n                     TokenTree::Punct(Punct { ch, joint: if is_final { joint } else { true }, span })\n                 }));\n             };"}, {"sha": "e31d14c55963922d953d9ea85fd0f19a0609e850", "filename": "src/test/ui/lint/redundant-semicolon/redundant-semi-proc-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fredundant-semi-proc-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fredundant-semi-proc-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fredundant-semi-proc-macro.stderr?ref=88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "patch": "@@ -1,4 +1,4 @@\n-TokenStream [Ident { ident: \"fn\", span: #0 bytes(198..200) }, Ident { ident: \"span_preservation\", span: #0 bytes(201..218) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: #0 bytes(218..220) }, Group { delimiter: Brace, stream: TokenStream [Ident { ident: \"let\", span: #0 bytes(228..231) }, Ident { ident: \"tst\", span: #0 bytes(232..235) }, Punct { ch: '=', spacing: Alone, span: #0 bytes(236..237) }, Literal { kind: Integer, symbol: \"123\", suffix: None, span: #0 bytes(238..241) }, Punct { ch: ';', spacing: Joint, span: #0 bytes(241..242) }, Punct { ch: ';', spacing: Alone, span: #0 bytes(242..243) }, Ident { ident: \"match\", span: #0 bytes(289..294) }, Ident { ident: \"tst\", span: #0 bytes(295..298) }, Group { delimiter: Brace, stream: TokenStream [Literal { kind: Integer, symbol: \"123\", suffix: None, span: #0 bytes(483..486) }, Punct { ch: '=', spacing: Joint, span: #0 bytes(487..489) }, Punct { ch: '>', spacing: Alone, span: #0 bytes(487..489) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: #0 bytes(490..492) }, Punct { ch: ',', spacing: Alone, span: #0 bytes(492..493) }, Ident { ident: \"_\", span: #0 bytes(502..503) }, Punct { ch: '=', spacing: Joint, span: #0 bytes(504..506) }, Punct { ch: '>', spacing: Alone, span: #0 bytes(504..506) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: #0 bytes(507..509) }], span: #0 bytes(299..515) }, Punct { ch: ';', spacing: Joint, span: #0 bytes(515..516) }, Punct { ch: ';', spacing: Joint, span: #0 bytes(516..517) }, Punct { ch: ';', spacing: Alone, span: #0 bytes(517..518) }], span: #0 bytes(222..562) }]\n+TokenStream [Ident { ident: \"fn\", span: #0 bytes(198..200) }, Ident { ident: \"span_preservation\", span: #0 bytes(201..218) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: #0 bytes(218..220) }, Group { delimiter: Brace, stream: TokenStream [Ident { ident: \"let\", span: #0 bytes(228..231) }, Ident { ident: \"tst\", span: #0 bytes(232..235) }, Punct { ch: '=', spacing: Alone, span: #0 bytes(236..237) }, Literal { kind: Integer, symbol: \"123\", suffix: None, span: #0 bytes(238..241) }, Punct { ch: ';', spacing: Joint, span: #0 bytes(241..242) }, Punct { ch: ';', spacing: Alone, span: #0 bytes(242..243) }, Ident { ident: \"match\", span: #0 bytes(289..294) }, Ident { ident: \"tst\", span: #0 bytes(295..298) }, Group { delimiter: Brace, stream: TokenStream [Literal { kind: Integer, symbol: \"123\", suffix: None, span: #0 bytes(483..486) }, Punct { ch: '=', spacing: Joint, span: #0 bytes(487..488) }, Punct { ch: '>', spacing: Alone, span: #0 bytes(488..489) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: #0 bytes(490..492) }, Punct { ch: ',', spacing: Alone, span: #0 bytes(492..493) }, Ident { ident: \"_\", span: #0 bytes(502..503) }, Punct { ch: '=', spacing: Joint, span: #0 bytes(504..505) }, Punct { ch: '>', spacing: Alone, span: #0 bytes(505..506) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: #0 bytes(507..509) }], span: #0 bytes(299..515) }, Punct { ch: ';', spacing: Joint, span: #0 bytes(515..516) }, Punct { ch: ';', spacing: Joint, span: #0 bytes(516..517) }, Punct { ch: ';', spacing: Alone, span: #0 bytes(517..518) }], span: #0 bytes(222..562) }]\n error: unnecessary trailing semicolon\n   --> $DIR/redundant-semi-proc-macro.rs:9:19\n    |"}, {"sha": "b12eb587fc790354dcbdc87fe64262613613d5b6", "filename": "src/test/ui/proc-macro/attr-complex-fn.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fattr-complex-fn.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fattr-complex-fn.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattr-complex-fn.stdout?ref=88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "patch": "@@ -53,12 +53,12 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Punct {\n         ch: '>',\n         spacing: Joint,\n-        span: $DIR/attr-complex-fn.rs:19:36: 19:38 (#0),\n+        span: $DIR/attr-complex-fn.rs:19:36: 19:37 (#0),\n     },\n     Punct {\n         ch: '>',\n         spacing: Joint,\n-        span: $DIR/attr-complex-fn.rs:19:36: 19:38 (#0),\n+        span: $DIR/attr-complex-fn.rs:19:37: 19:38 (#0),\n     },\n     Punct {\n         ch: '>',"}, {"sha": "b88fbd3e89776a169017725e842e610218350678", "filename": "src/test/ui/proc-macro/capture-macro-rules-invoke.stdout", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fcapture-macro-rules-invoke.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fcapture-macro-rules-invoke.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fcapture-macro-rules-invoke.stdout?ref=88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "patch": "@@ -177,12 +177,12 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/capture-macro-rules-invoke.rs:45:16: 45:18 (#0),\n+                span: $DIR/capture-macro-rules-invoke.rs:45:16: 45:17 (#0),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/capture-macro-rules-invoke.rs:45:16: 45:18 (#0),\n+                span: $DIR/capture-macro-rules-invoke.rs:45:17: 45:18 (#0),\n             },\n             Ident {\n                 ident: \"option\",\n@@ -191,12 +191,12 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/capture-macro-rules-invoke.rs:45:24: 45:26 (#0),\n+                span: $DIR/capture-macro-rules-invoke.rs:45:24: 45:25 (#0),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/capture-macro-rules-invoke.rs:45:24: 45:26 (#0),\n+                span: $DIR/capture-macro-rules-invoke.rs:45:25: 45:26 (#0),\n             },\n             Ident {\n                 ident: \"Option\",\n@@ -231,12 +231,12 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n                     Punct {\n                         ch: ':',\n                         spacing: Joint,\n-                        span: $DIR/capture-macro-rules-invoke.rs:46:24: 46:26 (#0),\n+                        span: $DIR/capture-macro-rules-invoke.rs:46:24: 46:25 (#0),\n                     },\n                     Punct {\n                         ch: ':',\n                         spacing: Alone,\n-                        span: $DIR/capture-macro-rules-invoke.rs:46:24: 46:26 (#0),\n+                        span: $DIR/capture-macro-rules-invoke.rs:46:25: 46:26 (#0),\n                     },\n                     Ident {\n                         ident: \"path\","}, {"sha": "fa65cbbf1eae50cff47d92651f81221dd2a368f3", "filename": "src/test/ui/proc-macro/debug/dump-debug-span-debug.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fdebug%2Fdump-debug-span-debug.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fdebug%2Fdump-debug-span-debug.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdebug%2Fdump-debug-span-debug.stderr?ref=88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "patch": "@@ -1,4 +1,4 @@\n-TokenStream [Ident { ident: \"ident\", span: $DIR/dump-debug-span-debug.rs:10:5: 10:10 (#0) }, Ident { ident: \"r#ident\", span: $DIR/dump-debug-span-debug.rs:11:5: 11:12 (#0) }, Punct { ch: ',', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:12:5: 12:6 (#0) }, Punct { ch: '&', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:13:5: 13:7 (#0) }, Punct { ch: '&', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:13:5: 13:7 (#0) }, Punct { ch: '|', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:14:5: 14:7 (#0) }, Punct { ch: '|', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:14:5: 14:7 (#0) }, Punct { ch: '>', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:14:7: 14:8 (#0) }, Punct { ch: '|', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:15:5: 15:7 (#0) }, Punct { ch: '|', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:15:5: 15:7 (#0) }, Punct { ch: '<', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:15:7: 15:9 (#0) }, Punct { ch: '<', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:15:7: 15:9 (#0) }, Punct { ch: '.', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:16:5: 16:8 (#0) }, Punct { ch: '.', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:16:5: 16:8 (#0) }, Punct { ch: '=', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:16:5: 16:8 (#0) }, Punct { ch: '<', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:17:5: 17:8 (#0) }, Punct { ch: '<', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:17:5: 17:8 (#0) }, Punct { ch: '=', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:17:5: 17:8 (#0) }, Punct { ch: '!', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:17:8: 17:9 (#0) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/dump-debug-span-debug.rs:18:5: 18:7 (#0) }, Group { delimiter: Bracket, stream: TokenStream [Ident { ident: \"_\", span: $DIR/dump-debug-span-debug.rs:19:6: 19:7 (#0) }], span: $DIR/dump-debug-span-debug.rs:19:5: 19:8 (#0) }, Literal { kind: Integer, symbol: \"0\", suffix: None, span: $DIR/dump-debug-span-debug.rs:22:5: 22:6 (#0) }, Literal { kind: Float, symbol: \"1.0\", suffix: None, span: $DIR/dump-debug-span-debug.rs:23:5: 23:8 (#0) }, Literal { kind: Str, symbol: \"S\", suffix: None, span: $DIR/dump-debug-span-debug.rs:24:5: 24:8 (#0) }, Literal { kind: ByteStr, symbol: \"B\", suffix: None, span: $DIR/dump-debug-span-debug.rs:25:5: 25:9 (#0) }, Literal { kind: StrRaw(0), symbol: \"R\", suffix: None, span: $DIR/dump-debug-span-debug.rs:26:5: 26:9 (#0) }, Literal { kind: StrRaw(2), symbol: \"R\", suffix: None, span: $DIR/dump-debug-span-debug.rs:27:5: 27:13 (#0) }, Literal { kind: ByteStrRaw(0), symbol: \"BR\", suffix: None, span: $DIR/dump-debug-span-debug.rs:28:5: 28:11 (#0) }, Literal { kind: ByteStrRaw(2), symbol: \"BR\", suffix: None, span: $DIR/dump-debug-span-debug.rs:29:5: 29:15 (#0) }, Literal { kind: Char, symbol: \"C\", suffix: None, span: $DIR/dump-debug-span-debug.rs:30:5: 30:8 (#0) }, Literal { kind: Byte, symbol: \"B\", suffix: None, span: $DIR/dump-debug-span-debug.rs:31:5: 31:9 (#0) }, Literal { kind: Integer, symbol: \"0\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:34:5: 34:7 (#0) }, Literal { kind: Float, symbol: \"1.0\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:35:5: 35:9 (#0) }, Literal { kind: Str, symbol: \"S\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:36:5: 36:9 (#0) }, Literal { kind: ByteStr, symbol: \"B\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:37:5: 37:10 (#0) }, Literal { kind: StrRaw(0), symbol: \"R\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:38:5: 38:10 (#0) }, Literal { kind: StrRaw(2), symbol: \"R\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:39:5: 39:14 (#0) }, Literal { kind: ByteStrRaw(0), symbol: \"BR\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:40:5: 40:12 (#0) }, Literal { kind: ByteStrRaw(2), symbol: \"BR\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:41:5: 41:16 (#0) }, Literal { kind: Char, symbol: \"C\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:42:5: 42:9 (#0) }, Literal { kind: Byte, symbol: \"B\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:43:5: 43:10 (#0) }]\n+TokenStream [Ident { ident: \"ident\", span: $DIR/dump-debug-span-debug.rs:10:5: 10:10 (#0) }, Ident { ident: \"r#ident\", span: $DIR/dump-debug-span-debug.rs:11:5: 11:12 (#0) }, Punct { ch: ',', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:12:5: 12:6 (#0) }, Punct { ch: '&', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:13:5: 13:6 (#0) }, Punct { ch: '&', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:13:6: 13:7 (#0) }, Punct { ch: '|', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:14:5: 14:6 (#0) }, Punct { ch: '|', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:14:6: 14:7 (#0) }, Punct { ch: '>', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:14:7: 14:8 (#0) }, Punct { ch: '|', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:15:5: 15:6 (#0) }, Punct { ch: '|', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:15:6: 15:7 (#0) }, Punct { ch: '<', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:15:7: 15:8 (#0) }, Punct { ch: '<', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:15:8: 15:9 (#0) }, Punct { ch: '.', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:16:5: 16:6 (#0) }, Punct { ch: '.', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:16:6: 16:7 (#0) }, Punct { ch: '=', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:16:7: 16:8 (#0) }, Punct { ch: '<', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:17:5: 17:6 (#0) }, Punct { ch: '<', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:17:6: 17:7 (#0) }, Punct { ch: '=', spacing: Joint, span: $DIR/dump-debug-span-debug.rs:17:7: 17:8 (#0) }, Punct { ch: '!', spacing: Alone, span: $DIR/dump-debug-span-debug.rs:17:8: 17:9 (#0) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/dump-debug-span-debug.rs:18:5: 18:7 (#0) }, Group { delimiter: Bracket, stream: TokenStream [Ident { ident: \"_\", span: $DIR/dump-debug-span-debug.rs:19:6: 19:7 (#0) }], span: $DIR/dump-debug-span-debug.rs:19:5: 19:8 (#0) }, Literal { kind: Integer, symbol: \"0\", suffix: None, span: $DIR/dump-debug-span-debug.rs:22:5: 22:6 (#0) }, Literal { kind: Float, symbol: \"1.0\", suffix: None, span: $DIR/dump-debug-span-debug.rs:23:5: 23:8 (#0) }, Literal { kind: Str, symbol: \"S\", suffix: None, span: $DIR/dump-debug-span-debug.rs:24:5: 24:8 (#0) }, Literal { kind: ByteStr, symbol: \"B\", suffix: None, span: $DIR/dump-debug-span-debug.rs:25:5: 25:9 (#0) }, Literal { kind: StrRaw(0), symbol: \"R\", suffix: None, span: $DIR/dump-debug-span-debug.rs:26:5: 26:9 (#0) }, Literal { kind: StrRaw(2), symbol: \"R\", suffix: None, span: $DIR/dump-debug-span-debug.rs:27:5: 27:13 (#0) }, Literal { kind: ByteStrRaw(0), symbol: \"BR\", suffix: None, span: $DIR/dump-debug-span-debug.rs:28:5: 28:11 (#0) }, Literal { kind: ByteStrRaw(2), symbol: \"BR\", suffix: None, span: $DIR/dump-debug-span-debug.rs:29:5: 29:15 (#0) }, Literal { kind: Char, symbol: \"C\", suffix: None, span: $DIR/dump-debug-span-debug.rs:30:5: 30:8 (#0) }, Literal { kind: Byte, symbol: \"B\", suffix: None, span: $DIR/dump-debug-span-debug.rs:31:5: 31:9 (#0) }, Literal { kind: Integer, symbol: \"0\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:34:5: 34:7 (#0) }, Literal { kind: Float, symbol: \"1.0\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:35:5: 35:9 (#0) }, Literal { kind: Str, symbol: \"S\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:36:5: 36:9 (#0) }, Literal { kind: ByteStr, symbol: \"B\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:37:5: 37:10 (#0) }, Literal { kind: StrRaw(0), symbol: \"R\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:38:5: 38:10 (#0) }, Literal { kind: StrRaw(2), symbol: \"R\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:39:5: 39:14 (#0) }, Literal { kind: ByteStrRaw(0), symbol: \"BR\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:40:5: 40:12 (#0) }, Literal { kind: ByteStrRaw(2), symbol: \"BR\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:41:5: 41:16 (#0) }, Literal { kind: Char, symbol: \"C\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:42:5: 42:9 (#0) }, Literal { kind: Byte, symbol: \"B\", suffix: Some(\"q\"), span: $DIR/dump-debug-span-debug.rs:43:5: 43:10 (#0) }]\n TokenStream [\n     Ident {\n         ident: \"ident\",\n@@ -16,22 +16,22 @@ TokenStream [\n     Punct {\n         ch: '&',\n         spacing: Joint,\n-        span: $DIR/dump-debug-span-debug.rs:13:5: 13:7 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:13:5: 13:6 (#0),\n     },\n     Punct {\n         ch: '&',\n         spacing: Alone,\n-        span: $DIR/dump-debug-span-debug.rs:13:5: 13:7 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:13:6: 13:7 (#0),\n     },\n     Punct {\n         ch: '|',\n         spacing: Joint,\n-        span: $DIR/dump-debug-span-debug.rs:14:5: 14:7 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:14:5: 14:6 (#0),\n     },\n     Punct {\n         ch: '|',\n         spacing: Joint,\n-        span: $DIR/dump-debug-span-debug.rs:14:5: 14:7 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:14:6: 14:7 (#0),\n     },\n     Punct {\n         ch: '>',\n@@ -41,52 +41,52 @@ TokenStream [\n     Punct {\n         ch: '|',\n         spacing: Joint,\n-        span: $DIR/dump-debug-span-debug.rs:15:5: 15:7 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:15:5: 15:6 (#0),\n     },\n     Punct {\n         ch: '|',\n         spacing: Joint,\n-        span: $DIR/dump-debug-span-debug.rs:15:5: 15:7 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:15:6: 15:7 (#0),\n     },\n     Punct {\n         ch: '<',\n         spacing: Joint,\n-        span: $DIR/dump-debug-span-debug.rs:15:7: 15:9 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:15:7: 15:8 (#0),\n     },\n     Punct {\n         ch: '<',\n         spacing: Alone,\n-        span: $DIR/dump-debug-span-debug.rs:15:7: 15:9 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:15:8: 15:9 (#0),\n     },\n     Punct {\n         ch: '.',\n         spacing: Joint,\n-        span: $DIR/dump-debug-span-debug.rs:16:5: 16:8 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:16:5: 16:6 (#0),\n     },\n     Punct {\n         ch: '.',\n         spacing: Joint,\n-        span: $DIR/dump-debug-span-debug.rs:16:5: 16:8 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:16:6: 16:7 (#0),\n     },\n     Punct {\n         ch: '=',\n         spacing: Alone,\n-        span: $DIR/dump-debug-span-debug.rs:16:5: 16:8 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:16:7: 16:8 (#0),\n     },\n     Punct {\n         ch: '<',\n         spacing: Joint,\n-        span: $DIR/dump-debug-span-debug.rs:17:5: 17:8 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:17:5: 17:6 (#0),\n     },\n     Punct {\n         ch: '<',\n         spacing: Joint,\n-        span: $DIR/dump-debug-span-debug.rs:17:5: 17:8 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:17:6: 17:7 (#0),\n     },\n     Punct {\n         ch: '=',\n         spacing: Joint,\n-        span: $DIR/dump-debug-span-debug.rs:17:5: 17:8 (#0),\n+        span: $DIR/dump-debug-span-debug.rs:17:7: 17:8 (#0),\n     },\n     Punct {\n         ch: '!',"}, {"sha": "db422b6012aea611f6892edf6915bc40b16270ef", "filename": "src/test/ui/proc-macro/debug/dump-debug.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fdebug%2Fdump-debug.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fdebug%2Fdump-debug.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdebug%2Fdump-debug.stderr?ref=88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "patch": "@@ -1,4 +1,4 @@\n-TokenStream [Ident { ident: \"ident\", span: #0 bytes(130..135) }, Ident { ident: \"r#ident\", span: #0 bytes(151..158) }, Punct { ch: ',', spacing: Alone, span: #0 bytes(176..177) }, Punct { ch: '=', spacing: Joint, span: #0 bytes(203..205) }, Punct { ch: '=', spacing: Joint, span: #0 bytes(203..205) }, Punct { ch: '>', spacing: Alone, span: #0 bytes(205..206) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: #0 bytes(230..232) }, Group { delimiter: Bracket, stream: TokenStream [Ident { ident: \"_\", span: #0 bytes(258..259) }], span: #0 bytes(257..260) }, Literal { kind: Integer, symbol: \"0\", suffix: None, span: #0 bytes(315..316) }, Literal { kind: Float, symbol: \"1.0\", suffix: None, span: #0 bytes(321..324) }, Literal { kind: Str, symbol: \"S\", suffix: None, span: #0 bytes(329..332) }, Literal { kind: ByteStr, symbol: \"B\", suffix: None, span: #0 bytes(337..341) }, Literal { kind: StrRaw(0), symbol: \"R\", suffix: None, span: #0 bytes(346..350) }, Literal { kind: StrRaw(2), symbol: \"R\", suffix: None, span: #0 bytes(355..363) }, Literal { kind: ByteStrRaw(0), symbol: \"BR\", suffix: None, span: #0 bytes(368..374) }, Literal { kind: ByteStrRaw(2), symbol: \"BR\", suffix: None, span: #0 bytes(379..389) }, Literal { kind: Char, symbol: \"C\", suffix: None, span: #0 bytes(394..397) }, Literal { kind: Byte, symbol: \"B\", suffix: None, span: #0 bytes(402..406) }, Literal { kind: Integer, symbol: \"0\", suffix: Some(\"q\"), span: #0 bytes(437..439) }, Literal { kind: Float, symbol: \"1.0\", suffix: Some(\"q\"), span: #0 bytes(444..448) }, Literal { kind: Str, symbol: \"S\", suffix: Some(\"q\"), span: #0 bytes(453..457) }, Literal { kind: ByteStr, symbol: \"B\", suffix: Some(\"q\"), span: #0 bytes(462..467) }, Literal { kind: StrRaw(0), symbol: \"R\", suffix: Some(\"q\"), span: #0 bytes(472..477) }, Literal { kind: StrRaw(2), symbol: \"R\", suffix: Some(\"q\"), span: #0 bytes(482..491) }, Literal { kind: ByteStrRaw(0), symbol: \"BR\", suffix: Some(\"q\"), span: #0 bytes(496..503) }, Literal { kind: ByteStrRaw(2), symbol: \"BR\", suffix: Some(\"q\"), span: #0 bytes(508..519) }, Literal { kind: Char, symbol: \"C\", suffix: Some(\"q\"), span: #0 bytes(524..528) }, Literal { kind: Byte, symbol: \"B\", suffix: Some(\"q\"), span: #0 bytes(533..538) }]\n+TokenStream [Ident { ident: \"ident\", span: #0 bytes(130..135) }, Ident { ident: \"r#ident\", span: #0 bytes(151..158) }, Punct { ch: ',', spacing: Alone, span: #0 bytes(176..177) }, Punct { ch: '=', spacing: Joint, span: #0 bytes(203..204) }, Punct { ch: '=', spacing: Joint, span: #0 bytes(204..205) }, Punct { ch: '>', spacing: Alone, span: #0 bytes(205..206) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: #0 bytes(230..232) }, Group { delimiter: Bracket, stream: TokenStream [Ident { ident: \"_\", span: #0 bytes(258..259) }], span: #0 bytes(257..260) }, Literal { kind: Integer, symbol: \"0\", suffix: None, span: #0 bytes(315..316) }, Literal { kind: Float, symbol: \"1.0\", suffix: None, span: #0 bytes(321..324) }, Literal { kind: Str, symbol: \"S\", suffix: None, span: #0 bytes(329..332) }, Literal { kind: ByteStr, symbol: \"B\", suffix: None, span: #0 bytes(337..341) }, Literal { kind: StrRaw(0), symbol: \"R\", suffix: None, span: #0 bytes(346..350) }, Literal { kind: StrRaw(2), symbol: \"R\", suffix: None, span: #0 bytes(355..363) }, Literal { kind: ByteStrRaw(0), symbol: \"BR\", suffix: None, span: #0 bytes(368..374) }, Literal { kind: ByteStrRaw(2), symbol: \"BR\", suffix: None, span: #0 bytes(379..389) }, Literal { kind: Char, symbol: \"C\", suffix: None, span: #0 bytes(394..397) }, Literal { kind: Byte, symbol: \"B\", suffix: None, span: #0 bytes(402..406) }, Literal { kind: Integer, symbol: \"0\", suffix: Some(\"q\"), span: #0 bytes(437..439) }, Literal { kind: Float, symbol: \"1.0\", suffix: Some(\"q\"), span: #0 bytes(444..448) }, Literal { kind: Str, symbol: \"S\", suffix: Some(\"q\"), span: #0 bytes(453..457) }, Literal { kind: ByteStr, symbol: \"B\", suffix: Some(\"q\"), span: #0 bytes(462..467) }, Literal { kind: StrRaw(0), symbol: \"R\", suffix: Some(\"q\"), span: #0 bytes(472..477) }, Literal { kind: StrRaw(2), symbol: \"R\", suffix: Some(\"q\"), span: #0 bytes(482..491) }, Literal { kind: ByteStrRaw(0), symbol: \"BR\", suffix: Some(\"q\"), span: #0 bytes(496..503) }, Literal { kind: ByteStrRaw(2), symbol: \"BR\", suffix: Some(\"q\"), span: #0 bytes(508..519) }, Literal { kind: Char, symbol: \"C\", suffix: Some(\"q\"), span: #0 bytes(524..528) }, Literal { kind: Byte, symbol: \"B\", suffix: Some(\"q\"), span: #0 bytes(533..538) }]\n TokenStream [\n     Ident {\n         ident: \"ident\",\n@@ -16,12 +16,12 @@ TokenStream [\n     Punct {\n         ch: '=',\n         spacing: Joint,\n-        span: #0 bytes(203..205),\n+        span: #0 bytes(203..204),\n     },\n     Punct {\n         ch: '=',\n         spacing: Joint,\n-        span: #0 bytes(203..205),\n+        span: #0 bytes(204..205),\n     },\n     Punct {\n         ch: '>',"}, {"sha": "2622c005d937f87ead8cf051ade37a2449159e21", "filename": "src/test/ui/proc-macro/dollar-crate-issue-57089.stdout", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-57089.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-57089.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-57089.stdout?ref=88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "patch": "@@ -18,12 +18,12 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/dollar-crate-issue-57089.rs:17:28: 17:30 (#4),\n+                span: $DIR/dollar-crate-issue-57089.rs:17:28: 17:29 (#4),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/dollar-crate-issue-57089.rs:17:28: 17:30 (#4),\n+                span: $DIR/dollar-crate-issue-57089.rs:17:29: 17:30 (#4),\n             },\n             Ident {\n                 ident: \"S\",\n@@ -58,12 +58,12 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/dollar-crate-issue-57089.rs:21:24: 21:26 (#4),\n+                span: $DIR/dollar-crate-issue-57089.rs:21:24: 21:25 (#4),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/dollar-crate-issue-57089.rs:21:24: 21:26 (#4),\n+                span: $DIR/dollar-crate-issue-57089.rs:21:25: 21:26 (#4),\n             },\n             Ident {\n                 ident: \"S\","}, {"sha": "a91908239c3f83d652de238dd7d73f1423ca1855", "filename": "src/test/ui/proc-macro/dollar-crate-issue-62325.stdout", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-62325.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-62325.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-62325.stdout?ref=88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "patch": "@@ -30,12 +30,12 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n                     Punct {\n                         ch: ':',\n                         spacing: Joint,\n-                        span: $DIR/dollar-crate-issue-62325.rs:19:30: 19:32 (#4),\n+                        span: $DIR/dollar-crate-issue-62325.rs:19:30: 19:31 (#4),\n                     },\n                     Punct {\n                         ch: ':',\n                         spacing: Alone,\n-                        span: $DIR/dollar-crate-issue-62325.rs:19:30: 19:32 (#4),\n+                        span: $DIR/dollar-crate-issue-62325.rs:19:31: 19:32 (#4),\n                     },\n                     Ident {\n                         ident: \"S\",\n@@ -85,12 +85,12 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n                     Punct {\n                         ch: ':',\n                         spacing: Joint,\n-                        span: $DIR/auxiliary/dollar-crate-external.rs:21:30: 21:32 (#12),\n+                        span: $DIR/auxiliary/dollar-crate-external.rs:21:30: 21:31 (#12),\n                     },\n                     Punct {\n                         ch: ':',\n                         spacing: Alone,\n-                        span: $DIR/auxiliary/dollar-crate-external.rs:21:30: 21:32 (#12),\n+                        span: $DIR/auxiliary/dollar-crate-external.rs:21:31: 21:32 (#12),\n                     },\n                     Ident {\n                         ident: \"S\","}, {"sha": "4e169d47e1ab2276c06ffb633631bf92affbcb02", "filename": "src/test/ui/proc-macro/dollar-crate.stdout", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate.stdout?ref=88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "patch": "@@ -18,12 +18,12 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/dollar-crate.rs:20:32: 20:34 (#4),\n+                span: $DIR/dollar-crate.rs:20:32: 20:33 (#4),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/dollar-crate.rs:20:32: 20:34 (#4),\n+                span: $DIR/dollar-crate.rs:20:33: 20:34 (#4),\n             },\n             Ident {\n                 ident: \"S\",\n@@ -58,12 +58,12 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/dollar-crate.rs:24:28: 24:30 (#4),\n+                span: $DIR/dollar-crate.rs:24:28: 24:29 (#4),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/dollar-crate.rs:24:28: 24:30 (#4),\n+                span: $DIR/dollar-crate.rs:24:29: 24:30 (#4),\n             },\n             Ident {\n                 ident: \"S\",\n@@ -98,12 +98,12 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/dollar-crate.rs:27:28: 27:30 (#4),\n+                span: $DIR/dollar-crate.rs:27:28: 27:29 (#4),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/dollar-crate.rs:27:28: 27:30 (#4),\n+                span: $DIR/dollar-crate.rs:27:29: 27:30 (#4),\n             },\n             Ident {\n                 ident: \"S\",\n@@ -138,12 +138,12 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/auxiliary/dollar-crate-external.rs:7:28: 7:30 (#15),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:7:28: 7:29 (#15),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/auxiliary/dollar-crate-external.rs:7:28: 7:30 (#15),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:7:29: 7:30 (#15),\n             },\n             Ident {\n                 ident: \"S\",\n@@ -178,12 +178,12 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/auxiliary/dollar-crate-external.rs:11:24: 11:26 (#15),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:11:24: 11:25 (#15),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/auxiliary/dollar-crate-external.rs:11:24: 11:26 (#15),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:11:25: 11:26 (#15),\n             },\n             Ident {\n                 ident: \"S\",\n@@ -218,12 +218,12 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n             Punct {\n                 ch: ':',\n                 spacing: Joint,\n-                span: $DIR/auxiliary/dollar-crate-external.rs:14:24: 14:26 (#15),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:14:24: 14:25 (#15),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/auxiliary/dollar-crate-external.rs:14:24: 14:26 (#15),\n+                span: $DIR/auxiliary/dollar-crate-external.rs:14:25: 14:26 (#15),\n             },\n             Ident {\n                 ident: \"S\","}, {"sha": "ee8adf0b4a970572f3856ae14382b824327598f5", "filename": "src/test/ui/proc-macro/inner-attrs.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.stdout?ref=88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "patch": "@@ -627,12 +627,12 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n                                     Punct {\n                                         ch: '=',\n                                         spacing: Joint,\n-                                        span: $DIR/inner-attrs.rs:39:15: 39:17 (#0),\n+                                        span: $DIR/inner-attrs.rs:39:15: 39:16 (#0),\n                                     },\n                                     Punct {\n                                         ch: '>',\n                                         spacing: Alone,\n-                                        span: $DIR/inner-attrs.rs:39:15: 39:17 (#0),\n+                                        span: $DIR/inner-attrs.rs:39:16: 39:17 (#0),\n                                     },\n                                     Group {\n                                         delimiter: Brace,"}, {"sha": "83afd0d3eaec3f9d8015b6857d509457f52bf6e5", "filename": "src/test/ui/proc-macro/issue-75930-derive-cfg.stdout", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fissue-75930-derive-cfg.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fissue-75930-derive-cfg.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-75930-derive-cfg.stdout?ref=88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "patch": "@@ -489,12 +489,12 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n                                     Punct {\n                                         ch: '=',\n                                         spacing: Joint,\n-                                        span: $DIR/issue-75930-derive-cfg.rs:33:32: 33:34 (#0),\n+                                        span: $DIR/issue-75930-derive-cfg.rs:33:32: 33:33 (#0),\n                                     },\n                                     Punct {\n                                         ch: '>',\n                                         spacing: Alone,\n-                                        span: $DIR/issue-75930-derive-cfg.rs:33:32: 33:34 (#0),\n+                                        span: $DIR/issue-75930-derive-cfg.rs:33:33: 33:34 (#0),\n                                     },\n                                     Group {\n                                         delimiter: Brace,\n@@ -567,12 +567,12 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n                                     Punct {\n                                         ch: '=',\n                                         spacing: Joint,\n-                                        span: $DIR/issue-75930-derive-cfg.rs:34:60: 34:62 (#0),\n+                                        span: $DIR/issue-75930-derive-cfg.rs:34:60: 34:61 (#0),\n                                     },\n                                     Punct {\n                                         ch: '>',\n                                         spacing: Alone,\n-                                        span: $DIR/issue-75930-derive-cfg.rs:34:60: 34:62 (#0),\n+                                        span: $DIR/issue-75930-derive-cfg.rs:34:61: 34:62 (#0),\n                                     },\n                                     Group {\n                                         delimiter: Brace,\n@@ -591,12 +591,12 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n                                     Punct {\n                                         ch: '=',\n                                         spacing: Joint,\n-                                        span: $DIR/issue-75930-derive-cfg.rs:35:15: 35:17 (#0),\n+                                        span: $DIR/issue-75930-derive-cfg.rs:35:15: 35:16 (#0),\n                                     },\n                                     Punct {\n                                         ch: '>',\n                                         spacing: Alone,\n-                                        span: $DIR/issue-75930-derive-cfg.rs:35:15: 35:17 (#0),\n+                                        span: $DIR/issue-75930-derive-cfg.rs:35:16: 35:17 (#0),\n                                     },\n                                     Group {\n                                         delimiter: Brace,\n@@ -1519,12 +1519,12 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n                                     Punct {\n                                         ch: '=',\n                                         spacing: Joint,\n-                                        span: $DIR/issue-75930-derive-cfg.rs:34:60: 34:62 (#0),\n+                                        span: $DIR/issue-75930-derive-cfg.rs:34:60: 34:61 (#0),\n                                     },\n                                     Punct {\n                                         ch: '>',\n                                         spacing: Alone,\n-                                        span: $DIR/issue-75930-derive-cfg.rs:34:60: 34:62 (#0),\n+                                        span: $DIR/issue-75930-derive-cfg.rs:34:61: 34:62 (#0),\n                                     },\n                                     Group {\n                                         delimiter: Brace,\n@@ -1543,12 +1543,12 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n                                     Punct {\n                                         ch: '=',\n                                         spacing: Joint,\n-                                        span: $DIR/issue-75930-derive-cfg.rs:35:15: 35:17 (#0),\n+                                        span: $DIR/issue-75930-derive-cfg.rs:35:15: 35:16 (#0),\n                                     },\n                                     Punct {\n                                         ch: '>',\n                                         spacing: Alone,\n-                                        span: $DIR/issue-75930-derive-cfg.rs:35:15: 35:17 (#0),\n+                                        span: $DIR/issue-75930-derive-cfg.rs:35:16: 35:17 (#0),\n                                     },\n                                     Group {\n                                         delimiter: Brace,"}, {"sha": "09eb33f7e31a14b6826af9aa7ac5658fcd5c5a20", "filename": "src/test/ui/proc-macro/issue-76182-leading-vert-pat.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fissue-76182-leading-vert-pat.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fissue-76182-leading-vert-pat.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-76182-leading-vert-pat.stdout?ref=88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "patch": "@@ -41,12 +41,12 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n                     Punct {\n                         ch: '=',\n                         spacing: Joint,\n-                        span: $DIR/issue-76182-leading-vert-pat.rs:15:21: 15:23 (#0),\n+                        span: $DIR/issue-76182-leading-vert-pat.rs:15:21: 15:22 (#0),\n                     },\n                     Punct {\n                         ch: '>',\n                         spacing: Alone,\n-                        span: $DIR/issue-76182-leading-vert-pat.rs:15:21: 15:23 (#0),\n+                        span: $DIR/issue-76182-leading-vert-pat.rs:15:22: 15:23 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,"}, {"sha": "2494af1208f1485848b94c22c9a8dd7f45107155", "filename": "src/test/ui/proc-macro/meta-macro-hygiene.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.stdout?ref=88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "patch": "@@ -1,5 +1,5 @@\n Def site: $DIR/auxiliary/make-macro.rs:7:9: 7:56 (#5)\n-Input: TokenStream [Ident { ident: \"$crate\", span: $DIR/meta-macro-hygiene.rs:24:37: 24:43 (#4) }, Punct { ch: ':', spacing: Joint, span: $DIR/meta-macro-hygiene.rs:24:43: 24:45 (#4) }, Punct { ch: ':', spacing: Alone, span: $DIR/meta-macro-hygiene.rs:24:43: 24:45 (#4) }, Ident { ident: \"dummy\", span: $DIR/meta-macro-hygiene.rs:24:45: 24:50 (#4) }, Punct { ch: '!', spacing: Alone, span: $DIR/meta-macro-hygiene.rs:24:50: 24:51 (#4) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/meta-macro-hygiene.rs:24:51: 24:53 (#4) }]\n+Input: TokenStream [Ident { ident: \"$crate\", span: $DIR/meta-macro-hygiene.rs:24:37: 24:43 (#4) }, Punct { ch: ':', spacing: Joint, span: $DIR/meta-macro-hygiene.rs:24:43: 24:44 (#4) }, Punct { ch: ':', spacing: Alone, span: $DIR/meta-macro-hygiene.rs:24:44: 24:45 (#4) }, Ident { ident: \"dummy\", span: $DIR/meta-macro-hygiene.rs:24:45: 24:50 (#4) }, Punct { ch: '!', spacing: Alone, span: $DIR/meta-macro-hygiene.rs:24:50: 24:51 (#4) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/meta-macro-hygiene.rs:24:51: 24:53 (#4) }]\n Respanned: TokenStream [Ident { ident: \"$crate\", span: $DIR/auxiliary/make-macro.rs:7:9: 7:56 (#5) }, Punct { ch: ':', spacing: Joint, span: $DIR/auxiliary/make-macro.rs:7:9: 7:56 (#5) }, Punct { ch: ':', spacing: Alone, span: $DIR/auxiliary/make-macro.rs:7:9: 7:56 (#5) }, Ident { ident: \"dummy\", span: $DIR/auxiliary/make-macro.rs:7:9: 7:56 (#5) }, Punct { ch: '!', spacing: Alone, span: $DIR/auxiliary/make-macro.rs:7:9: 7:56 (#5) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/auxiliary/make-macro.rs:7:9: 7:56 (#5) }]\n #![feature /* 0#0 */(prelude_import)]\n // aux-build:make-macro.rs"}, {"sha": "9cdb2a21b04b371729de18e70fc3d4e92a73f928", "filename": "src/test/ui/proc-macro/three-equals.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fthree-equals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88dab8d9b3c3556e29bc551efa5ff727a15e0c6d/src%2Ftest%2Fui%2Fproc-macro%2Fthree-equals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fthree-equals.stderr?ref=88dab8d9b3c3556e29bc551efa5ff727a15e0c6d", "patch": "@@ -8,16 +8,16 @@ LL |     three_equals!(==);\n    = note: this error originates in the macro `three_equals` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: expected EOF, found `=`.\n-  --> $DIR/three-equals.rs:15:21\n+  --> $DIR/three-equals.rs:15:22\n    |\n LL |     three_equals!(=====);\n-   |                     ^^\n+   |                      ^\n    |\n note: last good input was here\n   --> $DIR/three-equals.rs:15:21\n    |\n LL |     three_equals!(=====);\n-   |                     ^^\n+   |                     ^\n    = help: input must be: `===`\n \n error: expected `=`, found `abc`."}]}