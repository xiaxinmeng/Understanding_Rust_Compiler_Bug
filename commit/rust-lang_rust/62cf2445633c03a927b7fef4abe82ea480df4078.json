{"sha": "62cf2445633c03a927b7fef4abe82ea480df4078", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyY2YyNDQ1NjMzYzAzYTkyN2I3ZmVmNGFiZTgyZWE0ODBkZjQwNzg=", "commit": {"author": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2021-03-13T18:45:48Z"}, "committer": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2021-03-15T19:45:20Z"}, "message": "Constify copy_to and copy_from", "tree": {"sha": "3e2d2a118125c3e9318d3ca1d20e9fae14eb4897", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e2d2a118125c3e9318d3ca1d20e9fae14eb4897"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62cf2445633c03a927b7fef4abe82ea480df4078", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEeQ9lb2ZjsXFBDRuFH1AezRu9cKcFAmBPuVAACgkQH1AezRu9\ncKfUDg/+PjJfqF0LISHjfWpBU/KiTkAkoim7oZX7fRvuGs0Cw1r/bvXZDkz+PHUd\nG91641pgohsPi+mjsJv17bjYvyzW4ZXuCW4UNM71bjduJzdqBjFBFKQBJqLs+EMZ\nPbZD5qachyWbkB62RJ2qowa2RJl2QqsnJ2CI8BEDP4BoM+LQVfCLd3KedcX6gguD\n+T5FZkORM8WSVccTYqi+Dh5ejowk/6bWYm3L0hdHyGWULwWkGzp+rmH/Twu4QtEH\ns1cyiGbZI6SJFeAqJGzSQCBj04LZz6pz1c6lLysyqJPrzAvIIPDxecGD3P+m61Z0\nHkIRkN/zyFNtgmK72CKEQ5eiJiInS8YIFYKBBFpmQAPGOhYKgUfNR3IlzYfSc5dI\ndXw6hu6+PUAwds62C8KTAFl7km096cTm2PO+4YLT7YWoHint1gOQdgvpfJgr0gCK\ngW7KHNW8mKBW+AVO7uydFFSsmYwP1THyP6g83F891aD0QRitrwcJ5ljBZXFji1lX\nJfgbggYdY1b3xkQibdjr+yYEubckj0MhMjkYqbgqKtMKp/tlKms0isCm+1pWbFim\nZ+Z7jb+S4y9lX3mPlaMp6T8lBuKk7J9d+NEGVfbBhUzqh8ToO5IvcorCoiEHhhOj\nTLUlF5/HIkm4fgksdYIMsJiQoH8wubDNrit+n6+2N66/I0grWsc=\n=aMwF\n-----END PGP SIGNATURE-----", "payload": "tree 3e2d2a118125c3e9318d3ca1d20e9fae14eb4897\nparent 2ccf06302c08d7d4911aad40e66a9a3ee731c6f9\nauthor Albin Hedman <albin9604@gmail.com> 1615661148 +0100\ncommitter Albin Hedman <albin9604@gmail.com> 1615837520 +0100\n\nConstify copy_to and copy_from\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62cf2445633c03a927b7fef4abe82ea480df4078", "html_url": "https://github.com/rust-lang/rust/commit/62cf2445633c03a927b7fef4abe82ea480df4078", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62cf2445633c03a927b7fef4abe82ea480df4078/comments", "author": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ccf06302c08d7d4911aad40e66a9a3ee731c6f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ccf06302c08d7d4911aad40e66a9a3ee731c6f9", "html_url": "https://github.com/rust-lang/rust/commit/2ccf06302c08d7d4911aad40e66a9a3ee731c6f9"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "b511466acd6397c302275723e00d9b7ff4e22555", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/62cf2445633c03a927b7fef4abe82ea480df4078/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62cf2445633c03a927b7fef4abe82ea480df4078/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=62cf2445633c03a927b7fef4abe82ea480df4078", "patch": "@@ -819,9 +819,10 @@ impl<T: ?Sized> *const T {\n     /// See [`ptr::copy`] for safety concerns and examples.\n     ///\n     /// [`ptr::copy`]: crate::ptr::copy()\n+    #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[inline]\n-    pub unsafe fn copy_to(self, dest: *mut T, count: usize)\n+    pub const unsafe fn copy_to(self, dest: *mut T, count: usize)\n     where\n         T: Sized,\n     {\n@@ -837,9 +838,10 @@ impl<T: ?Sized> *const T {\n     /// See [`ptr::copy_nonoverlapping`] for safety concerns and examples.\n     ///\n     /// [`ptr::copy_nonoverlapping`]: crate::ptr::copy_nonoverlapping()\n+    #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[inline]\n-    pub unsafe fn copy_to_nonoverlapping(self, dest: *mut T, count: usize)\n+    pub const unsafe fn copy_to_nonoverlapping(self, dest: *mut T, count: usize)\n     where\n         T: Sized,\n     {"}, {"sha": "fa09cf854353d21e15a0a5f8d5272ea540406290", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/62cf2445633c03a927b7fef4abe82ea480df4078/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62cf2445633c03a927b7fef4abe82ea480df4078/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=62cf2445633c03a927b7fef4abe82ea480df4078", "patch": "@@ -926,9 +926,10 @@ impl<T: ?Sized> *mut T {\n     /// See [`ptr::copy`] for safety concerns and examples.\n     ///\n     /// [`ptr::copy`]: crate::ptr::copy()\n+    #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[inline]\n-    pub unsafe fn copy_to(self, dest: *mut T, count: usize)\n+    pub const unsafe fn copy_to(self, dest: *mut T, count: usize)\n     where\n         T: Sized,\n     {\n@@ -944,9 +945,10 @@ impl<T: ?Sized> *mut T {\n     /// See [`ptr::copy_nonoverlapping`] for safety concerns and examples.\n     ///\n     /// [`ptr::copy_nonoverlapping`]: crate::ptr::copy_nonoverlapping()\n+    #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[inline]\n-    pub unsafe fn copy_to_nonoverlapping(self, dest: *mut T, count: usize)\n+    pub const unsafe fn copy_to_nonoverlapping(self, dest: *mut T, count: usize)\n     where\n         T: Sized,\n     {\n@@ -962,9 +964,10 @@ impl<T: ?Sized> *mut T {\n     /// See [`ptr::copy`] for safety concerns and examples.\n     ///\n     /// [`ptr::copy`]: crate::ptr::copy()\n+    #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[inline]\n-    pub unsafe fn copy_from(self, src: *const T, count: usize)\n+    pub const unsafe fn copy_from(self, src: *const T, count: usize)\n     where\n         T: Sized,\n     {\n@@ -980,9 +983,10 @@ impl<T: ?Sized> *mut T {\n     /// See [`ptr::copy_nonoverlapping`] for safety concerns and examples.\n     ///\n     /// [`ptr::copy_nonoverlapping`]: crate::ptr::copy_nonoverlapping()\n+    #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[inline]\n-    pub unsafe fn copy_from_nonoverlapping(self, src: *const T, count: usize)\n+    pub const unsafe fn copy_from_nonoverlapping(self, src: *const T, count: usize)\n     where\n         T: Sized,\n     {"}]}