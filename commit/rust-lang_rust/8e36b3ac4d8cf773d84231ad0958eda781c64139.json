{"sha": "8e36b3ac4d8cf773d84231ad0958eda781c64139", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlMzZiM2FjNGQ4Y2Y3NzNkODQyMzFhZDA5NThlZGE3ODFjNjQxMzk=", "commit": {"author": {"name": "Ali Clark", "email": "ali@clark.gb.net", "date": "2016-01-22T23:41:59Z"}, "committer": {"name": "Ali Clark", "email": "ali@clark.gb.net", "date": "2016-01-22T23:41:59Z"}, "message": "revert an unrelated flag addition for freebsd", "tree": {"sha": "85a2f3ce4df439079840dea0ddd2b60ac3cd832c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85a2f3ce4df439079840dea0ddd2b60ac3cd832c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e36b3ac4d8cf773d84231ad0958eda781c64139", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e36b3ac4d8cf773d84231ad0958eda781c64139", "html_url": "https://github.com/rust-lang/rust/commit/8e36b3ac4d8cf773d84231ad0958eda781c64139", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e36b3ac4d8cf773d84231ad0958eda781c64139/comments", "author": null, "committer": null, "parents": [{"sha": "2cbffd5642c83b02d206110c483d5d83aed51c54", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cbffd5642c83b02d206110c483d5d83aed51c54", "html_url": "https://github.com/rust-lang/rust/commit/2cbffd5642c83b02d206110c483d5d83aed51c54"}], "stats": {"total": 9, "additions": 0, "deletions": 9}, "files": [{"sha": "946e529502e7d6ebb144fb86e51182a841faced3", "filename": "src/librustc_back/target/freebsd_base.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8e36b3ac4d8cf773d84231ad0958eda781c64139/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e36b3ac4d8cf773d84231ad0958eda781c64139/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs?ref=8e36b3ac4d8cf773d84231ad0958eda781c64139", "patch": "@@ -18,15 +18,6 @@ pub fn opts() -> TargetOptions {\n         executables: true,\n         has_rpath: true,\n         pre_link_args: vec![\n-            // We want to be able to strip as much executable code as possible\n-            // from the linker command line, and this flag indicates to the\n-            // linker that it can avoid linking in dynamic libraries that don't\n-            // actually satisfy any symbols up to that point (as with many other\n-            // resolutions the linker does). This option only applies to all\n-            // following libraries so we're sure to pass it as one of the first\n-            // arguments.\n-            \"-Wl,--as-needed\".to_string(),\n-\n             // Always enable NX protection when it is available\n             \"-Wl,-z,noexecstack\".to_string(),\n         ],"}]}