{"sha": "a14edd571ed3cb4ea79f32eba9954a2f34821df8", "node_id": "C_kwDOAAsO6NoAKGExNGVkZDU3MWVkM2NiNGVhNzlmMzJlYmE5OTU0YTJmMzQ4MjFkZjg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-25T14:26:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-25T14:26:27Z"}, "message": "Auto merge of #9246 - kyoto7250:reopen_issue_8493, r=Jarcho\n\ncheck macro statements in `[non_copy_const]`\n\nclose #8493\nclose #9224\n\nThis PR fixes false positives in `[non_copy_const]`.\n\nchangelog: fix false positives in`[non_copy_const]`\n\n---\n\nr? `@Jarcho`", "tree": {"sha": "e38925b17ed2b5b0b0b0bf3a4b48912b64900568", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e38925b17ed2b5b0b0b0bf3a4b48912b64900568"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a14edd571ed3cb4ea79f32eba9954a2f34821df8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a14edd571ed3cb4ea79f32eba9954a2f34821df8", "html_url": "https://github.com/rust-lang/rust/commit/a14edd571ed3cb4ea79f32eba9954a2f34821df8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a14edd571ed3cb4ea79f32eba9954a2f34821df8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f847795bb25cbd3b8959a94cd99cc82401c24828", "url": "https://api.github.com/repos/rust-lang/rust/commits/f847795bb25cbd3b8959a94cd99cc82401c24828", "html_url": "https://github.com/rust-lang/rust/commit/f847795bb25cbd3b8959a94cd99cc82401c24828"}, {"sha": "b6c301055edc9d769bb7ac8e4b8bc083e31ac748", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6c301055edc9d769bb7ac8e4b8bc083e31ac748", "html_url": "https://github.com/rust-lang/rust/commit/b6c301055edc9d769bb7ac8e4b8bc083e31ac748"}], "stats": {"total": 53, "additions": 41, "deletions": 12}, "files": [{"sha": "72c86f28bbc6c4e4193894a6cbf4dedf09f2ea54", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a14edd571ed3cb4ea79f32eba9954a2f34821df8/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a14edd571ed3cb4ea79f32eba9954a2f34821df8/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=a14edd571ed3cb4ea79f32eba9954a2f34821df8", "patch": "@@ -251,14 +251,7 @@ impl<'tcx> LateLintPass<'tcx> for NonCopyConst {\n     fn check_item(&mut self, cx: &LateContext<'tcx>, it: &'tcx Item<'_>) {\n         if let ItemKind::Const(hir_ty, body_id) = it.kind {\n             let ty = hir_ty_to_ty(cx.tcx, hir_ty);\n-            if !macro_backtrace(it.span).last().map_or(false, |macro_call| {\n-                matches!(\n-                    cx.tcx.get_diagnostic_name(macro_call.def_id),\n-                    Some(sym::thread_local_macro)\n-                )\n-            }) && is_unfrozen(cx, ty)\n-                && is_value_unfrozen_poly(cx, body_id, ty)\n-            {\n+            if !ignored_macro(cx, it) && is_unfrozen(cx, ty) && is_value_unfrozen_poly(cx, body_id, ty) {\n                 lint(cx, Source::Item { item: it.span });\n             }\n         }\n@@ -445,3 +438,12 @@ impl<'tcx> LateLintPass<'tcx> for NonCopyConst {\n         }\n     }\n }\n+\n+fn ignored_macro(cx: &LateContext<'_>, it: &rustc_hir::Item<'_>) -> bool {\n+    macro_backtrace(it.span).any(|macro_call| {\n+        matches!(\n+            cx.tcx.get_diagnostic_name(macro_call.def_id),\n+            Some(sym::thread_local_macro)\n+        )\n+    })\n+}"}, {"sha": "896596b567922183d11dd2f82708feffe214bebb", "filename": "tests/ui/declare_interior_mutable_const/others.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a14edd571ed3cb4ea79f32eba9954a2f34821df8/tests%2Fui%2Fdeclare_interior_mutable_const%2Fothers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a14edd571ed3cb4ea79f32eba9954a2f34821df8/tests%2Fui%2Fdeclare_interior_mutable_const%2Fothers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeclare_interior_mutable_const%2Fothers.rs?ref=a14edd571ed3cb4ea79f32eba9954a2f34821df8", "patch": "@@ -31,9 +31,25 @@ const NO_ANN: &dyn Display = &70;\n static STATIC_TUPLE: (AtomicUsize, String) = (ATOMIC, STRING);\n //^ there should be no lints on this line\n \n-// issue #8493\n-thread_local! {\n-    static THREAD_LOCAL: Cell<i32> = const { Cell::new(0) };\n+mod issue_8493 {\n+    use std::cell::Cell;\n+\n+    thread_local! {\n+        static _BAR: Cell<i32> = const { Cell::new(0) };\n+    }\n+\n+    macro_rules! issue_8493 {\n+        () => {\n+            const _BAZ: Cell<usize> = Cell::new(0); //~ ERROR interior mutable\n+            static _FOOBAR: () = {\n+                thread_local! {\n+                    static _VAR: Cell<i32> = const { Cell::new(0) };\n+                }\n+            };\n+        };\n+    }\n+\n+    issue_8493!();\n }\n \n fn main() {}"}, {"sha": "1fd6d7322a76cb6f38e4117d2e7a595f0ed5ac73", "filename": "tests/ui/declare_interior_mutable_const/others.stderr", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a14edd571ed3cb4ea79f32eba9954a2f34821df8/tests%2Fui%2Fdeclare_interior_mutable_const%2Fothers.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a14edd571ed3cb4ea79f32eba9954a2f34821df8/tests%2Fui%2Fdeclare_interior_mutable_const%2Fothers.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeclare_interior_mutable_const%2Fothers.stderr?ref=a14edd571ed3cb4ea79f32eba9954a2f34821df8", "patch": "@@ -35,5 +35,16 @@ LL | declare_const!(_ONCE: Once = Once::new()); //~ ERROR interior mutable\n    |\n    = note: this error originates in the macro `declare_const` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 4 previous errors\n+error: a `const` item should never be interior mutable\n+  --> $DIR/others.rs:43:13\n+   |\n+LL |             const _BAZ: Cell<usize> = Cell::new(0); //~ ERROR interior mutable\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+...\n+LL |     issue_8493!();\n+   |     ------------- in this macro invocation\n+   |\n+   = note: this error originates in the macro `issue_8493` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 5 previous errors\n "}]}