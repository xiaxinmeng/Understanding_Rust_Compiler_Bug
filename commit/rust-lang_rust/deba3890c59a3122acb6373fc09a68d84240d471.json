{"sha": "deba3890c59a3122acb6373fc09a68d84240d471", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlYmEzODkwYzU5YTMxMjJhY2I2MzczZmMwOWE2OGQ4NDI0MGQ0NzE=", "commit": {"author": {"name": "penpalperson", "email": "16357077+penpalperson@users.noreply.github.com", "date": "2018-01-30T12:31:38Z"}, "committer": {"name": "penpalperson", "email": "16357077+penpalperson@users.noreply.github.com", "date": "2018-01-30T12:31:38Z"}, "message": "Changed back inline markings.", "tree": {"sha": "8eff61b5d57f7fdc12c2b0392388ffc6e501f705", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8eff61b5d57f7fdc12c2b0392388ffc6e501f705"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/deba3890c59a3122acb6373fc09a68d84240d471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/deba3890c59a3122acb6373fc09a68d84240d471", "html_url": "https://github.com/rust-lang/rust/commit/deba3890c59a3122acb6373fc09a68d84240d471", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/deba3890c59a3122acb6373fc09a68d84240d471/comments", "author": null, "committer": null, "parents": [{"sha": "81e49597bf3fe4fb2dfe9f60325079ff6bb916a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/81e49597bf3fe4fb2dfe9f60325079ff6bb916a0", "html_url": "https://github.com/rust-lang/rust/commit/81e49597bf3fe4fb2dfe9f60325079ff6bb916a0"}], "stats": {"total": 11, "additions": 0, "deletions": 11}, "files": [{"sha": "3d24f8902bd83827be8aee45f393f9cf9f9e33a6", "filename": "src/libcore/array.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/deba3890c59a3122acb6373fc09a68d84240d471/src%2Flibcore%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deba3890c59a3122acb6373fc09a68d84240d471/src%2Flibcore%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray.rs?ref=deba3890c59a3122acb6373fc09a68d84240d471", "patch": "@@ -185,7 +185,6 @@ macro_rules! array_impls {\n \n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n             impl<T: fmt::Debug> fmt::Debug for [T; $N] {\n-                #[inline]\n                 fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n                     fmt::Debug::fmt(&&self[..], f)\n                 }"}, {"sha": "03e7a9a49d8a763da0c6772b678ab23cba06ceb6", "filename": "src/libcore/fmt/float.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/deba3890c59a3122acb6373fc09a68d84240d471/src%2Flibcore%2Ffmt%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deba3890c59a3122acb6373fc09a68d84240d471/src%2Flibcore%2Ffmt%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Ffloat.rs?ref=deba3890c59a3122acb6373fc09a68d84240d471", "patch": "@@ -125,7 +125,6 @@ macro_rules! floating {\n     ($ty:ident) => (\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         impl Debug for $ty {\n-            #[inline]\n             fn fmt(&self, fmt: &mut Formatter) -> Result {\n                 float_to_decimal_common(fmt, self, true, 1)\n             }"}, {"sha": "6c8a1c3062b00633619ba56a7c7296ce8119d19d", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/deba3890c59a3122acb6373fc09a68d84240d471/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deba3890c59a3122acb6373fc09a68d84240d471/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=deba3890c59a3122acb6373fc09a68d84240d471", "patch": "@@ -1558,12 +1558,10 @@ macro_rules! fmt_refs {\n         $(\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         impl<'a, T: ?Sized + $tr> $tr for &'a T {\n-            #[inline]\n             fn fmt(&self, f: &mut Formatter) -> Result { $tr::fmt(&**self, f) }\n         }\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         impl<'a, T: ?Sized + $tr> $tr for &'a mut T {\n-            #[inline]\n             fn fmt(&self, f: &mut Formatter) -> Result { $tr::fmt(&**self, f) }\n         }\n         )*\n@@ -1603,7 +1601,6 @@ impl Display for bool {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Debug for str {\n-    #[inline]\n     fn fmt(&self, f: &mut Formatter) -> Result {\n         f.write_char('\"')?;\n         let mut from = 0;\n@@ -1632,7 +1629,6 @@ impl Display for str {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Debug for char {\n-    #[inline]\n     fn fmt(&self, f: &mut Formatter) -> Result {\n         f.write_char('\\'')?;\n         for c in self.escape_debug() {\n@@ -1706,12 +1702,10 @@ impl<'a, T: ?Sized> Pointer for &'a mut T {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized> Debug for *const T {\n-    #[inline]\n     fn fmt(&self, f: &mut Formatter) -> Result { Pointer::fmt(self, f) }\n }\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized> Debug for *mut T {\n-    #[inline]\n     fn fmt(&self, f: &mut Formatter) -> Result { Pointer::fmt(self, f) }\n }\n \n@@ -1725,7 +1719,6 @@ macro_rules! tuple {\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         impl<$($name:Debug),*> Debug for ($($name,)*) where last_type!($($name,)+): ?Sized {\n             #[allow(non_snake_case, unused_assignments, deprecated)]\n-            #[inline]\n             fn fmt(&self, f: &mut Formatter) -> Result {\n                 let mut builder = f.debug_tuple(\"\");\n                 let ($(ref $name,)*) = *self;\n@@ -1749,7 +1742,6 @@ tuple! { T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: Debug> Debug for [T] {\n-    #[inline]\n     fn fmt(&self, f: &mut Formatter) -> Result {\n         f.debug_list().entries(self.iter()).finish()\n     }"}, {"sha": "fab5832d905df8262bfbaa85971ef913e8711844", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/deba3890c59a3122acb6373fc09a68d84240d471/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deba3890c59a3122acb6373fc09a68d84240d471/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=deba3890c59a3122acb6373fc09a68d84240d471", "patch": "@@ -2202,7 +2202,6 @@ macro_rules! fnptr_impls_safety_abi {\n \n         #[stable(feature = \"fnptr_impls\", since = \"1.4.0\")]\n         impl<Ret, $($Arg),*> fmt::Debug for $FnTy {\n-            #[inline]\n             fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n                 fmt::Pointer::fmt(&(*self as *const ()), f)\n             }"}]}