{"sha": "993bb072ff30a0e6fbc4689ba1639dfdb951888c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5M2JiMDcyZmYzMGEwZTZmYmM0Njg5YmExNjM5ZGZkYjk1MTg4OGM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-11-12T20:42:42Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-11-20T16:35:03Z"}, "message": "rustc_expand: Mark inner `#![test]` attributes as soft-unstable", "tree": {"sha": "8ecec80ce62bb7bde501c06d255115a4cf5e65de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ecec80ce62bb7bde501c06d255115a4cf5e65de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/993bb072ff30a0e6fbc4689ba1639dfdb951888c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/993bb072ff30a0e6fbc4689ba1639dfdb951888c", "html_url": "https://github.com/rust-lang/rust/commit/993bb072ff30a0e6fbc4689ba1639dfdb951888c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/993bb072ff30a0e6fbc4689ba1639dfdb951888c/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae6aa22cf26fede2177abe4ff974030058885b7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae6aa22cf26fede2177abe4ff974030058885b7a", "html_url": "https://github.com/rust-lang/rust/commit/ae6aa22cf26fede2177abe4ff974030058885b7a"}], "stats": {"total": 58, "additions": 37, "deletions": 21}, "files": [{"sha": "c8dbe685128576951283a9de01dbbb19265d5ed9", "filename": "compiler/rustc_resolve/src/macros.rs", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/993bb072ff30a0e6fbc4689ba1639dfdb951888c/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/993bb072ff30a0e6fbc4689ba1639dfdb951888c/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs?ref=993bb072ff30a0e6fbc4689ba1639dfdb951888c", "patch": "@@ -22,7 +22,7 @@ use rustc_hir::def::{self, DefKind, NonMacroAttrKind};\n use rustc_hir::def_id;\n use rustc_middle::middle::stability;\n use rustc_middle::ty;\n-use rustc_session::lint::builtin::UNUSED_MACROS;\n+use rustc_session::lint::builtin::{SOFT_UNSTABLE, UNUSED_MACROS};\n use rustc_session::parse::feature_err;\n use rustc_session::Session;\n use rustc_span::edition::Edition;\n@@ -459,22 +459,21 @@ impl<'a> Resolver<'a> {\n         }\n \n         // We are trying to avoid reporting this error if other related errors were reported.\n-        if inner_attr\n+        if res != Res::Err\n+            && inner_attr\n             && !self.session.features_untracked().custom_inner_attributes\n-            && path != &sym::test\n-            && res != Res::Err\n         {\n-            feature_err(\n-                &self.session.parse_sess,\n-                sym::custom_inner_attributes,\n-                path.span,\n-                match res {\n-                    Res::Def(..) => \"inner macro attributes are unstable\",\n-                    Res::NonMacroAttr(..) => \"custom inner attributes are unstable\",\n-                    _ => unreachable!(),\n-                },\n-            )\n-            .emit();\n+            let msg = match res {\n+                Res::Def(..) => \"inner macro attributes are unstable\",\n+                Res::NonMacroAttr(..) => \"custom inner attributes are unstable\",\n+                _ => unreachable!(),\n+            };\n+            if path == &sym::test {\n+                self.session.parse_sess.buffer_lint(SOFT_UNSTABLE, path.span, node_id, msg);\n+            } else {\n+                feature_err(&self.session.parse_sess, sym::custom_inner_attributes, path.span, msg)\n+                    .emit();\n+            }\n         }\n \n         Ok((ext, res))"}, {"sha": "df0df3f23f75603baf7d4618dff78cc1972dde75", "filename": "library/std/src/num/tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/993bb072ff30a0e6fbc4689ba1639dfdb951888c/library%2Fstd%2Fsrc%2Fnum%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/993bb072ff30a0e6fbc4689ba1639dfdb951888c/library%2Fstd%2Fsrc%2Fnum%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnum%2Ftests.rs?ref=993bb072ff30a0e6fbc4689ba1639dfdb951888c", "patch": "@@ -75,8 +75,8 @@ fn test_checked_mul() {\n \n macro_rules! test_is_power_of_two {\n     ($test_name:ident, $T:ident) => {\n+        #[test]\n         fn $test_name() {\n-            #![test]\n             assert_eq!((0 as $T).is_power_of_two(), false);\n             assert_eq!((1 as $T).is_power_of_two(), true);\n             assert_eq!((2 as $T).is_power_of_two(), true);\n@@ -96,8 +96,8 @@ test_is_power_of_two! { test_is_power_of_two_uint, usize }\n \n macro_rules! test_next_power_of_two {\n     ($test_name:ident, $T:ident) => {\n+        #[test]\n         fn $test_name() {\n-            #![test]\n             assert_eq!((0 as $T).next_power_of_two(), 1);\n             let mut next_power = 1;\n             for i in 1 as $T..40 {\n@@ -118,8 +118,8 @@ test_next_power_of_two! { test_next_power_of_two_uint, usize }\n \n macro_rules! test_checked_next_power_of_two {\n     ($test_name:ident, $T:ident) => {\n+        #[test]\n         fn $test_name() {\n-            #![test]\n             assert_eq!((0 as $T).checked_next_power_of_two(), Some(1));\n             let smax = $T::MAX >> 1;\n             assert_eq!(smax.checked_next_power_of_two(), Some(smax + 1));"}, {"sha": "ee3fe712e36e5b944056ace8f272e449553cb13c", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/993bb072ff30a0e6fbc4689ba1639dfdb951888c/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/993bb072ff30a0e6fbc4689ba1639dfdb951888c/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-test.rs?ref=993bb072ff30a0e6fbc4689ba1639dfdb951888c", "patch": "@@ -1,5 +1,6 @@\n // The non-crate level cases are in issue-43106-gating-of-builtin-attrs.rs.\n \n+#![allow(soft_unstable)]\n #![test                    = \"4200\"]\n //~^ ERROR cannot determine resolution for the attribute macro `test`\n "}, {"sha": "335af5e7905f22079f7963ec6979a43f8bdc9af4", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-test.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/993bb072ff30a0e6fbc4689ba1639dfdb951888c/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/993bb072ff30a0e6fbc4689ba1639dfdb951888c/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-test.stderr?ref=993bb072ff30a0e6fbc4689ba1639dfdb951888c", "patch": "@@ -1,5 +1,5 @@\n error: cannot determine resolution for the attribute macro `test`\n-  --> $DIR/issue-43106-gating-of-test.rs:3:4\n+  --> $DIR/issue-43106-gating-of-test.rs:4:4\n    |\n LL | #![test                    = \"4200\"]\n    |    ^^^^"}, {"sha": "1ed2d330b5123e4517869adc3a10f09f1beb2128", "filename": "src/test/ui/issues/issue-28134.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/993bb072ff30a0e6fbc4689ba1639dfdb951888c/src%2Ftest%2Fui%2Fissues%2Fissue-28134.rs", "raw_url": "https://github.com/rust-lang/rust/raw/993bb072ff30a0e6fbc4689ba1639dfdb951888c/src%2Ftest%2Fui%2Fissues%2Fissue-28134.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28134.rs?ref=993bb072ff30a0e6fbc4689ba1639dfdb951888c", "patch": "@@ -1,3 +1,4 @@\n // compile-flags: --test\n \n+#![allow(soft_unstable)]\n #![test] //~ ERROR cannot determine resolution for the attribute macro `test`"}, {"sha": "8ed4d015f3216658d06911f3b06c294cb73b8b2e", "filename": "src/test/ui/issues/issue-28134.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/993bb072ff30a0e6fbc4689ba1639dfdb951888c/src%2Ftest%2Fui%2Fissues%2Fissue-28134.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/993bb072ff30a0e6fbc4689ba1639dfdb951888c/src%2Ftest%2Fui%2Fissues%2Fissue-28134.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28134.stderr?ref=993bb072ff30a0e6fbc4689ba1639dfdb951888c", "patch": "@@ -1,5 +1,5 @@\n error: cannot determine resolution for the attribute macro `test`\n-  --> $DIR/issue-28134.rs:3:4\n+  --> $DIR/issue-28134.rs:4:4\n    |\n LL | #![test]\n    |    ^^^^"}, {"sha": "e2cf4e73987561332f8c7ba6daf9f33ed6b9556f", "filename": "src/test/ui/proc-macro/proc-macro-gates.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/993bb072ff30a0e6fbc4689ba1639dfdb951888c/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/993bb072ff30a0e6fbc4689ba1639dfdb951888c/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.rs?ref=993bb072ff30a0e6fbc4689ba1639dfdb951888c", "patch": "@@ -45,4 +45,9 @@ fn attrs() {\n     //~^ ERROR: custom attributes cannot be applied to expressions\n }\n \n+fn test_case() {\n+    #![test] //~ ERROR inner macro attributes are unstable\n+             //~| WARN this was previously accepted\n+}\n+\n fn main() {}"}, {"sha": "118213a17d4626cadc02afb39e105594e7903d33", "filename": "src/test/ui/proc-macro/proc-macro-gates.stderr", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/993bb072ff30a0e6fbc4689ba1639dfdb951888c/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/993bb072ff30a0e6fbc4689ba1639dfdb951888c/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr?ref=993bb072ff30a0e6fbc4689ba1639dfdb951888c", "patch": "@@ -76,6 +76,16 @@ LL |     let _x = #[identity_attr] println!();\n    = note: see issue #54727 <https://github.com/rust-lang/rust/issues/54727> for more information\n    = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n-error: aborting due to 9 previous errors\n+error: inner macro attributes are unstable\n+  --> $DIR/proc-macro-gates.rs:49:8\n+   |\n+LL |     #![test]\n+   |        ^^^^\n+   |\n+   = note: `#[deny(soft_unstable)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #64266 <https://github.com/rust-lang/rust/issues/64266>\n+\n+error: aborting due to 10 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}]}