{"sha": "6caafaa9ea44d404733af6f9a907b6295dccc966", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjYWFmYWE5ZWE0NGQ0MDQ3MzNhZjZmOWE5MDdiNjI5NWRjY2M5NjY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-22T21:14:48Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-22T21:14:48Z"}, "message": "tutorial: Use bold bullet items instead of bold italic", "tree": {"sha": "2793a503ca4d15d9e7fea5fa408eb1f3ac1590c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2793a503ca4d15d9e7fea5fa408eb1f3ac1590c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6caafaa9ea44d404733af6f9a907b6295dccc966", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6caafaa9ea44d404733af6f9a907b6295dccc966", "html_url": "https://github.com/rust-lang/rust/commit/6caafaa9ea44d404733af6f9a907b6295dccc966", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6caafaa9ea44d404733af6f9a907b6295dccc966/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "655f7f844c64b29c35263bb48b5bedb3ed4b7b44", "url": "https://api.github.com/repos/rust-lang/rust/commits/655f7f844c64b29c35263bb48b5bedb3ed4b7b44", "html_url": "https://github.com/rust-lang/rust/commit/655f7f844c64b29c35263bb48b5bedb3ed4b7b44"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "6d0ddca47bec50ec83b97b8a6ebc5bd68d1cca27", "filename": "doc/tutorial.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6caafaa9ea44d404733af6f9a907b6295dccc966/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/6caafaa9ea44d404733af6f9a907b6295dccc966/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=6caafaa9ea44d404733af6f9a907b6295dccc966", "patch": "@@ -26,20 +26,20 @@ As a multi-paradigm language, Rust supports writing code in\n procedural, functional and object-oriented styles. Some of its nice\n high-level features include:\n \n-* ***Pattern matching and algebraic data types (enums).*** Common in\n+* **Pattern matching and algebraic data types (enums).** Common in\n   functional languages, pattern matching on ADTs provides a compact\n   and expressive way to encode program logic.\n-* ***Task-based concurrency.*** Rust uses lightweight tasks that do\n+* **Task-based concurrency.** Rust uses lightweight tasks that do\n   not share memory.\n-* ***Higher-order functions.*** Rust functions may take closures as\n+* **Higher-order functions.** Rust functions may take closures as\n   arguments or return closures as return values.  Closures in Rust are\n   very powerful and used pervasively.\n-* ***Trait polymorphism.*** Rust's type system features a unique\n+* **Trait polymorphism.** Rust's type system features a unique\n   combination of Java-style interfaces and Haskell-style typeclasses\n   called _traits_.\n-* ***Parametric polymorphism (generics).*** Functions and types can be\n+* **Parametric polymorphism (generics).** Functions and types can be\n   parameterized over type variables with optional type constraints.\n-* ***Type inference.*** Type annotations on local variable\n+* **Type inference.** Type annotations on local variable\n   declarations can be omitted.\n \n ## First impressions"}]}