{"sha": "e279f22a91ea633d88da154631a494eb09812829", "node_id": "C_kwDOAAsO6NoAKGUyNzlmMjJhOTFlYTYzM2Q4OGRhMTU0NjMxYTQ5NGViMDk4MTI4Mjk", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-09-20T10:14:18Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-09-20T13:23:48Z"}, "message": "Changelog for Rust 1.64 :apple:", "tree": {"sha": "71701d27c422f895dbaa68be1a9923a4153456fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71701d27c422f895dbaa68be1a9923a4153456fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e279f22a91ea633d88da154631a494eb09812829", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEwgBEOx3xlHwII7PG9cWdDmaeUwIFAmMpvuQACgkQ9cWdDmae\nUwIZdQ/+MelwfzArilkASMJGGOCwAq9CLssvvk5uWVAFKJfyb/duwpXfQ6c6K0Xg\nFfB+2yqayvlKWESj9QdvnVLBN+RGULxTM0VzPh/ZpHufZe9WGxD88YHTnR1b0q5K\nArRMoh1lkBDnA9fw7W+SYqOyqDnI3kGLGrRvmtvtLNPvu9zSFLZycPbryFQ1JGSq\nSIDHAtMKt/GEXmAvRWOEXAuBeUkW3aohw9TfEkFXvKEvP6Bxt44baMB1MsWKGboT\nyc/iUS49Vg85lqiP2PBnbaCJgLcS7HZ7N2W7qnVuLbtNVwPMvkgJ5PUwRV6FZ+D6\n2REq3nqlAzZFwRUbRfsM7Ythys3VB5FQ9ZpJpMIYSrNILXMYVt4aLZifuj+YVcgW\nYiHQ8aTtsyIVGzt92nqMoqxm5MtF+tjy8yVtkgeOp6Ht+MkXGTER6KmEvJsZcO3X\nZizhi1k9kWqVC4Tyqu6kucZDMoci6oAoH8KujlbtZEeuVhBwBRL/zhk9TS5K5fQ0\nuRAOx17gVbY2trkfwGwKxb8OAxQXsfZ+2GNLdRAT34mvxMsj/PXuWXfmwK89gYi3\n/T+XDXo1MEijd8pfMeMYZqZ025Fdmez7B8ZICsZbpyF2skKaaEtK1KjjXzVrFXzl\nAYO/D0SZq5wmoueNtcODkvFrgUSJDzKgPUTVhs15/qFED2Ox6ek=\n=eTcd\n-----END PGP SIGNATURE-----", "payload": "tree 71701d27c422f895dbaa68be1a9923a4153456fd\nparent 5c3c6a2de666525e8c32dbc90072a065143c5450\nauthor xFrednet <xFrednet@gmail.com> 1663668858 +0200\ncommitter xFrednet <xFrednet@gmail.com> 1663680228 +0200\n\nChangelog for Rust 1.64 :apple:\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e279f22a91ea633d88da154631a494eb09812829", "html_url": "https://github.com/rust-lang/rust/commit/e279f22a91ea633d88da154631a494eb09812829", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e279f22a91ea633d88da154631a494eb09812829/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c3c6a2de666525e8c32dbc90072a065143c5450", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c3c6a2de666525e8c32dbc90072a065143c5450", "html_url": "https://github.com/rust-lang/rust/commit/5c3c6a2de666525e8c32dbc90072a065143c5450"}], "stats": {"total": 164, "additions": 157, "deletions": 7}, "files": [{"sha": "a56be486217e3b7eba3a2a66c7f94ca7cac5e0ec", "filename": "CHANGELOG.md", "status": "modified", "additions": 152, "deletions": 2, "changes": 154, "blob_url": "https://github.com/rust-lang/rust/blob/e279f22a91ea633d88da154631a494eb09812829/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/e279f22a91ea633d88da154631a494eb09812829/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=e279f22a91ea633d88da154631a494eb09812829", "patch": "@@ -6,11 +6,161 @@ document.\n \n ## Unreleased / In Rust Nightly\n \n-[d7b5cbf0...master](https://github.com/rust-lang/rust-clippy/compare/d7b5cbf0...master)\n+[3c7e7dbc...master](https://github.com/rust-lang/rust-clippy/compare/3c7e7dbc...master)\n+\n+## Rust 1.64\n+\n+Current stable, released 2022-09-22\n+\n+[d7b5cbf0...3c7e7dbc](https://github.com/rust-lang/rust-clippy/compare/d7b5cbf0...3c7e7dbc)\n+\n+### New Lints\n+\n+* [`arithmetic_side_effects`]\n+  [#9130](https://github.com/rust-lang/rust-clippy/pull/9130)\n+* [`invalid_utf8_in_unchecked`]\n+  [#9105](https://github.com/rust-lang/rust-clippy/pull/9105)\n+* [`assertions_on_result_states`]\n+  [#9225](https://github.com/rust-lang/rust-clippy/pull/9225)\n+* [`manual_find`]\n+  [#8649](https://github.com/rust-lang/rust-clippy/pull/8649)\n+* [`manual_retain`]\n+  [#8972](https://github.com/rust-lang/rust-clippy/pull/8972)\n+* [`default_instead_of_iter_empty`]\n+  [#8989](https://github.com/rust-lang/rust-clippy/pull/8989)\n+* [`manual_rem_euclid`]\n+  [#9031](https://github.com/rust-lang/rust-clippy/pull/9031)\n+* [`obfuscated_if_else`]\n+  [#9148](https://github.com/rust-lang/rust-clippy/pull/9148)\n+* [`std_instead_of_core`]\n+  [#9103](https://github.com/rust-lang/rust-clippy/pull/9103)\n+* [`std_instead_of_alloc`]\n+  [#9103](https://github.com/rust-lang/rust-clippy/pull/9103)\n+* [`alloc_instead_of_core`]\n+  [#9103](https://github.com/rust-lang/rust-clippy/pull/9103)\n+* [`explicit_auto_deref`]\n+  [#8355](https://github.com/rust-lang/rust-clippy/pull/8355)\n+\n+\n+### Moves and Deprecations\n+\n+* Moved [`format_push_string`] to `restriction` (now allow-by-default)\n+  [#9161](https://github.com/rust-lang/rust-clippy/pull/9161)\n+\n+### Enhancements\n+\n+* [`significant_drop_in_scrutinee`]: Now gives more context in the lint message\n+  [#8981](https://github.com/rust-lang/rust-clippy/pull/8981)\n+* [`single_match`], [`single_match_else`]: Now catches more `Option` cases\n+  [#8985](https://github.com/rust-lang/rust-clippy/pull/8985)\n+* [`unused_async`]: Now works for async methods\n+  [#9025](https://github.com/rust-lang/rust-clippy/pull/9025)\n+* [`manual_filter_map`], [`manual_find_map`]: Now lint more expressions\n+  [#8958](https://github.com/rust-lang/rust-clippy/pull/8958)\n+* [`question_mark`]: Now works for simple `if let` expressions\n+  [#8356](https://github.com/rust-lang/rust-clippy/pull/8356)\n+* [`undocumented_unsafe_blocks`]: Now finds comments before the start of closures\n+  [#9117](https://github.com/rust-lang/rust-clippy/pull/9117)\n+* [`trait_duplication_in_bounds`]: Now catches duplicate bounds in where clauses\n+  [#8703](https://github.com/rust-lang/rust-clippy/pull/8703)\n+* [`shadow_reuse`], [`shadow_same`], [`shadow_unrelated`]: Now lint in const blocks\n+  [#9124](https://github.com/rust-lang/rust-clippy/pull/9124)\n+* [`slow_vector_initialization`]: Now detects cases with `vec.capacity()`\n+  [#8953](https://github.com/rust-lang/rust-clippy/pull/8953)\n+* [`unused_self`]: Now respects the `avoid-breaking-exported-api` config option\n+  [#9199](https://github.com/rust-lang/rust-clippy/pull/9199)\n+* [`box_collection`]: Now supports all std collections\n+  [#9170](https://github.com/rust-lang/rust-clippy/pull/9170)\n+\n+### False Positive Fixes\n+\n+* [`significant_drop_in_scrutinee`]: Now ignores calls to `IntoIterator::into_iter`\n+  [#9140](https://github.com/rust-lang/rust-clippy/pull/9140)\n+* [`while_let_loop`]: Now ignores cases when the significant drop order would change\n+  [#8981](https://github.com/rust-lang/rust-clippy/pull/8981)\n+* [`branches_sharing_code`]: Now ignores cases where moved variables have a significant\n+  drop or variable modifications can affect the conditions\n+  [#9138](https://github.com/rust-lang/rust-clippy/pull/9138)\n+* [`let_underscore_lock`]: Now ignores bindings that aren't locked\n+  [#8990](https://github.com/rust-lang/rust-clippy/pull/8990)\n+* [`trivially_copy_pass_by_ref`]: Now tracks lifetimes and ignores cases where unsafe\n+  pointers are used\n+  [#8639](https://github.com/rust-lang/rust-clippy/pull/8639)\n+* [`let_unit_value`]: No longer ignores `#[allow]` attributes on the value\n+  [#9082](https://github.com/rust-lang/rust-clippy/pull/9082)\n+* [`declare_interior_mutable_const`]: Now ignores the `thread_local!` macro\n+  [#9015](https://github.com/rust-lang/rust-clippy/pull/9015)\n+* [`if_same_then_else`]: Now ignores branches with `todo!` and `unimplemented!`\n+  [#9006](https://github.com/rust-lang/rust-clippy/pull/9006)\n+* [`enum_variant_names`]: Now ignores names with `_` prefixes\n+  [#9032](https://github.com/rust-lang/rust-clippy/pull/9032)\n+* [`let_unit_value`]: Now ignores cases, where the unit type is manually specified\n+  [#9056](https://github.com/rust-lang/rust-clippy/pull/9056)\n+* [`match_same_arms`]: Now ignores branches with `todo!`\n+  [#9207](https://github.com/rust-lang/rust-clippy/pull/9207)\n+* [`assign_op_pattern`]: Ignores cases that break borrowing rules\n+  [#9214](https://github.com/rust-lang/rust-clippy/pull/9214)\n+* [`extra_unused_lifetimes`]: No longer triggers in derive macros\n+  [#9037](https://github.com/rust-lang/rust-clippy/pull/9037)\n+* [`mismatching_type_param_order`]: Now ignores complicated generic parameters\n+  [#9146](https://github.com/rust-lang/rust-clippy/pull/9146)\n+* [`equatable_if_let`]: No longer lints in macros\n+  [#9074](https://github.com/rust-lang/rust-clippy/pull/9074)\n+* [`new_without_default`]: Now ignores generics and lifetime parameters on `fn new`\n+  [#9115](https://github.com/rust-lang/rust-clippy/pull/9115)\n+* [`needless_borrow`]: Now ignores cases that result in the execution of different traits\n+  [#9096](https://github.com/rust-lang/rust-clippy/pull/9096)\n+* [`declare_interior_mutable_const`]: No longer triggers in thread-local initializers\n+  [#9246](https://github.com/rust-lang/rust-clippy/pull/9246)\n+\n+### Suggestion Fixes/Improvements\n+\n+* [`type_repetition_in_bounds`]: The suggestion now works with maybe bounds\n+  [#9132](https://github.com/rust-lang/rust-clippy/pull/9132)\n+* [`transmute_ptr_to_ref`]: Now suggests `pointer::cast` when possible\n+  [#8939](https://github.com/rust-lang/rust-clippy/pull/8939)\n+* [`useless_format`]: Now suggests the correct variable name\n+  [#9237](https://github.com/rust-lang/rust-clippy/pull/9237)\n+* [`or_fun_call`]: The lint emission will now only span over the `unwrap_or` call\n+  [#9144](https://github.com/rust-lang/rust-clippy/pull/9144)\n+* [`neg_multiply`]: Now suggests adding parentheses around suggestion if needed\n+  [#9026](https://github.com/rust-lang/rust-clippy/pull/9026)\n+* [`unnecessary_lazy_evaluations`]: Now suggest for `bool::then_some` for lazy evaluation\n+  [#9099](https://github.com/rust-lang/rust-clippy/pull/9099)\n+* [`manual_flatten`]: Improved message for long code snippets\n+  [#9156](https://github.com/rust-lang/rust-clippy/pull/9156)\n+* [`explicit_counter_loop`]: The suggestion is now machine applicable\n+  [#9149](https://github.com/rust-lang/rust-clippy/pull/9149)\n+* [`needless_borrow`]: Now keeps parentheses around fields, when needed\n+  [#9210](https://github.com/rust-lang/rust-clippy/pull/9210)\n+* [`while_let_on_iterator`]: The suggestion now works in `FnOnce` closures\n+  [#9134](https://github.com/rust-lang/rust-clippy/pull/9134)\n+\n+### ICE Fixes\n+\n+* Fix ICEs related to `#![feature(generic_const_exprs)]` usage\n+  [#9241](https://github.com/rust-lang/rust-clippy/pull/9241)\n+* Fix ICEs related to reference lints\n+  [#9093](https://github.com/rust-lang/rust-clippy/pull/9093)\n+* [`question_mark`]: Fix ICE on zero field tuple structs\n+  [#9244](https://github.com/rust-lang/rust-clippy/pull/9244)\n+\n+### Documentation Improvements\n+\n+* [`needless_option_take`]: Now includes a \"What it does\" and \"Why is this bad?\" section.\n+  [#9022](https://github.com/rust-lang/rust-clippy/pull/9022)\n+\n+### Others\n+\n+* Using `--cap-lints=allow` and only `--force-warn`ing some will now work with Clippy's driver\n+  [#9036](https://github.com/rust-lang/rust-clippy/pull/9036)\n+* Clippy now tries to read the `rust-version` from `Cargo.toml` to identify the\n+  minimum supported rust version\n+  [#8774](https://github.com/rust-lang/rust-clippy/pull/8774)\n \n ## Rust 1.63\n \n-Current stable, released 2022-08-11\n+Released 2022-08-11\n \n [7c21f91b...d7b5cbf0](https://github.com/rust-lang/rust-clippy/compare/7c21f91b...d7b5cbf0)\n "}, {"sha": "1ad929864b2a0061bcbb413afce05ec4e171fdf7", "filename": "clippy_lints/src/default_instead_of_iter_empty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e279f22a91ea633d88da154631a494eb09812829/clippy_lints%2Fsrc%2Fdefault_instead_of_iter_empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e279f22a91ea633d88da154631a494eb09812829/clippy_lints%2Fsrc%2Fdefault_instead_of_iter_empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_instead_of_iter_empty.rs?ref=e279f22a91ea633d88da154631a494eb09812829", "patch": "@@ -23,7 +23,7 @@ declare_clippy_lint! {\n     /// let _ = std::iter::empty::<usize>();\n     /// let iter: std::iter::Empty<usize> = std::iter::empty();\n     /// ```\n-    #[clippy::version = \"1.63.0\"]\n+    #[clippy::version = \"1.64.0\"]\n     pub DEFAULT_INSTEAD_OF_ITER_EMPTY,\n     style,\n     \"check `std::iter::Empty::default()` and replace with `std::iter::empty()`\""}, {"sha": "b965d27afce359754e5f472d053849afcbaa1742", "filename": "clippy_lints/src/dereference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e279f22a91ea633d88da154631a494eb09812829/clippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e279f22a91ea633d88da154631a494eb09812829/clippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdereference.rs?ref=e279f22a91ea633d88da154631a494eb09812829", "patch": "@@ -135,7 +135,7 @@ declare_clippy_lint! {\n     /// let x = String::new();\n     /// let y: &str = &x;\n     /// ```\n-    #[clippy::version = \"1.60.0\"]\n+    #[clippy::version = \"1.64.0\"]\n     pub EXPLICIT_AUTO_DEREF,\n     complexity,\n     \"dereferencing when the compiler would automatically dereference\""}, {"sha": "c0a0444485e3b8b8a2b3ce4a26169e57d9a0489d", "filename": "clippy_lints/src/loops/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e279f22a91ea633d88da154631a494eb09812829/clippy_lints%2Fsrc%2Floops%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e279f22a91ea633d88da154631a494eb09812829/clippy_lints%2Fsrc%2Floops%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmod.rs?ref=e279f22a91ea633d88da154631a494eb09812829", "patch": "@@ -635,7 +635,7 @@ declare_clippy_lint! {\n     ///     arr.into_iter().find(|&el| el == 1)\n     /// }\n     /// ```\n-    #[clippy::version = \"1.61.0\"]\n+    #[clippy::version = \"1.64.0\"]\n     pub MANUAL_FIND,\n     complexity,\n     \"manual implementation of `Iterator::find`\""}, {"sha": "6f25a2ed8e434f60b11025d4943f6127a9848f1c", "filename": "clippy_lints/src/manual_rem_euclid.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e279f22a91ea633d88da154631a494eb09812829/clippy_lints%2Fsrc%2Fmanual_rem_euclid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e279f22a91ea633d88da154631a494eb09812829/clippy_lints%2Fsrc%2Fmanual_rem_euclid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_rem_euclid.rs?ref=e279f22a91ea633d88da154631a494eb09812829", "patch": "@@ -27,7 +27,7 @@ declare_clippy_lint! {\n     /// let x: i32 = 24;\n     /// let rem = x.rem_euclid(4);\n     /// ```\n-    #[clippy::version = \"1.63.0\"]\n+    #[clippy::version = \"1.64.0\"]\n     pub MANUAL_REM_EUCLID,\n     complexity,\n     \"manually reimplementing `rem_euclid`\""}, {"sha": "8476197bd12016bac7b600f5dd242c24f7f12129", "filename": "clippy_lints/src/manual_retain.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e279f22a91ea633d88da154631a494eb09812829/clippy_lints%2Fsrc%2Fmanual_retain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e279f22a91ea633d88da154631a494eb09812829/clippy_lints%2Fsrc%2Fmanual_retain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_retain.rs?ref=e279f22a91ea633d88da154631a494eb09812829", "patch": "@@ -43,7 +43,7 @@ declare_clippy_lint! {\n     /// let mut vec = vec![0, 1, 2];\n     /// vec.retain(|x| x % 2 == 0);\n     /// ```\n-    #[clippy::version = \"1.63.0\"]\n+    #[clippy::version = \"1.64.0\"]\n     pub MANUAL_RETAIN,\n     perf,\n     \"`retain()` is simpler and the same functionalitys\""}]}