{"sha": "43c353fff73a1ee38d0ec29042e42bdeea05c191", "node_id": "C_kwDOAAsO6NoAKDQzYzM1M2ZmZjczYTFlZTM4ZDBlYzI5MDQyZTQyYmRlZWEwNWMxOTE", "commit": {"author": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2022-10-23T19:29:15Z"}, "committer": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2022-11-07T20:44:25Z"}, "message": "simplification: do not process the ArrayChunks remainder in fold()", "tree": {"sha": "dc87bdc9de94d801be79167e5b3dd785577ea6bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc87bdc9de94d801be79167e5b3dd785577ea6bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43c353fff73a1ee38d0ec29042e42bdeea05c191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43c353fff73a1ee38d0ec29042e42bdeea05c191", "html_url": "https://github.com/rust-lang/rust/commit/43c353fff73a1ee38d0ec29042e42bdeea05c191", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43c353fff73a1ee38d0ec29042e42bdeea05c191/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfcce8e684c5e1bb2f9a74e55debf801ef27706f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfcce8e684c5e1bb2f9a74e55debf801ef27706f", "html_url": "https://github.com/rust-lang/rust/commit/cfcce8e684c5e1bb2f9a74e55debf801ef27706f"}], "stats": {"total": 23, "additions": 4, "deletions": 19}, "files": [{"sha": "9bd135007b4a6b520a76b19782e03f619f32dde1", "filename": "library/core/src/iter/adapters/array_chunks.rs", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/43c353fff73a1ee38d0ec29042e42bdeea05c191/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Farray_chunks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43c353fff73a1ee38d0ec29042e42bdeea05c191/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Farray_chunks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Farray_chunks.rs?ref=43c353fff73a1ee38d0ec29042e42bdeea05c191", "patch": "@@ -209,10 +209,6 @@ where\n         Self: Sized,\n         F: FnMut(B, Self::Item) -> B,\n     {\n-        if self.remainder.is_some() {\n-            return init;\n-        }\n-\n         let mut accum = init;\n         let inner_len = self.iter.size();\n         let mut i = 0;\n@@ -233,20 +229,8 @@ where\n             i += N;\n         }\n \n-        let remainder = inner_len % N;\n-\n-        let mut tail = MaybeUninit::uninit_array();\n-        let mut guard = array::Guard { array_mut: &mut tail, initialized: 0 };\n-        for i in 0..remainder {\n-            // SAFETY: the remainder was not visited by the previous loop, so we're still only\n-            // accessing each element once\n-            let val = unsafe { self.iter.__iterator_get_unchecked(inner_len - remainder + i) };\n-            guard.array_mut[i].write(val);\n-            guard.initialized = i + 1;\n-        }\n-        mem::forget(guard);\n-        // SAFETY: the loop above initialized elements up to the `remainder` index\n-        self.remainder = Some(unsafe { array::IntoIter::new_unchecked(tail, 0..remainder) });\n+        // unlike try_fold this method does not need to take care of the remainder\n+        // since `self` will be dropped\n \n         accum\n     }"}, {"sha": "ef4a7e53bdd339caa6f7b22fbfb37fb16927b201", "filename": "library/core/tests/iter/adapters/array_chunks.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/43c353fff73a1ee38d0ec29042e42bdeea05c191/library%2Fcore%2Ftests%2Fiter%2Fadapters%2Farray_chunks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43c353fff73a1ee38d0ec29042e42bdeea05c191/library%2Fcore%2Ftests%2Fiter%2Fadapters%2Farray_chunks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fiter%2Fadapters%2Farray_chunks.rs?ref=43c353fff73a1ee38d0ec29042e42bdeea05c191", "patch": "@@ -139,7 +139,8 @@ fn test_iterator_array_chunks_fold() {\n     let result =\n         (0..10).map(|_| CountDrop::new(&count)).array_chunks::<3>().fold(0, |acc, _item| acc + 1);\n     assert_eq!(result, 3);\n-    assert_eq!(count.get(), 10);\n+    // fold impls may or may not process the remainder\n+    assert!(count.get() <= 10 && count.get() >= 9);\n }\n \n #[test]"}]}