{"sha": "912a9d0ad8e4c8b8a6c200d104a98982b3a07aeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMmE5ZDBhZDhlNGM4YjhhNmMyMDBkMTA0YTk4OTgyYjNhMDdhZWI=", "commit": {"author": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2016-07-05T22:07:26Z"}, "committer": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2016-07-05T22:07:26Z"}, "message": "Have verify() return a bool rather than a generic RuntimeError", "tree": {"sha": "71505651da6ccad699a63dec692c8fee908d32a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71505651da6ccad699a63dec692c8fee908d32a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/912a9d0ad8e4c8b8a6c200d104a98982b3a07aeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/912a9d0ad8e4c8b8a6c200d104a98982b3a07aeb", "html_url": "https://github.com/rust-lang/rust/commit/912a9d0ad8e4c8b8a6c200d104a98982b3a07aeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/912a9d0ad8e4c8b8a6c200d104a98982b3a07aeb/comments", "author": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab5309e9e8467508766aee176dc121672d606524", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab5309e9e8467508766aee176dc121672d606524", "html_url": "https://github.com/rust-lang/rust/commit/ab5309e9e8467508766aee176dc121672d606524"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "ce5ab9fab844c1ae4f25a5667146b862bb210502", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/912a9d0ad8e4c8b8a6c200d104a98982b3a07aeb/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/912a9d0ad8e4c8b8a6c200d104a98982b3a07aeb/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=912a9d0ad8e4c8b8a6c200d104a98982b3a07aeb", "patch": "@@ -32,15 +32,15 @@ def get(url, path, verbose=False):\n     try:\n         download(sha_path, sha_url, verbose)\n         if os.path.exists(path):\n-            try:\n-                verify(path, sha_path, verbose)\n+            if verify(path, sha_path, verbose):\n                 print(\"using already-download file \" + path)\n                 return\n-            except Exception as e:\n-                print(\"failed verification for already-download file \" + path)\n+            else:\n+                print(\"ignoring already-download file \" + path + \" due to failed verification\")\n                 os.unlink(path)\n         download(temp_path, url, verbose)\n-        verify(temp_path, sha_path, verbose)\n+        if not verify(temp_path, sha_path, verbose):\n+            raise RuntimeError(\"failed verification\")\n         print(\"moving {} to {}\".format(temp_path, path))\n         shutil.move(temp_path, path)\n     finally:\n@@ -72,13 +72,12 @@ def verify(path, sha_path, verbose):\n         found = hashlib.sha256(f.read()).hexdigest()\n     with open(sha_path, \"r\") as f:\n         expected, _ = f.readline().split()\n-    if found != expected:\n-        err = (\"invalid checksum:\\n\"\n+    verified = found == expected\n+    if not verified and verbose:\n+        print(\"invalid checksum:\\n\"\n                \"    found:    {}\\n\"\n                \"    expected: {}\".format(found, expected))\n-        if verbose:\n-            raise RuntimeError(err)\n-        sys.exit(err)\n+    return verified\n \n \n def unpack(tarball, dst, verbose=False, match=None):"}]}