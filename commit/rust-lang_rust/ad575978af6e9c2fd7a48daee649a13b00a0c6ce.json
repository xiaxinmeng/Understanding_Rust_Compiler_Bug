{"sha": "ad575978af6e9c2fd7a48daee649a13b00a0c6ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNTc1OTc4YWY2ZTljMmZkN2E0OGRhZWU2NDlhMTNiMDBhMGM2Y2U=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-23T16:51:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-23T16:51:04Z"}, "message": "Rollup merge of #62523 - pnkfelix:delay-bug-to-resolve-issue-62203-ice, r=varkor\n\nDelay bug to resolve HRTB ICE\n\nFix #62203", "tree": {"sha": "a43c1ad65d8be1811d16c2bc5ea69bd0ea8c7b48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a43c1ad65d8be1811d16c2bc5ea69bd0ea8c7b48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad575978af6e9c2fd7a48daee649a13b00a0c6ce", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdNzr4CRBK7hj4Ov3rIwAAdHIIACF7tDHZ1ZYjjzWyygFF8D0i\n4Yfut08Xy9QzkGM2Oi95XYtfreWFEfDhe2QcRZE6PdqUZhC8DNUqKN8Q3/MZ/vfO\nVRrph6vgUciYhri9Zv41vKNA0eUc88B1KT3x8P9aScGfcvVsll8hQh+RuUR73zx+\n6MBXS2+gQASNIUjiuI8TV83F1tElckBtmoqr61OddHhRmUGqi5mnk10SYhY7xVQF\njJERbGCbxwRUrk4DSU9kQD2Osi6yIQJdXUhutGPVrP1bO4lprYwTYykvRl5k1U32\nZ1oJBz9w7RFaSbGA7h0FadJIKGfD/fup7WxhEsyDuUsrs0iKDu5VgfA74diapbU=\n=ktKx\n-----END PGP SIGNATURE-----\n", "payload": "tree a43c1ad65d8be1811d16c2bc5ea69bd0ea8c7b48\nparent 52e9e44c7f25c470d7383228c6af7c6d481c8887\nparent 837fe7bbe354557c9323b1b9d288584fa077f950\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1563900664 -0400\ncommitter GitHub <noreply@github.com> 1563900664 -0400\n\nRollup merge of #62523 - pnkfelix:delay-bug-to-resolve-issue-62203-ice, r=varkor\n\nDelay bug to resolve HRTB ICE\n\nFix #62203\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad575978af6e9c2fd7a48daee649a13b00a0c6ce", "html_url": "https://github.com/rust-lang/rust/commit/ad575978af6e9c2fd7a48daee649a13b00a0c6ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad575978af6e9c2fd7a48daee649a13b00a0c6ce/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52e9e44c7f25c470d7383228c6af7c6d481c8887", "url": "https://api.github.com/repos/rust-lang/rust/commits/52e9e44c7f25c470d7383228c6af7c6d481c8887", "html_url": "https://github.com/rust-lang/rust/commit/52e9e44c7f25c470d7383228c6af7c6d481c8887"}, {"sha": "837fe7bbe354557c9323b1b9d288584fa077f950", "url": "https://api.github.com/repos/rust-lang/rust/commits/837fe7bbe354557c9323b1b9d288584fa077f950", "html_url": "https://github.com/rust-lang/rust/commit/837fe7bbe354557c9323b1b9d288584fa077f950"}], "stats": {"total": 91, "additions": 82, "deletions": 9}, "files": [{"sha": "4bfe953e45c0bb601d80d72f8cf25eb5ff701602", "filename": "src/librustc/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ad575978af6e9c2fd7a48daee649a13b00a0c6ce/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad575978af6e9c2fd7a48daee649a13b00a0c6ce/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=ad575978af6e9c2fd7a48daee649a13b00a0c6ce", "patch": "@@ -764,16 +764,17 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n             }\n         }\n \n-        span_bug!(\n+        // Errors in earlier passes can yield error variables without\n+        // resolution errors here; delay ICE in favor of those errors.\n+        self.tcx().sess.delay_span_bug(\n             self.var_infos[node_idx].origin.span(),\n-            \"collect_error_for_expanding_node() could not find \\\n-             error for var {:?} in universe {:?}, lower_bounds={:#?}, \\\n-             upper_bounds={:#?}\",\n-            node_idx,\n-            node_universe,\n-            lower_bounds,\n-            upper_bounds\n-        );\n+            &format!(\"collect_error_for_expanding_node() could not find \\\n+                      error for var {:?} in universe {:?}, lower_bounds={:#?}, \\\n+                      upper_bounds={:#?}\",\n+                     node_idx,\n+                     node_universe,\n+                     lower_bounds,\n+                     upper_bounds));\n     }\n \n     fn collect_concrete_regions("}, {"sha": "454d7e5e9cdea8c97c43968bcb2ff226ed3bb8ae", "filename": "src/test/ui/hrtb/issue-62203-hrtb-ice.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/ad575978af6e9c2fd7a48daee649a13b00a0c6ce/src%2Ftest%2Fui%2Fhrtb%2Fissue-62203-hrtb-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad575978af6e9c2fd7a48daee649a13b00a0c6ce/src%2Ftest%2Fui%2Fhrtb%2Fissue-62203-hrtb-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhrtb%2Fissue-62203-hrtb-ice.rs?ref=ad575978af6e9c2fd7a48daee649a13b00a0c6ce", "patch": "@@ -0,0 +1,50 @@\n+trait T0<'a, A> {\n+    type O;\n+}\n+\n+struct L<T> {\n+    f: T,\n+}\n+\n+// explicitly named variants of what one would normally denote by the\n+// unit type `()`. Why do this? So that we can differentiate them in\n+// the diagnostic output.\n+struct Unit1;\n+struct Unit2;\n+struct Unit3;\n+struct Unit4;\n+\n+impl<'a, A, T> T0<'a, A> for L<T>\n+where\n+    T: FnMut(A) -> Unit3,\n+{\n+    type O = T::Output;\n+}\n+\n+trait T1: for<'r> Ty<'r> {\n+    fn m<'a, B: Ty<'a>, F>(&self, f: F) -> Unit1\n+    where\n+        F: for<'r> T0<'r, (<Self as Ty<'r>>::V,), O = <B as Ty<'r>>::V>,\n+    {\n+        unimplemented!();\n+    }\n+}\n+\n+trait Ty<'a> {\n+    type V;\n+}\n+\n+fn main() {\n+    let v = Unit2.m(\n+        //~^ ERROR type mismatch\n+        //~| ERROR type mismatch\n+        L {\n+            f : |x| { drop(x); Unit4 }\n+        });\n+}\n+\n+impl<'a> Ty<'a> for Unit2 {\n+    type V = &'a u8;\n+}\n+\n+impl T1 for Unit2 {}"}, {"sha": "c2d0e0c2a26bc077ed41b93068e730b08fa50b84", "filename": "src/test/ui/hrtb/issue-62203-hrtb-ice.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ad575978af6e9c2fd7a48daee649a13b00a0c6ce/src%2Ftest%2Fui%2Fhrtb%2Fissue-62203-hrtb-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad575978af6e9c2fd7a48daee649a13b00a0c6ce/src%2Ftest%2Fui%2Fhrtb%2Fissue-62203-hrtb-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhrtb%2Fissue-62203-hrtb-ice.stderr?ref=ad575978af6e9c2fd7a48daee649a13b00a0c6ce", "patch": "@@ -0,0 +1,22 @@\n+error[E0271]: type mismatch resolving `for<'r> <L<[closure@$DIR/issue-62203-hrtb-ice.rs:42:17: 42:39]> as T0<'r, (<Unit2 as Ty<'r>>::V,)>>::O == <_ as Ty<'r>>::V`\n+  --> $DIR/issue-62203-hrtb-ice.rs:38:19\n+   |\n+LL |     let v = Unit2.m(\n+   |                   ^ expected struct `Unit4`, found associated type\n+   |\n+   = note: expected type `Unit4`\n+              found type `<_ as Ty<'_>>::V`\n+\n+error[E0271]: type mismatch resolving `<[closure@$DIR/issue-62203-hrtb-ice.rs:42:17: 42:39] as std::ops::FnOnce<((&u8,),)>>::Output == Unit3`\n+  --> $DIR/issue-62203-hrtb-ice.rs:38:19\n+   |\n+LL |     let v = Unit2.m(\n+   |                   ^ expected struct `Unit4`, found struct `Unit3`\n+   |\n+   = note: expected type `Unit4`\n+              found type `Unit3`\n+   = note: required because of the requirements on the impl of `for<'r> T0<'r, (<Unit2 as Ty<'r>>::V,)>` for `L<[closure@$DIR/issue-62203-hrtb-ice.rs:42:17: 42:39]>`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0271`."}]}