{"sha": "fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlODU4NTZkYzk0NWM3ZTVlYjgzZTA1YmRiZDcyZmUxYWNkNmQxYzA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-17T18:21:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-17T18:21:44Z"}, "message": "auto merge of #10863 : cadencemarseille/rust/patch-handle-ENOENT, r=alexcrichton\n\nTranslate ENOENT to IoErrorKind::FileNotFound.", "tree": {"sha": "e9a65bddef89b630cf39cb6adc21208238172971", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9a65bddef89b630cf39cb6adc21208238172971"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0", "html_url": "https://github.com/rust-lang/rust/commit/fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b870ce7a9fe1368462c3ba8b62a1f85c9e5444ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/b870ce7a9fe1368462c3ba8b62a1f85c9e5444ce", "html_url": "https://github.com/rust-lang/rust/commit/b870ce7a9fe1368462c3ba8b62a1f85c9e5444ce"}, {"sha": "33ca3e35bebdb3f1b718feb374df1fa24a1ad73a", "url": "https://api.github.com/repos/rust-lang/rust/commits/33ca3e35bebdb3f1b718feb374df1fa24a1ad73a", "html_url": "https://github.com/rust-lang/rust/commit/33ca3e35bebdb3f1b718feb374df1fa24a1ad73a"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "9f2b19ac5fd6901d99390aa1bd1c9e4317c44510", "filename": "src/librustuv/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0/src%2Flibrustuv%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0/src%2Flibrustuv%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Flib.rs?ref=fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0", "patch": "@@ -337,6 +337,7 @@ pub fn uv_error_to_io_error(uverr: UvError) -> IoError {\n             EACCES => PermissionDenied,\n             ECONNREFUSED => ConnectionRefused,\n             ECONNRESET => ConnectionReset,\n+            ENOENT => FileNotFound,\n             ENOTCONN => NotConnected,\n             EPIPE => BrokenPipe,\n             ECONNABORTED => ConnectionAborted,"}, {"sha": "0e5b50fd310d070721a22af81d6dcbc3cc8c1c81", "filename": "src/librustuv/uvll.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0/src%2Flibrustuv%2Fuvll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0/src%2Flibrustuv%2Fuvll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Fuvll.rs?ref=fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0", "patch": "@@ -44,6 +44,7 @@ pub static EOF: c_int = -4095;\n pub static UNKNOWN: c_int = -4094;\n \n // uv-errno.h redefines error codes for windows, but not for unix...\n+// https://github.com/joyent/libuv/blob/master/include/uv-errno.h\n \n #[cfg(windows)]\n pub mod errors {\n@@ -52,6 +53,7 @@ pub mod errors {\n     pub static EACCES: c_int = -4092;\n     pub static ECONNREFUSED: c_int = -4078;\n     pub static ECONNRESET: c_int = -4077;\n+    pub static ENOENT: c_int = -4058;\n     pub static ENOTCONN: c_int = -4053;\n     pub static EPIPE: c_int = -4047;\n     pub static ECONNABORTED: c_int = -4079;\n@@ -66,6 +68,7 @@ pub mod errors {\n     pub static EACCES: c_int = -libc::EACCES;\n     pub static ECONNREFUSED: c_int = -libc::ECONNREFUSED;\n     pub static ECONNRESET: c_int = -libc::ECONNRESET;\n+    pub static ENOENT: c_int = -libc::ENOENT;\n     pub static ENOTCONN: c_int = -libc::ENOTCONN;\n     pub static EPIPE: c_int = -libc::EPIPE;\n     pub static ECONNABORTED: c_int = -libc::ECONNABORTED;"}, {"sha": "2766aa9ad27383467816f9d743b53268a80b226f", "filename": "src/libstd/io/net/unix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0/src%2Flibstd%2Fio%2Fnet%2Funix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0/src%2Flibstd%2Fio%2Fnet%2Funix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Funix.rs?ref=fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0", "patch": "@@ -191,7 +191,7 @@ mod tests {\n         do run_in_mt_newsched_task {\n             let mut called = false;\n             io_error::cond.trap(|e| {\n-                assert_eq!(e.kind, OtherIoError);\n+                assert_eq!(e.kind, FileNotFound);\n                 called = true;\n             }).inside(|| {\n                 let stream = UnixStream::connect(&(\"path/to/nowhere\"));"}, {"sha": "3c4d06bc71fdf08fc8745060b56effda382a0c74", "filename": "src/libstd/run.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0/src%2Flibstd%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0/src%2Flibstd%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frun.rs?ref=fe85856dc945c7e5eb83e05bdbd72fe1acd6d1c0", "patch": "@@ -339,7 +339,7 @@ mod tests {\n     use task::spawn;\n     use unstable::running_on_valgrind;\n     use io::native::file;\n-    use io::{Writer, Reader, io_error};\n+    use io::{FileNotFound, OtherIoError, Reader, Writer, io_error};\n \n     #[test]\n     #[cfg(not(target_os=\"android\"))] // FIXME(#10380)\n@@ -353,9 +353,14 @@ mod tests {\n \n     #[test]\n     fn test_process_output_fail_to_start() {\n+        // If the executable does not exist, then the io_error condition should be raised with\n+        // IoErrorKind FileNotFound.\n+\n         let mut trapped_io_error = false;\n-        let opt_outp = io_error::cond.trap(|_| {\n+        let opt_outp = io_error::cond.trap(|e| {\n             trapped_io_error = true;\n+            // FIXME(#11023)\n+            assert_eq!(e.kind, if cfg!(windows) { OtherIoError } else { FileNotFound });\n         }).inside(|| -> Option<run::ProcessOutput> {\n             run::process_output(\"no-binary-by-this-name-should-exist\", [])\n         });"}]}