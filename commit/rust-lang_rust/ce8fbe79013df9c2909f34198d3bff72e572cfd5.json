{"sha": "ce8fbe79013df9c2909f34198d3bff72e572cfd5", "node_id": "C_kwDOAAsO6NoAKGNlOGZiZTc5MDEzZGY5YzI5MDlmMzQxOThkM2JmZjcyZTU3MmNmZDU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-06T06:05:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-06T06:05:40Z"}, "message": "Auto merge of #106429 - djkoloski:add_vendor_to_fuchsia_target_triple, r=nagisa\n\nAdd vendor to Fuchsia's target triple\n\nHistorically, Rust's Fuchsia targets have been labeled x86_64-fuchsia and aarch64-fuchsia. However, they should technically contain vendor information. This CL changes Fuchsia's target triples to include the \"unknown\" vendor since Clang now does normalization and handles all triple spellings.\n\nThis was previously attempted in #90510, which was closed due to inactivity.", "tree": {"sha": "01c8a43a6b03ba9ac6099f1eeeddb51a53b8298e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01c8a43a6b03ba9ac6099f1eeeddb51a53b8298e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce8fbe79013df9c2909f34198d3bff72e572cfd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce8fbe79013df9c2909f34198d3bff72e572cfd5", "html_url": "https://github.com/rust-lang/rust/commit/ce8fbe79013df9c2909f34198d3bff72e572cfd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce8fbe79013df9c2909f34198d3bff72e572cfd5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0853d9677ca903cd650d5c4b93b1c55e7995cf01", "url": "https://api.github.com/repos/rust-lang/rust/commits/0853d9677ca903cd650d5c4b93b1c55e7995cf01", "html_url": "https://github.com/rust-lang/rust/commit/0853d9677ca903cd650d5c4b93b1c55e7995cf01"}, {"sha": "f6ef0397756b39d16ee0b97c4ffcb3185ca2a9ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6ef0397756b39d16ee0b97c4ffcb3185ca2a9ec", "html_url": "https://github.com/rust-lang/rust/commit/f6ef0397756b39d16ee0b97c4ffcb3185ca2a9ec"}], "stats": {"total": 178, "additions": 89, "deletions": 89}, "files": [{"sha": "da493f0c2603c0e7104a2b213a4613fc32ec1ec3", "filename": "compiler/rustc_target/src/spec/aarch64_unknown_fuchsia.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce8fbe79013df9c2909f34198d3bff72e572cfd5/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_fuchsia.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce8fbe79013df9c2909f34198d3bff72e572cfd5/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_fuchsia.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_fuchsia.rs?ref=ce8fbe79013df9c2909f34198d3bff72e572cfd5", "patch": "@@ -2,7 +2,7 @@ use crate::spec::{SanitizerSet, Target, TargetOptions};\n \n pub fn target() -> Target {\n     Target {\n-        llvm_target: \"aarch64-fuchsia\".into(),\n+        llvm_target: \"aarch64-unknown-fuchsia\".into(),\n         pointer_width: 64,\n         data_layout: \"e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128\".into(),\n         arch: \"aarch64\".into(),", "previous_filename": "compiler/rustc_target/src/spec/aarch64_fuchsia.rs"}, {"sha": "0fafa52a45b66aa155323f8835b23f7031adf75f", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce8fbe79013df9c2909f34198d3bff72e572cfd5/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce8fbe79013df9c2909f34198d3bff72e572cfd5/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=ce8fbe79013df9c2909f34198d3bff72e572cfd5", "patch": "@@ -1109,8 +1109,8 @@ supported_targets! {\n     (\"x86_64-apple-darwin\", x86_64_apple_darwin),\n     (\"i686-apple-darwin\", i686_apple_darwin),\n \n-    (\"aarch64-fuchsia\", aarch64_fuchsia),\n-    (\"x86_64-fuchsia\", x86_64_fuchsia),\n+    (\"aarch64-unknown-fuchsia\", aarch64_unknown_fuchsia),\n+    (\"x86_64-unknown-fuchsia\", x86_64_unknown_fuchsia),\n \n     (\"avr-unknown-gnu-atmega328\", avr_unknown_gnu_atmega328),\n "}, {"sha": "a3231d19f4c7253a5c16749e2ac653223317a6d3", "filename": "compiler/rustc_target/src/spec/x86_64_unknown_fuchsia.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce8fbe79013df9c2909f34198d3bff72e572cfd5/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_fuchsia.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce8fbe79013df9c2909f34198d3bff72e572cfd5/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_fuchsia.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_fuchsia.rs?ref=ce8fbe79013df9c2909f34198d3bff72e572cfd5", "patch": "@@ -8,7 +8,7 @@ pub fn target() -> Target {\n     base.supported_sanitizers = SanitizerSet::ADDRESS | SanitizerSet::CFI;\n \n     Target {\n-        llvm_target: \"x86_64-fuchsia\".into(),\n+        llvm_target: \"x86_64-unknown-fuchsia\".into(),\n         pointer_width: 64,\n         data_layout: \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\n             .into(),", "previous_filename": "compiler/rustc_target/src/spec/x86_64_fuchsia.rs"}, {"sha": "0070eca6ae2c7fbf27bc8ec2676a300f48849f84", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=ce8fbe79013df9c2909f34198d3bff72e572cfd5", "patch": "@@ -1085,12 +1085,12 @@ fn supported_sanitizers(\n \n     match &*target.triple {\n         \"aarch64-apple-darwin\" => darwin_libs(\"osx\", &[\"asan\", \"lsan\", \"tsan\"]),\n-        \"aarch64-fuchsia\" => common_libs(\"fuchsia\", \"aarch64\", &[\"asan\"]),\n+        \"aarch64-unknown-fuchsia\" => common_libs(\"fuchsia\", \"aarch64\", &[\"asan\"]),\n         \"aarch64-unknown-linux-gnu\" => {\n             common_libs(\"linux\", \"aarch64\", &[\"asan\", \"lsan\", \"msan\", \"tsan\", \"hwasan\"])\n         }\n         \"x86_64-apple-darwin\" => darwin_libs(\"osx\", &[\"asan\", \"lsan\", \"tsan\"]),\n-        \"x86_64-fuchsia\" => common_libs(\"fuchsia\", \"x86_64\", &[\"asan\"]),\n+        \"x86_64-unknown-fuchsia\" => common_libs(\"fuchsia\", \"x86_64\", &[\"asan\"]),\n         \"x86_64-unknown-freebsd\" => common_libs(\"freebsd\", \"x86_64\", &[\"asan\", \"msan\", \"tsan\"]),\n         \"x86_64-unknown-netbsd\" => {\n             common_libs(\"netbsd\", \"x86_64\", &[\"asan\", \"lsan\", \"msan\", \"tsan\"])"}, {"sha": "0f5df95a0dd4bce79eb176e51646271f8fd25f14", "filename": "src/ci/docker/host-x86_64/dist-various-2/Dockerfile", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2FDockerfile?ref=ce8fbe79013df9c2909f34198d3bff72e572cfd5", "patch": "@@ -30,18 +30,18 @@ RUN apt-key adv --batch --yes --keyserver keyserver.ubuntu.com --recv-keys 74DA7\n RUN add-apt-repository -y 'deb https://apt.dilos.org/dilos dilos2 main'\n \n ENV \\\n-    AR_x86_64_fuchsia=x86_64-fuchsia-ar \\\n-    CC_x86_64_fuchsia=x86_64-fuchsia-clang \\\n-    CFLAGS_x86_64_fuchsia=\"--target=x86_64-fuchsia --sysroot=/usr/local/core-linux-amd64-fuchsia-sdk/arch/x64/sysroot -I/usr/local/core-linux-amd64-fuchsia-sdk/pkg/fdio/include\" \\\n-    CXX_x86_64_fuchsia=x86_64-fuchsia-clang++ \\\n-    CXXFLAGS_x86_64_fuchsia=\"--target=x86_64-fuchsia --sysroot=/usr/local/core-linux-amd64-fuchsia-sdk/arch/x64/sysroot -I/usr/local/core-linux-amd64-fuchsia-sdk/pkg/fdio/include\" \\\n-    LDFLAGS_x86_64_fuchsia=\"--target=x86_64-fuchsia --sysroot=/usr/local/core-linux-amd64-fuchsia-sdk/arch/x64/sysroot -L/usr/local/core-linux-amd64-fuchsia-sdk/arch/x64/lib\" \\\n-    AR_aarch64_fuchsia=aarch64-fuchsia-ar \\\n-    CC_aarch64_fuchsia=aarch64-fuchsia-clang \\\n-    CFLAGS_aarch64_fuchsia=\"--target=aarch64-fuchsia --sysroot=/usr/local/core-linux-amd64-fuchsia-sdk/arch/arm64/sysroot -I/usr/local/core-linux-amd64-fuchsia-sdk/pkg/fdio/include\" \\\n-    CXX_aarch64_fuchsia=aarch64-fuchsia-clang++ \\\n-    CXXFLAGS_aarch64_fuchsia=\"--target=aarch64-fuchsia --sysroot=/usr/local/core-linux-amd64-fuchsia-sdk/arch/arm64/sysroot -I/usr/local/core-linux-amd64-fuchsia-sdk/pkg/fdio/include\" \\\n-    LDFLAGS_aarch64_fuchsia=\"--target=aarch64-fuchsia --sysroot=/usr/local/core-linux-amd64-fuchsia-sdk/arch/arm64/sysroot -L/usr/local/core-linux-amd64-fuchsia-sdk/arch/arm64/lib\" \\\n+    AR_x86_64_unknown_fuchsia=x86_64-unknown-fuchsia-ar \\\n+    CC_x86_64_unknown_fuchsia=x86_64-unknown-fuchsia-clang \\\n+    CFLAGS_x86_64_unknown_fuchsia=\"--target=x86_64-unknown-fuchsia --sysroot=/usr/local/core-linux-amd64-fuchsia-sdk/arch/x64/sysroot -I/usr/local/core-linux-amd64-fuchsia-sdk/pkg/fdio/include\" \\\n+    CXX_x86_64_unknown_fuchsia=x86_64-unknown-fuchsia-clang++ \\\n+    CXXFLAGS_x86_64_unknown_fuchsia=\"--target=x86_64-unknown-fuchsia --sysroot=/usr/local/core-linux-amd64-fuchsia-sdk/arch/x64/sysroot -I/usr/local/core-linux-amd64-fuchsia-sdk/pkg/fdio/include\" \\\n+    LDFLAGS_x86_64_unknown_fuchsia=\"--target=x86_64-unknown-fuchsia --sysroot=/usr/local/core-linux-amd64-fuchsia-sdk/arch/x64/sysroot -L/usr/local/core-linux-amd64-fuchsia-sdk/arch/x64/lib\" \\\n+    AR_aarch64_unknown_fuchsia=aarch64-unknown-fuchsia-ar \\\n+    CC_aarch64_unknown_fuchsia=aarch64-unknown-fuchsia-clang \\\n+    CFLAGS_aarch64_unknown_fuchsia=\"--target=aarch64-unknown-fuchsia --sysroot=/usr/local/core-linux-amd64-fuchsia-sdk/arch/arm64/sysroot -I/usr/local/core-linux-amd64-fuchsia-sdk/pkg/fdio/include\" \\\n+    CXX_aarch64_unknown_fuchsia=aarch64-unknown-fuchsia-clang++ \\\n+    CXXFLAGS_aarch64_unknown_fuchsia=\"--target=aarch64-unknown-fuchsia --sysroot=/usr/local/core-linux-amd64-fuchsia-sdk/arch/arm64/sysroot -I/usr/local/core-linux-amd64-fuchsia-sdk/pkg/fdio/include\" \\\n+    LDFLAGS_aarch64_unknown_fuchsia=\"--target=aarch64-unknown-fuchsia --sysroot=/usr/local/core-linux-amd64-fuchsia-sdk/arch/arm64/sysroot -L/usr/local/core-linux-amd64-fuchsia-sdk/arch/arm64/lib\" \\\n     AR_sparcv9_sun_solaris=sparcv9-sun-solaris2.10-ar \\\n     CC_sparcv9_sun_solaris=sparcv9-sun-solaris2.10-gcc \\\n     CXX_sparcv9_sun_solaris=sparcv9-sun-solaris2.10-g++ \\\n@@ -99,19 +99,19 @@ RUN /tmp/freebsd-toolchain.sh i686\n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n-ENV CARGO_TARGET_X86_64_FUCHSIA_AR /usr/local/bin/llvm-ar\n-ENV CARGO_TARGET_X86_64_FUCHSIA_RUSTFLAGS \\\n+ENV CARGO_TARGET_X86_64_UNKNOWN_FUCHSIA_AR /usr/local/bin/llvm-ar\n+ENV CARGO_TARGET_X86_64_UNKNOWN_FUCHSIA_RUSTFLAGS \\\n -C link-arg=--sysroot=/usr/local/core-linux-amd64-fuchsia-sdk/arch/x64/sysroot \\\n -Lnative=/usr/local/core-linux-amd64-fuchsia-sdk/arch/x64/sysroot/lib \\\n -Lnative=/usr/local/core-linux-amd64-fuchsia-sdk/arch/x64/lib\n-ENV CARGO_TARGET_AARCH64_FUCHSIA_AR /usr/local/bin/llvm-ar\n-ENV CARGO_TARGET_AARCH64_FUCHSIA_RUSTFLAGS \\\n+ENV CARGO_TARGET_AARCH64_UNKNOWN_FUCHSIA_AR /usr/local/bin/llvm-ar\n+ENV CARGO_TARGET_AARCH64_UNKNOWN_FUCHSIA_RUSTFLAGS \\\n -C link-arg=--sysroot=/usr/local/core-linux-amd64-fuchsia-sdk/arch/arm64/sysroot \\\n -Lnative=/usr/local/core-linux-amd64-fuchsia-sdk/arch/arm64/sysroot/lib \\\n -Lnative=/usr/local/core-linux-amd64-fuchsia-sdk/arch/arm64/lib\n \n-ENV TARGETS=x86_64-fuchsia\n-ENV TARGETS=$TARGETS,aarch64-fuchsia\n+ENV TARGETS=x86_64-unknown-fuchsia\n+ENV TARGETS=$TARGETS,aarch64-unknown-fuchsia\n ENV TARGETS=$TARGETS,wasm32-unknown-unknown\n ENV TARGETS=$TARGETS,wasm32-wasi\n ENV TARGETS=$TARGETS,sparcv9-sun-solaris"}, {"sha": "d762b4672c62ec0e49b8ecbd23cc378cc37a8ffd", "filename": "src/ci/docker/host-x86_64/dist-various-2/build-fuchsia-toolchain.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2Fbuild-fuchsia-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2Fbuild-fuchsia-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2Fbuild-fuchsia-toolchain.sh?ref=ce8fbe79013df9c2909f34198d3bff72e572cfd5", "patch": "@@ -29,9 +29,9 @@ install_clang() {\n   # CFLAGS and CXXFLAGS env variables in main Dockerfile handle sysroot linking\n   for arch in x86_64 aarch64; do\n     for tool in clang clang++; do\n-      ln -s /usr/local/bin/${tool} /usr/local/bin/${arch}-fuchsia-${tool}\n+      ln -s /usr/local/bin/${tool} /usr/local/bin/${arch}-unknown-fuchsia-${tool}\n     done\n-    ln -s /usr/local/bin/llvm-ar /usr/local/bin/${arch}-fuchsia-ar\n+    ln -s /usr/local/bin/llvm-ar /usr/local/bin/${arch}-unknown-fuchsia-ar\n   done\n \n   popd > /dev/null"}, {"sha": "c8d1ff9aefb7e49c96b5c151edb1f351afa88193", "filename": "src/ci/docker/scripts/fuchsia-test-runner.py", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Fci%2Fdocker%2Fscripts%2Ffuchsia-test-runner.py", "raw_url": "https://github.com/rust-lang/rust/raw/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Fci%2Fdocker%2Fscripts%2Ffuchsia-test-runner.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Ffuchsia-test-runner.py?ref=ce8fbe79013df9c2909f34198d3bff72e572cfd5", "patch": "@@ -4,7 +4,7 @@\n The Rust toolchain test runner for Fuchsia.\n \n For instructions on running the compiler test suite, see\n-https://doc.rust-lang.org/stable/rustc/platform-support/fuchsia.html#aarch64-fuchsia-and-x86_64-fuchsia\n+https://doc.rust-lang.org/stable/rustc/platform-support/fuchsia.html#aarch64-unknown-fuchsia-and-x86_64-unknown-fuchsia\n \"\"\"\n \n import argparse\n@@ -110,9 +110,9 @@ def repo_dir(self):\n \n     def rustlib_dir(self):\n         if self.target_arch == \"x64\":\n-            return \"x86_64-fuchsia\"\n+            return \"x86_64-unknown-fuchsia\"\n         if self.target_arch == \"arm64\":\n-            return \"aarch64-fuchsia\"\n+            return \"aarch64-unknown-fuchsia\"\n         raise Exception(f\"Unrecognized target architecture {self.target_arch}\")\n \n     def libs_dir(self):"}, {"sha": "752f1cc4aba0304675f7b0e4bb49a1df67c069f7", "filename": "src/doc/rustc/src/SUMMARY.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md?ref=ce8fbe79013df9c2909f34198d3bff72e572cfd5", "patch": "@@ -26,7 +26,7 @@\n     - [armv7-unknown-linux-uclibceabi](platform-support/armv7-unknown-linux-uclibceabi.md)\n     - [armv7-unknown-linux-uclibceabihf](platform-support/armv7-unknown-linux-uclibceabihf.md)\n     - [\\*-android and \\*-androideabi](platform-support/android.md)\n-    - [\\*-fuchsia](platform-support/fuchsia.md)\n+    - [\\*-unknown-fuchsia](platform-support/fuchsia.md)\n     - [\\*-kmc-solid_\\*](platform-support/kmc-solid.md)\n     - [m68k-unknown-linux-gnu](platform-support/m68k-unknown-linux-gnu.md)\n     - [mips64-openwrt-linux-musl](platform-support/mips64-openwrt-linux-musl.md)"}, {"sha": "7ff26e420f1b3bdaec0684f812babc2d978e84cf", "filename": "src/doc/rustc/src/platform-support.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "raw_url": "https://github.com/rust-lang/rust/raw/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md?ref=ce8fbe79013df9c2909f34198d3bff72e572cfd5", "patch": "@@ -124,7 +124,7 @@ target | std | notes\n -------|:---:|-------\n `aarch64-apple-ios` | \u2713 | ARM64 iOS\n [`aarch64-apple-ios-sim`](platform-support/aarch64-apple-ios-sim.md) | \u2713 | Apple iOS Simulator on ARM64\n-`aarch64-fuchsia` | \u2713 | ARM64 Fuchsia\n+`aarch64-unknown-fuchsia` | \u2713 | ARM64 Fuchsia\n [`aarch64-linux-android`](platform-support/android.md) | \u2713 | ARM64 Android\n `aarch64-unknown-none-softfloat` | * | Bare ARM64, softfloat\n `aarch64-unknown-none` | * | Bare ARM64, hardfloat\n@@ -177,7 +177,7 @@ target | std | notes\n `wasm32-wasi` | \u2713 | WebAssembly with WASI\n `x86_64-apple-ios` | \u2713 | 64-bit x86 iOS\n [`x86_64-fortanix-unknown-sgx`](platform-support/x86_64-fortanix-unknown-sgx.md) | \u2713 | [Fortanix ABI] for 64-bit Intel SGX\n-`x86_64-fuchsia` | \u2713 | 64-bit Fuchsia\n+`x86_64-unknown-fuchsia` | \u2713 | 64-bit Fuchsia\n [`x86_64-linux-android`](platform-support/android.md) | \u2713 | 64-bit x86 Android\n `x86_64-pc-solaris` | \u2713 | 64-bit Solaris 10/11, illumos\n `x86_64-unknown-linux-gnux32` | \u2713 | 64-bit Linux (x32 ABI) (kernel 4.15, glibc 2.27)"}, {"sha": "95c242cc161e9a388525c8a5a281e8c78d1559b1", "filename": "src/doc/rustc/src/platform-support/fuchsia.md", "status": "modified", "additions": 47, "deletions": 47, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Ffuchsia.md", "raw_url": "https://github.com/rust-lang/rust/raw/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Ffuchsia.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Ffuchsia.md?ref=ce8fbe79013df9c2909f34198d3bff72e572cfd5", "patch": "@@ -1,4 +1,4 @@\n-# `aarch64-fuchsia` and `x86_64-fuchsia`\n+# `aarch64-unknown-fuchsia` and `x86_64-unknown-fuchsia`\n \n **Tier: 2**\n \n@@ -67,7 +67,7 @@ This walkthrough will cover:\n 1. Building a Fuchsia package.\n 1. Publishing and running a Fuchsia package to a Fuchsia emulator.\n \n-For the purposes of this walkthrough, we will only target `x86_64-fuchsia`.\n+For the purposes of this walkthrough, we will only target `x86_64-unknown-fuchsia`.\n \n ## Compiling a Rust binary targeting Fuchsia\n \n@@ -83,8 +83,8 @@ to handle the installation of Fuchsia targets for you. This can be done by issui\n the following commands:\n \n ```sh\n-rustup target add x86_64-fuchsia\n-rustup target add aarch64-fuchsia\n+rustup target add x86_64-unknown-fuchsia\n+rustup target add aarch64-unknown-fuchsia\n ```\n \n After installing our Fuchsia targets, we can now compile a Rust binary that targets\n@@ -127,7 +127,7 @@ during compilation:\n \n **`.cargo/config.toml`**\n ```txt\n-[target.x86_64-fuchsia]\n+[target.x86_64-unknown-fuchsia]\n \n rustflags = [\n     \"-Lnative=<SDK_PATH>/arch/x64/lib\",\n@@ -159,10 +159,10 @@ hello_fuchsia/\n Finally, we can build our rust binary as:\n \n ```sh\n-cargo build --target x86_64-fuchsia\n+cargo build --target x86_64-unknown-fuchsia\n ```\n \n-Now we have a Rust binary at `target/x86_64-fuchsia/debug/hello_fuchsia`,\n+Now we have a Rust binary at `target/x86_64-unknown-fuchsia/debug/hello_fuchsia`,\n targeting our desired Fuchsia target.\n \n **Current directory structure**\n@@ -171,7 +171,7 @@ hello_fuchsia/\n \u2523\u2501 src/\n \u2503  \u2517\u2501 main.rs\n \u2523\u2501 target/\n-\u2503  \u2517\u2501 x86_64-fuchsia/\n+\u2503  \u2517\u2501 x86_64-unknown-fuchsia/\n \u2503     \u2517\u2501 debug/\n \u2503        \u2517\u2501 hello_fuchsia\n \u2523\u2501 Cargo.toml\n@@ -193,19 +193,19 @@ configuration in `config.toml`:\n \n ```toml\n [build]\n-target = [\"<host_platform>\", \"aarch64-fuchsia\", \"x86_64-fuchsia\"]\n+target = [\"<host_platform>\", \"aarch64-unknown-fuchsia\", \"x86_64-unknown-fuchsia\"]\n \n [rust]\n lld = true\n \n [llvm]\n download-ci-llvm = false\n \n-[target.x86_64-fuchsia]\n+[target.x86_64-unknown-fuchsia]\n cc = \"clang\"\n cxx = \"clang++\"\n \n-[target.aarch64-fuchsia]\n+[target.aarch64-unknown-fuchsia]\n cc = \"clang\"\n cxx = \"clang++\"\n ```\n@@ -236,14 +236,14 @@ a script we name `config-env.sh`:\n # Configure this environment variable to be the path to the downloaded SDK\n export SDK_PATH=\"<SDK path goes here>\"\n \n-export CFLAGS_aarch64_fuchsia=\"--target=aarch64-fuchsia --sysroot=${SDK_PATH}/arch/arm64/sysroot -I${SDK_PATH}/pkg/fdio/include\"\n-export CXXFLAGS_aarch64_fuchsia=\"--target=aarch64-fuchsia --sysroot=${SDK_PATH}/arch/arm64/sysroot -I${SDK_PATH}/pkg/fdio/include\"\n-export LDFLAGS_aarch64_fuchsia=\"--target=aarch64-fuchsia --sysroot=${SDK_PATH}/arch/arm64/sysroot -L${SDK_PATH}/arch/arm64/lib\"\n-export CARGO_TARGET_AARCH64_FUCHSIA_RUSTFLAGS=\"-C link-arg=--sysroot=${SDK_PATH}/arch/arm64/sysroot -Lnative=${SDK_PATH}/arch/arm64/sysroot/lib -Lnative=${SDK_PATH}/arch/arm64/lib\"\n-export CFLAGS_x86_64_fuchsia=\"--target=x86_64-fuchsia --sysroot=${SDK_PATH}/arch/x64/sysroot -I${SDK_PATH}/pkg/fdio/include\"\n-export CXXFLAGS_x86_64_fuchsia=\"--target=x86_64-fuchsia --sysroot=${SDK_PATH}/arch/x64/sysroot -I${SDK_PATH}/pkg/fdio/include\"\n-export LDFLAGS_x86_64_fuchsia=\"--target=x86_64-fuchsia --sysroot=${SDK_PATH}/arch/x64/sysroot -L${SDK_PATH}/arch/x64/lib\"\n-export CARGO_TARGET_X86_64_FUCHSIA_RUSTFLAGS=\"-C link-arg=--sysroot=${SDK_PATH}/arch/x64/sysroot -Lnative=${SDK_PATH}/arch/x64/sysroot/lib -Lnative=${SDK_PATH}/arch/x64/lib\"\n+export CFLAGS_aarch64_unknown_fuchsia=\"--target=aarch64-unknown-fuchsia --sysroot=${SDK_PATH}/arch/arm64/sysroot -I${SDK_PATH}/pkg/fdio/include\"\n+export CXXFLAGS_aarch64_unknown_fuchsia=\"--target=aarch64-unknown-fuchsia --sysroot=${SDK_PATH}/arch/arm64/sysroot -I${SDK_PATH}/pkg/fdio/include\"\n+export LDFLAGS_aarch64_unknown_fuchsia=\"--target=aarch64-unknown-fuchsia --sysroot=${SDK_PATH}/arch/arm64/sysroot -L${SDK_PATH}/arch/arm64/lib\"\n+export CARGO_TARGET_AARCH64_UNKNOWN_FUCHSIA_RUSTFLAGS=\"-C link-arg=--sysroot=${SDK_PATH}/arch/arm64/sysroot -Lnative=${SDK_PATH}/arch/arm64/sysroot/lib -Lnative=${SDK_PATH}/arch/arm64/lib\"\n+export CFLAGS_x86_64_unknown_fuchsia=\"--target=x86_64-unknown-fuchsia --sysroot=${SDK_PATH}/arch/x64/sysroot -I${SDK_PATH}/pkg/fdio/include\"\n+export CXXFLAGS_x86_64_unknown_fuchsia=\"--target=x86_64-unknown-fuchsia --sysroot=${SDK_PATH}/arch/x64/sysroot -I${SDK_PATH}/pkg/fdio/include\"\n+export LDFLAGS_x86_64_unknown_fuchsia=\"--target=x86_64-unknown-fuchsia --sysroot=${SDK_PATH}/arch/x64/sysroot -L${SDK_PATH}/arch/x64/lib\"\n+export CARGO_TARGET_X86_64_UNKNOWN_FUCHSIA_RUSTFLAGS=\"-C link-arg=--sysroot=${SDK_PATH}/arch/x64/sysroot -Lnative=${SDK_PATH}/arch/x64/sysroot/lib -Lnative=${SDK_PATH}/arch/x64/lib\"\n ```\n \n Finally, the Rust compiler can be built and installed:\n@@ -288,7 +288,7 @@ hello_fuchsia/\n Using your freshly installed `rustc`, you can compile a binary for Fuchsia using\n the following options:\n \n-* `--target x86_64-fuchsia`/`--target aarch64-fuchsia`: Targets the Fuchsia\n+* `--target x86_64-unknown-fuchsia`/`--target aarch64-unknown-fuchsia`: Targets the Fuchsia\n   platform of your choice\n * `-Lnative ${SDK_PATH}/arch/${ARCH}/lib`: Link against Fuchsia libraries from\n   the SDK\n@@ -299,7 +299,7 @@ Putting it all together:\n \n ```sh\n # Configure these for the Fuchsia target of your choice\n-TARGET_ARCH=\"<x86_64-fuchsia|aarch64-fuchsia>\"\n+TARGET_ARCH=\"<x86_64-unknown-fuchsia|aarch64-unknown-fuchsia>\"\n ARCH=\"<x64|aarch64>\"\n \n rustc \\\n@@ -325,16 +325,16 @@ Before moving on, double check your directory structure:\n **Current directory structure**\n ```txt\n hello_fuchsia/\n-\u2523\u2501 src/                     (if using rustc)\n-\u2503   \u2517\u2501 hello_fuchsia.rs     ...\n-\u2523\u2501 bin/                     ...\n-\u2503  \u2517\u2501 hello_fuchsia         ...\n-\u2523\u2501 src/                     (if using cargo)\n-\u2503  \u2517\u2501 main.rs               ...\n-\u2517\u2501 target/                  ...\n-   \u2517\u2501 x86_64-fuchsia/       ...\n-      \u2517\u2501 debug/             ...\n-         \u2517\u2501 hello_fuchsia   ...\n+\u2523\u2501 src/                         (if using rustc)\n+\u2503   \u2517\u2501 hello_fuchsia.rs         ...\n+\u2523\u2501 bin/                         ...\n+\u2503  \u2517\u2501 hello_fuchsia             ...\n+\u2523\u2501 src/                         (if using cargo)\n+\u2503  \u2517\u2501 main.rs                   ...\n+\u2517\u2501 target/                      ...\n+   \u2517\u2501 x86_64-unknown-fuchsia/   ...\n+      \u2517\u2501 debug/                 ...\n+         \u2517\u2501 hello_fuchsia       ...\n ```\n \n With our Rust binary built, we can move to creating a Fuchsia package.\n@@ -371,7 +371,7 @@ package must contain one.\n \n **`pkg/hello_fuchsia.manifest` if using cargo**\n ```txt\n-bin/hello_fuchsia=target/x86_64-fuchsia/debug/hello_fuchsia\n+bin/hello_fuchsia=target/x86_64-unknown-fuchsia/debug/hello_fuchsia\n lib/ld.so.1=<SDK_PATH>/arch/x64/sysroot/dist/lib/ld.so.1\n lib/libfdio.so=<SDK_PATH>/arch/x64/dist/libfdio.so\n meta/package=pkg/meta/package\n@@ -546,16 +546,16 @@ structure will look like:\n **Final directory structure**\n ```txt\n hello_fuchsia/\n-\u2523\u2501 src/                     (if using rustc)\n-\u2503   \u2517\u2501 hello_fuchsia.rs     ...\n-\u2523\u2501 bin/                     ...\n-\u2503  \u2517\u2501 hello_fuchsia         ...\n-\u2523\u2501 src/                     (if using cargo)\n-\u2503  \u2517\u2501 main.rs               ...\n-\u2523\u2501 target/                  ...\n-\u2503  \u2517\u2501 x86_64-fuchsia/       ...\n-\u2503     \u2517\u2501 debug/             ...\n-\u2503        \u2517\u2501 hello_fuchsia   ...\n+\u2523\u2501 src/                         (if using rustc)\n+\u2503   \u2517\u2501 hello_fuchsia.rs         ...\n+\u2523\u2501 bin/                         ...\n+\u2503  \u2517\u2501 hello_fuchsia             ...\n+\u2523\u2501 src/                         (if using cargo)\n+\u2503  \u2517\u2501 main.rs                   ...\n+\u2523\u2501 target/                      ...\n+\u2503  \u2517\u2501 x86_64-unknown-fuchsia/   ...\n+\u2503     \u2517\u2501 debug/                 ...\n+\u2503        \u2517\u2501 hello_fuchsia       ...\n \u2517\u2501 pkg/\n    \u2523\u2501 meta/\n    \u2503  \u2523\u2501 package\n@@ -644,8 +644,8 @@ Tests can be run in the same way as a regular binary.\n \n * If using `cargo`, you can simply pass `test --no-run`\n to the `cargo` invocation and then repackage and rerun the Fuchsia package. From our previous example,\n-this would look like `cargo test --target x86_64-fuchsia --no-run`, and moving the executable\n-binary path found from the line `Executable unittests src/main.rs (target/x86_64-fuchsia/debug/deps/hello_fuchsia-<HASH>)`\n+this would look like `cargo test --target x86_64-unknown-fuchsia --no-run`, and moving the executable\n+binary path found from the line `Executable unittests src/main.rs (target/x86_64-unknown-fuchsia/debug/deps/hello_fuchsia-<HASH>)`\n into `pkg/hello_fuchsia.manifest`.\n \n * If using the compiled `rustc`, you can simply pass `--test`\n@@ -714,7 +714,7 @@ run the full `src/test/ui` test suite:\n     --config config.toml                                                      \\\n     --stage=2                                                                 \\\n     test src/test/ui                                                          \\\n-    --target x86_64-fuchsia                                                   \\\n+    --target x86_64-unknown-fuchsia                                           \\\n     --run=always --jobs 1                                                     \\\n     --test-args --target-rustcflags                                           \\\n     --test-args -L                                                            \\\n@@ -758,7 +758,7 @@ directory to launch `zxdb`:\n **In separate terminal**\n ```sh\n ${SDK_PATH}/tools/${ARCH}/ffx debug connect -- \\\n-    --symbol-path target/x86_64-fuchsia/debug\n+    --symbol-path target/x86_64-unknown-fuchsia/debug\n ```\n \n * `--symbol-path` gets required symbol paths, which are\n@@ -854,7 +854,7 @@ source code:\n \n ```sh\n ${SDK_PATH}/tools/${ARCH}/ffx debug connect -- \\\n-    --symbol-path target/x86_64-fuchsia/debug \\\n+    --symbol-path target/x86_64-unknown-fuchsia/debug \\\n     --build-dir ${RUST_SRC_PATH}/rust \\\n     --build-dir ${FUCHSIA_SRC_PATH}/fuchsia/out/default\n ```"}, {"sha": "70c3a445b864f17e825141ec5a1ecebec5f794b2", "filename": "src/doc/unstable-book/src/compiler-flags/sanitizer.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsanitizer.md", "raw_url": "https://github.com/rust-lang/rust/raw/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsanitizer.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsanitizer.md?ref=ce8fbe79013df9c2909f34198d3bff72e572cfd5", "patch": "@@ -50,10 +50,10 @@ with runtime flag `ASAN_OPTIONS=detect_leaks=1` on macOS.\n AddressSanitizer is supported on the following targets:\n \n * `aarch64-apple-darwin`\n-* `aarch64-fuchsia`\n+* `aarch64-unknown-fuchsia`\n * `aarch64-unknown-linux-gnu`\n * `x86_64-apple-darwin`\n-* `x86_64-fuchsia`\n+* `x86_64-unknown-fuchsia`\n * `x86_64-unknown-freebsd`\n * `x86_64-unknown-linux-gnu`\n "}, {"sha": "d5b48105ef26716dff4acbcb1e9c2dbe3b411062", "filename": "src/test/assembly/stack-protector/stack-protector-target-support.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Ftest%2Fassembly%2Fstack-protector%2Fstack-protector-target-support.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Ftest%2Fassembly%2Fstack-protector%2Fstack-protector-target-support.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fassembly%2Fstack-protector%2Fstack-protector-target-support.rs?ref=ce8fbe79013df9c2909f34198d3bff72e572cfd5", "patch": "@@ -26,7 +26,7 @@\n // [r9] needs-llvm-components: aarch64\n // [r10] compile-flags: --target aarch64-apple-ios\n // [r10] needs-llvm-components: aarch64\n-// [r11] compile-flags: --target aarch64-fuchsia\n+// [r11] compile-flags: --target aarch64-unknown-fuchsia\n // [r11] needs-llvm-components: aarch64\n // [r12] compile-flags: --target aarch64-linux-android\n // [r12] needs-llvm-components: aarch64\n@@ -156,7 +156,7 @@\n // [r74] needs-llvm-components: x86\n // [r75] compile-flags:--target x86_64-fortanix-unknown-sgx\n // [r75] needs-llvm-components: x86\n-// [r76] compile-flags:--target x86_64-fuchsia\n+// [r76] compile-flags:--target x86_64-unknown-fuchsia\n // [r76] needs-llvm-components: x86\n // [r77] compile-flags:--target x86_64-linux-android\n // [r77] needs-llvm-components: x86"}, {"sha": "21dad9eb74aa96d8679ffd7bae28250d7339923a", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=ce8fbe79013df9c2909f34198d3bff72e572cfd5", "patch": "@@ -51,7 +51,7 @@ static TARGETS: &[&str] = &[\n     \"aarch64-apple-darwin\",\n     \"aarch64-apple-ios\",\n     \"aarch64-apple-ios-sim\",\n-    \"aarch64-fuchsia\",\n+    \"aarch64-unknown-fuchsia\",\n     \"aarch64-linux-android\",\n     \"aarch64-pc-windows-msvc\",\n     \"aarch64-unknown-hermit\",\n@@ -138,7 +138,7 @@ static TARGETS: &[&str] = &[\n     \"x86_64-apple-darwin\",\n     \"x86_64-apple-ios\",\n     \"x86_64-fortanix-unknown-sgx\",\n-    \"x86_64-fuchsia\",\n+    \"x86_64-unknown-fuchsia\",\n     \"x86_64-linux-android\",\n     \"x86_64-pc-windows-gnu\",\n     \"x86_64-pc-windows-msvc\","}, {"sha": "6c63b760ff6a9de167c26c783851beee3dbc2981", "filename": "src/tools/compiletest/src/util.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce8fbe79013df9c2909f34198d3bff72e572cfd5/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs?ref=ce8fbe79013df9c2909f34198d3bff72e572cfd5", "patch": "@@ -11,15 +11,15 @@ mod tests;\n \n pub const ASAN_SUPPORTED_TARGETS: &[&str] = &[\n     \"aarch64-apple-darwin\",\n-    \"aarch64-fuchsia\",\n+    \"aarch64-unknown-fuchsia\",\n     \"aarch64-linux-android\",\n     \"aarch64-unknown-linux-gnu\",\n     \"arm-linux-androideabi\",\n     \"armv7-linux-androideabi\",\n     \"i686-linux-android\",\n     \"i686-unknown-linux-gnu\",\n     \"x86_64-apple-darwin\",\n-    \"x86_64-fuchsia\",\n+    \"x86_64-unknown-fuchsia\",\n     \"x86_64-linux-android\",\n     \"x86_64-unknown-freebsd\",\n     \"x86_64-unknown-linux-gnu\",\n@@ -28,12 +28,12 @@ pub const ASAN_SUPPORTED_TARGETS: &[&str] = &[\n // FIXME(rcvalle): More targets are likely supported.\n pub const CFI_SUPPORTED_TARGETS: &[&str] = &[\n     \"aarch64-apple-darwin\",\n-    \"aarch64-fuchsia\",\n+    \"aarch64-unknown-fuchsia\",\n     \"aarch64-linux-android\",\n     \"aarch64-unknown-freebsd\",\n     \"aarch64-unknown-linux-gnu\",\n     \"x86_64-apple-darwin\",\n-    \"x86_64-fuchsia\",\n+    \"x86_64-unknown-fuchsia\",\n     \"x86_64-pc-solaris\",\n     \"x86_64-unknown-freebsd\",\n     \"x86_64-unknown-illumos\","}]}