{"sha": "5b32dd034ef2799c0ea648c6f55e6aa14ce444f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViMzJkZDAzNGVmMjc5OWMwZWE2NDhjNmY1NWU2YWExNGNlNDQ0ZjQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-28T00:55:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-28T00:55:45Z"}, "message": "Rollup merge of #69496 - matthiaskrgr:filter_next, r=ecstatic-morse\n\nuse find(x) instead of filter(x).next()", "tree": {"sha": "1702cb40dd41b524b83447b7c85ee51f82a39541", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1702cb40dd41b524b83447b7c85ee51f82a39541"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b32dd034ef2799c0ea648c6f55e6aa14ce444f4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeWGURCRBK7hj4Ov3rIwAAdHIIACbiIXgvo1PGpKc4gvKwJLE7\n2QhpPI38N8tgKr045NmnQ6fhVi/I53PM3IBc895tejFGqneAMXyR0RfdVBos/M71\n6Y5GR6bcY7Y2OLy6lMClHQT7TPKa/fUgC7bYgrDGcW3o82prvp56yRU1LD6XWwsp\nhFSGXRZ+bmkLKepE2HjZfAmzdE529woxG1Od5m6d2RF0gS8HPBEoB6iNaM22asFM\nc7dR/7OJd4zq7AiZYgoudyD9OEs3dA942rD4UaVNzOKjw2sEvGvrMzeo0lEUkFR5\neGXrLygPwMc2O8QJJuEg3xQ0XURXARzmpDUF1aVh8SFYLl/QkfwXYqr1mERD+Eg=\n=STmy\n-----END PGP SIGNATURE-----\n", "payload": "tree 1702cb40dd41b524b83447b7c85ee51f82a39541\nparent b19e822b9b513c16a8643f8157d8e3c20d6405f6\nparent 896a0814427827e0e0346544c92e5ddc390ad29f\nauthor Dylan DPC <dylan.dpc@gmail.com> 1582851345 +0100\ncommitter GitHub <noreply@github.com> 1582851345 +0100\n\nRollup merge of #69496 - matthiaskrgr:filter_next, r=ecstatic-morse\n\nuse find(x) instead of filter(x).next()\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b32dd034ef2799c0ea648c6f55e6aa14ce444f4", "html_url": "https://github.com/rust-lang/rust/commit/5b32dd034ef2799c0ea648c6f55e6aa14ce444f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b32dd034ef2799c0ea648c6f55e6aa14ce444f4/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b19e822b9b513c16a8643f8157d8e3c20d6405f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b19e822b9b513c16a8643f8157d8e3c20d6405f6", "html_url": "https://github.com/rust-lang/rust/commit/b19e822b9b513c16a8643f8157d8e3c20d6405f6"}, {"sha": "896a0814427827e0e0346544c92e5ddc390ad29f", "url": "https://api.github.com/repos/rust-lang/rust/commits/896a0814427827e0e0346544c92e5ddc390ad29f", "html_url": "https://github.com/rust-lang/rust/commit/896a0814427827e0e0346544c92e5ddc390ad29f"}], "stats": {"total": 25, "additions": 8, "deletions": 17}, "files": [{"sha": "3512b24ec487778124597a7a7bef16cf876a9ca6", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b32dd034ef2799c0ea648c6f55e6aa14ce444f4/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b32dd034ef2799c0ea648c6f55e6aa14ce444f4/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=5b32dd034ef2799c0ea648c6f55e6aa14ce444f4", "patch": "@@ -136,7 +136,7 @@ impl RegionHighlightMode {\n     pub fn highlighting_region(&mut self, region: ty::Region<'_>, number: usize) {\n         let num_slots = self.highlight_regions.len();\n         let first_avail_slot =\n-            self.highlight_regions.iter_mut().filter(|s| s.is_none()).next().unwrap_or_else(|| {\n+            self.highlight_regions.iter_mut().find(|s| s.is_none()).unwrap_or_else(|| {\n                 bug!(\"can only highlight {} placeholders at a time\", num_slots,)\n             });\n         *first_avail_slot = Some((*region, number));"}, {"sha": "d94231653abd49eab7bca9dd4486c247b2e57f2e", "filename": "src/librustc_infer/traits/coherence.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5b32dd034ef2799c0ea648c6f55e6aa14ce444f4/src%2Flibrustc_infer%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b32dd034ef2799c0ea648c6f55e6aa14ce444f4/src%2Flibrustc_infer%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fcoherence.rs?ref=5b32dd034ef2799c0ea648c6f55e6aa14ce444f4", "patch": "@@ -399,8 +399,7 @@ fn orphan_check_trait_ref<'tcx>(\n             let local_type = trait_ref\n                 .input_types()\n                 .flat_map(|ty| uncover_fundamental_ty(tcx, ty, in_crate))\n-                .filter(|ty| ty_is_non_local_constructor(ty, in_crate).is_none())\n-                .next();\n+                .find(|ty| ty_is_non_local_constructor(ty, in_crate).is_none());\n \n             debug!(\"orphan_check_trait_ref: uncovered ty local_type: `{:?}`\", local_type);\n "}, {"sha": "9bfa2196950963577f18aa4d4b4d41b4f729d360", "filename": "src/librustc_infer/traits/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b32dd034ef2799c0ea648c6f55e6aa14ce444f4/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b32dd034ef2799c0ea648c6f55e6aa14ce444f4/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=5b32dd034ef2799c0ea648c6f55e6aa14ce444f4", "patch": "@@ -1442,7 +1442,7 @@ pub fn suggest_constraining_type_param(\n     const MSG_RESTRICT_TYPE: &str = \"consider restricting this type parameter with\";\n     const MSG_RESTRICT_TYPE_FURTHER: &str = \"consider further restricting this type parameter with\";\n \n-    let param = generics.params.iter().filter(|p| p.name.ident().as_str() == param_name).next();\n+    let param = generics.params.iter().find(|p| p.name.ident().as_str() == param_name);\n \n     let param = if let Some(param) = param {\n         param"}, {"sha": "20a7fcb650a2e17ba3fa8d62dd17b5aa37dc3265", "filename": "src/librustc_parse/lexer/tokentrees.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5b32dd034ef2799c0ea648c6f55e6aa14ce444f4/src%2Flibrustc_parse%2Flexer%2Ftokentrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b32dd034ef2799c0ea648c6f55e6aa14ce444f4/src%2Flibrustc_parse%2Flexer%2Ftokentrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flexer%2Ftokentrees.rs?ref=5b32dd034ef2799c0ea648c6f55e6aa14ce444f4", "patch": "@@ -93,18 +93,15 @@ impl<'a> TokenTreesReader<'a> {\n                 }\n \n                 if let Some((delim, _)) = self.open_braces.last() {\n-                    if let Some((_, open_sp, close_sp)) = self\n-                        .matching_delim_spans\n-                        .iter()\n-                        .filter(|(d, open_sp, close_sp)| {\n+                    if let Some((_, open_sp, close_sp)) =\n+                        self.matching_delim_spans.iter().find(|(d, open_sp, close_sp)| {\n                             if let Some(close_padding) = sm.span_to_margin(*close_sp) {\n                                 if let Some(open_padding) = sm.span_to_margin(*open_sp) {\n                                     return delim == d && close_padding != open_padding;\n                                 }\n                             }\n                             false\n                         })\n-                        .next()\n                     // these are in reverse order as they get inserted on close, but\n                     {\n                         // we want the last open/first close"}, {"sha": "b8f67e73bc3f72897b9aa593cf1864ccde73f38c", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5b32dd034ef2799c0ea648c6f55e6aa14ce444f4/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b32dd034ef2799c0ea648c6f55e6aa14ce444f4/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=5b32dd034ef2799c0ea648c6f55e6aa14ce444f4", "patch": "@@ -225,12 +225,8 @@ impl<'a> Parser<'a> {\n \n             // Make sure that the span of the parent node is larger than the span of lhs and rhs,\n             // including the attributes.\n-            let lhs_span = lhs\n-                .attrs\n-                .iter()\n-                .filter(|a| a.style == AttrStyle::Outer)\n-                .next()\n-                .map_or(lhs_span, |a| a.span);\n+            let lhs_span =\n+                lhs.attrs.iter().find(|a| a.style == AttrStyle::Outer).map_or(lhs_span, |a| a.span);\n             let span = lhs_span.to(rhs.span);\n             lhs = match op {\n                 AssocOp::Add"}, {"sha": "4f58116e4fea8167ff4f6c27cedbf7c3f8088e83", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5b32dd034ef2799c0ea648c6f55e6aa14ce444f4/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b32dd034ef2799c0ea648c6f55e6aa14ce444f4/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=5b32dd034ef2799c0ea648c6f55e6aa14ce444f4", "patch": "@@ -565,8 +565,7 @@ impl Attributes {\n \n         let inner_docs = attrs\n             .iter()\n-            .filter(|a| a.doc_str().is_some())\n-            .next()\n+            .find(|a| a.doc_str().is_some())\n             .map_or(true, |a| a.style == AttrStyle::Inner);\n \n         Attributes {"}]}