{"sha": "82b43568a64822c693fdfa50a736056efe92c4ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyYjQzNTY4YTY0ODIyYzY5M2ZkZmE1MGE3MzYwNTZlZmU5MmM0Y2U=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-04-19T17:17:47Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-04-28T17:56:52Z"}, "message": "Clarify offset rules a bit", "tree": {"sha": "bb76a4266406421c378e73e2e5b76f9bcd727e8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb76a4266406421c378e73e2e5b76f9bcd727e8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82b43568a64822c693fdfa50a736056efe92c4ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82b43568a64822c693fdfa50a736056efe92c4ce", "html_url": "https://github.com/rust-lang/rust/commit/82b43568a64822c693fdfa50a736056efe92c4ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82b43568a64822c693fdfa50a736056efe92c4ce/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f191f924214aa1dcd342ada1d99775ccbb01ddd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f191f924214aa1dcd342ada1d99775ccbb01ddd7", "html_url": "https://github.com/rust-lang/rust/commit/f191f924214aa1dcd342ada1d99775ccbb01ddd7"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "c651eacfe0a8a9647006ac00a5bd1c6bbdcf122e", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/82b43568a64822c693fdfa50a736056efe92c4ce/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82b43568a64822c693fdfa50a736056efe92c4ce/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=82b43568a64822c693fdfa50a736056efe92c4ce", "patch": "@@ -255,12 +255,17 @@ extern \"rust-intrinsic\" {\n     /// Returns `true` if a type is managed (will be allocated on the local heap)\n     pub fn owns_managed<T>() -> bool;\n \n-    /// Calculates the offset from a pointer. The offset *must* be in-bounds of\n-    /// the object, or one-byte-past-the-end. An arithmetic overflow is also\n-    /// undefined behaviour.\n+    /// Calculates the offset from a pointer.\n     ///\n     /// This is implemented as an intrinsic to avoid converting to and from an\n     /// integer, since the conversion would throw away aliasing information.\n+    ///\n+    /// # Safety\n+    ///\n+    /// Both the starting and resulting pointer must be either in bounds or one\n+    /// byte past the end of an allocated object. If either pointer is out of\n+    /// bounds or arithmetic overflow occurs then any further use of the\n+    /// returned value will result in undefined behavior.\n     pub fn offset<T>(dst: *const T, offset: isize) -> *const T;\n \n     /// Copies `count * size_of<T>` bytes from `src` to `dst`. The source"}, {"sha": "2ebbab4162337d478fbb9757e1a27ea3b049eba0", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/82b43568a64822c693fdfa50a736056efe92c4ce/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82b43568a64822c693fdfa50a736056efe92c4ce/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=82b43568a64822c693fdfa50a736056efe92c4ce", "patch": "@@ -301,9 +301,10 @@ impl<T: ?Sized> *const T {\n     ///\n     /// # Safety\n     ///\n-    /// The offset must be in-bounds of the object, or one-byte-past-the-end.\n-    /// Otherwise `offset` invokes Undefined Behaviour, regardless of whether\n-    /// the pointer is used.\n+    /// Both the starting and resulting pointer must be either in bounds or one\n+    /// byte past the end of an allocated object. If either pointer is out of\n+    /// bounds or arithmetic overflow occurs then\n+    /// any further use of the returned value will result in undefined behavior.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub unsafe fn offset(self, count: isize) -> *const T where T: Sized {"}]}