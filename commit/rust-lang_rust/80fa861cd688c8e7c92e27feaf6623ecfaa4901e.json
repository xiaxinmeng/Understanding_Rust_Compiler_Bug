{"sha": "80fa861cd688c8e7c92e27feaf6623ecfaa4901e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwZmE4NjFjZDY4OGM4ZTdjOTJlMjdmZWFmNjYyM2VjZmFhNDkwMWU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-05T14:24:44Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-05T14:24:44Z"}, "message": "index expr", "tree": {"sha": "5430bed65025d2d12d52a90c8c035d94a96b62d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5430bed65025d2d12d52a90c8c035d94a96b62d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80fa861cd688c8e7c92e27feaf6623ecfaa4901e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80fa861cd688c8e7c92e27feaf6623ecfaa4901e", "html_url": "https://github.com/rust-lang/rust/commit/80fa861cd688c8e7c92e27feaf6623ecfaa4901e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80fa861cd688c8e7c92e27feaf6623ecfaa4901e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cf962f1f56717646af7f67642d2724cb27928d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cf962f1f56717646af7f67642d2724cb27928d0", "html_url": "https://github.com/rust-lang/rust/commit/8cf962f1f56717646af7f67642d2724cb27928d0"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "1eb76abddcd91ff564f434c012259fbc4a7ea1c2", "filename": "src/grammar.ron", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/80fa861cd688c8e7c92e27feaf6623ecfaa4901e/src%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/80fa861cd688c8e7c92e27feaf6623ecfaa4901e/src%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar.ron?ref=80fa861cd688c8e7c92e27feaf6623ecfaa4901e", "patch": "@@ -153,6 +153,7 @@ Grammar(\n \n         // postfix\n         \"CALL_EXPR\",\n+        \"INDEX_EXPR\",\n         \"METHOD_CALL_EXPR\",\n         \"FIELD_EXPR\",\n         \"TRY_EXPR\","}, {"sha": "7f3bc78f220d57e7d0513c0f066634ab0cfd24ee", "filename": "src/grammar/expressions/mod.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/80fa861cd688c8e7c92e27feaf6623ecfaa4901e/src%2Fgrammar%2Fexpressions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80fa861cd688c8e7c92e27feaf6623ecfaa4901e/src%2Fgrammar%2Fexpressions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fexpressions%2Fmod.rs?ref=80fa861cd688c8e7c92e27feaf6623ecfaa4901e", "patch": "@@ -147,6 +147,7 @@ fn postfix_expr(p: &mut Parser, mut lhs: CompletedMarker) -> CompletedMarker {\n     loop {\n         lhs = match p.current() {\n             L_PAREN => call_expr(p, lhs),\n+            L_BRACK => index_expr(p, lhs),\n             DOT if p.nth(1) == IDENT => if p.nth(2) == L_PAREN || p.nth(2) == COLONCOLON {\n                 method_call_expr(p, lhs)\n             } else {\n@@ -172,6 +173,19 @@ fn call_expr(p: &mut Parser, lhs: CompletedMarker) -> CompletedMarker {\n     m.complete(p, CALL_EXPR)\n }\n \n+// test index_expr\n+// fn foo() {\n+//     x[1][2];\n+// }\n+fn index_expr(p: &mut Parser, lhs: CompletedMarker) -> CompletedMarker {\n+    assert!(p.at(L_BRACK));\n+    let m = lhs.precede(p);\n+    p.bump();\n+    expr(p);\n+    p.expect(R_BRACK);\n+    m.complete(p, INDEX_EXPR)\n+}\n+\n // test method_call_expr\n // fn foo() {\n //     x.foo();"}, {"sha": "8855e980e22f73d868ca5fe743f84e31246b9d7a", "filename": "src/syntax_kinds/generated.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80fa861cd688c8e7c92e27feaf6623ecfaa4901e/src%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80fa861cd688c8e7c92e27feaf6623ecfaa4901e/src%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds%2Fgenerated.rs?ref=80fa861cd688c8e7c92e27feaf6623ecfaa4901e", "patch": "@@ -141,6 +141,7 @@ pub enum SyntaxKind {\n     STRUCT_LIT,\n     STRUCT_LIT_FIELD,\n     CALL_EXPR,\n+    INDEX_EXPR,\n     METHOD_CALL_EXPR,\n     FIELD_EXPR,\n     TRY_EXPR,\n@@ -367,6 +368,7 @@ impl SyntaxKind {\n             STRUCT_LIT => &SyntaxInfo { name: \"STRUCT_LIT\" },\n             STRUCT_LIT_FIELD => &SyntaxInfo { name: \"STRUCT_LIT_FIELD\" },\n             CALL_EXPR => &SyntaxInfo { name: \"CALL_EXPR\" },\n+            INDEX_EXPR => &SyntaxInfo { name: \"INDEX_EXPR\" },\n             METHOD_CALL_EXPR => &SyntaxInfo { name: \"METHOD_CALL_EXPR\" },\n             FIELD_EXPR => &SyntaxInfo { name: \"FIELD_EXPR\" },\n             TRY_EXPR => &SyntaxInfo { name: \"TRY_EXPR\" },"}, {"sha": "f57c4a9b779fc821d2d566e08b20174a10d22d8b", "filename": "src/yellow/red.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80fa861cd688c8e7c92e27feaf6623ecfaa4901e/src%2Fyellow%2Fred.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80fa861cd688c8e7c92e27feaf6623ecfaa4901e/src%2Fyellow%2Fred.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fyellow%2Fred.rs?ref=80fa861cd688c8e7c92e27feaf6623ecfaa4901e", "patch": "@@ -71,7 +71,7 @@ impl RedNode {\n         match &self.children.read()[idx] {\n             Some(child) => return Some(child.into()),\n             None => (),\n-        }\n+        };\n         let green_children = self.green.children();\n         let start_offset = self.start_offset()\n             + green_children[..idx]"}, {"sha": "b9ba78a6cbdd661f888d6b111ccf7ef9fc5a1c6f", "filename": "tests/data/parser/inline/0081_index_expr.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/80fa861cd688c8e7c92e27feaf6623ecfaa4901e/tests%2Fdata%2Fparser%2Finline%2F0081_index_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80fa861cd688c8e7c92e27feaf6623ecfaa4901e/tests%2Fdata%2Fparser%2Finline%2F0081_index_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0081_index_expr.rs?ref=80fa861cd688c8e7c92e27feaf6623ecfaa4901e", "patch": "@@ -0,0 +1,3 @@\n+fn foo() {\n+    x[1][2];\n+}"}, {"sha": "b77f54fb6c306f8ced7e9511d85500f6b2ef43a1", "filename": "tests/data/parser/inline/0081_index_expr.txt", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/80fa861cd688c8e7c92e27feaf6623ecfaa4901e/tests%2Fdata%2Fparser%2Finline%2F0081_index_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/80fa861cd688c8e7c92e27feaf6623ecfaa4901e/tests%2Fdata%2Fparser%2Finline%2F0081_index_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0081_index_expr.txt?ref=80fa861cd688c8e7c92e27feaf6623ecfaa4901e", "patch": "@@ -0,0 +1,33 @@\n+FILE@[0; 26)\n+  FN_ITEM@[0; 26)\n+    FN_KW@[0; 2)\n+    NAME@[2; 6)\n+      WHITESPACE@[2; 3)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 9)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+      WHITESPACE@[8; 9)\n+    BLOCK_EXPR@[9; 26)\n+      L_CURLY@[9; 10)\n+      EXPR_STMT@[10; 24)\n+        INDEX_EXPR@[10; 22)\n+          INDEX_EXPR@[10; 19)\n+            PATH_EXPR@[10; 16)\n+              PATH@[10; 16)\n+                PATH_SEGMENT@[10; 16)\n+                  NAME_REF@[10; 16)\n+                    WHITESPACE@[10; 15)\n+                    IDENT@[15; 16) \"x\"\n+            L_BRACK@[16; 17)\n+            LITERAL@[17; 18)\n+              INT_NUMBER@[17; 18) \"1\"\n+            R_BRACK@[18; 19)\n+          L_BRACK@[19; 20)\n+          LITERAL@[20; 21)\n+            INT_NUMBER@[20; 21) \"2\"\n+          R_BRACK@[21; 22)\n+        SEMI@[22; 23)\n+        WHITESPACE@[23; 24)\n+      R_CURLY@[24; 25)\n+      WHITESPACE@[25; 26)"}]}