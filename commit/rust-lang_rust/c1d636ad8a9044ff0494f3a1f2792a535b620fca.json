{"sha": "c1d636ad8a9044ff0494f3a1f2792a535b620fca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZDYzNmFkOGE5MDQ0ZmYwNDk0ZjNhMWYyNzkyYTUzNWI2MjBmY2E=", "commit": {"author": {"name": "Aris Merchant", "email": "22333129+inquisitivecrystal@users.noreply.github.com", "date": "2021-06-13T08:38:54Z"}, "committer": {"name": "Aris Merchant", "email": "22333129+inquisitivecrystal@users.noreply.github.com", "date": "2021-06-16T08:13:28Z"}, "message": "Update test stderr files", "tree": {"sha": "80d9cdf2becb028fb227f6458adaa73329a52e81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80d9cdf2becb028fb227f6458adaa73329a52e81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1d636ad8a9044ff0494f3a1f2792a535b620fca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1d636ad8a9044ff0494f3a1f2792a535b620fca", "html_url": "https://github.com/rust-lang/rust/commit/c1d636ad8a9044ff0494f3a1f2792a535b620fca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1d636ad8a9044ff0494f3a1f2792a535b620fca/comments", "author": {"login": "inquisitivecrystal", "id": 22333129, "node_id": "MDQ6VXNlcjIyMzMzMTI5", "avatar_url": "https://avatars.githubusercontent.com/u/22333129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inquisitivecrystal", "html_url": "https://github.com/inquisitivecrystal", "followers_url": "https://api.github.com/users/inquisitivecrystal/followers", "following_url": "https://api.github.com/users/inquisitivecrystal/following{/other_user}", "gists_url": "https://api.github.com/users/inquisitivecrystal/gists{/gist_id}", "starred_url": "https://api.github.com/users/inquisitivecrystal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inquisitivecrystal/subscriptions", "organizations_url": "https://api.github.com/users/inquisitivecrystal/orgs", "repos_url": "https://api.github.com/users/inquisitivecrystal/repos", "events_url": "https://api.github.com/users/inquisitivecrystal/events{/privacy}", "received_events_url": "https://api.github.com/users/inquisitivecrystal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "inquisitivecrystal", "id": 22333129, "node_id": "MDQ6VXNlcjIyMzMzMTI5", "avatar_url": "https://avatars.githubusercontent.com/u/22333129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inquisitivecrystal", "html_url": "https://github.com/inquisitivecrystal", "followers_url": "https://api.github.com/users/inquisitivecrystal/followers", "following_url": "https://api.github.com/users/inquisitivecrystal/following{/other_user}", "gists_url": "https://api.github.com/users/inquisitivecrystal/gists{/gist_id}", "starred_url": "https://api.github.com/users/inquisitivecrystal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inquisitivecrystal/subscriptions", "organizations_url": "https://api.github.com/users/inquisitivecrystal/orgs", "repos_url": "https://api.github.com/users/inquisitivecrystal/repos", "events_url": "https://api.github.com/users/inquisitivecrystal/events{/privacy}", "received_events_url": "https://api.github.com/users/inquisitivecrystal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1f1c9b25b1046baecd271963739a8fef7c358e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1f1c9b25b1046baecd271963739a8fef7c358e1", "html_url": "https://github.com/rust-lang/rust/commit/f1f1c9b25b1046baecd271963739a8fef7c358e1"}], "stats": {"total": 49, "additions": 6, "deletions": 43}, "files": [{"sha": "ed71b99da0f52dcae1ba8a26e5052ead06c1c9f6", "filename": "src/test/ui/binop/issue-77910-1.stderr", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-1.stderr?ref=c1d636ad8a9044ff0494f3a1f2792a535b620fca", "patch": "@@ -14,11 +14,6 @@ error[E0277]: `for<'r> fn(&'r i32) -> &'r i32 {foo}` doesn't implement `Debug`\n    |\n LL |     assert_eq!(foo, y);\n    |     ^^^^^^^^^^^^^^^^^^^ `for<'r> fn(&'r i32) -> &'r i32 {foo}` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n-   | \n-  ::: $SRC_DIR/core/src/panicking.rs:LL:COL\n-   |\n-LL |     T: fmt::Debug + ?Sized,\n-   |        ---------- required by this bound in `core::panicking::assert_failed`\n    |\n    = help: the trait `Debug` is not implemented for `for<'r> fn(&'r i32) -> &'r i32 {foo}`\n    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "78f62592960ffe844f4c9bb6d5384e09e970bb29", "filename": "src/test/ui/bound-suggestions.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fbound-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fbound-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbound-suggestions.stderr?ref=c1d636ad8a9044ff0494f3a1f2792a535b620fca", "patch": "@@ -4,7 +4,6 @@ error[E0277]: `impl Sized` doesn't implement `Debug`\n LL |     println!(\"{:?}\", t);\n    |                      ^ `impl Sized` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n    |\n-   = note: required by `std::fmt::Debug::fmt`\n    = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider further restricting this bound\n    |\n@@ -17,7 +16,6 @@ error[E0277]: `T` doesn't implement `Debug`\n LL |     println!(\"{:?}\", t);\n    |                      ^ `T` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n    |\n-   = note: required by `std::fmt::Debug::fmt`\n    = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider restricting type parameter `T`\n    |\n@@ -30,7 +28,6 @@ error[E0277]: `T` doesn't implement `Debug`\n LL |     println!(\"{:?}\", t);\n    |                      ^ `T` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n    |\n-   = note: required by `std::fmt::Debug::fmt`\n    = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider further restricting this bound\n    |\n@@ -43,7 +40,6 @@ error[E0277]: `Y` doesn't implement `Debug`\n LL |     println!(\"{:?} {:?}\", x, y);\n    |                              ^ `Y` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n    |\n-   = note: required by `std::fmt::Debug::fmt`\n    = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider further restricting type parameter `Y`\n    |\n@@ -56,7 +52,6 @@ error[E0277]: `X` doesn't implement `Debug`\n LL |     println!(\"{:?}\", x);\n    |                      ^ `X` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n    |\n-   = note: required by `std::fmt::Debug::fmt`\n    = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider further restricting this bound\n    |\n@@ -69,7 +64,6 @@ error[E0277]: `X` doesn't implement `Debug`\n LL |     println!(\"{:?}\", x);\n    |                      ^ `X` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n    |\n-   = note: required by `std::fmt::Debug::fmt`\n    = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider further restricting type parameter `X`\n    |"}, {"sha": "dc63ec7fe6f960344c3ed6a27f26f303709186f1", "filename": "src/test/ui/derives/derives-span-Debug-enum-struct-variant.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum-struct-variant.stderr?ref=c1d636ad8a9044ff0494f3a1f2792a535b620fca", "patch": "@@ -5,9 +5,7 @@ LL |      x: Error\n    |      ^^^^^^^^ `Error` cannot be formatted using `{:?}`\n    |\n    = help: the trait `Debug` is not implemented for `Error`\n-   = note: add `#[derive(Debug)]` or manually implement `Debug`\n-   = note: required because of the requirements on the impl of `Debug` for `&Error`\n-   = note: required for the cast to the object type `dyn Debug`\n+   = note: add `#[derive(Debug)]` to `Error` or manually implement `Debug` for `Error`\n    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error"}, {"sha": "5a791eb6be4c162fc244f51b47bea9ac7f676ce5", "filename": "src/test/ui/derives/derives-span-Debug-enum.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum.stderr?ref=c1d636ad8a9044ff0494f3a1f2792a535b620fca", "patch": "@@ -5,9 +5,7 @@ LL |      Error\n    |      ^^^^^ `Error` cannot be formatted using `{:?}`\n    |\n    = help: the trait `Debug` is not implemented for `Error`\n-   = note: add `#[derive(Debug)]` or manually implement `Debug`\n-   = note: required because of the requirements on the impl of `Debug` for `&Error`\n-   = note: required for the cast to the object type `dyn Debug`\n+   = note: add `#[derive(Debug)]` to `Error` or manually implement `Debug` for `Error`\n    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error"}, {"sha": "017bddaa633ffc582f65371c4ef6ded85a78b7c3", "filename": "src/test/ui/derives/derives-span-Debug-struct.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-struct.stderr?ref=c1d636ad8a9044ff0494f3a1f2792a535b620fca", "patch": "@@ -5,9 +5,7 @@ LL |     x: Error\n    |     ^^^^^^^^ `Error` cannot be formatted using `{:?}`\n    |\n    = help: the trait `Debug` is not implemented for `Error`\n-   = note: add `#[derive(Debug)]` or manually implement `Debug`\n-   = note: required because of the requirements on the impl of `Debug` for `&Error`\n-   = note: required for the cast to the object type `dyn Debug`\n+   = note: add `#[derive(Debug)]` to `Error` or manually implement `Debug` for `Error`\n    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error"}, {"sha": "864785f2c219ec5c85f306b12c3941b5de388ee2", "filename": "src/test/ui/derives/derives-span-Debug-tuple-struct.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-tuple-struct.stderr?ref=c1d636ad8a9044ff0494f3a1f2792a535b620fca", "patch": "@@ -5,9 +5,7 @@ LL |     Error\n    |     ^^^^^ `Error` cannot be formatted using `{:?}`\n    |\n    = help: the trait `Debug` is not implemented for `Error`\n-   = note: add `#[derive(Debug)]` or manually implement `Debug`\n-   = note: required because of the requirements on the impl of `Debug` for `&Error`\n-   = note: required for the cast to the object type `dyn Debug`\n+   = note: add `#[derive(Debug)]` to `Error` or manually implement `Debug` for `Error`\n    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error"}, {"sha": "46d1f9924118729cec7c2d3dce8171161d4a50c9", "filename": "src/test/ui/issues/issue-59488.stderr", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fissues%2Fissue-59488.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fissues%2Fissue-59488.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-59488.stderr?ref=c1d636ad8a9044ff0494f3a1f2792a535b620fca", "patch": "@@ -84,11 +84,6 @@ error[E0277]: `fn(usize) -> Foo {Foo::Bar}` doesn't implement `Debug`\n    |\n LL |     assert_eq!(Foo::Bar, i);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ `fn(usize) -> Foo {Foo::Bar}` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n-   | \n-  ::: $SRC_DIR/core/src/panicking.rs:LL:COL\n-   |\n-LL |     T: fmt::Debug + ?Sized,\n-   |        ---------- required by this bound in `core::panicking::assert_failed`\n    |\n    = help: the trait `Debug` is not implemented for `fn(usize) -> Foo {Foo::Bar}`\n    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "f074a99e5ecfb1dfe45058ff2d22d4f7c77976dc", "filename": "src/test/ui/issues/issue-70724-add_type_neq_err_label-unwrap.stderr", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fissues%2Fissue-70724-add_type_neq_err_label-unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fissues%2Fissue-70724-add_type_neq_err_label-unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-70724-add_type_neq_err_label-unwrap.stderr?ref=c1d636ad8a9044ff0494f3a1f2792a535b620fca", "patch": "@@ -28,11 +28,6 @@ LL | fn a() -> i32 {\n ...\n LL |     assert_eq!(a, 0);\n    |     ^^^^^^^^^^^^^^^^^ `fn() -> i32 {a}` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n-   | \n-  ::: $SRC_DIR/core/src/panicking.rs:LL:COL\n-   |\n-LL |     T: fmt::Debug + ?Sized,\n-   |        ---------- required by this bound in `core::panicking::assert_failed`\n    |\n    = help: the trait `Debug` is not implemented for `fn() -> i32 {a}`\n    = help: use parentheses to call the function: `a()`"}, {"sha": "0d9544106205389c6f6e297461ee0b79b9cebe65", "filename": "src/test/ui/on-unimplemented/no-debug.stderr", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fon-unimplemented%2Fno-debug.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fon-unimplemented%2Fno-debug.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fon-unimplemented%2Fno-debug.stderr?ref=c1d636ad8a9044ff0494f3a1f2792a535b620fca", "patch": "@@ -5,8 +5,7 @@ LL |     println!(\"{:?} {:?}\", Foo, Bar);\n    |                           ^^^ `Foo` cannot be formatted using `{:?}`\n    |\n    = help: the trait `Debug` is not implemented for `Foo`\n-   = note: add `#[derive(Debug)]` or manually implement `Debug`\n-   = note: required by `std::fmt::Debug::fmt`\n+   = note: add `#[derive(Debug)]` to `Foo` or manually implement `Debug` for `Foo`\n    = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0277]: `Bar` doesn't implement `Debug`\n@@ -16,7 +15,6 @@ LL |     println!(\"{:?} {:?}\", Foo, Bar);\n    |                                ^^^ `Bar` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n    |\n    = help: the trait `Debug` is not implemented for `Bar`\n-   = note: required by `std::fmt::Debug::fmt`\n    = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0277]: `Foo` doesn't implement `std::fmt::Display`\n@@ -27,7 +25,6 @@ LL |     println!(\"{} {}\", Foo, Bar);\n    |\n    = help: the trait `std::fmt::Display` is not implemented for `Foo`\n    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\n-   = note: required by `std::fmt::Display::fmt`\n    = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0277]: `Bar` doesn't implement `std::fmt::Display`\n@@ -38,7 +35,6 @@ LL |     println!(\"{} {}\", Foo, Bar);\n    |\n    = help: the trait `std::fmt::Display` is not implemented for `Bar`\n    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\n-   = note: required by `std::fmt::Display::fmt`\n    = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to 4 previous errors"}, {"sha": "8f9e323e90310077daf0745d4f22c9ab9827e34f", "filename": "src/test/ui/rfc-2361-dbg-macro/dbg-macro-requires-debug.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Frfc-2361-dbg-macro%2Fdbg-macro-requires-debug.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Frfc-2361-dbg-macro%2Fdbg-macro-requires-debug.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2361-dbg-macro%2Fdbg-macro-requires-debug.stderr?ref=c1d636ad8a9044ff0494f3a1f2792a535b620fca", "patch": "@@ -5,9 +5,7 @@ LL |     let _: NotDebug = dbg!(NotDebug);\n    |                       ^^^^^^^^^^^^^^ `NotDebug` cannot be formatted using `{:?}`\n    |\n    = help: the trait `Debug` is not implemented for `NotDebug`\n-   = note: add `#[derive(Debug)]` or manually implement `Debug`\n-   = note: required because of the requirements on the impl of `Debug` for `&NotDebug`\n-   = note: required by `std::fmt::Debug::fmt`\n+   = note: add `#[derive(Debug)]` to `NotDebug` or manually implement `Debug` for `NotDebug`\n    = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error"}, {"sha": "25c73c4c8741af5b8ddf32949e18601f80e50bc0", "filename": "src/test/ui/suggestions/path-display.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fsuggestions%2Fpath-display.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c1d636ad8a9044ff0494f3a1f2792a535b620fca/src%2Ftest%2Fui%2Fsuggestions%2Fpath-display.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fpath-display.stderr?ref=c1d636ad8a9044ff0494f3a1f2792a535b620fca", "patch": "@@ -6,8 +6,6 @@ LL |     println!(\"{}\", path);\n    |\n    = help: the trait `std::fmt::Display` is not implemented for `Path`\n    = note: call `.display()` or `.to_string_lossy()` to safely print paths, as they may contain non-Unicode data\n-   = note: required because of the requirements on the impl of `std::fmt::Display` for `&Path`\n-   = note: required by `std::fmt::Display::fmt`\n    = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error"}]}