{"sha": "5a5621791f3fc6e27c692747ddd37672f83c7360", "node_id": "C_kwDOAAsO6NoAKDVhNTYyMTc5MWYzZmM2ZTI3YzY5Mjc0N2RkZDM3NjcyZjgzYzczNjA", "commit": {"author": {"name": "Adam Gemmell", "email": "adam.gemmell@arm.com", "date": "2022-02-10T16:43:45Z"}, "committer": {"name": "Adam Gemmell", "email": "adam.gemmell@arm.com", "date": "2022-03-14T11:02:50Z"}, "message": "Stabilise `aarch64_target_feature`", "tree": {"sha": "5072765387e12d7cf8b38fd3617d88253e623904", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5072765387e12d7cf8b38fd3617d88253e623904"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a5621791f3fc6e27c692747ddd37672f83c7360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a5621791f3fc6e27c692747ddd37672f83c7360", "html_url": "https://github.com/rust-lang/rust/commit/5a5621791f3fc6e27c692747ddd37672f83c7360", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a5621791f3fc6e27c692747ddd37672f83c7360/comments", "author": {"login": "adamgemmell", "id": 3757567, "node_id": "MDQ6VXNlcjM3NTc1Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3757567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamgemmell", "html_url": "https://github.com/adamgemmell", "followers_url": "https://api.github.com/users/adamgemmell/followers", "following_url": "https://api.github.com/users/adamgemmell/following{/other_user}", "gists_url": "https://api.github.com/users/adamgemmell/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamgemmell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamgemmell/subscriptions", "organizations_url": "https://api.github.com/users/adamgemmell/orgs", "repos_url": "https://api.github.com/users/adamgemmell/repos", "events_url": "https://api.github.com/users/adamgemmell/events{/privacy}", "received_events_url": "https://api.github.com/users/adamgemmell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "adamgemmell", "id": 3757567, "node_id": "MDQ6VXNlcjM3NTc1Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3757567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamgemmell", "html_url": "https://github.com/adamgemmell", "followers_url": "https://api.github.com/users/adamgemmell/followers", "following_url": "https://api.github.com/users/adamgemmell/following{/other_user}", "gists_url": "https://api.github.com/users/adamgemmell/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamgemmell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamgemmell/subscriptions", "organizations_url": "https://api.github.com/users/adamgemmell/orgs", "repos_url": "https://api.github.com/users/adamgemmell/repos", "events_url": "https://api.github.com/users/adamgemmell/events{/privacy}", "received_events_url": "https://api.github.com/users/adamgemmell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39961390ad7b99f5f63d47144c03a7ef7f406483", "url": "https://api.github.com/repos/rust-lang/rust/commits/39961390ad7b99f5f63d47144c03a7ef7f406483", "html_url": "https://github.com/rust-lang/rust/commit/39961390ad7b99f5f63d47144c03a7ef7f406483"}], "stats": {"total": 122, "additions": 64, "deletions": 58}, "files": [{"sha": "f37c6751381774d812c584f64182ce4c45a9c6f7", "filename": "compiler/rustc_codegen_ssa/src/target_features.rs", "status": "modified", "additions": 56, "deletions": 53, "changes": 109, "blob_url": "https://github.com/rust-lang/rust/blob/5a5621791f3fc6e27c692747ddd37672f83c7360/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a5621791f3fc6e27c692747ddd37672f83c7360/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs?ref=5a5621791f3fc6e27c692747ddd37672f83c7360", "patch": "@@ -44,105 +44,108 @@ const ARM_ALLOWED_FEATURES: &[(&str, Option<Symbol>)] = &[\n \n const AARCH64_ALLOWED_FEATURES: &[(&str, Option<Symbol>)] = &[\n     // FEAT_AdvSimd\n-    (\"neon\", Some(sym::aarch64_target_feature)),\n+    (\"neon\", None),\n     // FEAT_FP\n-    (\"fp\", Some(sym::aarch64_target_feature)),\n+    (\"fp\", None),\n     // FEAT_FP16\n-    (\"fp16\", Some(sym::aarch64_target_feature)),\n+    (\"fp16\", None),\n     // FEAT_SVE\n-    (\"sve\", Some(sym::aarch64_target_feature)),\n+    (\"sve\", None),\n     // FEAT_CRC\n-    (\"crc\", Some(sym::aarch64_target_feature)),\n+    (\"crc\", None),\n     // FEAT_RAS\n-    (\"ras\", Some(sym::aarch64_target_feature)),\n+    (\"ras\", None),\n     // FEAT_LSE\n-    (\"lse\", Some(sym::aarch64_target_feature)),\n+    (\"lse\", None),\n     // FEAT_RDM\n-    (\"rdm\", Some(sym::aarch64_target_feature)),\n+    (\"rdm\", None),\n     // FEAT_RCPC\n-    (\"rcpc\", Some(sym::aarch64_target_feature)),\n+    (\"rcpc\", None),\n     // FEAT_RCPC2\n-    (\"rcpc2\", Some(sym::aarch64_target_feature)),\n+    (\"rcpc2\", None),\n     // FEAT_DotProd\n-    (\"dotprod\", Some(sym::aarch64_target_feature)),\n+    (\"dotprod\", None),\n     // FEAT_TME\n-    (\"tme\", Some(sym::aarch64_target_feature)),\n+    (\"tme\", None),\n     // FEAT_FHM\n-    (\"fhm\", Some(sym::aarch64_target_feature)),\n+    (\"fhm\", None),\n     // FEAT_DIT\n-    (\"dit\", Some(sym::aarch64_target_feature)),\n+    (\"dit\", None),\n     // FEAT_FLAGM\n-    (\"flagm\", Some(sym::aarch64_target_feature)),\n+    (\"flagm\", None),\n     // FEAT_SSBS\n-    (\"ssbs\", Some(sym::aarch64_target_feature)),\n+    (\"ssbs\", None),\n     // FEAT_SB\n-    (\"sb\", Some(sym::aarch64_target_feature)),\n+    (\"sb\", None),\n     // FEAT_PAUTH (address authentication)\n-    (\"paca\", Some(sym::aarch64_target_feature)),\n+    (\"paca\", None),\n     // FEAT_PAUTH (generic authentication)\n-    (\"pacg\", Some(sym::aarch64_target_feature)),\n+    (\"pacg\", None),\n     // FEAT_DPB\n-    (\"dpb\", Some(sym::aarch64_target_feature)),\n+    (\"dpb\", None),\n     // FEAT_DPB2\n-    (\"dpb2\", Some(sym::aarch64_target_feature)),\n+    (\"dpb2\", None),\n     // FEAT_SVE2\n-    (\"sve2\", Some(sym::aarch64_target_feature)),\n+    (\"sve2\", None),\n     // FEAT_SVE2_AES\n-    (\"sve2-aes\", Some(sym::aarch64_target_feature)),\n+    (\"sve2-aes\", None),\n     // FEAT_SVE2_SM4\n-    (\"sve2-sm4\", Some(sym::aarch64_target_feature)),\n+    (\"sve2-sm4\", None),\n     // FEAT_SVE2_SHA3\n-    (\"sve2-sha3\", Some(sym::aarch64_target_feature)),\n+    (\"sve2-sha3\", None),\n     // FEAT_SVE2_BitPerm\n-    (\"sve2-bitperm\", Some(sym::aarch64_target_feature)),\n+    (\"sve2-bitperm\", None),\n     // FEAT_FRINTTS\n-    (\"frintts\", Some(sym::aarch64_target_feature)),\n+    (\"frintts\", None),\n     // FEAT_I8MM\n-    (\"i8mm\", Some(sym::aarch64_target_feature)),\n+    (\"i8mm\", None),\n     // FEAT_F32MM\n-    (\"f32mm\", Some(sym::aarch64_target_feature)),\n+    (\"f32mm\", None),\n     // FEAT_F64MM\n-    (\"f64mm\", Some(sym::aarch64_target_feature)),\n+    (\"f64mm\", None),\n     // FEAT_BF16\n-    (\"bf16\", Some(sym::aarch64_target_feature)),\n+    (\"bf16\", None),\n     // FEAT_RAND\n-    (\"rand\", Some(sym::aarch64_target_feature)),\n+    (\"rand\", None),\n     // FEAT_BTI\n-    (\"bti\", Some(sym::aarch64_target_feature)),\n+    (\"bti\", None),\n     // FEAT_MTE\n-    (\"mte\", Some(sym::aarch64_target_feature)),\n+    (\"mte\", None),\n     // FEAT_JSCVT\n-    (\"jsconv\", Some(sym::aarch64_target_feature)),\n+    (\"jsconv\", None),\n     // FEAT_FCMA\n-    (\"fcma\", Some(sym::aarch64_target_feature)),\n+    (\"fcma\", None),\n     // FEAT_AES\n-    (\"aes\", Some(sym::aarch64_target_feature)),\n+    (\"aes\", None),\n     // FEAT_SHA1 & FEAT_SHA256\n-    (\"sha2\", Some(sym::aarch64_target_feature)),\n+    (\"sha2\", None),\n     // FEAT_SHA512 & FEAT_SHA3\n-    (\"sha3\", Some(sym::aarch64_target_feature)),\n+    (\"sha3\", None),\n     // FEAT_SM3 & FEAT_SM4\n-    (\"sm4\", Some(sym::aarch64_target_feature)),\n+    (\"sm4\", None),\n     // FEAT_PAN\n-    (\"pan\", Some(sym::aarch64_target_feature)),\n+    (\"pan\", None),\n     // FEAT_LOR\n-    (\"lor\", Some(sym::aarch64_target_feature)),\n+    (\"lor\", None),\n     // FEAT_VHE\n-    (\"vh\", Some(sym::aarch64_target_feature)),\n+    (\"vh\", None),\n     // FEAT_PMUv3\n-    (\"pmuv3\", Some(sym::aarch64_target_feature)),\n+    (\"pmuv3\", None),\n     // FEAT_SPE\n-    (\"spe\", Some(sym::aarch64_target_feature)),\n-    (\"v8.1a\", Some(sym::aarch64_target_feature)),\n-    (\"v8.2a\", Some(sym::aarch64_target_feature)),\n-    (\"v8.3a\", Some(sym::aarch64_target_feature)),\n-    (\"v8.4a\", Some(sym::aarch64_target_feature)),\n-    (\"v8.5a\", Some(sym::aarch64_target_feature)),\n-    (\"v8.6a\", Some(sym::aarch64_target_feature)),\n-    (\"v8.7a\", Some(sym::aarch64_target_feature)),\n+    (\"spe\", None),\n+    (\"v8.1a\", Some(sym::aarch64_ver_target_feature)),\n+    (\"v8.2a\", Some(sym::aarch64_ver_target_feature)),\n+    (\"v8.3a\", Some(sym::aarch64_ver_target_feature)),\n+    (\"v8.4a\", Some(sym::aarch64_ver_target_feature)),\n+    (\"v8.5a\", Some(sym::aarch64_ver_target_feature)),\n+    (\"v8.6a\", Some(sym::aarch64_ver_target_feature)),\n+    (\"v8.7a\", Some(sym::aarch64_ver_target_feature)),\n ];\n \n-const AARCH64_TIED_FEATURES: &[&[&str]] = &[&[\"paca\", \"pacg\"]];\n+const AARCH64_TIED_FEATURES: &[&[&str]] = &[\n+    &[\"fp\", \"neon\"],   // Silicon always has both, so avoid needless complications\n+    &[\"paca\", \"pacg\"], // Together these represent `pauth` in LLVM\n+];\n \n const X86_ALLOWED_FEATURES: &[(&str, Option<Symbol>)] = &[\n     (\"adx\", Some(sym::adx_target_feature)),"}, {"sha": "e49f40ff1a1845524110d27953a89db30443a768", "filename": "compiler/rustc_feature/src/accepted.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a5621791f3fc6e27c692747ddd37672f83c7360/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a5621791f3fc6e27c692747ddd37672f83c7360/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs?ref=5a5621791f3fc6e27c692747ddd37672f83c7360", "patch": "@@ -46,6 +46,8 @@ declare_features! (\n     // feature-group-start: accepted features\n     // -------------------------------------------------------------------------\n \n+    /// Allows `#[target_feature(...)]` on aarch64 platforms\n+    (accepted, aarch64_target_feature, \"1.61.0\", Some(44839), None),\n     /// Allows the sysV64 ABI to be specified on all platforms\n     /// instead of just the platforms on which it is the C ABI.\n     (accepted, abi_sysv64, \"1.24.0\", Some(36167), None),"}, {"sha": "0f9127c4537270ba64efa6e639ecd89004bd5c7b", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a5621791f3fc6e27c692747ddd37672f83c7360/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a5621791f3fc6e27c692747ddd37672f83c7360/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=5a5621791f3fc6e27c692747ddd37672f83c7360", "patch": "@@ -241,7 +241,7 @@ declare_features! (\n     // FIXME: Document these and merge with the list below.\n \n     // Unstable `#[target_feature]` directives.\n-    (active, aarch64_target_feature, \"1.27.0\", Some(44839), None),\n+    (active, aarch64_ver_target_feature, \"1.27.0\", Some(44839), None),\n     (active, adx_target_feature, \"1.32.0\", Some(44839), None),\n     (active, arm_target_feature, \"1.27.0\", Some(44839), None),\n     (active, avx512_target_feature, \"1.27.0\", Some(44839), None),"}, {"sha": "c603f21de994817ff58a240af8b24cd839387035", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a5621791f3fc6e27c692747ddd37672f83c7360/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a5621791f3fc6e27c692747ddd37672f83c7360/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=5a5621791f3fc6e27c692747ddd37672f83c7360", "patch": "@@ -278,6 +278,7 @@ symbols! {\n         _task_context,\n         a32,\n         aarch64_target_feature,\n+        aarch64_ver_target_feature,\n         abi,\n         abi_amdgpu_kernel,\n         abi_avr_interrupt,"}, {"sha": "d5c6ceb48c25e61bb1f34b9dc98a9b6e52fdab4f", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a5621791f3fc6e27c692747ddd37672f83c7360/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a5621791f3fc6e27c692747ddd37672f83c7360/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=5a5621791f3fc6e27c692747ddd37672f83c7360", "patch": "@@ -2680,7 +2680,6 @@ fn from_target_feature(\n             // Only allow features whose feature gates have been enabled.\n             let allowed = match feature_gate.as_ref().copied() {\n                 Some(sym::arm_target_feature) => rust_features.arm_target_feature,\n-                Some(sym::aarch64_target_feature) => rust_features.aarch64_target_feature,\n                 Some(sym::hexagon_target_feature) => rust_features.hexagon_target_feature,\n                 Some(sym::powerpc_target_feature) => rust_features.powerpc_target_feature,\n                 Some(sym::mips_target_feature) => rust_features.mips_target_feature,\n@@ -2696,6 +2695,7 @@ fn from_target_feature(\n                 Some(sym::f16c_target_feature) => rust_features.f16c_target_feature,\n                 Some(sym::ermsb_target_feature) => rust_features.ermsb_target_feature,\n                 Some(sym::bpf_target_feature) => rust_features.bpf_target_feature,\n+                Some(sym::aarch64_ver_target_feature) => rust_features.aarch64_ver_target_feature,\n                 Some(name) => bug!(\"unknown target feature gate {}\", name),\n                 None => true,\n             };"}, {"sha": "1f10e0e2792f49c69ce2ad5a09ca2c6ece833c15", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a5621791f3fc6e27c692747ddd37672f83c7360/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a5621791f3fc6e27c692747ddd37672f83c7360/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=5a5621791f3fc6e27c692747ddd37672f83c7360", "patch": "@@ -206,7 +206,7 @@\n #![feature(asm_const)]\n //\n // Target features:\n-#![feature(aarch64_target_feature)]\n+#![cfg_attr(bootstrap, feature(aarch64_target_feature))]\n #![feature(adx_target_feature)]\n #![feature(arm_target_feature)]\n #![feature(avx512_target_feature)]"}, {"sha": "2382c98f8f12848c051b6480c1ef3291a2975ac7", "filename": "src/test/ui/target-feature/gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a5621791f3fc6e27c692747ddd37672f83c7360/src%2Ftest%2Fui%2Ftarget-feature%2Fgate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a5621791f3fc6e27c692747ddd37672f83c7360/src%2Ftest%2Fui%2Ftarget-feature%2Fgate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftarget-feature%2Fgate.rs?ref=5a5621791f3fc6e27c692747ddd37672f83c7360", "patch": "@@ -16,7 +16,6 @@\n // gate-test-avx512_target_feature\n // gate-test-tbm_target_feature\n // gate-test-arm_target_feature\n-// gate-test-aarch64_target_feature\n // gate-test-hexagon_target_feature\n // gate-test-mips_target_feature\n // gate-test-wasm_target_feature\n@@ -28,6 +27,7 @@\n // gate-test-riscv_target_feature\n // gate-test-ermsb_target_feature\n // gate-test-bpf_target_feature\n+// gate-test-aarch64_ver_target_feature\n \n #[target_feature(enable = \"avx512bw\")]\n //~^ ERROR: currently unstable"}, {"sha": "048777cb3ba2644599d32b409af42112c0d98b26", "filename": "src/test/ui/target-feature/tied-features.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a5621791f3fc6e27c692747ddd37672f83c7360/src%2Ftest%2Fui%2Ftarget-feature%2Ftied-features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a5621791f3fc6e27c692747ddd37672f83c7360/src%2Ftest%2Fui%2Ftarget-feature%2Ftied-features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftarget-feature%2Ftied-features.rs?ref=5a5621791f3fc6e27c692747ddd37672f83c7360", "patch": "@@ -1,7 +1,7 @@\n // build-fail\n // compile-flags: --crate-type=rlib --target=aarch64-unknown-linux-gnu\n // needs-llvm-components: aarch64\n-#![feature(aarch64_target_feature, target_feature_11)]\n+#![cfg_attr(bootstrap, feature(aarch64_target_feature))]\n #![feature(no_core, lang_items)]\n #![no_core]\n "}]}