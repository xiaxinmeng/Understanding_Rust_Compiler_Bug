{"sha": "0a3180baab7c361ee85958c88d971190649c3b70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMzE4MGJhYWI3YzM2MWVlODU5NThjODhkOTcxMTkwNjQ5YzNiNzA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-08-03T20:24:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-03T20:24:53Z"}, "message": "Auto merge of #35261 - eddyb:llvm-autoupgrade, r=nikomatsakis\n\nSupport removed LLVM intrinsics by invoking its AutoUpgrade mechanism.\n\nTurns out that LLVM sometimes renames platform intrinsics or replaces them with first-class instructions.\nFor example, signed minimum became `select (icmp SLT, a, b), a, b` where `a` and `b` are vectors.\n\nThis is blocking the Servo rustup ([relevant failure](http://build.servo.org/builders/windows-dev/builds/226/steps/compile/logs/stdio)), as they're using a few such intrinsics.\nThe fix in this PR is to invoke LLVM's own `AutoUpgrade` mechanism to do the replacements.", "tree": {"sha": "388f739785d96d6aad567df67dc51b98704340c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/388f739785d96d6aad567df67dc51b98704340c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a3180baab7c361ee85958c88d971190649c3b70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a3180baab7c361ee85958c88d971190649c3b70", "html_url": "https://github.com/rust-lang/rust/commit/0a3180baab7c361ee85958c88d971190649c3b70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a3180baab7c361ee85958c88d971190649c3b70/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0b4e6764809022433edbff275528ec2540bda73", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0b4e6764809022433edbff275528ec2540bda73", "html_url": "https://github.com/rust-lang/rust/commit/a0b4e6764809022433edbff275528ec2540bda73"}, {"sha": "63f0c4de6732b699e2b4ded5fb9a8530a1c8a5ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/63f0c4de6732b699e2b4ded5fb9a8530a1c8a5ac", "html_url": "https://github.com/rust-lang/rust/commit/63f0c4de6732b699e2b4ded5fb9a8530a1c8a5ac"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "3a20bb2714ece5b7967f9ee0eb698cd46d3a11dd", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0a3180baab7c361ee85958c88d971190649c3b70/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/0a3180baab7c361ee85958c88d971190649c3b70/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=0a3180baab7c361ee85958c88d971190649c3b70", "patch": "@@ -17,6 +17,7 @@\n #include \"llvm/Support/Host.h\"\n #include \"llvm/Analysis/TargetLibraryInfo.h\"\n #include \"llvm/Analysis/TargetTransformInfo.h\"\n+#include \"llvm/IR/AutoUpgrade.h\"\n #include \"llvm/Target/TargetMachine.h\"\n #include \"llvm/Target/TargetSubtargetInfo.h\"\n #include \"llvm/Transforms/IPO/PassManagerBuilder.h\"\n@@ -361,10 +362,17 @@ extern \"C\" void\n LLVMRustRunFunctionPassManager(LLVMPassManagerRef PM, LLVMModuleRef M) {\n     llvm::legacy::FunctionPassManager *P = unwrap<llvm::legacy::FunctionPassManager>(PM);\n     P->doInitialization();\n+\n+    // Upgrade all calls to old intrinsics first.\n+    for (Module::iterator I = unwrap(M)->begin(),\n+         E = unwrap(M)->end(); I != E;)\n+        UpgradeCallsToIntrinsic(&*I++); // must be post-increment, as we remove\n+\n     for (Module::iterator I = unwrap(M)->begin(),\n          E = unwrap(M)->end(); I != E; ++I)\n         if (!I->isDeclaration())\n             P->run(*I);\n+\n     P->doFinalization();\n }\n "}, {"sha": "821a505c13849c4f6d2f41739c91347e6f22d5a3", "filename": "src/test/run-pass/simd-upgraded.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/0a3180baab7c361ee85958c88d971190649c3b70/src%2Ftest%2Frun-pass%2Fsimd-upgraded.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a3180baab7c361ee85958c88d971190649c3b70/src%2Ftest%2Frun-pass%2Fsimd-upgraded.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-upgraded.rs?ref=0a3180baab7c361ee85958c88d971190649c3b70", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that removed LLVM SIMD intrinsics continue\n+// to work via the \"AutoUpgrade\" mechanism.\n+\n+#![feature(cfg_target_feature, repr_simd)]\n+#![feature(platform_intrinsics, stmt_expr_attributes)]\n+\n+#[repr(simd)]\n+#[derive(PartialEq, Debug)]\n+struct i16x8(i16, i16, i16, i16, i16, i16, i16, i16);\n+\n+fn main() {\n+    #[cfg(target_feature = \"sse2\")] unsafe {\n+        extern \"platform-intrinsic\" {\n+            fn x86_mm_min_epi16(x: i16x8, y: i16x8) -> i16x8;\n+        }\n+        assert_eq!(x86_mm_min_epi16(i16x8(0, 1, 2, 3, 4, 5, 6, 7),\n+                                    i16x8(7, 6, 5, 4, 3, 2, 1, 0)),\n+                                    i16x8(0, 1, 2, 3, 3, 2, 1, 0));\n+    };\n+}"}]}