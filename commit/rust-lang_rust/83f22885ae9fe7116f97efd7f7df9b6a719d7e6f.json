{"sha": "83f22885ae9fe7116f97efd7f7df9b6a719d7e6f", "node_id": "C_kwDOAAsO6NoAKDgzZjIyODg1YWU5ZmU3MTE2Zjk3ZWZkN2Y3ZGY5YjZhNzE5ZDdlNmY", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-07-01T19:13:46Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-07-01T21:33:34Z"}, "message": "Improve click behavior of the source code mobile full-screen \"sidebar\"\n\nOn desktop, if you open the source code sidebar, it stays open even when you\nmove from page to page. It used to do the same thing on mobile, but I think\nthat's stupid. Since the file list fills the entire screen on mobile, and you\ncan't really do anything with the currently selected file other than dismiss\nthe \"sidebar\" to look at it, it's safe to assume that anybody who clicks a\nfile in that list probably wants the list to go away so they can see it.", "tree": {"sha": "c74cac98749540dc40d78236f1789ddc413f28dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c74cac98749540dc40d78236f1789ddc413f28dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83f22885ae9fe7116f97efd7f7df9b6a719d7e6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83f22885ae9fe7116f97efd7f7df9b6a719d7e6f", "html_url": "https://github.com/rust-lang/rust/commit/83f22885ae9fe7116f97efd7f7df9b6a719d7e6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83f22885ae9fe7116f97efd7f7df9b6a719d7e6f/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b9775fe17893cba641a071de7e0a7c8f478c41b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b9775fe17893cba641a071de7e0a7c8f478c41b", "html_url": "https://github.com/rust-lang/rust/commit/5b9775fe17893cba641a071de7e0a7c8f478c41b"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "04492da82265ddfd5c13178002eca3dd646b3d52", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/83f22885ae9fe7116f97efd7f7df9b6a719d7e6f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/83f22885ae9fe7116f97efd7f7df9b6a719d7e6f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=83f22885ae9fe7116f97efd7f7df9b6a719d7e6f", "patch": "@@ -1683,6 +1683,11 @@ details.rustdoc-toggle[open] > summary.hideme::after {\n \n /* Media Queries */\n \n+/*\n+WARNING: RUSTDOC_MOBILE_BREAKPOINT MEDIA QUERY;\n+If you update this line, then you also need to update the line with the same warning\n+in storage.js plus the media query with (max-width: 700px)\n+*/\n @media (min-width: 701px) {\n \t/* In case there is no documentation before a code block, we need to add some margin at the top\n \tto prevent an overlay between the \"collapse toggle\" and the information tooltip.\n@@ -1703,6 +1708,11 @@ details.rustdoc-toggle[open] > summary.hideme::after {\n \t}\n }\n \n+/*\n+WARNING: RUSTDOC_MOBILE_BREAKPOINT MEDIA QUERY\n+If you update this line, then you also need to update the line with the same warning\n+in storage.js plus the media query with (min-width: 701px)\n+*/\n @media (max-width: 700px) {\n \t/* When linking to an item with an `id` (for instance, by clicking a link in the sidebar,\n \t   or visiting a URL with a fragment like `#method.new`, we don't want the item to be obscured"}, {"sha": "586c14c33a3ba120f9d5851308c89ac9c8e3bef5", "filename": "src/librustdoc/html/static/js/source-script.js", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/83f22885ae9fe7116f97efd7f7df9b6a719d7e6f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "raw_url": "https://github.com/rust-lang/rust/raw/83f22885ae9fe7116f97efd7f7df9b6a719d7e6f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js?ref=83f22885ae9fe7116f97efd7f7df9b6a719d7e6f", "patch": "@@ -12,6 +12,12 @@\n const rootPath = document.getElementById(\"rustdoc-vars\").attributes[\"data-root-path\"].value;\n let oldScrollPosition = 0;\n \n+function closeSidebarIfMobile() {\n+    if (window.innerWidth < window.RUSTDOC_MOBILE_BREAKPOINT) {\n+        updateLocalStorage(\"source-sidebar-show\", \"false\");\n+    }\n+}\n+\n function createDirEntry(elem, parent, fullPath, hasFoundFile) {\n     const name = document.createElement(\"div\");\n     name.className = \"name\";\n@@ -48,6 +54,7 @@ function createDirEntry(elem, parent, fullPath, hasFoundFile) {\n             const file = document.createElement(\"a\");\n             file.innerText = file_text;\n             file.href = rootPath + \"src/\" + fullPath + file_text + \".html\";\n+            file.addEventListener(\"click\", closeSidebarIfMobile);\n             const w = window.location.href.split(\"#\")[0];\n             if (!hasFoundFile && w === file.href) {\n                 file.className = \"selected\";\n@@ -66,7 +73,7 @@ function createDirEntry(elem, parent, fullPath, hasFoundFile) {\n function toggleSidebar() {\n     const child = this.children[0];\n     if (child.innerText === \">\") {\n-        if (window.innerWidth < 701) {\n+        if (window.innerWidth < window.RUSTDOC_MOBILE_BREAKPOINT) {\n             // This is to keep the scroll position on mobile.\n             oldScrollPosition = window.scrollY;\n             document.body.style.position = \"fixed\";\n@@ -76,7 +83,7 @@ function toggleSidebar() {\n         child.innerText = \"<\";\n         updateLocalStorage(\"source-sidebar-show\", \"true\");\n     } else {\n-        if (window.innerWidth < 701) {\n+        if (window.innerWidth < window.RUSTDOC_MOBILE_BREAKPOINT) {\n             // This is to keep the scroll position on mobile.\n             document.body.style.position = \"\";\n             document.body.style.top = \"\";"}, {"sha": "0c5389d45e5b7aa1bca73c66af049a09cd59625a", "filename": "src/librustdoc/html/static/js/storage.js", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/83f22885ae9fe7116f97efd7f7df9b6a719d7e6f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/83f22885ae9fe7116f97efd7f7df9b6a719d7e6f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js?ref=83f22885ae9fe7116f97efd7f7df9b6a719d7e6f", "patch": "@@ -9,6 +9,11 @@ const darkThemes = [\"dark\", \"ayu\"];\n window.currentTheme = document.getElementById(\"themeStyle\");\n window.mainTheme = document.getElementById(\"mainThemeStyle\");\n \n+// WARNING: RUSTDOC_MOBILE_BREAKPOINT MEDIA QUERY\n+// If you update this line, then you also need to update the two media queries with the same\n+// warning in rustdoc.css\n+window.RUSTDOC_MOBILE_BREAKPOINT = 701;\n+\n const settingsDataset = (function() {\n     const settingsElement = document.getElementById(\"default-settings\");\n     if (settingsElement === null) {"}, {"sha": "7728bfd025ff213be4c9ef076ffda9d4477b8853", "filename": "src/test/rustdoc-gui/sidebar-source-code-display.goml", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/83f22885ae9fe7116f97efd7f7df9b6a719d7e6f/src%2Ftest%2Frustdoc-gui%2Fsidebar-source-code-display.goml", "raw_url": "https://github.com/rust-lang/rust/raw/83f22885ae9fe7116f97efd7f7df9b6a719d7e6f/src%2Ftest%2Frustdoc-gui%2Fsidebar-source-code-display.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsidebar-source-code-display.goml?ref=83f22885ae9fe7116f97efd7f7df9b6a719d7e6f", "patch": "@@ -18,6 +18,16 @@ click: \"#sidebar-toggle\"\n // Because of the transition CSS, we check by using `wait-for-css` instead of `assert-css`.\n wait-for-css: (\"#sidebar-toggle\", {\"visibility\": \"visible\", \"opacity\": 1})\n \n+// We now check that opening the sidebar and clicking a link will leave it open.\n+// The behavior here on desktop is different than the behavior on mobile,\n+// but since the sidebar doesn't fill the entire screen here, it makes sense to have the\n+// sidebar stay resident.\n+wait-for-css: (\".sidebar\", {\"width\": \"300px\"})\n+assert-local-storage: {\"rustdoc-source-sidebar-show\": \"true\"}\n+click: \".sidebar a.selected\"\n+goto: file://|DOC_PATH|/src/test_docs/lib.rs.html\n+assert-local-storage: {\"rustdoc-source-sidebar-show\": \"true\"}\n+\n // Now we check the display of the sidebar items.\n show-text: true\n \n@@ -152,3 +162,15 @@ click: \"#sidebar-toggle\"\n wait-for-css: (\".sidebar\", {\"width\": \"0px\"})\n // The \"scrollTop\" property should be the same.\n assert-window-property: {\"pageYOffset\": \"2519\"}\n+\n+// We now check that opening the sidebar and clicking a link will close it.\n+// The behavior here on mobile is different than the behavior on desktop,\n+// but common sense dictates that if you have a list of files that fills the entire screen, and\n+// you click one of them, you probably want to actually see the file's contents, and not just\n+// make it the current selection.\n+click: \"#sidebar-toggle\"\n+wait-for-css: (\".sidebar\", {\"width\": \"500px\"})\n+assert-local-storage: {\"rustdoc-source-sidebar-show\": \"true\"}\n+click: \".sidebar a.selected\"\n+goto: file://|DOC_PATH|/src/test_docs/lib.rs.html\n+assert-local-storage: {\"rustdoc-source-sidebar-show\": \"false\"}"}]}