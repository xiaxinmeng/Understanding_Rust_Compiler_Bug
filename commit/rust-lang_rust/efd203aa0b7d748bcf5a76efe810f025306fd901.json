{"sha": "efd203aa0b7d748bcf5a76efe810f025306fd901", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmZDIwM2FhMGI3ZDc0OGJjZjVhNzZlZmU4MTBmMDI1MzA2ZmQ5MDE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-08T10:22:16Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-08T10:22:16Z"}, "message": "Implement indexing for arrays", "tree": {"sha": "a48e4b7349640244bfa1ac4f8134d71aadcc3d30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a48e4b7349640244bfa1ac4f8134d71aadcc3d30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efd203aa0b7d748bcf5a76efe810f025306fd901", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efd203aa0b7d748bcf5a76efe810f025306fd901", "html_url": "https://github.com/rust-lang/rust/commit/efd203aa0b7d748bcf5a76efe810f025306fd901", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efd203aa0b7d748bcf5a76efe810f025306fd901/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ece497cc84834e00ff6b1e43f28d17598efc24a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ece497cc84834e00ff6b1e43f28d17598efc24a2", "html_url": "https://github.com/rust-lang/rust/commit/ece497cc84834e00ff6b1e43f28d17598efc24a2"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "74735c6a12de815ef60535b8833008154caaf2fb", "filename": "examples/example.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/efd203aa0b7d748bcf5a76efe810f025306fd901/examples%2Fexample.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efd203aa0b7d748bcf5a76efe810f025306fd901/examples%2Fexample.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/examples%2Fexample.rs?ref=efd203aa0b7d748bcf5a76efe810f025306fd901", "patch": "@@ -142,3 +142,7 @@ unsafe fn call_uninit() -> u8 {\n /*unsafe fn deref_str_ptr(s: *const str) -> &'static str {\n     &*s\n }*/\n+\n+fn use_array(arr: [u8; 3]) -> u8 {\n+    arr[1]\n+}"}, {"sha": "dc19d66b214464acd9a958e7ae20dce5f5987259", "filename": "examples/mini_core.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/efd203aa0b7d748bcf5a76efe810f025306fd901/examples%2Fmini_core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efd203aa0b7d748bcf5a76efe810f025306fd901/examples%2Fmini_core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/examples%2Fmini_core.rs?ref=efd203aa0b7d748bcf5a76efe810f025306fd901", "patch": "@@ -141,3 +141,17 @@ pub mod intrinsics {\n         pub fn uninit<T>() -> T;\n     }\n }\n+\n+#[lang = \"index\"]\n+pub trait Index<Idx: ?Sized> {\n+    type Output: ?Sized;\n+    fn index(&self, index: Idx) -> &Self::Output;\n+}\n+\n+impl<T> Index<usize> for [T; 3] {\n+    type Output = T;\n+\n+    fn index(&self, index: usize) -> &Self::Output {\n+        &self[index]\n+    }\n+}"}, {"sha": "723eb8cdc766b750baa209ed3ec7706b493d6ebc", "filename": "src/base.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/efd203aa0b7d748bcf5a76efe810f025306fd901/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efd203aa0b7d748bcf5a76efe810f025306fd901/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=efd203aa0b7d748bcf5a76efe810f025306fd901", "patch": "@@ -800,7 +800,8 @@ pub fn trans_place<'a, 'tcx: 'a>(\n                 ),\n                 ProjectionElem::Field(field, _ty) => base.place_field(fx, field),\n                 ProjectionElem::Index(local) => {\n-                    unimplemented!(\"projection index {:?} {:?}\", projection.base, local)\n+                    let index = fx.get_local_place(local).to_cvalue(fx).load_value(fx);\n+                    base.place_index(fx, index)\n                 }\n                 ProjectionElem::ConstantIndex {\n                     offset,"}, {"sha": "c3398a9e9f390517df3f85c7581e386ac0458f5d", "filename": "src/common.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/efd203aa0b7d748bcf5a76efe810f025306fd901/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efd203aa0b7d748bcf5a76efe810f025306fd901/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=efd203aa0b7d748bcf5a76efe810f025306fd901", "patch": "@@ -297,6 +297,21 @@ impl<'a, 'tcx: 'a> CPlace<'tcx> {\n         CPlace::Addr(field_ptr, field_layout)\n     }\n \n+    pub fn place_index(self, fx: &mut FunctionCx<'a, 'tcx>, index: Value) -> CPlace<'tcx> {\n+        let addr = self.expect_addr();\n+        let layout = self.layout();\n+        match layout.ty.sty {\n+            TypeVariants::TyArray(elem_ty, _) => {\n+                let elem_layout = fx.layout_of(elem_ty);\n+                let size = fx.bcx.ins().iconst(types::I64, elem_layout.size.bytes() as i64);\n+                let offset = fx.bcx.ins().imul(size, index);\n+                CPlace::Addr(fx.bcx.ins().iadd(addr, offset), elem_layout)\n+            }\n+            TypeVariants::TySlice(_elem_ty) => unimplemented!(\"place_index(TySlice)\"),\n+            _ => bug!(\"place_index({:?})\", layout.ty),\n+        }\n+    }\n+\n     pub fn unchecked_cast_to(self, layout: TyLayout<'tcx>) -> Self {\n         match self {\n             CPlace::Var(var, _) => CPlace::Var(var, layout),"}]}