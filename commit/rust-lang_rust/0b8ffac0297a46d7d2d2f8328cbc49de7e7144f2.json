{"sha": "0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2", "node_id": "C_kwDOAAsO6NoAKDBiOGZmYWMwMjk3YTQ2ZDdkMmQyZjgzMjhjYmM0OWRlN2U3MTQ0ZjI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-23T21:21:52Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-10-28T01:41:57Z"}, "message": "fix a bunch of the other clippy warnings that look interesting", "tree": {"sha": "dd52d365efca0e3c446641d74915085cad6dc775", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd52d365efca0e3c446641d74915085cad6dc775"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2", "html_url": "https://github.com/rust-lang/rust/commit/0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c493ee4828ab8e94ed175ec781afe7351bf89784", "url": "https://api.github.com/repos/rust-lang/rust/commits/c493ee4828ab8e94ed175ec781afe7351bf89784", "html_url": "https://github.com/rust-lang/rust/commit/c493ee4828ab8e94ed175ec781afe7351bf89784"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "7b76c232937dc7cea63d7df07716777730cbeef2", "filename": "src/comment.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2", "patch": "@@ -405,7 +405,7 @@ impl CodeBlockAttribute {\n     /// attributes are valid rust attributes\n     /// See <https://doc.rust-lang.org/rustdoc/print.html#attributes>\n     fn new(attributes: &str) -> CodeBlockAttribute {\n-        for attribute in attributes.split(\",\") {\n+        for attribute in attributes.split(',') {\n             match attribute.trim() {\n                 \"\" | \"rust\" | \"should_panic\" | \"no_run\" | \"edition2015\" | \"edition2018\"\n                 | \"edition2021\" => (),\n@@ -1384,7 +1384,7 @@ impl<'a> Iterator for LineClasses<'a> {\n             None => unreachable!(),\n         };\n \n-        while let Some((kind, c)) = self.base.next() {\n+        for (kind, c) in self.base.by_ref() {\n             // needed to set the kind of the ending character on the last line\n             self.kind = kind;\n             if c == '\\n' {"}, {"sha": "1ca01f9db9a42708b16af1ed67055189d362c154", "filename": "src/expr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2", "patch": "@@ -1207,11 +1207,11 @@ fn rewrite_int_lit(context: &RewriteContext<'_>, lit: &ast::Lit, shape: Shape) -\n     let span = lit.span;\n     let symbol = lit.token.symbol.as_str();\n \n-    if symbol.starts_with(\"0x\") {\n+    if let Some(symbol_stripped) = symbol.strip_prefix(\"0x\") {\n         let hex_lit = match context.config.hex_literal_case() {\n             HexLiteralCase::Preserve => None,\n-            HexLiteralCase::Upper => Some(symbol[2..].to_ascii_uppercase()),\n-            HexLiteralCase::Lower => Some(symbol[2..].to_ascii_lowercase()),\n+            HexLiteralCase::Upper => Some(symbol_stripped.to_ascii_uppercase()),\n+            HexLiteralCase::Lower => Some(symbol_stripped.to_ascii_lowercase()),\n         };\n         if let Some(hex_lit) = hex_lit {\n             return wrap_str("}, {"sha": "22d23fc1cdba49bc3f1f68fc4247f5f521ceeabd", "filename": "src/matches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2", "patch": "@@ -168,7 +168,7 @@ fn collect_beginning_verts(\n         .map(|a| {\n             context\n                 .snippet(a.pat.span)\n-                .starts_with(\"|\")\n+                .starts_with('|')\n                 .then(|| a.pat.span().lo())\n         })\n         .collect()"}, {"sha": "88d434d759db891c7432915a17d1a32dbc27c16e", "filename": "src/modules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2/src%2Fmodules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2/src%2Fmodules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmodules.rs?ref=0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2", "patch": "@@ -197,7 +197,7 @@ impl<'ast, 'sess, 'c> ModResolver<'ast, 'sess> {\n     /// Visit modules from AST.\n     fn visit_mod_from_ast(\n         &mut self,\n-        items: &'ast Vec<rustc_ast::ptr::P<ast::Item>>,\n+        items: &'ast [rustc_ast::ptr::P<ast::Item>],\n     ) -> Result<(), ModuleResolutionError> {\n         for item in items {\n             if is_cfg_if(item) {"}, {"sha": "a80d63201f982902a385d4a192273810fef1edce", "filename": "src/patterns.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=0b8ffac0297a46d7d2d2f8328cbc49de7e7144f2", "patch": "@@ -456,11 +456,11 @@ fn rewrite_tuple_pat(\n     context: &RewriteContext<'_>,\n     shape: Shape,\n ) -> Option<String> {\n-    let mut pat_vec: Vec<_> = pats.iter().map(|x| TuplePatField::Pat(x)).collect();\n-\n-    if pat_vec.is_empty() {\n+    if pats.is_empty() {\n         return Some(format!(\"{}()\", path_str.unwrap_or_default()));\n     }\n+    let mut pat_vec: Vec<_> = pats.iter().map(TuplePatField::Pat).collect();\n+\n     let wildcard_suffix_len = count_wildcard_suffix_len(context, &pat_vec, span, shape);\n     let (pat_vec, span) = if context.config.condense_wildcard_suffixes() && wildcard_suffix_len >= 2\n     {"}]}