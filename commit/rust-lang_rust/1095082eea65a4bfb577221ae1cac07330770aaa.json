{"sha": "1095082eea65a4bfb577221ae1cac07330770aaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwOTUwODJlZWE2NWE0YmZiNTc3MjIxYWUxY2FjMDczMzA3NzBhYWE=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-02-09T16:55:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-09T16:55:39Z"}, "message": "remove wrong packed struct test", "tree": {"sha": "008e42b696cb9cfe2d350602b7ccbe1fbfd61033", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/008e42b696cb9cfe2d350602b7ccbe1fbfd61033"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1095082eea65a4bfb577221ae1cac07330770aaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1095082eea65a4bfb577221ae1cac07330770aaa", "html_url": "https://github.com/rust-lang/rust/commit/1095082eea65a4bfb577221ae1cac07330770aaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1095082eea65a4bfb577221ae1cac07330770aaa/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1129ce51a6cc83ea7d7283fce194948feef4e319", "url": "https://api.github.com/repos/rust-lang/rust/commits/1129ce51a6cc83ea7d7283fce194948feef4e319", "html_url": "https://github.com/rust-lang/rust/commit/1129ce51a6cc83ea7d7283fce194948feef4e319"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "3a2cf28a24f86551c706e57b85944397a022de9e", "filename": "src/test/run-pass/dst-field-align.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1095082eea65a4bfb577221ae1cac07330770aaa/src%2Ftest%2Frun-pass%2Fdst-field-align.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1095082eea65a4bfb577221ae1cac07330770aaa/src%2Ftest%2Frun-pass%2Fdst-field-align.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdst-field-align.rs?ref=1095082eea65a4bfb577221ae1cac07330770aaa", "patch": "@@ -55,12 +55,6 @@ fn main() {\n     // The pointers should be the same\n     assert_eq!(ptr1, ptr2);\n \n-    // Test that packed structs are handled correctly\n-    let p : Packed<usize> = Packed { a: 0, b: 13 };\n-    assert_eq!(p.b.get(), 13);\n-    let p : &Packed<Bar> = &p;\n-    assert_eq!(p.b.get(), 13);\n-\n     // Test that nested DSTs work properly\n     let f : Foo<Foo<usize>> = Foo { a: 0, b: Foo { a: 1, b: 17 }};\n     assert_eq!(f.b.b.get(), 17);"}]}