{"sha": "7c6301496bbc5d1531369e94a17450c9ad0bbbe6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNjMwMTQ5NmJiYzVkMTUzMTM2OWU5NGExNzQ1MGM5YWQwYmJiZTY=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-05-21T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-05-29T14:11:28Z"}, "message": "liveness: Remove unused fallthrough_ln", "tree": {"sha": "e1959d35595869248425833fdabdf1c118be25d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1959d35595869248425833fdabdf1c118be25d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c6301496bbc5d1531369e94a17450c9ad0bbbe6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c6301496bbc5d1531369e94a17450c9ad0bbbe6", "html_url": "https://github.com/rust-lang/rust/commit/7c6301496bbc5d1531369e94a17450c9ad0bbbe6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c6301496bbc5d1531369e94a17450c9ad0bbbe6/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3342b4920f2c89e0e41a8c365f576c1d9cdc004", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3342b4920f2c89e0e41a8c365f576c1d9cdc004", "html_url": "https://github.com/rust-lang/rust/commit/b3342b4920f2c89e0e41a8c365f576c1d9cdc004"}], "stats": {"total": 10, "additions": 1, "deletions": 9}, "files": [{"sha": "33ee08aebc31fd1555ba9b5830df08b24a3f9b78", "filename": "src/librustc_passes/liveness.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7c6301496bbc5d1531369e94a17450c9ad0bbbe6/src%2Flibrustc_passes%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c6301496bbc5d1531369e94a17450c9ad0bbbe6/src%2Flibrustc_passes%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fliveness.rs?ref=7c6301496bbc5d1531369e94a17450c9ad0bbbe6", "patch": "@@ -83,8 +83,6 @@\n //!\n //! - `exit_ln`: a live node that is generated to represent every 'exit' from\n //!   the function, whether it be by explicit return, panic, or other means.\n-//!\n-//! - `fallthrough_ln`: a live node that represents a fallthrough\n \n use self::LiveNodeKind::*;\n use self::VarKind::*;\n@@ -638,7 +636,6 @@ impl RWUTable {\n #[derive(Copy, Clone)]\n struct Specials {\n     exit_ln: LiveNode,\n-    fallthrough_ln: LiveNode,\n }\n \n const ACC_READ: u32 = 1;\n@@ -668,7 +665,6 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n         //   an implicit return\n         let specials = Specials {\n             exit_ln: ir.add_live_node(ExitNode),\n-            fallthrough_ln: ir.add_live_node(ExitNode),\n         };\n \n         let tables = ir.tcx.typeck_tables_of(def_id);\n@@ -897,12 +893,8 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n     fn compute(&mut self, body: &hir::Expr<'_>) -> LiveNode {\n         debug!(\"compute: using id for body, {:?}\", body);\n \n-        // the fallthrough exit is only for those cases where we do not\n-        // explicitly return:\n         let s = self.s;\n-        self.init_from_succ(s.fallthrough_ln, s.exit_ln);\n-\n-        let entry_ln = self.propagate_through_expr(body, s.fallthrough_ln);\n+        let entry_ln = self.propagate_through_expr(body, s.exit_ln);\n \n         // hack to skip the loop unless debug! is enabled:\n         debug!("}]}