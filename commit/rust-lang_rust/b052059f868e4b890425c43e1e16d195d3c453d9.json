{"sha": "b052059f868e4b890425c43e1e16d195d3c453d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwNTIwNTlmODY4ZTRiODkwNDI1YzQzZTFlMTZkMTk1ZDNjNDUzZDk=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-24T13:47:27Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-24T13:47:27Z"}, "message": "Merge #302\n\n302: WIP: Support tracing lsp requests. r=DJMcNab a=DJMcNab\n\nEDIT: We need to work out a better way to handle settings before this can be merged. Help wanted\r\n\r\nTODO: Debug why decorations are sent even when highlightingOn is disabled\r\nThis makes the log volume so high its impossible to work with anyway.\r\n(Continuation of #84 [#99 only disabled using it, not making sure we don't send it]).\r\n\r\nThese logs can be used in https://microsoft.github.io/language-server-protocol/inspector/\n\nCo-authored-by: DJMcNab <36049421+djmcnab@users.noreply.github.com>", "tree": {"sha": "d761a1ec0346286f20c511ff8f76111313d30957", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d761a1ec0346286f20c511ff8f76111313d30957"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b052059f868e4b890425c43e1e16d195d3c453d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b052059f868e4b890425c43e1e16d195d3c453d9", "html_url": "https://github.com/rust-lang/rust/commit/b052059f868e4b890425c43e1e16d195d3c453d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b052059f868e4b890425c43e1e16d195d3c453d9/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "d77520fde3c953968beb09a3da80a0e7b17bbc04", "url": "https://api.github.com/repos/rust-lang/rust/commits/d77520fde3c953968beb09a3da80a0e7b17bbc04", "html_url": "https://github.com/rust-lang/rust/commit/d77520fde3c953968beb09a3da80a0e7b17bbc04"}, {"sha": "ecab036d6ffcb85c45a288b312d79141bcd86fd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecab036d6ffcb85c45a288b312d79141bcd86fd9", "html_url": "https://github.com/rust-lang/rust/commit/ecab036d6ffcb85c45a288b312d79141bcd86fd9"}], "stats": {"total": 56, "additions": 47, "deletions": 9}, "files": [{"sha": "33aa30d70bad6e5034e5fe7455010d09fb528d97", "filename": "crates/ra_lsp_server/src/main.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b052059f868e4b890425c43e1e16d195d3c453d9/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b052059f868e4b890425c43e1e16d195d3c453d9/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs?ref=b052059f868e4b890425c43e1e16d195d3c453d9", "patch": "@@ -27,7 +27,10 @@ fn main() -> Result<()> {\n #[derive(Deserialize)]\n #[serde(rename_all = \"camelCase\")]\n struct InitializationOptions {\n-    publish_decorations: bool,\n+    // Whether the client supports our custom highlighting publishing decorations.\n+    // This is different to the highlightingOn setting, which is whether the user\n+    // wants our custom highlighting to be used.\n+    publish_decorations: Option<bool>,\n }\n \n fn main_inner() -> Result<()> {\n@@ -42,12 +45,12 @@ fn main_inner() -> Result<()> {\n                 .root_uri\n                 .and_then(|it| it.to_file_path().ok())\n                 .unwrap_or(cwd);\n-            let publish_decorations = params\n+            let supports_decorations = params\n                 .initialization_options\n                 .and_then(|v| InitializationOptions::deserialize(v).ok())\n-                .map(|it| it.publish_decorations)\n+                .and_then(|it| it.publish_decorations)\n                 == Some(true);\n-            ra_lsp_server::main_loop(false, root, publish_decorations, r, s)\n+            ra_lsp_server::main_loop(false, root, supports_decorations, r, s)\n         },\n     )?;\n     log::info!(\"shutting down IO...\");"}, {"sha": "a5a2b5eec3d71f3602f7ecb9683aadb07d298fa3", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b052059f868e4b890425c43e1e16d195d3c453d9/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b052059f868e4b890425c43e1e16d195d3c453d9/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=b052059f868e4b890425c43e1e16d195d3c453d9", "patch": "@@ -54,7 +54,7 @@ enum Task {\n pub fn main_loop(\n     internal_mode: bool,\n     ws_root: PathBuf,\n-    publish_decorations: bool,\n+    supports_decorations: bool,\n     msg_receiver: &Receiver<RawMessage>,\n     msg_sender: &Sender<RawMessage>,\n ) -> Result<()> {\n@@ -83,7 +83,7 @@ pub fn main_loop(\n     let mut subs = Subscriptions::new();\n     let main_res = main_loop_inner(\n         internal_mode,\n-        publish_decorations,\n+        supports_decorations,\n         &pool,\n         msg_sender,\n         msg_receiver,\n@@ -156,7 +156,7 @@ impl fmt::Debug for Event {\n \n fn main_loop_inner(\n     internal_mode: bool,\n-    publish_decorations: bool,\n+    supports_decorations: bool,\n     pool: &ThreadPool,\n     msg_sender: &Sender<RawMessage>,\n     msg_receiver: &Receiver<RawMessage>,\n@@ -240,7 +240,7 @@ fn main_loop_inner(\n             update_file_notifications_on_threadpool(\n                 pool,\n                 state.snapshot(),\n-                publish_decorations,\n+                supports_decorations,\n                 task_sender.clone(),\n                 subs.subscriptions(),\n             )"}, {"sha": "2989a70166ff30f2b0b71a9ddfaf1712f5c1d521", "filename": "editors/code/package.json", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b052059f868e4b890425c43e1e16d195d3c453d9/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/b052059f868e4b890425c43e1e16d195d3c453d9/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=b052059f868e4b890425c43e1e16d195d3c453d9", "patch": "@@ -131,6 +131,17 @@\n                     \"type\": \"boolean\",\n                     \"default\": true,\n                     \"description\": \"Highlight Rust code (overrides built-in syntax highlighting)\"\n+                },\n+                \"ra-lsp.trace.server\": {\n+                    \"type\": \"string\",\n+                    \"scope\": \"window\",\n+                    \"enum\": [\n+                        \"off\",\n+                        \"messages\",\n+                        \"verbose\"\n+                    ],\n+                    \"default\": \"off\",\n+                    \"description\": \"Trace requests to the ra-lsp server\"\n                 }\n             }\n         },"}, {"sha": "75bdf3207087460114db4252d3a11dec4a161bc0", "filename": "editors/code/src/server.ts", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b052059f868e4b890425c43e1e16d195d3c453d9/editors%2Fcode%2Fsrc%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b052059f868e4b890425c43e1e16d195d3c453d9/editors%2Fcode%2Fsrc%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fserver.ts?ref=b052059f868e4b890425c43e1e16d195d3c453d9", "patch": "@@ -22,7 +22,7 @@ export class Server {\n         const clientOptions: lc.LanguageClientOptions = {\n             documentSelector: [{ scheme: 'file', language: 'rust' }],\n             initializationOptions: {\n-                publishDecorations: true,\n+                publishDecorations: true\n             }\n         };\n \n@@ -32,6 +32,30 @@ export class Server {\n             serverOptions,\n             clientOptions\n         );\n+        // HACK: This is an awful way of filtering out the decorations notifications\n+        // However, pending proper support, this is the most effecitve approach\n+        // Proper support for this would entail a change to vscode-languageclient to allow not notifying on certain messages\n+        // Or the ability to disable the serverside component of highlighting (but this means that to do tracing we need to disable hihlighting)\n+        // This also requires considering our settings strategy, which is work which needs doing\n+        // @ts-ignore The tracer is private to vscode-languageclient, but we need access to it to not log publishDecorations requests\n+        Server.client._tracer = {\n+            log: (messageOrDataObject: string | any, data?: string) => {\n+                if (typeof messageOrDataObject === 'string') {\n+                    if (\n+                        messageOrDataObject.includes('m/publishDecorations') ||\n+                        messageOrDataObject.includes('m/decorationsRequest')\n+                    ) {\n+                        // Don't log publish decorations requests\n+                    } else {\n+                        // @ts-ignore This is just a utility function\n+                        Server.client.logTrace(messageOrDataObject, data);\n+                    }\n+                } else {\n+                    // @ts-ignore\n+                    Server.client.logObjectTrace(messageOrDataObject);\n+                }\n+            }\n+        };\n         Server.client.onReady().then(() => {\n             for (const [type, handler] of notificationHandlers) {\n                 Server.client.onNotification(type, handler);"}]}