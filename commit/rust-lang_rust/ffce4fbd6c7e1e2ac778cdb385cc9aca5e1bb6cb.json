{"sha": "ffce4fbd6c7e1e2ac778cdb385cc9aca5e1bb6cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmY2U0ZmJkNmM3ZTFlMmFjNzc4Y2RiMzg1Y2M5YWNhNWUxYmI2Y2I=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-09-11T13:55:12Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-12-11T11:18:55Z"}, "message": "Update uninhabited matches tests", "tree": {"sha": "8435952cb732c9c60cd987664e844b3a7c5b14d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8435952cb732c9c60cd987664e844b3a7c5b14d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffce4fbd6c7e1e2ac778cdb385cc9aca5e1bb6cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffce4fbd6c7e1e2ac778cdb385cc9aca5e1bb6cb", "html_url": "https://github.com/rust-lang/rust/commit/ffce4fbd6c7e1e2ac778cdb385cc9aca5e1bb6cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffce4fbd6c7e1e2ac778cdb385cc9aca5e1bb6cb/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88afbf2d99bd8720802b87d3cd8852b090063456", "url": "https://api.github.com/repos/rust-lang/rust/commits/88afbf2d99bd8720802b87d3cd8852b090063456", "html_url": "https://github.com/rust-lang/rust/commit/88afbf2d99bd8720802b87d3cd8852b090063456"}], "stats": {"total": 30, "additions": 3, "deletions": 27}, "files": [{"sha": "a3b99deac233ba958c087207ece7280d80f9dc3f", "filename": "src/test/ui/uninhabited/uninhabited-matches-feature-gated.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ffce4fbd6c7e1e2ac778cdb385cc9aca5e1bb6cb/src%2Ftest%2Fui%2Funinhabited%2Funinhabited-matches-feature-gated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffce4fbd6c7e1e2ac778cdb385cc9aca5e1bb6cb/src%2Ftest%2Fui%2Funinhabited%2Funinhabited-matches-feature-gated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funinhabited%2Funinhabited-matches-feature-gated.rs?ref=ffce4fbd6c7e1e2ac778cdb385cc9aca5e1bb6cb", "patch": "@@ -20,10 +20,10 @@ fn main() {\n     let _ = match x {}; //~ ERROR non-exhaustive\n \n     let x: (Void,) = unsafe { std::mem::uninitialized() };\n-    let _ = match x {}; //~ ERROR non-exhaustive\n+    let _ = match x {}; // okay\n \n     let x: [Void; 1] = unsafe { std::mem::uninitialized() };\n-    let _ = match x {}; //~ ERROR non-exhaustive\n+    let _ = match x {}; // okay\n \n     let x: &[Void] = unsafe { std::mem::uninitialized() };\n     let _ = match x {   //~ ERROR non-exhaustive"}, {"sha": "658ed9f466091c4710a81b7ea1b1c03983ef42b3", "filename": "src/test/ui/uninhabited/uninhabited-matches-feature-gated.stderr", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ffce4fbd6c7e1e2ac778cdb385cc9aca5e1bb6cb/src%2Ftest%2Fui%2Funinhabited%2Funinhabited-matches-feature-gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ffce4fbd6c7e1e2ac778cdb385cc9aca5e1bb6cb/src%2Ftest%2Fui%2Funinhabited%2Funinhabited-matches-feature-gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funinhabited%2Funinhabited-matches-feature-gated.stderr?ref=ffce4fbd6c7e1e2ac778cdb385cc9aca5e1bb6cb", "patch": "@@ -16,30 +16,6 @@ help: ensure that all possible cases are being handled, possibly by adding wildc\n LL |     let _ = match x {}; //~ ERROR non-exhaustive\n    |                   ^\n \n-error[E0004]: non-exhaustive patterns: type `(Void,)` is non-empty\n-  --> $DIR/uninhabited-matches-feature-gated.rs:23:19\n-   |\n-LL |     let _ = match x {}; //~ ERROR non-exhaustive\n-   |                   ^\n-   |\n-help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n-  --> $DIR/uninhabited-matches-feature-gated.rs:23:19\n-   |\n-LL |     let _ = match x {}; //~ ERROR non-exhaustive\n-   |                   ^\n-\n-error[E0004]: non-exhaustive patterns: type `[Void; 1]` is non-empty\n-  --> $DIR/uninhabited-matches-feature-gated.rs:26:19\n-   |\n-LL |     let _ = match x {}; //~ ERROR non-exhaustive\n-   |                   ^\n-   |\n-help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n-  --> $DIR/uninhabited-matches-feature-gated.rs:26:19\n-   |\n-LL |     let _ = match x {}; //~ ERROR non-exhaustive\n-   |                   ^\n-\n error[E0004]: non-exhaustive patterns: `&[_]` not covered\n   --> $DIR/uninhabited-matches-feature-gated.rs:29:19\n    |\n@@ -58,7 +34,7 @@ error[E0005]: refutable pattern in local binding: `Err(_)` not covered\n LL |     let Ok(x) = x;\n    |         ^^^^^ pattern `Err(_)` not covered\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 5 previous errors\n \n Some errors occurred: E0004, E0005.\n For more information about an error, try `rustc --explain E0004`."}]}