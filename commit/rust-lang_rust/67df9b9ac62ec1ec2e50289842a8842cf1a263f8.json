{"sha": "67df9b9ac62ec1ec2e50289842a8842cf1a263f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3ZGY5YjlhYzYyZWMxZWMyZTUwMjg5ODQyYTg4NDJjZjFhMjYzZjg=", "commit": {"author": {"name": "Steve Smith", "email": "ssmith@atlassian.com", "date": "2016-11-14T13:52:43Z"}, "committer": {"name": "Steve Smith", "email": "ssmith@atlassian.com", "date": "2016-11-14T13:52:43Z"}, "message": "Add sections about concurrency and stdout/err capture to the Testing chapter of the book.", "tree": {"sha": "d7d031c08e6c8528d76441ea972523dabe335242", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7d031c08e6c8528d76441ea972523dabe335242"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67df9b9ac62ec1ec2e50289842a8842cf1a263f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67df9b9ac62ec1ec2e50289842a8842cf1a263f8", "html_url": "https://github.com/rust-lang/rust/commit/67df9b9ac62ec1ec2e50289842a8842cf1a263f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67df9b9ac62ec1ec2e50289842a8842cf1a263f8/comments", "author": null, "committer": null, "parents": [{"sha": "7bef60a64894b0606ad9f5dc76256d5321b270a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bef60a64894b0606ad9f5dc76256d5321b270a6", "html_url": "https://github.com/rust-lang/rust/commit/7bef60a64894b0606ad9f5dc76256d5321b270a6"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "3b6d77032f132bc73ee25390635f1481be3958c5", "filename": "src/doc/book/testing.md", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/67df9b9ac62ec1ec2e50289842a8842cf1a263f8/src%2Fdoc%2Fbook%2Ftesting.md", "raw_url": "https://github.com/rust-lang/rust/raw/67df9b9ac62ec1ec2e50289842a8842cf1a263f8/src%2Fdoc%2Fbook%2Ftesting.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ftesting.md?ref=67df9b9ac62ec1ec2e50289842a8842cf1a263f8", "patch": "@@ -586,3 +586,46 @@ you add more examples.\n \n We haven\u2019t covered all of the details with writing documentation tests. For more,\n please see the [Documentation chapter](documentation.html).\n+\n+# Testing and concurrency\n+\n+One thing that is important to note when writing tests are run concurrently\n+using threads (by default the number of threads is equal to the number of CPUs\n+on the machine). For this reason you should take care that your tests are\n+written in such a way as to not depend on each-other, or on any shared\n+state. \"Share state\" can also include the environment, such as the current\n+working directory, or environment variables.\n+\n+If this is an issue it is possible to control this concurrency, either by\n+setting the environment variable `RUST_TEST_THREADS`, or by passing the argument\n+`--test-threads` to the tests:\n+\n+```bash\n+$ RUST_TEST_THREADS=1 cargo test   # Run tests with no concurrency\n+...\n+$ cargo test -- --test-threads=1   # Same as above\n+...\n+```\n+\n+# Test output\n+\n+By default Rust's test library captures and discards output to standard\n+out/error, e.g. output from `println!()`. This too can be controlled using the\n+environment or a switch:\n+\n+\n+```bash\n+$ RUST_TEST_NOCAPTURE=1 cargo test   # Preserve stdout/stderr\n+...\n+$ cargo test -- --nocapture          # Same as above\n+...\n+```\n+\n+However a better method avoiding capture is to use logging rather than raw\n+output. Rust has a [standard logging API][log], which provides a frontend to\n+multiple loggin implementations. This can be used in conjunction with the\n+default [env_logger] to output any debugging information in a manner that can be\n+controlled at runtime.\n+\n+[log]: https://crates.io/crates/log\n+[env_logger]: https://crates.io/crates/env_logger"}]}