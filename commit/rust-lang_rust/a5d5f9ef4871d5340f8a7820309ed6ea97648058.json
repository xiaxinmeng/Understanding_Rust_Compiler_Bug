{"sha": "a5d5f9ef4871d5340f8a7820309ed6ea97648058", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ZDVmOWVmNDg3MWQ1MzQwZjhhNzgyMDMwOWVkNmVhOTc2NDgwNTg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-11T05:12:42Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-11T05:13:30Z"}, "message": "rustc: Add a --gc switch for debugging and experimentation", "tree": {"sha": "fe3ea7a97374e6b88820b2ce7ec558b7ec53e625", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe3ea7a97374e6b88820b2ce7ec558b7ec53e625"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5d5f9ef4871d5340f8a7820309ed6ea97648058", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5d5f9ef4871d5340f8a7820309ed6ea97648058", "html_url": "https://github.com/rust-lang/rust/commit/a5d5f9ef4871d5340f8a7820309ed6ea97648058", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5d5f9ef4871d5340f8a7820309ed6ea97648058/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5c8258937f056a0f4b0e83e1d878c268daa09ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5c8258937f056a0f4b0e83e1d878c268daa09ff", "html_url": "https://github.com/rust-lang/rust/commit/c5c8258937f056a0f4b0e83e1d878c268daa09ff"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "3b0cecb82ea18b4574cf438e177bd5ea72ec2f74", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a5d5f9ef4871d5340f8a7820309ed6ea97648058/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5d5f9ef4871d5340f8a7820309ed6ea97648058/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=a5d5f9ef4871d5340f8a7820309ed6ea97648058", "patch": "@@ -279,6 +279,7 @@ options:\n     --no-typestate     don't run the typestate pass (unsafe!)\n     --test             build test harness\n     --dps              translate via destination-passing style (experimental)\n+    --gc               garbage collect shared data (experimental/temporary)\n \n \");\n }\n@@ -385,6 +386,7 @@ fn build_session_options(binary: str, match: getopts::match, binary_dir: str)\n     let cfg = parse_cfgspecs(getopts::opt_strs(match, \"cfg\"));\n     let test = opt_present(match, \"test\");\n     let dps = opt_present(match, \"dps\");\n+    let do_gc = opt_present(match, \"gc\");\n     let sopts: @session::options =\n         @{library: library,\n           static: static,\n@@ -403,7 +405,8 @@ fn build_session_options(binary: str, match: getopts::match, binary_dir: str)\n           test: test,\n           dps: dps,\n           parse_only: parse_only,\n-          no_trans: no_trans};\n+          no_trans: no_trans,\n+          do_gc: do_gc};\n     ret sopts;\n }\n \n@@ -435,7 +438,7 @@ fn opts() -> vec[getopts::opt] {\n          optopt(\"sysroot\"), optflag(\"stats\"), optflag(\"time-passes\"),\n          optflag(\"time-llvm-passes\"), optflag(\"no-typestate\"),\n          optflag(\"noverify\"), optmulti(\"cfg\"), optflag(\"test\"),\n-         optflag(\"lib\"), optflag(\"static\"), optflag(\"dps\")];\n+         optflag(\"lib\"), optflag(\"static\"), optflag(\"dps\"), optflag(\"gc\")];\n }\n \n fn main(args: vec[str]) {"}, {"sha": "64de0033ce465afe4ae3bf34da2d96de2216455f", "filename": "src/comp/driver/session.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a5d5f9ef4871d5340f8a7820309ed6ea97648058/src%2Fcomp%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5d5f9ef4871d5340f8a7820309ed6ea97648058/src%2Fcomp%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Fsession.rs?ref=a5d5f9ef4871d5340f8a7820309ed6ea97648058", "patch": "@@ -43,7 +43,8 @@ type options =\n      test: bool,\n      dps: bool,\n      parse_only: bool,\n-     no_trans: bool\n+     no_trans: bool,\n+     do_gc: bool\n      };\n \n type crate_metadata = {name: str, data: [u8]};"}]}