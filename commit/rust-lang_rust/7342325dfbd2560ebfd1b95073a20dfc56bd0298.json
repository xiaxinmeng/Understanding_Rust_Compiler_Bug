{"sha": "7342325dfbd2560ebfd1b95073a20dfc56bd0298", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczNDIzMjVkZmJkMjU2MGViZmQxYjk1MDczYTIwZGZjNTZiZDAyOTg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-09-10T16:28:47Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-09-23T16:34:44Z"}, "message": "Add `#![deny(warnings)]` to internal tools", "tree": {"sha": "3a65212c1d11666963e13bf470ec4831e3f377bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a65212c1d11666963e13bf470ec4831e3f377bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7342325dfbd2560ebfd1b95073a20dfc56bd0298", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7342325dfbd2560ebfd1b95073a20dfc56bd0298", "html_url": "https://github.com/rust-lang/rust/commit/7342325dfbd2560ebfd1b95073a20dfc56bd0298", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7342325dfbd2560ebfd1b95073a20dfc56bd0298/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b907ded0e38f0bba7b7fee43b4a7f4669564ae8", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b907ded0e38f0bba7b7fee43b4a7f4669564ae8", "html_url": "https://github.com/rust-lang/rust/commit/7b907ded0e38f0bba7b7fee43b4a7f4669564ae8"}], "stats": {"total": 50, "additions": 33, "deletions": 17}, "files": [{"sha": "f41e7dd17ede6d0a93a5174f23fc5e1ab99e06d6", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=7342325dfbd2560ebfd1b95073a20dfc56bd0298", "patch": "@@ -4,6 +4,8 @@\n //! via `x.py dist hash-and-sign`; the cmdline arguments are set up\n //! by rustbuild (in `src/bootstrap/dist.rs`).\n \n+#![deny(warnings)]\n+\n use toml;\n use serde::Serialize;\n "}, {"sha": "1a42e0cac3ccc294186c4343a8d4ca70bb881d0d", "filename": "src/tools/cargotest/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Fcargotest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Fcargotest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargotest%2Fmain.rs?ref=7342325dfbd2560ebfd1b95073a20dfc56bd0298", "patch": "@@ -1,3 +1,5 @@\n+#![deny(warnings)]\n+\n use std::env;\n use std::process::Command;\n use std::path::{Path, PathBuf};"}, {"sha": "34435819a2c46e8527eb0d6415948862a776946f", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=7342325dfbd2560ebfd1b95073a20dfc56bd0298", "patch": "@@ -1,6 +1,7 @@\n #![crate_name = \"compiletest\"]\n #![feature(test)]\n #![feature(vec_remove_item)]\n+#![deny(warnings)]\n \n extern crate test;\n "}, {"sha": "31a802706cba47edd004f92002758512e996ab6b", "filename": "src/tools/error_index_generator/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ferror_index_generator%2Fmain.rs?ref=7342325dfbd2560ebfd1b95073a20dfc56bd0298", "patch": "@@ -1,4 +1,5 @@\n #![feature(rustc_private)]\n+#![deny(warnings)]\n \n extern crate env_logger;\n extern crate syntax;"}, {"sha": "e8a7252cb767c6dca6c301304c5d7ed94a87a69f", "filename": "src/tools/linkchecker/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Flinkchecker%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Flinkchecker%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flinkchecker%2Fmain.rs?ref=7342325dfbd2560ebfd1b95073a20dfc56bd0298", "patch": "@@ -14,6 +14,8 @@\n //! A few whitelisted exceptions are allowed as there's known bugs in rustdoc,\n //! but this should catch the majority of \"broken link\" cases.\n \n+#![deny(warnings)]\n+\n use std::collections::hash_map::Entry;\n use std::collections::{HashMap, HashSet};\n use std::env;"}, {"sha": "d7f031a6150ae1a3997dbcdcd04c2ef583c9a9fc", "filename": "src/tools/remote-test-client/src/main.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Fremote-test-client%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Fremote-test-client%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fremote-test-client%2Fsrc%2Fmain.rs?ref=7342325dfbd2560ebfd1b95073a20dfc56bd0298", "patch": "@@ -1,9 +1,11 @@\n-/// This is a small client program intended to pair with `remote-test-server` in\n-/// this repository. This client connects to the server over TCP and is used to\n-/// push artifacts and run tests on the server instead of locally.\n-///\n-/// Here is also where we bake in the support to spawn the QEMU emulator as\n-/// well.\n+//! This is a small client program intended to pair with `remote-test-server` in\n+//! this repository. This client connects to the server over TCP and is used to\n+//! push artifacts and run tests on the server instead of locally.\n+//!\n+//! Here is also where we bake in the support to spawn the QEMU emulator as\n+//! well.\n+\n+#![deny(warnings)]\n \n use std::env;\n use std::fs::{self, File};"}, {"sha": "0462b719b7be1a0be3c4dd2593135f591988a788", "filename": "src/tools/remote-test-server/src/main.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs?ref=7342325dfbd2560ebfd1b95073a20dfc56bd0298", "patch": "@@ -1,14 +1,16 @@\n-/// This is a small server which is intended to run inside of an emulator or\n-/// on a remote test device. This server pairs with the `remote-test-client`\n-/// program in this repository. The `remote-test-client` connects to this\n-/// server over a TCP socket and performs work such as:\n-///\n-/// 1. Pushing shared libraries to the server\n-/// 2. Running tests through the server\n-///\n-/// The server supports running tests concurrently and also supports tests\n-/// themselves having support libraries. All data over the TCP sockets is in a\n-/// basically custom format suiting our needs.\n+//! This is a small server which is intended to run inside of an emulator or\n+//! on a remote test device. This server pairs with the `remote-test-client`\n+//! program in this repository. The `remote-test-client` connects to this\n+//! server over a TCP socket and performs work such as:\n+//!\n+//! 1. Pushing shared libraries to the server\n+//! 2. Running tests through the server\n+//!\n+//! The server supports running tests concurrently and also supports tests\n+//! themselves having support libraries. All data over the TCP sockets is in a\n+//! basically custom format suiting our needs.\n+\n+#![deny(warnings)]\n \n use std::cmp;\n use std::env;"}, {"sha": "a57238ad8148ae81ad0c7e17778a53dff157fa07", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=7342325dfbd2560ebfd1b95073a20dfc56bd0298", "patch": "@@ -4,6 +4,8 @@\n //! etc. This is run by default on `make check` and as part of the auto\n //! builders.\n \n+#![deny(warnings)]\n+\n use tidy::*;\n \n use std::process;"}, {"sha": "fdb0b6d3e5653946f1bdf394b285cef0ac94bfbf", "filename": "src/tools/unstable-book-gen/src/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7342325dfbd2560ebfd1b95073a20dfc56bd0298/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs?ref=7342325dfbd2560ebfd1b95073a20dfc56bd0298", "patch": "@@ -1,5 +1,7 @@\n //! Auto-generate stub docs for the unstable book\n \n+#![deny(warnings)]\n+\n use tidy::features::{Feature, Features, collect_lib_features, collect_lang_features};\n use tidy::unstable_book::{collect_unstable_feature_names, collect_unstable_book_section_file_names,\n                           PATH_STR, LANG_FEATURES_DIR, LIB_FEATURES_DIR};"}]}