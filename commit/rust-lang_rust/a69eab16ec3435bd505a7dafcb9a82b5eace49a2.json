{"sha": "a69eab16ec3435bd505a7dafcb9a82b5eace49a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2OWVhYjE2ZWMzNDM1YmQ1MDVhN2RhZmNiOWE4MmI1ZWFjZTQ5YTI=", "commit": {"author": {"name": "Stefan Plantikow", "email": "stefan.plantikow@googlemail.com", "date": "2011-12-05T00:23:10Z"}, "committer": {"name": "Stefan Plantikow", "email": "stefan.plantikow@googlemail.com", "date": "2011-12-05T00:23:10Z"}, "message": "typeck: Fix for #932", "tree": {"sha": "49b053d2d8effef75ece72d2d070c07f702640c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49b053d2d8effef75ece72d2d070c07f702640c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a69eab16ec3435bd505a7dafcb9a82b5eace49a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a69eab16ec3435bd505a7dafcb9a82b5eace49a2", "html_url": "https://github.com/rust-lang/rust/commit/a69eab16ec3435bd505a7dafcb9a82b5eace49a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a69eab16ec3435bd505a7dafcb9a82b5eace49a2/comments", "author": {"login": "boggle", "id": 50886, "node_id": "MDQ6VXNlcjUwODg2", "avatar_url": "https://avatars.githubusercontent.com/u/50886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boggle", "html_url": "https://github.com/boggle", "followers_url": "https://api.github.com/users/boggle/followers", "following_url": "https://api.github.com/users/boggle/following{/other_user}", "gists_url": "https://api.github.com/users/boggle/gists{/gist_id}", "starred_url": "https://api.github.com/users/boggle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boggle/subscriptions", "organizations_url": "https://api.github.com/users/boggle/orgs", "repos_url": "https://api.github.com/users/boggle/repos", "events_url": "https://api.github.com/users/boggle/events{/privacy}", "received_events_url": "https://api.github.com/users/boggle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "boggle", "id": 50886, "node_id": "MDQ6VXNlcjUwODg2", "avatar_url": "https://avatars.githubusercontent.com/u/50886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boggle", "html_url": "https://github.com/boggle", "followers_url": "https://api.github.com/users/boggle/followers", "following_url": "https://api.github.com/users/boggle/following{/other_user}", "gists_url": "https://api.github.com/users/boggle/gists{/gist_id}", "starred_url": "https://api.github.com/users/boggle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boggle/subscriptions", "organizations_url": "https://api.github.com/users/boggle/orgs", "repos_url": "https://api.github.com/users/boggle/repos", "events_url": "https://api.github.com/users/boggle/events{/privacy}", "received_events_url": "https://api.github.com/users/boggle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1eb7ce013526c6ae75e92a31fe3b89b4cf44b3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1eb7ce013526c6ae75e92a31fe3b89b4cf44b3f", "html_url": "https://github.com/rust-lang/rust/commit/f1eb7ce013526c6ae75e92a31fe3b89b4cf44b3f"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "bb82a95978448f9283ce328d63e9db953275db38", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a69eab16ec3435bd505a7dafcb9a82b5eace49a2/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a69eab16ec3435bd505a7dafcb9a82b5eace49a2/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=a69eab16ec3435bd505a7dafcb9a82b5eace49a2", "patch": "@@ -2116,6 +2116,20 @@ fn check_expr_with_unifier(fcx: @fn_ctxt, expr: @ast::expr, unify: unifier,\n         let t_1 = ast_ty_to_ty_crate(fcx.ccx, t);\n         let t_e = expr_ty(tcx, e);\n \n+        if ty::type_is_nil(tcx, t_e) {\n+            tcx.sess.span_err(expr.span,\n+                              \"cast from nil: \" +\n+                                  ty_to_str(tcx, expr_ty(tcx, e)) + \" as \" +\n+                                  ty_to_str(tcx, t_1));\n+        }\n+\n+        if ty::type_is_nil(tcx, t_1) {\n+            tcx.sess.span_err(expr.span,\n+                              \"cast to nil: \" +\n+                                  ty_to_str(tcx, expr_ty(tcx, e)) + \" as \" +\n+                                  ty_to_str(tcx, t_1));\n+        }\n+\n         // FIXME there are more forms of cast to support, eventually.\n         if !(   type_is_scalar(fcx, expr.span, t_e)\n              && type_is_scalar(fcx, expr.span, t_1)) {"}, {"sha": "a76df00d0d53746722b365e938cd1dcd883d061f", "filename": "src/test/compile-fail/cast-from-nil.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a69eab16ec3435bd505a7dafcb9a82b5eace49a2/src%2Ftest%2Fcompile-fail%2Fcast-from-nil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a69eab16ec3435bd505a7dafcb9a82b5eace49a2/src%2Ftest%2Fcompile-fail%2Fcast-from-nil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcast-from-nil.rs?ref=a69eab16ec3435bd505a7dafcb9a82b5eace49a2", "patch": "@@ -0,0 +1,2 @@\n+// error-pattern: cast from nil: () as u32\n+fn main() { let u = (assert true) as u32; }\n\\ No newline at end of file"}, {"sha": "44c0f5a1da2a63a48d57b50e2b3bddf133b29117", "filename": "src/test/compile-fail/cast-to-nil.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a69eab16ec3435bd505a7dafcb9a82b5eace49a2/src%2Ftest%2Fcompile-fail%2Fcast-to-nil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a69eab16ec3435bd505a7dafcb9a82b5eace49a2/src%2Ftest%2Fcompile-fail%2Fcast-to-nil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcast-to-nil.rs?ref=a69eab16ec3435bd505a7dafcb9a82b5eace49a2", "patch": "@@ -0,0 +1,2 @@\n+// error-pattern: cast to nil: u32 as ()\n+fn main() { let u = 0u32 as (); }\n\\ No newline at end of file"}]}