{"sha": "c0a25e4fdc1fcdde8378b4177a6f06c58001a3be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwYTI1ZTRmZGMxZmNkZGU4Mzc4YjQxNzdhNmYwNmM1ODAwMWEzYmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-05-09T02:12:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-05-09T02:12:05Z"}, "message": "auto merge of #14001 : alexcrichton/rust/issue-11680, r=pcwalton\n\nThe code in resolve erroneously assumed that private enums weren't visited, so\r\nthe logic was adjusted to check to see if the enum definition itself was public.\r\n\r\nCloses #11680", "tree": {"sha": "b983c8a0d49e8f250eb79ec5e4640b5df5dc020d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b983c8a0d49e8f250eb79ec5e4640b5df5dc020d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0a25e4fdc1fcdde8378b4177a6f06c58001a3be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0a25e4fdc1fcdde8378b4177a6f06c58001a3be", "html_url": "https://github.com/rust-lang/rust/commit/c0a25e4fdc1fcdde8378b4177a6f06c58001a3be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0a25e4fdc1fcdde8378b4177a6f06c58001a3be/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74172341aab4dc105f3dc1f4dd61237cc4d72d96", "url": "https://api.github.com/repos/rust-lang/rust/commits/74172341aab4dc105f3dc1f4dd61237cc4d72d96", "html_url": "https://github.com/rust-lang/rust/commit/74172341aab4dc105f3dc1f4dd61237cc4d72d96"}, {"sha": "49efab8ac9044e2cb8ea31ac16fa088af88faf4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/49efab8ac9044e2cb8ea31ac16fa088af88faf4d", "html_url": "https://github.com/rust-lang/rust/commit/49efab8ac9044e2cb8ea31ac16fa088af88faf4d"}], "stats": {"total": 54, "additions": 48, "deletions": 6}, "files": [{"sha": "1abdca7cb9f7b560489c5e27ce93770864613e55", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c0a25e4fdc1fcdde8378b4177a6f06c58001a3be/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0a25e4fdc1fcdde8378b4177a6f06c58001a3be/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=c0a25e4fdc1fcdde8378b4177a6f06c58001a3be", "patch": "@@ -1620,18 +1620,20 @@ impl<'a> Resolver<'a> {\n \n         match def {\n           DefMod(_) | DefForeignMod(_) => {}\n-          DefVariant(_, variant_id, is_struct) => {\n+          DefVariant(enum_did, variant_id, is_struct) => {\n             debug!(\"(building reduced graph for external crate) building \\\n                     variant {}\",\n                    final_ident);\n-            // We assume the parent is visible, or else we wouldn't have seen\n-            // it. Also variants are public-by-default if the parent was also\n-            // public.\n+            // If this variant is public, then it was publicly reexported,\n+            // otherwise we need to inherit the visibility of the enum\n+            // definition.\n+            let is_exported = is_public ||\n+                              self.external_exports.contains(&enum_did);\n             if is_struct {\n-                child_name_bindings.define_type(def, DUMMY_SP, true);\n+                child_name_bindings.define_type(def, DUMMY_SP, is_exported);\n                 self.structs.insert(variant_id);\n             } else {\n-                child_name_bindings.define_value(def, DUMMY_SP, true);\n+                child_name_bindings.define_value(def, DUMMY_SP, is_exported);\n             }\n           }\n           DefFn(..) | DefStaticMethod(..) | DefStatic(..) => {"}, {"sha": "249a1bab465e9b341fbd2c4fe422822b259c13c8", "filename": "src/test/auxiliary/issue-11680.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c0a25e4fdc1fcdde8378b4177a6f06c58001a3be/src%2Ftest%2Fauxiliary%2Fissue-11680.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0a25e4fdc1fcdde8378b4177a6f06c58001a3be/src%2Ftest%2Fauxiliary%2Fissue-11680.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-11680.rs?ref=c0a25e4fdc1fcdde8378b4177a6f06c58001a3be", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Foo {\n+    Bar(int)\n+}\n+\n+pub mod test {\n+    enum Foo {\n+        Bar(int)\n+    }\n+}"}, {"sha": "9c9663a2f38c32fe2333f0acedac7f5dfe983f54", "filename": "src/test/compile-fail/issue-11680.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c0a25e4fdc1fcdde8378b4177a6f06c58001a3be/src%2Ftest%2Fcompile-fail%2Fissue-11680.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0a25e4fdc1fcdde8378b4177a6f06c58001a3be/src%2Ftest%2Fcompile-fail%2Fissue-11680.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-11680.rs?ref=c0a25e4fdc1fcdde8378b4177a6f06c58001a3be", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-11680.rs\n+\n+extern crate other = \"issue-11680\";\n+\n+fn main() {\n+    let _b = other::Bar(1);\n+    //~^ ERROR: variant `Bar` is private\n+\n+    let _b = other::test::Bar(1);\n+    //~^ ERROR: variant `Bar` is private\n+}"}]}