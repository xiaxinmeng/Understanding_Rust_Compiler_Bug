{"sha": "185fa0d1b1ea7ba9677c7f3d6e2c3d5968f26539", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4NWZhMGQxYjFlYTdiYTk2NzdjN2YzZDZlMmMzZDU5NjhmMjY1Mzk=", "commit": {"author": {"name": "mlegner", "email": "markus@legner.ch", "date": "2020-03-04T09:12:11Z"}, "committer": {"name": "mlegner", "email": "markus@legner.ch", "date": "2020-03-04T12:22:54Z"}, "message": "Simplify if_chain.", "tree": {"sha": "f1f3088e6ad5145ff3f7ee32b4960537108f9885", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1f3088e6ad5145ff3f7ee32b4960537108f9885"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/185fa0d1b1ea7ba9677c7f3d6e2c3d5968f26539", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE8Gd4tklnUGrwqsxng3PtO0zPqEUFAl5fnZ4ACgkQg3PtO0zP\nqEWjWxAAxEhoDPdHqP0sn0JdkQGa9LXdIiGlPgF5AKq88yOWqNk/UD2zTAEEAhRQ\nej1e4aIG2/wFbNOnDLSeXBTXAJRR3MD3cD2PvujU10djcDCbZQf5heoyjm9gPVQy\nY2IbjLCMCXGyUAdV4wc8UI3xyT+X9JvH30h7+SpmzqqaJY6Zf/YSt05EbSnStZ3K\nX/1ebPfrumcuFHiodE45yLzjbZ2/+zdLKZXK1bCuo5ZHaIo59xd4XRYzx4NJj/gA\nn93uAzVXhEVMVaJs/1Nj0hTXFGF3gj8FSIhfKKFSt0/MrkpPMV65KN+SFqkVryGC\noCJaKLrXAR1B82Zbw56msGcI+Q2rD2fDeA5ajP3gkmeJeX5VoLiW1F2DkPdKF0qn\nJIqskF6D803ykpRAY8yFbkBWDsWb0GPKmGx9Va2n8c2lARPNkAavFafEuBaWLUhi\nwY1nA8AorhEPU1ewoiz26tjIbujD4UpKyk3Yt0qgotdjXj9aIjnBbvjVpKLuopu9\niodC1ka571K8eqv6Tci2tCYxM2n5gHGurXozIdWkdmQ8JUwQRXj0stwWEwCzlqiq\n8bZ5SFQ0q/9IVCmPkDP+y9mjo/UVMtP4hyJ/XHfSlhayiaeWbkBmBakSG0avX4/8\nontXP2/ApMpjdlr9exfgDwx8rrLqR4bd/D7QlKOzaE3IjICPPOw=\n=jg+1\n-----END PGP SIGNATURE-----", "payload": "tree f1f3088e6ad5145ff3f7ee32b4960537108f9885\nparent d14fdc0203b8290df9527aa62c25a64922f8126a\nauthor mlegner <markus@legner.ch> 1583313131 +0100\ncommitter mlegner <markus@legner.ch> 1583324574 +0100\n\nSimplify if_chain.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/185fa0d1b1ea7ba9677c7f3d6e2c3d5968f26539", "html_url": "https://github.com/rust-lang/rust/commit/185fa0d1b1ea7ba9677c7f3d6e2c3d5968f26539", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/185fa0d1b1ea7ba9677c7f3d6e2c3d5968f26539/comments", "author": {"login": "mlegner", "id": 5960634, "node_id": "MDQ6VXNlcjU5NjA2MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5960634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlegner", "html_url": "https://github.com/mlegner", "followers_url": "https://api.github.com/users/mlegner/followers", "following_url": "https://api.github.com/users/mlegner/following{/other_user}", "gists_url": "https://api.github.com/users/mlegner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlegner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlegner/subscriptions", "organizations_url": "https://api.github.com/users/mlegner/orgs", "repos_url": "https://api.github.com/users/mlegner/repos", "events_url": "https://api.github.com/users/mlegner/events{/privacy}", "received_events_url": "https://api.github.com/users/mlegner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mlegner", "id": 5960634, "node_id": "MDQ6VXNlcjU5NjA2MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5960634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlegner", "html_url": "https://github.com/mlegner", "followers_url": "https://api.github.com/users/mlegner/followers", "following_url": "https://api.github.com/users/mlegner/following{/other_user}", "gists_url": "https://api.github.com/users/mlegner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlegner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlegner/subscriptions", "organizations_url": "https://api.github.com/users/mlegner/orgs", "repos_url": "https://api.github.com/users/mlegner/repos", "events_url": "https://api.github.com/users/mlegner/events{/privacy}", "received_events_url": "https://api.github.com/users/mlegner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d14fdc0203b8290df9527aa62c25a64922f8126a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d14fdc0203b8290df9527aa62c25a64922f8126a", "html_url": "https://github.com/rust-lang/rust/commit/d14fdc0203b8290df9527aa62c25a64922f8126a"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "f96e797217f554e9f14b4edd18a13427578e7b31", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/185fa0d1b1ea7ba9677c7f3d6e2c3d5968f26539/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/185fa0d1b1ea7ba9677c7f3d6e2c3d5968f26539/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=185fa0d1b1ea7ba9677c7f3d6e2c3d5968f26539", "patch": "@@ -1214,23 +1214,21 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Casts {\n                     if let LitKind::Int(n, _) = lit.node;\n                     if let Some(src) = snippet_opt(cx, lit.span);\n                     if cast_to.is_floating_point();\n+                    if let Some(num_lit) = NumericLiteral::from_lit_kind(&src, &lit.node);\n+                    let from_nbits = 128 - n.leading_zeros();\n+                    let to_nbits = fp_ty_mantissa_nbits(cast_to);\n+                    if from_nbits != 0 && to_nbits != 0 && from_nbits <= to_nbits && num_lit.is_decimal();\n                     then {\n-                        let from_nbits = 128 - n.leading_zeros();\n-                        let to_nbits = fp_ty_mantissa_nbits(cast_to);\n-                        if let Some(num_lit) = NumericLiteral::from_lit_kind(&src, &lit.node) {\n-                            if from_nbits != 0 && to_nbits != 0 && from_nbits <= to_nbits && num_lit.is_decimal() {\n-                                span_lint_and_sugg(\n-                                    cx,\n-                                    UNNECESSARY_CAST,\n-                                    expr.span,\n-                                    &format!(\"casting integer literal to `{}` is unnecessary\", cast_to),\n-                                    \"try\",\n-                                    format!(\"{}_{}\", n, cast_to),\n-                                    Applicability::MachineApplicable,\n-                                );\n-                                return;\n-                            }\n-                        }\n+                        span_lint_and_sugg(\n+                            cx,\n+                            UNNECESSARY_CAST,\n+                            expr.span,\n+                            &format!(\"casting integer literal to `{}` is unnecessary\", cast_to),\n+                            \"try\",\n+                            format!(\"{}_{}\", n, cast_to),\n+                            Applicability::MachineApplicable,\n+                        );\n+                        return;\n                     }\n                 }\n                 match lit.node {"}]}