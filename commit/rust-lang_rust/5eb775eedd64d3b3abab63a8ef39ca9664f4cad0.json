{"sha": "5eb775eedd64d3b3abab63a8ef39ca9664f4cad0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlYjc3NWVlZGQ2NGQzYjNhYmFiNjNhOGVmMzljYTk2NjRmNGNhZDA=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-04-09T00:16:57Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-04-09T00:16:57Z"}, "message": "Remove redundant gated feature checking pass", "tree": {"sha": "f751798d7fbb8c80a9375797b33dcc5745bd1d71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f751798d7fbb8c80a9375797b33dcc5745bd1d71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5eb775eedd64d3b3abab63a8ef39ca9664f4cad0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5eb775eedd64d3b3abab63a8ef39ca9664f4cad0", "html_url": "https://github.com/rust-lang/rust/commit/5eb775eedd64d3b3abab63a8ef39ca9664f4cad0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5eb775eedd64d3b3abab63a8ef39ca9664f4cad0/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "417a6df9b0764ff086d71fff9808a31715e9cd0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/417a6df9b0764ff086d71fff9808a31715e9cd0d", "html_url": "https://github.com/rust-lang/rust/commit/417a6df9b0764ff086d71fff9808a31715e9cd0d"}], "stats": {"total": 19, "additions": 2, "deletions": 17}, "files": [{"sha": "fa7ffec5a6acc6fba0105fd1d2258b92877b96c0", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5eb775eedd64d3b3abab63a8ef39ca9664f4cad0/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb775eedd64d3b3abab63a8ef39ca9664f4cad0/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=5eb775eedd64d3b3abab63a8ef39ca9664f4cad0", "patch": "@@ -647,19 +647,6 @@ pub fn phase_2_configure_and_expand(sess: &Session,\n         krate\n     })?;\n \n-    // Needs to go *after* expansion to be able to check the results\n-    // of macro expansion.\n-    time(time_passes, \"complete gated feature checking 1\", || {\n-        sess.track_errors(|| {\n-            let features = syntax::feature_gate::check_crate(sess.codemap(),\n-                                                             &sess.parse_sess.span_diagnostic,\n-                                                             &krate,\n-                                                             &attributes,\n-                                                             sess.opts.unstable_features);\n-            *sess.features.borrow_mut() = features;\n-        })\n-    })?;\n-\n     krate = time(time_passes, \"maybe building test harness\", || {\n         syntax::test::modify_for_testing(&sess.parse_sess, &sess.opts.cfg, krate, sess.diagnostic())\n     });\n@@ -676,10 +663,8 @@ pub fn phase_2_configure_and_expand(sess: &Session,\n          \"checking for inline asm in case the target doesn't support it\",\n          || no_asm::check_crate(sess, &krate));\n \n-    // One final feature gating of the true AST that gets compiled\n-    // later, to make sure we've got everything (e.g. configuration\n-    // can insert new attributes via `cfg_attr`)\n-    time(time_passes, \"complete gated feature checking 2\", || {\n+    // Needs to go *after* expansion to be able to check the results of macro expansion.\n+    time(time_passes, \"complete gated feature checking\", || {\n         sess.track_errors(|| {\n             let features = syntax::feature_gate::check_crate(sess.codemap(),\n                                                              &sess.parse_sess.span_diagnostic,"}]}