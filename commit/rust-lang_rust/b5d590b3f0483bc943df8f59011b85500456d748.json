{"sha": "b5d590b3f0483bc943df8f59011b85500456d748", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1ZDU5MGIzZjA0ODNiYzk0M2RmOGY1OTAxMWI4NTUwMDQ1NmQ3NDg=", "commit": {"author": {"name": "Dawid Ci\u0119\u017carkiewicz", "email": "dpc@dpc.pw", "date": "2017-03-15T05:03:00Z"}, "committer": {"name": "Dawid Ci\u0119\u017carkiewicz", "email": "dpc@dpc.pw", "date": "2017-03-18T03:15:05Z"}, "message": "Fix `create_dir_all(\"\")`\n\nAdd a test for `\"\"` and `\".\"`.", "tree": {"sha": "2f0dc87f270be6613c984aff499cc464ab0bd700", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f0dc87f270be6613c984aff499cc464ab0bd700"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5d590b3f0483bc943df8f59011b85500456d748", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5d590b3f0483bc943df8f59011b85500456d748", "html_url": "https://github.com/rust-lang/rust/commit/b5d590b3f0483bc943df8f59011b85500456d748", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5d590b3f0483bc943df8f59011b85500456d748/comments", "author": {"login": "dpc", "id": 9209, "node_id": "MDQ6VXNlcjkyMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/9209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpc", "html_url": "https://github.com/dpc", "followers_url": "https://api.github.com/users/dpc/followers", "following_url": "https://api.github.com/users/dpc/following{/other_user}", "gists_url": "https://api.github.com/users/dpc/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpc/subscriptions", "organizations_url": "https://api.github.com/users/dpc/orgs", "repos_url": "https://api.github.com/users/dpc/repos", "events_url": "https://api.github.com/users/dpc/events{/privacy}", "received_events_url": "https://api.github.com/users/dpc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dpc", "id": 9209, "node_id": "MDQ6VXNlcjkyMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/9209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpc", "html_url": "https://github.com/dpc", "followers_url": "https://api.github.com/users/dpc/followers", "following_url": "https://api.github.com/users/dpc/following{/other_user}", "gists_url": "https://api.github.com/users/dpc/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpc/subscriptions", "organizations_url": "https://api.github.com/users/dpc/orgs", "repos_url": "https://api.github.com/users/dpc/repos", "events_url": "https://api.github.com/users/dpc/events{/privacy}", "received_events_url": "https://api.github.com/users/dpc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcae6a3734cdcecffc3ee30981a5b9107bee2ee0", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcae6a3734cdcecffc3ee30981a5b9107bee2ee0", "html_url": "https://github.com/rust-lang/rust/commit/bcae6a3734cdcecffc3ee30981a5b9107bee2ee0"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "cc9df743ef1daab47dba84f557b917c15fc461b7", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b5d590b3f0483bc943df8f59011b85500456d748/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5d590b3f0483bc943df8f59011b85500456d748/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=b5d590b3f0483bc943df8f59011b85500456d748", "patch": "@@ -1775,6 +1775,10 @@ impl DirBuilder {\n     }\n \n     fn create_dir_all(&self, path: &Path) -> io::Result<()> {\n+        if path == Path::new(\"\") {\n+            return Ok(())\n+        }\n+\n         match self.inner.mkdir(path) {\n             Ok(()) => return Ok(()),\n             Err(ref e) if e.kind() == io::ErrorKind::NotFound => {}\n@@ -2302,6 +2306,16 @@ mod tests {\n         check!(fs::create_dir_all(&Path::new(\"/\")));\n     }\n \n+    #[test]\n+    fn recursive_mkdir_dot() {\n+        check!(fs::create_dir_all(&Path::new(\".\")));\n+    }\n+\n+    #[test]\n+    fn recursive_mkdir_empty() {\n+        check!(fs::create_dir_all(&Path::new(\"\")));\n+    }\n+\n     #[test]\n     fn recursive_rmdir() {\n         let tmpdir = tmpdir();"}]}