{"sha": "77297e5f1c2456814fb8474eac15513986d0db55", "node_id": "C_kwDOAAsO6NoAKDc3Mjk3ZTVmMWMyNDU2ODE0ZmI4NDc0ZWFjMTU1MTM5ODZkMGRiNTU", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-12-24T16:33:23Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-12-24T16:33:23Z"}, "message": "normalize env constness for nested obligations", "tree": {"sha": "48243178a7751cf56b4fbf11b179e1d3f13435f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48243178a7751cf56b4fbf11b179e1d3f13435f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77297e5f1c2456814fb8474eac15513986d0db55", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3RQPHNISvvEnSKtjbQF6ltjmwvkFAmHF9lMACgkQbQF6ltjm\nwvnsbQ/+NdsWqUN5sO+KxHzc+jsy3UaRw8CCD/lpRyuQplL4fSdnFNp0BTBbyeEk\n2DdQixFdj3tOAj+ew1xX5M2uvFejsXU/9iO0T/RCPkAJbAjZhdW+FSnoHbuePGdE\n/Hn+1VKZS8xsrXZmE6LOgqQaqqs3DhovaXaAbUhJkK2lHoHA7fLcRzxz9Kzquy9p\n16+M6vzKePJrHmT4ugDp9XjVyfB7/kC6cPEZhWYoa7ic5WhQYH3CnMm5vSmr3QRV\n4Ned3w+vrYTQuQtwlVwAhLw+k7t6AoQIgVPPJv8VVilwqslHDbM+GVFE/FoTdeF3\nD0hnQzmdHJyRVRVYTdQsXB6Tau7x0AAdysMfbeodWYOcP5Yab/VkTchRvBxGc/Mw\nbFocMZY/ZhmZvDm4JLWwF9kZmnYZEfJXV6wfpJeb4GzH2i3phNl5CTsmmDcwsueG\nETAbTv4w9yFVOixbUDnVlwVTMKtEo02U/RkMlcCLePfWcgR7A+3B/iuewl+YIzDt\nvc6GMb7BlKdds5BJdEkO8JewHffvKtGfcMZr5J0O7XF7KS9liOem9umReAO/YgVR\nf1wu3ovBv/66Bw/tGIcln4Q3pjnvneyoQMyKvEyZSqInn5x7H2ybjb6bejai+hpm\ndxFKqhpbK6ewPaoeE8dGD/rV9103vlwwbhcnt1i6VLEl5yj8ufI=\n=Bo4B\n-----END PGP SIGNATURE-----", "payload": "tree 48243178a7751cf56b4fbf11b179e1d3f13435f8\nparent 59337cddd41880f8075b07860a99be4dc402ddb1\nauthor Deadbeef <ent3rm4n@gmail.com> 1640363603 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1640363603 +0800\n\nnormalize env constness for nested obligations\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77297e5f1c2456814fb8474eac15513986d0db55", "html_url": "https://github.com/rust-lang/rust/commit/77297e5f1c2456814fb8474eac15513986d0db55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77297e5f1c2456814fb8474eac15513986d0db55/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59337cddd41880f8075b07860a99be4dc402ddb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/59337cddd41880f8075b07860a99be4dc402ddb1", "html_url": "https://github.com/rust-lang/rust/commit/59337cddd41880f8075b07860a99be4dc402ddb1"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "b7fc578ea3bd371455db666e236c8acc072cdb75", "filename": "compiler/rustc_trait_selection/src/traits/select/confirmation.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/77297e5f1c2456814fb8474eac15513986d0db55/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77297e5f1c2456814fb8474eac15513986d0db55/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs?ref=77297e5f1c2456814fb8474eac15513986d0db55", "patch": "@@ -8,6 +8,7 @@\n //! https://rustc-dev-guide.rust-lang.org/traits/resolution.html#confirmation\n use rustc_data_structures::stack::ensure_sufficient_stack;\n use rustc_hir::lang_items::LangItem;\n+use rustc_hir::Constness;\n use rustc_index::bit_set::GrowableBitSet;\n use rustc_infer::infer::InferOk;\n use rustc_infer::infer::LateBoundRegionConversionTime::HigherRankedType;\n@@ -51,6 +52,38 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         obligation: &TraitObligation<'tcx>,\n         candidate: SelectionCandidate<'tcx>,\n     ) -> Result<Selection<'tcx>, SelectionError<'tcx>> {\n+        let mut obligation = obligation;\n+        let new_obligation;\n+\n+        // HACK(const_trait_impl): the surrounding environment is remapped to a non-const context\n+        // because nested obligations might be actually `~const` then (incorrectly) requiring\n+        // const impls. for example:\n+        // ```\n+        // pub trait Super {}\n+        // pub trait Sub: Super {}\n+        //\n+        // impl<A> const Super for &A where A: ~const Super {}\n+        // impl<A> const Sub for &A where A: ~const Sub {}\n+        // ```\n+        //\n+        // The procedure to check the code above without the remapping code is as follows:\n+        // ```\n+        // CheckWf(impl const Sub for &A where A: ~const Sub) // <- const env\n+        // CheckPredicate(&A: Super)\n+        // CheckPredicate(A: ~const Super) // <- still const env, failure\n+        // ```\n+        if obligation.param_env.constness() == Constness::Const\n+            && obligation.predicate.skip_binder().constness == ty::BoundConstness::NotConst\n+        {\n+            new_obligation = TraitObligation {\n+                cause: obligation.cause.clone(),\n+                param_env: obligation.param_env.without_const(),\n+                ..*obligation\n+            };\n+\n+            obligation = &new_obligation;\n+        }\n+\n         match candidate {\n             BuiltinCandidate { has_nested } => {\n                 let data = self.confirm_builtin_candidate(obligation, has_nested);"}, {"sha": "158c628c3e0cb1638cdc4f62924fd163fc882cc3", "filename": "src/test/ui/rfc-2632-const-trait-impl/issue-92230-wf-super-trait-env.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/77297e5f1c2456814fb8474eac15513986d0db55/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-92230-wf-super-trait-env.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77297e5f1c2456814fb8474eac15513986d0db55/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-92230-wf-super-trait-env.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-92230-wf-super-trait-env.rs?ref=77297e5f1c2456814fb8474eac15513986d0db55", "patch": "@@ -0,0 +1,14 @@\n+// Regression test for #92230.\n+//\n+// check-pass\n+\n+#![feature(const_fn_trait_bound)]\n+#![feature(const_trait_impl)]\n+\n+pub trait Super {}\n+pub trait Sub: Super {}\n+\n+impl<A> const Super for &A where A: ~const Super {}\n+impl<A> const Sub for &A where A: ~const Sub {}\n+\n+fn main() {}"}]}