{"sha": "51f5af223f01e7938fb07821027afe511d480826", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxZjVhZjIyM2YwMWU3OTM4ZmIwNzgyMTAyN2FmZTUxMWQ0ODA4MjY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-26T11:04:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-26T11:04:00Z"}, "message": "Merge #5888\n\n5888: **Inline Variable** works with field shorthand\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "fc5745bf0264d14ab5d0346b25d6b14b1ae0da45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc5745bf0264d14ab5d0346b25d6b14b1ae0da45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51f5af223f01e7938fb07821027afe511d480826", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfRkGgCRBK7hj4Ov3rIwAAdHIIALDMtmDvwi+/89BZUP9nRp8v\n7hYDjdFSLNDJ+kYas5bLhwXapLdbREb+GnzeBUqz7Xa5Gavqw5yBsBUJa/hx25yY\ne/b3q0YXn3VNVDkhJjIgwkCCyzfVYL3uzK1gw7crhAlSqrh+cyJxDseAex5qxj2I\nWDP2zrprn+awrzLrr0+U1u9sZfcgPnYaxUb+ZOuunFHh+1GVWUGo5gO8OICCnC+w\ni6lvgRmxzKIg3u3ruFrXkM1FNnTP/2Ef3Z1eeWhmWdmPBoT4Oq6xYIZeYFUbyFQF\nRdIQGN4A2xciXXvM8Vcre3aLfIy7zUWpyKPVtOrxOJ74UpbqoHNz8GcUUaQB1y4=\n=Tj3j\n-----END PGP SIGNATURE-----\n", "payload": "tree fc5745bf0264d14ab5d0346b25d6b14b1ae0da45\nparent f647edcb080f50e01762a31eebd9ca94c982c768\nparent 0fc8fd2bd589572964d4949cd35aac44659af334\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1598439840 +0000\ncommitter GitHub <noreply@github.com> 1598439840 +0000\n\nMerge #5888\n\n5888: **Inline Variable** works with field shorthand\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51f5af223f01e7938fb07821027afe511d480826", "html_url": "https://github.com/rust-lang/rust/commit/51f5af223f01e7938fb07821027afe511d480826", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51f5af223f01e7938fb07821027afe511d480826/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f647edcb080f50e01762a31eebd9ca94c982c768", "url": "https://api.github.com/repos/rust-lang/rust/commits/f647edcb080f50e01762a31eebd9ca94c982c768", "html_url": "https://github.com/rust-lang/rust/commit/f647edcb080f50e01762a31eebd9ca94c982c768"}, {"sha": "0fc8fd2bd589572964d4949cd35aac44659af334", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fc8fd2bd589572964d4949cd35aac44659af334", "html_url": "https://github.com/rust-lang/rust/commit/0fc8fd2bd589572964d4949cd35aac44659af334"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "587eb5feb078818fa82acf4949829a6ac18dd85f", "filename": "crates/assists/src/handlers/inline_local_variable.rs", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/51f5af223f01e7938fb07821027afe511d480826/crates%2Fassists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f5af223f01e7938fb07821027afe511d480826/crates%2Fassists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Finline_local_variable.rs?ref=51f5af223f01e7938fb07821027afe511d480826", "patch": "@@ -1,4 +1,4 @@\n-use ide_db::defs::Definition;\n+use ide_db::{defs::Definition, search::ReferenceKind};\n use syntax::{\n     ast::{self, AstNode, AstToken},\n     TextRange,\n@@ -119,7 +119,13 @@ pub(crate) fn inline_local_variable(acc: &mut Assists, ctx: &AssistContext) -> O\n             for (desc, should_wrap) in refs.iter().zip(wrap_in_parens) {\n                 let replacement =\n                     if should_wrap { init_in_paren.clone() } else { init_str.clone() };\n-                builder.replace(desc.file_range.range, replacement)\n+                match desc.kind {\n+                    ReferenceKind::FieldShorthandForLocal => {\n+                        mark::hit!(inline_field_shorthand);\n+                        builder.insert(desc.file_range.range.end(), format!(\": {}\", replacement))\n+                    }\n+                    _ => builder.replace(desc.file_range.range, replacement),\n+                }\n             }\n         },\n     )\n@@ -666,6 +672,27 @@ fn foo() {\n         );\n     }\n \n+    #[test]\n+    fn inline_field_shorthand() {\n+        mark::check!(inline_field_shorthand);\n+        check_assist(\n+            inline_local_variable,\n+            r\"\n+struct S { foo: i32}\n+fn main() {\n+    let <|>foo = 92;\n+    S { foo }\n+}\n+\",\n+            r\"\n+struct S { foo: i32}\n+fn main() {\n+    S { foo: 92 }\n+}\n+\",\n+        );\n+    }\n+\n     #[test]\n     fn test_not_applicable_if_variable_unused() {\n         mark::check!(test_not_applicable_if_variable_unused);"}]}