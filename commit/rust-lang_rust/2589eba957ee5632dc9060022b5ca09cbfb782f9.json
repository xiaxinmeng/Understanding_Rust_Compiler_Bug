{"sha": "2589eba957ee5632dc9060022b5ca09cbfb782f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ODllYmE5NTdlZTU2MzJkYzkwNjAwMjJiNWNhMDljYmZiNzgyZjk=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-04-08T03:26:48Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-04-08T08:03:42Z"}, "message": "When repr'ing an enum value, assert that it matched some variant.", "tree": {"sha": "9fff748377f11e1ae38ce7f2aa561048e88b5045", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fff748377f11e1ae38ce7f2aa561048e88b5045"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2589eba957ee5632dc9060022b5ca09cbfb782f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2589eba957ee5632dc9060022b5ca09cbfb782f9", "html_url": "https://github.com/rust-lang/rust/commit/2589eba957ee5632dc9060022b5ca09cbfb782f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2589eba957ee5632dc9060022b5ca09cbfb782f9/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "640e8ae4e583057e7a4e694063bf704c02f816c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/640e8ae4e583057e7a4e694063bf704c02f816c1", "html_url": "https://github.com/rust-lang/rust/commit/640e8ae4e583057e7a4e694063bf704c02f816c1"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "530f80ef764cd1ad59c425ad5cf34b0ede040643", "filename": "src/libcore/repr.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2589eba957ee5632dc9060022b5ca09cbfb782f9/src%2Flibcore%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2589eba957ee5632dc9060022b5ca09cbfb782f9/src%2Flibcore%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frepr.rs?ref=2589eba957ee5632dc9060022b5ca09cbfb782f9", "patch": "@@ -624,9 +624,10 @@ impl TyVisitor for ReprVisitor {\n     fn visit_leave_enum(&self, _n_variants: uint,\n                         _get_disr: extern unsafe fn(ptr: *Opaque) -> int,\n                         _sz: uint, _align: uint) -> bool {\n-        // NOTE should this assert that it's not still SearchingFor the right variant?\n-        self.var_stk.pop();\n-        true\n+        match self.var_stk.pop() {\n+            SearchingFor(*) => fail!(~\"enum value matched no variant\"),\n+            _ => true\n+        }\n     }\n \n     fn visit_enter_fn(&self, _purity: uint, _proto: uint,"}]}