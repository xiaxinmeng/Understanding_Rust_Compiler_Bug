{"sha": "dd83ae2cd6f6846e5f1f949f28c0331f922abe3c", "node_id": "C_kwDOAAsO6NoAKGRkODNhZTJjZDZmNjg0NmU1ZjFmOTQ5ZjI4YzAzMzFmOTIyYWJlM2M", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-05-10T06:24:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-10T06:24:00Z"}, "message": "Rollup merge of #93661 - ehuss:add-missing-rustc-arg-docs, r=estebank,Mark-Simulacrum\n\nAdd missing rustc arg docs\n\nAdd documentation for recently added rustc args\n\n`-C symbol-mangling-version` was stabilized in #90128.\n`--json=future-incompat` was stabilized in #91535.", "tree": {"sha": "f23e85ac7ae33cd09e6ac211deb5976948cf7321", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f23e85ac7ae33cd09e6ac211deb5976948cf7321"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd83ae2cd6f6846e5f1f949f28c0331f922abe3c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiegUACRBK7hj4Ov3rIwAAuysIAEiWw6tGCmrf8YlxLAPvEttS\nhgELD0lIiK70iv6FldFcVvMh+AhhQ/dmPNE0wRU/xLoxSksLLVtfC2hAg0vThTSy\nt60C/613ZIlOFwa7Ac6uaCKGSMW/NLM9FHZ89UQyA5iENEqAIJRPUbzy7O5DMZBG\ncc6hGhhonGmuzAjjOs0o5FgFRIZmKSwOXJdZ/ExDGhVRZZ/WyOm2/p1BxnyNbtf1\nssZuklgXBUIbg50xJ0+W+0eTg8i7Pb44GGLpGx0yNwXSqgZ23koNhkJs3sZba9Lf\nRO4kc+khbt2V/SqPVDSdCVOLS4oZHXQlmiAOnbO1HJsSjfg70S9lnGwPsEQFy4E=\n=tir9\n-----END PGP SIGNATURE-----\n", "payload": "tree f23e85ac7ae33cd09e6ac211deb5976948cf7321\nparent 87fd70c107b23fe08336a12a20a0f5e85561d499\nparent 800e0e2cfa845be5a01c611c8f370172b3a7cea5\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1652163840 +0200\ncommitter GitHub <noreply@github.com> 1652163840 +0200\n\nRollup merge of #93661 - ehuss:add-missing-rustc-arg-docs, r=estebank,Mark-Simulacrum\n\nAdd missing rustc arg docs\n\nAdd documentation for recently added rustc args\n\n`-C symbol-mangling-version` was stabilized in #90128.\n`--json=future-incompat` was stabilized in #91535.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd83ae2cd6f6846e5f1f949f28c0331f922abe3c", "html_url": "https://github.com/rust-lang/rust/commit/dd83ae2cd6f6846e5f1f949f28c0331f922abe3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd83ae2cd6f6846e5f1f949f28c0331f922abe3c/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87fd70c107b23fe08336a12a20a0f5e85561d499", "url": "https://api.github.com/repos/rust-lang/rust/commits/87fd70c107b23fe08336a12a20a0f5e85561d499", "html_url": "https://github.com/rust-lang/rust/commit/87fd70c107b23fe08336a12a20a0f5e85561d499"}, {"sha": "800e0e2cfa845be5a01c611c8f370172b3a7cea5", "url": "https://api.github.com/repos/rust-lang/rust/commits/800e0e2cfa845be5a01c611c8f370172b3a7cea5", "html_url": "https://github.com/rust-lang/rust/commit/800e0e2cfa845be5a01c611c8f370172b3a7cea5"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "02011325d687881c02174adbd61ac1148d95fe80", "filename": "src/doc/rustc/src/codegen-options/index.md", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/dd83ae2cd6f6846e5f1f949f28c0331f922abe3c/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/dd83ae2cd6f6846e5f1f949f28c0331f922abe3c/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md?ref=dd83ae2cd6f6846e5f1f949f28c0331f922abe3c", "patch": "@@ -550,6 +550,21 @@ Supported values for this option are:\n - `symbols` - same as `debuginfo`, but the rest of the symbol table section is\n   stripped as well if the linker supports it.\n \n+## symbol-mangling-version\n+\n+This option controls the [name mangling] format for encoding Rust item names\n+for the purpose of generating object code and linking.\n+\n+Supported values for this option are:\n+\n+* `v0` \u2014 The \"v0\" mangling scheme. The specific format is not specified at\n+  this time.\n+\n+The default if not specified will use a compiler-chosen default which may\n+change in the future.\n+\n+[name mangling]: https://en.wikipedia.org/wiki/Name_mangling\n+\n ## target-cpu\n \n This instructs `rustc` to generate code specifically for a particular processor."}, {"sha": "0d02fa7bd6b3e996422d3b6fa9ac652f302365af", "filename": "src/doc/rustc/src/command-line-arguments.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dd83ae2cd6f6846e5f1f949f28c0331f922abe3c/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md", "raw_url": "https://github.com/rust-lang/rust/raw/dd83ae2cd6f6846e5f1f949f28c0331f922abe3c/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md?ref=dd83ae2cd6f6846e5f1f949f28c0331f922abe3c", "patch": "@@ -408,6 +408,9 @@ to customize the output:\n   argument](#option-emit), and as soon as the artifact is available on the\n   filesystem a notification will be emitted.\n \n+- `future-incompat` - includes a JSON message that contains a report if the\n+  crate contains any code that may fail to compile in the future.\n+\n Note that it is invalid to combine the `--json` argument with the\n [`--color`](#option-color) argument, and it is required to combine `--json`\n with `--error-format=json`."}, {"sha": "efbf861eaa68c1ede60a0c71d27e7e87454cc020", "filename": "src/doc/rustc/src/json.md", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/dd83ae2cd6f6846e5f1f949f28c0331f922abe3c/src%2Fdoc%2Frustc%2Fsrc%2Fjson.md", "raw_url": "https://github.com/rust-lang/rust/raw/dd83ae2cd6f6846e5f1f949f28c0331f922abe3c/src%2Fdoc%2Frustc%2Fsrc%2Fjson.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fjson.md?ref=dd83ae2cd6f6846e5f1f949f28c0331f922abe3c", "patch": "@@ -229,6 +229,32 @@ flag][option-emit] documentation.\n }\n ```\n \n+## Future-incompatible reports\n+\n+If the [`--json=future-incompat`][option-json] flag is used, then a separate\n+JSON structure will be emitted if the crate may stop compiling in the future.\n+This contains diagnostic information about the particular warnings that may be\n+turned into a hard error in the future. This will include the diagnostic\n+information, even if the diagnostics have been suppressed (such as with an\n+`#[allow]` attribute or the `--cap-lints` option).\n+\n+```javascript\n+{\n+    /* An array of objects describing a warning that will become a hard error\n+       in the future.\n+    */\n+    \"future_incompat_report\":\n+    [\n+        {\n+            /* A diagnostic structure as defined in\n+               https://doc.rust-lang.org/rustc/json.html#diagnostics\n+            */\n+            \"diagnostic\": {...},\n+        }\n+    ]\n+}\n+```\n+\n [option-emit]: command-line-arguments.md#option-emit\n [option-error-format]: command-line-arguments.md#option-error-format\n [option-json]: command-line-arguments.md#option-json"}]}