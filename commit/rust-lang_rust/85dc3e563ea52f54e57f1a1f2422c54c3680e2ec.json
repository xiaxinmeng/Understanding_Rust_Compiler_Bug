{"sha": "85dc3e563ea52f54e57f1a1f2422c54c3680e2ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1ZGMzZTU2M2VhNTJmNTRlNTdmMWExZjI0MjJjNTRjMzY4MGUyZWM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-02T03:41:17Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-04T01:12:26Z"}, "message": "make execution with full MIR work: need to whitelist Arc drop impl and whatever it calls", "tree": {"sha": "dd47677f8a642c87cc46a18b90142f90f6c5f9fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd47677f8a642c87cc46a18b90142f90f6c5f9fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85dc3e563ea52f54e57f1a1f2422c54c3680e2ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85dc3e563ea52f54e57f1a1f2422c54c3680e2ec", "html_url": "https://github.com/rust-lang/rust/commit/85dc3e563ea52f54e57f1a1f2422c54c3680e2ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85dc3e563ea52f54e57f1a1f2422c54c3680e2ec/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2c05014af8bb1eb78c8de30b092cc854dd29421", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2c05014af8bb1eb78c8de30b092cc854dd29421", "html_url": "https://github.com/rust-lang/rust/commit/c2c05014af8bb1eb78c8de30b092cc854dd29421"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "4454e21b1aacbbb0b24ac55e3353c69697ba0fa9", "filename": "src/librustc_mir/interpret/validation.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/85dc3e563ea52f54e57f1a1f2422c54c3680e2ec/src%2Flibrustc_mir%2Finterpret%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85dc3e563ea52f54e57f1a1f2422c54c3680e2ec/src%2Flibrustc_mir%2Finterpret%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidation.rs?ref=85dc3e563ea52f54e57f1a1f2422c54c3680e2ec", "patch": "@@ -42,18 +42,24 @@ impl<'a, 'tcx, M: Machine<'tcx>> EvalContext<'a, 'tcx, M> {\n         // HACK: Determine if this method is whitelisted and hence we do not perform any validation.\n         // We currently insta-UB on anything passing around uninitialized memory, so we have to whitelist\n         // the places that are allowed to do that.\n+        // The second group is stuff libstd does that is forbidden even under relaxed validation.\n         {\n             // The regexp we use for filtering\n             use regex::Regex;\n             lazy_static! {\n                 static ref RE: Regex = Regex::new(\"^(\\\n-std::mem::uninitialized::|\\\n-std::mem::forget::|\\\n-<std::heap::Heap as std::heap::Alloc>::|\\\n-<std::mem::ManuallyDrop<T>><.*>::new$|\\\n-<std::mem::ManuallyDrop<T> as std::ops::DerefMut><.*>::deref_mut$|\\\n-std::ptr::read::\\\n-)\").unwrap();\n+                    std::mem::uninitialized::|\\\n+                    std::mem::forget::|\\\n+                    <std::heap::Heap as std::heap::Alloc>::|\\\n+                    <std::mem::ManuallyDrop<T>><.*>::new$|\\\n+                    <std::mem::ManuallyDrop<T> as std::ops::DerefMut><.*>::deref_mut$|\\\n+                    std::ptr::read::|\\\n+                    \\\n+                    <std::sync::Arc<T>><.*>::inner$|\\\n+                    <std::sync::Arc<T>><.*>::drop_slow$|\\\n+                    std::heap::Layout::for_value::|\\\n+                    std::mem::(size|align)_of_val::\\\n+                )\").unwrap();\n             }\n             // Now test\n             let name = self.stack[self.cur_frame()].instance.to_string();"}]}