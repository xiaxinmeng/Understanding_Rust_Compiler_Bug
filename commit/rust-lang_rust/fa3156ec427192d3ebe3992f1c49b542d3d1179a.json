{"sha": "fa3156ec427192d3ebe3992f1c49b542d3d1179a", "node_id": "C_kwDOAAsO6NoAKGZhMzE1NmVjNDI3MTkyZDNlYmUzOTkyZjFjNDliNTQyZDNkMTE3OWE", "commit": {"author": {"name": "rhysd", "email": "lin90162@yahoo.co.jp", "date": "2022-07-15T08:05:50Z"}, "committer": {"name": "rhysd", "email": "lin90162@yahoo.co.jp", "date": "2022-07-15T08:05:50Z"}, "message": "add `#[must_use]` to `Box::from_raw`", "tree": {"sha": "b28c8d2bded02cc665c4c7091a92dedb585bab97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b28c8d2bded02cc665c4c7091a92dedb585bab97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa3156ec427192d3ebe3992f1c49b542d3d1179a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa3156ec427192d3ebe3992f1c49b542d3d1179a", "html_url": "https://github.com/rust-lang/rust/commit/fa3156ec427192d3ebe3992f1c49b542d3d1179a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa3156ec427192d3ebe3992f1c49b542d3d1179a/comments", "author": {"login": "rhysd", "id": 823277, "node_id": "MDQ6VXNlcjgyMzI3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhysd", "html_url": "https://github.com/rhysd", "followers_url": "https://api.github.com/users/rhysd/followers", "following_url": "https://api.github.com/users/rhysd/following{/other_user}", "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions", "organizations_url": "https://api.github.com/users/rhysd/orgs", "repos_url": "https://api.github.com/users/rhysd/repos", "events_url": "https://api.github.com/users/rhysd/events{/privacy}", "received_events_url": "https://api.github.com/users/rhysd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rhysd", "id": 823277, "node_id": "MDQ6VXNlcjgyMzI3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhysd", "html_url": "https://github.com/rhysd", "followers_url": "https://api.github.com/users/rhysd/followers", "following_url": "https://api.github.com/users/rhysd/following{/other_user}", "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions", "organizations_url": "https://api.github.com/users/rhysd/orgs", "repos_url": "https://api.github.com/users/rhysd/repos", "events_url": "https://api.github.com/users/rhysd/events{/privacy}", "received_events_url": "https://api.github.com/users/rhysd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30243dd87e7dbd17d68e1a1d16ba066a7d2cebe5", "url": "https://api.github.com/repos/rust-lang/rust/commits/30243dd87e7dbd17d68e1a1d16ba066a7d2cebe5", "html_url": "https://github.com/rust-lang/rust/commit/30243dd87e7dbd17d68e1a1d16ba066a7d2cebe5"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "c1ceeb0deb837100e2b77cccfc7312a7889c5f00", "filename": "library/alloc/src/boxed.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fa3156ec427192d3ebe3992f1c49b542d3d1179a/library%2Falloc%2Fsrc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa3156ec427192d3ebe3992f1c49b542d3d1179a/library%2Falloc%2Fsrc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fboxed.rs?ref=fa3156ec427192d3ebe3992f1c49b542d3d1179a", "patch": "@@ -949,6 +949,7 @@ impl<T: ?Sized> Box<T> {\n     /// [`Layout`]: crate::Layout\n     #[stable(feature = \"box_raw\", since = \"1.4.0\")]\n     #[inline]\n+    #[must_use = \"call `drop(from_raw(ptr))` if you intend to drop the `Box`\"]\n     pub unsafe fn from_raw(raw: *mut T) -> Self {\n         unsafe { Self::from_raw_in(raw, Global) }\n     }"}, {"sha": "9ea7726894cbcccb3b27b00307561642427fbbfa", "filename": "src/test/ui/lint/unused/must-use-box-from-raw.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fa3156ec427192d3ebe3992f1c49b542d3d1179a/src%2Ftest%2Fui%2Flint%2Funused%2Fmust-use-box-from-raw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa3156ec427192d3ebe3992f1c49b542d3d1179a/src%2Ftest%2Fui%2Flint%2Funused%2Fmust-use-box-from-raw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Fmust-use-box-from-raw.rs?ref=fa3156ec427192d3ebe3992f1c49b542d3d1179a", "patch": "@@ -0,0 +1,11 @@\n+// #99269\n+\n+// check-pass\n+\n+#![warn(unused_must_use)]\n+\n+unsafe fn free<T>(ptr: *mut T) {\n+    Box::from_raw(ptr); //~ WARNING unused return value\n+}\n+\n+fn main() {}"}, {"sha": "7769f09aa5203b3cebfb9d18f810f38e91ec0aff", "filename": "src/test/ui/lint/unused/must-use-box-from-raw.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fa3156ec427192d3ebe3992f1c49b542d3d1179a/src%2Ftest%2Fui%2Flint%2Funused%2Fmust-use-box-from-raw.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa3156ec427192d3ebe3992f1c49b542d3d1179a/src%2Ftest%2Fui%2Flint%2Funused%2Fmust-use-box-from-raw.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Fmust-use-box-from-raw.stderr?ref=fa3156ec427192d3ebe3992f1c49b542d3d1179a", "patch": "@@ -0,0 +1,15 @@\n+warning: unused return value of `Box::<T>::from_raw` that must be used\n+  --> $DIR/must-use-box-from-raw.rs:8:5\n+   |\n+LL |     Box::from_raw(ptr);\n+   |     ^^^^^^^^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/must-use-box-from-raw.rs:5:9\n+   |\n+LL | #![warn(unused_must_use)]\n+   |         ^^^^^^^^^^^^^^^\n+   = note: call `drop(from_raw(ptr))` if you intend to drop the `Box`\n+\n+warning: 1 warning emitted\n+"}]}