{"sha": "68785d961459d3aa13ffa540471cdffe628d07f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4Nzg1ZDk2MTQ1OWQzYWExM2ZmYTU0MDQ3MWNkZmZlNjI4ZDA3Zjg=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-11-22T12:38:28Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-11-22T12:52:55Z"}, "message": "PGO: Add regression test for indirect call promotion.", "tree": {"sha": "bd341b454491752004932f7974477fef35cebfd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd341b454491752004932f7974477fef35cebfd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68785d961459d3aa13ffa540471cdffe628d07f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68785d961459d3aa13ffa540471cdffe628d07f8", "html_url": "https://github.com/rust-lang/rust/commit/68785d961459d3aa13ffa540471cdffe628d07f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68785d961459d3aa13ffa540471cdffe628d07f8/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0675d65093e7173be676c07582085bf596ce966e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0675d65093e7173be676c07582085bf596ce966e", "html_url": "https://github.com/rust-lang/rust/commit/0675d65093e7173be676c07582085bf596ce966e"}], "stats": {"total": 129, "additions": 129, "deletions": 0}, "files": [{"sha": "e61018752c37555a2ae2e657f99e3df03bc1a4ed", "filename": "src/test/run-make-fulldeps/pgo-indirect-call-promotion/Makefile", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/68785d961459d3aa13ffa540471cdffe628d07f8/src%2Ftest%2Frun-make-fulldeps%2Fpgo-indirect-call-promotion%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/68785d961459d3aa13ffa540471cdffe628d07f8/src%2Ftest%2Frun-make-fulldeps%2Fpgo-indirect-call-promotion%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fpgo-indirect-call-promotion%2FMakefile?ref=68785d961459d3aa13ffa540471cdffe628d07f8", "patch": "@@ -0,0 +1,36 @@\n+# needs-profiler-support\n+\n+-include ../tools.mk\n+\n+# This test makes sure that indirect call promotion is performed. The test\n+# programs calls the same function a thousand times through a function pointer.\n+# Only PGO data provides the information that it actually always is the same\n+# function. We verify that the indirect call promotion pass inserts a check\n+# whether it can make a direct call instead of the indirect call.\n+\n+# LLVM doesn't support instrumenting binaries that use SEH:\n+# https://github.com/rust-lang/rust/issues/61002\n+#\n+# Things work fine with -Cpanic=abort though.\n+ifdef IS_MSVC\n+COMMON_FLAGS=-Cpanic=abort\n+endif\n+\n+all:\n+\t# We don't compile `opaque` with either optimizations or instrumentation.\n+\t# We don't compile `opaque` with either optimizations or instrumentation.\n+\t$(RUSTC) $(COMMON_FLAGS) opaque.rs\n+\t# Compile the test program with instrumentation\n+\tmkdir -p \"$(TMPDIR)\"/prof_data_dir\n+\t$(RUSTC) $(COMMON_FLAGS) interesting.rs \\\n+\t\t-Cprofile-generate=\"$(TMPDIR)\"/prof_data_dir -O -Ccodegen-units=1\n+\t$(RUSTC) $(COMMON_FLAGS) main.rs -Cprofile-generate=\"$(TMPDIR)\"/prof_data_dir -O\n+\t# The argument below generates to the expected branch weights\n+\t$(call RUN,main) || exit 1\n+\t\"$(LLVM_BIN_DIR)\"/llvm-profdata merge \\\n+\t\t-o \"$(TMPDIR)\"/prof_data_dir/merged.profdata \\\n+\t\t\"$(TMPDIR)\"/prof_data_dir\n+\t$(RUSTC) $(COMMON_FLAGS) interesting.rs \\\n+\t\t-Cprofile-use=\"$(TMPDIR)\"/prof_data_dir/merged.profdata -O \\\n+\t\t-Ccodegen-units=1 --emit=llvm-ir\n+\tcat \"$(TMPDIR)\"/interesting.ll | \"$(LLVM_FILECHECK)\" filecheck-patterns.txt"}, {"sha": "934159207e2d1db400c2ab03bf1e97892f7f23b9", "filename": "src/test/run-make-fulldeps/pgo-indirect-call-promotion/filecheck-patterns.txt", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/68785d961459d3aa13ffa540471cdffe628d07f8/src%2Ftest%2Frun-make-fulldeps%2Fpgo-indirect-call-promotion%2Ffilecheck-patterns.txt", "raw_url": "https://github.com/rust-lang/rust/raw/68785d961459d3aa13ffa540471cdffe628d07f8/src%2Ftest%2Frun-make-fulldeps%2Fpgo-indirect-call-promotion%2Ffilecheck-patterns.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fpgo-indirect-call-promotion%2Ffilecheck-patterns.txt?ref=68785d961459d3aa13ffa540471cdffe628d07f8", "patch": "@@ -0,0 +1,16 @@\n+CHECK: define void @call_a_bunch_of_functions({{.*}} {\n+\n+# Make sure that indirect call promotion inserted a check against the most\n+# frequently called function.\n+CHECK: %{{.*}} = icmp eq void ()* %{{.*}}, @function_called_always\n+\n+# Check that the call to `function_called_always` was inlined, so that we\n+# directly call `opaque_f1` from the upstream crate.\n+CHECK: call void @opaque_f1()\n+\n+\n+# Same checks as above, repeated for the trait object case\n+\n+CHECK: define void @call_a_bunch_of_trait_methods({{.*}}\n+CHECK: %{{.*}} = icmp eq void ({}*)* %{{.*}}, {{.*}} @foo\n+CHECK: tail call void @opaque_f2()"}, {"sha": "4fd096d626dec5837b90f5ccc8f9790526208143", "filename": "src/test/run-make-fulldeps/pgo-indirect-call-promotion/interesting.rs", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/68785d961459d3aa13ffa540471cdffe628d07f8/src%2Ftest%2Frun-make-fulldeps%2Fpgo-indirect-call-promotion%2Finteresting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68785d961459d3aa13ffa540471cdffe628d07f8/src%2Ftest%2Frun-make-fulldeps%2Fpgo-indirect-call-promotion%2Finteresting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fpgo-indirect-call-promotion%2Finteresting.rs?ref=68785d961459d3aa13ffa540471cdffe628d07f8", "patch": "@@ -0,0 +1,56 @@\n+#![crate_name=\"interesting\"]\n+#![crate_type=\"rlib\"]\n+\n+extern crate opaque;\n+\n+#[no_mangle]\n+pub fn function_called_always() {\n+    opaque::opaque_f1();\n+}\n+\n+#[no_mangle]\n+pub fn function_called_never() {\n+    opaque::opaque_f2();\n+}\n+\n+#[no_mangle]\n+pub fn call_a_bunch_of_functions(fns: &[fn()]) {\n+\n+    // Indirect call promotion transforms the below into something like\n+    //\n+    // for f in fns {\n+    //     if f == function_called_always {\n+    //         function_called_always()\n+    //     } else {\n+    //         f();\n+    //     }\n+    // }\n+    //\n+    // where `function_called_always` actually gets inlined too.\n+\n+    for f in fns {\n+        f();\n+    }\n+}\n+\n+\n+pub trait Foo {\n+    fn foo(&self);\n+}\n+\n+impl Foo for u32 {\n+\n+    #[no_mangle]\n+    fn foo(&self) {\n+        opaque::opaque_f2();\n+    }\n+}\n+\n+#[no_mangle]\n+pub fn call_a_bunch_of_trait_methods(trait_objects: &[&dyn Foo]) {\n+\n+    // Same as above, just with vtables in between\n+    for x in trait_objects {\n+        x.foo();\n+    }\n+}"}, {"sha": "27181f30710bbbbe05fcc0a4b7525d8699381217", "filename": "src/test/run-make-fulldeps/pgo-indirect-call-promotion/main.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/68785d961459d3aa13ffa540471cdffe628d07f8/src%2Ftest%2Frun-make-fulldeps%2Fpgo-indirect-call-promotion%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68785d961459d3aa13ffa540471cdffe628d07f8/src%2Ftest%2Frun-make-fulldeps%2Fpgo-indirect-call-promotion%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fpgo-indirect-call-promotion%2Fmain.rs?ref=68785d961459d3aa13ffa540471cdffe628d07f8", "patch": "@@ -0,0 +1,14 @@\n+extern crate interesting;\n+\n+fn main() {\n+    // function pointer case\n+    let fns: Vec<_> = std::iter::repeat(interesting::function_called_always as fn())\n+        .take(1000)\n+        .collect();\n+    interesting::call_a_bunch_of_functions(&fns[..]);\n+\n+    // Trait object case\n+    let trait_objects = vec![0u32; 1000];\n+    let trait_objects: Vec<_> = trait_objects.iter().map(|x| x as &dyn interesting::Foo).collect();\n+    interesting::call_a_bunch_of_trait_methods(&trait_objects[..]);\n+}"}, {"sha": "9628d711c505cab1a34cf8d9d3b8ab8e9823a5e6", "filename": "src/test/run-make-fulldeps/pgo-indirect-call-promotion/opaque.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/68785d961459d3aa13ffa540471cdffe628d07f8/src%2Ftest%2Frun-make-fulldeps%2Fpgo-indirect-call-promotion%2Fopaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68785d961459d3aa13ffa540471cdffe628d07f8/src%2Ftest%2Frun-make-fulldeps%2Fpgo-indirect-call-promotion%2Fopaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fpgo-indirect-call-promotion%2Fopaque.rs?ref=68785d961459d3aa13ffa540471cdffe628d07f8", "patch": "@@ -0,0 +1,7 @@\n+#![crate_name=\"opaque\"]\n+#![crate_type=\"rlib\"]\n+\n+#[no_mangle]\n+pub fn opaque_f1() {}\n+#[no_mangle]\n+pub fn opaque_f2() {}"}]}