{"sha": "192ed76cb98a06a18c880604d97d36e25f42e5ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MmVkNzZjYjk4YTA2YTE4Yzg4MDYwNGQ5N2QzNmUyNWY0MmU1YWU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-11-19T22:58:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-19T22:58:39Z"}, "message": "Rollup merge of #79181 - aDotInTheVoid:provided-method-source-link, r=jyn514,GuillaumeGomez\n\nrustdoc: add [src] links to methods on a trait's page\n\nCloses #45150\n\n![image](https://user-images.githubusercontent.com/28781354/99565541-aba4d500-29c3-11eb-99c7-11c1f91584e9.png)\n\n### Caveats\n\n- The way I've implemented it, links are also provided for required methods, that just link to the signature in the code. I'm not sure if this is the desired behaviour.\n\n![image](https://user-images.githubusercontent.com/28781354/99566222-849ad300-29c4-11eb-9897-08cc5842954f.png)\n\n- I'm not sure if the css changes are correct. I inspected them visualy on firefox on desktop, and they seem to be fine.\n- I can't tell how `src/librustdoc/html/render/mod.rs` is structured, so I probably", "tree": {"sha": "4d1fc0a52cbbd30cefbd92dc9ecef9ddeea18b75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d1fc0a52cbbd30cefbd92dc9ecef9ddeea18b75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/192ed76cb98a06a18c880604d97d36e25f42e5ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJftvifCRBK7hj4Ov3rIwAAdHIIAHUdBrKxoZF6mGd3hlrTZClt\n+2jzOV703C4t3qzLjJ2f/QDchUPMFH8Q03XGWL3NWcyO/56eDRAeTfIxomUCtBJH\nbtACdhawmPa6ENfJ0iwDFdq9qW5Uf02SHrXKPl69tgP8xy1zG8nEHZ+cZtiDMuGJ\nWd3pqfAC+dHIIbrYwfY0weHeySIdLXrr3LRDJoKfrYDNamtWEpZBtZIPGw2mH/2q\n7bZEqxD7SwWdBKE4O22ZQpuSkcKsF2eKeiCKbm/dPgpZvu3vKH3lk4Stto+ZWA7Z\nDdAQSyE0B7m7/c0sysOAoOEARQoyr7NT0MpTiA5QWborJYJyGPnDepdM2Fu0Jwo=\n=iuuQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 4d1fc0a52cbbd30cefbd92dc9ecef9ddeea18b75\nparent acc2e2390114620ba57ea2f80412f7143c903bac\nparent ae644a2d4df673f5063d5b127488b7f03fef15a6\nauthor Dylan DPC <dylan.dpc@gmail.com> 1605826719 +0100\ncommitter GitHub <noreply@github.com> 1605826719 +0100\n\nRollup merge of #79181 - aDotInTheVoid:provided-method-source-link, r=jyn514,GuillaumeGomez\n\nrustdoc: add [src] links to methods on a trait's page\n\nCloses #45150\n\n![image](https://user-images.githubusercontent.com/28781354/99565541-aba4d500-29c3-11eb-99c7-11c1f91584e9.png)\n\n### Caveats\n\n- The way I've implemented it, links are also provided for required methods, that just link to the signature in the code. I'm not sure if this is the desired behaviour.\n\n![image](https://user-images.githubusercontent.com/28781354/99566222-849ad300-29c4-11eb-9897-08cc5842954f.png)\n\n- I'm not sure if the css changes are correct. I inspected them visualy on firefox on desktop, and they seem to be fine.\n- I can't tell how `src/librustdoc/html/render/mod.rs` is structured, so I probably\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/192ed76cb98a06a18c880604d97d36e25f42e5ae", "html_url": "https://github.com/rust-lang/rust/commit/192ed76cb98a06a18c880604d97d36e25f42e5ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/192ed76cb98a06a18c880604d97d36e25f42e5ae/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acc2e2390114620ba57ea2f80412f7143c903bac", "url": "https://api.github.com/repos/rust-lang/rust/commits/acc2e2390114620ba57ea2f80412f7143c903bac", "html_url": "https://github.com/rust-lang/rust/commit/acc2e2390114620ba57ea2f80412f7143c903bac"}, {"sha": "ae644a2d4df673f5063d5b127488b7f03fef15a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae644a2d4df673f5063d5b127488b7f03fef15a6", "html_url": "https://github.com/rust-lang/rust/commit/ae644a2d4df673f5063d5b127488b7f03fef15a6"}], "stats": {"total": 97, "additions": 55, "deletions": 42}, "files": [{"sha": "147a8d33765af4574f391668595a95944e80091f", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 24, "deletions": 37, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/192ed76cb98a06a18c880604d97d36e25f42e5ae/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/192ed76cb98a06a18c880604d97d36e25f42e5ae/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=192ed76cb98a06a18c880604d97d36e25f42e5ae", "patch": "@@ -1194,6 +1194,16 @@ fn write_minify(\n     }\n }\n \n+fn write_srclink(cx: &Context, item: &clean::Item, buf: &mut Buffer, cache: &Cache) {\n+    if let Some(l) = cx.src_href(item, cache) {\n+        write!(\n+            buf,\n+            \"<a class=\\\"srclink\\\" href=\\\"{}\\\" title=\\\"{}\\\">[src]</a>\",\n+            l, \"goto source code\"\n+        )\n+    }\n+}\n+\n #[derive(Debug, Eq, PartialEq, Hash)]\n struct ItemEntry {\n     url: String,\n@@ -1706,13 +1716,7 @@ fn print_item(cx: &Context, item: &clean::Item, buf: &mut Buffer, cache: &Cache)\n     // this page, and this link will be auto-clicked. The `id` attribute is\n     // used to find the link to auto-click.\n     if cx.shared.include_sources && !item.is_primitive() {\n-        if let Some(l) = cx.src_href(item, cache) {\n-            write!(\n-                buf,\n-                \"<a class=\\\"srclink\\\" href=\\\"{}\\\" title=\\\"{}\\\">[src]</a>\",\n-                l, \"goto source code\"\n-            );\n-        }\n+        write_srclink(cx, item, buf, cache);\n     }\n \n     write!(buf, \"</span>\"); // out-of-band\n@@ -2624,7 +2628,7 @@ fn item_trait(w: &mut Buffer, cx: &Context, it: &clean::Item, t: &clean::Trait,\n         write!(w, \"{}<span class=\\\"loading-content\\\">Loading content...</span>\", extra_content)\n     }\n \n-    fn trait_item(w: &mut Buffer, cx: &Context, m: &clean::Item, t: &clean::Item) {\n+    fn trait_item(w: &mut Buffer, cx: &Context, m: &clean::Item, t: &clean::Item, cache: &Cache) {\n         let name = m.name.as_ref().unwrap();\n         info!(\"Documenting {} on {}\", name, t.name.as_deref().unwrap_or_default());\n         let item_type = m.type_();\n@@ -2633,6 +2637,7 @@ fn item_trait(w: &mut Buffer, cx: &Context, it: &clean::Item, t: &clean::Trait,\n         render_assoc_item(w, m, AssocItemLink::Anchor(Some(&id)), ItemType::Impl);\n         write!(w, \"</code>\");\n         render_stability_since(w, m, t);\n+        write_srclink(cx, m, w, cache);\n         write!(w, \"</h3>\");\n         document(w, cx, m, Some(t));\n     }\n@@ -2644,8 +2649,8 @@ fn item_trait(w: &mut Buffer, cx: &Context, it: &clean::Item, t: &clean::Trait,\n             \"Associated Types\",\n             \"<div class=\\\"methods\\\">\",\n         );\n-        for t in &types {\n-            trait_item(w, cx, *t, it);\n+        for t in types {\n+            trait_item(w, cx, t, it, cache);\n         }\n         write_loading_content(w, \"</div>\");\n     }\n@@ -2657,8 +2662,8 @@ fn item_trait(w: &mut Buffer, cx: &Context, it: &clean::Item, t: &clean::Trait,\n             \"Associated Constants\",\n             \"<div class=\\\"methods\\\">\",\n         );\n-        for t in &consts {\n-            trait_item(w, cx, *t, it);\n+        for t in consts {\n+            trait_item(w, cx, t, it, cache);\n         }\n         write_loading_content(w, \"</div>\");\n     }\n@@ -2671,8 +2676,8 @@ fn item_trait(w: &mut Buffer, cx: &Context, it: &clean::Item, t: &clean::Trait,\n             \"Required methods\",\n             \"<div class=\\\"methods\\\">\",\n         );\n-        for m in &required {\n-            trait_item(w, cx, *m, it);\n+        for m in required {\n+            trait_item(w, cx, m, it, cache);\n         }\n         write_loading_content(w, \"</div>\");\n     }\n@@ -2683,8 +2688,8 @@ fn item_trait(w: &mut Buffer, cx: &Context, it: &clean::Item, t: &clean::Trait,\n             \"Provided methods\",\n             \"<div class=\\\"methods\\\">\",\n         );\n-        for m in &provided {\n-            trait_item(w, cx, *m, it);\n+        for m in provided {\n+            trait_item(w, cx, m, it, cache);\n         }\n         write_loading_content(w, \"</div>\");\n     }\n@@ -3693,13 +3698,7 @@ fn render_impl(\n             StabilityLevel::Unstable { .. } => None,\n         });\n         render_stability_since_raw(w, since.as_deref(), outer_version);\n-        if let Some(l) = cx.src_href(&i.impl_item, cache) {\n-            write!(\n-                w,\n-                \"<a class=\\\"srclink\\\" href=\\\"{}\\\" title=\\\"{}\\\">[src]</a>\",\n-                l, \"goto source code\"\n-            );\n-        }\n+        write_srclink(cx, &i.impl_item, w, cache);\n         write!(w, \"</h3>\");\n \n         if trait_.is_some() {\n@@ -3765,13 +3764,7 @@ fn render_impl(\n                     render_assoc_item(w, item, link.anchor(&id), ItemType::Impl);\n                     write!(w, \"</code>\");\n                     render_stability_since_raw(w, item.stable_since().as_deref(), outer_version);\n-                    if let Some(l) = cx.src_href(item, cache) {\n-                        write!(\n-                            w,\n-                            \"<a class=\\\"srclink\\\" href=\\\"{}\\\" title=\\\"{}\\\">[src]</a>\",\n-                            l, \"goto source code\"\n-                        );\n-                    }\n+                    write_srclink(cx, item, w, cache);\n                     write!(w, \"</h4>\");\n                 }\n             }\n@@ -3787,13 +3780,7 @@ fn render_impl(\n                 assoc_const(w, item, ty, default.as_ref(), link.anchor(&id), \"\");\n                 write!(w, \"</code>\");\n                 render_stability_since_raw(w, item.stable_since().as_deref(), outer_version);\n-                if let Some(l) = cx.src_href(item, cache) {\n-                    write!(\n-                        w,\n-                        \"<a class=\\\"srclink\\\" href=\\\"{}\\\" title=\\\"{}\\\">[src]</a>\",\n-                        l, \"goto source code\"\n-                    );\n-                }\n+                write_srclink(cx, item, w, cache);\n                 write!(w, \"</h4>\");\n             }\n             clean::AssocTypeItem(ref bounds, ref default) => {"}, {"sha": "7d22913b99de909028c83571a3324e0efff4ac11", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/192ed76cb98a06a18c880604d97d36e25f42e5ae/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/192ed76cb98a06a18c880604d97d36e25f42e5ae/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=192ed76cb98a06a18c880604d97d36e25f42e5ae", "patch": "@@ -659,7 +659,7 @@ a {\n \ttext-decoration: underline;\n }\n \n-.invisible > .srclink, h4 > code + .srclink {\n+.invisible > .srclink, h4 > code + .srclink, h3 > code + .srclink {\n \tposition: absolute;\n \ttop: 0;\n \tright: 0;\n@@ -857,25 +857,25 @@ body.blur > :not(#help) {\n \ttop: 0;\n }\n \n-.impl-items .since, .impl .since {\n+.impl-items .since, .impl .since, .methods .since {\n \tflex-grow: 0;\n \tpadding-left: 12px;\n \tpadding-right: 2px;\n \tposition: initial;\n }\n \n-.impl-items .srclink, .impl .srclink {\n+.impl-items .srclink, .impl .srclink, .methods .srclink {\n \tflex-grow: 0;\n \t/* Override header settings otherwise it's too bold */\n \tfont-size: 17px;\n \tfont-weight: normal;\n }\n \n-.impl-items code, .impl code {\n+.impl-items code, .impl code, .methods code {\n \tflex-grow: 1;\n }\n \n-.impl-items h4, h4.impl, h3.impl {\n+.impl-items h4, h4.impl, h3.impl, .methods h3 {\n \tdisplay: flex;\n \tflex-basis: 100%;\n \tfont-size: 16px;"}, {"sha": "77116695690fc75366d3ef4ddbf62b28a70bf10a", "filename": "src/test/rustdoc/trait-src-link.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/192ed76cb98a06a18c880604d97d36e25f42e5ae/src%2Ftest%2Frustdoc%2Ftrait-src-link.rs", "raw_url": "https://github.com/rust-lang/rust/raw/192ed76cb98a06a18c880604d97d36e25f42e5ae/src%2Ftest%2Frustdoc%2Ftrait-src-link.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftrait-src-link.rs?ref=192ed76cb98a06a18c880604d97d36e25f42e5ae", "patch": "@@ -0,0 +1,26 @@\n+#![crate_name = \"quix\"]\n+pub trait Foo {\n+    // @has quix/trait.Foo.html '//a[@href=\"../src/quix/trait-src-link.rs.html#4\"]' '[src]'\n+    fn required();\n+\n+    // @has quix/trait.Foo.html '//a[@href=\"../src/quix/trait-src-link.rs.html#7\"]' '[src]'\n+    fn provided() {}\n+}\n+\n+pub struct Bar;\n+\n+impl Foo for Bar {\n+    // @has quix/struct.Bar.html '//a[@href=\"../src/quix/trait-src-link.rs.html#14\"]' '[src]'\n+    fn required() {}\n+    // @has quix/struct.Bar.html '//a[@href=\"../src/quix/trait-src-link.rs.html#7\"]' '[src]'\n+}\n+\n+pub struct Baz;\n+\n+impl Foo for Baz {\n+    // @has quix/struct.Baz.html '//a[@href=\"../src/quix/trait-src-link.rs.html#22\"]' '[src]'\n+    fn required() {}\n+\n+    // @has quix/struct.Baz.html '//a[@href=\"../src/quix/trait-src-link.rs.html#25\"]' '[src]'\n+    fn provided() {}\n+}"}]}