{"sha": "1c1d900d0bb71b2611b2a6c72d3f0f31cbcc3b06", "node_id": "C_kwDOAAsO6NoAKDFjMWQ5MDBkMGJiNzFiMjYxMWIyYTZjNzJkM2YwZjMxY2JjYzNiMDY", "commit": {"author": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2022-02-08T22:48:34Z"}, "committer": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2022-02-08T22:48:34Z"}, "message": "[ide_completion] render if a function is async/const/unsafe in completion details", "tree": {"sha": "b73265f033df365500e9bb20963727c420642312", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b73265f033df365500e9bb20963727c420642312"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c1d900d0bb71b2611b2a6c72d3f0f31cbcc3b06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c1d900d0bb71b2611b2a6c72d3f0f31cbcc3b06", "html_url": "https://github.com/rust-lang/rust/commit/1c1d900d0bb71b2611b2a6c72d3f0f31cbcc3b06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c1d900d0bb71b2611b2a6c72d3f0f31cbcc3b06/comments", "author": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b1978a3ed405c2a5ec34703914ec1878b599e14", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b1978a3ed405c2a5ec34703914ec1878b599e14", "html_url": "https://github.com/rust-lang/rust/commit/9b1978a3ed405c2a5ec34703914ec1878b599e14"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "c1908ba0c84df6a6d36ce2a1b9c625dac24d44d5", "filename": "crates/ide_completion/src/render/function.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1c1d900d0bb71b2611b2a6c72d3f0f31cbcc3b06/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c1d900d0bb71b2611b2a6c72d3f0f31cbcc3b06/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs?ref=1c1d900d0bb71b2611b2a6c72d3f0f31cbcc3b06", "patch": "@@ -110,7 +110,19 @@ fn render(\n \n fn detail(db: &dyn HirDatabase, func: hir::Function) -> String {\n     let ret_ty = func.ret_type(db);\n-    let mut detail = format!(\"fn({})\", params_display(db, func));\n+    let mut detail = String::new();\n+\n+    if func.is_const(db) {\n+        format_to!(detail, \"const \");\n+    }\n+    if func.is_async(db) {\n+        format_to!(detail, \"async \");\n+    }\n+    if func.is_unsafe(db) {\n+        format_to!(detail, \"unsafe \");\n+    }\n+\n+    format_to!(detail, \"fn({})\", params_display(db, func));\n     if !ret_ty.is_unit() {\n         format_to!(detail, \" -> {}\", ret_ty.display(db));\n     }"}]}