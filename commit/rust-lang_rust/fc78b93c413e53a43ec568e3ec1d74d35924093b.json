{"sha": "fc78b93c413e53a43ec568e3ec1d74d35924093b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjNzhiOTNjNDEzZTUzYTQzZWM1NjhlM2VjMWQ3NGQzNTkyNDA5M2I=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-03-10T08:38:29Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-03-12T08:03:34Z"}, "message": "Wrap llvm::InlineAsm::AsmDialect", "tree": {"sha": "356312161853d634d4b30ff263ef88a749cb3fff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/356312161853d634d4b30ff263ef88a749cb3fff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc78b93c413e53a43ec568e3ec1d74d35924093b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc78b93c413e53a43ec568e3ec1d74d35924093b", "html_url": "https://github.com/rust-lang/rust/commit/fc78b93c413e53a43ec568e3ec1d74d35924093b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc78b93c413e53a43ec568e3ec1d74d35924093b/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecccc0d649088720a8c4af86e1722b9a26ca31dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecccc0d649088720a8c4af86e1722b9a26ca31dc", "html_url": "https://github.com/rust-lang/rust/commit/ecccc0d649088720a8c4af86e1722b9a26ca31dc"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "b0cc18a30a41dceff13f059019da73cfb2ff1b22", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fc78b93c413e53a43ec568e3ec1d74d35924093b/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc78b93c413e53a43ec568e3ec1d74d35924093b/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=fc78b93c413e53a43ec568e3ec1d74d35924093b", "patch": "@@ -188,6 +188,12 @@ pub enum Metadata {\n     MD_tbaa_struct = 5\n }\n \n+// Inline Asm Dialect\n+pub enum AsmDialect {\n+    AD_ATT   = 0,\n+    AD_Intel = 1\n+}\n+\n // Opaque pointer types\n pub enum Module_opaque {}\n pub type ModuleRef = *Module_opaque;\n@@ -217,9 +223,9 @@ pub enum SectionIterator_opaque {}\n pub type SectionIteratorRef = *SectionIterator_opaque;\n \n pub mod llvm {\n-    use super::{AtomicBinOp, AtomicOrdering, BasicBlockRef, Bool, BuilderRef};\n-    use super::{ContextRef, MemoryBufferRef, ModuleRef, ObjectFileRef};\n-    use super::{Opcode, PassManagerRef, PassManagerBuilderRef};\n+    use super::{AsmDialect, AtomicBinOp, AtomicOrdering, BasicBlockRef};\n+    use super::{Bool, BuilderRef, ContextRef, MemoryBufferRef, ModuleRef};\n+    use super::{ObjectFileRef, Opcode, PassManagerRef, PassManagerBuilderRef};\n     use super::{SectionIteratorRef, TargetDataRef, TypeKind, TypeRef, UseRef};\n     use super::{ValueRef};\n \n@@ -1437,7 +1443,8 @@ pub mod llvm {\n         /** Prepares inline assembly. */\n         pub unsafe fn LLVMInlineAsm(Ty: TypeRef, AsmString: *c_char,\n                                     Constraints: *c_char, SideEffects: Bool,\n-                                    AlignStack: Bool) -> ValueRef;\n+                                    AlignStack: Bool, Dialect: AsmDialect)\n+                                 -> ValueRef;\n     }\n }\n "}, {"sha": "ad86b6c9245390af909a92eb084eb5b31fa7bd1d", "filename": "src/librustc/middle/trans/build.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fc78b93c413e53a43ec568e3ec1d74d35924093b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc78b93c413e53a43ec568e3ec1d74d35924093b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs?ref=fc78b93c413e53a43ec568e3ec1d74d35924093b", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use lib::llvm::llvm;\n-use lib::llvm::{CallConv, TypeKind, AtomicBinOp, AtomicOrdering};\n+use lib::llvm::{CallConv, TypeKind, AtomicBinOp, AtomicOrdering, AsmDialect};\n use lib::llvm::{Opcode, IntPredicate, RealPredicate, True, False};\n use lib::llvm::{ValueRef, TypeRef, BasicBlockRef, BuilderRef, ModuleRef};\n use lib;\n@@ -872,12 +872,13 @@ pub fn add_comment(bcx: block, text: &str) {\n     }\n }\n \n-pub fn InlineAsmCall(cx: block, asm: *c_char, cons: *c_char) -> ValueRef {\n+pub fn InlineAsmCall(cx: block, asm: *c_char, cons: *c_char,\n+                     dia: AsmDialect) -> ValueRef {\n     unsafe {\n         count_insn(cx, \"inlineasm\");\n \n         let llfty = T_fn(~[], T_void());\n-        let v = llvm::LLVMInlineAsm(llfty, asm, cons, False, False);\n+        let v = llvm::LLVMInlineAsm(llfty, asm, cons, False, False, dia);\n \n         Call(cx, v, ~[])\n     }"}, {"sha": "737dd8c758a84704cba479e711bad535433dc44f", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc78b93c413e53a43ec568e3ec1d74d35924093b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc78b93c413e53a43ec568e3ec1d74d35924093b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=fc78b93c413e53a43ec568e3ec1d74d35924093b", "patch": "@@ -694,7 +694,7 @@ fn trans_rvalue_dps_unadjusted(bcx: block, expr: @ast::expr,\n         ast::expr_inline_asm(asm, cons) => {\n             do str::as_c_str(*asm) |a| {\n                 do str::as_c_str(*cons) |c| {\n-                    InlineAsmCall(bcx, a, c);\n+                    InlineAsmCall(bcx, a, c, lib::llvm::AD_ATT);\n                 }\n             }\n             return bcx;"}, {"sha": "7686dcd4ff4dca1c1d97e520a2333483db735270", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fc78b93c413e53a43ec568e3ec1d74d35924093b/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/fc78b93c413e53a43ec568e3ec1d74d35924093b/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=fc78b93c413e53a43ec568e3ec1d74d35924093b", "patch": "@@ -545,9 +545,9 @@ extern \"C\" LLVMValueRef LLVMInlineAsm(LLVMTypeRef Ty,\n                                       char *AsmString,\n                                       char *Constraints,\n                                       LLVMBool HasSideEffects,\n-                                      LLVMBool IsAlignStack) {\n+                                      LLVMBool IsAlignStack,\n+                                      InlineAsm::AsmDialect Dialect) {\n     return wrap(InlineAsm::get(unwrap<FunctionType>(Ty), AsmString,\n                                Constraints, HasSideEffects,\n-                               IsAlignStack));\n-//                               IsAlignStack, InlineAsm::AD_Intel));\n+                               IsAlignStack, Dialect));\n }"}]}