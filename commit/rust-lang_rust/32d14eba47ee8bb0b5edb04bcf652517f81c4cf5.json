{"sha": "32d14eba47ee8bb0b5edb04bcf652517f81c4cf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyZDE0ZWJhNDdlZThiYjBiNWVkYjA0YmNmNjUyNTE3ZjgxYzRjZjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-05T01:13:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-05T01:13:19Z"}, "message": "Auto merge of #75130 - lcnr:array_chunks, r=ecstatic-morse\n\nforbid `#[track_caller]` on main\n\nfixes #75125\n\ncc @anp", "tree": {"sha": "217368d27b6df3e2faf7eb0754f4ca6d56dbad86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/217368d27b6df3e2faf7eb0754f4ca6d56dbad86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5", "html_url": "https://github.com/rust-lang/rust/commit/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07f1fdecfed85fe4be14b293eb913560a6cd60ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/07f1fdecfed85fe4be14b293eb913560a6cd60ba", "html_url": "https://github.com/rust-lang/rust/commit/07f1fdecfed85fe4be14b293eb913560a6cd60ba"}, {"sha": "9127e27cec22cb130d0a96094196995d72b19030", "url": "https://api.github.com/repos/rust-lang/rust/commits/9127e27cec22cb130d0a96094196995d72b19030", "html_url": "https://github.com/rust-lang/rust/commit/9127e27cec22cb130d0a96094196995d72b19030"}], "stats": {"total": 81, "additions": 75, "deletions": 6}, "files": [{"sha": "e203d51f612aa5a8d93ce2f2d0a2eb7431088202", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 37, "deletions": 3, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=32d14eba47ee8bb0b5edb04bcf652517f81c4cf5", "patch": "@@ -100,7 +100,7 @@ use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_middle::util;\n use rustc_session::config::EntryFnType;\n-use rustc_span::{Span, DUMMY_SP};\n+use rustc_span::{symbol::sym, Span, DUMMY_SP};\n use rustc_target::spec::abi::Abi;\n use rustc_trait_selection::traits::error_reporting::InferCtxtExt as _;\n use rustc_trait_selection::traits::{\n@@ -194,6 +194,23 @@ fn check_main_fn_ty(tcx: TyCtxt<'_>, main_def_id: LocalDefId) {\n                         .emit();\n                         error = true;\n                     }\n+\n+                    for attr in it.attrs {\n+                        if attr.check_name(sym::track_caller) {\n+                            tcx.sess\n+                                .struct_span_err(\n+                                    attr.span,\n+                                    \"`main` function is not allowed to be `#[track_caller]`\",\n+                                )\n+                                .span_label(\n+                                    main_span,\n+                                    \"`main` function is not allowed to be `#[track_caller]`\",\n+                                )\n+                                .emit();\n+                            error = true;\n+                        }\n+                    }\n+\n                     if error {\n                         return;\n                     }\n@@ -268,12 +285,29 @@ fn check_start_fn_ty(tcx: TyCtxt<'_>, start_def_id: LocalDefId) {\n                             tcx.sess,\n                             span,\n                             E0752,\n-                            \"start is not allowed to be `async`\"\n+                            \"`start` is not allowed to be `async`\"\n                         )\n-                        .span_label(span, \"start is not allowed to be `async`\")\n+                        .span_label(span, \"`start` is not allowed to be `async`\")\n                         .emit();\n                         error = true;\n                     }\n+\n+                    for attr in it.attrs {\n+                        if attr.check_name(sym::track_caller) {\n+                            tcx.sess\n+                                .struct_span_err(\n+                                    attr.span,\n+                                    \"`start` is not allowed to be `#[track_caller]`\",\n+                                )\n+                                .span_label(\n+                                    start_span,\n+                                    \"`start` is not allowed to be `#[track_caller]`\",\n+                                )\n+                                .emit();\n+                            error = true;\n+                        }\n+                    }\n+\n                     if error {\n                         return;\n                     }"}, {"sha": "2ced88a16cc45976ed2867dec511e25e219b0f3e", "filename": "src/test/ui/async-await/issue-68523-start.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5/src%2Ftest%2Fui%2Fasync-await%2Fissue-68523-start.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5/src%2Ftest%2Fui%2Fasync-await%2Fissue-68523-start.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-68523-start.rs?ref=32d14eba47ee8bb0b5edb04bcf652517f81c4cf5", "patch": "@@ -4,6 +4,6 @@\n \n #[start]\n pub async fn start(_: isize, _: *const *const u8) -> isize {\n-//~^ ERROR start is not allowed to be `async`\n+//~^ ERROR `start` is not allowed to be `async`\n     0\n }"}, {"sha": "3a0a3b5dece10916742a8a1d64fb339db416cc43", "filename": "src/test/ui/async-await/issue-68523-start.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5/src%2Ftest%2Fui%2Fasync-await%2Fissue-68523-start.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5/src%2Ftest%2Fui%2Fasync-await%2Fissue-68523-start.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-68523-start.stderr?ref=32d14eba47ee8bb0b5edb04bcf652517f81c4cf5", "patch": "@@ -1,8 +1,8 @@\n-error[E0752]: start is not allowed to be `async`\n+error[E0752]: `start` is not allowed to be `async`\n   --> $DIR/issue-68523-start.rs:6:1\n    |\n LL | pub async fn start(_: isize, _: *const *const u8) -> isize {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ start is not allowed to be `async`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `start` is not allowed to be `async`\n \n error: aborting due to previous error\n "}, {"sha": "b2ea31bb5178b48493c49aaa089644bfb2fd95d0", "filename": "src/test/ui/rfc-2091-track-caller/error-with-main.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-main.rs?ref=32d14eba47ee8bb0b5edb04bcf652517f81c4cf5", "patch": "@@ -0,0 +1,4 @@\n+#[track_caller] //~ ERROR `main` function is not allowed to be\n+fn main() {\n+    panic!(\"{}: oh no\", std::panic::Location::caller());\n+}"}, {"sha": "f05f88e7d71eace9825dc8ea4ebafad59431d44d", "filename": "src/test/ui/rfc-2091-track-caller/error-with-main.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-main.stderr?ref=32d14eba47ee8bb0b5edb04bcf652517f81c4cf5", "patch": "@@ -0,0 +1,12 @@\n+error: `main` function is not allowed to be `#[track_caller]`\n+  --> $DIR/error-with-main.rs:1:1\n+   |\n+LL |   #[track_caller]\n+   |   ^^^^^^^^^^^^^^^\n+LL | / fn main() {\n+LL | |     panic!(\"{}: oh no\", std::panic::Location::caller());\n+LL | | }\n+   | |_- `main` function is not allowed to be `#[track_caller]`\n+\n+error: aborting due to previous error\n+"}, {"sha": "0cab47170631bab4b66d0058d2721fb95214b137", "filename": "src/test/ui/rfc-2091-track-caller/error-with-start.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-start.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-start.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-start.rs?ref=32d14eba47ee8bb0b5edb04bcf652517f81c4cf5", "patch": "@@ -0,0 +1,7 @@\n+#![feature(start)]\n+\n+#[start]\n+#[track_caller] //~ ERROR `start` is not allowed to be `#[track_caller]`\n+fn start(_argc: isize, _argv: *const *const u8) -> isize {\n+    panic!(\"{}: oh no\", std::panic::Location::caller());\n+}"}, {"sha": "1a1f3e0449136d118ab25bc1a3832c5a8104d902", "filename": "src/test/ui/rfc-2091-track-caller/error-with-start.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-start.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32d14eba47ee8bb0b5edb04bcf652517f81c4cf5/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-start.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-start.stderr?ref=32d14eba47ee8bb0b5edb04bcf652517f81c4cf5", "patch": "@@ -0,0 +1,12 @@\n+error: `start` is not allowed to be `#[track_caller]`\n+  --> $DIR/error-with-start.rs:4:1\n+   |\n+LL |   #[track_caller]\n+   |   ^^^^^^^^^^^^^^^\n+LL | / fn start(_argc: isize, _argv: *const *const u8) -> isize {\n+LL | |     panic!(\"{}: oh no\", std::panic::Location::caller());\n+LL | | }\n+   | |_- `start` is not allowed to be `#[track_caller]`\n+\n+error: aborting due to previous error\n+"}]}