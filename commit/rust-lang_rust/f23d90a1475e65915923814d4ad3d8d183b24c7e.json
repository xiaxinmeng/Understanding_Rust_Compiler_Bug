{"sha": "f23d90a1475e65915923814d4ad3d8d183b24c7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyM2Q5MGExNDc1ZTY1OTE1OTIzODE0ZDRhZDNkOGQxODNiMjRjN2U=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2018-06-02T23:49:34Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2018-07-02T05:27:29Z"}, "message": "add FIXMEs pleading for post-@ edit of commentary on mem_categorization\n\n(The present author fears not being knowledgeable enough to rewrite the\ncomments unilaterally; merely calling it out is a lazy half-measure, but\nat least doesn't actively make things worse the way an ill-informed\nrewrite would.)", "tree": {"sha": "9aa0bdc564692ceedc739e3e344b0cd99d14c44a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9aa0bdc564692ceedc739e3e344b0cd99d14c44a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f23d90a1475e65915923814d4ad3d8d183b24c7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f23d90a1475e65915923814d4ad3d8d183b24c7e", "html_url": "https://github.com/rust-lang/rust/commit/f23d90a1475e65915923814d4ad3d8d183b24c7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f23d90a1475e65915923814d4ad3d8d183b24c7e/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "735d1bd5e685a53df8d6b58ed5fd8637896465ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/735d1bd5e685a53df8d6b58ed5fd8637896465ba", "html_url": "https://github.com/rust-lang/rust/commit/735d1bd5e685a53df8d6b58ed5fd8637896465ba"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "c3a2d3ce0c27f6d48df22fed89cb2034f187bb47", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f23d90a1475e65915923814d4ad3d8d183b24c7e/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23d90a1475e65915923814d4ad3d8d183b24c7e/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=f23d90a1475e65915923814d4ad3d8d183b24c7e", "patch": "@@ -179,14 +179,18 @@ pub enum Note {\n // and how it is located, as well as the mutability of the memory in\n // which the value is stored.\n //\n-// *WARNING* The field `cmt.ty` is NOT necessarily the same as the\n-// result of `node_id_to_type(cmt.id)`. This is because the `id` is\n-// always the `id` of the node producing the type; in an expression\n-// like `*x`, the type of this deref node is the deref'd type (`T`),\n-// but in a pattern like `@x`, the `@x` pattern is again a\n-// dereference, but its type is the type *before* the dereference\n-// (`@T`). So use `cmt.ty` to find the type of the value in a consistent\n-// fashion. For more details, see the method `cat_pattern`\n+// *WARNING* The field `cmt.type` is NOT necessarily the same as the\n+// result of `node_id_to_type(cmt.id)`.\n+//\n+// (FIXME: rewrite the following comment given that `@x` managed\n+// pointers have been obsolete for quite some time.)\n+//\n+// This is because the `id` is always the `id` of the node producing the\n+// type; in an expression like `*x`, the type of this deref node is the\n+// deref'd type (`T`), but in a pattern like `@x`, the `@x` pattern is\n+// again a dereference, but its type is the type *before* the\n+// dereference (`@T`). So use `cmt.ty` to find the type of the value in\n+// a consistent fashion. For more details, see the method `cat_pattern`\n #[derive(Clone, Debug, PartialEq)]\n pub struct cmt_<'tcx> {\n     pub hir_id: hir::HirId,        // HIR id of expr/pat producing this value\n@@ -1192,6 +1196,8 @@ impl<'a, 'gcx, 'tcx> MemCategorizationContext<'a, 'gcx, 'tcx> {\n         // value, and I consider them to produce the value that was\n         // matched. So if you have something like:\n         //\n+        // (FIXME: `@@3` is not legal code anymore!)\n+        //\n         //     let x = @@3;\n         //     match x {\n         //       @@y { ... }"}]}