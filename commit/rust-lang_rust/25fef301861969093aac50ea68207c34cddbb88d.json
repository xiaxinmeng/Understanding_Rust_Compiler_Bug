{"sha": "25fef301861969093aac50ea68207c34cddbb88d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ZmVmMzAxODYxOTY5MDkzYWFjNTBlYTY4MjA3YzM0Y2RkYmI4OGQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-07-14T10:21:45Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-07-14T10:21:45Z"}, "message": "More debugging output", "tree": {"sha": "748f72d091f4a7f836a5e8eb3e527053dce2f4cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/748f72d091f4a7f836a5e8eb3e527053dce2f4cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25fef301861969093aac50ea68207c34cddbb88d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25fef301861969093aac50ea68207c34cddbb88d", "html_url": "https://github.com/rust-lang/rust/commit/25fef301861969093aac50ea68207c34cddbb88d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25fef301861969093aac50ea68207c34cddbb88d/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c592a6bb11a3cc2e1537c5771807347c5b814a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c592a6bb11a3cc2e1537c5771807347c5b814a3", "html_url": "https://github.com/rust-lang/rust/commit/0c592a6bb11a3cc2e1537c5771807347c5b814a3"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "b07fddb0ef810fd41a8bf81d71ca38bafecaee23", "filename": "src/base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/25fef301861969093aac50ea68207c34cddbb88d/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25fef301861969093aac50ea68207c34cddbb88d/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=25fef301861969093aac50ea68207c34cddbb88d", "patch": "@@ -29,15 +29,15 @@ pub fn trans_mono_item<'a, 'tcx: 'a>(cx: &mut CodegenCx<'a, 'tcx, CurrentBackend\n \n                 let comments = ::base::trans_fn(cx, &mut f, inst);\n \n+                let mut writer = ::pretty_clif::CommentWriter(comments);\n                 let mut cton = String::new();\n-                ::cranelift::codegen::write_function(&mut cton, &f, None).unwrap();\n+                ::cranelift::codegen::write::decorate_function(&mut writer, &mut cton, &f, None).unwrap();\n                 tcx.sess.warn(&cton);\n \n                 let flags = settings::Flags::new(settings::builder());\n                 match ::cranelift::codegen::verify_function(&f, &flags) {\n                     Ok(_) => {}\n                     Err(err) => {\n-                        let writer = ::pretty_clif::CommentWriter(comments);\n                         let pretty_error = ::cranelift::codegen::print_errors::pretty_verifier_error(&f, None, Some(Box::new(writer)), &err);\n                         tcx.sess.fatal(&format!(\"cretonne verify error:\\n{}\", pretty_error));\n                     }"}, {"sha": "feb3857b86cd37faa388abdda95d1fa96480a83b", "filename": "src/common.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/25fef301861969093aac50ea68207c34cddbb88d/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25fef301861969093aac50ea68207c34cddbb88d/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=25fef301861969093aac50ea68207c34cddbb88d", "patch": "@@ -1,6 +1,7 @@\n extern crate rustc_target;\n \n use std::borrow::Cow;\n+use std::fmt;\n \n use syntax::ast::{IntTy, UintTy};\n use self::rustc_target::spec::{HasTargetSpec, Target};\n@@ -187,8 +188,9 @@ impl<'a, 'tcx: 'a> CPlace<'tcx> {\n     pub fn write_cvalue(self, fx: &mut FunctionCx<'a, 'tcx>, from: CValue<'tcx>) {\n         assert_eq!(\n             self.layout().ty, from.layout().ty,\n-            \"Can't write value of incompatible type to place {:?} {:?}\",\n-            self.layout().ty.sty, from.layout().ty.sty\n+            \"Can't write value of incompatible type to place {:?} {:?}\\n\\n{:#?}\",\n+            self.layout().ty.sty, from.layout().ty.sty,\n+            fx,\n         );\n \n         match self {\n@@ -298,6 +300,24 @@ pub struct FunctionCx<'a, 'tcx: 'a> {\n     pub comments: HashMap<Inst, String>,\n }\n \n+impl<'a, 'tcx: 'a> fmt::Debug for FunctionCx<'a, 'tcx> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        writeln!(f, \"{:?}\", self.def_id_fn_id_map)?;\n+        writeln!(f, \"{:?}\", self.param_substs)?;\n+        writeln!(f, \"{:?}\", self.local_map)?;\n+\n+        let mut clif = String::new();\n+        let mut writer = ::pretty_clif::CommentWriter(self.comments.clone());\n+        ::cranelift::codegen::write::decorate_function(\n+            &mut writer,\n+            &mut clif,\n+            &self.bcx.func,\n+            None,\n+        ).unwrap();\n+        writeln!(f, \"\\n{}\", clif)\n+    }\n+}\n+\n impl<'a, 'tcx: 'a> LayoutOf for &'a FunctionCx<'a, 'tcx> {\n     type Ty = Ty<'tcx>;\n     type TyLayout = TyLayout<'tcx>;"}, {"sha": "d1194660080bd0eaec27a9a24de88716f532a794", "filename": "src/pretty_clif.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/25fef301861969093aac50ea68207c34cddbb88d/src%2Fpretty_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25fef301861969093aac50ea68207c34cddbb88d/src%2Fpretty_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpretty_clif.rs?ref=25fef301861969093aac50ea68207c34cddbb88d", "patch": "@@ -3,8 +3,7 @@ use std::fmt;\n \n use cranelift::codegen::{\n     ir::{Function, Inst},\n-    FuncWriter,\n-    PlainWriter,\n+    write::{FuncWriter, PlainWriter},\n };\n use cranelift::prelude::*;\n \n@@ -19,7 +18,9 @@ impl FuncWriter for CommentWriter {\n         inst: Inst,\n         indent: usize,\n     ) -> fmt::Result {\n-\n+        if let Some(comment) = self.0.get(&inst) {\n+            writeln!(w, \"; {}\", comment.replace('\\n', \"\\n; \"))?;\n+        }\n         PlainWriter.write_instruction(w, func, isa, inst, indent)\n     }\n "}]}