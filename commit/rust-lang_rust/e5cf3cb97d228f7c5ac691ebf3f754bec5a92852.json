{"sha": "e5cf3cb97d228f7c5ac691ebf3f754bec5a92852", "node_id": "C_kwDOAAsO6NoAKGU1Y2YzY2I5N2QyMjhmN2M1YWM2OTFlYmYzZjc1NGJlYzVhOTI4NTI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-05-23T05:43:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-23T05:43:49Z"}, "message": "Rollup merge of #97087 - Nilstrieb:clarify-slice-iteration-order, r=dtolnay\n\nClarify slice and Vec iteration order\n\nWhile already being inferable from the doc examples, it wasn't fully specified. This is the only logical way to do a slice iterator, so I think this should be uncontroversial. It also improves the `Vec::into_iter` example to better show the order and that the iterator returns owned values.", "tree": {"sha": "8c634cf1808bd1d68298fa82e72eaca89445a69e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c634cf1808bd1d68298fa82e72eaca89445a69e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5cf3cb97d228f7c5ac691ebf3f754bec5a92852", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiix8VCRBK7hj4Ov3rIwAAH4UIAIAWOIs5hqoav7XtmfPnpzQS\nz/hSDBZH+V1xa3exca7MvhhCaPIQcLgRzKfgsj808MO8pc0dElfg7BoiUarAXVmD\np3KE76UqQEVLhHpEC5ewI9yqgBf8NGJvo7lOp/pOVBW0md1WpjrC05IE6xf/+zQP\nzIA/1qdkO48Lb9MHpcAyeXvruiEGP+1FVfm5deRrZGYSrXp3hE7GHsL0QkSOTxZR\nlB+M4LaagrxUZagA6Jw0MI4q47UytO6IZIf0Ghr/8domtnWMnmev1SLQBhKOBE6s\nRC/PGaOdyTQcyCjX0PXMTrinKB/ORd7ljMJ7j2cYUQLCuI5UyP2h4eOlrAwAJfE=\n=PI/B\n-----END PGP SIGNATURE-----\n", "payload": "tree 8c634cf1808bd1d68298fa82e72eaca89445a69e\nparent c186f7c07912064c352f12d8b0aa9d5e5975450e\nparent 4a2214885d469b27624df33145863037ca148f56\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1653284629 +0200\ncommitter GitHub <noreply@github.com> 1653284629 +0200\n\nRollup merge of #97087 - Nilstrieb:clarify-slice-iteration-order, r=dtolnay\n\nClarify slice and Vec iteration order\n\nWhile already being inferable from the doc examples, it wasn't fully specified. This is the only logical way to do a slice iterator, so I think this should be uncontroversial. It also improves the `Vec::into_iter` example to better show the order and that the iterator returns owned values.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5cf3cb97d228f7c5ac691ebf3f754bec5a92852", "html_url": "https://github.com/rust-lang/rust/commit/e5cf3cb97d228f7c5ac691ebf3f754bec5a92852", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5cf3cb97d228f7c5ac691ebf3f754bec5a92852/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c186f7c07912064c352f12d8b0aa9d5e5975450e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c186f7c07912064c352f12d8b0aa9d5e5975450e", "html_url": "https://github.com/rust-lang/rust/commit/c186f7c07912064c352f12d8b0aa9d5e5975450e"}, {"sha": "4a2214885d469b27624df33145863037ca148f56", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a2214885d469b27624df33145863037ca148f56", "html_url": "https://github.com/rust-lang/rust/commit/4a2214885d469b27624df33145863037ca148f56"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "c157aba83c2832c46d1dd51c570001db11c40edd", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e5cf3cb97d228f7c5ac691ebf3f754bec5a92852/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5cf3cb97d228f7c5ac691ebf3f754bec5a92852/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=e5cf3cb97d228f7c5ac691ebf3f754bec5a92852", "patch": "@@ -2626,10 +2626,13 @@ impl<T, A: Allocator> IntoIterator for Vec<T, A> {\n     ///\n     /// ```\n     /// let v = vec![\"a\".to_string(), \"b\".to_string()];\n-    /// for s in v.into_iter() {\n-    ///     // s has type String, not &String\n-    ///     println!(\"{s}\");\n-    /// }\n+    /// let mut v_iter = v.into_iter();\n+    ///\n+    /// let first_element: Option<String> = v_iter.next();\n+    ///\n+    /// assert_eq!(first_element, Some(\"a\".to_string()));\n+    /// assert_eq!(v_iter.next(), Some(\"b\".to_string()));\n+    /// assert_eq!(v_iter.next(), None);\n     /// ```\n     #[inline]\n     fn into_iter(self) -> IntoIter<T, A> {"}, {"sha": "f5a90cb3d7ac9fcb5e27daf0ea54a455cc206000", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5cf3cb97d228f7c5ac691ebf3f754bec5a92852/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5cf3cb97d228f7c5ac691ebf3f754bec5a92852/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=e5cf3cb97d228f7c5ac691ebf3f754bec5a92852", "patch": "@@ -716,6 +716,8 @@ impl<T> [T] {\n \n     /// Returns an iterator over the slice.\n     ///\n+    /// The iterator yields all items from start to end.\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -735,6 +737,8 @@ impl<T> [T] {\n \n     /// Returns an iterator that allows modifying each value.\n     ///\n+    /// The iterator yields all items from start to end.\n+    ///\n     /// # Examples\n     ///\n     /// ```"}]}