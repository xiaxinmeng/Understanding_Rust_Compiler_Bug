{"sha": "bfcf53f7ad6de8cda2ee4367b2de001fa97d8b0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmY2Y1M2Y3YWQ2ZGU4Y2RhMmVlNDM2N2IyZGUwMDFmYTk3ZDhiMGI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-09T11:00:26Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-09T12:29:20Z"}, "message": "Rollup merge of #23210 - richo:rust-o, r=alexcrichton\n\n rustc will ICE if you specify an outfile path that is bare without a\ndirectory. As a workaround, before this -o ./foo will work\n\nIt wasn't clear to me where I could put a test that actually invokes rustc from a shell, although I think I can add doctests to that machinery in librustc_driver that will arrange for this to be called with arguments that would trigger the ICE", "tree": {"sha": "4b364a065e84758b926add4c17754827ef039402", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b364a065e84758b926add4c17754827ef039402"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfcf53f7ad6de8cda2ee4367b2de001fa97d8b0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfcf53f7ad6de8cda2ee4367b2de001fa97d8b0b", "html_url": "https://github.com/rust-lang/rust/commit/bfcf53f7ad6de8cda2ee4367b2de001fa97d8b0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfcf53f7ad6de8cda2ee4367b2de001fa97d8b0b/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43984618eb5c56d69ef1659fd506e26a0fd2d9bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/43984618eb5c56d69ef1659fd506e26a0fd2d9bb", "html_url": "https://github.com/rust-lang/rust/commit/43984618eb5c56d69ef1659fd506e26a0fd2d9bb"}, {"sha": "103636114d67417048758b4a4d236383af2d44dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/103636114d67417048758b4a4d236383af2d44dd", "html_url": "https://github.com/rust-lang/rust/commit/103636114d67417048758b4a4d236383af2d44dd"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "dc27a30110950454f813cf5ac82003408a379e37", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bfcf53f7ad6de8cda2ee4367b2de001fa97d8b0b/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfcf53f7ad6de8cda2ee4367b2de001fa97d8b0b/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=bfcf53f7ad6de8cda2ee4367b2de001fa97d8b0b", "patch": "@@ -927,7 +927,7 @@ pub fn build_output_filenames(input: &Input,\n             // We want to toss everything after the final '.'\n             let dirpath = match *odir {\n                 Some(ref d) => d.clone(),\n-                None => PathBuf::new(\".\")\n+                None => PathBuf::new(\"\")\n             };\n \n             // If a crate name is present, we use it as the link name\n@@ -954,8 +954,11 @@ pub fn build_output_filenames(input: &Input,\n             if *odir != None {\n                 sess.warn(\"ignoring --out-dir flag due to -o flag.\");\n             }\n+\n+            let cur_dir = Path::new(\"\");\n+\n             OutputFilenames {\n-                out_directory: out_file.parent().unwrap().to_path_buf(),\n+                out_directory: out_file.parent().unwrap_or(cur_dir).to_path_buf(),\n                 out_filestem: out_file.file_stem().unwrap()\n                                       .to_str().unwrap().to_string(),\n                 single_output_file: ofile,"}, {"sha": "e6cd3851e03c64fde1e6ea3f36084f4635128a61", "filename": "src/test/run-make/bare-outfile/Makefile", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bfcf53f7ad6de8cda2ee4367b2de001fa97d8b0b/src%2Ftest%2Frun-make%2Fbare-outfile%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/bfcf53f7ad6de8cda2ee4367b2de001fa97d8b0b/src%2Ftest%2Frun-make%2Fbare-outfile%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fbare-outfile%2FMakefile?ref=bfcf53f7ad6de8cda2ee4367b2de001fa97d8b0b", "patch": "@@ -0,0 +1,4 @@\n+-include ../tools.mk\n+\n+all:\n+\trustc -o foo foo.rs"}, {"sha": "63e747901ae87b4e83c69e81fe59e18ee4de9498", "filename": "src/test/run-make/bare-outfile/foo.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bfcf53f7ad6de8cda2ee4367b2de001fa97d8b0b/src%2Ftest%2Frun-make%2Fbare-outfile%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfcf53f7ad6de8cda2ee4367b2de001fa97d8b0b/src%2Ftest%2Frun-make%2Fbare-outfile%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fbare-outfile%2Ffoo.rs?ref=bfcf53f7ad6de8cda2ee4367b2de001fa97d8b0b", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+}"}]}