{"sha": "a68864b68859e5848865bd392ce6d892b16f5cdd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ODg2NGI2ODg1OWU1ODQ4ODY1YmQzOTJjZTZkODkyYjE2ZjVjZGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-06T08:08:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-06T08:08:05Z"}, "message": "Auto merge of #79734 - ethanboxx:inferred_const_note, r=varkor\n\nConst parameters can not be inferred with `_` help note\n\nThis should close: #79557\n\n# Example output\n```\nerror[E0747]: type provided when a constant was expected\n --> inferred_const_note.rs:6:19\n  |\n6 |     let a = foo::<_, 2>([0, 1, 2]);\n  |                   ^\n  |\n  = help: Const parameters can not be inferred with `_`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0747`.\n```\n\nr? `@lcnr`", "tree": {"sha": "f1c402a267a47395f96161250da02124d1ebf4bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1c402a267a47395f96161250da02124d1ebf4bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a68864b68859e5848865bd392ce6d892b16f5cdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a68864b68859e5848865bd392ce6d892b16f5cdd", "html_url": "https://github.com/rust-lang/rust/commit/a68864b68859e5848865bd392ce6d892b16f5cdd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a68864b68859e5848865bd392ce6d892b16f5cdd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5957f208a5def92a5ee85e71b01f75904c1ba4ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/5957f208a5def92a5ee85e71b01f75904c1ba4ff", "html_url": "https://github.com/rust-lang/rust/commit/5957f208a5def92a5ee85e71b01f75904c1ba4ff"}, {"sha": "6845e22bbabce5631c388c52eb367168ce9b14ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/6845e22bbabce5631c388c52eb367168ce9b14ce", "html_url": "https://github.com/rust-lang/rust/commit/6845e22bbabce5631c388c52eb367168ce9b14ce"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "b7e77f389f8575c9500156ed57eebeef00e5b64c", "filename": "compiler/rustc_typeck/src/astconv/generics.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a68864b68859e5848865bd392ce6d892b16f5cdd/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a68864b68859e5848865bd392ce6d892b16f5cdd/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs?ref=a68864b68859e5848865bd392ce6d892b16f5cdd", "patch": "@@ -44,6 +44,13 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             // the match is non-exhaustive.\n             _ => bug!(\"invalid generic parameter kind {}\", kind),\n         };\n+\n+        if let ParamKindOrd::Const { .. } = kind_ord {\n+            if let GenericArg::Type(hir::Ty { kind: hir::TyKind::Infer, .. }) = arg {\n+                err.help(\"const arguments cannot yet be inferred with `_`\");\n+            }\n+        }\n+\n         let arg_ord = match arg {\n             GenericArg::Lifetime(_) => ParamKindOrd::Lifetime,\n             GenericArg::Type(_) => ParamKindOrd::Type,"}, {"sha": "dce2e27c71a139536a0b666c407f9aa9eb2244d7", "filename": "src/test/ui/const-generics/issues/issue-62878.full.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a68864b68859e5848865bd392ce6d892b16f5cdd/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62878.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a68864b68859e5848865bd392ce6d892b16f5cdd/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62878.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62878.full.stderr?ref=a68864b68859e5848865bd392ce6d892b16f5cdd", "patch": "@@ -9,6 +9,8 @@ error[E0747]: type provided when a constant was expected\n    |\n LL |     foo::<_, {[1]}>();\n    |           ^\n+   |\n+   = help: const arguments cannot yet be inferred with `_`\n \n error[E0308]: mismatched types\n   --> $DIR/issue-62878.rs:11:15"}, {"sha": "dcd069ce3b0f42bc890bd5f9200fc1d5f12c9c91", "filename": "src/test/ui/const-generics/min_const_generics/inferred_const.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a68864b68859e5848865bd392ce6d892b16f5cdd/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finferred_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a68864b68859e5848865bd392ce6d892b16f5cdd/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finferred_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finferred_const.rs?ref=a68864b68859e5848865bd392ce6d892b16f5cdd", "patch": "@@ -0,0 +1,8 @@\n+#![feature(min_const_generics)]\n+fn foo<const N: usize, const K: usize>(data: [u32; N]) -> [u32; K] {\n+    [0; K]\n+}\n+fn main() {\n+    let a = foo::<_, 2>([0, 1, 2]);\n+               //~^ ERROR type provided when a constant was expected\n+}"}, {"sha": "e17105b2aa99930c703147412bcf50110ce3cb86", "filename": "src/test/ui/const-generics/min_const_generics/inferred_const.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a68864b68859e5848865bd392ce6d892b16f5cdd/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finferred_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a68864b68859e5848865bd392ce6d892b16f5cdd/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finferred_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finferred_const.stderr?ref=a68864b68859e5848865bd392ce6d892b16f5cdd", "patch": "@@ -0,0 +1,11 @@\n+error[E0747]: type provided when a constant was expected\n+  --> $DIR/inferred_const.rs:6:19\n+   |\n+LL |     let a = foo::<_, 2>([0, 1, 2]);\n+   |                   ^\n+   |\n+   = help: const arguments cannot yet be inferred with `_`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0747`."}]}