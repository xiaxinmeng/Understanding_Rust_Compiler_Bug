{"sha": "6c5bf2778fa09fd3a79dd2fa76779c07ee182391", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNWJmMjc3OGZhMDlmZDNhNzlkZDJmYTc2Nzc5YzA3ZWUxODIzOTE=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-12-23T14:00:51Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-01-23T01:18:11Z"}, "message": "clippy dev crater: use and parse clippy messages as json message, to get the lint name of a warning", "tree": {"sha": "20c59d766c2f8ce0c937d55c8eb767459c50bc23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20c59d766c2f8ce0c937d55c8eb767459c50bc23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c5bf2778fa09fd3a79dd2fa76779c07ee182391", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c5bf2778fa09fd3a79dd2fa76779c07ee182391", "html_url": "https://github.com/rust-lang/rust/commit/6c5bf2778fa09fd3a79dd2fa76779c07ee182391", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c5bf2778fa09fd3a79dd2fa76779c07ee182391/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62337f284281637a73a8d4770315850fbf4067aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/62337f284281637a73a8d4770315850fbf4067aa", "html_url": "https://github.com/rust-lang/rust/commit/62337f284281637a73a8d4770315850fbf4067aa"}], "stats": {"total": 6571, "additions": 3306, "deletions": 3265}, "files": [{"sha": "d666314514206da6776b4a20d244fc1266393ade", "filename": "clippy_dev/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c5bf2778fa09fd3a79dd2fa76779c07ee182391/clippy_dev%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6c5bf2778fa09fd3a79dd2fa76779c07ee182391/clippy_dev%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2FCargo.toml?ref=6c5bf2778fa09fd3a79dd2fa76779c07ee182391", "patch": "@@ -12,6 +12,7 @@ itertools = \"0.9\"\n opener = \"0.4\"\n regex = \"1\"\n serde = {version = \"1.0\", features = [\"derive\"]}\n+serde_json = \"1.0\"\n shell-escape = \"0.1\"\n tar = \"0.4.30\"\n toml = \"0.5\""}, {"sha": "db0dd3641f10e00e9278aea55509a3c04390c3a7", "filename": "clippy_dev/src/crater.rs", "status": "modified", "additions": 56, "deletions": 20, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/6c5bf2778fa09fd3a79dd2fa76779c07ee182391/clippy_dev%2Fsrc%2Fcrater.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c5bf2778fa09fd3a79dd2fa76779c07ee182391/clippy_dev%2Fsrc%2Fcrater.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fcrater.rs?ref=6c5bf2778fa09fd3a79dd2fa76779c07ee182391", "patch": "@@ -10,9 +10,10 @@ use crate::clippy_project_root;\n \n use std::collections::HashMap;\n use std::process::Command;\n-use std::{fs::write, path::PathBuf};\n+use std::{fmt, fs::write, path::PathBuf};\n \n use serde::{Deserialize, Serialize};\n+use serde_json::Value;\n \n // use this to store the crates when interacting with the crates.toml file\n #[derive(Debug, Serialize, Deserialize)]\n@@ -43,6 +44,27 @@ struct Crate {\n     path: PathBuf,\n }\n \n+#[derive(Debug)]\n+struct ClippyWarning {\n+    crate_name: String,\n+    crate_version: String,\n+    file: String,\n+    line: String,\n+    column: String,\n+    linttype: String,\n+    message: String,\n+}\n+\n+impl std::fmt::Display for ClippyWarning {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        writeln!(\n+            f,\n+            r#\"{}/{}/{}:{}:{} {} \"{}\"\"#,\n+            &self.crate_name, &self.crate_version, &self.file, &self.line, &self.column, &self.linttype, &self.message\n+        )\n+    }\n+}\n+\n impl CrateSource {\n     fn download_and_extract(&self) -> Crate {\n         let extract_dir = PathBuf::from(\"target/crater/crates\");\n@@ -96,7 +118,7 @@ impl Crate {\n             // src/cargo/ops/cargo_compile.rs:127:35: warning: usage of `FromIterator::from_iter`\n             .args(&[\n                 \"--\",\n-                \"--message-format=short\",\n+                \"--message-format=json\",\n                 \"--\",\n                 \"--cap-lints=warn\",\n                 \"-Wclippy::pedantic\",\n@@ -105,27 +127,17 @@ impl Crate {\n             .current_dir(&self.path)\n             .output()\n             .unwrap();\n-        let stderr = String::from_utf8_lossy(&all_output.stderr);\n-        let output_lines = stderr.lines();\n-        let mut output: Vec<String> = output_lines\n+        let stdout = String::from_utf8_lossy(&all_output.stdout);\n+        let output_lines = stdout.lines();\n+        //dbg!(&output_lines);\n+        let warnings: Vec<ClippyWarning> = output_lines\n             .into_iter()\n-            .filter(|line| line.contains(\": warning: \"))\n-            // prefix with the crate name and version\n-            // cargo-0.49.0/src/cargo/ops/cargo_compile.rs:127:35: warning: usage of `FromIterator::from_iter`\n-            .map(|line| format!(\"{}-{}/{}\", self.name, self.version, line))\n-            // remove the \"warning: \"\n-            .map(|line| {\n-                let remove_pat = \"warning: \";\n-                let pos = line\n-                    .find(&remove_pat)\n-                    .expect(\"clippy output did not contain \\\"warning: \\\"\");\n-                let mut new = line[0..pos].to_string();\n-                new.push_str(&line[pos + remove_pat.len()..]);\n-                new.push('\\n');\n-                new\n-            })\n+            // get all clippy warnings\n+            .filter(|line| line.contains(\"clippy::\"))\n+            .map(|json_msg| parse_json_message(json_msg, &self))\n             .collect();\n \n+        let mut output: Vec<String> = warnings.iter().map(|warning| warning.to_string()).collect();\n         // sort messages alphabetically to avoid noise in the logs\n         output.sort();\n         output\n@@ -167,6 +179,30 @@ fn read_crates() -> Vec<CrateSource> {\n     crate_sources\n }\n \n+// extract interesting data from a json lint message\n+fn parse_json_message(json_message: &str, krate: &Crate) -> ClippyWarning {\n+    let jmsg: Value = serde_json::from_str(&json_message).unwrap_or_else(|e| panic!(\"Failed to parse json:\\n{:?}\", e));\n+\n+    ClippyWarning {\n+        crate_name: krate.name.to_string(),\n+        crate_version: krate.version.to_string(),\n+        file: jmsg[\"message\"][\"spans\"][0][\"file_name\"]\n+            .to_string()\n+            .trim_matches('\"')\n+            .into(),\n+        line: jmsg[\"message\"][\"spans\"][0][\"line_start\"]\n+            .to_string()\n+            .trim_matches('\"')\n+            .into(),\n+        column: jmsg[\"message\"][\"spans\"][0][\"text\"][0][\"highlight_start\"]\n+            .to_string()\n+            .trim_matches('\"')\n+            .into(),\n+        linttype: jmsg[\"message\"][\"code\"][\"code\"].to_string().trim_matches('\"').into(),\n+        message: jmsg[\"message\"][\"message\"].to_string().trim_matches('\"').into(),\n+    }\n+}\n+\n // the main fn\n pub fn run() {\n     let cargo_clippy_path: PathBuf = PathBuf::from(\"target/debug/cargo-clippy\");"}, {"sha": "52045f05faaff0db305eceb30da440809b49791f", "filename": "mini-crater/logs.txt", "status": "modified", "additions": 3249, "deletions": 3245, "changes": 6494, "blob_url": "https://github.com/rust-lang/rust/blob/6c5bf2778fa09fd3a79dd2fa76779c07ee182391/mini-crater%2Flogs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6c5bf2778fa09fd3a79dd2fa76779c07ee182391/mini-crater%2Flogs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mini-crater%2Flogs.txt?ref=6c5bf2778fa09fd3a79dd2fa76779c07ee182391"}]}