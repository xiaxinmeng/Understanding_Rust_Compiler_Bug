{"sha": "8f33b4eed15a6c6e620e502e74f8c01e6f0702e9", "node_id": "C_kwDOAAsO6NoAKDhmMzNiNGVlZDE1YTZjNmU2MjBlNTAyZTc0ZjhjMDFlNmYwNzAyZTk", "commit": {"author": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2022-01-16T00:25:09Z"}, "committer": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2022-01-16T00:25:09Z"}, "message": "Copy an example to PartialOrd as well", "tree": {"sha": "7ad512956f971f14824c0534f7b4d0a5e22cd786", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ad512956f971f14824c0534f7b4d0a5e22cd786"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f33b4eed15a6c6e620e502e74f8c01e6f0702e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f33b4eed15a6c6e620e502e74f8c01e6f0702e9", "html_url": "https://github.com/rust-lang/rust/commit/8f33b4eed15a6c6e620e502e74f8c01e6f0702e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f33b4eed15a6c6e620e502e74f8c01e6f0702e9/comments", "author": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69d25fc58257637cedbfe0a046d90da1494bcb05", "url": "https://api.github.com/repos/rust-lang/rust/commits/69d25fc58257637cedbfe0a046d90da1494bcb05", "html_url": "https://github.com/rust-lang/rust/commit/69d25fc58257637cedbfe0a046d90da1494bcb05"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "ef81e8736ed4745f661c5bc560ca9c58a3569152", "filename": "library/core/src/cmp.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8f33b4eed15a6c6e620e502e74f8c01e6f0702e9/library%2Fcore%2Fsrc%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f33b4eed15a6c6e620e502e74f8c01e6f0702e9/library%2Fcore%2Fsrc%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcmp.rs?ref=8f33b4eed15a6c6e620e502e74f8c01e6f0702e9", "patch": "@@ -668,7 +668,7 @@ impl<T: Clone> Clone for Reverse<T> {\n /// Here's an example:\n ///\n /// ```\n-/// #[derive(PartialEq, PartialOrd)]\n+/// #[derive(PartialEq, Eq, PartialOrd, Ord)]\n /// enum Size {\n ///     Small,\n ///     Large,\n@@ -898,6 +898,18 @@ impl PartialOrd for Ordering {\n /// This trait can be used with `#[derive]`. When `derive`d on structs, it will produce a\n /// lexicographic ordering based on the top-to-bottom declaration order of the struct's members.\n /// When `derive`d on enums, variants are ordered by their top-to-bottom discriminant order.\n+/// This means variants at the top are less than variants at the bottom.\n+/// Here's an example:\n+///\n+/// ```\n+/// #[derive(PartialEq, PartialOrd)]\n+/// enum Size {\n+///     Small,\n+///     Large,\n+/// }\n+///\n+/// assert!(Size::Small < Size::Large);\n+/// ```\n ///\n /// ## How can I implement `PartialOrd`?\n ///\n@@ -970,8 +982,8 @@ impl PartialOrd for Ordering {\n /// # Examples\n ///\n /// ```\n-/// let x : u32 = 0;\n-/// let y : u32 = 1;\n+/// let x: u32 = 0;\n+/// let y: u32 = 1;\n ///\n /// assert_eq!(x < y, true);\n /// assert_eq!(x.lt(&y), true);"}]}