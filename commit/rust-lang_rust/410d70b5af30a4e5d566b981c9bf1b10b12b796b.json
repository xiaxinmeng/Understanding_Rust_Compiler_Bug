{"sha": "410d70b5af30a4e5d566b981c9bf1b10b12b796b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxMGQ3MGI1YWYzMGE0ZTVkNTY2Yjk4MWM5YmYxYjEwYjEyYjc5NmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-18T05:26:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-18T05:26:38Z"}, "message": "auto merge of #14992 : nathantypanski/rust/collect-docs, r=huonw\n\nThis updates the documentation for result::collect() and\r\noption::collect() to use the new-style syntax for owned pointers and\r\nvectors.\r\n\r\ncloses #14991", "tree": {"sha": "f2871e5e255ad92b9a19ea68efbc51e92fbb0ba8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2871e5e255ad92b9a19ea68efbc51e92fbb0ba8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/410d70b5af30a4e5d566b981c9bf1b10b12b796b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/410d70b5af30a4e5d566b981c9bf1b10b12b796b", "html_url": "https://github.com/rust-lang/rust/commit/410d70b5af30a4e5d566b981c9bf1b10b12b796b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/410d70b5af30a4e5d566b981c9bf1b10b12b796b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6736a1440d42f6af967a8a20ab8d73522112b72", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6736a1440d42f6af967a8a20ab8d73522112b72", "html_url": "https://github.com/rust-lang/rust/commit/d6736a1440d42f6af967a8a20ab8d73522112b72"}, {"sha": "feceb1276e3f7848fb6bee0a130065f6b1c56daf", "url": "https://api.github.com/repos/rust-lang/rust/commits/feceb1276e3f7848fb6bee0a130065f6b1c56daf", "html_url": "https://github.com/rust-lang/rust/commit/feceb1276e3f7848fb6bee0a130065f6b1c56daf"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "a4d33ae802851d1d9dced4d807b974d0a4c605a0", "filename": "src/libcore/option.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/410d70b5af30a4e5d566b981c9bf1b10b12b796b/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/410d70b5af30a4e5d566b981c9bf1b10b12b796b/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=410d70b5af30a4e5d566b981c9bf1b10b12b796b", "patch": "@@ -574,13 +574,17 @@ impl<A> ExactSize<A> for Item<A> {}\n /// Here is an example which increments every integer in a vector,\n /// checking for overflow:\n ///\n-///     fn inc_conditionally(x: uint) -> Option<uint> {\n-///         if x == uint::MAX { return None; }\n-///         else { return Some(x+1u); }\n-///     }\n-///     let v = [1u, 2, 3];\n-///     let res = collect(v.iter().map(|&x| inc_conditionally(x)));\n-///     assert!(res == Some(~[2u, 3, 4]));\n+/// ```rust\n+/// use std::option;\n+/// use std::uint;\n+///\n+/// let v = vec!(1u, 2u);\n+/// let res: Option<Vec<uint>> = option::collect(v.iter().map(|x: &uint|\n+///     if *x == uint::MAX { None }\n+///     else { Some(x + 1) }\n+/// ));\n+/// assert!(res == Some(vec!(2u, 3u)));\n+/// ```\n #[inline]\n pub fn collect<T, Iter: Iterator<Option<T>>, V: FromIterator<T>>(iter: Iter) -> Option<V> {\n     // FIXME(#11084): This should be twice as fast once this bug is closed."}, {"sha": "3f82190e6b792783e82705cf237955f5711e36de", "filename": "src/libcore/result.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/410d70b5af30a4e5d566b981c9bf1b10b12b796b/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/410d70b5af30a4e5d566b981c9bf1b10b12b796b/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=410d70b5af30a4e5d566b981c9bf1b10b12b796b", "patch": "@@ -572,13 +572,17 @@ impl<T: Show, E> Result<T, E> {\n /// Here is an example which increments every integer in a vector,\n /// checking for overflow:\n ///\n-///     fn inc_conditionally(x: uint) -> Result<uint, &'static str> {\n-///         if x == uint::MAX { return Err(\"overflow\"); }\n-///         else { return Ok(x+1u); }\n-///     }\n-///     let v = [1u, 2, 3];\n-///     let res = collect(v.iter().map(|&x| inc_conditionally(x)));\n-///     assert!(res == Ok(~[2u, 3, 4]));\n+/// ```rust\n+/// use std::result;\n+/// use std::uint;\n+///\n+/// let v = vec!(1u, 2u);\n+/// let res: Result<Vec<uint>, &'static str> = result::collect(v.iter().map(|x: &uint|\n+///     if *x == uint::MAX { Err(\"Overflow!\") }\n+///     else { Ok(x + 1) }\n+/// ));\n+/// assert!(res == Ok(vec!(2u, 3u)));\n+/// ```\n #[inline]\n pub fn collect<T, E, Iter: Iterator<Result<T, E>>, V: FromIterator<T>>(iter: Iter) -> Result<V, E> {\n     // FIXME(#11084): This should be twice as fast once this bug is closed."}]}