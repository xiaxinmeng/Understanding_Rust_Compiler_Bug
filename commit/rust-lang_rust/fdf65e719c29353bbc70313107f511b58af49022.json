{"sha": "fdf65e719c29353bbc70313107f511b58af49022", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkZjY1ZTcxOWMyOTM1M2JiYzcwMzEzMTA3ZjUxMWI1OGFmNDkwMjI=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2016-01-28T20:54:09Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2016-01-29T13:19:55Z"}, "message": "Fix truncated drop pattern on 32bit -> 64bit cross compilation\n\nWhen cross compiling for a target that has a larger usize type than the\nhost system, we use a truncated value to mark data as dropped,\neventually leading to drop calls on already dropped data. To properly\nhandle this, the drop pattern needs to be of type u64.\n\nSince C_integral truncates its given value to the requested size anyway,\nwe can also drop the function that chose between the u32 and u64 values,\nand always use the u64 constant.\n\nFixes #31139", "tree": {"sha": "3358e2a654d234ccc581a8944049b11403dd4409", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3358e2a654d234ccc581a8944049b11403dd4409"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdf65e719c29353bbc70313107f511b58af49022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdf65e719c29353bbc70313107f511b58af49022", "html_url": "https://github.com/rust-lang/rust/commit/fdf65e719c29353bbc70313107f511b58af49022", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdf65e719c29353bbc70313107f511b58af49022/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bd87c1f1b8afabcf1bafa14dd13c59f00b4f4be", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bd87c1f1b8afabcf1bafa14dd13c59f00b4f4be", "html_url": "https://github.com/rust-lang/rust/commit/7bd87c1f1b8afabcf1bafa14dd13c59f00b4f4be"}], "stats": {"total": 22, "additions": 3, "deletions": 19}, "files": [{"sha": "2b74fa780931409d99f127e7f9f49422022e670f", "filename": "src/librustc_trans/trans/adt.rs", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fdf65e719c29353bbc70313107f511b58af49022/src%2Flibrustc_trans%2Ftrans%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdf65e719c29353bbc70313107f511b58af49022/src%2Flibrustc_trans%2Ftrans%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fadt.rs?ref=fdf65e719c29353bbc70313107f511b58af49022", "patch": "@@ -229,28 +229,12 @@ pub const DTOR_NEEDED_HINT: u8 = 0x3d;\n pub const DTOR_MOVED_HINT: u8 = 0x2d;\n \n pub const DTOR_NEEDED: u8 = 0xd4;\n-pub const DTOR_NEEDED_U32: u32 = repeat_u8_as_u32(DTOR_NEEDED);\n-pub const DTOR_NEEDED_U64: u64 = repeat_u8_as_u64(DTOR_NEEDED);\n #[allow(dead_code)]\n-pub fn dtor_needed_usize(ccx: &CrateContext) -> usize {\n-    match &ccx.tcx().sess.target.target.target_pointer_width[..] {\n-        \"32\" => DTOR_NEEDED_U32 as usize,\n-        \"64\" => DTOR_NEEDED_U64 as usize,\n-        tws => panic!(\"Unsupported target word size for int: {}\", tws),\n-    }\n-}\n+pub const DTOR_NEEDED_U64: u64 = repeat_u8_as_u64(DTOR_NEEDED);\n \n pub const DTOR_DONE: u8 = 0x1d;\n-pub const DTOR_DONE_U32: u32 = repeat_u8_as_u32(DTOR_DONE);\n-pub const DTOR_DONE_U64: u64 = repeat_u8_as_u64(DTOR_DONE);\n #[allow(dead_code)]\n-pub fn dtor_done_usize(ccx: &CrateContext) -> usize {\n-    match &ccx.tcx().sess.target.target.target_pointer_width[..] {\n-        \"32\" => DTOR_DONE_U32 as usize,\n-        \"64\" => DTOR_DONE_U64 as usize,\n-        tws => panic!(\"Unsupported target word size for int: {}\", tws),\n-    }\n-}\n+pub const DTOR_DONE_U64: u64 = repeat_u8_as_u64(DTOR_DONE);\n \n fn dtor_to_init_u8(dtor: bool) -> u8 {\n     if dtor { DTOR_NEEDED } else { 0 }"}, {"sha": "12aa2e2e3ea6cf30d5dcb2b532b6958f81a5a2d9", "filename": "src/librustc_trans/trans/glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdf65e719c29353bbc70313107f511b58af49022/src%2Flibrustc_trans%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdf65e719c29353bbc70313107f511b58af49022/src%2Flibrustc_trans%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fglue.rs?ref=fdf65e719c29353bbc70313107f511b58af49022", "patch": "@@ -514,7 +514,7 @@ fn make_drop_glue<'blk, 'tcx>(bcx: Block<'blk, 'tcx>, v0: ValueRef, g: DropGlueK\n     // the special dtor markings.\n \n     let inttype = Type::int(bcx.ccx());\n-    let dropped_pattern = C_integral(inttype, adt::dtor_done_usize(bcx.fcx.ccx) as u64, false);\n+    let dropped_pattern = C_integral(inttype, adt::DTOR_DONE_U64, false);\n \n     match t.sty {\n         ty::TyBox(content_ty) => {"}]}