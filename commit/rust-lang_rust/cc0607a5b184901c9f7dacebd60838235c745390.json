{"sha": "cc0607a5b184901c9f7dacebd60838235c745390", "node_id": "C_kwDOAAsO6NoAKGNjMDYwN2E1YjE4NDkwMWM5ZjdkYWNlYmQ2MDgzODIzNWM3NDUzOTA", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-05-08T19:12:56Z"}, "committer": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-05-13T22:27:18Z"}, "message": "Add bound_type_of", "tree": {"sha": "e65a74c0dabc8f20ba3dde3380413793c19cee44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e65a74c0dabc8f20ba3dde3380413793c19cee44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc0607a5b184901c9f7dacebd60838235c745390", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc0607a5b184901c9f7dacebd60838235c745390", "html_url": "https://github.com/rust-lang/rust/commit/cc0607a5b184901c9f7dacebd60838235c745390", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc0607a5b184901c9f7dacebd60838235c745390/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf8ea64d9dd9f8925ce328523e075be5f18efeaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf8ea64d9dd9f8925ce328523e075be5f18efeaf", "html_url": "https://github.com/rust-lang/rust/commit/cf8ea64d9dd9f8925ce328523e075be5f18efeaf"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "530d6d4de35f1c2bceb58e92c6b8624c9db23c75", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc0607a5b184901c9f7dacebd60838235c745390/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc0607a5b184901c9f7dacebd60838235c745390/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=cc0607a5b184901c9f7dacebd60838235c745390", "patch": "@@ -12,7 +12,7 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, AutoBorrow};\n use rustc_middle::ty::binding::BindingMode;\n use rustc_middle::ty::subst::Subst;\n-use rustc_middle::ty::{self, ClosureKind, EarlyBinder, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, ClosureKind, Ty, TypeFoldable};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::sym;\n \n@@ -150,7 +150,7 @@ impl<'tcx> LateLintPass<'tcx> for EtaReduction {\n             if check_inputs(cx, body.params, args);\n             let method_def_id = cx.typeck_results().type_dependent_def_id(body.value.hir_id).unwrap();\n             let substs = cx.typeck_results().node_substs(body.value.hir_id);\n-            let call_ty = EarlyBinder(cx.tcx.type_of(method_def_id)).subst(cx.tcx, substs);\n+            let call_ty = cx.tcx.bound_type_of(method_def_id).subst(cx.tcx, substs);\n             if check_sig(cx, closure_ty, call_ty);\n             then {\n                 span_lint_and_then(cx, REDUNDANT_CLOSURE_FOR_METHOD_CALLS, expr.span, \"redundant closure\", |diag| {"}, {"sha": "9d8f8999ce409488a8c33f5c1c5a7dd0956a70a2", "filename": "clippy_lints/src/mut_reference.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc0607a5b184901c9f7dacebd60838235c745390/clippy_lints%2Fsrc%2Fmut_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc0607a5b184901c9f7dacebd60838235c745390/clippy_lints%2Fsrc%2Fmut_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_reference.rs?ref=cc0607a5b184901c9f7dacebd60838235c745390", "patch": "@@ -2,7 +2,7 @@ use clippy_utils::diagnostics::span_lint;\n use rustc_hir::{BorrowKind, Expr, ExprKind, Mutability};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::subst::Subst;\n-use rustc_middle::ty::{self, EarlyBinder, Ty};\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::iter;\n \n@@ -48,7 +48,7 @@ impl<'tcx> LateLintPass<'tcx> for UnnecessaryMutPassed {\n             ExprKind::MethodCall(path, arguments, _) => {\n                 let def_id = cx.typeck_results().type_dependent_def_id(e.hir_id).unwrap();\n                 let substs = cx.typeck_results().node_substs(e.hir_id);\n-                let method_type = EarlyBinder(cx.tcx.type_of(def_id)).subst(cx.tcx, substs);\n+                let method_type = cx.tcx.bound_type_of(def_id).subst(cx.tcx, substs);\n                 check_arguments(cx, arguments, method_type, path.ident.as_str(), \"method\");\n             },\n             _ => (),"}, {"sha": "be6277332db4dbd5d7d9530388c36c62f46e4b13", "filename": "clippy_lints/src/transmute/transmute_undefined_repr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc0607a5b184901c9f7dacebd60838235c745390/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_undefined_repr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc0607a5b184901c9f7dacebd60838235c745390/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_undefined_repr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_undefined_repr.rs?ref=cc0607a5b184901c9f7dacebd60838235c745390", "patch": "@@ -4,7 +4,7 @@ use clippy_utils::ty::is_c_void;\n use rustc_hir::Expr;\n use rustc_lint::LateContext;\n use rustc_middle::ty::subst::{Subst, SubstsRef};\n-use rustc_middle::ty::{self, EarlyBinder, IntTy, Ty, TypeAndMut, UintTy};\n+use rustc_middle::ty::{self, IntTy, Ty, TypeAndMut, UintTy};\n use rustc_span::Span;\n \n #[allow(clippy::too_many_lines)]\n@@ -307,7 +307,7 @@ fn reduce_ty<'tcx>(cx: &LateContext<'tcx>, mut ty: Ty<'tcx>) -> ReducedTy<'tcx>\n                     .non_enum_variant()\n                     .fields\n                     .iter()\n-                    .map(|f| EarlyBinder(cx.tcx.type_of(f.did)).subst(cx.tcx, substs));\n+                    .map(|f| cx.tcx.bound_type_of(f.did).subst(cx.tcx, substs));\n                 let Some(sized_ty) = iter.find(|&ty| !is_zero_sized_ty(cx, ty)) else {\n                     return ReducedTy::TypeErasure;\n                 };"}]}