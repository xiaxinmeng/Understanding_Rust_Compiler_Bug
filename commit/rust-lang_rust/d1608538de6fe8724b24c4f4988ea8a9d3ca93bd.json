{"sha": "d1608538de6fe8724b24c4f4988ea8a9d3ca93bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNjA4NTM4ZGU2ZmU4NzI0YjI0YzRmNDk4OGVhOGE5ZDNjYTkzYmQ=", "commit": {"author": {"name": "Marco Groppo", "email": "marco.groppo@gmail.com", "date": "2019-07-16T13:06:15Z"}, "committer": {"name": "Marco Groppo", "email": "marco.groppo@gmail.com", "date": "2019-07-17T19:02:36Z"}, "message": "Restrict some postfix completions to bool and unknown expr.\n\nRestrict `if` and `while` postfix completions to boolean expressions and\nexpressions of an unknown type.", "tree": {"sha": "41c18d4bc2ad5f136e83079917e70ebcef947b04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41c18d4bc2ad5f136e83079917e70ebcef947b04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1608538de6fe8724b24c4f4988ea8a9d3ca93bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1608538de6fe8724b24c4f4988ea8a9d3ca93bd", "html_url": "https://github.com/rust-lang/rust/commit/d1608538de6fe8724b24c4f4988ea8a9d3ca93bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1608538de6fe8724b24c4f4988ea8a9d3ca93bd/comments", "author": {"login": "marcogroppo", "id": 2735511, "node_id": "MDQ6VXNlcjI3MzU1MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2735511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcogroppo", "html_url": "https://github.com/marcogroppo", "followers_url": "https://api.github.com/users/marcogroppo/followers", "following_url": "https://api.github.com/users/marcogroppo/following{/other_user}", "gists_url": "https://api.github.com/users/marcogroppo/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcogroppo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcogroppo/subscriptions", "organizations_url": "https://api.github.com/users/marcogroppo/orgs", "repos_url": "https://api.github.com/users/marcogroppo/repos", "events_url": "https://api.github.com/users/marcogroppo/events{/privacy}", "received_events_url": "https://api.github.com/users/marcogroppo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcogroppo", "id": 2735511, "node_id": "MDQ6VXNlcjI3MzU1MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2735511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcogroppo", "html_url": "https://github.com/marcogroppo", "followers_url": "https://api.github.com/users/marcogroppo/followers", "following_url": "https://api.github.com/users/marcogroppo/following{/other_user}", "gists_url": "https://api.github.com/users/marcogroppo/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcogroppo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcogroppo/subscriptions", "organizations_url": "https://api.github.com/users/marcogroppo/orgs", "repos_url": "https://api.github.com/users/marcogroppo/repos", "events_url": "https://api.github.com/users/marcogroppo/events{/privacy}", "received_events_url": "https://api.github.com/users/marcogroppo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6deeabf686950636ea9f9bce9da96cf452f20765", "url": "https://api.github.com/repos/rust-lang/rust/commits/6deeabf686950636ea9f9bce9da96cf452f20765", "html_url": "https://github.com/rust-lang/rust/commit/6deeabf686950636ea9f9bce9da96cf452f20765"}], "stats": {"total": 129, "additions": 103, "deletions": 26}, "files": [{"sha": "4f50622140b7a2b2c81951993fd192ab30896753", "filename": "crates/ra_ide_api/src/completion/complete_postfix.rs", "status": "modified", "additions": 103, "deletions": 26, "changes": 129, "blob_url": "https://github.com/rust-lang/rust/blob/d1608538de6fe8724b24c4f4988ea8a9d3ca93bd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1608538de6fe8724b24c4f4988ea8a9d3ca93bd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs?ref=d1608538de6fe8724b24c4f4988ea8a9d3ca93bd", "patch": "@@ -5,6 +5,7 @@ use crate::{\n     },\n     CompletionItem,\n };\n+use hir::{Ty, TypeCtor};\n use ra_syntax::{ast::AstNode, TextRange};\n use ra_text_edit::TextEditBuilder;\n \n@@ -21,28 +22,46 @@ fn postfix_snippet(ctx: &CompletionContext, label: &str, detail: &str, snippet:\n         .snippet_edit(edit)\n }\n \n+fn is_bool_or_unknown(ty: Option<Ty>) -> bool {\n+    if let Some(ty) = ty {\n+        match ty {\n+            Ty::Apply(at) => match at.ctor {\n+                TypeCtor::Bool => true,\n+                _ => false,\n+            },\n+            Ty::Unknown => true,\n+            _ => false,\n+        }\n+    } else {\n+        true\n+    }\n+}\n+\n pub(super) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n     if let Some(dot_receiver) = ctx.dot_receiver {\n         let receiver_text = dot_receiver.syntax().text().to_string();\n+        let receiver_ty = ctx.analyzer.type_of(ctx.db, dot_receiver);\n+        if is_bool_or_unknown(receiver_ty) {\n+            postfix_snippet(ctx, \"if\", \"if expr {}\", &format!(\"if {} {{$0}}\", receiver_text))\n+                .add_to(acc);\n+            postfix_snippet(\n+                ctx,\n+                \"while\",\n+                \"while expr {}\",\n+                &format!(\"while {} {{\\n$0\\n}}\", receiver_text),\n+            )\n+            .add_to(acc);\n+        }\n         postfix_snippet(ctx, \"not\", \"!expr\", &format!(\"!{}\", receiver_text)).add_to(acc);\n         postfix_snippet(ctx, \"ref\", \"&expr\", &format!(\"&{}\", receiver_text)).add_to(acc);\n         postfix_snippet(ctx, \"refm\", \"&mut expr\", &format!(\"&mut {}\", receiver_text)).add_to(acc);\n-        postfix_snippet(ctx, \"if\", \"if expr {}\", &format!(\"if {} {{$0}}\", receiver_text))\n-            .add_to(acc);\n         postfix_snippet(\n             ctx,\n             \"match\",\n             \"match expr {}\",\n             &format!(\"match {} {{\\n    ${{1:_}} => {{$0\\\\}},\\n}}\", receiver_text),\n         )\n         .add_to(acc);\n-        postfix_snippet(\n-            ctx,\n-            \"while\",\n-            \"while expr {}\",\n-            &format!(\"while {} {{\\n$0\\n}}\", receiver_text),\n-        )\n-        .add_to(acc);\n         postfix_snippet(ctx, \"dbg\", \"dbg!(expr)\", &format!(\"dbg!({})\", receiver_text)).add_to(acc);\n         postfix_snippet(ctx, \"box\", \"Box::new(expr)\", &format!(\"Box::new({})\", receiver_text))\n             .add_to(acc);\n@@ -64,68 +83,126 @@ mod tests {\n             do_postfix_completion(\n                 r#\"\n                 fn main() {\n-                    let bar = \"a\";\n+                    let bar = true;\n                     bar.<|>\n                 }\n                 \"#,\n             ),\n             @r###\"[\n     CompletionItem {\n         label: \"box\",\n-        source_range: [88; 88),\n-        delete: [84; 88),\n+        source_range: [89; 89),\n+        delete: [85; 89),\n         insert: \"Box::new(bar)\",\n         detail: \"Box::new(expr)\",\n     },\n     CompletionItem {\n         label: \"dbg\",\n-        source_range: [88; 88),\n-        delete: [84; 88),\n+        source_range: [89; 89),\n+        delete: [85; 89),\n         insert: \"dbg!(bar)\",\n         detail: \"dbg!(expr)\",\n     },\n     CompletionItem {\n         label: \"if\",\n-        source_range: [88; 88),\n-        delete: [84; 88),\n+        source_range: [89; 89),\n+        delete: [85; 89),\n         insert: \"if bar {$0}\",\n         detail: \"if expr {}\",\n     },\n     CompletionItem {\n         label: \"match\",\n-        source_range: [88; 88),\n-        delete: [84; 88),\n+        source_range: [89; 89),\n+        delete: [85; 89),\n         insert: \"match bar {\\n    ${1:_} => {$0\\\\},\\n}\",\n         detail: \"match expr {}\",\n     },\n     CompletionItem {\n         label: \"not\",\n-        source_range: [88; 88),\n-        delete: [84; 88),\n+        source_range: [89; 89),\n+        delete: [85; 89),\n         insert: \"!bar\",\n         detail: \"!expr\",\n     },\n     CompletionItem {\n         label: \"ref\",\n-        source_range: [88; 88),\n-        delete: [84; 88),\n+        source_range: [89; 89),\n+        delete: [85; 89),\n         insert: \"&bar\",\n         detail: \"&expr\",\n     },\n     CompletionItem {\n         label: \"refm\",\n-        source_range: [88; 88),\n-        delete: [84; 88),\n+        source_range: [89; 89),\n+        delete: [85; 89),\n         insert: \"&mut bar\",\n         detail: \"&mut expr\",\n     },\n     CompletionItem {\n         label: \"while\",\n-        source_range: [88; 88),\n-        delete: [84; 88),\n+        source_range: [89; 89),\n+        delete: [85; 89),\n         insert: \"while bar {\\n$0\\n}\",\n         detail: \"while expr {}\",\n     },\n+]\"###\n+        );\n+    }\n+\n+    #[test]\n+    fn some_postfix_completions_ignored() {\n+        assert_debug_snapshot_matches!(\n+            do_postfix_completion(\n+                r#\"\n+                fn main() {\n+                    let bar: u8 = 12;\n+                    bar.<|>\n+                }\n+                \"#,\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"box\",\n+        source_range: [91; 91),\n+        delete: [87; 91),\n+        insert: \"Box::new(bar)\",\n+        detail: \"Box::new(expr)\",\n+    },\n+    CompletionItem {\n+        label: \"dbg\",\n+        source_range: [91; 91),\n+        delete: [87; 91),\n+        insert: \"dbg!(bar)\",\n+        detail: \"dbg!(expr)\",\n+    },\n+    CompletionItem {\n+        label: \"match\",\n+        source_range: [91; 91),\n+        delete: [87; 91),\n+        insert: \"match bar {\\n    ${1:_} => {$0\\\\},\\n}\",\n+        detail: \"match expr {}\",\n+    },\n+    CompletionItem {\n+        label: \"not\",\n+        source_range: [91; 91),\n+        delete: [87; 91),\n+        insert: \"!bar\",\n+        detail: \"!expr\",\n+    },\n+    CompletionItem {\n+        label: \"ref\",\n+        source_range: [91; 91),\n+        delete: [87; 91),\n+        insert: \"&bar\",\n+        detail: \"&expr\",\n+    },\n+    CompletionItem {\n+        label: \"refm\",\n+        source_range: [91; 91),\n+        delete: [87; 91),\n+        insert: \"&mut bar\",\n+        detail: \"&mut expr\",\n+    },\n ]\"###\n         );\n     }"}]}