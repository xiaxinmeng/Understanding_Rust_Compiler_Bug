{"sha": "0546d115288ce0d6c3a819909de12fba5ce673fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1NDZkMTE1Mjg4Y2UwZDZjM2E4MTk5MDlkZTEyZmJhNWNlNjczZmQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2020-04-24T18:18:59Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2020-04-24T18:18:59Z"}, "message": "Fix cross-compiling LLD to different platforms\n\nLooks like the native build system isn't great a coping with this, so\ntry to work around that with a few workarounds.", "tree": {"sha": "9e32fc64b1f724ce18ef4f916f99c31b96413e9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e32fc64b1f724ce18ef4f916f99c31b96413e9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0546d115288ce0d6c3a819909de12fba5ce673fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0546d115288ce0d6c3a819909de12fba5ce673fd", "html_url": "https://github.com/rust-lang/rust/commit/0546d115288ce0d6c3a819909de12fba5ce673fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0546d115288ce0d6c3a819909de12fba5ce673fd/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7a7658c6dd89fd5e0a696460fe9abceb2bde8aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7a7658c6dd89fd5e0a696460fe9abceb2bde8aa", "html_url": "https://github.com/rust-lang/rust/commit/c7a7658c6dd89fd5e0a696460fe9abceb2bde8aa"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "89984bb55dfd82380ade435c25e362176592a593", "filename": "src/bootstrap/bin/llvm-config-wrapper.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0546d115288ce0d6c3a819909de12fba5ce673fd/src%2Fbootstrap%2Fbin%2Fllvm-config-wrapper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0546d115288ce0d6c3a819909de12fba5ce673fd/src%2Fbootstrap%2Fbin%2Fllvm-config-wrapper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Fllvm-config-wrapper.rs?ref=0546d115288ce0d6c3a819909de12fba5ce673fd", "patch": "@@ -10,7 +10,14 @@ fn main() {\n     let mut cmd = Command::new(real_llvm_config);\n     cmd.args(env::args().skip(1)).stderr(Stdio::piped());\n     let output = cmd.output().expect(\"failed to spawn llvm-config\");\n-    let stdout = String::from_utf8_lossy(&output.stdout);\n+    let mut stdout = String::from_utf8_lossy(&output.stdout);\n+\n+    if let Ok(to_replace) = env::var(\"LLVM_CONFIG_SHIM_REPLACE\") {\n+        if let Ok(replace_with) = env::var(\"LLVM_CONFIG_SHIM_REPLACE_WITH\") {\n+            stdout = stdout.replace(&to_replace, &replace_with).into();\n+        }\n+    }\n+\n     print!(\"{}\", stdout.replace(\"\\\\\", \"/\"));\n     io::stdout().flush().unwrap();\n     process::exit(output.status.code().unwrap_or(1));"}, {"sha": "0f39e33c5f46a2e346da835235bb25015ef2502a", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0546d115288ce0d6c3a819909de12fba5ce673fd/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0546d115288ce0d6c3a819909de12fba5ce673fd/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=0546d115288ce0d6c3a819909de12fba5ce673fd", "patch": "@@ -479,10 +479,29 @@ impl Step for Lld {\n         let llvm_config_shim = env::current_exe().unwrap().with_file_name(\"llvm-config-wrapper\");\n         cfg.out_dir(&out_dir)\n             .profile(\"Release\")\n-            .env(\"LLVM_CONFIG_REAL\", llvm_config)\n+            .env(\"LLVM_CONFIG_REAL\", &llvm_config)\n             .define(\"LLVM_CONFIG_PATH\", llvm_config_shim)\n             .define(\"LLVM_INCLUDE_TESTS\", \"OFF\");\n \n+        // While we're using this horrible workaround to shim the execution of\n+        // llvm-config, let's just pile on more. I can't seem to figure out how\n+        // to build LLD as a standalone project and also cross-compile it at the\n+        // same time. It wants a natively executable `llvm-config` to learn\n+        // about LLVM, but then it learns about all the host configuration of\n+        // LLVM and tries to link to host LLVM libraries.\n+        //\n+        // To work around that we tell our shim to replace anything with the\n+        // build target with the actual target instead. This'll break parts of\n+        // LLD though which try to execute host tools, such as llvm-tblgen, so\n+        // we specifically tell it where to find those. This is likely super\n+        // brittle and will break over time. If anyone knows better how to\n+        // cross-compile LLD it would be much appreciated to fix this!\n+        if target != builder.config.build {\n+            cfg.env(\"LLVM_CONFIG_SHIM_REPLACE\", &builder.config.build)\n+                .env(\"LLVM_CONFIG_SHIM_REPLACE_WITH\", &target)\n+                .define(\"LLVM_TABLEGEN_EXE\", llvm_config.with_file_name(\"llvm-tblgen\"));\n+        }\n+\n         cfg.build();\n \n         t!(File::create(&done_stamp));"}]}