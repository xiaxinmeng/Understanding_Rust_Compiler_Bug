{"sha": "f7e58ebe84513ed65b1694311f8c4f35e53e8c0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3ZTU4ZWJlODQ1MTNlZDY1YjE2OTQzMTFmOGM0ZjM1ZTUzZThjMGU=", "commit": {"author": {"name": "gifnksm", "email": "makoto.nksm+github@gmail.com", "date": "2013-05-17T13:54:32Z"}, "committer": {"name": "gifnksm", "email": "makoto.nksm+github@gmail.com", "date": "2013-05-17T13:54:32Z"}, "message": "libcore: Add `IteratorUtil::to_vec()` method", "tree": {"sha": "880049504eb90f77c7b525a78739adadb0dfa0c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/880049504eb90f77c7b525a78739adadb0dfa0c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7e58ebe84513ed65b1694311f8c4f35e53e8c0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7e58ebe84513ed65b1694311f8c4f35e53e8c0e", "html_url": "https://github.com/rust-lang/rust/commit/f7e58ebe84513ed65b1694311f8c4f35e53e8c0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7e58ebe84513ed65b1694311f8c4f35e53e8c0e/comments", "author": {"login": "gifnksm", "id": 164213, "node_id": "MDQ6VXNlcjE2NDIxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/164213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gifnksm", "html_url": "https://github.com/gifnksm", "followers_url": "https://api.github.com/users/gifnksm/followers", "following_url": "https://api.github.com/users/gifnksm/following{/other_user}", "gists_url": "https://api.github.com/users/gifnksm/gists{/gist_id}", "starred_url": "https://api.github.com/users/gifnksm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gifnksm/subscriptions", "organizations_url": "https://api.github.com/users/gifnksm/orgs", "repos_url": "https://api.github.com/users/gifnksm/repos", "events_url": "https://api.github.com/users/gifnksm/events{/privacy}", "received_events_url": "https://api.github.com/users/gifnksm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gifnksm", "id": 164213, "node_id": "MDQ6VXNlcjE2NDIxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/164213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gifnksm", "html_url": "https://github.com/gifnksm", "followers_url": "https://api.github.com/users/gifnksm/followers", "following_url": "https://api.github.com/users/gifnksm/following{/other_user}", "gists_url": "https://api.github.com/users/gifnksm/gists{/gist_id}", "starred_url": "https://api.github.com/users/gifnksm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gifnksm/subscriptions", "organizations_url": "https://api.github.com/users/gifnksm/orgs", "repos_url": "https://api.github.com/users/gifnksm/repos", "events_url": "https://api.github.com/users/gifnksm/events{/privacy}", "received_events_url": "https://api.github.com/users/gifnksm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbbc244f7303113ad7a0be01ffb8aa617b199c4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbbc244f7303113ad7a0be01ffb8aa617b199c4b", "html_url": "https://github.com/rust-lang/rust/commit/dbbc244f7303113ad7a0be01ffb8aa617b199c4b"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "3811d28b0302d6a60910b6c2c841dac527af8c15", "filename": "src/libcore/iterator.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f7e58ebe84513ed65b1694311f8c4f35e53e8c0e/src%2Flibcore%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7e58ebe84513ed65b1694311f8c4f35e53e8c0e/src%2Flibcore%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiterator.rs?ref=f7e58ebe84513ed65b1694311f8c4f35e53e8c0e", "patch": "@@ -45,6 +45,7 @@ pub trait IteratorUtil<A> {\n     fn advance(&mut self, f: &fn(A) -> bool);\n     #[cfg(not(stage0))]\n     fn advance(&mut self, f: &fn(A) -> bool) -> bool;\n+    fn to_vec(self) -> ~[A];\n }\n \n /// Iterator adaptors provided for every `Iterator` implementation. The adaptor objects are also\n@@ -131,6 +132,14 @@ impl<A, T: Iterator<A>> IteratorUtil<A> for T {\n             }\n         }\n     }\n+\n+    #[inline(always)]\n+    fn to_vec(self) -> ~[A] {\n+        let mut v = ~[];\n+        let mut it = self;\n+        for it.advance() |x| { v.push(x); }\n+        return v;\n+    }\n }\n \n pub struct ChainIterator<T, U> {"}]}