{"sha": "f5a89d297c8dc5b36a5dcea022002cb1cd9e666a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1YTg5ZDI5N2M4ZGM1YjM2YTVkY2VhMDIyMDAyY2IxY2Q5ZTY2NmE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-09-07T08:27:57Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-09-07T08:27:57Z"}, "message": "rustc now can use integer literals in attributes", "tree": {"sha": "f5fc731969707f9b3131bb316f62c4ef033ab999", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5fc731969707f9b3131bb316f62c4ef033ab999"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5a89d297c8dc5b36a5dcea022002cb1cd9e666a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXz8+NAAoJEFbW7qD8Z6xGsQAQAKx83W46+2Lesph3LZc5Oi3E\n+TqQRkS1JLvGPdI3zxNFSijD3tBy+CqRq9AQhydtQh5UQVu2tDqi7ckLBOdq08Ak\np0+NPmp+SEm+ZUAyyKmJvRuHicL1PblWIo8GcptcFgIMvVf+OfZY84PQxWoW4tLy\nYGV+n3YLJYHclAeqJ2iRuYxbvD3zHJsgJvvG8Izotw8O68HfNIwdwI6e59m4gbEf\ncEiHDF65T1xJ+z1pXTDiFO0bUs0VBHCwpO5tDKw+rx77fB8qyWEP42iUyp06WifE\nQk+QWMLhK/9xi+tSV+MigOzHMwgoC9W8Zg0swKfe8HPD7V9p9Gy1Gjg5w4Fjgv3D\nj4H1wspWL1oCdLX/8YpZOQn9hI0QGp8z7xaGTu6Eb+IPssdSEkcSXEWX3CNtZXvV\nuRiaSOD2Tmk5ETzMelCgqj+OoGZUzTDpdOUJa4Oa6fx5l9EOmQJ13RXyoJsWTE53\nDCnrJbdM7c6bT6JdTuhUIm7BNbhPaUgnl1eKVyCaq9Twb1F0zhvf6x6Q9zhbnLYj\n49kR4qqIt2gHqIR2GjlSSsHej/W3F51UwyE/NNjc8rkhXjp6oUDzYEsgTA0AlYMV\nKmFF2rmRcj6Iq59FSTQh2ehVxcfNDZUtUAyJw0jDQG+ISeiVwrzZC7oZXctBE5TB\n3fIcX4yNf8Fy6va3CFsI\n=uDmv\n-----END PGP SIGNATURE-----", "payload": "tree f5fc731969707f9b3131bb316f62c4ef033ab999\nparent 35e8882553dbfa2810dfcc68b7769daf442d7c66\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1473236877 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1473236877 +0200\n\nrustc now can use integer literals in attributes"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5a89d297c8dc5b36a5dcea022002cb1cd9e666a", "html_url": "https://github.com/rust-lang/rust/commit/f5a89d297c8dc5b36a5dcea022002cb1cd9e666a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5a89d297c8dc5b36a5dcea022002cb1cd9e666a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35e8882553dbfa2810dfcc68b7769daf442d7c66", "url": "https://api.github.com/repos/rust-lang/rust/commits/35e8882553dbfa2810dfcc68b7769daf442d7c66", "html_url": "https://github.com/rust-lang/rust/commit/35e8882553dbfa2810dfcc68b7769daf442d7c66"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "cc0132e4090d9ec75bf3c20825bd181095be252b", "filename": "src/bin/miri.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f5a89d297c8dc5b36a5dcea022002cb1cd9e666a/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5a89d297c8dc5b36a5dcea022002cb1cd9e666a/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=f5a89d297c8dc5b36a5dcea022002cb1cd9e666a", "patch": "@@ -41,12 +41,12 @@ impl<'a> CompilerCalls<'a> for MiriCompilerCalls {\n             let mut memory_size = 100*1024*1024; // 100MB\n             let mut step_limit = 1000_000;\n             let mut stack_limit = 100;\n-            fn extract_str(lit: &syntax::ast::Lit) -> syntax::parse::token::InternedString {\n+            let extract_int = |lit: &syntax::ast::Lit| -> u64 {\n                 match lit.node {\n-                    syntax::ast::LitKind::Str(ref s, _) => s.clone(),\n-                    _ => bug!(\"attribute values need to be strings\"),\n+                    syntax::ast::LitKind::Int(i, _) => i,\n+                    _ => state.session.span_fatal(lit.span, \"expected an integer literal\"),\n                 }\n-            }\n+            };\n             for attr in krate.attrs.iter() {\n                 match attr.node.value.node {\n                     MetaItemKind::List(ref name, _) if name != \"miri\" => {}\n@@ -55,9 +55,9 @@ impl<'a> CompilerCalls<'a> for MiriCompilerCalls {\n                             NestedMetaItemKind::MetaItem(ref inner) => match inner.node {\n                                 MetaItemKind::NameValue(ref name, ref value) => {\n                                     match &**name {\n-                                        \"memory_size\" => memory_size = extract_str(value).parse().expect(\"not a number\"),\n-                                        \"step_limit\" => step_limit = extract_str(value).parse().expect(\"not a number\"),\n-                                        \"stack_limit\" => stack_limit = extract_str(value).parse().expect(\"not a number\"),\n+                                        \"memory_size\" => memory_size = extract_int(value) as usize,\n+                                        \"step_limit\" => step_limit = extract_int(value),\n+                                        \"stack_limit\" => stack_limit = extract_int(value) as usize,\n                                         _ => state.session.span_err(item.span, \"unknown miri attribute\"),\n                                     }\n                                 }"}, {"sha": "d3911a65f2f30d1d5f8160241c642fb45fde2e21", "filename": "tests/compile-fail/oom.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5a89d297c8dc5b36a5dcea022002cb1cd9e666a/tests%2Fcompile-fail%2Foom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5a89d297c8dc5b36a5dcea022002cb1cd9e666a/tests%2Fcompile-fail%2Foom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Foom.rs?ref=f5a89d297c8dc5b36a5dcea022002cb1cd9e666a", "patch": "@@ -1,5 +1,5 @@\n-#![feature(custom_attribute)]\n-#![miri(memory_size=\"0\")]\n+#![feature(custom_attribute, attr_literals)]\n+#![miri(memory_size=0)]\n \n fn bar() {\n     let x = 5;"}, {"sha": "d0344e4faeb3a750d73e5d210238e453a32d7e95", "filename": "tests/compile-fail/oom2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5a89d297c8dc5b36a5dcea022002cb1cd9e666a/tests%2Fcompile-fail%2Foom2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5a89d297c8dc5b36a5dcea022002cb1cd9e666a/tests%2Fcompile-fail%2Foom2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Foom2.rs?ref=f5a89d297c8dc5b36a5dcea022002cb1cd9e666a", "patch": "@@ -1,5 +1,5 @@\n-#![feature(custom_attribute)]\n-#![miri(memory_size=\"1000\")]\n+#![feature(custom_attribute, attr_literals)]\n+#![miri(memory_size=1000)]\n \n fn bar(i: i32) {\n     if i < 1000 {"}, {"sha": "2a78fbe5398f032ebabdc36ada0d810ff264d3ef", "filename": "tests/compile-fail/stack_limit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5a89d297c8dc5b36a5dcea022002cb1cd9e666a/tests%2Fcompile-fail%2Fstack_limit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5a89d297c8dc5b36a5dcea022002cb1cd9e666a/tests%2Fcompile-fail%2Fstack_limit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstack_limit.rs?ref=f5a89d297c8dc5b36a5dcea022002cb1cd9e666a", "patch": "@@ -1,5 +1,5 @@\n-#![feature(custom_attribute)]\n-#![miri(stack_limit=\"2\")]\n+#![feature(custom_attribute, attr_literals)]\n+#![miri(stack_limit=2)]\n \n fn bar() {\n     foo();"}, {"sha": "edd4c31866910642e97e6813084c7c27240367ec", "filename": "tests/compile-fail/timeout.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5a89d297c8dc5b36a5dcea022002cb1cd9e666a/tests%2Fcompile-fail%2Ftimeout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5a89d297c8dc5b36a5dcea022002cb1cd9e666a/tests%2Fcompile-fail%2Ftimeout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ftimeout.rs?ref=f5a89d297c8dc5b36a5dcea022002cb1cd9e666a", "patch": "@@ -1,6 +1,6 @@\n //error-pattern: reached the configured maximum execution time\n-#![feature(custom_attribute)]\n-#![miri(step_limit=\"1000\")]\n+#![feature(custom_attribute, attr_literals)]\n+#![miri(step_limit=1000)]\n \n fn main() {\n     for i in 0..1000000 {"}]}