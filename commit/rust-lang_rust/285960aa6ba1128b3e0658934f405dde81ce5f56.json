{"sha": "285960aa6ba1128b3e0658934f405dde81ce5f56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4NTk2MGFhNmJhMTEyOGIzZTA2NTg5MzRmNDA1ZGRlODFjZTVmNTY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-11-02T17:48:19Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-11-02T17:49:54Z"}, "message": "Fix coalescing of prime_caches updates\n\nThe previous implementation could try to create a progress bar when one\nwas  already registered", "tree": {"sha": "c23e46331017909d5d8125142db17a1802952db3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c23e46331017909d5d8125142db17a1802952db3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/285960aa6ba1128b3e0658934f405dde81ce5f56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/285960aa6ba1128b3e0658934f405dde81ce5f56", "html_url": "https://github.com/rust-lang/rust/commit/285960aa6ba1128b3e0658934f405dde81ce5f56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/285960aa6ba1128b3e0658934f405dde81ce5f56/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bd26e6afcdd7a75e1256987e5e3b460451dfff4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bd26e6afcdd7a75e1256987e5e3b460451dfff4", "html_url": "https://github.com/rust-lang/rust/commit/2bd26e6afcdd7a75e1256987e5e3b460451dfff4"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "d504572a83eeef7e8f1b80a110c2ca45533ec931", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/285960aa6ba1128b3e0658934f405dde81ce5f56/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/285960aa6ba1128b3e0658934f405dde81ce5f56/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=285960aa6ba1128b3e0658934f405dde81ce5f56", "patch": "@@ -192,8 +192,7 @@ impl GlobalState {\n             },\n             Event::Task(mut task) => {\n                 let _p = profile::span(\"GlobalState::handle_event/task\");\n-                let mut prime_caches_started = false;\n-                let mut prime_caches_progress = None;\n+                let mut prime_caches_progress = Vec::new();\n                 loop {\n                     match task {\n                         Task::Response(response) => self.respond(response),\n@@ -203,13 +202,19 @@ impl GlobalState {\n                             }\n                         }\n                         Task::Workspaces(workspaces) => self.switch_workspaces(workspaces),\n-                        Task::PrimeCaches(progress) => {\n-                            if let PrimeCachesProgress::Started = progress {\n-                                prime_caches_started = true;\n+                        Task::PrimeCaches(progress) => match progress {\n+                            PrimeCachesProgress::Started => prime_caches_progress.push(progress),\n+                            PrimeCachesProgress::StartedOnCrate { .. } => {\n+                                match prime_caches_progress.last_mut() {\n+                                    Some(last @ PrimeCachesProgress::StartedOnCrate { .. }) => {\n+                                        // Coalesce subsequent update events.\n+                                        *last = progress;\n+                                    }\n+                                    _ => prime_caches_progress.push(progress),\n+                                }\n                             }\n-\n-                            prime_caches_progress = Some(progress);\n-                        }\n+                            PrimeCachesProgress::Finished => prime_caches_progress.push(progress),\n+                        },\n                     }\n                     // Coalesce multiple task events into one loop turn\n                     task = match self.task_pool.receiver.try_recv() {\n@@ -218,7 +223,7 @@ impl GlobalState {\n                     };\n                 }\n \n-                if let Some(progress) = prime_caches_progress {\n+                for progress in prime_caches_progress {\n                     let (state, message, fraction);\n                     match progress {\n                         PrimeCachesProgress::Started => {\n@@ -238,11 +243,6 @@ impl GlobalState {\n                         }\n                     };\n \n-                    if state != Progress::Begin && prime_caches_started {\n-                        // Progress indicator needs to be created first.\n-                        self.report_progress(\"indexing\", Progress::Begin, None, Some(0.0));\n-                    }\n-\n                     self.report_progress(\"indexing\", state, message, Some(fraction));\n                 }\n             }"}]}