{"sha": "34be1516aa0f308d68369fe756b10f3c87ef2e96", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0YmUxNTE2YWEwZjMwOGQ2ODM2OWZlNzU2YjEwZjNjODdlZjJlOTY=", "commit": {"author": {"name": "Mikhail Modin", "email": "mikhailm1@gmail.com", "date": "2017-11-13T12:46:22Z"}, "committer": {"name": "Mikhail Modin", "email": "mikhailm1@gmail.com", "date": "2017-11-15T08:21:05Z"}, "message": "fix comment, remove redundant code", "tree": {"sha": "15b6707371db6ffedaa1ba79db613e759cc68c7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15b6707371db6ffedaa1ba79db613e759cc68c7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34be1516aa0f308d68369fe756b10f3c87ef2e96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34be1516aa0f308d68369fe756b10f3c87ef2e96", "html_url": "https://github.com/rust-lang/rust/commit/34be1516aa0f308d68369fe756b10f3c87ef2e96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34be1516aa0f308d68369fe756b10f3c87ef2e96/comments", "author": {"login": "mikhail-m1", "id": 5663581, "node_id": "MDQ6VXNlcjU2NjM1ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/5663581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikhail-m1", "html_url": "https://github.com/mikhail-m1", "followers_url": "https://api.github.com/users/mikhail-m1/followers", "following_url": "https://api.github.com/users/mikhail-m1/following{/other_user}", "gists_url": "https://api.github.com/users/mikhail-m1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikhail-m1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikhail-m1/subscriptions", "organizations_url": "https://api.github.com/users/mikhail-m1/orgs", "repos_url": "https://api.github.com/users/mikhail-m1/repos", "events_url": "https://api.github.com/users/mikhail-m1/events{/privacy}", "received_events_url": "https://api.github.com/users/mikhail-m1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mikhail-m1", "id": 5663581, "node_id": "MDQ6VXNlcjU2NjM1ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/5663581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikhail-m1", "html_url": "https://github.com/mikhail-m1", "followers_url": "https://api.github.com/users/mikhail-m1/followers", "following_url": "https://api.github.com/users/mikhail-m1/following{/other_user}", "gists_url": "https://api.github.com/users/mikhail-m1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikhail-m1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikhail-m1/subscriptions", "organizations_url": "https://api.github.com/users/mikhail-m1/orgs", "repos_url": "https://api.github.com/users/mikhail-m1/repos", "events_url": "https://api.github.com/users/mikhail-m1/events{/privacy}", "received_events_url": "https://api.github.com/users/mikhail-m1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "830d65c1ffa2f19ada218d8a95b62042411b68a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/830d65c1ffa2f19ada218d8a95b62042411b68a7", "html_url": "https://github.com/rust-lang/rust/commit/830d65c1ffa2f19ada218d8a95b62042411b68a7"}], "stats": {"total": 24, "additions": 5, "deletions": 19}, "files": [{"sha": "c1320d9daa8a460679cc8355d8b40896328a5d88", "filename": "src/librustc_mir/dataflow/drop_flag_effects.rs", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/34be1516aa0f308d68369fe756b10f3c87ef2e96/src%2Flibrustc_mir%2Fdataflow%2Fdrop_flag_effects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34be1516aa0f308d68369fe756b10f3c87ef2e96/src%2Flibrustc_mir%2Fdataflow%2Fdrop_flag_effects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fdrop_flag_effects.rs?ref=34be1516aa0f308d68369fe756b10f3c87ef2e96", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use syntax_pos::DUMMY_SP;\n-\n use rustc::mir::{self, Mir, Location};\n use rustc::ty::{self, TyCtxt};\n use util::elaborate_drops::DropFlagState;\n@@ -187,23 +185,13 @@ pub(crate) fn drop_flag_effects_for_location<'a, 'gcx, 'tcx, F>(\n     where F: FnMut(MovePathIndex, DropFlagState)\n {\n     let move_data = &ctxt.move_data;\n-    let param_env = ctxt.param_env;\n     debug!(\"drop_flag_effects_for_location({:?})\", loc);\n \n     // first, move out of the RHS\n     for mi in &move_data.loc_map[loc] {\n         let path = mi.move_path_index(move_data);\n         debug!(\"moving out of path {:?}\", move_data.move_paths[path]);\n \n-        // don't move out of non-Copy things\n-        let lvalue = &move_data.move_paths[path].lvalue;\n-        let ty = lvalue.ty(mir, tcx).to_ty(tcx);\n-        let gcx = tcx.global_tcx();\n-        let erased_ty = gcx.lift(&tcx.erase_regions(&ty)).unwrap();\n-        if !erased_ty.moves_by_default(gcx, param_env, DUMMY_SP) {\n-            continue;\n-        }\n-\n         on_all_children_bits(tcx, mir, move_data,\n                              path,\n                              |mpi| callback(mpi, DropFlagState::Absent))\n@@ -231,13 +219,8 @@ pub(crate) fn drop_flag_effects_for_location<'a, 'gcx, 'tcx, F>(\n                     }\n                 }\n             }\n-            mir::StatementKind::StorageDead(local) => {\n-                on_lookup_result_bits(tcx, mir, move_data,\n-                                      move_data.rev_lookup.find(&mir::Lvalue::Local(local)),\n-                                      |mpi| callback(mpi, DropFlagState::Absent))\n-\n-            }\n             mir::StatementKind::StorageLive(_) |\n+            mir::StatementKind::StorageDead(_) |\n             mir::StatementKind::InlineAsm { .. } |\n             mir::StatementKind::EndRegion(_) |\n             mir::StatementKind::Validate(..) |"}, {"sha": "147f3d796b91cfd5e7fd77ed51082734014f39a9", "filename": "src/librustc_mir/dataflow/impls/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/34be1516aa0f308d68369fe756b10f3c87ef2e96/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34be1516aa0f308d68369fe756b10f3c87ef2e96/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs?ref=34be1516aa0f308d68369fe756b10f3c87ef2e96", "patch": "@@ -457,7 +457,10 @@ impl<'a, 'gcx, 'tcx> BitDenotation for MovingOutStatements<'a, 'gcx, 'tcx> {\n         let rev_lookup = &move_data.rev_lookup;\n \n         match stmt.kind {\n-            // skip move out for StorageDead\n+            // this analysis only tries to find moves explicitly\n+            // written by the user, so we ignore the move-outs\n+            // created by `StorageDead` and at the beginning\n+            // of a function.\n             mir::StatementKind::StorageDead(_) => {}\n             _ => {\n                 debug!(\"stmt {:?} at loc {:?} moves out of move_indexes {:?}\","}]}