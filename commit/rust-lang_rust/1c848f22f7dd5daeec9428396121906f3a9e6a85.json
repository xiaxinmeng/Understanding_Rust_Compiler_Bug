{"sha": "1c848f22f7dd5daeec9428396121906f3a9e6a85", "node_id": "C_kwDOAAsO6NoAKDFjODQ4ZjIyZjdkZDVkYWVlYzk0MjgzOTYxMjE5MDZmM2E5ZTZhODU", "commit": {"author": {"name": "Thom Chiovoloni", "email": "thom@shift.click", "date": "2023-03-06T02:03:36Z"}, "committer": {"name": "Thom Chiovoloni", "email": "thom@shift.click", "date": "2023-03-06T02:03:36Z"}, "message": "Add platform support documentation for x86_64h-apple-darwin", "tree": {"sha": "c3052110d0ddbe26b4852affe377775d48cdd1d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3052110d0ddbe26b4852affe377775d48cdd1d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c848f22f7dd5daeec9428396121906f3a9e6a85", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgMrDyZKNSLq6TEmWvPtNWv4vJNv\nay7sfrM7c6iOWHdh8AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQHtomDWLJDU8TpU4QIfwW4EOGva5o9QoQHTTrq+eklNLz2JHIzV84dwWNMfDsLTcC7\nbeNXBQrsthC6ZpyrCw+g0=\n-----END SSH SIGNATURE-----", "payload": "tree c3052110d0ddbe26b4852affe377775d48cdd1d7\nparent 9684c38450db1c1771d1fe71ce37862ad40f1578\nauthor Thom Chiovoloni <thom@shift.click> 1678068216 -0800\ncommitter Thom Chiovoloni <thom@shift.click> 1678068216 -0800\n\nAdd platform support documentation for x86_64h-apple-darwin\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c848f22f7dd5daeec9428396121906f3a9e6a85", "html_url": "https://github.com/rust-lang/rust/commit/1c848f22f7dd5daeec9428396121906f3a9e6a85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c848f22f7dd5daeec9428396121906f3a9e6a85/comments", "author": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9684c38450db1c1771d1fe71ce37862ad40f1578", "url": "https://api.github.com/repos/rust-lang/rust/commits/9684c38450db1c1771d1fe71ce37862ad40f1578", "html_url": "https://github.com/rust-lang/rust/commit/9684c38450db1c1771d1fe71ce37862ad40f1578"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "64197c0e27b7ea1000abaf17f1d5105eaae16e7f", "filename": "src/doc/rustc/src/SUMMARY.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1c848f22f7dd5daeec9428396121906f3a9e6a85/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/1c848f22f7dd5daeec9428396121906f3a9e6a85/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md?ref=1c848f22f7dd5daeec9428396121906f3a9e6a85", "patch": "@@ -40,6 +40,7 @@\n     - [wasm64-unknown-unknown](platform-support/wasm64-unknown-unknown.md)\n     - [x86_64-fortanix-unknown-sgx](platform-support/x86_64-fortanix-unknown-sgx.md)\n     - [x86_64-unknown-none](platform-support/x86_64-unknown-none.md)\n+    - [x86_64h-apple-darwin](platform-support/x86_64h-apple-darwin.md)\n - [Targets](targets/index.md)\n     - [Built-in Targets](targets/built-in.md)\n     - [Custom Targets](targets/custom.md)"}, {"sha": "29df3c7f1f1a0d0a9e6f3465cca510403ea2f6e4", "filename": "src/doc/rustc/src/platform-support.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1c848f22f7dd5daeec9428396121906f3a9e6a85/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "raw_url": "https://github.com/rust-lang/rust/raw/1c848f22f7dd5daeec9428396121906f3a9e6a85/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md?ref=1c848f22f7dd5daeec9428396121906f3a9e6a85", "patch": "@@ -322,5 +322,6 @@ target | std | host | notes\n `x86_64-uwp-windows-gnu` | \u2713 |  |\n `x86_64-uwp-windows-msvc` | \u2713 |  |\n `x86_64-wrs-vxworks` | ? |  |\n+`x86_64h-apple-darwin` | \u2713 | \u2713 | macOS with late-gen Intel (at least Haswell)\n \n [runs on NVIDIA GPUs]: https://github.com/japaric-archived/nvptx#targets"}, {"sha": "1a6f7bb834cf534169d8752f0024346ac6e93c45", "filename": "src/doc/rustc/src/platform-support/x86_64h-apple-darwin.md", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/1c848f22f7dd5daeec9428396121906f3a9e6a85/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Fx86_64h-apple-darwin.md", "raw_url": "https://github.com/rust-lang/rust/raw/1c848f22f7dd5daeec9428396121906f3a9e6a85/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Fx86_64h-apple-darwin.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Fx86_64h-apple-darwin.md?ref=1c848f22f7dd5daeec9428396121906f3a9e6a85", "patch": "@@ -0,0 +1,57 @@\n+# `x86_64h-apple-darwin`\n+\n+**Tier: 3**\n+\n+Target for macOS on late-generation `x86_64` Apple chips, usable as the\n+`x86_64h` entry in universal binaries, and equivalent to LLVM's\n+`x86_64h-apple-macosx*` targets.\n+\n+## Target maintainers\n+\n+- Thom Chiovoloni `thom@shift.click` <https://github.com/thomcc>\n+\n+## Requirements\n+\n+This target is an `x86_64` target that only supports Apple's late-gen\n+(Haswell-compatible) Intel chips. It enables a set of target features available\n+on these chips (AVX2 and similar), and MachO binaries built with this target may\n+be used as the `x86_64h` entry in universal binaries (\"fat\" MachO binaries), and\n+will fail to load on machines that do not support this.\n+\n+It should support the full standard library (`std` and `alloc` either with\n+default or user-defined allocators). This target is probably most useful when\n+targetted via cross-compilation (including from `x86_64-apple-darwin`), but if\n+built manually, the host tools work.\n+\n+It is similar to `x86_64-apple-darwin` in nearly all respects, although the\n+minimum supported OS version is slightly higher (it requires 10.8 rather than\n+`x86_64-apple-darwin`'s 10.7).\n+\n+## Building the target\n+\n+Users on Apple targets can build this by adding it to the `target` list in\n+`config.toml`, or with `-Zbuild-std`.\n+\n+## Building Rust programs\n+\n+Rust does not yet ship pre-compiled artifacts for this target. To compile for\n+this target, you will either need to build Rust with the target enabled (see\n+\"Building the target\" above), or build your own copy of `core` by using\n+`build-std` or similar.\n+\n+## Testing\n+\n+Code built with this target can be run on the set of Intel macOS machines that\n+support running `x86_64h` binaries (relatively recent Intel macs). The Rust test\n+suite seems to work.\n+\n+## Cross-compilation toolchains and C code\n+\n+Cross-compilation to this target from Apple hosts should generally work without\n+much configuration, so long as XCode and the CommandLineTools are installed.\n+Targetting it from non-Apple hosts is difficult, but no moreso than targetting\n+`x86_64-apple-darwin`.\n+\n+When compiling C code for this target, either the \"`x86_64h-apple-macosx*`\" LLVM\n+targets should be used, or an argument like `-arch x86_64h` should be passed to\n+the C compiler."}]}