{"sha": "4ee8d847e5f411e178fa5224d16dae38affb9392", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlZThkODQ3ZTVmNDExZTE3OGZhNTIyNGQxNmRhZTM4YWZmYjkzOTI=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-07-14T02:28:26Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-07-28T03:19:16Z"}, "message": "Use --stage 2 explicitly in CI\n\n- expand yaml anchors\n- don't use --stage 2 for dist; that's already the default", "tree": {"sha": "21bde90e3dbad706379304dabb9070ebdc35ba22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21bde90e3dbad706379304dabb9070ebdc35ba22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ee8d847e5f411e178fa5224d16dae38affb9392", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ee8d847e5f411e178fa5224d16dae38affb9392", "html_url": "https://github.com/rust-lang/rust/commit/4ee8d847e5f411e178fa5224d16dae38affb9392", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ee8d847e5f411e178fa5224d16dae38affb9392/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdca33754771e6b10e9399c8d7780e391963305e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdca33754771e6b10e9399c8d7780e391963305e", "html_url": "https://github.com/rust-lang/rust/commit/cdca33754771e6b10e9399c8d7780e391963305e"}], "stats": {"total": 72, "additions": 36, "deletions": 36}, "files": [{"sha": "9b35208bf320c6700f2022c52986f5aadc0550f0", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -406,15 +406,15 @@ jobs:\n             os: windows-latest-xl\n           - name: x86_64-msvc-cargo\n             env:\n-              SCRIPT: python x.py test src/tools/cargotest src/tools/cargo\n+              SCRIPT: python x.py --stage 2 test src/tools/cargotest src/tools/cargo\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-msvc --enable-lld\"\n               VCVARS_BAT: vcvars64.bat\n               NO_DEBUG_ASSERTIONS: 1\n               NO_LLVM_ASSERTIONS: 1\n             os: windows-latest-xl\n           - name: x86_64-msvc-tools\n             env:\n-              SCRIPT: src/ci/docker/host-x86_64/x86_64-gnu-tools/checktools.sh x.py /tmp/toolstate/toolstates.json windows\n+              SCRIPT: src/ci/docker/host-x86_64/x86_64-gnu-tools/checktools.sh x.py --stage 2 /tmp/toolstate/toolstates.json windows\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-msvc --save-toolstates=/tmp/toolstate/toolstates.json\"\n             os: windows-latest-xl\n           - name: i686-mingw-1\n@@ -598,7 +598,7 @@ jobs:\n             os: macos-latest\n           - name: x86_64-apple\n             env:\n-              SCRIPT: \"./x.py test\"\n+              SCRIPT: \"./x.py --stage 2 test\"\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\"\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.8"}, {"sha": "2185b0d30dbde350c3ae25708d9388970b408768", "filename": "src/ci/azure-pipelines/auto.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fazure-pipelines%2Fauto.yml", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fazure-pipelines%2Fauto.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fauto.yml?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -36,7 +36,7 @@ jobs:\n       # Note that the compiler is compiled to target 10.8 here because the Xcode\n       # version that we're using, 8.2, cannot compile LLVM for OSX 10.7.\n       x86_64-apple:\n-        SCRIPT: ./x.py test\n+        SCRIPT: ./x.py --stage 2 test\n         INITIAL_RUST_CONFIGURE_ARGS: --build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\n         RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n         MACOSX_DEPLOYMENT_TARGET: 10.8"}, {"sha": "b6cf60a5e15a7b11aa31b4a60fb241ab4d4df2f9", "filename": "src/ci/docker/host-aarch64/aarch64-gnu/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-aarch64%2Faarch64-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-aarch64%2Faarch64-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-aarch64%2Faarch64-gnu%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -23,4 +23,4 @@ ENV RUST_CONFIGURE_ARGS \\\n  --enable-sanitizers \\\n  --enable-profiler \\\n  --enable-compiler-docs\n-ENV SCRIPT python3 ../x.py test\n+ENV SCRIPT python3 ../x.py --stage 2 test"}, {"sha": "add2647fa1e65c503abe0514981dd062d02d12de", "filename": "src/ci/docker/host-x86_64/arm-android/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Farm-android%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Farm-android%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Farm-android%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -31,7 +31,7 @@ ENV TARGETS=arm-linux-androideabi\n \n ENV RUST_CONFIGURE_ARGS --arm-linux-androideabi-ndk=/android/ndk/arm-14\n \n-ENV SCRIPT python3 ../x.py test --target $TARGETS\n+ENV SCRIPT python3 ../x.py --stage 2 test --target $TARGETS\n \n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh"}, {"sha": "1f3092c5513d956c21c9885a9d81c30dbbb30900", "filename": "src/ci/docker/host-x86_64/armhf-gnu/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Farmhf-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Farmhf-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Farmhf-gnu%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -78,6 +78,6 @@ COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n ENV RUST_CONFIGURE_ARGS --qemu-armhf-rootfs=/tmp/rootfs\n-ENV SCRIPT python3 ../x.py test --target arm-unknown-linux-gnueabihf\n+ENV SCRIPT python3 ../x.py --stage 2 test --target arm-unknown-linux-gnueabihf\n \n ENV NO_CHANGE_USER=1"}, {"sha": "a4d9f53ebabef1c3d32a4b07329f1de6e5abd9eb", "filename": "src/ci/docker/host-x86_64/disabled/asmjs/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdisabled%2Fasmjs%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdisabled%2Fasmjs%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdisabled%2Fasmjs%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -33,7 +33,7 @@ ENV EMCC_CFLAGS=-O1\n # Emscripten installation is user-specific\n ENV NO_CHANGE_USER=1\n \n-ENV SCRIPT python3 ../x.py test --target $TARGETS\n+ENV SCRIPT python3 ../x.py --stage 2 test --target $TARGETS\n \n # This is almost identical to the wasm32-unknown-emscripten target, so\n # running with assertions again is not useful"}, {"sha": "f986c38ea02da913313c0760d701288aba98f81a", "filename": "src/ci/docker/host-x86_64/disabled/dist-armv7-android/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdisabled%2Fdist-armv7-android%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdisabled%2Fdist-armv7-android%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdisabled%2Fdist-armv7-android%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -33,7 +33,7 @@ ENV RUST_CONFIGURE_ARGS \\\n # build to finish we use --warn-unresolved-symbols. Note that the missing\n # symbols does not affect std, only the compiler (llvm) and cargo (openssl).\n ENV SCRIPT \\\n-  python3 ../x.py build src/llvm --host $HOSTS --target $HOSTS && \\\n+  python3 ../x.py --stage 2 build src/llvm --host $HOSTS --target $HOSTS && \\\n   (export RUSTFLAGS=\"\\\"-C link-arg=-Wl,--warn-unresolved-symbols\\\"\"; \\\n     rm /android/ndk/arm && \\\n     ln -s /android/ndk/arm-14 /android/ndk/arm && \\"}, {"sha": "4dfbc72560783f4d9a6229fd7f222b5cced9f934", "filename": "src/ci/docker/host-x86_64/disabled/dist-i686-android/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdisabled%2Fdist-i686-android%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdisabled%2Fdist-i686-android%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdisabled%2Fdist-i686-android%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -33,7 +33,7 @@ ENV RUST_CONFIGURE_ARGS \\\n # build to finish we use --warn-unresolved-symbols. Note that the missing\n # symbols does not affect std, only the compiler (llvm) and cargo (openssl).\n ENV SCRIPT \\\n-  python3 ../x.py build src/llvm --host $HOSTS --target $HOSTS && \\\n+  python3 ../x.py --stage 2 build src/llvm --host $HOSTS --target $HOSTS && \\\n   (export RUSTFLAGS=\"\\\"-C link-arg=-Wl,--warn-unresolved-symbols\\\"\"; \\\n     rm /android/ndk/x86 && \\\n     ln -s /android/ndk/x86-14 /android/ndk/x86 && \\"}, {"sha": "e3c35000eb818086cc67c4cd0e77dc83bbc46c91", "filename": "src/ci/docker/host-x86_64/disabled/riscv64gc-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdisabled%2Friscv64gc-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdisabled%2Friscv64gc-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdisabled%2Friscv64gc-linux%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -97,6 +97,6 @@ COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n ENV RUST_CONFIGURE_ARGS --qemu-riscv64-rootfs=/tmp/rootfs\n-ENV SCRIPT python3 ../x.py test --target riscv64gc-unknown-linux-gnu\n+ENV SCRIPT python3 ../x.py --stage 2 test --target riscv64gc-unknown-linux-gnu\n \n ENV NO_CHANGE_USER=1"}, {"sha": "162d7a1345ce1cb64f9b192b292da68f8d76abaf", "filename": "src/ci/docker/host-x86_64/dist-i586-gnu-i586-i686-musl/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-i586-gnu-i586-i686-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-i586-gnu-i586-i686-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-i586-gnu-i586-i686-musl%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -46,5 +46,5 @@ ENV CFLAGS_i586_unknown_linux_musl=-Wa,-mrelax-relocations=no\n ENV TARGETS=i586-unknown-linux-gnu,i686-unknown-linux-musl\n \n ENV SCRIPT \\\n-      python3 ../x.py test --target $TARGETS && \\\n+      python3 ../x.py --stage 2 test --target $TARGETS && \\\n       python3 ../x.py dist --target $TARGETS,i586-unknown-linux-musl"}, {"sha": "fdd777e824ba89c5433e50ea6ff4d85837d6de59", "filename": "src/ci/docker/host-x86_64/dist-various-1/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-1%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -192,7 +192,7 @@ ENV RUST_CONFIGURE_ARGS \\\n       --disable-docs\n \n ENV SCRIPT \\\n-      python3 ../x.py test --target $RUN_MAKE_TARGETS src/test/run-make && \\\n+      python3 ../x.py --stage 2 test --target $RUN_MAKE_TARGETS src/test/run-make && \\\n       python3 ../x.py dist --target $TARGETS\n \n # sccache"}, {"sha": "6a596b3465f20da7e0b22843b63871fb89c1daf9", "filename": "src/ci/docker/host-x86_64/i686-gnu-nopt/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu-nopt%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu-nopt%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu-nopt%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -20,7 +20,7 @@ COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n ENV RUST_CONFIGURE_ARGS --build=i686-unknown-linux-gnu --disable-optimize-tests\n-ENV SCRIPT python3 ../x.py test\n+ENV SCRIPT python3 ../x.py --stage 2 test\n \n # FIXME(#59637) takes too long on CI right now\n ENV NO_LLVM_ASSERTIONS=1 NO_DEBUG_ASSERTIONS=1"}, {"sha": "9d319017d7967cbc0c9ccdc18846b561a333a74e", "filename": "src/ci/docker/host-x86_64/i686-gnu/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -22,7 +22,7 @@ RUN sh /scripts/sccache.sh\n ENV RUST_CONFIGURE_ARGS --build=i686-unknown-linux-gnu\n # Exclude some tests that are unlikely to be platform specific, to speed up\n # this slow job.\n-ENV SCRIPT python3 ../x.py test \\\n+ENV SCRIPT python3 ../x.py --stage 2 test \\\n   --exclude src/bootstrap \\\n   --exclude src/test/rustdoc-js \\\n   --exclude src/tools/error_index_generator \\"}, {"sha": "b902eda87bc6ec9bd3c2d7b6b23a129be73f3b31", "filename": "src/ci/docker/host-x86_64/mingw-check/Dockerfile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fmingw-check%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fmingw-check%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fmingw-check%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -22,10 +22,10 @@ RUN sh /scripts/sccache.sh\n COPY host-x86_64/mingw-check/validate-toolstate.sh /scripts/\n \n ENV RUN_CHECK_WITH_PARALLEL_QUERIES 1\n-ENV SCRIPT python3 ../x.py test src/tools/expand-yaml-anchors && \\\n+ENV SCRIPT python3 ../x.py --stage 2 test src/tools/expand-yaml-anchors && \\\n            python3 ../x.py check --target=i686-pc-windows-gnu --host=i686-pc-windows-gnu && \\\n            python3 ../x.py build --stage 0 src/tools/build-manifest && \\\n            python3 ../x.py test --stage 0 src/tools/compiletest && \\\n-           python3 ../x.py test src/tools/tidy && \\\n+           python3 ../x.py test --stage 2 src/tools/tidy && \\\n            python3 ../x.py doc --stage 0 library/std && \\\n            /scripts/validate-toolstate.sh"}, {"sha": "c55a284e137b34454e4c0914b6ea103167216254", "filename": "src/ci/docker/host-x86_64/test-various/Dockerfile", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Ftest-various%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Ftest-various%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Ftest-various%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -40,7 +40,7 @@ ENV RUST_CONFIGURE_ARGS \\\n ENV NO_DEBUG_ASSERTIONS=1\n \n ENV WASM_TARGETS=wasm32-unknown-unknown\n-ENV WASM_SCRIPT python3 /checkout/x.py test --target $WASM_TARGETS \\\n+ENV WASM_SCRIPT python3 /checkout/x.py --stage 2 test --target $WASM_TARGETS \\\n   src/test/run-make \\\n   src/test/ui \\\n   src/test/compile-fail \\\n@@ -49,13 +49,13 @@ ENV WASM_SCRIPT python3 /checkout/x.py test --target $WASM_TARGETS \\\n   library/core\n \n ENV NVPTX_TARGETS=nvptx64-nvidia-cuda\n-ENV NVPTX_SCRIPT python3 /checkout/x.py test --target $NVPTX_TARGETS \\\n+ENV NVPTX_SCRIPT python3 /checkout/x.py --stage 2 test --target $NVPTX_TARGETS \\\n   src/test/run-make \\\n   src/test/assembly\n \n ENV MUSL_TARGETS=x86_64-unknown-linux-musl \\\n     CC_x86_64_unknown_linux_musl=x86_64-linux-musl-gcc \\\n     CXX_x86_64_unknown_linux_musl=x86_64-linux-musl-g++\n-ENV MUSL_SCRIPT python3 /checkout/x.py test --target $MUSL_TARGETS\n+ENV MUSL_SCRIPT python3 /checkout/x.py --stage 2 test --target $MUSL_TARGETS\n \n ENV SCRIPT $WASM_SCRIPT && $NVPTX_SCRIPT && $MUSL_SCRIPT"}, {"sha": "e00177b4a67c9a979d104d956f98449f5bac7622", "filename": "src/ci/docker/host-x86_64/wasm32/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fwasm32%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fwasm32%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fwasm32%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -52,7 +52,7 @@ ENV NO_CHANGE_USER=1\n \n # FIXME: Re-enable these tests once https://github.com/rust-lang/cargo/pull/7476\n # is picked up by CI\n-ENV SCRIPT python3 ../x.py test --target $TARGETS \\\n+ENV SCRIPT python3 ../x.py test --stage 2 --target $TARGETS \\\n     --exclude library/core \\\n     --exclude library/alloc \\\n     --exclude library/proc_macro \\"}, {"sha": "c1cb20b631d319d20a4a35845860366ae577588a", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-debug/Dockerfile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-debug%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-debug%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-debug%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -40,5 +40,5 @@ ENV RUST_CONFIGURE_ARGS \\\n       --set target.x86_64-unknown-linux-gnu.cxx=clang++\n \n ENV SCRIPT \\\n-  python3 ../x.py build && \\\n-  python3 ../x.py test src/test/run-make-fulldeps --test-args clang\n+  python3 ../x.py --stage 2 build && \\\n+  python3 ../x.py --stage 2 test src/test/run-make-fulldeps --test-args clang"}, {"sha": "68e89a7bade342b09d849945c053d00f44b95731", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-distcheck/Dockerfile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-distcheck%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-distcheck%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-distcheck%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -19,10 +19,10 @@ COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu --set rust.ignore-git=false\n-ENV SCRIPT python3 ../x.py test distcheck\n+ENV SCRIPT python3 ../x.py --stage 2 test distcheck\n ENV DIST_SRC 1\n \n-# The purpose of this builder is to test that we can `./x.py test` successfully\n+# The purpose of this builder is to test that we can `./x.py --stage 2 test` successfully\n # from a tarball, not to test LLVM/rustc's own set of assertions. These cause a\n # significant hit to CI compile time (over a half hour as observed in #61185),\n # so disable assertions for this builder."}, {"sha": "8648e5ed7a4866e377d0fee584d6fdf189c80e01", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-full-bootstrap/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-full-bootstrap%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-full-bootstrap%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-full-bootstrap%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -21,7 +21,7 @@ RUN sh /scripts/sccache.sh\n ENV RUST_CONFIGURE_ARGS \\\n       --build=x86_64-unknown-linux-gnu \\\n       --enable-full-bootstrap\n-ENV SCRIPT python3 ../x.py build\n+ENV SCRIPT python3 ../x.py --stage 2 build\n \n # In general this just slows down the build and we're just a smoke test that\n # a full bootstrap works in general, so there's not much need to take this"}, {"sha": "5c971c73c97d3485ae5ce4811b603b26f5dfea87", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-llvm-8/Dockerfile", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-8%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-8%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-8%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -30,7 +30,7 @@ ENV RUST_CONFIGURE_ARGS \\\n       --enable-llvm-link-shared \\\n       --set rust.thin-lto-import-instr-limit=10\n \n-ENV SCRIPT python2.7 ../x.py test --exclude src/tools/tidy && \\\n+ENV SCRIPT python2.7 ../x.py --stage 2 test --exclude src/tools/tidy && \\\n            # Run the `mir-opt` tests again but this time for a 32-bit target.\n            # This enforces that tests using `// EMIT_MIR_FOR_EACH_BIT_WIDTH` have\n            # both 32-bit and 64-bit outputs updated by the PR author, before\n@@ -43,7 +43,7 @@ ENV SCRIPT python2.7 ../x.py test --exclude src/tools/tidy && \\\n            # This also requires `--pass=build` because we can't execute the tests\n            # on the `x86_64` host when they're built as `armv5te` binaries.\n            # (we're only interested in the MIR output, so this doesn't matter)\n-           python2.7 ../x.py test src/test/mir-opt --pass=build \\\n+           python2.7 ../x.py --stage 2 test src/test/mir-opt --pass=build \\\n                                   --target=armv5te-unknown-linux-gnueabi && \\\n            # Run the UI test suite again, but in `--pass=check` mode\n            #\n@@ -53,9 +53,9 @@ ENV SCRIPT python2.7 ../x.py test --exclude src/tools/tidy && \\\n            # FIXME: We ideally want to test this in 32-bit mode, but currently\n            # (due to the LLVM problems mentioned above) that isn't readily\n            # possible.\n-           python2.7 ../x.py test src/test/ui --pass=check && \\\n+           python2.7 ../x.py --stage 2 test src/test/ui --pass=check && \\\n            # Run tidy at the very end, after all the other tests.\n-           python2.7 ../x.py test src/tools/tidy\n+           python2.7 ../x.py --stage 2 test src/tools/tidy\n \n # The purpose of this container isn't to test with debug assertions and\n # this is run on all PRs, so let's get speedier builds by disabling these extra"}, {"sha": "fa769cac9c1da8ec7a8241049056dc1a193287fe", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-nopt/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-nopt%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-nopt%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-nopt%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -21,4 +21,4 @@ RUN sh /scripts/sccache.sh\n ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu \\\n   --disable-optimize-tests \\\n   --set rust.test-compare-mode\n-ENV SCRIPT python3 ../x.py test\n+ENV SCRIPT python3 ../x.py --stage 2 test"}, {"sha": "e99b3f6ec37fa2634f2e461cf00a631fb25ff936", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-tools/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -22,4 +22,4 @@ COPY host-x86_64/x86_64-gnu-tools/checktools.sh /tmp/\n ENV RUST_CONFIGURE_ARGS \\\n   --build=x86_64-unknown-linux-gnu \\\n   --save-toolstates=/tmp/toolstate/toolstates.json\n-ENV SCRIPT /tmp/checktools.sh ../x.py\n+ENV SCRIPT /tmp/checktools.sh ../x.py --stage 2"}, {"sha": "f8bacf79ac0dccea249b20a2aeaa55ed14e38f9e", "filename": "src/ci/docker/host-x86_64/x86_64-gnu/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu%2FDockerfile?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -23,4 +23,4 @@ ENV RUST_CONFIGURE_ARGS \\\n  --enable-sanitizers \\\n  --enable-profiler \\\n  --enable-compiler-docs\n-ENV SCRIPT python3 ../x.py test\n+ENV SCRIPT python3 ../x.py --stage 2 test"}, {"sha": "b31f00c0322fec252ef4f17046905a181408f0b7", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8d847e5f411e178fa5224d16dae38affb9392/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=4ee8d847e5f411e178fa5224d16dae38affb9392", "patch": "@@ -471,7 +471,7 @@ jobs:\n \n           - name: x86_64-msvc-cargo\n             env:\n-              SCRIPT: python x.py test src/tools/cargotest src/tools/cargo\n+              SCRIPT: python x.py --stage 2 test src/tools/cargotest src/tools/cargo\n               RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-lld\n               VCVARS_BAT: vcvars64.bat\n               # FIXME(#59637)\n@@ -481,7 +481,7 @@ jobs:\n \n           - name: x86_64-msvc-tools\n             env:\n-              SCRIPT: src/ci/docker/host-x86_64/x86_64-gnu-tools/checktools.sh x.py /tmp/toolstate/toolstates.json windows\n+              SCRIPT: src/ci/docker/host-x86_64/x86_64-gnu-tools/checktools.sh x.py --stage 2 /tmp/toolstate/toolstates.json windows\n               RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --save-toolstates=/tmp/toolstate/toolstates.json\n             <<: *job-windows-xl\n \n@@ -613,7 +613,7 @@ jobs:\n \n           - name: x86_64-apple\n             env:\n-              SCRIPT: ./x.py test\n+              SCRIPT: ./x.py --stage 2 test\n               RUST_CONFIGURE_ARGS: --build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.8"}]}