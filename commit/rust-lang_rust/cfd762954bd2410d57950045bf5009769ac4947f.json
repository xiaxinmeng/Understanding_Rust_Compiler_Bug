{"sha": "cfd762954bd2410d57950045bf5009769ac4947f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmZDc2Mjk1NGJkMjQxMGQ1Nzk1MDA0NWJmNTAwOTc2OWFjNDk0N2Y=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-11-11T16:46:04Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-11-18T10:57:03Z"}, "message": "resolve: Tweak some articles in ambiguity diagnostics", "tree": {"sha": "20c581eeff67d11b45234c6fd44b22a5aa66e99b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20c581eeff67d11b45234c6fd44b22a5aa66e99b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfd762954bd2410d57950045bf5009769ac4947f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfd762954bd2410d57950045bf5009769ac4947f", "html_url": "https://github.com/rust-lang/rust/commit/cfd762954bd2410d57950045bf5009769ac4947f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfd762954bd2410d57950045bf5009769ac4947f/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfe81559ee970b99e45a73af02ba4837cb30b6db", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfe81559ee970b99e45a73af02ba4837cb30b6db", "html_url": "https://github.com/rust-lang/rust/commit/cfe81559ee970b99e45a73af02ba4837cb30b6db"}], "stats": {"total": 136, "additions": 68, "deletions": 68}, "files": [{"sha": "257964cba1c0d406640efc75343dc77d61a5987a", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -406,13 +406,13 @@ fn resolve_struct_error<'sess, 'a>(resolver: &'sess Resolver,\n             err\n         }\n         ResolutionError::BindingShadowsSomethingUnacceptable(what_binding, name, binding) => {\n-            let (shadows_what, article) = (binding.descr(), binding.article());\n+            let shadows_what = binding.descr();\n             let mut err = struct_span_err!(resolver.session, span, E0530, \"{}s cannot shadow {}s\",\n                                            what_binding, shadows_what);\n             err.span_label(span, format!(\"cannot be named the same as {} {}\",\n-                                         article, shadows_what));\n+                                         binding.article(), shadows_what));\n             let participle = if binding.is_import() { \"imported\" } else { \"defined\" };\n-            let msg = format!(\"{} {} `{}` is {} here\", article, shadows_what, name, participle);\n+            let msg = format!(\"the {} `{}` is {} here\", shadows_what, name, participle);\n             err.span_label(binding.span, msg);\n             err\n         }\n@@ -4788,11 +4788,11 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n                                         `{ident}` to disambiguate\", ident = ident))\n             }\n             if b.is_extern_crate() && self.session.rust_2018() {\n-                help_msgs.push(format!(\"use `::{ident}` to refer to the {thing} unambiguously\",\n+                help_msgs.push(format!(\"use `::{ident}` to refer to this {thing} unambiguously\",\n                                        ident = ident, thing = b.descr()))\n             }\n             if misc == AmbiguityErrorMisc::SuggestSelf {\n-                help_msgs.push(format!(\"use `self::{ident}` to refer to the {thing} unambiguously\",\n+                help_msgs.push(format!(\"use `self::{ident}` to refer to this {thing} unambiguously\",\n                                        ident = ident, thing = b.descr()))\n             }\n "}, {"sha": "ee98873064fc4a6253c7a348337cf31a5456ad23", "filename": "src/test/ui-fulldeps/custom-derive/helper-attr-blocked-by-import-ambig.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fhelper-attr-blocked-by-import-ambig.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fhelper-attr-blocked-by-import-ambig.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fhelper-attr-blocked-by-import-ambig.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -14,7 +14,7 @@ note: `helper` could also refer to the attribute macro imported here\n    |\n LL | use plugin::helper;\n    |     ^^^^^^^^^^^^^^\n-   = help: use `self::helper` to refer to the attribute macro unambiguously\n+   = help: use `self::helper` to refer to this attribute macro unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "34b21ea26830c1e7458722e7e9486bb29aeac167", "filename": "src/test/ui-fulldeps/proc-macro/ambiguous-builtin-attrs.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fambiguous-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fambiguous-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fambiguous-builtin-attrs.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -16,7 +16,7 @@ note: `repr` could also refer to the attribute macro imported here\n    |\n LL | use builtin_attrs::*;\n    |     ^^^^^^^^^^^^^^^^\n-   = help: use `self::repr` to refer to the attribute macro unambiguously\n+   = help: use `self::repr` to refer to this attribute macro unambiguously\n \n error[E0659]: `repr` is ambiguous (built-in attribute vs any other name)\n   --> $DIR/ambiguous-builtin-attrs.rs:11:19\n@@ -30,7 +30,7 @@ note: `repr` could also refer to the attribute macro imported here\n    |\n LL | use builtin_attrs::*;\n    |     ^^^^^^^^^^^^^^^^\n-   = help: use `self::repr` to refer to the attribute macro unambiguously\n+   = help: use `self::repr` to refer to this attribute macro unambiguously\n \n error[E0659]: `repr` is ambiguous (built-in attribute vs any other name)\n   --> $DIR/ambiguous-builtin-attrs.rs:20:34\n@@ -44,7 +44,7 @@ note: `repr` could also refer to the attribute macro imported here\n    |\n LL | use builtin_attrs::*;\n    |     ^^^^^^^^^^^^^^^^\n-   = help: use `self::repr` to refer to the attribute macro unambiguously\n+   = help: use `self::repr` to refer to this attribute macro unambiguously\n \n error[E0659]: `repr` is ambiguous (built-in attribute vs any other name)\n   --> $DIR/ambiguous-builtin-attrs.rs:22:11\n@@ -58,7 +58,7 @@ note: `repr` could also refer to the attribute macro imported here\n    |\n LL | use builtin_attrs::*;\n    |     ^^^^^^^^^^^^^^^^\n-   = help: use `self::repr` to refer to the attribute macro unambiguously\n+   = help: use `self::repr` to refer to this attribute macro unambiguously\n \n error[E0659]: `feature` is ambiguous (built-in attribute vs any other name)\n   --> $DIR/ambiguous-builtin-attrs.rs:3:4\n@@ -72,7 +72,7 @@ note: `feature` could also refer to the attribute macro imported here\n    |\n LL | use builtin_attrs::*;\n    |     ^^^^^^^^^^^^^^^^\n-   = help: use `self::feature` to refer to the attribute macro unambiguously\n+   = help: use `self::feature` to refer to this attribute macro unambiguously\n \n error: aborting due to 6 previous errors\n "}, {"sha": "f04782fac4d2d6d9b5ca44075f9d3d8493c23580", "filename": "src/test/ui-fulldeps/proc-macro/derive-helper-shadowing.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fderive-helper-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fderive-helper-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fderive-helper-shadowing.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -14,7 +14,7 @@ note: `my_attr` could also refer to the attribute macro imported here\n    |\n LL | use derive_helper_shadowing::*;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = help: use `self::my_attr` to refer to the attribute macro unambiguously\n+   = help: use `self::my_attr` to refer to this attribute macro unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "3708aa36089693c08aad9a6e8a3171bf2c471bc6", "filename": "src/test/ui/empty/empty-struct-tuple-pat.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -2,7 +2,7 @@ error[E0530]: match bindings cannot shadow tuple structs\n   --> $DIR/empty-struct-tuple-pat.rs:32:9\n    |\n LL | struct Empty2();\n-   | ---------------- a tuple struct `Empty2` is defined here\n+   | ---------------- the tuple struct `Empty2` is defined here\n ...\n LL |         Empty2 => () //~ ERROR match bindings cannot shadow tuple structs\n    |         ^^^^^^ cannot be named the same as a tuple struct\n@@ -11,7 +11,7 @@ error[E0530]: match bindings cannot shadow tuple structs\n   --> $DIR/empty-struct-tuple-pat.rs:35:9\n    |\n LL | use empty_struct::*;\n-   |     --------------- a tuple struct `XEmpty6` is imported here\n+   |     --------------- the tuple struct `XEmpty6` is imported here\n ...\n LL |         XEmpty6 => () //~ ERROR match bindings cannot shadow tuple structs\n    |         ^^^^^^^ cannot be named the same as a tuple struct"}, {"sha": "b294aabb4edb9e48aaa5c0841c4ef5450d67d4c7", "filename": "src/test/ui/enum/enum-in-scope.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fenum%2Fenum-in-scope.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fenum%2Fenum-in-scope.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum%2Fenum-in-scope.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -2,7 +2,7 @@ error[E0530]: let bindings cannot shadow tuple structs\n   --> $DIR/enum-in-scope.rs:14:9\n    |\n LL | struct hello(isize);\n-   | -------------------- a tuple struct `hello` is defined here\n+   | -------------------- the tuple struct `hello` is defined here\n ...\n LL |     let hello = 0; //~ERROR let bindings cannot shadow tuple structs\n    |         ^^^^^ cannot be named the same as a tuple struct"}, {"sha": "96bc47a1afecfa595b8c1794a7bd8b21b69e62df", "filename": "src/test/ui/error-codes/E0530.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Ferror-codes%2FE0530.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Ferror-codes%2FE0530.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0530.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -2,7 +2,7 @@ error[E0530]: match bindings cannot shadow statics\n   --> $DIR/E0530.rs:16:9\n    |\n LL |     static TEST: i32 = 0;\n-   |     --------------------- a static `TEST` is defined here\n+   |     --------------------- the static `TEST` is defined here\n ...\n LL |         TEST => {} //~ ERROR E0530\n    |         ^^^^ cannot be named the same as a static"}, {"sha": "6a4774facd77c79ea233452eecadf7662df4570d", "filename": "src/test/ui/imports/glob-shadowing.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fimports%2Fglob-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fimports%2Fglob-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fglob-shadowing.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -11,7 +11,7 @@ note: `env` could also refer to the macro imported here\n LL |     use m::*;\n    |         ^^^^\n    = help: consider adding an explicit import of `env` to disambiguate\n-   = help: or use `self::env` to refer to the macro unambiguously\n+   = help: or use `self::env` to refer to this macro unambiguously\n \n error[E0659]: `env` is ambiguous (glob import vs any other name from outer scope during import/macro resolution)\n   --> $DIR/glob-shadowing.rs:29:21\n@@ -44,7 +44,7 @@ note: `fenv` could also refer to the macro defined here\n    |\n LL |     pub macro fenv($e: expr) { $e }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = help: use `self::fenv` to refer to the macro unambiguously\n+   = help: use `self::fenv` to refer to this macro unambiguously\n \n error: aborting due to 3 previous errors\n "}, {"sha": "781595212f8c4479935f38dbdd14b2af539196b1", "filename": "src/test/ui/imports/issue-53269.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fimports%2Fissue-53269.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fimports%2Fissue-53269.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-53269.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -20,7 +20,7 @@ note: `mac` could also refer to the unresolved item imported here\n    |\n LL |     use nonexistent_module::mac; //~ ERROR unresolved import `nonexistent_module`\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n-   = help: use `self::mac` to refer to the unresolved item unambiguously\n+   = help: use `self::mac` to refer to this unresolved item unambiguously\n \n error: aborting due to 2 previous errors\n "}, {"sha": "962294e48caef9a999dca37758ad41412915d3d4", "filename": "src/test/ui/imports/local-modularized-tricky-fail-1.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -38,7 +38,7 @@ LL | |     }\n ...\n LL |       define_include!();\n    |       ------------------ in this macro invocation\n-   = help: use `self::include` to refer to the macro unambiguously\n+   = help: use `self::include` to refer to this macro unambiguously\n \n error[E0659]: `panic` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n   --> $DIR/local-modularized-tricky-fail-1.rs:45:5\n@@ -57,7 +57,7 @@ LL | |     }\n ...\n LL |       define_panic!();\n    |       ---------------- in this macro invocation\n-   = help: use `self::panic` to refer to the macro unambiguously\n+   = help: use `self::panic` to refer to this macro unambiguously\n \n error[E0659]: `panic` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n   --> <::std::macros::panic macros>:1:13\n@@ -76,7 +76,7 @@ LL | |     }\n ...\n LL |       define_panic!();\n    |       ---------------- in this macro invocation\n-   = help: use `self::panic` to refer to the macro unambiguously\n+   = help: use `self::panic` to refer to this macro unambiguously\n \n error: aborting due to 4 previous errors\n "}, {"sha": "8e8742f849bf07516564da3b00e5999f7b4dcda7", "filename": "src/test/ui/imports/macro-paths.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fimports%2Fmacro-paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fimports%2Fmacro-paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fmacro-paths.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -34,7 +34,7 @@ LL | / pub mod baz {\n LL | |     pub use two_macros::m;\n LL | | }\n    | |_^\n-   = help: use `self::baz` to refer to the module unambiguously\n+   = help: use `self::baz` to refer to this module unambiguously\n \n error: aborting due to 2 previous errors\n "}, {"sha": "77a0311fa6055e93e6f7909d552cb236d5c46d0e", "filename": "src/test/ui/imports/macros.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fimports%2Fmacros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fimports%2Fmacros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fmacros.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -32,7 +32,7 @@ note: `m` could also refer to the macro imported here\n    |\n LL |     use two_macros::m;\n    |         ^^^^^^^^^^^^^\n-   = help: use `self::m` to refer to the macro unambiguously\n+   = help: use `self::m` to refer to this macro unambiguously\n \n error: aborting due to 2 previous errors\n "}, {"sha": "b53b7e2700db8e8e32e02068a0c5778d1e1e620f", "filename": "src/test/ui/imports/shadow_builtin_macros.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fimports%2Fshadow_builtin_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fimports%2Fshadow_builtin_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fshadow_builtin_macros.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -11,7 +11,7 @@ note: `panic` could also refer to the macro imported here\n LL |     use foo::*;\n    |         ^^^^^^\n    = help: consider adding an explicit import of `panic` to disambiguate\n-   = help: or use `self::panic` to refer to the macro unambiguously\n+   = help: or use `self::panic` to refer to this macro unambiguously\n \n error[E0659]: `panic` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n   --> $DIR/shadow_builtin_macros.rs:30:14\n@@ -25,7 +25,7 @@ note: `panic` could also refer to the macro imported here\n    |\n LL |     ::two_macros::m!(use foo::panic;);\n    |                          ^^^^^^^^^^\n-   = help: use `self::panic` to refer to the macro unambiguously\n+   = help: use `self::panic` to refer to this macro unambiguously\n \n error[E0659]: `panic` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n   --> $DIR/shadow_builtin_macros.rs:43:5\n@@ -55,7 +55,7 @@ note: `n` could refer to the macro imported here\n LL |     use bar::*;\n    |         ^^^^^^\n    = help: consider adding an explicit import of `n` to disambiguate\n-   = help: or use `self::n` to refer to the macro unambiguously\n+   = help: or use `self::n` to refer to this macro unambiguously\n note: `n` could also refer to the macro imported here\n   --> $DIR/shadow_builtin_macros.rs:46:13\n    |"}, {"sha": "284ed03552639a2e8ff049d562d947cc704c60a4", "filename": "src/test/ui/issues/issue-16149.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fissues%2Fissue-16149.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fissues%2Fissue-16149.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16149.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -2,7 +2,7 @@ error[E0530]: match bindings cannot shadow statics\n   --> $DIR/issue-16149.rs:17:9\n    |\n LL |     static externalValue: isize;\n-   |     ---------------------------- a static `externalValue` is defined here\n+   |     ---------------------------- the static `externalValue` is defined here\n ...\n LL |         externalValue => true,\n    |         ^^^^^^^^^^^^^ cannot be named the same as a static"}, {"sha": "c49613eb33c51bf3afcc828e4343a630f2d466f2", "filename": "src/test/ui/issues/issue-17718-patterns.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fissues%2Fissue-17718-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fissues%2Fissue-17718-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17718-patterns.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -2,7 +2,7 @@ error[E0530]: match bindings cannot shadow statics\n   --> $DIR/issue-17718-patterns.rs:17:9\n    |\n LL | static A1: usize = 1;\n-   | --------------------- a static `A1` is defined here\n+   | --------------------- the static `A1` is defined here\n ...\n LL |         A1 => {} //~ ERROR: match bindings cannot shadow statics\n    |         ^^ cannot be named the same as a static\n@@ -11,7 +11,7 @@ error[E0530]: match bindings cannot shadow statics\n   --> $DIR/issue-17718-patterns.rs:18:9\n    |\n LL | static mut A2: usize = 1;\n-   | ------------------------- a static `A2` is defined here\n+   | ------------------------- the static `A2` is defined here\n ...\n LL |         A2 => {} //~ ERROR: match bindings cannot shadow statics\n    |         ^^ cannot be named the same as a static"}, {"sha": "c175f197034b436bc99fddfd05fc19177db750d9", "filename": "src/test/ui/issues/issue-23716.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fissues%2Fissue-23716.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fissues%2Fissue-23716.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23716.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -2,7 +2,7 @@ error[E0530]: function parameters cannot shadow statics\n   --> $DIR/issue-23716.rs:13:8\n    |\n LL | static foo: i32 = 0;\n-   | -------------------- a static `foo` is defined here\n+   | -------------------- the static `foo` is defined here\n LL | \n LL | fn bar(foo: i32) {}\n    |        ^^^ cannot be named the same as a static\n@@ -11,7 +11,7 @@ error[E0530]: function parameters cannot shadow statics\n   --> $DIR/issue-23716.rs:23:13\n    |\n LL | use self::submod::answer;\n-   |     -------------------- a static `answer` is imported here\n+   |     -------------------- the static `answer` is imported here\n LL | \n LL | fn question(answer: i32) {}\n    |             ^^^^^^ cannot be named the same as a static"}, {"sha": "dfd635d36e8c64304d04d17dcdf97e2e0ad06c49", "filename": "src/test/ui/issues/issue-27033.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fissues%2Fissue-27033.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fissues%2Fissue-27033.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27033.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -8,7 +8,7 @@ error[E0530]: match bindings cannot shadow constants\n   --> $DIR/issue-27033.rs:17:9\n    |\n LL |     const C: u8 = 1;\n-   |     ---------------- a constant `C` is defined here\n+   |     ---------------- the constant `C` is defined here\n LL |     match 1 {\n LL |         C @ 2 => { //~ ERROR match bindings cannot shadow constant\n    |         ^ cannot be named the same as a constant"}, {"sha": "10e4e9c1c1223e483bb85d72b06535d33ddc6f91", "filename": "src/test/ui/issues/issue-34047.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fissues%2Fissue-34047.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fissues%2Fissue-34047.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-34047.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -2,7 +2,7 @@ error[E0530]: match bindings cannot shadow constants\n   --> $DIR/issue-34047.rs:15:13\n    |\n LL | const C: u8 = 0;\n-   | ---------------- a constant `C` is defined here\n+   | ---------------- the constant `C` is defined here\n ...\n LL |         mut C => {} //~ ERROR match bindings cannot shadow constants\n    |             ^ cannot be named the same as a constant"}, {"sha": "904eed9f2499f51ebb79271a28849e955ee2dbc4", "filename": "src/test/ui/macros/macro-path-prelude-shadowing.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-shadowing.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -11,7 +11,7 @@ note: `std` could also refer to the module imported here\n LL |     use m2::*; // glob-import user-defined `std`\n    |         ^^^^^\n    = help: consider adding an explicit import of `std` to disambiguate\n-   = help: or use `self::std` to refer to the module unambiguously\n+   = help: or use `self::std` to refer to this module unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "994c78d575e27787a2f59e2e9413f5829c6d1dfd", "filename": "src/test/ui/pattern/pat-shadow-in-nested-binding.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fpattern%2Fpat-shadow-in-nested-binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fpattern%2Fpat-shadow-in-nested-binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-shadow-in-nested-binding.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -2,7 +2,7 @@ error[E0530]: let bindings cannot shadow tuple structs\n   --> $DIR/pat-shadow-in-nested-binding.rs:14:10\n    |\n LL | struct foo(usize);\n-   | ------------------ a tuple struct `foo` is defined here\n+   | ------------------ the tuple struct `foo` is defined here\n ...\n LL |     let (foo, _) = (2, 3); //~ ERROR let bindings cannot shadow tuple structs\n    |          ^^^ cannot be named the same as a tuple struct"}, {"sha": "5d14610b8a1ab3d79d4801dc5de87b2a826cf265", "filename": "src/test/ui/pattern/pattern-binding-disambiguation.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fpattern%2Fpattern-binding-disambiguation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fpattern%2Fpattern-binding-disambiguation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpattern-binding-disambiguation.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -2,7 +2,7 @@ error[E0530]: match bindings cannot shadow tuple structs\n   --> $DIR/pattern-binding-disambiguation.rs:34:9\n    |\n LL | struct TupleStruct();\n-   | --------------------- a tuple struct `TupleStruct` is defined here\n+   | --------------------- the tuple struct `TupleStruct` is defined here\n ...\n LL |         TupleStruct => {} //~ ERROR match bindings cannot shadow tuple structs\n    |         ^^^^^^^^^^^ cannot be named the same as a tuple struct\n@@ -11,7 +11,7 @@ error[E0530]: match bindings cannot shadow tuple variants\n   --> $DIR/pattern-binding-disambiguation.rs:43:9\n    |\n LL | use E::*;\n-   |     ---- a tuple variant `TupleVariant` is imported here\n+   |     ---- the tuple variant `TupleVariant` is imported here\n ...\n LL |         TupleVariant => {} //~ ERROR match bindings cannot shadow tuple variants\n    |         ^^^^^^^^^^^^ cannot be named the same as a tuple variant\n@@ -20,7 +20,7 @@ error[E0530]: match bindings cannot shadow struct variants\n   --> $DIR/pattern-binding-disambiguation.rs:46:9\n    |\n LL | use E::*;\n-   |     ---- a struct variant `BracedVariant` is imported here\n+   |     ---- the struct variant `BracedVariant` is imported here\n ...\n LL |         BracedVariant => {} //~ ERROR match bindings cannot shadow struct variants\n    |         ^^^^^^^^^^^^^ cannot be named the same as a struct variant\n@@ -29,7 +29,7 @@ error[E0530]: match bindings cannot shadow statics\n   --> $DIR/pattern-binding-disambiguation.rs:52:9\n    |\n LL | static STATIC: () = ();\n-   | ----------------------- a static `STATIC` is defined here\n+   | ----------------------- the static `STATIC` is defined here\n ...\n LL |         STATIC => {} //~ ERROR match bindings cannot shadow statics\n    |         ^^^^^^ cannot be named the same as a static\n@@ -38,7 +38,7 @@ error[E0530]: let bindings cannot shadow tuple structs\n   --> $DIR/pattern-binding-disambiguation.rs:59:9\n    |\n LL | struct TupleStruct();\n-   | --------------------- a tuple struct `TupleStruct` is defined here\n+   | --------------------- the tuple struct `TupleStruct` is defined here\n ...\n LL |     let TupleStruct = doesnt_matter; //~ ERROR let bindings cannot shadow tuple structs\n    |         ^^^^^^^^^^^ cannot be named the same as a tuple struct\n@@ -47,7 +47,7 @@ error[E0530]: let bindings cannot shadow tuple variants\n   --> $DIR/pattern-binding-disambiguation.rs:62:9\n    |\n LL | use E::*;\n-   |     ---- a tuple variant `TupleVariant` is imported here\n+   |     ---- the tuple variant `TupleVariant` is imported here\n ...\n LL |     let TupleVariant = doesnt_matter; //~ ERROR let bindings cannot shadow tuple variants\n    |         ^^^^^^^^^^^^ cannot be named the same as a tuple variant\n@@ -56,7 +56,7 @@ error[E0530]: let bindings cannot shadow struct variants\n   --> $DIR/pattern-binding-disambiguation.rs:63:9\n    |\n LL | use E::*;\n-   |     ---- a struct variant `BracedVariant` is imported here\n+   |     ---- the struct variant `BracedVariant` is imported here\n ...\n LL |     let BracedVariant = doesnt_matter; //~ ERROR let bindings cannot shadow struct variants\n    |         ^^^^^^^^^^^^^ cannot be named the same as a struct variant\n@@ -65,7 +65,7 @@ error[E0530]: let bindings cannot shadow statics\n   --> $DIR/pattern-binding-disambiguation.rs:65:9\n    |\n LL | static STATIC: () = ();\n-   | ----------------------- a static `STATIC` is defined here\n+   | ----------------------- the static `STATIC` is defined here\n ...\n LL |     let STATIC = doesnt_matter; //~ ERROR let bindings cannot shadow statics\n    |         ^^^^^^ cannot be named the same as a static"}, {"sha": "204e0a7e1411ed4c8437a4c66917e0c6a6913b93", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/ambiguity-macros-nested.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros-nested.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -5,7 +5,7 @@ LL |     pub use std::io;\n    |             ^^^ ambiguous name\n    |\n    = note: `std` could refer to a built-in extern crate\n-   = help: use `::std` to refer to the extern crate unambiguously\n+   = help: use `::std` to refer to this extern crate unambiguously\n note: `std` could also refer to the module defined here\n   --> $DIR/ambiguity-macros-nested.rs:21:13\n    |\n@@ -16,7 +16,7 @@ LL | |             }\n ...\n LL |       m!();\n    |       ----- in this macro invocation\n-   = help: use `self::std` to refer to the module unambiguously\n+   = help: use `self::std` to refer to this module unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "ac8d3b9d0cbe4d0dc347f35a2c901d89e375f29b", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/ambiguity-macros.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -5,7 +5,7 @@ LL | use std::io;\n    |     ^^^ ambiguous name\n    |\n    = note: `std` could refer to a built-in extern crate\n-   = help: use `::std` to refer to the extern crate unambiguously\n+   = help: use `::std` to refer to this extern crate unambiguously\n note: `std` could also refer to the module defined here\n   --> $DIR/ambiguity-macros.rs:20:9\n    |\n@@ -16,7 +16,7 @@ LL | |         }\n ...\n LL |   m!();\n    |   ----- in this macro invocation\n-   = help: use `self::std` to refer to the module unambiguously\n+   = help: use `self::std` to refer to this module unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "7bcfc563d39fc288da54189a482753efc48e984f", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/ambiguity-nested.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-nested.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -5,15 +5,15 @@ LL |     pub use std::io;\n    |             ^^^ ambiguous name\n    |\n    = note: `std` could refer to a built-in extern crate\n-   = help: use `::std` to refer to the extern crate unambiguously\n+   = help: use `::std` to refer to this extern crate unambiguously\n note: `std` could also refer to the module defined here\n   --> $DIR/ambiguity-nested.rs:19:5\n    |\n LL | /     mod std {\n LL | |         pub struct io;\n LL | |     }\n    | |_____^\n-   = help: use `self::std` to refer to the module unambiguously\n+   = help: use `self::std` to refer to this module unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "beeb74654e5b5bc7194dc9c2fba8a68703f7834c", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/ambiguity.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -5,15 +5,15 @@ LL | use std::io;\n    |     ^^^ ambiguous name\n    |\n    = note: `std` could refer to a built-in extern crate\n-   = help: use `::std` to refer to the extern crate unambiguously\n+   = help: use `::std` to refer to this extern crate unambiguously\n note: `std` could also refer to the module defined here\n   --> $DIR/ambiguity.rs:16:1\n    |\n LL | / mod std {\n LL | |     pub struct io;\n LL | | }\n    | |_^\n-   = help: use `self::std` to refer to the module unambiguously\n+   = help: use `self::std` to refer to this module unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "5d539e2d59f1549ca3ba2498cba8236c33662059", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/block-scoped-shadow.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fblock-scoped-shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fblock-scoped-shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fblock-scoped-shadow.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -14,7 +14,7 @@ note: `std` could also refer to the struct defined here\n    |\n LL | struct std;\n    | ^^^^^^^^^^^\n-   = help: use `self::std` to refer to the struct unambiguously\n+   = help: use `self::std` to refer to this struct unambiguously\n \n error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n   --> $DIR/block-scoped-shadow.rs:18:9\n@@ -32,7 +32,7 @@ note: `std` could also refer to the unit struct defined here\n    |\n LL | struct std;\n    | ^^^^^^^^^^^\n-   = help: use `self::std` to refer to the unit struct unambiguously\n+   = help: use `self::std` to refer to this unit struct unambiguously\n \n error: aborting due to 2 previous errors\n "}, {"sha": "8b893cf26fbf16e1288353153d4b7ce5b9bb9b4b", "filename": "src/test/ui/rust-2018/uniform-paths/ambiguity-macros-nested.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros-nested.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -5,7 +5,7 @@ LL |     pub use std::io;\n    |             ^^^ ambiguous name\n    |\n    = note: `std` could refer to a built-in extern crate\n-   = help: use `::std` to refer to the extern crate unambiguously\n+   = help: use `::std` to refer to this extern crate unambiguously\n note: `std` could also refer to the module defined here\n   --> $DIR/ambiguity-macros-nested.rs:23:13\n    |\n@@ -16,7 +16,7 @@ LL | |             }\n ...\n LL |       m!();\n    |       ----- in this macro invocation\n-   = help: use `self::std` to refer to the module unambiguously\n+   = help: use `self::std` to refer to this module unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "4b81a9860dbdd2a94bc9210ef470aaa7a3ed5dd9", "filename": "src/test/ui/rust-2018/uniform-paths/ambiguity-macros.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -5,7 +5,7 @@ LL | use std::io;\n    |     ^^^ ambiguous name\n    |\n    = note: `std` could refer to a built-in extern crate\n-   = help: use `::std` to refer to the extern crate unambiguously\n+   = help: use `::std` to refer to this extern crate unambiguously\n note: `std` could also refer to the module defined here\n   --> $DIR/ambiguity-macros.rs:22:9\n    |\n@@ -16,7 +16,7 @@ LL | |         }\n ...\n LL |   m!();\n    |   ----- in this macro invocation\n-   = help: use `self::std` to refer to the module unambiguously\n+   = help: use `self::std` to refer to this module unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "6415f46b38a3cf157215d2a9eab9034a75305ade", "filename": "src/test/ui/rust-2018/uniform-paths/ambiguity-nested.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-nested.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -5,15 +5,15 @@ LL |     pub use std::io;\n    |             ^^^ ambiguous name\n    |\n    = note: `std` could refer to a built-in extern crate\n-   = help: use `::std` to refer to the extern crate unambiguously\n+   = help: use `::std` to refer to this extern crate unambiguously\n note: `std` could also refer to the module defined here\n   --> $DIR/ambiguity-nested.rs:21:5\n    |\n LL | /     mod std {\n LL | |         pub struct io;\n LL | |     }\n    | |_____^\n-   = help: use `self::std` to refer to the module unambiguously\n+   = help: use `self::std` to refer to this module unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "93044ff2222c9eb3261567d03819b6d6078e1c13", "filename": "src/test/ui/rust-2018/uniform-paths/ambiguity.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -5,15 +5,15 @@ LL | use std::io;\n    |     ^^^ ambiguous name\n    |\n    = note: `std` could refer to a built-in extern crate\n-   = help: use `::std` to refer to the extern crate unambiguously\n+   = help: use `::std` to refer to this extern crate unambiguously\n note: `std` could also refer to the module defined here\n   --> $DIR/ambiguity.rs:18:1\n    |\n LL | / mod std {\n LL | |     pub struct io;\n LL | | }\n    | |_^\n-   = help: use `self::std` to refer to the module unambiguously\n+   = help: use `self::std` to refer to this module unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "e0064fe8fe22454f1f57f7a13bb48d170fcdbb6e", "filename": "src/test/ui/rust-2018/uniform-paths/block-scoped-shadow-nested.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow-nested.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -16,7 +16,7 @@ LL | / mod sub {\n LL | |     pub fn bar() {}\n LL | | }\n    | |_^\n-   = help: use `self::sub` to refer to the module unambiguously\n+   = help: use `self::sub` to refer to this module unambiguously\n \n error: aborting due to previous error\n "}, {"sha": "3b40c3d36fa6a7c489d35a23b0481b5bac69483d", "filename": "src/test/ui/rust-2018/uniform-paths/block-scoped-shadow.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -14,7 +14,7 @@ note: `Foo` could also refer to the enum defined here\n    |\n LL | enum Foo {}\n    | ^^^^^^^^^^^\n-   = help: use `self::Foo` to refer to the enum unambiguously\n+   = help: use `self::Foo` to refer to this enum unambiguously\n \n error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n   --> $DIR/block-scoped-shadow.rs:28:9\n@@ -32,7 +32,7 @@ note: `std` could also refer to the struct defined here\n    |\n LL | struct std;\n    | ^^^^^^^^^^^\n-   = help: use `self::std` to refer to the struct unambiguously\n+   = help: use `self::std` to refer to this struct unambiguously\n \n error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n   --> $DIR/block-scoped-shadow.rs:28:9\n@@ -50,7 +50,7 @@ note: `std` could also refer to the unit struct defined here\n    |\n LL | struct std;\n    | ^^^^^^^^^^^\n-   = help: use `self::std` to refer to the unit struct unambiguously\n+   = help: use `self::std` to refer to this unit struct unambiguously\n \n error: aborting due to 3 previous errors\n "}, {"sha": "96dc06ee5241abf81c6696185fd7b868c09519ce", "filename": "src/test/ui/static/static-mut-not-pat.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-not-pat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd762954bd2410d57950045bf5009769ac4947f/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-not-pat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-not-pat.stderr?ref=cfd762954bd2410d57950045bf5009769ac4947f", "patch": "@@ -2,7 +2,7 @@ error[E0530]: match bindings cannot shadow statics\n   --> $DIR/static-mut-not-pat.rs:23:9\n    |\n LL | static mut a: isize = 3;\n-   | ------------------------ a static `a` is defined here\n+   | ------------------------ the static `a` is defined here\n ...\n LL |         a => {} //~ ERROR match bindings cannot shadow statics\n    |         ^ cannot be named the same as a static\n@@ -11,7 +11,7 @@ error[E0530]: match bindings cannot shadow statics\n   --> $DIR/static-mut-not-pat.rs:46:9\n    |\n LL | static mut STATIC_MUT_FOO: Foo = Foo { bar: Some(Direction::West), baz: NEW_FALSE };\n-   | ------------------------------------------------------------------------------------ a static `STATIC_MUT_FOO` is defined here\n+   | ------------------------------------------------------------------------------------ the static `STATIC_MUT_FOO` is defined here\n ...\n LL |         STATIC_MUT_FOO => (),\n    |         ^^^^^^^^^^^^^^ cannot be named the same as a static"}]}