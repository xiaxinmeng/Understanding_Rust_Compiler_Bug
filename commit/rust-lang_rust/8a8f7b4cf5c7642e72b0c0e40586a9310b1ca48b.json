{"sha": "8a8f7b4cf5c7642e72b0c0e40586a9310b1ca48b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhOGY3YjRjZjVjNzY0MmU3MmIwYzBlNDA1ODZhOTMxMGIxY2E0OGI=", "commit": {"author": {"name": "Yusuke Tanaka", "email": "yusuktan@maguro.dev", "date": "2021-02-10T16:41:52Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-03-02T09:40:25Z"}, "message": "Refactor calls to lint check functions", "tree": {"sha": "4a20c78a64627328642ff7fe9121d4bf1ff0fe5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a20c78a64627328642ff7fe9121d4bf1ff0fe5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a8f7b4cf5c7642e72b0c0e40586a9310b1ca48b", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmA+CAkACgkQHKDfKvWd\naKVb9g/+JqRInZKf+jALNmrgY3Od+xGpEuYFjgtGdbEFeA51FhTVM9uLIu/HroUA\nvrmXiWg4GGwJ0sfeMQ5SJs/7Xe09Xz/1O58gXu7PeUlUbt1XN3JMxuMXyE+55lOJ\nuixGbUaXsOcYg8ChRSYujMiuQ2is5buDbzjPvH9PDZH4JRDQLpXN/590QWWq4jm8\nifuUF/Gbhf8RKWjOmOKG3P1eMbXOb1UElzO1yhOW6RK6TSLW4bIZdGGa+0VA0xDU\n+5dmFHMYNBaRkI7iZwzvmkK/HQ5vQgsk9Le83pIPFuhyWvdVVJIGyCow3+fEqQjT\ngf4lWvnyBxsyZ3qHQcrKNVU/r08Rbi1M8kLiH827KcWiyfq+z5BDcGBwK9sK3M44\nBcLuFsP9aLry3Q0FQ2EFVpp1Ihw7AJTskQQ0WisI7xNacOXQ2W5Tq43hjYohu+ip\nG8nK26f4h1lztukZsOthz2DG8uZpsazq18MYXnK9J2UX52IKeXuH1KscNdmZ+ZAb\n+DNUMFDsDtXxiz5GvQWZTxqKLNhbnRRdjvNHhLw3xhd40AnZz2RzB+VK26C996/s\ns1siK9ziaJ/5CThCdVPpUtgSCAV0DlvdPEfg+jO6jtdCf2CcZ+54nDukPAXta4kK\n1X1EBJB9wstnnSX05RRd5guDmuF1ZixwTzdZdDQo5Fc+iZDqxDU=\n=3FxJ\n-----END PGP SIGNATURE-----", "payload": "tree 4a20c78a64627328642ff7fe9121d4bf1ff0fe5b\nparent 89ef26a68131d846b07e339e277232ff8737be3e\nauthor Yusuke Tanaka <yusuktan@maguro.dev> 1612975312 +0900\ncommitter flip1995 <philipp.krones@embecosm.com> 1614678025 +0100\n\nRefactor calls to lint check functions\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a8f7b4cf5c7642e72b0c0e40586a9310b1ca48b", "html_url": "https://github.com/rust-lang/rust/commit/8a8f7b4cf5c7642e72b0c0e40586a9310b1ca48b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a8f7b4cf5c7642e72b0c0e40586a9310b1ca48b/comments", "author": {"login": "magurotuna", "id": 23649474, "node_id": "MDQ6VXNlcjIzNjQ5NDc0", "avatar_url": "https://avatars.githubusercontent.com/u/23649474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magurotuna", "html_url": "https://github.com/magurotuna", "followers_url": "https://api.github.com/users/magurotuna/followers", "following_url": "https://api.github.com/users/magurotuna/following{/other_user}", "gists_url": "https://api.github.com/users/magurotuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/magurotuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magurotuna/subscriptions", "organizations_url": "https://api.github.com/users/magurotuna/orgs", "repos_url": "https://api.github.com/users/magurotuna/repos", "events_url": "https://api.github.com/users/magurotuna/events{/privacy}", "received_events_url": "https://api.github.com/users/magurotuna/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89ef26a68131d846b07e339e277232ff8737be3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/89ef26a68131d846b07e339e277232ff8737be3e", "html_url": "https://github.com/rust-lang/rust/commit/89ef26a68131d846b07e339e277232ff8737be3e"}], "stats": {"total": 61, "additions": 16, "deletions": 45}, "files": [{"sha": "c1870f5208b4502071501f30f50d604c0bf46b92", "filename": "clippy_lints/src/transmute/mod.rs", "status": "modified", "additions": 16, "deletions": 45, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/8a8f7b4cf5c7642e72b0c0e40586a9310b1ca48b/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a8f7b4cf5c7642e72b0c0e40586a9310b1ca48b/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs?ref=8a8f7b4cf5c7642e72b0c0e40586a9310b1ca48b", "patch": "@@ -338,53 +338,24 @@ impl<'tcx> LateLintPass<'tcx> for Transmute {\n                 let from_ty = cx.typeck_results().expr_ty(&args[0]);\n                 let to_ty = cx.typeck_results().expr_ty(e);\n \n-                let triggered = useless_transmute::check(cx, e, from_ty, to_ty, args);\n-                if triggered {\n+                // If useless_transmute is triggered, the other lints can be skipped.\n+                if useless_transmute::check(cx, e, from_ty, to_ty, args) {\n                     return;\n                 }\n-                let triggered = wrong_transmute::check(cx, e, from_ty, to_ty);\n-                if triggered {\n-                    return;\n-                }\n-                let triggered = crosspointer_transmute::check(cx, e, from_ty, to_ty);\n-                if triggered {\n-                    return;\n-                }\n-                let triggered = transmute_ptr_to_ref::check(cx, e, from_ty, to_ty, args, qpath);\n-                if triggered {\n-                    return;\n-                }\n-                let triggered = transmute_int_to_char::check(cx, e, from_ty, to_ty, args);\n-                if triggered {\n-                    return;\n-                }\n-                let triggered = transmute_ref_to_ref::check(cx, e, from_ty, to_ty, args, const_context);\n-                if triggered {\n-                    return;\n-                }\n-                let triggered = transmute_ptr_to_ptr::check(cx, e, from_ty, to_ty, args);\n-                if triggered {\n-                    return;\n-                }\n-                let triggered = transmute_int_to_bool::check(cx, e, from_ty, to_ty, args);\n-                if triggered {\n-                    return;\n-                }\n-                let triggered = transmute_int_to_float::check(cx, e, from_ty, to_ty, args, const_context);\n-                if triggered {\n-                    return;\n-                }\n-                let triggered = transmute_float_to_int::check(cx, e, from_ty, to_ty, args, const_context);\n-                if triggered {\n-                    return;\n-                }\n-                let triggered = unsound_collection_transmute::check(cx, e, from_ty, to_ty);\n-                if triggered {\n-                    return;\n-                }\n-                let triggered = transmutes_expressible_as_ptr_casts::check(cx, e, from_ty, to_ty, args);\n-                if triggered {\n-                    return;\n+\n+                let mut linted = wrong_transmute::check(cx, e, from_ty, to_ty);\n+                linted |= crosspointer_transmute::check(cx, e, from_ty, to_ty);\n+                linted |= transmute_ptr_to_ref::check(cx, e, from_ty, to_ty, args, qpath);\n+                linted |= transmute_int_to_char::check(cx, e, from_ty, to_ty, args);\n+                linted |= transmute_ref_to_ref::check(cx, e, from_ty, to_ty, args, const_context);\n+                linted |= transmute_ptr_to_ptr::check(cx, e, from_ty, to_ty, args);\n+                linted |= transmute_int_to_bool::check(cx, e, from_ty, to_ty, args);\n+                linted |= transmute_int_to_float::check(cx, e, from_ty, to_ty, args, const_context);\n+                linted |= transmute_float_to_int::check(cx, e, from_ty, to_ty, args, const_context);\n+                linted |= unsound_collection_transmute::check(cx, e, from_ty, to_ty);\n+\n+                if !linted {\n+                    transmutes_expressible_as_ptr_casts::check(cx, e, from_ty, to_ty, args);\n                 }\n             }\n         }"}]}