{"sha": "b647583c2df155f4741fa2b3e1fa6e4fb1f5868f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2NDc1ODNjMmRmMTU1ZjQ3NDFmYTJiM2UxZmE2ZTRmYjFmNTg2OGY=", "commit": {"author": {"name": "Mike Hommey", "email": "mh@glandium.org", "date": "2018-04-02T07:05:30Z"}, "committer": {"name": "Mike Hommey", "email": "mh@glandium.org", "date": "2018-04-02T07:06:19Z"}, "message": "Use Alloc and Layout from core::heap.\n\n94d1970bba87f2d2893f6e934e4c3f02ed50604d moved the alloc::allocator\nmodule to core::heap, moving e.g. Alloc and Layout out of the alloc\ncrate. While alloc::heap reexports them, it's better to use them from\nwhere they really come from.", "tree": {"sha": "327ff3a0824d5089fcf941a635e475b358958b65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/327ff3a0824d5089fcf941a635e475b358958b65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f", "html_url": "https://github.com/rust-lang/rust/commit/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/comments", "author": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06fa27d7c84a21af8449e06f3c50b243c4d5a7ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/06fa27d7c84a21af8449e06f3c50b243c4d5a7ad", "html_url": "https://github.com/rust-lang/rust/commit/06fa27d7c84a21af8449e06f3c50b243c4d5a7ad"}], "stats": {"total": 36, "additions": 19, "deletions": 17}, "files": [{"sha": "ccf2e2768d1a971d5362e49cd08aa4e67e1e2164", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=b647583c2df155f4741fa2b3e1fa6e4fb1f5868f", "patch": "@@ -21,6 +21,7 @@ use core::sync::atomic::Ordering::{Acquire, Relaxed, Release, SeqCst};\n use core::borrow;\n use core::fmt;\n use core::cmp::Ordering;\n+use core::heap::{Alloc, Layout};\n use core::intrinsics::abort;\n use core::mem::{self, align_of_val, size_of_val, uninitialized};\n use core::ops::Deref;\n@@ -31,7 +32,7 @@ use core::hash::{Hash, Hasher};\n use core::{isize, usize};\n use core::convert::From;\n \n-use heap::{Heap, Alloc, Layout, box_free};\n+use heap::{Heap, box_free};\n use boxed::Box;\n use string::String;\n use vec::Vec;"}, {"sha": "e59a6e9fdea60d86295efe5735ad35cf2bf70982", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=b647583c2df155f4741fa2b3e1fa6e4fb1f5868f", "patch": "@@ -55,14 +55,15 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n-use heap::{Heap, Layout, Alloc};\n+use heap::Heap;\n use raw_vec::RawVec;\n \n use core::any::Any;\n use core::borrow;\n use core::cmp::Ordering;\n use core::fmt;\n use core::hash::{Hash, Hasher};\n+use core::heap::{Alloc, Layout};\n use core::iter::FusedIterator;\n use core::marker::{self, Unpin, Unsize};\n use core::mem::{self, Pin};"}, {"sha": "49109d522e9651bb8e47ee2ff546b7ee9af28479", "filename": "src/liballoc/btree/node.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Fliballoc%2Fbtree%2Fnode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Fliballoc%2Fbtree%2Fnode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbtree%2Fnode.rs?ref=b647583c2df155f4741fa2b3e1fa6e4fb1f5868f", "patch": "@@ -41,13 +41,14 @@\n // - A node of length `n` has `n` keys, `n` values, and (in an internal node) `n + 1` edges.\n //   This implies that even an empty internal node has at least one edge.\n \n+use core::heap::{Alloc, Layout};\n use core::marker::PhantomData;\n use core::mem;\n use core::ptr::{self, Unique, NonNull};\n use core::slice;\n \n use boxed::Box;\n-use heap::{Heap, Alloc, Layout};\n+use heap::Heap;\n \n const B: usize = 6;\n pub const MIN_LEN: usize = B - 1;"}, {"sha": "3edce8aebdf39fe5f1da4dc334cc029dd0ac5327", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=b647583c2df155f4741fa2b3e1fa6e4fb1f5868f", "patch": "@@ -9,11 +9,12 @@\n // except according to those terms.\n \n use core::cmp;\n+use core::heap::{Alloc, Layout};\n use core::mem;\n use core::ops::Drop;\n use core::ptr::{self, Unique};\n use core::slice;\n-use heap::{Alloc, Layout, Heap};\n+use heap::Heap;\n use super::boxed::Box;\n use super::allocator::CollectionAllocErr;\n use super::allocator::CollectionAllocErr::*;"}, {"sha": "8bdc57f96a6d5c7dda2f334ebe75987f74ec7771", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=b647583c2df155f4741fa2b3e1fa6e4fb1f5868f", "patch": "@@ -250,6 +250,7 @@ use core::cell::Cell;\n use core::cmp::Ordering;\n use core::fmt;\n use core::hash::{Hash, Hasher};\n+use core::heap::{Alloc, Layout};\n use core::intrinsics::abort;\n use core::marker;\n use core::marker::{Unsize, PhantomData};\n@@ -259,7 +260,7 @@ use core::ops::CoerceUnsized;\n use core::ptr::{self, NonNull};\n use core::convert::From;\n \n-use heap::{Heap, Alloc, Layout, box_free};\n+use heap::{Heap, box_free};\n use string::String;\n use vec::Vec;\n "}, {"sha": "7a8d01e4ef8b88f7dddea1adc63f0e1b852baa73", "filename": "src/liballoc_jemalloc/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Fliballoc_jemalloc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Fliballoc_jemalloc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_jemalloc%2Flib.rs?ref=b647583c2df155f4741fa2b3e1fa6e4fb1f5868f", "patch": "@@ -15,7 +15,6 @@\n                       form or name\",\n             issue = \"27783\")]\n #![deny(warnings)]\n-#![feature(alloc)]\n #![feature(alloc_system)]\n #![feature(libc)]\n #![feature(linkage)]\n@@ -25,7 +24,6 @@\n #![cfg_attr(not(dummy_jemalloc), feature(allocator_api))]\n #![rustc_alloc_kind = \"exe\"]\n \n-extern crate alloc;\n extern crate alloc_system;\n extern crate libc;\n \n@@ -35,7 +33,7 @@ pub use contents::*;\n mod contents {\n     use core::ptr;\n \n-    use alloc::heap::{Alloc, AllocErr, Layout};\n+    use core::heap::{Alloc, AllocErr, Layout};\n     use alloc_system::System;\n     use libc::{c_int, c_void, size_t};\n "}, {"sha": "6c1e9cb0b9cfdae3930e31ccc79a78305542fdd6", "filename": "src/liballoc_system/lib.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Fliballoc_system%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Fliballoc_system%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_system%2Flib.rs?ref=b647583c2df155f4741fa2b3e1fa6e4fb1f5868f", "patch": "@@ -17,7 +17,6 @@\n             issue = \"32838\")]\n #![feature(global_allocator)]\n #![feature(allocator_api)]\n-#![feature(alloc)]\n #![feature(core_intrinsics)]\n #![feature(staged_api)]\n #![feature(rustc_attrs)]\n@@ -43,9 +42,7 @@ const MIN_ALIGN: usize = 8;\n #[allow(dead_code)]\n const MIN_ALIGN: usize = 16;\n \n-extern crate alloc;\n-\n-use self::alloc::heap::{Alloc, AllocErr, Layout, Excess, CannotReallocInPlace};\n+use core::heap::{Alloc, AllocErr, Layout, Excess, CannotReallocInPlace};\n \n #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n pub struct System;\n@@ -125,7 +122,7 @@ mod platform {\n \n     use MIN_ALIGN;\n     use System;\n-    use alloc::heap::{Alloc, AllocErr, Layout};\n+    use core::heap::{Alloc, AllocErr, Layout};\n \n     #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n     unsafe impl<'a> Alloc for &'a System {\n@@ -279,7 +276,7 @@ mod platform {\n \n     use MIN_ALIGN;\n     use System;\n-    use alloc::heap::{Alloc, AllocErr, Layout, CannotReallocInPlace};\n+    use core::heap::{Alloc, AllocErr, Layout, CannotReallocInPlace};\n \n     type LPVOID = *mut u8;\n     type HANDLE = LPVOID;\n@@ -491,7 +488,7 @@ mod platform {\n mod platform {\n     extern crate dlmalloc;\n \n-    use alloc::heap::{Alloc, AllocErr, Layout, Excess, CannotReallocInPlace};\n+    use core::heap::{Alloc, AllocErr, Layout, Excess, CannotReallocInPlace};\n     use System;\n     use self::dlmalloc::GlobalDlmalloc;\n "}, {"sha": "452fa4e471c693511efb8beefe092a3041791529", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=b647583c2df155f4741fa2b3e1fa6e4fb1f5868f", "patch": "@@ -11,9 +11,10 @@\n use self::Entry::*;\n use self::VacantEntryState::*;\n \n-use alloc::heap::{Heap, Alloc};\n+use alloc::heap::Heap;\n use alloc::allocator::CollectionAllocErr;\n use cell::Cell;\n+use core::heap::Alloc;\n use borrow::Borrow;\n use cmp::max;\n use fmt::{self, Debug};"}, {"sha": "c6861c82a23aa0419bf692b35a8e4af7a36695fd", "filename": "src/libstd/collections/hash/table.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b647583c2df155f4741fa2b3e1fa6e4fb1f5868f/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs?ref=b647583c2df155f4741fa2b3e1fa6e4fb1f5868f", "patch": "@@ -8,7 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use alloc::heap::{Heap, Alloc, Layout};\n+use alloc::heap::Heap;\n+use core::heap::{Alloc, Layout};\n \n use cmp;\n use hash::{BuildHasher, Hash, Hasher};"}]}