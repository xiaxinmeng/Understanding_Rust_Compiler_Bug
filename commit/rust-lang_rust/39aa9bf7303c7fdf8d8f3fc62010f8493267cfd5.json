{"sha": "39aa9bf7303c7fdf8d8f3fc62010f8493267cfd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5YWE5YmY3MzAzYzdmZGY4ZDhmM2ZjNjIwMTBmODQ5MzI2N2NmZDU=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-09T11:38:31Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-10T11:12:29Z"}, "message": "Remove needless indirection in bclose", "tree": {"sha": "d47cf09172a764c1ed127409a9c67e54422cc5f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d47cf09172a764c1ed127409a9c67e54422cc5f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39aa9bf7303c7fdf8d8f3fc62010f8493267cfd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39aa9bf7303c7fdf8d8f3fc62010f8493267cfd5", "html_url": "https://github.com/rust-lang/rust/commit/39aa9bf7303c7fdf8d8f3fc62010f8493267cfd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39aa9bf7303c7fdf8d8f3fc62010f8493267cfd5/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04b80a5f5d0ac06a49b7937362235f9a23513b0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/04b80a5f5d0ac06a49b7937362235f9a23513b0c", "html_url": "https://github.com/rust-lang/rust/commit/04b80a5f5d0ac06a49b7937362235f9a23513b0c"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "4b87503ff88c4552507e2c0f12d4b8c333fb06d9", "filename": "src/librustc/hir/print.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/39aa9bf7303c7fdf8d8f3fc62010f8493267cfd5/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39aa9bf7303c7fdf8d8f3fc62010f8493267cfd5/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=39aa9bf7303c7fdf8d8f3fc62010f8493267cfd5", "patch": "@@ -169,10 +169,6 @@ impl<'a> State<'a> {\n         self.end(); // close the head-box\n     }\n \n-    pub fn bclose_(&mut self, span: syntax_pos::Span, indented: usize) {\n-        self.bclose_maybe_open(span, indented, true)\n-    }\n-\n     pub fn bclose_maybe_open(&mut self,\n                              span: syntax_pos::Span,\n                              indented: usize,\n@@ -187,7 +183,7 @@ impl<'a> State<'a> {\n     }\n \n     pub fn bclose(&mut self, span: syntax_pos::Span) {\n-        self.bclose_(span, indent_unit)\n+        self.bclose_maybe_open(span, indent_unit, true)\n     }\n \n     pub fn space_if_not_bol(&mut self) {\n@@ -1276,7 +1272,7 @@ impl<'a> State<'a> {\n                 for arm in arms {\n                     self.print_arm(arm);\n                 }\n-                self.bclose_(expr.span, indent_unit);\n+                self.bclose(expr.span);\n             }\n             hir::ExprKind::Closure(capture_clause, ref decl, body, _fn_decl_span, _gen) => {\n                 self.print_capture_clause(capture_clause);"}, {"sha": "2e206811d7ca2626fcbbcbeb21b02012723bc298", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/39aa9bf7303c7fdf8d8f3fc62010f8493267cfd5/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39aa9bf7303c7fdf8d8f3fc62010f8493267cfd5/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=39aa9bf7303c7fdf8d8f3fc62010f8493267cfd5", "patch": "@@ -778,10 +778,6 @@ impl<'a> State<'a> {\n         self.end(); // close the head-box\n     }\n \n-    crate fn bclose_(&mut self, span: syntax_pos::Span,\n-                   indented: usize) {\n-        self.bclose_maybe_open(span, indented, true)\n-    }\n     crate fn bclose_maybe_open(&mut self, span: syntax_pos::Span,\n                              indented: usize, close_box: bool) {\n         self.maybe_print_comment(span.hi());\n@@ -792,7 +788,7 @@ impl<'a> State<'a> {\n         }\n     }\n     crate fn bclose(&mut self, span: syntax_pos::Span) {\n-        self.bclose_(span, INDENT_UNIT)\n+        self.bclose_maybe_open(span, INDENT_UNIT, true)\n     }\n \n     crate fn break_offset_if_not_bol(&mut self, n: usize,\n@@ -2027,7 +2023,7 @@ impl<'a> State<'a> {\n                 for arm in arms {\n                     self.print_arm(arm);\n                 }\n-                self.bclose_(expr.span, INDENT_UNIT);\n+                self.bclose(expr.span);\n             }\n             ast::ExprKind::Closure(\n                 capture_clause, asyncness, movability, ref decl, ref body, _) => {"}]}